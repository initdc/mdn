{"version":3,"sources":["../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","flaws/index.tsx","flaw-utils.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","defaultFilters","freeze","mdn_url","title","popularity","fixableFlaws","flaws","page","sort_by","sort_reverse","search_flaws","withoutDefaultFilters","filters","fromEntries","entries","filter","value","JSON","stringify","useFiltersURL","useSearchParams","searchParams","setSearchParams","useMemo","params","searchParamsObject","reduce","acc","tuple","val","hasOwnProperty","Array","isArray","parseInt","updateFiltersURL","useCallback","partialFilters","newSearchParams","AllFlaws","locale","useParams","useState","lastData","setLastData","useEffect","counts","found","toLocaleString","document","getAPIUrl","restFilters","createSearchParams","String","sort","reverse","toString","useSWR","url","a","fetch","response","ok","Error","status","headers","get","includes","json","data","error","isValidating","loading","pageCount","pages","className","ShowSearchError","FilterControls","flawLevels","DocumentsTable","documents","PageLink","number","disabled","AllFlawCounts","BuildTimes","times","ms","built","toFixed","Math","trunc","initialFilters","setFilters","list","rows","split","flaw","search","push","deserializeSearchFlaws","searchFlawsRows","setSearchFlawsRows","refreshFilters","searchInputs","querySelectorAll","input","focus","hasFilters","obj1","obj2","keys1","Set","keys2","size","has","every","value2","v","equalObjects","hasEmptySearchFlawsRow","some","row","trim","onSubmit","event","preventDefault","type","placeholder","onChange","onBlur","multiple","selectedOptions","map","opt","flawLevel","name","humanizeFlawName","ignored","clone","j","serialized","onClick","splice","getGetOrdinal","n","s","summarizeFlaws","totalCountFixable","countFixable","bits","join","TH","id","getHighlightedText","text","highlight","parts","RegExp","part","style","toLowerCase","fontWeight","showBriefURL","uri","left","right","WarnAboutNothingBuilt","doc","to","ranking","children","newFilters","typesSorted","b","macrosSorted","macros","total","fixable","bad_bcd_queries","bad_bcd_links","bad_pre_tags","unsafe_html","charAt","toUpperCase","slice","replace"],"mappings":"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","file":"static/js/14.7e6bf35e.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  createSearchParams,\n  Link,\n  useParams,\n  useSearchParams,\n} from \"react-router-dom\";\nimport useSWR from \"swr\";\n\nimport \"./index.scss\";\n\nimport { humanizeFlawName } from \"../flaw-utils\";\nimport { PageContentContainer } from \"../ui/atoms/page-content\";\n\ninterface DocumentPopularity {\n  value: number;\n  ranking: number;\n}\n\ninterface DocumentFlaws {\n  name: string;\n  value: number | string;\n  countFixable: number;\n}\ninterface Document {\n  mdn_url: string;\n  modified: string;\n  title: string;\n  popularity: DocumentPopularity;\n  flaws: DocumentFlaws[];\n}\n\ntype Count = { [key: string]: number };\n\ninterface FlawsCounts {\n  total: number;\n  fixable: number;\n  type: Count;\n  macros: Count;\n}\n\ninterface Counts {\n  found: number;\n  built: number;\n  pages: number;\n  flaws: FlawsCounts;\n}\n\ninterface Times {\n  built: number;\n}\n\ninterface FlawLevel {\n  name: string;\n  level: string;\n  ignored: boolean;\n}\n\ninterface Data {\n  counts: Counts;\n  documents: Document[];\n  times: Times;\n  flawLevels: FlawLevel[];\n}\n\ninterface Filters {\n  mdn_url: string;\n  title: string;\n  popularity: string;\n  fixableFlaws: string;\n  flaws: string[];\n  page: number;\n  sort_by: string;\n  sort_reverse: boolean;\n  search_flaws: string[];\n}\n\nconst defaultFilters: Filters = Object.freeze({\n  mdn_url: \"\",\n  title: \"\",\n  popularity: \"\",\n  fixableFlaws: \"\",\n  flaws: [],\n  page: 1,\n  sort_by: \"popularity\",\n  sort_reverse: false,\n  search_flaws: [],\n});\n\nfunction withoutDefaultFilters(filters: Filters): Partial<Filters> {\n  return Object.fromEntries(\n    Object.entries(filters).filter(\n      ([key, value]) =>\n        JSON.stringify(defaultFilters[key]) !== JSON.stringify(value)\n    )\n  );\n}\n\n/**\n * Returns an array where\n * first element is the currently set (or default) filters\n * second element is a function to update a given set of partial filters.\n * NOTE: This only changes the given filters, and doesn't reset what is missing\n */\nfunction useFiltersURL(): [Filters, (filters: Partial<Filters>) => void] {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function groupParamsByKey(params: URLSearchParams): any {\n    return [...params.entries()].reduce((acc, tuple) => {\n      // getting the key and value from each tuple\n      const [key, val] = tuple;\n      if (Object.prototype.hasOwnProperty.call(acc, key)) {\n        // if the current key is already an array, we'll add the value to it\n        if (Array.isArray(acc[key])) {\n          acc[key] = [...acc[key], val];\n        } else {\n          // if it's not an array, but contains a value, we'll convert it into an array\n          // and add the current value to it\n          acc[key] = [acc[key], val];\n        }\n      } else {\n        // plain assignment if no special case is present\n        acc[key] = val;\n      }\n      return acc;\n    }, {});\n  }\n\n  const filters = useMemo(() => {\n    const searchParamsObject = groupParamsByKey(searchParams);\n    if (searchParamsObject.page) {\n      searchParamsObject.page = parseInt(searchParamsObject.page);\n    }\n    return { ...defaultFilters, ...searchParamsObject };\n  }, [searchParams]);\n\n  const updateFiltersURL = useCallback(\n    (partialFilters: Partial<Filters>) => {\n      const newSearchParams = withoutDefaultFilters({\n        ...filters,\n        ...partialFilters,\n      }) as Record<string, string | string[]>;\n      setSearchParams(newSearchParams);\n    },\n    [filters, setSearchParams]\n  );\n\n  const mustBeArrayKeys = [\"flaws\", \"search_flaws\"];\n  for (const key of mustBeArrayKeys) {\n    if (filters[key] && !Array.isArray(filters[key])) {\n      filters[key] = [filters[key]];\n    }\n  }\n\n  return [filters, updateFiltersURL];\n}\n\nexport default function AllFlaws() {\n  const { locale } = useParams();\n  const [filters] = useFiltersURL();\n  const [lastData, setLastData] = useState<Data | null>(null);\n\n  useEffect(() => {\n    let title = \"Documents with flaws\";\n    if (lastData) {\n      title = `(${lastData.counts.found.toLocaleString()} found) ${title}`;\n    }\n    document.title = title;\n  }, [lastData]);\n\n  const getAPIUrl = useCallback(() => {\n    const { sort_by, sort_reverse, page, ...restFilters } = filters;\n    const params = createSearchParams({\n      ...restFilters,\n      page: String(page),\n      locale,\n      sort: sort_by,\n      reverse: JSON.stringify(sort_reverse),\n    });\n    return `/_flaws?${params.toString()}`;\n  }, [locale, filters]);\n\n  const { data, error, isValidating } = useSWR<Data, Error>(\n    getAPIUrl(),\n    async (url) => {\n      let response;\n      try {\n        response = await fetch(url);\n      } catch (ex) {\n        throw ex;\n      }\n      if (!response.ok) {\n        throw new Error(`${response.status} on ${url}`);\n      }\n      if (!response.headers.get(\"content-type\").includes(\"application/json\")) {\n        throw new Error(\n          `Response is not JSON (${response.headers.get(\"content-type\")})`\n        );\n      }\n      // Always return a promise!\n      return response.json();\n    },\n    {\n      // revalidateOnFocus: false\n    }\n  );\n\n  useEffect(() => {\n    if (data) {\n      setLastData(data);\n    }\n  }, [data]);\n\n  // XXX there's something weird about this logic\n  let loading: React.ReactNode = <small>&nbsp;</small>;\n  if (!data && !error) {\n    if (lastData) {\n      loading = <small>Reloading...</small>;\n    } else {\n      loading = <small>Loading...</small>;\n    }\n  } else if (isValidating) {\n    loading = <small>Reloading...</small>;\n  }\n\n  const { page } = filters;\n  const pageCount = lastData ? lastData.counts.pages : 0;\n  return (\n    <div className=\"all-flaws\">\n      <PageContentContainer>\n        {loading}\n        {error && <ShowSearchError error={error} />}\n        {lastData && (\n          <div className=\"filter-documents\">\n            <FilterControls flawLevels={lastData.flawLevels} />\n            <DocumentsTable\n              locale={locale}\n              counts={lastData.counts}\n              documents={lastData.documents}\n            />\n            {pageCount > 1 && (\n              <p className=\"pagination\">\n                <PageLink number={1} disabled={page === 1}>\n                  First page\n                </PageLink>{\" \"}\n                {page > 2 && (\n                  <PageLink number={page - 1}>\n                    Previous page ({page - 1})\n                  </PageLink>\n                )}{\" \"}\n                <PageLink number={page + 1} disabled={page + 1 > pageCount}>\n                  Next page ({page + 1})\n                </PageLink>\n              </p>\n            )}\n          </div>\n        )}\n        {data && data.counts && <AllFlawCounts counts={data.counts.flaws} />}\n        {data && <BuildTimes times={data.times} />}\n      </PageContentContainer>\n    </div>\n  );\n}\n\nfunction ShowSearchError({ error }) {\n  return (\n    <div className=\"error-message search-error\">\n      <h3>Search error</h3>\n      <pre>{error.toString()}</pre>\n    </div>\n  );\n}\n\nfunction BuildTimes({ times }: { times: Times }) {\n  function format(ms: number) {\n    if (ms > 1000) {\n      const s = ms / 1000;\n      return `${s.toFixed(1)} seconds`;\n    } else {\n      return `${Math.trunc(ms)} milliseconds`;\n    }\n  }\n  return (\n    <div className=\"search-times\">\n      <p>Time to find built documents {format(times.built)}</p>\n    </div>\n  );\n}\n\ninterface SearchFlawRow {\n  flaw: string;\n  search: string;\n}\n\nfunction serializeSearchFlaws(rows: SearchFlawRow[]) {\n  return rows.map((row) => `${row.flaw}:${row.search}`);\n}\n\nfunction deserializeSearchFlaws(list: string[]) {\n  const rows: SearchFlawRow[] = [];\n  for (const row of list) {\n    const [flaw, search] = row.split(\":\", 2);\n    rows.push({ flaw, search });\n  }\n  return rows;\n}\n\nfunction FilterControls({ flawLevels }: { flawLevels: FlawLevel[] }) {\n  const [initialFilters, updateFiltersURL] = useFiltersURL();\n  const [filters, setFilters] = useState(initialFilters);\n  const [searchFlawsRows, setSearchFlawsRows] = useState<SearchFlawRow[]>(\n    deserializeSearchFlaws(initialFilters.search_flaws)\n  );\n\n  useEffect(() => {\n    // A little convenience DOM trick to put focus on the search input\n    // after you've added a row or used the <select>\n    const searchInputs = [\n      ...document.querySelectorAll<HTMLInputElement>(\n        'ul.search-flaws-rows input[type=\"search\"]'\n      ),\n    ].filter((input) => !input.value);\n    if (searchInputs.length) {\n      searchInputs[searchInputs.length - 1].focus();\n    }\n  }, [searchFlawsRows]);\n\n  function refreshFilters() {\n    updateFiltersURL(filters);\n  }\n\n  let hasFilters = !equalObjects(defaultFilters, filters);\n\n  let hasEmptySearchFlawsRow = searchFlawsRows.some(\n    (row) => !row.search.trim()\n  );\n\n  function resetFilters(event: React.MouseEvent) {\n    event.preventDefault();\n    setFilters(defaultFilters);\n    updateFiltersURL(defaultFilters);\n  }\n\n  return (\n    <div className=\"filters\">\n      <h3>Filters</h3>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          refreshFilters();\n        }}\n      >\n        <div>\n          <h4>Document</h4>\n          <input\n            type=\"search\"\n            placeholder=\"Filter by document URI\"\n            value={filters.mdn_url}\n            onChange={(event) => {\n              setFilters({ ...filters, mdn_url: event.target.value });\n            }}\n            onBlur={refreshFilters}\n          />\n          <input\n            type=\"search\"\n            placeholder=\"Filter by document title\"\n            value={filters.title}\n            onChange={(event) => {\n              setFilters({ ...filters, title: event.target.value });\n            }}\n            onBlur={refreshFilters}\n          />\n        </div>\n\n        <div>\n          <h4>Popularity</h4>\n          <input\n            type=\"search\"\n            placeholder=\"E.g. < 100\"\n            value={filters.popularity || \"\"}\n            onChange={(event) => {\n              setFilters({ ...filters, popularity: event.target.value });\n            }}\n            onBlur={refreshFilters}\n          />\n        </div>\n        <div>\n          <h4>Flaws</h4>\n          <select\n            multiple={true}\n            value={filters.flaws}\n            onChange={(event) => {\n              const flaws = [...event.target.selectedOptions].map(\n                (opt) => opt.value\n              );\n              setFilters({ ...filters, flaws });\n            }}\n          >\n            {flawLevels &&\n              flawLevels.map((flawLevel) => {\n                return (\n                  <option key={flawLevel.name} value={flawLevel.name}>\n                    {humanizeFlawName(flawLevel.name)}{\" \"}\n                    {flawLevel.ignored && \"(ignored)\"}\n                  </option>\n                );\n              })}\n          </select>\n        </div>\n        <div>\n          <h4>Search inside flaws</h4>\n          <ul className=\"search-flaws-rows\">\n            {searchFlawsRows.map((row, i) => {\n              return (\n                <li key={`${row.flaw}:${i}`}>\n                  <select\n                    value={row.flaw}\n                    onChange={(event) => {\n                      const clone = [...searchFlawsRows];\n                      clone[i].flaw = event.target.value;\n                      setSearchFlawsRows(clone);\n                    }}\n                  >\n                    {flawLevels &&\n                      flawLevels\n                        .filter((flawLevel) => !flawLevel.ignored)\n                        .map((flawLevel) => {\n                          return (\n                            <option key={flawLevel.name} value={flawLevel.name}>\n                              {humanizeFlawName(flawLevel.name)}\n                            </option>\n                          );\n                        })}\n                  </select>\n                  <input\n                    type=\"search\"\n                    placeholder=\"Search expression (e.g. jsxref)\"\n                    value={row.search}\n                    onChange={(event) => {\n                      setSearchFlawsRows(\n                        searchFlawsRows.map((row, j) => {\n                          if (i === j) {\n                            row.search = event.target.value;\n                          }\n                          return row;\n                        })\n                      );\n                    }}\n                    onBlur={() => {\n                      const serialized = serializeSearchFlaws(searchFlawsRows);\n                      setFilters({ ...filters, search_flaws: serialized });\n                      refreshFilters();\n                    }}\n                  />\n                  <button\n                    type=\"button\"\n                    title=\"Remove search row\"\n                    onClick={() => {\n                      const clone = [...searchFlawsRows];\n                      clone.splice(i, 1);\n                      setSearchFlawsRows(clone);\n\n                      // const serialized = serializeSearchFlaws(searchFlawsRows);\n                      // setFilters({ ...filters, search_flaws: serialized });\n                      // refreshFilters()\n                    }}\n                  >\n                    -\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n          <button\n            type=\"button\"\n            title=\"Add search row\"\n            disabled={hasEmptySearchFlawsRow}\n            onClick={() => {\n              setSearchFlawsRows([\n                ...searchFlawsRows,\n                ...[\n                  {\n                    flaw: \"macros\",\n                    search: \"\",\n                  },\n                ],\n              ]);\n            }}\n          >\n            +\n          </button>\n        </div>\n\n        <div>\n          <h4>Fixable flaws</h4>\n          <input\n            type=\"search\"\n            placeholder=\"E.g. >0\"\n            value={filters.fixableFlaws || \"\"}\n            onChange={(event) => {\n              setFilters({ ...filters, fixableFlaws: event.target.value });\n            }}\n            onBlur={refreshFilters}\n          />\n        </div>\n\n        <div>\n          <h4>&nbsp;</h4>\n          <button type=\"submit\">Filter now</button>\n          {hasFilters && (\n            <button type=\"button\" onClick={resetFilters}>\n              Reset filters\n            </button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction equalObjects(obj1: object, obj2: object) {\n  const keys1 = new Set(Object.keys(obj1));\n  const keys2 = new Set(Object.keys(obj2));\n  if (keys1.size !== keys2.size) {\n    return false;\n  }\n  for (const key of keys1) {\n    if (!keys2.has(key)) {\n      return false;\n    }\n  }\n\n  return Object.entries(obj1).every(([key, value]) => {\n    const value2 = obj2[key];\n    if (typeof value !== typeof value2) {\n      return false;\n    }\n    if (Array.isArray(value)) {\n      return (\n        value.length === value2.length && value.every((v, i) => v === value2[i])\n      );\n    } else {\n      return value === value2;\n    }\n  });\n}\n\nfunction DocumentsTable({\n  locale,\n  counts,\n  documents,\n}: {\n  locale: string;\n  counts: Counts;\n  documents: Document[];\n}) {\n  const [filters, updateFiltersURL] = useFiltersURL();\n\n  function setSort(key: string): void {\n    updateFiltersURL(\n      filters.sort_by === key\n        ? { sort_reverse: !filters.sort_reverse }\n        : { sort_by: key }\n    );\n  }\n  // https://gist.github.com/jlbruno/1535691/db35b4f3af3dcbb42babc01541410f291a8e8fac\n  function getGetOrdinal(n: number) {\n    const s = [\"th\", \"st\", \"nd\", \"rd\"];\n    const v = n % 100;\n    return n.toLocaleString() + (s[(v - 20) % 10] || s[v] || s[0]);\n  }\n\n  function summarizeFlaws(flaws: DocumentFlaws[]) {\n    // Return a one-liner about all the flaws\n    const totalCountFixable = flaws.reduce(\n      (acc, flaw) => flaw.countFixable + acc,\n      0\n    );\n    const bits = flaws.map((flaw) => {\n      return `${humanizeFlawName(flaw.name)}: ${flaw.value}`;\n    });\n    return `${bits.join(\", \")} (${totalCountFixable} fixable)`;\n  }\n\n  function TH({ id, title }: { id: string; title: string }) {\n    return (\n      <th onClick={() => setSort(id)} className=\"sortable\">\n        {title}{\" \"}\n        {filters.sort_by === id ? (filters.sort_reverse ? \"🔽\" : \"🔼\") : null}\n      </th>\n    );\n  }\n\n  function getHighlightedText(text: string, highlight: string) {\n    // Split on highlight term and include term into parts, ignore case\n    const parts = text.split(new RegExp(`(${highlight})`, \"gi\"));\n    return (\n      <span>\n        {\" \"}\n        {parts.map((part, i) => (\n          <span\n            key={i}\n            style={\n              part.toLowerCase() === highlight.toLowerCase()\n                ? { fontWeight: \"bold\" }\n                : {}\n            }\n          >\n            {part}\n          </span>\n        ))}{\" \"}\n      </span>\n    );\n  }\n\n  function showBriefURL(uri: string) {\n    const [left, right] = uri.split(/\\/docs\\//, 2);\n    return (\n      <>\n        <span className=\"url-prefix\">{left}/docs/</span>\n        <span className=\"url-slug\">\n          {filters.mdn_url ? getHighlightedText(right, filters.mdn_url) : right}\n        </span>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"documents\">\n      <h3>\n        Documents with flaws found ({counts.found.toLocaleString()}){\" \"}\n        {filters.page > 1 && <span className=\"page\">page {filters.page}</span>}\n      </h3>\n      {!counts.built ? (\n        <WarnAboutNothingBuilt />\n      ) : (\n        <h4 className=\"subheader\">\n          {counts.built.toLocaleString()} documents built ({locale})\n        </h4>\n      )}\n\n      <table>\n        <thead>\n          <tr>\n            <TH id=\"mdn_url\" title=\"Document\" />\n            <TH id=\"popularity\" title=\"Popularity\" />\n            <TH id=\"flaws\" title=\"Flaws\" />\n          </tr>\n        </thead>\n        <tbody>\n          {documents.map((doc: Document) => {\n            return (\n              <tr key={doc.mdn_url}>\n                <td>\n                  <Link\n                    to={`${doc.mdn_url}#_flaws`}\n                    title={doc.title}\n                    target=\"_blank\"\n                  >\n                    {showBriefURL(doc.mdn_url)}\n                  </Link>\n                  <span className=\"document-title-preview\">\n                    {filters.title\n                      ? getHighlightedText(doc.title, filters.title)\n                      : doc.title}\n                  </span>\n                </td>\n                <td\n                  title={\n                    doc.popularity.ranking\n                      ? `Meaning there are ${\n                          doc.popularity.ranking - 1\n                        } more popular pages than this`\n                      : \"Meaning it has no ranking. Most likely a very rare (or new) document\"\n                  }\n                >\n                  {!doc.popularity.ranking\n                    ? \"n/a\"\n                    : `${getGetOrdinal(doc.popularity.ranking)}`}\n                </td>\n                <td>{summarizeFlaws(doc.flaws)}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction PageLink({\n  number,\n  disabled,\n  children,\n}: {\n  number: number;\n  disabled?: boolean;\n  children: React.ReactNode;\n}) {\n  const [filters] = useFiltersURL();\n  // Unfortunately TS's Partial<T> is not quite the right return type of this function,\n  // as it implies the object could have keys set to undefined, which isn't true here.\n  // Hence we have to use type coercion (any)\n  const newFilters = withoutDefaultFilters({ ...filters, page: number }) as any;\n  if (newFilters.page) {\n    newFilters.page = String(newFilters.page);\n  }\n  return (\n    <Link\n      to={\"?\" + createSearchParams(newFilters).toString()}\n      className={disabled ? \"disabled\" : \"\"}\n      onClick={(event) => {\n        if (disabled) {\n          event.preventDefault();\n        }\n      }}\n    >\n      {children}\n    </Link>\n  );\n}\n\nfunction WarnAboutNothingBuilt() {\n  return (\n    <div className=\"attention document-warnings\">\n      <h4>No documents have been built, so no flaws can be found</h4>\n      <p>\n        At the moment, you have to use the command line tools to build documents\n        that we can analyze.\n      </p>\n    </div>\n  );\n}\n\nfunction AllFlawCounts({ counts }: { counts: FlawsCounts }) {\n  const typesSorted = Object.entries(counts.type).sort((a, b) => {\n    return a[1] - b[1];\n  });\n  const macrosSorted = Object.entries(counts.macros).sort((a, b) => {\n    return a[1] - b[1];\n  });\n  return (\n    <div className=\"flaw-counts\">\n      <h3>Flaws counts</h3>\n      <table>\n        <tbody>\n          <tr>\n            <td>Total</td>\n            <td>\n              <b>{counts.total.toLocaleString()}</b>\n            </td>\n          </tr>\n          <tr>\n            <td>Fixable</td>\n            <td>\n              <b>{counts.fixable.toLocaleString()}</b>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <h4>Breakdown by type</h4>\n      <table>\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Count</th>\n          </tr>\n        </thead>\n        <tbody>\n          {typesSorted.map(([key, value]) => {\n            return (\n              <tr key={key}>\n                <td>{humanizeFlawName(key)}</td>\n                <td>\n                  <b>{value.toLocaleString()}</b>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <h4>\n        Breakdown by <code>macros</code> flaws\n      </h4>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Count</th>\n          </tr>\n        </thead>\n        <tbody>\n          {macrosSorted.map(([key, value]) => {\n            return (\n              <tr key={key}>\n                <td>\n                  <code>{key}</code>\n                </td>\n                <td>\n                  <b>{value.toLocaleString()}</b>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/**\n * This file serves to help flaws when displayed one at a time and when\n * displayed in batches.\n *\n */\n\nexport function humanizeFlawName(name) {\n  const verboseNames = {\n    // List all the names that can't be nicely computed by the fallback()\n    // function.\n    bad_bcd_queries: \"Bad BCD queries\",\n    bad_bcd_links: \"Bad BCD links\",\n    bad_pre_tags: \"Bad <pre> tags\",\n    unsafe_html: \"Unsafe HTML\",\n  };\n  function fallback() {\n    return name.charAt(0).toUpperCase() + name.slice(1).replace(/_/g, \" \");\n  }\n  return verboseNames[name] || fallback();\n}\n"],"sourceRoot":""}