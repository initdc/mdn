{"version":3,"sources":["auth/sign-in.tsx","ui/atoms/auth-disabled/index.tsx"],"names":["SignInApp","useSearchParams","searchParams","locale","useLocale","userData","useUserData","sp","URLSearchParams","userSettingsAPIURL","React","useMemo","isAuthenticated","useSWR","url","a","fetch","response","ok","Error","status","json","data","error","defaultNext","next","get","toLowerCase","window","location","pathname","set","DISABLE_AUTH","className","method","action","csrfmiddlewaretoken","type","name","value","href","toString","onClick","removeSessionStorageData","Loading","style","minHeight","AuthDisabled"],"mappings":"6RAmBe,SAASA,IAAa,IAAD,EACXC,cAAhBC,EAD2B,oBAE5BC,EAASC,cACTC,EAAWC,cACXC,EAAK,IAAIC,gBAITC,EAAqBC,IAAMC,SAAQ,WACvC,OAAON,GAAYA,EAASO,gBAAkB,mBAAqB,OAClE,CAACP,IAV8B,EAWVQ,YACtBJ,EAD4B,uCAE5B,WAAOK,GAAP,eAAAC,EAAA,sEACyBC,MAAMF,GAD/B,WACQG,EADR,QAEgBC,GAFhB,sBAGU,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,eAAmCN,IAH7C,uBAKeG,EAASI,OALxB,mFAF4B,uDAAtBC,EAX0B,EAW1BA,KAAMC,EAXoB,EAWpBA,MAaRC,EAAW,WAAOrB,EAAP,KAEbsB,EAAOvB,EAAawB,IAAI,SAAWF,EACnCC,EAAKE,gBAAkBC,OAAOC,SAASC,SAASH,gBAGlDF,EAAOD,GAkBT,OAFAjB,EAAGwB,IAAI,OAAQN,GAEXO,IACK,cAAC,IAAD,IAIP,mCAQG3B,EACCA,EAASO,gBACP,uBACEqB,UAAU,gBACVC,OAAO,OACPC,OAAO,2BAHT,UAKE,2DACCb,GAAQA,EAAKc,qBACZ,uBACEC,KAAK,SACLC,KAAK,sBACLC,MAAOjB,EAAKc,sBAIhB,uBAAOC,KAAK,SAASC,KAAK,OAAOC,MAAOd,IACvCF,GACC,qBAAKU,UAAU,oBAAf,SACE,8BACE,kDADF,yCAKHX,GAAQA,EAAKc,qBACZ,qCACE,wBAAQC,KAAK,SAASJ,UAAU,QAAhC,sBADF,OAIM,mBAAGO,KAAK,IAAR,wCA3BV,OAiCA,mCAME,oBAAIP,UAAU,eAAd,SACE,6BACE,mBACEO,KAAI,UAxEP,GAwEO,0CAA6CjC,EAAGkC,YACpDR,UAAU,6BACVS,QAAS,WACPC,eAJJ,iDAuCR,cAACC,EAAD,MAMR,SAASA,IACP,OAAO,mBAAGC,MAAO,CAAEC,UAAW,KAAvB,0B,6ECzKF,SAASC,IACd,OACE,sBAAKd,UAAU,mBAAf,UACE,yDACA,qG","file":"static/js/9.d278f6c6.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\n\nimport { DISABLE_AUTH } from \"../constants\";\nimport { useUserData, removeSessionStorageData } from \"../user-context\";\nimport { useLocale } from \"../hooks\";\nimport { AuthDisabled } from \"../ui/atoms/auth-disabled\";\n\n// import { ReactComponent as GithubLogo } from \"@mdn/dinocons/brands/github-mark-small.svg\";\n// import { ReactComponent as GoogleLogo } from \"@mdn/dinocons/brands/google-mono.svg\";\n\nimport \"./index.scss\";\nimport \"./sign-in.scss\";\n\ninterface UserSettings {\n  csrfmiddlewaretoken: string;\n}\n\nexport default function SignInApp() {\n  const [searchParams] = useSearchParams();\n  const locale = useLocale();\n  const userData = useUserData();\n  const sp = new URLSearchParams();\n\n  // If it turns out that you're signed in already, the sign-out will require\n  // a CSRF token to be able to submit the POST to `/users/*/login/logout`.\n  const userSettingsAPIURL = React.useMemo(() => {\n    return userData && userData.isAuthenticated ? \"/api/v1/settings\" : null;\n  }, [userData]);\n  const { data, error } = useSWR<UserSettings>(\n    userSettingsAPIURL,\n    async (url) => {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`${response.status} on ${url}`);\n      }\n      return await response.json();\n    }\n  );\n\n  // This is the `?next=` parameter we send into the redirect loop IF you did\n  // not click into this page from an existing one.\n  const defaultNext = `/${locale}/`;\n\n  let next = searchParams.get(\"next\") || defaultNext;\n  if (next.toLowerCase() === window.location.pathname.toLowerCase()) {\n    // It's never OK for the ?next= variable to be to come back here to this page.\n    // Explicitly check that.\n    next = defaultNext;\n  }\n\n  let prefix = \"\";\n  // When doing local development with Yari, the link to authenticate in Kuma\n  // needs to be absolute. And we also need to send the absolute URL as the\n  // `next` query string parameter so Kuma sends us back when the user has\n  // authenticated there.\n  if (\n    process.env.NODE_ENV === \"development\" &&\n    process.env.REACT_APP_KUMA_HOST\n  ) {\n    const combined = new URL(next, window.location.href);\n    next = combined.toString();\n    prefix = `http://${process.env.REACT_APP_KUMA_HOST}`;\n  }\n  sp.set(\"next\", next);\n\n  if (DISABLE_AUTH) {\n    return <AuthDisabled />;\n  }\n\n  return (\n    <>\n      {/* We need to wait for the userData (/api/v1/whoami) because it will\n          determine what we display.\n          We *could* render on the optimism that people most likely will be\n          on this page because they're NOT signed in. But it feels a bit\n          \"ugly\" if a page has to change its mind and rerender something\n          completely different without it being due to a user action.\n      */}\n      {userData ? (\n        userData.isAuthenticated ? (\n          <form\n            className=\"sign-out-form\"\n            method=\"post\"\n            action=\"/users/fxa/login/logout/\"\n          >\n            <h2>You're already signed in.</h2>\n            {data && data.csrfmiddlewaretoken && (\n              <input\n                type=\"hidden\"\n                name=\"csrfmiddlewaretoken\"\n                value={data.csrfmiddlewaretoken}\n              />\n            )}\n            {/* XXX Here it would be great to link to the account settings page */}\n            <input type=\"hidden\" name=\"next\" value={next} />\n            {error && (\n              <div className=\"notecard negative\">\n                <p>\n                  <strong>Server error</strong> Unable to connect to the server.\n                </p>\n              </div>\n            )}\n            {data && data.csrfmiddlewaretoken && (\n              <>\n                <button type=\"submit\" className=\"ghost\">\n                  Sign out\n                </button>\n                or, <a href=\"/\">return to the home page</a>\n              </>\n            )}\n            .\n          </form>\n        ) : (\n          <>\n            {/* <p className=\"lead\">\n              Sign in to your MDN Web Docs account. If you havenâ€™t already\n              created an account, you will be prompted to do so after signing\n              in.\n            </p> */}\n            <ul className=\"auth-buttons\">\n              <li>\n                <a\n                  href={`${prefix}/users/fxa/login/authenticate/?${sp.toString()}`}\n                  className=\"button icon-button outline\"\n                  onClick={() => {\n                    removeSessionStorageData();\n                  }}\n                >\n                  {/* <FxALogo /> */}\n                  Sign in with Firefox Accounts\n                </a>\n              </li>\n              {/* <li>\n                <a\n                  href={`${prefix}/users/github/login/?${sp.toString()}`}\n                  className=\"button icon-button outline\"\n                  onClick={() => {\n                    removeSessionStorageData();\n                  }}\n                >\n                  <GithubLogo />\n                  Sign in with GitHub&trade;\n                </a>\n              </li> */}\n              {/* <li>\n                <a\n                  href={`${prefix}/users/google/login/?${sp.toString()}`}\n                  className=\"button icon-button outline\"\n                  onClick={() => {\n                    removeSessionStorageData();\n                  }}\n                >\n                  <GoogleLogo />\n                  Sign in with Google&trade;\n                </a>\n              </li> */}\n            </ul>\n          </>\n        )\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n}\n\nfunction Loading() {\n  return <p style={{ minHeight: 200 }}>Loading...</p>;\n}\n","export function AuthDisabled() {\n  return (\n    <div className=\"notecard warning\">\n      <h4>Authentication disabled</h4>\n      <p>Authentication and the user settings app is currently disabled.</p>\n    </div>\n  );\n}\n"],"sourceRoot":""}