{"version":3,"sources":["document/toolbar/edit-actions.tsx","document/toolbar/flaws.tsx","document/toolbar/index.tsx","flaw-utils.js"],"names":["EditActions","folder","filename","location","useLocation","useState","opening","setOpening","editorOpeningError","setEditorOpeningError","event","a","preventDefault","filepath","console","log","fetch","response","ok","status","Error","statusText","text","body","useEffect","unsetOpeningTimer","setTimeout","clearTimeout","useParams","locale","slug","isReadOnly","CRUD_MODE_HOSTNAMES","includes","window","hostname","className","type","title","onClick","href","to","pathname","replace","toString","useAnnotations","genericFlaws","annotations","elements","flaw","element","document","querySelector","id","push","annotationColor","suggestion","dataset","originalTitle","explanation","annotate","color","animationDuration","warn","ag","annotationGroup","show","hide","undefined","focus","flawID","scrollIntoView","behavior","block","parentElement","strokeWidth","padding","length","FLAWS_HASH","ToggleDocumentFlaws","doc","reloadPage","navigate","useNavigate","useReducer","v","hash","toggle","rootElement","useRef","isInitialRender","current","hasShowHash","search","flawsCounts","Object","entries","flaws","map","name","count","sort","b","React","el","allFixableFlaws","allFlaws","values","forEach","filter","fixable","slice","ref","reduce","acc","role","aria-label","Flaws","humanizeFlawName","join","CRUD_MODE","fixableFlaws","fixed","externalImage","flat","filePath","source","isMarkdown","FixableFlawsAction","BrokenLinks","sourceFilePath","links","broken_links","BadBCDLinks","bad_bcd_links","BadBCDQueries","bad_bcd_queries","BadPreTag","bad_pre_tags","Macros","macros","Images","images","ImageWidths","image_widths","HeadingLinks","heading_links","UnsafeHTML","unsafe_html","TranslationDifferences","translation_differences","Sectioning","sectioning","fixing","setFixing","setFixed","fixingError","setFixingError","documentURL","useDocumentURL","fix","URLSearchParams","url","method","error","style","disabled","prev","FixableFlawBadge","ShowDiff","before","after","bits","diffWords","part","i","added","value","removed","key","line","column","cursor","sp","set","catch","err","openInEditor","link","query","inPrerequisiteMacro","macroName","msg","macroSource","sourceContext","errorStack","src","html","difference","explanationNotes","Toolbar","localStorageKey","entry","mdn_url","timestamp","Date","getTime","previousVisits","JSON","parse","localStorage","getItem","visits","setItem","stringify","charAt","toUpperCase"],"mappings":"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","file":"static/js/6.dc5d8ff7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\nimport { CRUD_MODE_HOSTNAMES } from \"../../constants\";\n\nimport \"./edit-actions.scss\";\n\nexport function EditActions({\n  folder,\n  filename,\n}: {\n  folder: string;\n  filename: string;\n}) {\n  const location = useLocation();\n\n  const [opening, setOpening] = useState(false);\n  const [editorOpeningError, setEditorOpeningError] = useState<Error | null>(\n    null\n  );\n\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(false);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  async function openInEditorHandler(event: React.MouseEvent) {\n    event.preventDefault();\n\n    const filepath = `${folder}/${filename}`;\n    console.log(`Going to try to open ${filepath} in your editor`);\n    setOpening(true);\n    try {\n      const response = await fetch(`/_open?filepath=${filepath}`);\n      if (!response.ok) {\n        if (response.status >= 500) {\n          setEditorOpeningError(\n            new Error(`${response.status}: ${response.statusText}`)\n          );\n        } else {\n          const body = await response.text();\n          setEditorOpeningError(new Error(`${response.status}: ${body}`));\n        }\n      }\n    } catch (err: any) {\n      setEditorOpeningError(err);\n    }\n  }\n\n  const { locale, \"*\": slug } = useParams();\n\n  if (!folder) {\n    return null;\n  }\n\n  // If window.location.host is 'localhost:3000` then\n  // window.location.hostname is 'localhost'\n  const isReadOnly = !CRUD_MODE_HOSTNAMES.includes(window.location.hostname);\n\n  return (\n    <ul className=\"edit-actions\">\n      {!isReadOnly && (\n        <li>\n          <button\n            type=\"button\"\n            className=\"button\"\n            title={`Folder: ${folder}`}\n            onClick={openInEditorHandler}\n          >\n            Open in your <b>editor</b>\n          </button>\n        </li>\n      )}\n\n      <li>\n        <a\n          href={`https://developer.mozilla.org/${locale}/docs/${slug}`}\n          className=\"button\"\n        >\n          View on MDN\n        </a>\n      </li>\n\n      {!isReadOnly && (\n        <li>\n          <Link\n            to={location.pathname.replace(\"/docs/\", \"/_edit/\")}\n            className=\"button\"\n          >\n            Quick-edit\n          </Link>\n        </li>\n      )}\n\n      {editorOpeningError ? (\n        <p className=\"error-message editor-opening-error\">\n          <b>Error opening page in your editor!</b>\n          <br />\n          <code>{editorOpeningError.toString()}</code>\n        </p>\n      ) : (\n        opening && <small>Trying to your editor now...</small>\n      )}\n    </ul>\n  );\n}\n","import React, { useEffect, useReducer, useRef, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { annotate, annotationGroup } from \"rough-notation\";\nimport { RoughAnnotation } from \"rough-notation/lib/model\";\nimport { diffWords } from \"diff\";\n\nimport { CRUD_MODE, CRUD_MODE_HOSTNAMES } from \"../../constants\";\nimport { humanizeFlawName } from \"../../flaw-utils\";\nimport { useDocumentURL } from \"../hooks\";\nimport {\n  Doc,\n  BrokenLink,\n  MacroErrorMessage,\n  BadBCDLinkFlaw,\n  ImageReferenceFlaw,\n  ImageWidthFlaw,\n  GenericFlaw,\n  BadBCDQueryFlaw,\n  BadPreTagFlaw,\n  SectioningFlaw,\n  HeadingLinksFlaw,\n  TranslationDifferenceFlaw,\n  UnsafeHTMLFlaw,\n} from \"../types\";\nimport \"./flaws.scss\";\n\ninterface FlawCount {\n  name: string;\n  count: number;\n}\n\nfunction useAnnotations(genericFlaws: GenericFlaw[]) {\n  useEffect(() => {\n    const annotations: RoughAnnotation[] = [];\n    const elements: HTMLElement[] = [];\n    for (const flaw of genericFlaws) {\n      const element = document.querySelector(\n        `[data-flaw=\"${flaw.id}\"]`\n      ) as HTMLElement;\n      if (!element) {\n        console.warn(`Flaw ID '${flaw.id}' does not exist in the DOM`);\n        continue;\n      }\n      elements.push(element);\n      const annotationColor = flaw.suggestion ? \"orange\" : \"red\";\n      element.dataset.originalTitle = element.title;\n\n      element.title = flaw.suggestion\n        ? `Flaw suggestion: ${flaw.suggestion}`\n        : `Flaw explanation: ${flaw.explanation}`;\n      annotations.push(\n        annotate(element, {\n          type: \"box\",\n          color: annotationColor,\n          animationDuration: 300,\n        })\n      );\n    }\n    const ag = annotationGroup(annotations);\n    ag.show();\n\n    return () => {\n      ag.hide();\n\n      // Now, restore any 'title' attributes that were overridden.\n      for (const element of elements) {\n        if (element.dataset.originalTitle !== undefined) {\n          element.title = element.dataset.originalTitle;\n        }\n      }\n    };\n  }, [genericFlaws]);\n\n  function focus(flawID: string) {\n    const element = document.querySelector(\n      `[data-flaw=\"${flawID}\"]`\n    ) as HTMLElement;\n    if (!element) return;\n    const annotations: RoughAnnotation[] = [];\n    element.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n    });\n\n    if (element.parentElement) {\n      annotations.push(\n        annotate(element, {\n          type: \"circle\",\n          color: \"purple\",\n          animationDuration: 500,\n          strokeWidth: 2,\n          padding: 6,\n        })\n      );\n    }\n\n    if (annotations.length) {\n      const ag = annotationGroup(annotations);\n      ag.show();\n      // Only show this extra highlight temporarily\n      window.setTimeout(() => {\n        ag.hide();\n      }, 2000);\n    }\n  }\n\n  return {\n    focus,\n  };\n}\n\nconst FLAWS_HASH = \"#_flaws\";\n\nexport function ToggleDocumentFlaws({\n  doc,\n  reloadPage,\n}: {\n  doc: Doc;\n  reloadPage: () => void;\n}) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [show, toggle] = useReducer((v) => !v, location.hash === FLAWS_HASH);\n  const rootElement = useRef<HTMLDivElement>(null);\n  const isInitialRender = useRef(true);\n\n  useEffect(() => {\n    if (isInitialRender.current && show && rootElement.current) {\n      rootElement.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n    isInitialRender.current = false;\n  }, [show]);\n\n  useEffect(() => {\n    const hasShowHash = window.location.hash === FLAWS_HASH;\n    if (show && !hasShowHash) {\n      navigate(location.pathname + location.search + FLAWS_HASH);\n    } else if (!show && hasShowHash) {\n      navigate(location.pathname + location.search);\n    }\n  }, [location, navigate, show]);\n\n  const flawsCounts = Object.entries(doc.flaws)\n    .map(([name, actualFlaws]) => ({\n      name,\n      count: actualFlaws.length,\n    }))\n    .sort((a, b) => b.count - a.count);\n\n  React.useEffect(() => {\n    const el = document.querySelector('link[rel=\"icon\"]') as HTMLLinkElement;\n    if (el) {\n      let allFixableFlaws = 0;\n      let allFlaws = 0;\n      Object.values(doc.flaws).forEach((flaws) => {\n        allFlaws += flaws.length;\n        allFixableFlaws += flaws.filter((flaw) => flaw.fixable).length;\n      });\n      el.href = !allFlaws\n        ? \"/favicon-48x48-flawless.png\"\n        : allFlaws === allFixableFlaws\n        ? \"/favicon-48x48-flaws-fixable.png\"\n        : \"/favicon-48x48-flaws.png\";\n    }\n  }, [doc.flaws]);\n\n  return (\n    <div\n      id={FLAWS_HASH.slice(1)}\n      ref={rootElement}\n      className=\"toggle-show-flaws\"\n    >\n      {flawsCounts.length > 0 ? (\n        <button type=\"button\" className=\"button\" onClick={toggle}>\n          {show ? \"Hide flaws\" : \"Show flaws\"} (\n          {flawsCounts.reduce((acc, flaw) => flaw.count + acc, 0)})\n        </button>\n      ) : (\n        <p>\n          No known flaws at the moment\n          <span role=\"img\" aria-label=\"yay!\">\n            🍾\n          </span>\n        </p>\n      )}{\" \"}\n      {show ? (\n        <Flaws doc={doc} flaws={flawsCounts} reloadPage={reloadPage} />\n      ) : (\n        <span>\n          {/* a one-liner about all the flaws */}\n          {flawsCounts\n            .map((flaw) => `${humanizeFlawName(flaw.name)}: ${flaw.count}`)\n            .join(\" + \")}\n        </span>\n      )}\n    </div>\n  );\n}\n\nfunction Flaws({\n  doc,\n  flaws,\n  reloadPage,\n}: {\n  doc: Doc;\n  flaws: FlawCount[];\n  reloadPage: () => void;\n}) {\n  if (!CRUD_MODE) {\n    throw new Error(\"This shouldn't be used in non-development builds\");\n  }\n\n  const fixableFlaws = Object.values(doc.flaws)\n    .map((flaws) => {\n      return flaws.filter(\n        (flaw) => !flaw.fixed && (flaw.fixable || flaw.externalImage)\n      );\n    })\n    .flat();\n\n  const isReadOnly = !CRUD_MODE_HOSTNAMES.includes(window.location.hostname);\n\n  // Note! This will work on Windows. The filename can be sent to\n  // the server in POSIX style and the `open-editor` program will make\n  // this work for Windows automatically.\n  const filePath = doc.source.folder + \"/\" + doc.source.filename;\n\n  return (\n    <div id=\"document-flaws\">\n      {!!fixableFlaws.length && !isReadOnly && fixableFlaws.length > 0 && (\n        <>\n          {doc.isMarkdown ? (\n            <small>\n              Automatic fixing fixable flaws not yet enabled for Markdown\n              documents. See{\" \"}\n              <a href=\"https://github.com/mdn/yari/issues/4333\">\n                mdn/yari#4333\n              </a>\n            </small>\n          ) : (\n            <FixableFlawsAction\n              count={fixableFlaws.length}\n              reloadPage={reloadPage}\n            />\n          )}\n        </>\n      )}{\" \"}\n      {flaws.map((flaw) => {\n        switch (flaw.name) {\n          case \"broken_links\":\n            return (\n              <BrokenLinks\n                key=\"broken_links\"\n                sourceFilePath={filePath}\n                links={doc.flaws.broken_links}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"bad_bcd_links\":\n            return (\n              <BadBCDLinks\n                key=\"bad_bcd_links\"\n                links={doc.flaws.bad_bcd_links}\n              />\n            );\n          case \"bad_bcd_queries\":\n            return (\n              <BadBCDQueries\n                key=\"bad_bcd_queries\"\n                flaws={doc.flaws.bad_bcd_queries}\n              />\n            );\n          case \"bad_pre_tags\":\n            return (\n              <BadPreTag\n                key=\"bad_pre_tags\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.bad_pre_tags}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"macros\":\n            return (\n              <Macros\n                key=\"macros\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.macros}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"images\":\n            return (\n              <Images\n                key=\"images\"\n                sourceFilePath={filePath}\n                images={doc.flaws.images}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"image_widths\":\n            return (\n              <ImageWidths\n                key=\"image_widths\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.image_widths}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"heading_links\":\n            return (\n              <HeadingLinks\n                key=\"heading_links\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.heading_links}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"unsafe_html\":\n            return (\n              <UnsafeHTML key=\"unsafe_html\" flaws={doc.flaws.unsafe_html} />\n            );\n          case \"translation_differences\":\n            return (\n              <TranslationDifferences\n                key=\"translation_differences\"\n                flaws={doc.flaws.translation_differences}\n              />\n            );\n          case \"sectioning\":\n            return <Sectioning key=\"sectioning\" flaws={doc.flaws.sectioning} />;\n          default:\n            throw new Error(`Unknown flaw check '${flaw.name}'`);\n        }\n      })}\n    </div>\n  );\n}\n\nfunction FixableFlawsAction({\n  count,\n  reloadPage,\n}: {\n  count: number;\n  reloadPage: () => void;\n}) {\n  const [fixing, setFixing] = useState(false);\n  const [fixed, setFixed] = useState(false);\n  const [fixingError, setFixingError] = useState<Error | null>(null);\n\n  const documentURL = useDocumentURL();\n\n  async function fix() {\n    try {\n      const response = await fetch(\n        `/_document/fixfixableflaws?${new URLSearchParams({\n          url: documentURL,\n        }).toString()}`,\n        {\n          method: \"PUT\",\n        }\n      );\n      if (!response.ok) {\n        throw new Error(`${response.status} on ${response.url}`);\n      }\n      setFixed(true);\n    } catch (error: any) {\n      console.error(\"Error trying to fix fixable flaws\");\n\n      setFixingError(error);\n    } finally {\n      setFixing(false);\n    }\n  }\n\n  return (\n    <div>\n      {fixingError && (\n        <p style={{ color: \"red\" }}>\n          <b>Error:</b> <code>{fixingError.toString()}</code>\n        </p>\n      )}\n      <button\n        type=\"button\"\n        className=\"button\"\n        disabled={fixing}\n        onClick={async () => {\n          setFixing((prev) => !prev);\n          await fix();\n          // Add a tiny delay so you get a chance to see the \"Fixed!\" message.\n          setTimeout(() => {\n            reloadPage();\n          }, 1000);\n        }}\n      >\n        {fixing ? \"Fixing...\" : `Fix fixable flaws (${count})`}\n      </button>{\" \"}\n      {fixed && <b style={{ color: \"darkgreen\" }}>Fixed!</b>}\n    </div>\n  );\n}\n\nfunction FixableFlawBadge() {\n  return (\n    <span title=\"This flaw is fixable.\">\n      Fixable{\" \"}\n      <span role=\"img\" aria-label=\"Thumbs up\">\n        👍🏼\n      </span>\n    </span>\n  );\n}\n\nfunction ShowDiff({ before, after }: { before: string; after: string }) {\n  const diff = diffWords(before, after);\n  const bits = diff.map((part, i: number) => {\n    if (part.added) {\n      return <ins key={i}>{part.value}</ins>;\n    } else if (part.removed) {\n      return <del key={i}>{part.value}</del>;\n    } else {\n      return <span key={i}>{part.value}</span>;\n    }\n  });\n  return <code>{bits}</code>;\n}\n\nfunction BrokenLinks({\n  sourceFilePath,\n  links,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  links: BrokenLink[];\n  isReadOnly: boolean;\n}) {\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  const { focus } = useAnnotations(links);\n\n  return (\n    <div className=\"flaw flaw__broken_links\">\n      <h3>Broken Links</h3>\n      <ol>\n        {links.map((flaw, i) => {\n          const key = `${flaw.href}${flaw.line}${flaw.column}`;\n          return (\n            <li\n              key={key}\n              className={flaw.fixed ? \"fixed_flaw\" : undefined}\n              title={\n                flaw.fixed\n                  ? \"This broken link has been automatically fixed.\"\n                  : undefined\n              }\n            >\n              <code>{flaw.href}</code>{\" \"}\n              <span\n                role=\"img\"\n                aria-label=\"Click to highlight broken link\"\n                title=\"Click to highlight broken link anchor\"\n                style={{ cursor: \"zoom-in\" }}\n                onClick={() => {\n                  focus(flaw.id);\n                }}\n              >\n                👀\n              </span>{\" \"}\n              {isReadOnly ? (\n                <>\n                  {/* It would be cool if we can change this to a link to the line in the\n                  file in GitHub's UI. */}\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(key, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />}{\" \"}\n              {opening && opening === key && <span>Opening...</span>}\n              <br />\n              {flaw.suggestion ? (\n                <span>\n                  <b>Suggestion:</b>\n                  <ShowDiff before={flaw.href} after={flaw.suggestion} />\n                </span>\n              ) : (\n                <code>{flaw.explanation}</code>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </div>\n  );\n}\n\nfunction BadBCDQueries({ flaws }: { flaws: BadBCDQueryFlaw[] }) {\n  return (\n    <div className=\"flaw flaw__bad_bcd_queries\">\n      <h3>{humanizeFlawName(\"bad_bcd_queries\")}</h3>\n      <ul>\n        {flaws.map((flaw) => (\n          <li key={flaw.id}>\n            <code>{flaw.explanation}</code>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction BadBCDLinks({ links }: { links: BadBCDLinkFlaw[] }) {\n  return (\n    <div className=\"flaw flaw__bad_bcd_links\">\n      <h3>{humanizeFlawName(\"bad_bcd_links\")}</h3>\n      <ul>\n        {links.map((link) => (\n          <li key={link.slug}>\n            In <code>{link.query}</code> under key <code>{link.key}</code> can't\n            find document: <code>{link.slug}</code>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Sectioning({ flaws }: { flaws: SectioningFlaw[] }) {\n  return (\n    <div className=\"flaw flaw__sectioning\">\n      <h3>{humanizeFlawName(\"sectioning\")}</h3>\n      <ul>\n        {flaws.map((flaw) => (\n          <li key={flaw.id}>\n            <code>{flaw.explanation}</code>\n            <br />\n            <small>\n              Usually this means there's something in the raw content that makes\n              it hard to split up the rendered HTML. Perhaps delete unnecessary\n              empty divs.\n            </small>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction BadPreTag({\n  flaws,\n  sourceFilePath,\n  isReadOnly,\n}: {\n  flaws: BadPreTagFlaw[];\n  sourceFilePath: string;\n  isReadOnly: boolean;\n}) {\n  const { focus } = useAnnotations(flaws);\n\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  return (\n    <div className=\"flaw flaw__bad_pre_tags\">\n      <h3>{humanizeFlawName(\"bad_pre_tags\")}</h3>\n      <ul>\n        {flaws.map((flaw) => (\n          <li key={flaw.id}>\n            {flaw.explanation}{\" \"}\n            <span\n              role=\"img\"\n              aria-label=\"Click to highlight broken link\"\n              title=\"Click to highlight broken link anchor\"\n              style={{ cursor: \"zoom-in\" }}\n              onClick={() => {\n                focus(flaw.id);\n              }}\n            >\n              👀\n            </span>{\" \"}\n            {flaw.line && flaw.column ? (\n              isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    if (flaw.line && flaw.column)\n                      openInEditor(flaw.id, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )\n            ) : null}{\" \"}\n            {flaw.fixable && <FixableFlawBadge />}{\" \"}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Macros({\n  flaws,\n  sourceFilePath,\n  isReadOnly,\n}: {\n  flaws: MacroErrorMessage[];\n  sourceFilePath: string;\n  isReadOnly: boolean;\n}) {\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(msg: MacroErrorMessage, id: string) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", msg.filepath);\n    sp.set(\"line\", `${msg.line}`);\n    sp.set(\"column\", `${msg.column}`);\n    console.log(\n      `Going to try to open ${msg.filepath}:${msg.line}:${msg.column} in your editor`\n    );\n    setOpening(id);\n    fetch(`/_open?${sp.toString()}`);\n  }\n\n  return (\n    <div className=\"flaw flaw__macros\">\n      <h3>{humanizeFlawName(\"macros\")}</h3>\n      {flaws.map((flaw) => {\n        const inPrerequisiteMacro = !flaw.filepath.includes(sourceFilePath);\n        return (\n          <details\n            key={flaw.id}\n            className={flaw.fixed ? \"fixed_flaw\" : undefined}\n            title={\n              flaw.fixed\n                ? \"This macro flaw has been automatically fixed.\"\n                : undefined\n            }\n          >\n            <summary>\n              <code>{flaw.name}</code> from <code>{flaw.macroName}</code>{\" \"}\n              {isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${flaw.filepath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(flaw, flaw.id);\n                  }}\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {opening && opening === flaw.id && <span>Opening...</span>}{\" \"}\n              {inPrerequisiteMacro && (\n                <span\n                  className=\"macro-filepath-in-prerequisite\"\n                  title={`This page depends on a macro expansion inside ${flaw.filepath}`}\n                >\n                  In prerequisite macro\n                </span>\n              )}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />}{\" \"}\n            </summary>\n            {flaw.fixable && flaw.suggestion && (\n              <>\n                <b>Suggestion:</b>\n                <ShowDiff before={flaw.macroSource} after={flaw.suggestion} />\n                <br />\n              </>\n            )}\n            {flaw.explanation && (\n              <>\n                <b>Explanation:</b> <code>{flaw.explanation}</code>\n                <br />\n              </>\n            )}\n            <b>Context:</b>\n            <pre>{flaw.sourceContext}</pre>\n            <b>Original error stack:</b>\n            <pre>{flaw.errorStack}</pre>\n            <b>Filepath:</b>{\" \"}\n            {inPrerequisiteMacro && (\n              <i className=\"macro-filepath-in-prerequisite\">\n                Note that this is different from the page you're currently\n                viewing.\n              </i>\n            )}\n            <br />\n            <code>{flaw.filepath}</code>\n          </details>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction Images({\n  sourceFilePath,\n  images,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  images: ImageReferenceFlaw[];\n  isReadOnly: boolean;\n}) {\n  // XXX rewrite to a hook\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  const { focus } = useAnnotations(images);\n\n  return (\n    <div className=\"flaw flaw__images\">\n      <h3>{humanizeFlawName(\"images\")}</h3>\n      <ul>\n        {images.map((flaw, i) => {\n          const key = `${flaw.src}${flaw.line}${flaw.column}`;\n          return (\n            <li key={key}>\n              <code>{flaw.src}</code>{\" \"}\n              <span\n                role=\"img\"\n                aria-label=\"Click to highlight image\"\n                title=\"Click to highlight image\"\n                style={{ cursor: \"zoom-in\" }}\n                onClick={() => {\n                  focus(flaw.id);\n                }}\n              >\n                👀\n              </span>{\" \"}\n              {isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(key, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {(flaw.fixable || flaw.externalImage) && <FixableFlawBadge />}{\" \"}\n              <br />\n              {flaw.suggestion && (\n                <span>\n                  <b>Suggestion:</b>\n                  <ShowDiff before={flaw.src} after={flaw.suggestion} />\n                </span>\n              )}{\" \"}\n              <span>{flaw.explanation}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction ImageWidths({\n  sourceFilePath,\n  flaws,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  flaws: ImageWidthFlaw[];\n  isReadOnly: boolean;\n}) {\n  // XXX rewrite to a hook\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  const { focus } = useAnnotations(flaws);\n\n  return (\n    <div className=\"flaw flaw__image_widths\">\n      <h3>{humanizeFlawName(\"image_widths\")}</h3>\n      <ul>\n        {flaws.map((flaw, i) => {\n          const key = `${flaw.style}${flaw.line}${flaw.column}`;\n          return (\n            <li key={key}>\n              <b>{flaw.explanation}</b>{\" \"}\n              <span\n                role=\"img\"\n                aria-label=\"Click to highlight image\"\n                title=\"Click to highlight image\"\n                style={{ cursor: \"zoom-in\" }}\n                onClick={() => {\n                  focus(flaw.id);\n                }}\n              >\n                👀\n              </span>{\" \"}\n              {isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(key, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {(flaw.fixable || flaw.externalImage) && <FixableFlawBadge />}{\" \"}\n              <br />\n              {flaw.suggestion === \"\" && (\n                <>\n                  <b>Style:</b> <code>{flaw.style}</code>\n                  <br />\n                </>\n              )}\n              {flaw.suggestion !== null && (\n                <span>\n                  <b>Suggestion:</b>{\" \"}\n                  {flaw.suggestion ? (\n                    <ShowDiff before={flaw.style} after={flaw.suggestion} />\n                  ) : (\n                    <i>\n                      delete the <code>style</code> attribute\n                    </i>\n                  )}\n                </span>\n              )}{\" \"}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction HeadingLinks({\n  sourceFilePath,\n  flaws,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  flaws: HeadingLinksFlaw[];\n  isReadOnly: boolean;\n}) {\n  // XXX rewrite to a hook\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  return (\n    <div className=\"flaw flaw__heading_links\">\n      <h3>{humanizeFlawName(\"heading_links\")}</h3>\n      <ul>\n        {flaws.map((flaw, i) => {\n          const key = flaw.id;\n          return (\n            <li key={key}>\n              <b>{flaw.explanation}</b>{\" \"}\n              {flaw.line && flaw.column ? (\n                isReadOnly ? (\n                  <>\n                    line {flaw.line}:{flaw.column}\n                  </>\n                ) : (\n                  <a\n                    href={`file://${sourceFilePath}`}\n                    onClick={(event: React.MouseEvent) => {\n                      event.preventDefault();\n                      openInEditor(\n                        key,\n                        flaw.line as number,\n                        flaw.column as number\n                      );\n                    }}\n                    title=\"Click to open in your editor\"\n                  >\n                    line {flaw.line}:{flaw.column}\n                  </a>\n                )\n              ) : null}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />} <br />\n              <b>HTML:</b> <code>{flaw.html}</code> <br />\n              {flaw.suggestion && flaw.before ? (\n                <span>\n                  <b>Suggestion:</b>{\" \"}\n                  <ShowDiff before={flaw.before} after={flaw.suggestion} />\n                </span>\n              ) : (\n                <i>\n                  All <code>&lt;a&gt;</code> tags need to be removed\n                </i>\n              )}{\" \"}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction UnsafeHTML({ flaws }: { flaws: UnsafeHTMLFlaw[] }) {\n  // The UI for this flaw can be a bit \"simplistic\" because by default this\n  // flaw will error rather than warn.\n  return (\n    <div className=\"flaw\">\n      <h3>⚠️ {humanizeFlawName(\"unsafe_html\")} ⚠️</h3>\n      <ul>\n        {flaws.map((flaw, i) => {\n          const key = flaw.id;\n          return (\n            <li key={key}>\n              <b>{flaw.explanation}</b>{\" \"}\n              {flaw.line && flaw.column && (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              )}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />} <br />\n              <b>HTML:</b>\n              <pre className=\"example-bad\">{flaw.html}</pre>\n              <br />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction TranslationDifferences({\n  flaws,\n}: {\n  flaws: TranslationDifferenceFlaw[];\n}) {\n  return (\n    <div className=\"flaw\">\n      <h3>{humanizeFlawName(\"translation_differences\")}</h3>\n      <ul>\n        {flaws.map((flaw, i) => (\n          <li key={flaw.id}>\n            {<b>{flaw.explanation}</b>}\n            {flaw.difference.explanationNotes &&\n              flaw.difference.explanationNotes.length > 0 && (\n                <ul className=\"explanation-notes\">\n                  {flaw.difference.explanationNotes.map(\n                    (explanationNotes, i) => {\n                      return (\n                        <li key={`${explanationNotes}${i}`}>\n                          <code>{explanationNotes}</code>\n                        </li>\n                      );\n                    }\n                  )}\n                </ul>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { CRUD_MODE_HOSTNAMES } from \"../../constants\";\nimport { Doc } from \"../types\";\nimport { EditActions } from \"./edit-actions\";\nimport { ToggleDocumentFlaws } from \"./flaws\";\n\nimport \"./index.scss\";\n\nexport default function Toolbar({\n  doc,\n  reloadPage,\n}: {\n  doc: Doc;\n  reloadPage: () => void;\n}) {\n  // Every time the toolbar is used to view a document, log that in localStorage\n  // as a list of recent document views. This can be used on the homepage to\n  // help you navigate back to pages you frequently visit.\n  useEffect(() => {\n    const localStorageKey = \"viewed-documents\";\n    const entry = {\n      url: doc.mdn_url,\n      title: doc.title,\n      timestamp: new Date().getTime(),\n    };\n    const previousVisits = JSON.parse(\n      localStorage.getItem(localStorageKey) || \"[]\"\n    );\n    const visits = [\n      entry,\n      ...previousVisits.filter((v) => v.url !== entry.url),\n    ];\n    localStorage.setItem(localStorageKey, JSON.stringify(visits.slice(0, 20)));\n  }, [doc]);\n\n  const isReadOnly = !CRUD_MODE_HOSTNAMES.includes(window.location.hostname);\n\n  return (\n    <div className=\"toolbar\">\n      <div className=\"toolbar-first-row\">\n        <EditActions\n          folder={doc.source.folder}\n          filename={doc.source.filename}\n        />\n      </div>\n      {isReadOnly && (\n        <p>\n          <i>\n            You're in <b>read-only</b> mode.\n          </i>\n        </p>\n      )}\n      <ToggleDocumentFlaws doc={doc} reloadPage={reloadPage} />\n    </div>\n  );\n}\n","/**\n * This file serves to help flaws when displayed one at a time and when\n * displayed in batches.\n *\n */\n\nexport function humanizeFlawName(name) {\n  const verboseNames = {\n    // List all the names that can't be nicely computed by the fallback()\n    // function.\n    bad_bcd_queries: \"Bad BCD queries\",\n    bad_bcd_links: \"Bad BCD links\",\n    bad_pre_tags: \"Bad <pre> tags\",\n    unsafe_html: \"Unsafe HTML\",\n  };\n  function fallback() {\n    return name.charAt(0).toUpperCase() + name.slice(1).replace(/_/g, \" \");\n  }\n  return verboseNames[name] || fallback();\n}\n"],"sourceRoot":""}