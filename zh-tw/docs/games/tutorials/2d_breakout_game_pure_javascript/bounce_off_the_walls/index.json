{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"讓球碰到牆壁後反彈","mdn_url":"/zh-TW/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Bounce_off_the_walls","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/zh-TW/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Anatomy\">Anatomy</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/zh-TW/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/zh-TW/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/zh-TW/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/zh-TW/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/zh-TW/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/Async_scripts\">Using async scripts for asm.js</a></li>\n              <li><a href=\"/zh-TW/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizing startup performance</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/WebRTC_data_channels\">Using WebRTC peer-to-peer data channels</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/Efficient_animation_for_web_games\">Efficient animation for web games</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/zh-TW/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/zh-TW/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/zh-TW/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Move_the_ball\">« 前頁</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls\" title=\"Currently only available in English (US)\">次頁  » (en-US)</a></li>\n</ul>\n<p>這是 <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Gamedev Canvas tutorial (en-US)</a>中的第三步 你可以在以下的連結中查看原始碼<a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson03.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson3.html</a>.</p>\n<p>很好我們現在可以讓球移動了, 但目前他會在移動到邊緣後消失, 這使我們少了點樂趣! 為了解決這個問題我們稍後會加入一些碰撞處理 ( <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">later (en-US)</a> ) 使球可以再碰到邊緣時反彈.</p>"}},{"type":"prose","value":{"id":"簡單的碰撞偵測","title":"簡單的碰撞偵測","isH3":false,"content":"<p>為了偵測碰撞的發生，我們將檢查球是否接觸(相撞)牆壁，如果有碰到，我們將改變球的行進方向。</p>\n<p>為了方便計算，我們定義一變數 <code>ballRadius</code> 代表球的半徑。在你程式碼宣告變數的地方加入以下內容:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> ballRadius <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>接著更新繪製球的 <code>drawBall()</code> 函數，加入以下內容:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> ballRadius<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"從頂部和底部反彈","title":"從頂部和底部反彈","isH3":false,"content":"<p>總共有四面牆壁會與球發生碰撞 — 首先處理上方的牆壁，我們在每個影格檢查球是否有接觸到 Canvas 上方壁面 —如果是的話，我們將扭轉球的運動，所以它將開始在相反的方向移動，並保持在可見邊界。記住坐標係從左上角開始，我們可以得到這樣的東西：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>如果球位置的 Y 值低於零，改變 Y 軸上的運動的方向，通過設置它等於本身，扭轉。如果球是向上移動的速度為每幀的 2 個像素，現在它將移動“了”的速度為- 2 像素，這實際上等於在每幀的 2 個像素的速度向下移動。</p>\n<p>上面的代碼將處理球反彈的頂部邊緣，所以現在讓我們想想下邊緣：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  如果球的 Y 位置大於畫布的高度（請記住，我們計算從左上角的 Y 值，所以頂部邊緣開始在 0 和底部邊緣是在 480 像素，畫布的高度），然後通過反轉的 Y 軸運動的底部邊緣，如前。\n  我們可以將這兩個語句為一個節省代碼冗長：\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">||</span> y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>如果兩個語句中的一個是真的，則反轉球的運動。</p>"}},{"type":"prose","value":{"id":"從左邊和右邊反彈","title":"從左邊和右邊反彈","isH3":false,"content":"<p>我們有頂部和底部邊緣覆蓋，所以讓我們想想左，右的。它實際上是非常相似的，你所要做的就是重複 X 而不是 Y 的陳述：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">||</span> x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dx<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">||</span> y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>在這一點上你應該插入上面的代碼塊到 draw()功能，在關閉括號。</p>"}},{"type":"prose","value":{"id":"球不斷地消失在牆上！","title":"球不斷地消失在牆上！","isH3":false,"content":"<p>測試你的代碼在這一點上，你會留下深刻的印象-現在我們有一個球，反彈了所有四個邊緣的畫布！然而，我們有另一個問題-當球擊中每一個牆，它下沉到它略有改變方向：</p>\n<p>\n  <img src=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Bounce_off_the_walls/ball-in-wall.png\" alt=\"\" width=\"480\" height=\"320\" loading=\"lazy\">\n</p>\n<p>這是因為我們計算的牆壁和球的中心的碰撞點，而我們應該做它的圓周。球應該反彈後，如果接觸牆，而不是當它已經在牆上的一半，所以讓我們調整我們的陳述有點包括。更新您添加到的最後一個代碼：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token operator\">-</span>ballRadius <span class=\"token operator\">||</span> x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dx<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span>ballRadius <span class=\"token operator\">||</span> y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>當球的中心與牆的邊緣之間的距離與球的半徑完全相同時，它會改變運動方向。從邊緣減去一個半徑的寬度以及添加到另一個方向給我們在碰撞檢測在中球彈回牆壁的印象。</p>"}},{"type":"prose","value":{"id":"比較你的程式碼","title":"比較你的程式碼","isH3":false,"content":"<p>讓我們用剛剛所學的再次檢查完成的程式碼，並把玩一下：</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"370\" src=\"https://jsfiddle.net/end3r/redj37dc/embedded/\" loading=\"lazy\"></iframe></p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> 每次球撞到牆上時嘗試改變球的顏色為隨機的顏色。</p>\n</div>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<p>我們現在已經進入了舞台，我們的球是移動和停留在遊戲板上。 在第四章中，我們將討論實現一個可控制的球拍 - 參見 <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Paddle and keyboard controls (en-US)</a>.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Move_the_ball\">« 前頁</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls\" title=\"Currently only available in English (US)\">次頁  » (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"簡單的碰撞偵測","id":"簡單的碰撞偵測"},{"text":"從頂部和底部反彈","id":"從頂部和底部反彈"},{"text":"從左邊和右邊反彈","id":"從左邊和右邊反彈"},{"text":"球不斷地消失在牆上！","id":"球不斷地消失在牆上！"},{"text":"比較你的程式碼","id":"比較你的程式碼"},{"text":"下一步","id":"下一步"}],"summary":"這是 Gamedev Canvas tutorial (en-US)中的第三步 你可以在以下的連結中查看原始碼Gamedev-Canvas-workshop/lesson3.html.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Bounce off the walls","locale":"en-US","native":"English (US)"},{"title":"Rebota en las paredes","locale":"es","native":"Español"},{"title":"Faire rebondir la balle sur les murs","locale":"fr","native":"Français"},{"title":"ボールを壁で跳ね返させる","locale":"ja","native":"日本語"},{"title":"공을 벽에 튕기기","locale":"ko","native":"한국어"},{"title":"Отскок от стен","locale":"ru","native":"Русский"},{"title":"反弹的墙壁","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/games/tutorials/2d_breakout_game_pure_javascript/bounce_off_the_walls","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/games/tutorials/2d_breakout_game_pure_javascript/bounce_off_the_walls/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Games","title":"遊戲開發"},{"uri":"/zh-TW/docs/Games/Tutorials","title":"Workflows for different game types"},{"uri":"/zh-TW/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"只使用 JavaScript 的 2D 打磚塊遊戲"},{"uri":"/zh-TW/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Bounce_off_the_walls","title":"讓球碰到牆壁後反彈"}],"pageTitle":"讓球碰到牆壁後反彈 - 遊戲開發 | MDN","noIndexing":false}}