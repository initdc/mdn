{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"EventTarget.removeEventListener()","mdn_url":"/zh-TW/docs/Web/API/EventTarget/removeEventListener","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"<ol><li><strong><a href=\"/zh-TW/docs/Web/API/EventTarget\"><code>EventTarget</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventTarget/EventTarget\"><code>EventTarget()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/zh-TW/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a></li><li><a href=\"/zh-TW/docs/Web/API/EventTarget/dispatchEvent\"><code>dispatchEvent()</code></a></li><li><em><code>removeEventListener()</code></em></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>EventTarget.removeEventListener()</code></strong> 方法可以移除先前由 <a href=\"/zh-TW/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a> 所註冊的事件監聽器。</p>"}},{"type":"prose","value":{"id":"語法","title":"語法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>target<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntarget<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> useCapture<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"參數","title":"參數","isH3":true,"content":"<dl>\n  <dt id=\"type\"><code>type</code></dt>\n  <dd>\n    <p>A string representing the event type to remove.</p>\n  </dd>\n  <dt id=\"listener\"><code>listener</code></dt>\n  <dd>\n    <p>The <a href=\"/zh-TW/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> function to remove from the event target.</p>\n  </dd>\n  <dt id=\"options\">options <span class=\"badge inline optional\">選擇性</span></dt>\n  <dd>\n    <p>An options object that specifies characteristics about the event listener. The available options are: <code>capture</code>: A <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that indicates that events of this type will be dispatched to the registered <code>listener</code> before being dispatched to any <code>EventTarget</code> beneath it in the DOM tree.</p>\n    <ul>\n      <li><code>passive</code>: A <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicating that the <code>listener</code> will never call <code>preventDefault()</code>. If it does, the user agent should ignore it and generate a console warning.</li>\n      <li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <code>mozSystemGroup</code>: Available only in code running in XBL or in Firefox' chrome, it is a <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> defining if the listener is added to the system group.</li>\n    </ul>\n  </dd>\n  <dt id=\"usecapture\"><code>useCapture</code> <span class=\"badge inline optional\">選擇性</span></dt>\n  <dd>\n    <p>Specifies whether the <a href=\"/zh-TW/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> to be removed is registered as a capturing listener or not. If this parameter is absent, a default value of <code>false</code> is assumed. If a listener is registered twice, one with capture and one without, remove each one separately. Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa.</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> <code>useCapture</code> was required in most major browsers' early versions. If broad compatibility is desired, you should always provide the <code>useCapture</code> parameter.</p>\n</div>"}},{"type":"prose","value":{"id":"回傳值","title":"回傳值","isH3":true,"content":"<p>無。</p>"}},{"type":"prose","value":{"id":"備註","title":"備註","isH3":false,"content":"<p>If an <a href=\"/zh-TW/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> is removed from an <a href=\"/zh-TW/docs/Web/API/EventTarget\"><code>EventTarget</code></a> while it is processing an event, it will not be triggered by the current actions. An <a href=\"/zh-TW/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> will not be invoked for the event it was registered for after being removed, however it can be reattached.</p>\n<p>Calling <code>removeEventListener()</code> with arguments that do not identify any currently registered <a href=\"/zh-TW/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> on the <code>EventTarget</code> has no effect.</p>"}},{"type":"prose","value":{"id":"範例","title":"範例","isH3":false,"content":"<p>This example shows how to add a <code>click</code>-based event listener and remove a <code>mouseover</code>-based event listener.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    clickTarget <span class=\"token operator\">=</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click-target'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    mouseOverTarget <span class=\"token operator\">=</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouse-over-target'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    toggle <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">makeBackgroundYellow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>toggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    toggle <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>toggle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nclickTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>\n    makeBackgroundYellow<span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmouseOverTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n    clickTarget<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>\n        makeBackgroundYellow<span class=\"token punctuation\">,</span>\n        <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"規範","id":"規範","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#ref-for-dom-eventtarget-removeeventlistener②","title":"DOM Standard"}],"query":"api.EventTarget.removeEventListener"}},{"type":"browser_compatibility","value":{"title":"瀏覽器相容性","id":"瀏覽器相容性","isH3":false,"query":"api.EventTarget.removeEventListener","dataURL":"/zh-TW/docs/Web/API/EventTarget/removeEventListener/bcd.json"}},{"type":"prose","value":{"id":"polyfill_to_support_older_browsers","title":"Polyfill to support older browsers","isH3":false,"content":"<p><code>addEventListener()</code> and <code>removeEventListener()</code> are not present in older browsers. You can work around this by inserting the following code at the beginning of your scripts, allowing the use of <code>addEventListener()</code> and <code>removeEventListener()</code> in implementations that do not natively support it. However, this method will not work on Internet Explorer 7 or earlier, since extending the Element.prototype was not supported until Internet Explorer 8.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>addEventListener<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> oListeners <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">runListeners</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">oEvent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>oEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> oEvent <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> iLstId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> iElId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> oEvtListeners <span class=\"token operator\">=</span> oListeners<span class=\"token punctuation\">[</span>oEvent<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> iElId <span class=\"token operator\">&lt;</span> oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iElId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">[</span>iElId<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>iLstId<span class=\"token punctuation\">;</span> iLstId <span class=\"token operator\">&lt;</span> oEvtListeners<span class=\"token punctuation\">.</span>aEvts<span class=\"token punctuation\">[</span>iElId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iLstId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> oEvtListeners<span class=\"token punctuation\">.</span>aEvts<span class=\"token punctuation\">[</span>iElId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>iLstId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> oEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addEventListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>sEventType<span class=\"token punctuation\">,</span> fListener <span class=\"token comment\">/*, useCapture (will be ignored!) */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oListeners<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>sEventType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> oEvtListeners <span class=\"token operator\">=</span> oListeners<span class=\"token punctuation\">[</span>sEventType<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> nElIdx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> iElId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> iElId <span class=\"token operator\">&lt;</span> oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iElId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">[</span>iElId<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> nElIdx <span class=\"token operator\">=</span> iElId<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nElIdx <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        oEvtListeners<span class=\"token punctuation\">.</span>aEvts<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>fListener<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"on\"</span> <span class=\"token operator\">+</span> sEventType<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> runListeners<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> aElListeners <span class=\"token operator\">=</span> oEvtListeners<span class=\"token punctuation\">.</span>aEvts<span class=\"token punctuation\">[</span>nElIdx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"on\"</span> <span class=\"token operator\">+</span> sEventType<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> runListeners<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          aElListeners<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"on\"</span> <span class=\"token operator\">+</span> sEventType<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> runListeners<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> iLstId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> iLstId <span class=\"token operator\">&lt;</span> aElListeners<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iLstId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aElListeners<span class=\"token punctuation\">[</span>iLstId<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> fListener<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        aElListeners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>fListener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      oListeners<span class=\"token punctuation\">[</span>sEventType<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">aEls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">aEvts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">[</span>fListener<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"on\"</span> <span class=\"token operator\">+</span> sEventType<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> runListeners<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeEventListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>sEventType<span class=\"token punctuation\">,</span> fListener <span class=\"token comment\">/*, useCapture (will be ignored!) */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>oListeners<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>sEventType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> oEvtListeners <span class=\"token operator\">=</span> oListeners<span class=\"token punctuation\">[</span>sEventType<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> nElIdx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> iElId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> iElId <span class=\"token operator\">&lt;</span> oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iElId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">[</span>iElId<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> nElIdx <span class=\"token operator\">=</span> iElId<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nElIdx <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> iLstId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> aElListeners <span class=\"token operator\">=</span> oEvtListeners<span class=\"token punctuation\">.</span>aEvts<span class=\"token punctuation\">[</span>nElIdx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> iLstId <span class=\"token operator\">&lt;</span> aElListeners<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iLstId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aElListeners<span class=\"token punctuation\">[</span>iLstId<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> fListener<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> aElListeners<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>iLstId<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"參見","title":"參見","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-TW/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a>.</li>\n  <li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventTarget/removeEventListener\"><code>EventTarget.detachEvent()</code> <small>(en-US)</small></a>.</li>\n</ul>"}}],"toc":[{"text":"語法","id":"語法"},{"text":"備註","id":"備註"},{"text":"範例","id":"範例"},{"text":"規範","id":"規範"},{"text":"瀏覽器相容性","id":"瀏覽器相容性"},{"text":"Polyfill to support older browsers","id":"polyfill_to_support_older_browsers"},{"text":"參見","id":"參見"}],"summary":"EventTarget.removeEventListener() 方法可以移除先前由 addEventListener() 所註冊的事件監聽器。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"EventTarget.removeEventListener()","locale":"en-US","native":"English (US)"},{"title":"EventTarget.removeEventListener()","locale":"es","native":"Español"},{"title":"element.removeEventListener","locale":"fr","native":"Français"},{"title":"EventTarget.removeEventListener()","locale":"ja","native":"日本語"},{"title":"EventTarget.removeEventListener()","locale":"ko","native":"한국어"},{"title":"EventTarget.removeEventListener()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Метод EventTarget.removeEventListener()","locale":"ru","native":"Русский"},{"title":"EventTarget.removeEventListener()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/api/eventtarget/removeeventlistener","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/api/eventtarget/removeeventlistener/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/API","title":"Web APIs"},{"uri":"/zh-TW/docs/Web/API/EventTarget","title":"EventTarget"},{"uri":"/zh-TW/docs/Web/API/EventTarget/removeEventListener","title":"EventTarget.removeEventListener()"}],"pageTitle":"EventTarget.removeEventListener() - Web APIs | MDN","noIndexing":false}}