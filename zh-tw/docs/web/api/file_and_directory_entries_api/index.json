{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"FileHandle API","mdn_url":"/zh-TW/docs/Web/API/File_and_Directory_Entries_API","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>FileHandle API 可操作檔案，例如建立檔案、修改檔案內容 (不同於 <a href=\"/en-US/docs/Web/API/File\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">File (en-US)</a> API)。而正在編輯中的部分，將使用回合制的鎖定機制，以避免發生競態 (Race) 問題。</p>"}},{"type":"prose","value":{"id":"api","title":"API","isH3":false,"content":""}},{"type":"prose","value":{"id":"建立_filehandle","title":"建立 FileHandle","isH3":true,"content":"<p>若要建立 FileHandle 物件，則需要 <a href=\"/en-US/docs/Web/API/IDBFactory#open\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">IndexedDB Database (en-US)</a>。</p>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token keyword\">var</span> idbreq <span class=\"token operator\">=</span> indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyTestDatabase\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nidbreq<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> idbreq<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> handleReq <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">mozCreateFileHandle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.bin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  handleReq<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> handle <span class=\"token operator\">=</span> handleReq<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'handle'</span><span class=\"token punctuation\">,</span> handle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>mozCreateFileHandle()</code> 共使用 <code>2</code> 組參數(Argument)：1 組名稱與 1 組檔案類別 (Optional type)。但這 2 組參數均只屬於敘述性參數，不會用於資料庫。舉例來說，名稱可能是空白字串，而且不需為專屬字串。所以 API 根本不會注意這些參數值。</p>\n<p>另請注意，上列程式碼僅會建立「暫時性檔案」，亦即當你保留 FileHandle 物件時，該檔案才會存在。如果你要在重新整理頁面/重新啟動 App 之後，仍能保留檔案，則必須將 Handle 儲存於更永久性的位置 (如資料庫本身之內) 中。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobjectStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>myFile<span class=\"token punctuation\">,</span> myKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// The file is now referenced from database too.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"filehandle_介面","title":"FileHandle 介面","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">interface FileHandle\n{\n  LockedFile open(optional DOMString mode);\n  DOMRequest getFile()\n  readonly attribute DOMString name;\n  readonly attribute DOMString type;\n  attribute Function? onabort;\n  attribute Function? onerror;\n};\n</pre></div>\n<dl>\n  <dt id=\"openmodereadonly\">open([mode=\"readonly\"])</dt>\n  <dd>\n    <p>可回傳 <a href=\"#lockedfile_interface\">LockedFile</a>。<code>mode</code> 可為「<code>readonly」或「``readwrite」。</code></p>\n  </dd>\n  <dt id=\"getfile\">getFile()</dt>\n  <dd>\n    <p>針對檔案而回傳 <a href=\"/zh-TW/docs/DOM/DOMRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">DOMRequest</a>。若成功，就會收到以 <a href=\"/en-US/docs/Web/API/File\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">File (en-US)</a> 物件形式呈現的唯讀「snapshot」檔案內容 (可用於任何接受 <a href=\"/en-US/docs/Web/API/Blob\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Blob (en-US)</a> 的地方，如 <a href=\"/en-US/docs/Web/API/FileReader\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">FileReader (en-US)</a> 或 <a href=\"/zh-TW/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a> 等)。</p>\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myFile<span class=\"token punctuation\">.</span><span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> transcation <span class=\"token operator\">=</span> myDatabase<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"snapshots\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"snapshots\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobjectStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> snapshotKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// A new readonly copy of the file has been created.</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </dd>\n  <dt id=\"name\">name</dt>\n  <dd>\n    <p>檔案名稱。</p>\n  </dd>\n  <dt id=\"type\">type</dt>\n  <dd>\n    <p>代表 content-type。</p>\n  </dd>\n  <dt id=\"abort_event\">abort event</dt>\n  <dd>\n    <p>放棄已鎖定的檔案，就會發生此事件。</p>\n  </dd>\n  <dt id=\"error_event\">error event</dt>\n  <dd>\n    <p>任何內部錯誤，都會發生此事件。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"lockedfile_介面","title":"LockedFile 介面","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">interface LockedFile\n{\n  readonly attribute FileHandle fileHandle;\n  readonly attribute DOMString mode;\n  readonly attribute boolean active;\n  attribute any? location;\n  FileRequest getMetadata(optional FileMetadataParameters parameters);\n  FileRequest readAsArrayBuffer(unsigned long long size);\n  FileRequest readAsText(unsigned long long size, optional DOMString encoding);\n  FileRequest write(DOMString or ArrayBuffer or Blob value);\n  FileRequest append(DOMString or ArrayBuffer or Blob value);\n  FileRequest truncate(optional unsigned long long size);\n  FileRequest flush();\n  void abort();\n  attribute Function? oncomplete;\n  attribute Function? onabort;\n  attribute Function? onerror;\n};\n</pre></div>\n<dl>\n  <dt id=\"filehandle\">fileHandle</dt>\n  <dd>\n    <p>來自於解鎖的 FileHandle 物件。</p>\n  </dd>\n  <dt id=\"mode\">mode</dt>\n  <dd>\n    <p>「<code>readonly</code>」或「<code>readwrite</code>」。</p>\n  </dd>\n  <dt id=\"active\">active</dt>\n  <dd>\n    <p>一旦建立之後，就隨即啟動 LockedFile。此 LockedFile 是「可寫入存取 (Write access) 實際底層檔案」的唯一物件。LockedFile 上的作業，均於 <a href=\"https://en.wikipedia.org/wiki/Isolation_%28database_systems%29\" class=\"external\" rel=\" noopener\">isolation</a> 之中執行；也就是說，只要啟動了 LockedFile，則此 LockedFile 的所有作業都一定會在底層檔案上依序執行，而不會與其他 LockedFiles 的作業交錯執行。</p>\n    <p>若停用了 LockedFile，則只要在同樣的 LockedFile 上執行讀/寫作業，都會丟出錯誤訊息。</p>\n  </dd>\n  <dt id=\"location\">location</dt>\n  <dd>\n    <p>檔案中的位置 (Offset)。每次讀/寫作業之後，此數值均將自動變更。讀寫作業均從該 location 開始，而 null 代表檔案末端。</p>\n  </dd>\n  <dt id=\"getmetadataparameters\">getMetadata(parameters)</dt>\n  <dd>\n    <p>針對後設資料 (Metadata) 而回傳 <a href=\"/en-US/docs/Web/API/File_and_Directory_Entries_API#filerequest_interface\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">FileRequest (en-US)</a>。此參數亦屬於物件，其中將參數名稱作為物件鍵值，布林值作為數值，進而非同步檢索既有的屬性。無數值則代表 <code>true</code>。目前僅有 <code>size</code> 與 <code>lastModified</code> 為可能的參數。</p>\n  </dd>\n  <dt id=\"readasarraybuffersize\">readAsArrayBuffer(size)</dt>\n  <dd>\n    <p>針對既有<code>size</code>的 <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ArrayBuffer (en-US)</a>，回傳 <a href=\"/en-US/docs/Web/API/File_and_Directory_Entries_API#filerequest_interface\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">FileRequest (en-US)</a>。此作業均從 <code>location</code> 開始，另根據讀取位元組的數目，移動 <code>location</code>。</p>\n  </dd>\n  <dt id=\"readastextsize_encoding\">readAsText(size [, encoding])</dt>\n  <dd>\n    <p>針對既有 <code>size</code> 的字串，以既定的 <code>encoding</code> 回傳 <a href=\"/en-US/docs/Web/API/File_and_Directory_Entries_API#filerequest_interface\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">FileRequest (en-US)</a>。此作業均從 <code>location</code> 開始，另根據讀取位元組的數目，移動 <code>location</code>。<a href=\"/en-US/docs/Web/API/FileReader\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">FileReader (en-US)</a> API 中的對等函式，也以相同方式運作。</p>\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> lockedFile <span class=\"token operator\">=</span> myFile<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> lockedFile<span class=\"token punctuation\">.</span><span class=\"token function\">readAsText</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 3 characters have been read.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </dd>\n  <dt id=\"writevalue\">write(value)</dt>\n  <dd>\n    <p>針對成功/失敗的寫入作業，回傳 <a href=\"/en-US/docs/Web/API/File_and_Directory_Entries_API#filerequest_interface\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">FileRequest (en-US)</a>。寫入作業將從 <code>location</code> 開始，另根據寫入位元組的數目，移動位置。</p>\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> lockedFile <span class=\"token operator\">=</span> myFile<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> lockedFile<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// The string \"foo\" has been written.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </dd>\n  <dt id=\"appendvalue\">append(value)</dt>\n  <dd>\n    <p>針對成功/失敗的附加 (Append) 作業，回傳 <a href=\"/en-US/docs/Web/API/File_and_Directory_Entries_API#filerequest_interface\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">FileRequest (en-US)</a>。不論 <code>location</code> 為何，該數值均附加於檔案末端。在附加資料完畢後，<code>location</code> 隨即設定為 <code>null</code>。</p>\n  </dd>\n  <dt id=\"truncatesize\">truncate([size])</dt>\n  <dd>\n    <p>針對成功/失敗的截斷 (Truncate) 作業，回傳 <a href=\"/en-US/docs/Web/API/File_and_Directory_Entries_API#filerequest_interface\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">FileRequest (en-US)</a>。</p>\n    <p>如果是以單一參數呼叫該函式，則截斷成功之後，則<strong>不論</strong> <code>location</code> 為何，檔案將剩下第一個 <code>size</code> 的位元組。</p>\n    <p>若沒有用任何參數呼叫該函式，則檔案將剩下 <code>location</code> 的第一個位元組。</p>\n  </dd>\n  <dt id=\"flush\">flush()</dt>\n  <dd>\n    <p>強制移轉緩衝過的資料至磁碟上，作業成功之後將回傳 FileRequest。此時即便 App 當機或非刻意中止，都能確保資料已經位於磁碟上了。</p>\n  </dd>\n  <dt id=\"abort\">abort()</dt>\n  <dd>\n    <p>停用 LockedFile 並取消全部尚未執行的作業。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"filerequest_介面","title":"FileRequest 介面","isH3":true,"content":"<p>此類型的物件，均是由 LockedFile 介面的所有非同步作業所回傳。此介面繼承了 <a href=\"/zh-TW/docs/DOM/DOMRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">DOMRequest</a> 並類似 <a href=\"/en-US/docs/Web/API/IDBRequest\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">IDBRequest (en-US)</a>，同時還擁有 <code>onprogress</code> 事件。在成功之後，則可透過 <code>result</code> 屬性而取得必要檔案作業的結果。</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">interface FileRequest : DOMRequest\n{\n  readonly attribute LockedFile lockedFile;\n  attribute Function? onprogress;\n};\n</pre></div>"}},{"type":"prose","value":{"id":"說明","title":"說明","isH3":false,"content":""}},{"type":"prose","value":{"id":"api_與_filewriter_的差異？","title":"API 與 FileWriter 的差異？","isH3":true,"content":"<p><a href=\"https://dev.w3.org/2009/dap/file-system/file-writer.html\" class=\"external\" rel=\" noopener\">FileWriter 規格</a>定義了 FileWriter，也就是用以呈現「可編輯的檔案」的物件。<a href=\"https://lists.w3.org/Archives/Public/public-webapps/2012JanMar/0886.html\" class=\"external\" rel=\" noopener\">Public-webapps 討論串</a>則下了結論：若單一檔案同時寫入不同的實體 (Entity)，將導致 API 成效不彰。最後就是 FileHandle API 應具備自己的 LockedFile 與交易機制。</p>"}}],"toc":[{"text":"API","id":"api"},{"text":"說明","id":"說明"}],"summary":"FileHandle API 可操作檔案，例如建立檔案、修改檔案內容 (不同於 File (en-US) API)。而正在編輯中的部分，將使用回合制的鎖定機制，以避免發生競態 (Race) 問題。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"File and Directory Entries API","locale":"en-US","native":"English (US)"},{"title":"API fichier système","locale":"fr","native":"Français"},{"title":"ファイルとディレクトリー項目 API","locale":"ja","native":"日本語"},{"title":"File and Directory Entries API","locale":"ko","native":"한국어"},{"title":"File and Directory Entries API","locale":"ru","native":"Русский"},{"title":"文件与目录条目 API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/api/file_and_directory_entries_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/api/file_and_directory_entries_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/API","title":"Web APIs"},{"uri":"/zh-TW/docs/Web/API/File_and_Directory_Entries_API","title":"FileHandle API"}],"pageTitle":"FileHandle API - Web APIs | MDN","noIndexing":false}}