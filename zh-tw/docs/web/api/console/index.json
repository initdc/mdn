{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Console","mdn_url":"/zh-TW/docs/Web/API/Console","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"<ol><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Console_API\">Console API <small>(en-US)</small></a></strong></li><li><strong><a href=\"/zh-TW/docs/Web/API/Console\"><code>Console</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/zh-TW/docs/Web/API/console/assert\"><code>assert()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/clear\"><code>clear()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/count\"><code>count()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/countReset\"><code>countReset()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/debug\"><code>debug()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/dir\"><code>dir()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/dirxml\"><code>dirxml()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/error\"><code>error()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/group\"><code>group()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/groupCollapsed\"><code>groupCollapsed()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/groupEnd\"><code>groupEnd()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/info\"><code>info()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/log\"><code>log()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/profile\"><code>profile()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/profileEnd\"><code>profileEnd()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/table\"><code>table()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/time\"><code>time()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/timeEnd\"><code>timeEnd()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/timeLog\"><code>timeLog()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/timeStamp\"><code>timeStamp()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/trace\"><code>trace()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/warn\"><code>warn()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Console API</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Window/console\"><code>Window.console</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope/console\"><code>WorkerGlobalScope.console</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>Console</code></strong> object provides access to the browser's debugging console (e.g. the <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/web_console/index.html\" class=\"external\" rel=\" noopener\">Web Console</a> in Firefox). The specifics of how it works varies from browser to browser, but there is a <em>de facto</em> set of features that are typically provided.</p>\n<p>The <code>Console</code> object can be accessed from any global object. <a href=\"/zh-TW/docs/Web/API/Window\"><code>Window</code></a> on browsing scopes and <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code> <small>(en-US)</small></a> as specific variants in workers via the property console. It's exposed as <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Window/console\"><code>Window.console</code> <small>(en-US)</small></a>, and can be referenced as simply <code>console</code>. For example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to open the specified link\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>This page documents the <a href=\"#methods\">Methods</a> available on the <code>Console</code> object and gives a few <a href=\"#usage\">Usage</a> examples.</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/zh-TW/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"console.assert\"><a href=\"/zh-TW/docs/Web/API/console/assert\"><code>Console.assert()</code></a></dt>\n  <dd>\n    <p>Log a message and stack trace to console if the first argument is <code>false</code>.</p>\n  </dd>\n  <dt id=\"console.clear_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/clear\"><code>Console.clear()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Clear the console.</p>\n  </dd>\n  <dt id=\"console.count_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/count\"><code>Console.count()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Log the number of times this line has been called with the given label.</p>\n  </dd>\n  <dt id=\"console.debug_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/debug\"><code>Console.debug()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>An alias for <code>log()</code>.</p>\n    <div class=\"notecard note\" id=\"sect2\">\n      <p><strong>備註：</strong> Starting with Chromium 58 this method only appears in Chromium browser consoles when level \"Verbose\" is selected.</p>\n    </div>\n  </dd>\n  <dt id=\"console.dir_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/dir\"><code>Console.dir()</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>Displays an interactive listing of the properties of a specified JavaScript object. This listing lets you use disclosure triangles to examine the contents of child objects.</p>\n  </dd>\n  <dt id=\"console.dirxml_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/dirxml\"><code>Console.dirxml()</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>Displays an XML/HTML Element representation of the specified object if possible or the JavaScript Object view if it is not possible.</p>\n  </dd>\n  <dt id=\"console.error_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/error\"><code>Console.error()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Outputs an error message. You may use <a href=\"/zh-TW/docs/Web/API/console#Using_string_substitutions\" aria-current=\"page\">string substitution</a> and additional arguments with this method.</p>\n  </dd>\n  <dt id=\"console.exception\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>Console.exception()</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>An alias for <code>error()</code>.</p>\n  </dd>\n  <dt id=\"console.group_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/group\"><code>Console.group()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Creates a new inline <a href=\"/zh-TW/docs/Web/API/console#Using_groups_in_the_console\" aria-current=\"page\">group</a>, indenting all following output by another level. To move back out a level, call <code>groupEnd()</code>.</p>\n  </dd>\n  <dt id=\"console.groupcollapsed_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/groupCollapsed\"><code>Console.groupCollapsed()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Creates a new inline <a href=\"/zh-TW/docs/Web/API/console#Using_groups_in_the_console\" aria-current=\"page\">group</a>, indenting all following output by another level. However, unlike <code>group()</code> this starts with the inline group collapsed requiring the use of a disclosure button to expand it. To move back out a level, call <code>groupEnd()</code>.</p>\n  </dd>\n  <dt id=\"console.groupend_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/groupEnd\"><code>Console.groupEnd()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Exits the current inline <a href=\"/zh-TW/docs/Web/API/console#Using_groups_in_the_console\" aria-current=\"page\">group</a>.</p>\n  </dd>\n  <dt id=\"console.info_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/info\"><code>Console.info()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Informative logging of information. You may use <a href=\"/zh-TW/docs/Web/API/console#Using_string_substitutions\" aria-current=\"page\">string substitution</a> and additional arguments with this method.</p>\n  </dd>\n  <dt id=\"console.log_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/log\"><code>Console.log()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>For general output of logging information. You may use <a href=\"/zh-TW/docs/Web/API/console#Using_string_substitutions\" aria-current=\"page\">string substitution</a> and additional arguments with this method.</p>\n  </dd>\n  <dt id=\"console.profile_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/profile\"><code>Console.profile()</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>Starts the browser's built-in profiler (for example, the <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html\" class=\"external\" rel=\" noopener\">Firefox performance tool</a>). You can specify an optional name for the profile.</p>\n  </dd>\n  <dt id=\"console.profileend_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/profileEnd\"><code>Console.profileEnd()</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>Stops the profiler. You can see the resulting profile in the browser's performance tool (for example, the <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html\" class=\"external\" rel=\" noopener\">Firefox performance tool</a>).</p>\n  </dd>\n  <dt id=\"console.table_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/table\"><code>Console.table()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Displays tabular data as a table.</p>\n  </dd>\n  <dt id=\"console.time_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/time\"><code>Console.time()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Starts a <a href=\"/zh-TW/docs/Web/API/console#Timers\" aria-current=\"page\">timer</a> with a name specified as an input parameter. Up to 10,000 simultaneous timers can run on a given page.</p>\n  </dd>\n  <dt id=\"console.timeend_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/timeEnd\"><code>Console.timeEnd()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Stops the specified <a href=\"/zh-TW/docs/Web/API/console#Timers\" aria-current=\"page\">timer</a> and logs the elapsed time in seconds since it started.</p>\n  </dd>\n  <dt id=\"console.timestamp_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/timeStamp\"><code>Console.timeStamp()</code> <small>(en-US)</small></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>Adds a marker to the browser's <a href=\"https://developer.chrome.com/devtools/docs/timeline\" class=\"external\" rel=\" noopener\">Timeline</a> or <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/waterfall/index.html\" class=\"only-in-en-us external\" title=\"Currently only available in English (US)\" rel=\" noopener\">Waterfall (en-US)</a> tool.</p>\n  </dd>\n  <dt id=\"console.trace_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/trace\"><code>Console.trace()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Outputs a <a href=\"/zh-TW/docs/Web/API/console#Stack_traces\" aria-current=\"page\">stack trace</a>.</p>\n  </dd>\n  <dt id=\"console.warn_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/warn\"><code>Console.warn()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Outputs a warning message. You may use <a href=\"/zh-TW/docs/Web/API/console#Using_string_substitutions\" aria-current=\"page\">string substitution</a> and additional arguments with this method.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"usage","title":"Usage","isH3":false,"content":""}},{"type":"prose","value":{"id":"outputting_text_to_the_console","title":"Outputting text to the console","isH3":true,"content":"<p>The most frequently-used feature of the console is logging of text and other data. There are four categories of output you can generate, using the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/log\"><code>console.log()</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/info\"><code>console.info()</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/warn\"><code>console.warn()</code> <small>(en-US)</small></a>, and <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/error\"><code>console.error()</code> <small>(en-US)</small></a> methods respectively. Each of these results in output styled differently in the log, and you can use the filtering controls provided by your browser to only view the kinds of output that interest you.</p>\n<p>There are two ways to use each of the output methods; you can simply pass in a list of objects whose string representations get concatenated into one string, then output to the console, or you can pass in a string containing zero or more substitution strings followed by a list of objects to replace them.</p>\n<h4 id=\"outputting_a_single_object\">Outputting a single object</h4>\n<p>The simplest way to use the logging methods is to output a single object:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> someObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">str</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Some text\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>someObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The output looks something like this:</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">[09:27:13.475] ({str:\"Some text\", id:5})\n</pre></div>\n<h4 id=\"outputting_multiple_objects\">Outputting multiple objects</h4>\n<p>You can also output multiple objects by simply listing them when calling the logging method, like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> car <span class=\"token operator\">=</span> <span class=\"token string\">\"Dodge Charger\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> someObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">str</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Some text\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My first car was a\"</span><span class=\"token punctuation\">,</span> car<span class=\"token punctuation\">,</span> <span class=\"token string\">\". The object is:\"</span><span class=\"token punctuation\">,</span> someObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This output will look like this:</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">[09:28:22.711] My first car was a Dodge Charger . The object is: ({str:\"Some text\", id:5})\n</pre></div>\n<h4 id=\"using_string_substitutions\">Using string substitutions</h4>\n<p>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6) introduced support for string substitutions. When passing a string to one of the console object's methods that accepts a string, you may use these substitution strings:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Substitution string</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>%o or %O</td>\n      <td>Outputs a JavaScript object. Clicking the object name opens more information about it in the inspector.</td>\n    </tr>\n    <tr>\n      <td>%d or %i</td>\n      <td>Outputs an integer. Number formatting is supported, for example <code>console.log(\"Foo %.2d\", 1.1)</code> will output the number as two significant figures with a leading 0: <code>Foo 01</code></td>\n    </tr>\n    <tr>\n      <td>%s</td>\n      <td>Outputs a string.</td>\n    </tr>\n    <tr>\n      <td>%f</td>\n      <td>Outputs a floating-point value. Formatting is supported, for example <code>console.log(\"Foo %.2f\", 1.1)</code> will output the number to 2 decimal places: <code>Foo 1.10</code></td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>備註：</strong> Precision formatting doesn't work in Chrome</p>\n</div>\n<p>Each of these pulls the next argument after the format string off the parameter list. For example:</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">for (var i=0; i&lt;5; i++) {\n  console.log(\"Hello, %s. You've called me %d times.\", \"Bob\", i+1);\n}\n</pre></div>\n<p>The output looks like this:</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">[13:14:13.481] Hello, Bob. You've called me 1 times.\n[13:14:13.483] Hello, Bob. You've called me 2 times.\n[13:14:13.485] Hello, Bob. You've called me 3 times.\n[13:14:13.487] Hello, Bob. You've called me 4 times.\n[13:14:13.488] Hello, Bob. You've called me 5 times.\n</pre></div>\n<h4 id=\"styling_console_output\">Styling console output</h4>\n<p>You can use the <code>%c</code> directive to apply a CSS style to console output:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is %cMy stylish message\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"color: yellow; font-style: italic; background-color: blue;padding: 2px\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The text before the directive will not be affected, but the text after the directive will be styled using the CSS declarations in the parameter.\n  <img src=\"/en-US/docs/Web/API/Console/css-styling.png\" alt=\"\" width=\"198\" height=\"29\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>備註：</strong> Quite a few CSS properties are supported by this styling; you should experiment and see which ones prove useful.</p>\n</div>"}},{"type":"prose","value":{"id":"using_groups_in_the_console","title":"Using groups in the console","isH3":true,"content":"<p>You can use nested groups to help organize your output by visually combining related material. To create a new nested block, call <code>console.group()</code>. The <code>console.groupCollapsed()</code> method is similar but creates the new block collapsed, requiring the use of a disclosure button to open it for reading.</p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>備註：</strong> Collapsed groups are not supported yet in Gecko; the <code>groupCollapsed()</code> method is the same as <code>group()</code> at this time.</p>\n</div>\n<p>To exit the current group, simply call <code>console.groupEnd()</code>. For example, given this code:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is the outer level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Level 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Level 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"More of level 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">groupEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Back to level 2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">groupEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Back to the outer level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The output looks like this:</p>\n<p>\n  <img src=\"/@api/deki/files/6082/=nesting.png\" alt=\"nesting.png\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"timers","title":"Timers","isH3":true,"content":"<p>In order to calculate the duration of a specific operation, Gecko 10 introduced the support of timers in the <code>console</code> object. To start a timer, call the <code>console.time``()</code> method, giving it a name as the only parameter. To stop the timer, and to get the elapsed time in milliseconds, just call the <code>console.timeEnd()</code> method, again passing the timer's name as the parameter. Up to 10,000 timers can run simultaneously on a given page.</p>\n<p>For example, given this code:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"answer time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Click to continue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timeEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"answer time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Will log the time needed by the user to discard the alert box:</p>\n<p>\n  <img src=\"/@api/deki/files/6084/=timerresult.png\" alt=\"timerresult.png\" loading=\"lazy\">\n</p>\n<p>Notice that the timer's name is displayed both when the timer is started and when it's stopped.</p>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>備註：</strong> It's important to note that if you're using this to log the timing for network traffic, the timer will report the total time for the transaction, while the time listed in the network panel is just the amount of time required for the header. If you have response body logging enabled, the time listed for the response header and body combined should match what you see in the console output.</p>\n</div>"}},{"type":"prose","value":{"id":"stack_traces","title":"Stack traces","isH3":true,"content":"<p>The console object also supports outputting a stack trace; this will show you the call path taken to reach the point at which you call <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/console/trace\"><code>console.trace()</code> <small>(en-US)</small></a>. Given code like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The output in the console looks something like this:</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/Console/api-trace2.png\" alt=\"\" width=\"499\" height=\"123\" loading=\"lazy\">\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://console.spec.whatwg.org/#console-namespace","title":"Console Standard"}],"query":"api.console"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.console","dataURL":"/zh-TW/docs/Web/API/Console/bcd.json"}},{"type":"prose","value":{"id":"notes","title":"Notes","isH3":false,"content":"<ul>\n  <li>At least in Firefox, if a page defines a <code>console</code> object, that object overrides the one built into Firefox.</li>\n  <li>Prior to <span title=\"(Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9)\">Gecko&nbsp;12.0</span>, the console object's methods only work when the Web Console is open. Starting with <span title=\"(Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9)\">Gecko&nbsp;12.0</span>, output is cached until the Web Console is opened, then displayed at that time.</li>\n  <li>It's worth noting that the Firefox's built-in <code>Console</code> object is compatible with the one provided by <a href=\"https://getfirebug.com/\" class=\"external\" rel=\" noopener\">Firebug</a>.</li>\n</ul>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://firefox-source-docs.mozilla.org/devtools-user/index.html\" class=\"external\" rel=\" noopener\">Tools</a></li>\n  <li><a href=\"https://firefox-source-docs.mozilla.org/devtools-user/web_console/index.html\" class=\"external\" rel=\" noopener\">Web Console</a> — how the Web Console in Firefox handles console API calls</li>\n  <li><a href=\"https://firefox-source-docs.mozilla.org/devtools-user/remote_debugging/index.html\" class=\"external\" rel=\" noopener\">Remote debugging</a> — how to see console output when the debugging target is a mobile device</li>\n  <li><a href=\"/zh-TW/docs/Mozilla/Firefox_OS/Debugging/On-device_console_logging\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">On-device console logging</a> — how to do logging on Firefox OS devices</li>\n</ul>"}},{"type":"prose","value":{"id":"other_implementations","title":"Other implementations","isH3":true,"content":"<ul>\n  <li><a href=\"https://developers.google.com/chrome-developer-tools/docs/console-api\" class=\"external\" rel=\" noopener\">Google Chrome DevTools</a></li>\n  <li><a href=\"https://getfirebug.com/wiki/index.php/Console_API\" class=\"external\" rel=\" noopener\">Firebug</a></li>\n  <li><a href=\"http://msdn.microsoft.com/en-us/library/hh772173(v=vs.85).aspx\" class=\"external\" rel=\" noopener\">Internet Explorer</a></li>\n  <li><a href=\"https://developer.apple.com/library/safari/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Console/Console.html\" class=\"external\" rel=\" noopener\">Safari</a></li>\n</ul>"}}],"toc":[{"text":"Methods","id":"methods"},{"text":"Usage","id":"usage"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"Notes","id":"notes"},{"text":"See also","id":"see_also"}],"summary":"The Console object provides access to the browser's debugging console (e.g. the Web Console in Firefox). The specifics of how it works varies from browser to browser, but there is a de facto set of features that are typically provided.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"console","locale":"en-US","native":"English (US)"},{"title":"Consola","locale":"es","native":"Español"},{"title":"Console","locale":"fr","native":"Français"},{"title":"console","locale":"ja","native":"日本語"},{"title":"console","locale":"ko","native":"한국어"},{"title":"Console","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Console","locale":"ru","native":"Русский"},{"title":"Console","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/api/console","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/api/console/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/API","title":"Web APIs"},{"uri":"/zh-TW/docs/Web/API/Console","title":"Console"}],"pageTitle":"Console - Web APIs | MDN","noIndexing":false}}