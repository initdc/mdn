{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"使用IndexedDB","mdn_url":"/zh-TW/docs/Web/API/IndexedDB_API/Using_IndexedDB","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>IndexedDB 提供了在瀏覽器上儲存保留資料的功能，藉由它，不論是線上或線下我們的應用都可以進行資料存取。</p>"}},{"type":"prose","value":{"id":"關於本文","title":"關於本文","isH3":false,"content":"<p>本文會帶領各位操作非同步 IndexedDB 的 API，如果不知道甚麼是 IndexedDB，請先看看<a href=\"/en-US/docs/Web/API/IndexedDB_API/Basic_Terminology\">\"IndexedDB 基本礎念\"</a>。</p>"}},{"type":"prose","value":{"id":"基本操作步驟","title":"基本操作步驟","isH3":false,"content":"<p>操作 IndexedDB 的基本步驟建議如下:</p>\n<ol>\n  <li>開啟資料庫和交易(transaction)。</li>\n  <li>建立物件存檔(object store)</li>\n  <li>發出資料庫操作請求，例如新增或取得資料。</li>\n  <li>聆聽對應 DOM 事件等待操作完成。</li>\n  <li>從 result 物件上取得結果進行其他工作。</li>\n</ol>\n<p>好了，知道了上述概念後，我們可以來實際做些甚麼。</p>"}},{"type":"prose","value":{"id":"建立和結構資料庫","title":"建立和結構資料庫","isH3":false,"content":"<p>由於 IndexedDB 的標準仍在演進，所以目前一些實作還需要加上瀏覽器前綴標示(如 Gecko 基礎瀏覽器的前綴標示為 moz，WebKit 基礎瀏覽器的前綴標示為 webkit)，瀏覽器的實作也可能會有所差異，不過一旦共識標準達成，無瀏覽器前綴標示實作將出現。其實，Internet Explorer 10, Firefox 16, Chrome 24 已經有了無瀏覽器前綴標示實作。</p>"}},{"type":"prose","value":{"id":"操作實驗性質的_indexeddb","title":"操作實驗性質的 IndexedDB","isH3":true,"content":"<p>如果需要試驗瀏覽器的前綴標示，可以如下:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// In the following line, you should include the prefixes of implementations you want to test.</span>\nwindow<span class=\"token punctuation\">.</span>indexedDB <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>mozIndexedDB <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitIndexedDB <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>msIndexedDB<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// DON'T use \"var indexedDB = ...\" if you're not in a function.</span>\n<span class=\"token comment\">// Moreover, you may need references to some window.IDB* objects:</span>\nwindow<span class=\"token punctuation\">.</span>IDBTransaction <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>IDBTransaction <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitIDBTransaction <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>msIDBTransaction<span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>IDBKeyRange <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>IDBKeyRange <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitIDBKeyRange <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>msIDBKeyRange<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// (Mozilla has never prefixed these objects, so we don't need window.mozIDB*)</span>\n</code></pre></div>\n<p>請注意瀏覽器前綴標示的實作可能不完整、有些問題或仍然遵守舊版標準，因此不建議在正式版程式碼中使用。與其宣稱支援又有問題，倒不如直接不支援。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your browser doesn't support a stable version of IndexedDB. Such and such feature will not be available.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"開啟資料庫","title":"開啟資料庫","isH3":true,"content":"<p>開頭如下:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Let us open our database</span>\n<span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyTestDatabase\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>注意到了嗎，開啟資料庫必須要進行請求。</p>\n<p>開啟請求並不會立刻開啟資料庫或交易，呼叫 open()方法會回傳一個<a href=\"/en-US/docs/Web/API/IDBOpenDBRequest\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">IDBOpenDBRequest (en-US)</a>物件，這個物件擁有兩個事件(success 和 error)。大部分 IndexedDB 的非同步功能都會回傳一個<a href=\"/en-US/docs/Web/API/IDBDatabase\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">IDBDatabase (en-US)</a>類物件，然後我們可以註冊成功和失敗事件處理器。</p>\n<p>Open 方法第二個參數是資料庫版本，資料庫版本決定了資料庫結構，也就是資料庫物件存檔的結構。如果請求版本不存在(比如因為這是一個新資料庫或是資料庫版本已升級)，onupgradeneeded 事件會被觸發，然後我們可以在 onupgradeneeded 事件處理器中再建立新的版本，下面<a href=\"#updating_the_version_of_the_database\">升級資料庫版本</a>有更詳細的說明。</p>\n<h4 id=\"產生事件處理器\">產生事件處理器</h4>\n<p>幾乎所有第一件要對請求做的事都是產生 success 和 error 事件處理器:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>request<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Do something with request.errorCode!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Do something with request.result!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>如果一切正常，success 事件(也就是 DOM 事件的 type 屬性設為 success)會以 request 為目標觸發，然後 request 物件上的 onsuccess 函數接著被呼叫，其中 success 事件就是參數；否則 error 事件(也就是 DOM 事件的 type 屬性設為 error)會以 request 為目標觸發，然後 request 物件上的 onerror 函數接著被呼叫，其中 error 事件就是參數。</p>\n<p>IndexedDB 的 API 設計上盡量減少錯誤處理，所以不太常看到錯誤事件，不過開啟資料庫的時候還是有一些狀況會產產生錯誤，最常見的狀況是使用者拒絕我們建立資料庫。</p>\n<p>IndexedDB 設計目標之一為存放大量資料以供離線使用(請參考<a href=\"/zh-TW/IndexedDB#Storage_limits\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">\"儲存限制\"</a>了解更多細節)。但很明顯地，瀏覽器又不樂見一些廣告網站或惡意網站汙染電腦，所以當任一個網路應用第一次開啟 IndexedDB 資料庫，瀏覽器會徵詢使用者是否准許其作業；同時在私密瀏覽中開啟作業也會失敗，因為私密瀏覽不會留下任何瀏覽痕跡。</p>\n<p>這裡呼叫 indexedDB.open()開啟 indexedDB 資料庫並回傳 request 物件，假設使用者允許我們建立 indexedDB 資料庫，我們也收到 suceess 事件觸發了 success 回呼函數(callback)，request 物件的 result 屬性會是一個 IDBDatabase 物件 ，接下來便是要儲存這個物件之後使用。下方是整個作業的示範程式碼:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> db<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyTestDatabase\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Why didn't you allow my web app to use IndexedDB?!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  db <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"錯誤處理\">錯誤處理</h4>\n<p>錯誤事件會向上傳遞；錯誤事件以產生錯誤之請求為目標觸發，然後一路傳遞到交易，最後到資料庫物件；如果不想要為每一個請求新增錯誤處理器，可以改為資料庫物件加入一個錯誤處理器。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>db<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Generic error handler for all errors targeted at this database's</span>\n  <span class=\"token comment\">// requests!</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Database error: \"</span> <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>errorCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>最常見的錯誤之一就是 VER_ERR，該錯誤代表現在資料料庫版本大於嘗試開啟的資料庫版本，這項錯誤必須要有錯誤處理器處理。</p>"}},{"type":"prose","value":{"id":"建立或更新資料庫版本","title":"建立或更新資料庫版本","isH3":true,"content":"<p>新版本資料庫建立會觸發 onupgradeneeded 事件，在這個事件的處理器中要建立這個版本資料庫需要的物件存檔。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// This event is only implemented in recent browsers</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onupgradeneeded</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create an objectStore for this database</span>\n  <span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">createObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">keyPath</span><span class=\"token operator\">:</span> <span class=\"token string\">\"myKey\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>資料庫版本是 unsigned long long 的數字，所以能夠非常長。</p>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>警告：</strong> 請注意這也意味著版本不能為浮點數，否則小數點部分將會無條件捨去，而交易也可能不會開始，upgradeneeded 事件也不會觸發。不要像以下例子以 2.4 作版本:</p>\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyTestDatabase\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// don't do this, as the version will be rounded to 2</span>\n</code></pre></div>\n</div>\n<p>升級版本資料庫建立會觸發 onupgradeneeded 事件，這個時候資料庫裡面已經含有前版本下的物件存檔，所以說不需要再次建立這些物件存檔了，剩下的是新增或刪除物件存檔。如果想要更動既存物件存檔(例如改變資料鍵路徑)，那麼會需要先刪除舊的再產生一個新的(請注意這也會刪除物件存檔裡的資料，所以如果資料需要保留的話，請在升級前先讀出資料備份。)</p>\n<p>Webkit 支援最新標準不過只有 Chrome 23 才開始導入，而較舊不支援最新版標準的版本則不支援 indexedDB.open(name, version).onupgradeneeded。關於如何在舊版標準下升級資料庫版本請參考<a href=\"/zh-TW/docs/Web/API/IDBDatabase?redirectlocale=en-US&amp;redirectslug=IndexedDB%2FIDBDatabase#setVersion%28%29_.0A.0ADeprecated\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">\"IDBDatabase 參考文章\"</a>。</p>"}},{"type":"prose","value":{"id":"結構化資料庫","title":"結構化資料庫","isH3":true,"content":"<p>indexedDB 不用資料表而是物件存檔，物件存檔可以有很多。一筆物件存檔裡的資料值對應一筆資料鍵，依據使用{資料鍵路徑(<a href=\"/zh-TW/IndexedDB#gloss_key_path\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">key path</a>)}或{資料鍵產生器(<a href=\"/zh-TW/IndexedDB#gloss_key_generator\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">key generator</a>)}。</p>\n<p>下表列出資料建各類產生途徑:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Key Path</th>\n      <th>Key Generator</th>\n      <th>描述</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>No</td>\n      <td>No</td>\n      <td>物件存檔資料值能為任何型別，即使像數字或字串。每當新增一筆資料，必須提供不同的資料鍵。</td>\n    </tr>\n    <tr>\n      <td>Yes</td>\n      <td>No</td>\n      <td>物件存檔資料值僅能為 Javacript 物件，而該資料物件必須含有和資料鍵路徑相同名稱之屬性成員。</td>\n    </tr>\n    <tr>\n      <td>No</td>\n      <td>Yes</td>\n      <td>物件存檔資料值能為任何型別，資料鍵自動產生，但如果想要指定資料鍵也可以另外提供資料鍵。</td>\n    </tr>\n    <tr>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>物件存檔資料值僅能為 Javascript 物件。通常被產生的新資料鍵的值會被存在物件屬性名稱和資料鍵路徑名稱相同的物件屬性下，如果這個屬性已經存在，這個已經存在之屬性之值將被用作為資料鍵，而非新產生的資料鍵。</td>\n    </tr>\n  </tbody>\n</table>\n<p>我們可以替任何儲存資料為物件型態而非原始資料型態的物件存檔建立索引，索引讓我們能夠用物件存檔中資料物件內的某一個屬性值查找資料，而非僅僅物件的資料鍵。</p>\n<p>除此之外，利用索引還可以施加簡單的儲存限制；建立索引時設定獨特旗標(flag)，這個索引保證在此索引資料鍵下不會存在兩個物件存檔擁有同樣資料值，比如說現在有一個存放許多使用者的物件存檔，而且我們希望保證不會存在有兩個使用者的電子郵件地址一樣，此使索引的獨特旗標便可以幫助我們達成目標。</p>\n<p>以上聽起來可能會有些複雜，請看一下下面的實例:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// This is what our customer data looks like.</span>\n<span class=\"token keyword\">const</span> customerData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ssn</span><span class=\"token operator\">:</span> <span class=\"token string\">\"444-44-4444\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bill\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bill@company.com\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ssn</span><span class=\"token operator\">:</span> <span class=\"token string\">\"555-55-5555\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Donna\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token string\">\"donna@home.org\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dbName <span class=\"token operator\">=</span> <span class=\"token string\">\"the_name\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>dbName<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Handle errors.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onupgradeneeded</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create an objectStore to hold information about our customers. We're</span>\n  <span class=\"token comment\">// going to use \"ssn\" as our key path because it's guaranteed to be</span>\n  <span class=\"token comment\">// unique.</span>\n  <span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">createObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">keyPath</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ssn\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create an index to search customers by name. We may have duplicates</span>\n  <span class=\"token comment\">// so we can't use a unique index.</span>\n  objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create an index to search customers by email. We want to ensure that</span>\n  <span class=\"token comment\">// no two customers have the same email, so use a unique index.</span>\n  objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"email\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Store values in the newly created objectStore.</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token keyword\">in</span> customerData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>customerData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>請注意 onupgradeneeded 事件是唯一能夠變更資料庫結構之處，在此事件才能建立或刪除物件存檔以及建立和刪除索引。</p>\n<p>呼叫<a href=\"/zh-TW/docs/Web/API/IDBDatabase?redirectlocale=en-US&amp;redirectslug=IndexedDB%2FIDBDatabase#setVersion%28%29_.0A.0ADeprecated\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBDatabase</a>類別物件的 createObjectStore 方法會立刻創造一個物件存檔，這個方法接收兩個參數，一個是物件存檔名稱，一個是非必填的參數物件，雖然參數物件不為必填但是卻相當重要，因為它讓我們定義了一些重要屬性(請參考<a href=\"/zh-TW/docs/Web/API/IDBDatabase?redirectlocale=en-US&amp;redirectslug=IndexedDB%2FIDBDatabase#createObjectStore\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">createObjectStore</a>)。本例中我們要求建立了一個\"customer\"物件存檔，定義\"ssn\"屬性為資料件路徑，使用\"ssn\"作為資料鍵路徑是因為每個客戶的 ssn 碼一定是獨立的。一旦決定了\"ssn\"作為資料鍵路徑，那麼每一筆資料一定要含有\"ssn\"。</p>\n<p>本例還創建一個稱為\"name\"的索引，\"name\"索引查找目標為資料的\"name\"屬性，且不設立其獨特旗標(unique 為 false)，同樣地，我們又呼叫<a href=\"/zh-TW/docs/Web/API/IDBObjectStore?redirectlocale=en-US&amp;redirectslug=IndexedDB%2FIDBObjectStore#createIndex()\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">createIndex</a>方法創建了一個\"email\"索引，不過\"email\"索引具備獨特旗標(unique 為 true)。雖然存在\"name\"索引，但資料不一定要含有\"name\"屬性，只是當搜索\"name\"索引時資料不會出現。</p>\n<p>接下來我們可以開始用 ssn 從物件存檔中取出資料，或是用索引找出資料(請參考<a href=\"/zh-TW/docs/Web/API/IndexedDB_API/Using_IndexedDB#.e4.bd.bf.e7.94.a8.e7.b4.a2.e5.bc.95\">使用索引</a>)。</p>"}},{"type":"prose","value":{"id":"使用資料鍵產生器","title":"使用資料鍵產生器","isH3":true,"content":"<p>當建立物件存檔時設定 autoIncrement 旗標為 ture 將啟動資料鍵產生器，預設上該旗標為 false。</p>\n<p>有了資料鍵產生器，當新增資料到物件存檔中，資料鍵產生器會自動幫我們產生資料鍵。資料鍵產生器產生的資料鍵由整數 1 開始，而基本上新產生的資料鍵是由前一個資料鍵加 1 產生。資料鍵的產生不會因為資料刪除或清空所有資料而重新開始起算，所以資料鍵值是一直累加上去的，除非資料庫操作中斷，整個交易作業被取消。</p>\n<p>我們可以建立一個有資料鍵產生器的物件存檔如下:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Open the indexedDB.</span>\n<span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>dbName<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onupgradeneeded</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create another object store called \"names\" with the autoIncrement flag set as true.</span>\n    <span class=\"token keyword\">var</span> objStore <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">createObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"names\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">autoIncrement</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Because the \"names\" object store has the key generator, the key for the name value is generated automatically.</span>\n    <span class=\"token comment\">// The added records would be like:</span>\n    <span class=\"token comment\">// key : 1 =&gt; value : \"Bill\"</span>\n    <span class=\"token comment\">// key : 2 =&gt; value : \"Donna\"</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token keyword\">in</span> customerData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        objStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>customerData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>關於資料鍵產生器細節，請參考<a href=\"https://www.w3.org/TR/IndexedDB/#key-generator-concept\" class=\"external\" rel=\" noopener\">\"W3C Key Generators\"</a>。</p>"}},{"type":"prose","value":{"id":"新增和刪除資料","title":"新增和刪除資料","isH3":false,"content":"<p>在操作資料庫之前必須要先進行交易，交易來自資料庫物件，在交易中要指定涵蓋物件存檔範圍，然後也要決定是要變更資料庫或純粹讀取資料。交易共有三種種類，分別是讀取(read-only)，讀寫(read/write), 以及版本變更(versionchange)，如果只需要讀資料最好只使用讀取(read-only)交易，因為讀取(read-only)交易可以多重同步進行。</p>"}},{"type":"prose","value":{"id":"新增資料到資料庫","title":"新增資料到資料庫","isH3":true,"content":"<p>創建資料庫後，如果要寫入資料請這麼做:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Note: Older experimental implementations use the deprecated constant IDBTransaction.READ_WRITE instead of \"readwrite\".</span>\n<span class=\"token comment\">// In case you want to support such an implementation, you can just write:</span>\n<span class=\"token comment\">// var transaction = db.transaction([\"customers\"], IDBTransaction.READ_WRITE);</span>\n</code></pre></div>\n<p>呼叫<a href=\"/zh-TW/docs/Web/API/IDBDatabase#transaction\">transaction()</a>方法會回傳一個交易物件。transaction()第一個接受參數代表交易涵蓋的物件存檔，雖然傳入空陣列會讓交易涵蓋所有物件存檔，但請不要這麼做，因為根據正式標準傳入空陣列應該要導致 InvalidAccessError 錯誤；第二個參數代表交易種類，不傳入的話預設為讀取交易，本例要寫入資料庫所以傳入讀寫(\"readwrite\")。</p>\n<p>交易的生命週期和事件循環關係密切。當我們發起交易又回到事件循環中後，如果忽略，那麼交易將轉成結束，唯一保持交易存活的方法是在交易上發出請求；當請求完成後我們會收到 DOM 事件，假設請求結果成功，我們可以在事件的回呼函數(callback 中)繼續進行交易，反之，如果我們沒有繼續進行交易，那麼交易將結束，也就是說只要尚有未完成請求的話，交易就會繼續存活，如果收到 TRANSACTION_INACTIVE_ERR 錯誤那便意謂著交易早已結束，我們錯過了繼續進行交易的機會。</p>\n<p>交易能收到三種事件: 錯誤(error)、中斷(abort)以及完成(complete)，其中錯誤事件會向上傳遞，所以任何一個交易下轄的請求產生錯誤事件，該交易都會收到。如果交易收到錯誤事件時，瀏覽器預設行為會中斷交易，除非我們有在錯誤事件上呼叫 preventDefault()阻擋瀏覽器預設行動，否則整筆交易都將取消、復原，這樣的設計告訴我們必須要思考如何處裡錯誤，或者說如果對每一個錯誤進行處裡過於麻煩，那麼至少加入一個概括性的錯誤處理器也是可以。只要不處裡錯誤或呼叫 abort()，交易將取消、復原，然後中斷事件接著觸發，反之，當所有請求都完成後，我們會收到一個完成事件，所以說如果我們同時發起多項請求時，可以只追蹤單一交易而非個別請求，這樣會大大減輕我們的負擔。</p>\n<p>有了交易之後便能夠從中取得物件存檔，有了物件存檔便能夠新增資料(請注意唯有在建立交易時指定的物件存檔能夠取得)。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Do something when all the data is added to the database.</span>\ntransaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncomplete</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All done!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ntransaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Don't forget to handle errors!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token keyword\">in</span> customerData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>customerData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  request<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// event.target.result == customerData[i].ssn;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>呼叫<a href=\"/en-US/docs/Web/API/IDBObjectStore\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">add (en-US)</a>方法可以加入一筆新資料，呼叫後會回傳一個<a href=\"/zh-TW/docs/Web/API/IDBRequest?redirectlocale=en-US&amp;redirectslug=IndexedDB%2FIDBRequest\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBRequest</a>物件，即為上方範例中的 request，如果新增成功，request 的成功事件會被觸發，而成功事件物件中有一個 result 屬性，這個 result 值剛好就等於新資料的資料鍵，所以說上方範例中的 event.target.result 剛好就等於顧客的 ssn 值(因為我們用 ssn 屬性作為資料鍵路徑)。請注意 add 方法只在當物件存檔中沒有相同資料鍵資料存在時有用，如果想要更動或是直接覆蓋現存資料請呼叫<a href=\"/en-US/docs/Web/API/IDBObjectStore\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">put (en-US)</a>方法。</p>"}},{"type":"prose","value":{"id":"移除資料","title":"移除資料","isH3":false,"content":"<p>移除資料十分容易:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"444-44-4444\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// It's gone!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"讀取資料","title":"讀取資料","isH3":false,"content":"<p>要圖取資料庫內的資料有數種途徑，第一個最簡單的途徑就是提供資料鍵，呼叫<a href=\"/en-US/docs/Web/API/IDBObjectStore\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">get (en-US)</a>方法取得資料:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"444-44-4444\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Handle errors!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Do something with the request.result!</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name for SSN 444-44-4444 is \"</span> <span class=\"token operator\">+</span> request<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>假設我們把錯誤處理放在資料庫層級，我們可以再縮短上面的程式碼如下:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"444-44-4444\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name for SSN 444-44-4444 is \"</span> <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>呼叫 transcation 方法而不指定模式會開啟讀取(readonly)模式，接著取得我們的目標物件存檔，輸入目標資料的資料鍵，呼叫 get 方法取得請求物件，然後在請求物件上註冊成功事件處理器，當作業成功後，成功事件會觸發，成功事件的物件中含有請求物件(event.target 如上述範例)，請求物件中含有請求結果(event.target.result 如上述範例)。</p>"}},{"type":"prose","value":{"id":"使用指標cursor","title":"使用指標(Cursor)","isH3":false,"content":"<p>使用 get 方法需要知道資料鍵，如果想要一一存取物件存檔中的資料，我們可以利用指標:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobjectStore<span class=\"token punctuation\">.</span><span class=\"token function\">openCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> cursor <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name for SSN \"</span> <span class=\"token operator\">+</span> cursor<span class=\"token punctuation\">.</span>key <span class=\"token operator\">+</span> <span class=\"token string\">\" is \"</span> <span class=\"token operator\">+</span> cursor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No more entries!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"/en-US/docs/Web/API/IDBObjectStore\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">openCursor (en-US)</a>方法第一個參數用來接受資料鍵範圍物件來限制存取資料範圍，第二個參數用來指定存取進行方向，像上面的範例程式便是以資料鍵由小到大之方向存取資料；呼叫 openCursor 方法後一樣會回傳一個請求物件，成功時成功事件會觸發，不過這裡有些地方要特別注意，當成功事件處裡函數被喚起時，指標物件(cursor)會存放在 result 屬性內(亦即上述 event.target.result)，cursor 物件下有兩個屬性，key 屬性是資料鍵，value 屬性是資料值，如果要取得下一份資料就呼叫 cursor 的 continue()方法，然後 cursor 物件就會指向下一份資料，當沒有資料時，cursor 會是 undefined，當請求一開始便找沒有資料，result 屬性也會是 undefined。</p>\n<p>以下用 cursor 存取一遍資料後放在陣列中的作法相當常見:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> customers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nobjectStore<span class=\"token punctuation\">.</span><span class=\"token function\">openCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> cursor <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    customers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Got all customers: \"</span> <span class=\"token operator\">+</span> customers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard warning\" id=\"sect2\">\n  <p><strong>警告：</strong> 以下範例不是 IndexedDB 標準!</p>\n</div>\n<p>Mozilla 瀏覽器自己做了一個 getAll()方法來方便一次取得所有 cursor 下的資料值，這個方法相當方便，不過請小心未來它有可能會消失。以下程式碼的效果和上面的一樣:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Got all customers: \"</span> <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>一一檢查 cursor 的 value 屬性較不利性能表現，因為物件是被動一一建立，然而呼叫 getAll()，Gecko 一定要一次建立所有物件，所以如果想要一次取得所有物件的資料值陣列使用 getAll()比較好，如果想要一一檢查每筆資料則請利用 cursor 的方法。</p>"}},{"type":"prose","value":{"id":"使用索引","title":"使用索引","isH3":true,"content":"<p>利用一定唯一的 ssn 碼作為資料鍵相當合乎邏輯(隱私權的問題先擱置一放，不在本文探討範圍)。不過當我們想要查詢使用者的名字的時候，如果沒有索引就需要一一檢查每一筆資料，十分沒有效率，所以我們可以建立 name 的索引。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> index <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nindex<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Donna\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Donna's SSN is \"</span> <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>ssn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>因為 name 不是唯一值，所以可能會有多筆資料符合\"Donna\"名字，此時呼叫 get()會取得資料鍵最小值的資料。</p>\n<p>如果我們想要查看特定名字下所有的資料，可以利用 cursor。有兩種 cursor 能用在索引上，第一種一般 cursor 會比對索引值並回傳整份資料(物件存檔中的物件)，第二種資料鍵 cursor 則只會回傳資料鍵值，請參考下方範例比較兩者差異:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>index<span class=\"token punctuation\">.</span><span class=\"token function\">openCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> cursor <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// cursor.key is a name, like \"Bill\", and cursor.value is the whole object.</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name: \"</span> <span class=\"token operator\">+</span> cursor<span class=\"token punctuation\">.</span>key <span class=\"token operator\">+</span> <span class=\"token string\">\", SSN: \"</span> <span class=\"token operator\">+</span> cursor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>ssn <span class=\"token operator\">+</span> <span class=\"token string\">\", email: \"</span> <span class=\"token operator\">+</span> cursor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nindex<span class=\"token punctuation\">.</span><span class=\"token function\">openKeyCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> cursor <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// cursor.key is a name, like \"Bill\", and cursor.value is the SSN.</span>\n    <span class=\"token comment\">// No way to directly get the rest of the stored object.</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name: \"</span> <span class=\"token operator\">+</span> cursor<span class=\"token punctuation\">.</span>key <span class=\"token operator\">+</span> <span class=\"token string\">\", SSN: \"</span> <span class=\"token operator\">+</span> cursor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"設定指標查詢範圍和方向","title":"設定指標查詢範圍和方向","isH3":true,"content":"<p>如果想要限定指標查詢範圍，那麼在乎叫 openCursor()或 openKeyCursor()時第一個參數要傳入<a href=\"/zh-TW/IndexedDB/IDBKeyRange\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBKeyRange</a>物件以限制範圍。IDBKeyRange 物件能夠只聚焦在單一資料鍵上或者一段上下限區間；上下限區間可以是封閉(含界限)或開放(不含界限)，請看以下範例:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Only match \"Donna\"</span>\n<span class=\"token keyword\">var</span> singleKeyRange <span class=\"token operator\">=</span> IDBKeyRange<span class=\"token punctuation\">.</span><span class=\"token function\">only</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Donna\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Match anything past \"Bill\", including \"Bill\"</span>\n<span class=\"token keyword\">var</span> lowerBoundKeyRange <span class=\"token operator\">=</span> IDBKeyRange<span class=\"token punctuation\">.</span><span class=\"token function\">lowerBound</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bill\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Match anything past \"Bill\", but don't include \"Bill\"</span>\n<span class=\"token keyword\">var</span> lowerBoundOpenKeyRange <span class=\"token operator\">=</span> IDBKeyRange<span class=\"token punctuation\">.</span><span class=\"token function\">lowerBound</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bill\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Match anything up to, but not including, \"Donna\"</span>\n<span class=\"token keyword\">var</span> upperBoundOpenKeyRange <span class=\"token operator\">=</span> IDBKeyRange<span class=\"token punctuation\">.</span><span class=\"token function\">upperBound</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Donna\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Match anything between \"Bill\" and \"Donna\", but not including \"Donna\"</span>\n<span class=\"token keyword\">var</span> boundKeyRange <span class=\"token operator\">=</span> IDBKeyRange<span class=\"token punctuation\">.</span><span class=\"token function\">bound</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Donna\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nindex<span class=\"token punctuation\">.</span><span class=\"token function\">openCursor</span><span class=\"token punctuation\">(</span>boundKeyRange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> cursor <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do something with the matches.</span>\n    cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>有時候我們會想要由大到小查看資料而非預設由小到大方向，傳入第二個\"prev\"字串便能做到:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">openCursor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"prev\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> cursor <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do something with the entries.</span>\n    cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>由於\"name\"索引不具唯一性，所以一個名字下可能會出現多筆資料，此時如果想要避開這多筆資料，請傳入\"nextunique\"或\"prevunique\"做為第二個方向參數，當傳入之後，如一個名字下遇到多筆資料，則只有資料鍵最小的資料會被回傳。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>index<span class=\"token punctuation\">.</span><span class=\"token function\">openKeyCursor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"nextunique\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> cursor <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do something with the entries.</span>\n    cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>關於可傳入的方向參數，請參考<a href=\"/zh-TW/docs/Web/API/IDBCursor?redirectlocale=en-US&amp;redirectslug=IndexedDB%2FIDBCursor#Constants\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IDBCursor</a>常數。</p>"}},{"type":"prose","value":{"id":"當網頁應用程式於瀏覽器另一個分頁開啟時變更版本","title":"當網頁應用程式於瀏覽器另一個分頁開啟時變更版本","isH3":false,"content":"<p>請思考以下狀況: 使用者在第一個瀏覽器分頁中使用著舊版本，然後使用者又打開第二個分頁載入網頁，此時我們在新分頁需要對資料庫進行升級，所以呼叫 open()以更新版本開啟資料庫，但是由於第一個瀏覽器分頁並沒有關閉資料庫，因此第二個分頁的資料庫升級作業會被擋住。所以我們需要注意多個分頁同時開啟的狀況，每個分頁都得注意當發生資料庫升級事件時，要記得關閉資料庫，讓資料庫升級作業得以進行。實際作法如下:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> openReq <span class=\"token operator\">=</span> mozIndexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyTestDatabase\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nopenReq<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onblocked</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// If some other tab is loaded with the database, then it needs to be closed</span>\n  <span class=\"token comment\">// before we can proceed.</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please close all other tabs with this site open!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nopenReq<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onupgradeneeded</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// All other databases have been closed. Set everything up.</span>\n  db<span class=\"token punctuation\">.</span><span class=\"token function\">createObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useDatabase</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nopenReq<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">useDatabase</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">useDatabase</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">db</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Make sure to add a handler to be notified if another page requests a version</span>\n  <span class=\"token comment\">// change. We must close the database. This allows the other page to upgrade the database.</span>\n  <span class=\"token comment\">// If you don't do this then the upgrade won't happen until the user closes the tab.</span>\n  db<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onversionchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    db<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A new version of this page is ready. Please reload!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Do stuff with the database.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"安全性","title":"安全性","isH3":false,"content":"<p>\n  IndexedDB 遵守<a href=\"/zh-TW/docs/Web/Security/Same-origin_policy\">同源政策</a>，所以它綁定創建它的來源網站，其他來源網站無法存取。\n  就像對載入<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/frame\"><code>&lt;frame&gt;</code> <small>(en-US)</small></a>和<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code> <small>(en-US)</small></a>網頁的第三方 cookie 所設下的安全性和隱私權考量限制，IndexedDB 無法在載入<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/frame\"><code>&lt;frame&gt;</code> <small>(en-US)</small></a>和<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code> <small>(en-US)</small></a>網頁上運作，詳情請見<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=595307\" class=\"external\" rel=\" noopener\">bug&nbsp;595307</a>。\n</p>"}},{"type":"prose","value":{"id":"瀏覽器關閉風險","title":"瀏覽器關閉風險","isH3":false,"content":"<p>當瀏覽器關閉，例如使用者按下關閉鈕，任何未完成 IndexedDB 交易都將默默中止，這些交易不會完成，錯誤事件也不會觸發。既然瀏覽器可能隨時被關閉，我們無法完全指望任何特定交易一定會完成，或是依賴錯誤事件做出相應處理，針對這種狀況，我們需要注意:</p>\n<p>第一、每一筆交易結束後都應該要保持資料庫完整性，例如說，有一串使用者編輯項目清單正要存入資料庫，我們如果先在一個交易中清除舊清單，然後在另一個交易中存入新清單，那就會面臨到清除完就清單後，新清單存入交易還來不及回存，瀏覽器就關閉的風險，而這個時候資料庫裡面的清單資料將消失。所以比較好的做法應該是在同一筆交易中完成清除舊清單和存入新清單。</p>\n<p>第二、永遠不要在 unload 事件中執行資料庫交易，因為如果 unload 事件是觸發在瀏覽器關閉下，任何資料庫交易都不會發生，或許，瀏覽器(或分頁)打開時讀取資料庫，更新資料庫當使用者編輯資料，當瀏覽器(或分頁)關閉時儲存資料這樣的做法比較直覺，不過資料庫的操作是非同步進行地，所以瀏覽器關閉的執行會在資料庫操作前發生，進而中斷後續非同步的資料庫交易，所以在 unload 事件中執行資料庫交易是行不通地。</p>\n<p>事實上不論瀏覽器是否正常關閉，都沒有任何方法保證 IndexedDB 交易能夠順利完成，請見<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=870645\" class=\"external\" rel=\" noopener\">bug&nbsp;870645</a>。</p>"}},{"type":"prose","value":{"id":"完整_indexeddb_範例","title":"完整 IndexedDB 範例","isH3":false,"content":""}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>IndexedDB Demo: storing blobs, e-publication example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>note<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n        Works and tested with:\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>compat<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>msg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>register-form<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>required<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                Title:\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-title<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-biblioid<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>required<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                Bibliographic ID:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>note<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>(ISBN, ISSN, etc.)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-biblioid<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-biblioid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-year<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                Year:\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>number<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-year<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-year<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-file<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                File image:\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-file<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-file-url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                Online-file image URL:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>note<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>(same origin URL)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-file-url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-file-url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-pane<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>add-button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Add Publication<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>reset<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>register-form-reset<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>delete-form<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tbody</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-biblioid-to-delete<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                Bibliographic ID:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>note<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>(ISBN, ISSN, etc.)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-biblioid-to-delete<span class=\"token punctuation\">\"</span></span>\n                     <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-biblioid-to-delete<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>key-to-delete<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                Key:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>note<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>(for example 1, 2, 3, etc.)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>key-to-delete<span class=\"token punctuation\">\"</span></span>\n                     <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>key-to-delete<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tbody</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-pane<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>delete-button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Delete Publication<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>clear-store-button<span class=\"token punctuation\">\"</span></span>\n               <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Clear the whole store<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>destructive<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search-form<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-pane<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search-list-button<span class=\"token punctuation\">\"</span></span>\n               <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>List database content<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-msg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-viewer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>pub-list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"css","title":"CSS","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 0.8em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Sans-Serif<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">form</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #cccccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0.3em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 0.5em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">table</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border-collapse</span><span class=\"token punctuation\">:</span> collapse<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">input</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0.3em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> #cccccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0.3em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.required:after</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.button-pane</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#pub-viewer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> right<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 48%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 20em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid #d092ff 0.1em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">#pub-viewer iframe</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#pub-list</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 46%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #eeeeee<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0.3em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">#pub-list li</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 0.5em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> 0.5em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 0.5em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#msg</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.action-success</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0.5em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #00d21e<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #eeeeee<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0.2em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.action-failure</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0.5em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ff1408<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #eeeeee<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0.2em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.note</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> smaller<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.destructive</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.destructive:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #ff8000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.destructive:active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> <span class=\"token constant\">COMPAT_ENVS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'Firefox'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&gt;= 16.0\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'Google Chrome'</span><span class=\"token punctuation\">,</span>\n     <span class=\"token string\">\"&gt;= 24.0 (you may need to get Google Chrome Canary), NO Blob storage support\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> compat <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#compat'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  compat<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  compat<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;ul id=\"compat-list\"&gt;&lt;/ul&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token constant\">COMPAT_ENVS</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#compat-list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;li&gt;'</span> <span class=\"token operator\">+</span> val<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">': '</span> <span class=\"token operator\">+</span> val<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/li&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token constant\">DB_NAME</span> <span class=\"token operator\">=</span> <span class=\"token string\">'mdn-demo-indexeddb-epublications'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token constant\">DB_VERSION</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Use a long long for this value (don't use a float)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token constant\">DB_STORE_NAME</span> <span class=\"token operator\">=</span> <span class=\"token string\">'publications'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> db<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Used to keep track of which view is displayed to avoid uselessly reloading it</span>\n  <span class=\"token keyword\">var</span> current_view_pub_key<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">openDb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"openDb ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> req <span class=\"token operator\">=</span> indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DB_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">DB_VERSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Better use \"this\" than \"req\" to get the result to avoid problems with</span>\n      <span class=\"token comment\">// garbage collection.</span>\n      <span class=\"token comment\">// db = req.result;</span>\n      db <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"openDb DONE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"openDb:\"</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>errorCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onupgradeneeded</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"openDb.onupgradeneeded\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> store <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">createObjectStore</span><span class=\"token punctuation\">(</span>\n        <span class=\"token constant\">DB_STORE_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">keyPath</span><span class=\"token operator\">:</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">autoIncrement</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      store<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'biblioid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'biblioid'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      store<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      store<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">'year'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'year'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * @param {string} store_name\n   * @param {string} mode either \"readonly\" or \"readwrite\"\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">store_name<span class=\"token punctuation\">,</span> mode</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> tx <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span>store_name<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> tx<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span>store_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">clearObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">store_name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> store <span class=\"token operator\">=</span> <span class=\"token function\">getObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DB_STORE_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'readwrite'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> req <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">displayActionSuccess</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Store cleared\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">displayPubList</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clearObjectStore:\"</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>errorCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">displayActionFailure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getBlob</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">,</span> success_callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> req <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">success_callback</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * @param {IDBObjectStore=} store\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">displayPubList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">store</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"displayPubList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> store <span class=\"token operator\">==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span>\n      store <span class=\"token operator\">=</span> <span class=\"token function\">getObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DB_STORE_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'readonly'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> pub_msg <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pub-msg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pub_msg<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> pub_list <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pub-list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pub_list<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Resetting the iframe so that it doesn't display previous content</span>\n    <span class=\"token function\">newViewerFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> req<span class=\"token punctuation\">;</span>\n    req <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Requests are executed in the order in which they were made against the</span>\n    <span class=\"token comment\">// transaction, and their results are returned in the same order.</span>\n    <span class=\"token comment\">// Thus the count text below will be displayed before the actual pub list</span>\n    <span class=\"token comment\">// (not that it is algorithmically important in this case).</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      pub_msg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;p&gt;There are &lt;strong&gt;'</span> <span class=\"token operator\">+</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result <span class=\"token operator\">+</span>\n                     <span class=\"token string\">'&lt;/strong&gt; record(s) in the object store.&lt;/p&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"add error\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">displayActionFailure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    req <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">openCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> cursor <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// If the cursor is pointing at something, ask for the data</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"displayPubList cursor:\"</span><span class=\"token punctuation\">,</span> cursor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        req <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> list_item <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;li&gt;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'['</span> <span class=\"token operator\">+</span> cursor<span class=\"token punctuation\">.</span>key <span class=\"token operator\">+</span> <span class=\"token string\">'] '</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'(biblioid: '</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">.</span>biblioid <span class=\"token operator\">+</span> <span class=\"token string\">') '</span> <span class=\"token operator\">+</span>\n                            value<span class=\"token punctuation\">.</span>title <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'&lt;/li&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>year <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            list_item<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">' - '</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blob'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n              <span class=\"token keyword\">typeof</span> value<span class=\"token punctuation\">.</span>blob <span class=\"token operator\">!=</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> link <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;a href=\"'</span> <span class=\"token operator\">+</span> cursor<span class=\"token punctuation\">.</span>key <span class=\"token operator\">+</span> <span class=\"token string\">'\"&gt;File&lt;/a&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            link<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            link<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseenter'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                      <span class=\"token function\">setInViewer</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list_item<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">' / '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            list_item<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            list_item<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" / No attached file\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          pub_list<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>list_item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Move on to the next object in store</span>\n        cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// This counter serves only to create distinct ids</span>\n        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No more entries\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">newViewerFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> viewer <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pub-viewer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    viewer<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> iframe <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;iframe /&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    viewer<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> iframe<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">setInViewer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setInViewer:\"</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    key <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> current_view_pub_key<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n    current_view_pub_key <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> store <span class=\"token operator\">=</span> <span class=\"token function\">getObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DB_STORE_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'readonly'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">getBlob</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blob</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setInViewer blob:\"</span><span class=\"token punctuation\">,</span> blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> iframe <span class=\"token operator\">=</span> <span class=\"token function\">newViewerFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// It is not possible to set a direct link to the</span>\n      <span class=\"token comment\">// blob to provide a mean to directly download it.</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token string\">'text/html'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        reader<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n          iframe<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsText</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        iframe<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">var</span> img_id <span class=\"token operator\">=</span> <span class=\"token string\">'image-'</span> <span class=\"token operator\">+</span> key<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;img id=\"'</span> <span class=\"token operator\">+</span> img_id <span class=\"token operator\">+</span> <span class=\"token string\">'\"/&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> obj_url <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> img_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> obj_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span>obj_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token string\">'application/pdf'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cursor'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wait'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> obj_url <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        iframe<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cursor'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'auto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        iframe<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> obj_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span>obj_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        iframe<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No view available\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * @param {string} biblioid\n   * @param {string} title\n   * @param {number} year\n   * @param {string} url the URL of the image to download and store in the local\n   *   IndexedDB database. The resource behind this URL is subjected to the\n   *   \"Same origin policy\", thus for this method to work, the URL must come from\n   *   the same origin as the web site/app this code is deployed on.\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addPublicationFromUrl</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">biblioid<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addPublicationFromUrl:\"</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Setting the wanted responseType to \"blob\"</span>\n    <span class=\"token comment\">// http://www.w3.org/TR/XMLHttpRequest2/#the-response-attribute</span>\n    xhr<span class=\"token punctuation\">.</span>responseType <span class=\"token operator\">=</span> <span class=\"token string\">'blob'</span><span class=\"token punctuation\">;</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                             console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Blob retrieved\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                             <span class=\"token keyword\">var</span> blob <span class=\"token operator\">=</span> xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">;</span>\n                             console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Blob:\"</span><span class=\"token punctuation\">,</span> blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                             <span class=\"token function\">addPublication</span><span class=\"token punctuation\">(</span>biblioid<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                           <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                             console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addPublicationFromUrl error:\"</span><span class=\"token punctuation\">,</span>\n                                           xhr<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                           <span class=\"token punctuation\">}</span>\n                         <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// We can't use jQuery here because as of jQuery 1.8.3 the new \"blob\"</span>\n    <span class=\"token comment\">// responseType is not handled.</span>\n    <span class=\"token comment\">// http://bugs.jquery.com/ticket/11461</span>\n    <span class=\"token comment\">// http://bugs.jquery.com/ticket/7248</span>\n    <span class=\"token comment\">// $.ajax({</span>\n    <span class=\"token comment\">//   url: url,</span>\n    <span class=\"token comment\">//   type: 'GET',</span>\n    <span class=\"token comment\">//   xhrFields: { responseType: 'blob' },</span>\n    <span class=\"token comment\">//   success: function(data, textStatus, jqXHR) {</span>\n    <span class=\"token comment\">//     console.log(\"Blob retrieved\");</span>\n    <span class=\"token comment\">//     console.log(\"Blob:\", data);</span>\n    <span class=\"token comment\">//     // addPublication(biblioid, title, year, data);</span>\n    <span class=\"token comment\">//   },</span>\n    <span class=\"token comment\">//   error: function(jqXHR, textStatus, errorThrown) {</span>\n    <span class=\"token comment\">//     console.error(errorThrown);</span>\n    <span class=\"token comment\">//     displayActionFailure(\"Error during blob retrieval\");</span>\n    <span class=\"token comment\">//   }</span>\n    <span class=\"token comment\">// });</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * @param {string} biblioid\n   * @param {string} title\n   * @param {number} year\n   * @param {Blob=} blob\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addPublication</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">biblioid<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> blob</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addPublication arguments:\"</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">biblioid</span><span class=\"token operator\">:</span> biblioid<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> title<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> year <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> blob <span class=\"token operator\">!=</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span>\n      obj<span class=\"token punctuation\">.</span>blob <span class=\"token operator\">=</span> blob<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> store <span class=\"token operator\">=</span> <span class=\"token function\">getObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DB_STORE_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'readwrite'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> req<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      req <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'DataCloneError'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">displayActionFailure</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This engine doesn't know how to clone a Blob, \"</span> <span class=\"token operator\">+</span>\n                             <span class=\"token string\">\"use Firefox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Insertion in DB successful\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">displayActionSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">displayPubList</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addPublication error\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">displayActionFailure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * @param {string} biblioid\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">deletePublicationFromBib</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">biblioid</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deletePublication:\"</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> store <span class=\"token operator\">=</span> <span class=\"token function\">getObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DB_STORE_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'readwrite'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> req <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token string\">'biblioid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>biblioid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result <span class=\"token operator\">==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">displayActionFailure</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No matching record found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">deletePublication</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deletePublicationFromBib:\"</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>errorCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * @param {number} key\n   * @param {IDBObjectStore=} store\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">deletePublication</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> store</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deletePublication:\"</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> store <span class=\"token operator\">==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span>\n      store <span class=\"token operator\">=</span> <span class=\"token function\">getObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DB_STORE_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'readwrite'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// As per spec http://www.w3.org/TR/IndexedDB/#object-store-deletion-operation</span>\n    <span class=\"token comment\">// the result of the Object Store Deletion Operation algorithm is</span>\n    <span class=\"token comment\">// undefined, so it's not possible to know if some records were actually</span>\n    <span class=\"token comment\">// deleted by looking at the request result.</span>\n    <span class=\"token keyword\">var</span> req <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> record <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"record:\"</span><span class=\"token punctuation\">,</span> record<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> record <span class=\"token operator\">==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">displayActionFailure</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No matching record found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Warning: The exact same key used for creation needs to be passed for</span>\n      <span class=\"token comment\">// the deletion. If the key was a Number for creation, then it needs to</span>\n      <span class=\"token comment\">// be a Number for deletion.</span>\n      req <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"evt:\"</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"evt.target:\"</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"evt.target.result:\"</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete successful\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">displayActionSuccess</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Deletion successful\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">displayPubList</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deletePublication:\"</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>errorCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    req<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deletePublication:\"</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>errorCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">displayActionSuccess</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    msg <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> msg <span class=\"token operator\">!=</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"Success: \"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">:</span> <span class=\"token string\">\"Success\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#msg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;span class=\"action-success\"&gt;'</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/span&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">displayActionFailure</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    msg <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> msg <span class=\"token operator\">!=</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"Failure: \"</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">:</span> <span class=\"token string\">\"Failure\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#msg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;span class=\"action-failure\"&gt;'</span> <span class=\"token operator\">+</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/span&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">resetActionStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resetActionStatus ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#msg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resetActionStatus DONE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addEventListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addEventListeners\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#register-form-reset'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">resetActionStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#add-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"add ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> title <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pub-title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> biblioid <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pub-biblioid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>title <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>biblioid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">displayActionFailure</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Required field(s) missing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">var</span> year <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pub-year'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>year <span class=\"token operator\">!=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Better use Number.isInteger if the engine has EcmaScript 6</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">displayActionFailure</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid year\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        year <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        year <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">var</span> file_input <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pub-file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> selected_file <span class=\"token operator\">=</span> file_input<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selected_file:\"</span><span class=\"token punctuation\">,</span> selected_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Keeping a reference on how to reset the file input in the UI once we</span>\n      <span class=\"token comment\">// have its value, but instead of doing that we rather use a \"reset\" type</span>\n      <span class=\"token comment\">// input in the HTML form.</span>\n      <span class=\"token comment\">//file_input.val(null);</span>\n      <span class=\"token keyword\">var</span> file_url <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pub-file-url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selected_file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">addPublication</span><span class=\"token punctuation\">(</span>biblioid<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> selected_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file_url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">addPublicationFromUrl</span><span class=\"token punctuation\">(</span>biblioid<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> file_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">addPublication</span><span class=\"token punctuation\">(</span>biblioid<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#delete-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> biblioid <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pub-biblioid-to-delete'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> key <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#key-to-delete'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>biblioid <span class=\"token operator\">!=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">deletePublicationFromBib</span><span class=\"token punctuation\">(</span>biblioid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Better use Number.isInteger if the engine has EcmaScript 6</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">''</span> <span class=\"token operator\">||</span> <span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">displayActionFailure</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        key <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">deletePublication</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#clear-store-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">clearObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> search_button <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#search-list-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    search_button<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">displayPubList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">openDb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">addEventListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Immediately-Invoked Function Expression (IIFE)</span>\n</code></pre></div><a href=\"https://yari-demos.prod.mdn.mozit.cloud/zh-TW/docs/Web/API/IndexedDB_API/Using_IndexedDB/_sample_.Full_IndexedDB_example.html\" class=\"external\" rel=\" noopener\">線上範例</a>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<p>請參考<a href=\"/zh-TW/docs/Web/API/IndexedDB_API\">IndexedDB 文件</a>，看看有甚麼 IndexedDB API 可供使用，實際試玩一下吧。</p>"}},{"type":"prose","value":{"id":"延伸閱讀","title":"延伸閱讀","isH3":false,"content":"<p>參照</p>\n<ul>\n  <li><a href=\"/zh-TW/IndexedDB\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">IndexedDB API Reference</a></li>\n  <li><a href=\"https://www.w3.org/TR/IndexedDB/\" class=\"external\" rel=\" noopener\">Indexed Database API Specification</a></li>\n  <li><a href=\"/zh-TW/docs/IndexedDB/Using_IndexedDB_in_chrome\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Using IndexedDB in chrome</a></li>\n</ul>\n<p>相關教學</p>\n<ul>\n  <li><a href=\"https://www.html5rocks.com/tutorials/indexeddb/todo/\" class=\"external\" rel=\" noopener\">A simple TODO list using HTML5 IndexedDB</a>.\n    <div class=\"notecard note\" id=\"sect3\">\n      <p><strong>備註：</strong> 請注意此教學範例用到的已經廢棄的<code>setVersion()</code>方法。</p>\n    </div>\n  </li>\n  <li><a href=\"https://www.html5rocks.com/en/tutorials/indexeddb/uidatabinding/\" class=\"external\" rel=\" noopener\">Databinding UI Elements with IndexedDB</a></li>\n</ul>\n<p>相關文章</p>\n<ul>\n  <li><a href=\"http://msdn.microsoft.com/en-us/scriptjunkie/gg679063.aspx\" class=\"external\" rel=\" noopener\">IndexedDB — The Store in Your Browser</a></li>\n</ul>\n<p>Firefox</p>\n<ul>\n  <li>Mozilla <a href=\"https://mxr.mozilla.org/mozilla-central/find?text=&amp;string=dom%2FindexedDB%2F.*%5C.idl&amp;regexp=1\" class=\"external\" rel=\" noopener\">interface files</a></li>\n</ul>"}}],"toc":[{"text":"關於本文","id":"關於本文"},{"text":"基本操作步驟","id":"基本操作步驟"},{"text":"建立和結構資料庫","id":"建立和結構資料庫"},{"text":"新增和刪除資料","id":"新增和刪除資料"},{"text":"移除資料","id":"移除資料"},{"text":"讀取資料","id":"讀取資料"},{"text":"使用指標(Cursor)","id":"使用指標cursor"},{"text":"當網頁應用程式於瀏覽器另一個分頁開啟時變更版本","id":"當網頁應用程式於瀏覽器另一個分頁開啟時變更版本"},{"text":"安全性","id":"安全性"},{"text":"瀏覽器關閉風險","id":"瀏覽器關閉風險"},{"text":"完整 IndexedDB 範例","id":"完整_indexeddb_範例"},{"text":"下一步","id":"下一步"},{"text":"延伸閱讀","id":"延伸閱讀"}],"summary":"IndexedDB 提供了在瀏覽器上儲存保留資料的功能，藉由它，不論是線上或線下我們的應用都可以進行資料存取。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using IndexedDB","locale":"en-US","native":"English (US)"},{"title":"Usando IndexedDB","locale":"es","native":"Español"},{"title":"Utiliser IndexedDB","locale":"fr","native":"Français"},{"title":"IndexedDB の使用","locale":"ja","native":"日本語"},{"title":"IndexedDB 사용하기","locale":"ko","native":"한국어"},{"title":"Usando IndexedDB","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Использование IndexedDB","locale":"ru","native":"Русский"},{"title":"使用 IndexedDB","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/api/indexeddb_api/using_indexeddb","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/api/indexeddb_api/using_indexeddb/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/API","title":"Web APIs"},{"uri":"/zh-TW/docs/Web/API/IndexedDB_API","title":"IndexedDB"},{"uri":"/zh-TW/docs/Web/API/IndexedDB_API/Using_IndexedDB","title":"使用IndexedDB"}],"pageTitle":"使用IndexedDB - Web APIs | MDN","noIndexing":false}}