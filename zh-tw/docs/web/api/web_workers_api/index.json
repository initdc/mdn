{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Web Workers API","mdn_url":"/zh-TW/docs/Web/API/Web_Workers_API","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"<ol><li><strong><a href=\"/zh-TW/docs/Web/API/Web_Workers_API\">Web Workers API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/zh-TW/docs/Web/API/Web_Workers_API/Using_web_workers\">Using Web Workers</a></li><li><a href=\"/zh-TW/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\">Functions and classes available to Web Workers</a></li><li><a href=\"/zh-TW/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">The structured clone algorithm</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/zh-TW/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a></li><li><a href=\"/zh-TW/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/zh-TW/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></li><li><a href=\"/zh-TW/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a></li><li><a href=\"/zh-TW/docs/Web/API/Worker\"><code>Worker</code></a></li><li><a href=\"/zh-TW/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></li><li><a href=\"/zh-TW/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code></a></li><li><a href=\"/zh-TW/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Web Workers</strong> are a mechanism by which a script operation can be made to run in a background thread separate from the main execution thread of a web application. The advantage of this is that laborious processing can be performed in a separate thread, allowing the main (usually the UI) thread to run without being blocked/slowed down.</p>"}},{"type":"prose","value":{"id":"web_workers_concepts_and_usage","title":"Web Workers concepts and usage","isH3":false,"content":"<p>A worker is an object created using <code>a</code> constructor (e.g. <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker/Worker\"><code>Worker()</code> <small>(en-US)</small></a>) that runs a named JavaScript file — this file contains the code that will run in the worker thread; workers run in another global context that is different from the current <a href=\"/zh-TW/docs/Web/API/Window\"><code>window</code></a>. This context is represented by a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code> <small>(en-US)</small></a> object in the case of dedicated workers (standard workers that are utilized by a single script; shared workers use <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a>).</p>\n<p>You can run whatever code you like inside the worker thread, with some exceptions. For example, you can't directly manipulate the DOM from inside a worker, or use some default methods and properties of the <a href=\"/zh-TW/docs/Web/API/Window\"><code>window</code></a> object. But you can use a large number of items available under <code>window</code>, including <a href=\"/zh-TW/docs/Web/API/WebSockets_API\">WebSockets</a>, and data storage mechanisms like <a href=\"/zh-TW/docs/Web/API/IndexedDB_API\">IndexedDB</a> and the Firefox OS-only <a href=\"/zh-TW/docs/Web/API/Data_Store_API\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Data Store API</a>. See <a href=\"/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Functions and classes available to workers (en-US)</a> for more details.</p>\n<p>Data is sent between workers and the main thread via a system of messages — both sides send their messages using the <code>postMessage()</code> method, and respond to messages via the <code>onmessage</code> event handler (the message is contained within the <code><a href=\"/zh-TW/docs/Web/Reference/Events/Message\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">Message</a></code> event's data attribute.) The data is copied rather than shared.</p>\n<p>Workers may in turn spawn new workers, as long as those workers are hosted within the same origin as the parent page. In addition, workers may use <a href=\"/zh-TW/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> for network I/O, with the exception that the <code>responseXML</code> and <code>channel</code> attributes on <code>XMLHttpRequest</code> always return <code>null</code>.</p>\n<p>In addition to dedicated workers, there are other types of worker:</p>\n<ul>\n  <li>Shared workers are workers that can be utilized by multiple scripts running in different windows, IFrames, etc., as long as they are in the same domain as the worker. They are a little more complex than dedicated workers — scripts must communicate via an active port. See <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker\"><code>SharedWorker</code> <small>(en-US)</small></a> for more details.</li>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ServiceWorkers (en-US)</a> essentially act as proxy servers that sit between web applications, and the browser and network (when available). They are intended to (amongst other things) enable the creation of effective offline experiences, intercepting network requests and taking appropriate action based on whether the network is available and updated assets reside on the server. They will also allow access to push notifications and background sync APIs.</li>\n  <li>Chrome Workers are a Firefox-only type of worker that you can use if you are developing add-ons and want to use workers in extensions and have access to <a href=\"/zh-TW/js-ctypes\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">js-ctypes</a> in your worker. See <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>ChromeWorker</code></a> for more details.</li>\n  <li><a href=\"/zh-TW/docs/Web/API/Web_Audio_API#audio_workers\">Audio Workers</a> provide the ability for direct scripted audio processing to be done inside a web worker context.</li>\n</ul>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> As per the <a href=\"https://html.spec.whatwg.org/multipage/workers.html#runtime-script-errors-2\" class=\"external\" rel=\" noopener\">Web workers Spec</a>, worker error events should not bubble (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1188141\" class=\"external\" rel=\" noopener\">bug&nbsp;1188141</a>. This has been implemented in Firefox 42.</p>\n</div>"}},{"type":"prose","value":{"id":"web_worker_interfaces","title":"Web Worker interfaces","isH3":false,"content":"<dl>\n  <dt id=\"abstractworker_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker\"><code>AbstractWorker</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Abstracts properties and methods common to all kind of workers (i.e. <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker\"><code>Worker</code> <small>(en-US)</small></a> or <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker\"><code>SharedWorker</code> <small>(en-US)</small></a>).</p>\n  </dd>\n  <dt id=\"worker_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker\"><code>Worker</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents a running worker thread, allowing you to pass messages to the running worker code.</p>\n  </dd>\n  <dt id=\"sharedworker_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker\"><code>SharedWorker</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents a specific kind of worker that can be <em>accessed</em> from several browsing contexts, being several windows, iframes or even workers.</p>\n  </dd>\n  <dt id=\"workerglobalscope_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents the generic scope of any worker (doing the same job as <a href=\"/zh-TW/docs/Web/API/Window\"><code>Window</code></a> does for normal web content). Different types of worker have scope objects that inherit from this interface and add more specific features.</p>\n  </dd>\n  <dt id=\"dedicatedworkerglobalscope_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents the scope of a dedicated worker, inheriting from <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code> <small>(en-US)</small></a> and adding some dedicated features.</p>\n  </dd>\n  <dt id=\"sharedworkerglobalscope_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents the scope of a shared worker, inheriting from <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code> <small>(en-US)</small></a> and adding some dedicated features.</p>\n  </dd>\n  <dt id=\"workernavigator_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents the identity and state of the user agent (the client):</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>We have created a couple of simple demos to show basic usage:</p>\n<ul>\n  <li><a href=\"https://github.com/mdn/simple-web-worker\" class=\"external\" rel=\" noopener\">Basic dedicated worker example</a> (<a href=\"https://mdn.github.io/simple-web-worker/\" class=\"external\" rel=\" noopener\">run dedicated worker</a>).</li>\n  <li><a href=\"https://github.com/mdn/simple-shared-worker\" class=\"external\" rel=\" noopener\">Basic shared worker example</a> (<a href=\"https://mdn.github.io/simple-shared-worker/\" class=\"external\" rel=\" noopener\">run shared worker</a>).</li>\n</ul>\n<p>You can find out more information on how these demos work in <a href=\"/zh-TW/docs/Web/API/Web_Workers_API/Using_web_workers\">Using web workers</a>.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/workers.html#workers","title":"HTML Standard"}],"query":"undefined"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using Web Workers (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Worker\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Worker Interface (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Web/API/SharedWorker\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">SharedWorker interface (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ServiceWorker API (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Functions and classes available to workers (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Advanced concepts and examples (en-US)</a></li>\n  <li><a href=\"/zh-TW/docs/Web/API/ChromeWorker\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">ChromeWorker</a>: for using workers in privileged/chrome code</li>\n</ul>"}}],"toc":[{"text":"Web Workers concepts and usage","id":"web_workers_concepts_and_usage"},{"text":"Web Worker interfaces","id":"web_worker_interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"See also","id":"see_also"}],"summary":"Web Workers are a mechanism by which a script operation can be made to run in a background thread separate from the main execution thread of a web application. The advantage of this is that laborious processing can be performed in a separate thread, allowing the main (usually the UI) thread to run without being blocked/slowed down.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Web Workers API","locale":"en-US","native":"English (US)"},{"title":"Web Workers API","locale":"es","native":"Español"},{"title":"API Web Workers","locale":"fr","native":"Français"},{"title":"ウェブワーカー API","locale":"ja","native":"日本語"},{"title":"Web Workers API","locale":"ko","native":"한국어"},{"title":"Web Workers API","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Web Workers API","locale":"ru","native":"Русский"},{"title":"Web Workers API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/api/web_workers_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/api/web_workers_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/API","title":"Web APIs"},{"uri":"/zh-TW/docs/Web/API/Web_Workers_API","title":"Web Workers API"}],"pageTitle":"Web Workers API - Web APIs | MDN","noIndexing":false}}