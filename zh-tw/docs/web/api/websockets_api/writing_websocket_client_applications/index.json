{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"製作 WebSocket 客戶端應用程式","mdn_url":"/zh-TW/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>WebSocket 是一種讓瀏覽器與伺服器進行一段互動通訊的技術。使用這項技術的 Webapp 可以直接進行即時通訊而不需要不斷對資料更改進行輪詢（polling）。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> 當我們的系統架構可以寄存 WebSocket 範例之後，我們會提供聊天／伺服器系統實例的幾個範例。</p>\n</div>"}},{"type":"prose","value":{"id":"哪裡有_websocket","title":"哪裡有 WebSocket","isH3":false,"content":"<p>若 JavaScript 代碼的範疇是 <a href=\"/zh-TW/docs/Web/API/Window\"><code>Window</code></a> 物件或是實作 <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>WorkerUtils</code></a> 的物件，則可使用 WebSocket API。也就是可以從 Web Workers 使用 WebSocket。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>備註：</strong> WebSockets API（與底層協定）的開發還在進展中，且目前不同瀏覽器（甚至瀏覽器的不同版本）有很多兼容問題。</p>\n</div>"}},{"type":"prose","value":{"id":"建立一個_websocket_物件","title":"建立一個 WebSocket 物件","isH3":false,"content":"<p>你必須建立一個 <a href=\"/zh-TW/WebSockets/WebSockets_reference/WebSocket\"><code>WebSocket</code></a> 物件才能讓瀏覽器／伺服器得以以 WebSocket 協定進行通訊，此物件在被建立之後會自動與伺服器連線。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>備註：</strong> 別忘記在 Firefox 6.0 中 <code>WebSocket</code> 物件仍有前輟，所以在這裡須改成 <code>MozWebSocket</code>。</p>\n</div>\n<p>WebSocket 的建構方法有一個必要參數與一個選擇參數：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">WebSocket WebSocket(\n  in DOMString url,\n  in optional DOMString protocols\n);\n\nWebSocket WebSocket(\n  in DOMString url,\n  in optional DOMString[] protocols\n);\n</pre></div>\n<dl>\n  <dt id=\"url\"><code>url</code></dt>\n  <dd>\n    <p>連線用的 URL，WebSocket 伺服器會回應這個 URL。</p>\n    <p>根據網際網路工程任務小組（Internet Engineering Task Force，IETF）定義之規範， URL 的協議類型必須是 <code>ws://</code> （非加密連線）或是 <code>wss://</code> （加密連線）</p>\n  </dd>\n  <dt id=\"protocols\"><code>protocols</code> <span class=\"badge inline optional\">選擇性</span></dt>\n  <dd>\n    <p>一個表示協定的字串或者是一個表示協定的字串構成的陣列。這些字串可以用來指定子協定，因此一個伺服器可以實作多個 WebSocket 子協定（舉例來說，你可以讓一個伺服器處理不同種類的互動情形，各情形以 <code>protocol</code> 分別）。若不指定協定字串則預設值為空字串。</p>\n  </dd>\n</dl>\n<p>此建構方法可能拋出以下例外：</p>\n<dl>\n  <dt id=\"security_err\"><code>SECURITY_ERR</code></dt>\n  <dd>\n    <p>連線使用的埠被阻擋。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"範例","title":"範例","isH3":true,"content":"<p>此簡單範例建立了一個新的 WebSocket，連到位於 <code>http://www.example.com/socketserver</code> 的伺服器。指定的子協定是 \"my-custom-protocol\"。</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">var mySocket = new WebSocket(\"ws://www.example.com/socketserver\", \"my-custom-protocol\");\n</pre></div>\n<p>回傳之後，<code>mySocket</code> 的 <code>readyState</code> 會變成 <code>CONNECTING</code>。當連線已可以傳輸資料時 <code>readyState</code> 會變成 <code>OPEN</code>。</p>\n<p>要建立一個連線但不指定單一個特定協定，可以指定一個協定構成的陣列：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">var mySocket = new WebSocket(\"ws://www.example.com/socketserver\", [\"protocol1\", \"protocol2\"]);\n</pre></div>\n<p>當連線建立的時候（也就是 <code>readyState</code> 變成而 <code>OPEN</code> 的時候），<code>protocol</code> 屬性會回傳伺服器選擇的協定。</p>"}},{"type":"prose","value":{"id":"傳資料給伺服器","title":"傳資料給伺服器","isH3":false,"content":"<p>連線開啟之後即可開始傳資料給伺服器。呼叫 <code>WebSocket</code> 的 <a href=\"/zh-TW/WebSockets/WebSockets_reference/WebSocket#send()\"><code>send()</code></a> 來發送訊息：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">mySocket.send(\"這是伺服器正迫切需要的文字！\");\n</pre></div>\n<p>可以被傳送的內容包括字串、<a href=\"/zh-TW/docs/DOM/Blob\"><code>Blob</code></a> 或是 <a href=\"/zh-TW/JavaScript_typed_arrays/ArrayBuffer\"><code>ArrayBuffer</code></a>。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>備註：</strong> Firefox 目前只支援字串傳送。</p>\n</div>"}},{"type":"prose","value":{"id":"用_json_傳輸物件","title":"用 JSON 傳輸物件","isH3":true,"content":"<p>有一個很方便的方法是用 <a href=\"/zh-TW/JSON\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">JSON</a> 傳送複雜的資料給伺服器，舉例來說，聊天程式可以設計一種協定，這個協定傳送以 JSON 封裝的資料封包：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 透過伺服器傳送文字給所有使用者</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sendText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> msg <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> clientID<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  mySocket<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>這份代碼先建立一個物件：<code>msg</code>，它包含伺服器處理訊息所需的種種資訊，然後呼叫 <a href=\"/zh-TW/docs/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a> 使該物件轉換成 JSON 格式並呼叫 WebSocket 的 <a href=\"/zh-TW/WebSockets/WebSockets_reference/WebSocket#send()\"><code>send()</code></a> 方法來傳輸資料至伺服器。</p>"}},{"type":"prose","value":{"id":"從伺服器接收訊息","title":"從伺服器接收訊息","isH3":false,"content":"<p>WebSockets 是一個事件驅動 API，當瀏覽器收到訊息時，一個「message」事件被傳入 <code>onmessage</code> 函數。使用以下方法開始傾聽傳入資料：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>mySocket<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"接收並解讀_json_物件","title":"接收並解讀 JSON 物件","isH3":true,"content":"<p>考慮先前在「用 JSON 傳輸物件」談起的聊天應用程式。客戶端可能收到的資料封包有幾種：</p>\n<ul>\n  <li>登入握手</li>\n  <li>訊息文字</li>\n  <li>更新使用者清單</li>\n</ul>\n<p>用來解讀傳入訊息的代碼可能像是：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>connection<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"chatbox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>contentDocument<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> msg <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> time <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> timeStr <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"id\"</span><span class=\"token operator\">:</span>\n      clientID <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"username\"</span><span class=\"token operator\">:</span>\n      text <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;b&gt;使用者 &lt;em&gt;\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/em&gt; 登入於 \"</span> <span class=\"token operator\">+</span> timeStr <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/b&gt;&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"message\"</span><span class=\"token operator\">:</span>\n      text <span class=\"token operator\">=</span> <span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> timeStr <span class=\"token operator\">+</span> <span class=\"token string\">\") &lt;b&gt;\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/b&gt;: \"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">.</span>text <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"rejectusername\"</span><span class=\"token operator\">:</span>\n      text <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;b&gt;由於你選取的名字已被人使用，你的使用者名稱已被設置為 &lt;em&gt;\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/em&gt;。\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"userlist\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">var</span> ul <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> msg<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ul <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userlistbox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> ul<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    f<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"chatbox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>contentWindow<span class=\"token punctuation\">.</span><span class=\"token function\">scrollByPages</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>這裡我們使用 <a href=\"/zh-TW/docs/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> 使 JSON 物件轉換成原來的物件，檢驗並根據內容採取行動。</p>"}},{"type":"prose","value":{"id":"關閉連線","title":"關閉連線","isH3":false,"content":"<p>當你想結束 WebSocket 連線的時候，呼叫 WebSocket 的 <a href=\"/zh-TW/WebSockets/WebSockets_reference/WebSocket#close()\"><code>close()</code></a> 方法：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">mySocket.close();\n</pre></div>"}},{"type":"prose","value":{"id":"參考資料","title":"參考資料","isH3":false,"content":"<p><a href=\"https://tools.ietf.org/html/draft-abarth-thewebsocketprotocol-01\" class=\"external\" rel=\" noopener\">IETF: The WebSocket protocol draft-abarth-thewebsocketprotocol-01</a></p>"}}],"toc":[{"text":"哪裡有 WebSocket","id":"哪裡有_websocket"},{"text":"建立一個 WebSocket 物件","id":"建立一個_websocket_物件"},{"text":"傳資料給伺服器","id":"傳資料給伺服器"},{"text":"從伺服器接收訊息","id":"從伺服器接收訊息"},{"text":"關閉連線","id":"關閉連線"},{"text":"參考資料","id":"參考資料"}],"summary":"WebSocket 是一種讓瀏覽器與伺服器進行一段互動通訊的技術。使用這項技術的 Webapp 可以直接進行即時通訊而不需要不斷對資料更改進行輪詢（polling）。","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Writing WebSocket client applications","locale":"en-US","native":"English (US)"},{"title":"Escribiendo aplicaciones con WebSockets","locale":"es","native":"Español"},{"title":"Ecrire des applications client WebSocket","locale":"fr","native":"Français"},{"title":"WebSocket クライアントアプリケーションの記述","locale":"ja","native":"日本語"},{"title":"WebSocket을 이용하여 클라이언트 애플리케이션 작성하기","locale":"ko","native":"한국어"},{"title":"Escrevendo aplicações cliente WebSocket","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Написание клиентских приложений с помощью веб-сокетов","locale":"ru","native":"Русский"},{"title":"编写 WebSocket 客户端应用","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/api/websockets_api/writing_websocket_client_applications","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/api/websockets_api/writing_websocket_client_applications/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/API","title":"Web APIs"},{"uri":"/zh-TW/docs/Web/API/WebSockets_API","title":"WebSockets"},{"uri":"/zh-TW/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications","title":"製作 WebSocket 客戶端應用程式"}],"pageTitle":"製作 WebSocket 客戶端應用程式 - Web APIs | MDN","noIndexing":false}}