{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MutationObserver","mdn_url":"/zh-TW/docs/Web/API/MutationObserver","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"<ol><li><strong><a href=\"/zh-TW/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/zh-TW/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/MutationObserver\"><code>MutationObserver()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/disconnect\"><code>disconnect()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/observe\"><code>observe()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/takeRecords\"><code>takeRecords()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for DOM</summary><ol><li><a href=\"/zh-TW/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Comment\"><code>Comment</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/zh-TW/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/zh-TW/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/zh-TW/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/zh-TW/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/zh-TW/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/zh-TW/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/zh-TW/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/zh-TW/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/zh-TW/docs/Web/API/Node\"><code>Node</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Text\"><code>Text</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>MutationObserver</code> 提供開發人員一個方法，來對 <a href=\"/en-US/docs/Web/API/Document_Object_Model\">DOM</a> tree 的變動來作反應，這被設計用來替換在 DOM3 事件規範中的 <a href=\"/zh-TW/docs/DOM/Mutation_events\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Mutation Events</a>。</p>"}},{"type":"prose","value":{"id":"建構式","title":"建構式","isH3":false,"content":""}},{"type":"prose","value":{"id":"mutationobserver","title":"<code>MutationObserver()</code>","isH3":true,"content":"<p>以下舉例為一個新的 DOM mutation observers 建構式。</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">new MutationObserver(\n  function callback\n);\n</pre></div>\n<h4 id=\"參數\">參數</h4>\n<dl>\n  <dt id=\"callback\"><code>callback</code></dt>\n  <dd>\n    <p>這個函式會在 DOM 有變化時被呼叫，observer 會用兩個參數來呼叫它，第一個是 <code>MutationRecord</code> 物件陣列，而第二個參數則是觀察者目標本身。</p>\n  </dd>\n</dl>","titleAsText":"MutationObserver()"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th><code>void observe( <a href=\"/zh-TW/docs/Web/API/Node\"><code>Node</code></a> target, MutationObserverInit options );</code></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>void disconnect();</code></td>\n    </tr>\n    <tr>\n      <td><code>Array takeRecords();</code></td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> <a href=\"/zh-TW/docs/Web/API/Node\"><code>Node</code></a> target should not be confused with <a href=\"https://nodejs.org/en/\" class=\"external\" rel=\" noopener\">NodeJS</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"observe","title":"<code>observe()</code>","isH3":true,"content":"<p>Registers the <code>MutationObserver</code> instance to receive notifications of DOM mutations on the specified node.</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">void observe(\n  <a href=\"/zh-TW/docs/Web/API/Node\"><code>Node</code></a> target,\n  MutationObserverInit options\n);\n</pre></div>\n<h4 id=\"parameters\">Parameters</h4>\n<dl>\n  <dt id=\"target\"><code>target</code></dt>\n  <dd>\n    <p>The <a href=\"/zh-TW/docs/Web/API/Node\"><code>Node</code></a> on which to observe DOM mutations.</p>\n  </dd>\n  <dt id=\"options\"><code>options</code></dt>\n  <dd>\n    <p>A <a href=\"#mutationobserverinit\"><code>MutationObserverInit</code></a> object, specifies which DOM mutations should be reported.</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>備註：</strong> Adding an observer to an element is just like addEventListener, if you observe the element multiple times it does not make a difference. Meaning if you observe element twice, the observe callback does not fire twice, nor will you have to run disconnect() twice. In other words, once an element is observed, observing it again with the same observer instance will do nothing. However if the callback object is different it will of course add another observer to it.</p>\n</div>","titleAsText":"observe()"}},{"type":"prose","value":{"id":"disconnect","title":"<code>disconnect()</code>","isH3":true,"content":"<p>Stops the <code>MutationObserver</code> instance from receiving notifications of DOM mutations. Until the <a href=\"#observe()\"><code>observe()</code></a> method is used again, observer's callback will not be invoked.</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">void disconnect();\n</pre></div>","titleAsText":"disconnect()"}},{"type":"prose","value":{"id":"takerecords","title":"<code>takeRecords()</code>","isH3":true,"content":"<p>Empties the <code>MutationObserver</code> instance's record queue and returns what was in there.</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">Array takeRecords();\n</pre></div>\n<h4 id=\"return_value\">Return value</h4>\n<p>Returns an Array of <a href=\"#mutationrecord\"><code>MutationRecord</code>s</a>.</p>","titleAsText":"takeRecords()"}},{"type":"prose","value":{"id":"mutationobserverinit","title":"<code>MutationObserverInit</code>","isH3":false,"content":"<p><code>MutationObserverInit</code> is an object which can specify the following properties:</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>備註：</strong> At the very least, <code>childList</code>, <code>attributes</code>, or <code>characterData</code> must be set to <code>true</code>. Otherwise, \"An invalid or illegal string was specified\" error is thrown.</p>\n</div>\n<table>\n  <thead>\n    <tr>\n      <th>Property</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>childList</code></td>\n      <td>Set to <code>true</code> if additions and removals of the target node's child elements (including text nodes) are to be observed.</td>\n    </tr>\n    <tr>\n      <td><code>attributes</code></td>\n      <td>Set to <code>true</code> if mutations to target's attributes are to be observed.</td>\n    </tr>\n    <tr>\n      <td><code>characterData</code></td>\n      <td>Set to <code>true</code> if mutations to target's data are to be observed.</td>\n    </tr>\n    <tr>\n      <td><code>subtree</code></td>\n      <td>Set to <code>true</code> if mutations to not just target, but also target's descendants are to be observed.</td>\n    </tr>\n    <tr>\n      <td><code>attributeOldValue</code></td>\n      <td>Set to <code>true</code> if <code>attributes</code> is set to <code>true</code> and target's attribute value before the mutation needs to be recorded.</td>\n    </tr>\n    <tr>\n      <td><code>characterDataOldValue</code></td>\n      <td>Set to <code>true</code> if <code>characterData</code> is set to <code>true</code> and target's data before the mutation needs to be recorded.</td>\n    </tr>\n    <tr>\n      <td><code>attributeFilter</code></td>\n      <td>Set to an array of attribute local names (without namespace) if not all attribute mutations need to be observed.</td>\n    </tr>\n  </tbody>\n</table>","titleAsText":"MutationObserverInit"}},{"type":"prose","value":{"id":"mutationrecord","title":"<code>MutationRecord</code>","isH3":false,"content":"<p><code>MutationRecord</code> is the object that will be passed to the observer's callback. It has the following properties:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Property</th>\n      <th>Type</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>type</code></td>\n      <td><code>String</code></td>\n      <td>Returns <code>attributes</code> if the mutation was an attribute mutation, <code>characterData</code> if it was a mutation to a <code>CharacterData</code> node, and <code>childList</code> if it was a mutation to the tree of nodes.</td>\n    </tr>\n    <tr>\n      <td><code>target</code></td>\n      <td><code><a href=\"/zh-TW/docs/Web/API/Node\"><code>Node</code></a></code></td>\n      <td>Returns the node the mutation affected, depending on the <code>type</code>. For <code>attributes</code>, it is the element whose attribute changed. For <code>characterData</code>, it is the <code>CharacterData</code> node. For <code>childList</code>, it is the node whose children changed.</td>\n    </tr>\n    <tr>\n      <td><code>addedNodes</code></td>\n      <td><code><a href=\"/zh-TW/docs/Web/API/NodeList\"><code>NodeList</code></a></code></td>\n      <td>Return the nodes added. Will be an empty <code>NodeList</code> if no nodes were added.</td>\n    </tr>\n    <tr>\n      <td><code>removedNodes</code></td>\n      <td><code><a href=\"/zh-TW/docs/Web/API/NodeList\"><code>NodeList</code></a></code></td>\n      <td>Return the nodes removed. Will be an empty <code>NodeList</code> if no nodes were removed.</td>\n    </tr>\n    <tr>\n      <td><code>previousSibling</code></td>\n      <td><code><a href=\"/zh-TW/docs/Web/API/Node\"><code>Node</code></a></code></td>\n      <td>Return the previous sibling of the added or removed nodes, or <code>null</code>.</td>\n    </tr>\n    <tr>\n      <td><code>nextSibling</code></td>\n      <td><code><a href=\"/zh-TW/docs/Web/API/Node\"><code>Node</code></a></code></td>\n      <td>Return the next sibling of the added or removed nodes, or <code>null</code>.</td>\n    </tr>\n    <tr>\n      <td><code>attributeName</code></td>\n      <td><code>String</code></td>\n      <td>Returns the local name of the changed attribute, or <code>null</code>.</td>\n    </tr>\n    <tr>\n      <td><code>attributeNamespace</code></td>\n      <td><code>String</code></td>\n      <td>Returns the namespace of the changed attribute, or <code>null</code>.</td>\n    </tr>\n    <tr>\n      <td><code>oldValue</code></td>\n      <td><code>String</code></td>\n      <td>The return value depends on the <code>type</code>. For <code>attributes</code>, it is the value of the changed attribute before the change. For <code>characterData</code>, it is the data of the changed node before the change. For <code>childList</code>, it is <code>null</code>.</td>\n    </tr>\n  </tbody>\n</table>","titleAsText":"MutationRecord"}},{"type":"prose","value":{"id":"example_usage","title":"Example usage","isH3":false,"content":"<p>The following example was taken from <a href=\"https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\" class=\"external\" rel=\" noopener\">this blog post</a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// select the target node</span>\n<span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#some-id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create an observer instance</span>\n<span class=\"token keyword\">var</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MutationObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mutations</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  mutations<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mutation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mutation<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// configuration of the observer:</span>\n<span class=\"token keyword\">var</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">childList</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">characterData</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// pass in the target node, as well as the observer options</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// later, you can stop observing</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"additional_reading","title":"Additional reading","isH3":false,"content":"<ul>\n  <li><a href=\"http://updates.html5rocks.com/2012/02/Detect-DOM-changes-with-Mutation-Observers\" class=\"external\" rel=\" noopener\">A brief overview</a></li>\n  <li><a href=\"https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\" class=\"external\" rel=\" noopener\">A more in-depth discussion</a></li>\n  <li><a href=\"https://www.youtube.com/watch?v=eRZ4pO0gVWw\" class=\"external\" rel=\" noopener\">A screencast by Chromium developer Rafael Weinstein</a></li>\n  <li><a href=\"https://code.google.com/p/mutation-summary/\" class=\"external\" rel=\" noopener\">The mutation summary library</a></li>\n  <li><a href=\"https://dom.spec.whatwg.org/#mutation-observers\" class=\"external\" rel=\" noopener\">The DOM standard</a> which defines the <code>MutationObserver</code> interface</li>\n</ul>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MutationObserver","dataURL":"/zh-TW/docs/Web/API/MutationObserver/bcd.json"}}],"toc":[{"text":"建構式","id":"建構式"},{"text":"Instance methods","id":"instance_methods"},{"text":"<code>MutationObserverInit</code>","id":"mutationobserverinit"},{"text":"<code>MutationRecord</code>","id":"mutationrecord"},{"text":"Example usage","id":"example_usage"},{"text":"Additional reading","id":"additional_reading"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"MutationObserver 提供開發人員一個方法，來對 DOM tree 的變動來作反應，這被設計用來替換在 DOM3 事件規範中的 Mutation Events。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MutationObserver","locale":"en-US","native":"English (US)"},{"title":"MutationObserver","locale":"es","native":"Español"},{"title":"MutationObserver","locale":"fr","native":"Français"},{"title":"MutationObserver","locale":"ja","native":"日本語"},{"title":"MutationObserver","locale":"ko","native":"한국어"},{"title":"MutationObserver","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"MutationObserver","locale":"ru","native":"Русский"},{"title":"MutationObserver","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/api/mutationobserver","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/api/mutationobserver/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/API","title":"Web APIs"},{"uri":"/zh-TW/docs/Web/API/MutationObserver","title":"MutationObserver"}],"pageTitle":"MutationObserver - Web APIs | MDN","noIndexing":false}}