{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"IDBDatabase","mdn_url":"/zh-TW/docs/Web/API/IDBDatabase","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"<ol><li><strong><a href=\"/zh-TW/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/zh-TW/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/name\"><code>name</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/objectStoreNames\"><code>objectStoreNames</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/version\"><code>version</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/close\"><code>close()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/createObjectStore\"><code>createObjectStore()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/deleteObjectStore\"><code>deleteObjectStore()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/transaction\"><code>transaction()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/close_event\"><code>close</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/versionchange_event\"><code>versionchange</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/zh-TW/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for IndexedDB</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBFactory\"><code>IDBFactory</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBIndex\"><code>IDBIndex</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>IDBDatabase</code></strong> interface of the IndexedDB API provides a <a href=\"/zh-TW/docs/Web/API/IndexedDB_API#database_connection\">connection to a database</a>; you can use an <code>IDBDatabase</code> object to open a <a href=\"/zh-TW/docs/Web/API/IndexedDB_API#gloss_transaction\">transaction</a> on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database.</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/zh-TW/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>備註：</strong> Everything you do in IndexedDB always happens in the context of a <a href=\"/en-US/docs/Web/API/IndexedDB_API/Basic_Terminology#gloss_transaction\">transaction</a>, representing interactions with data in the database. All objects in IndexedDB — including object stores, indexes, and cursors — are tied to a particular transaction. Thus, you cannot execute commands, access data, or open anything outside of a transaction.</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>備註：</strong> Note that as of Firefox 40, IndexedDB transactions have relaxed durability guarantees to increase performance (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1112702\" class=\"external\" rel=\" noopener\">bug&nbsp;1112702</a>.) Previously in a <code>readwrite</code> transaction <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/complete_event\"><code>IDBTransaction.oncomplete</code> <small>(en-US)</small></a> was fired only when all data was guaranteed to have been flushed to disk. In Firefox 40+ the <code>complete</code> event is fired after the OS has been told to write the data but potentially before that data has actually been flushed to disk. The <code>complete</code> event may thus be delivered quicker than before, however, there exists a small chance that the entire transaction will be lost if the OS crashes or there is a loss of system power before the data is flushed to disk. Since such catastrophic events are rare most consumers should not need to concern themselves further. If you must ensure durability for some reason (e.g. you're storing critical data that cannot be recomputed later) you can force a transaction to flush to disk before delivering the <code>complete</code> event by creating a transaction using the experimental (non-standard) <code>readwriteflush</code> mode (see <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/transaction\"><code>IDBDatabase.transaction</code> <small>(en-US)</small></a>.</p>\n</div>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p>Inherits from: <a href=\"/en-US/docs/Web/API/EventTarget\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">EventTarget (en-US)</a></p>\n<dl>\n  <dt id=\"idbdatabase.close_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/close\"><code>IDBDatabase.close()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Returns immediately and closes the connection to a database in a separate thread.</p>\n  </dd>\n  <dt id=\"idbdatabase.createobjectstore_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/createObjectStore\"><code>IDBDatabase.createObjectStore()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Creates and returns a new object store or index.</p>\n  </dd>\n  <dt id=\"idbdatabase.deleteobjectstore_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/deleteObjectStore\"><code>IDBDatabase.deleteObjectStore()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Destroys the object store with the given name in the connected database, along with any indexes that reference it.</p>\n  </dd>\n  <dt id=\"idbdatabase.transaction_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/transaction\"><code>IDBDatabase.transaction()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Immediately returns a transaction object (<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code> <small>(en-US)</small></a>) containing the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/objectStore\"><code>IDBTransaction.objectStore</code> <small>(en-US)</small></a> method, which you can use to access your object store. Runs in a separate thread.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"屬性","title":"屬性","isH3":false,"content":"<dl>\n  <dt id=\"idbdatabase.name_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/name\"><code>IDBDatabase.name</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> that contains the name of the connected database.</p>\n  </dd>\n  <dt id=\"idbdatabase.version_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/version\"><code>IDBDatabase.version</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A <a href=\"https://firefox-source-docs.mozilla.org/nspr/index.html\" class=\"only-in-en-us external\" title=\"Currently only available in English (US)\" rel=\" noopener\">64-bit integer (en-US)</a> that contains the version of the connected database. When a database is first created, this attribute is an empty string.</p>\n  </dd>\n  <dt id=\"idbdatabase.objectstorenames_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/objectStoreNames\"><code>IDBDatabase.objectStoreNames</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMStringList\"><code>DOMStringList</code> <small>(en-US)</small></a> that contains a list of the names of the <a href=\"/zh-TW/docs/Web/API/IndexedDB_API#gloss_object_store\">object stores</a> currently in the connected database.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"event_handlers","title":"Event handlers","isH3":true,"content":"<dl>\n  <dt id=\"idbdatabase.onabort_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/abort_event\"><code>IDBDatabase.onabort</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Fires when access of the database is aborted.</p>\n  </dd>\n  <dt id=\"idbdatabase.onerror_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/error_event\"><code>IDBDatabase.onerror</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Fires when access to the database fails.</p>\n  </dd>\n  <dt id=\"idbdatabase.onversionchange_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/versionchange_event\"><code>IDBDatabase.onversionchange</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Fires when a database structure change (<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event\"><code>IDBOpenDBRequest.onupgradeneeded</code> <small>(en-US)</small></a> event or <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBFactory/deleteDatabase\"><code>IDBFactory.deleteDatabase</code> <small>(en-US)</small></a> was requested elsewhere (most probably in another window/tab on the same computer). This is different from the version change transaction (see <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code> <small>(en-US)</small></a>), but it is related.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"範例","title":"範例","isH3":false,"content":"<p>In the following code snippet, we open a database asynchronously (<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBFactory\"><code>IDBFactory</code> <small>(en-US)</small></a>), handle success and error cases, and create a new object store in the case that an upgrade is needed (<a href=\"/zh-TW/docs/Web/API/IDBDatabase\" aria-current=\"page\"><code>IDBdatabase</code></a>). For a complete working example, see our <a href=\"https://github.com/mdn/to-do-notifications/\" class=\"external\" rel=\" noopener\">To-do Notifications</a> app (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">view example live</a>.)</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Let us open our database</span>\n  <span class=\"token keyword\">var</span> DBOpenRequest <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// these two event handlers act on the IDBDatabase object, when the database is opened successfully, or not</span>\n  DBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Error loading database.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  DBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Database initialised.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// store the result of opening the database in the db variable. This is used a lot later on</span>\n    db <span class=\"token operator\">=</span> DBOpenRequest<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Run the displayData() function to populate the task list with all the to-do list data already in the IDB</span>\n    <span class=\"token function\">displayData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// This event handles the event whereby a new version of the database needs to be created</span>\n  <span class=\"token comment\">// Either one has not been created before, or a new version number has been submitted via the</span>\n  <span class=\"token comment\">// window.indexedDB.open line above</span>\n\n  DBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onupgradeneeded</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n    db<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Error loading database.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create an objectStore for this database using IDBDatabase.createObjectStore</span>\n\n    <span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">createObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">keyPath</span><span class=\"token operator\">:</span> <span class=\"token string\">\"taskTitle\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// define what data items the objectStore will contain</span>\n\n    objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hours\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hours\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"minutes\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"minutes\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"month\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"month\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"year\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"year\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"notified\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"notified\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Object store created.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This next line opens up a transaction on the Database, then opens an object store that we can then manipulate the data inside of.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>    <span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toDoList'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toDoList'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"規範","id":"規範","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/IndexedDB/#database-interface","title":"Indexed Database API 3.0"}],"query":"api.IDBDatabase"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IDBDatabase","dataURL":"/zh-TW/docs/Web/API/IDBDatabase/bcd.json"}},{"type":"prose","value":{"id":"閱讀更多","title":"閱讀更多","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-TW/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Using IndexedDB</a></li>\n  <li>Starting transactions: <a href=\"/zh-TW/docs/Web/API/IDBDatabase\" aria-current=\"page\"><code>IDBDatabase</code></a></li>\n  <li>Using transactions: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code> <small>(en-US)</small></a></li>\n  <li>Setting a range of keys: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code> <small>(en-US)</small></a></li>\n  <li>Retrieving and making changes to your data: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code> <small>(en-US)</small></a></li>\n  <li>Using cursors: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code> <small>(en-US)</small></a></li>\n  <li>Reference example: <a href=\"https://github.com/mdn/to-do-notifications/tree/gh-pages\" class=\"external\" rel=\" noopener\">To-do Notifications</a> (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">view example live</a>.)</li>\n</ul>"}}],"toc":[{"text":"Methods","id":"methods"},{"text":"屬性","id":"屬性"},{"text":"範例","id":"範例"},{"text":"規範","id":"規範"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"閱讀更多","id":"閱讀更多"}],"summary":"The IDBDatabase interface of the IndexedDB API provides a connection to a database; you can use an IDBDatabase object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"IDBDatabase","locale":"en-US","native":"English (US)"},{"title":"IDBDatabase","locale":"es","native":"Español"},{"title":"IDBDatabase","locale":"fr","native":"Français"},{"title":"IDBDatabase","locale":"ja","native":"日本語"},{"title":"IDBDatabase","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/api/idbdatabase","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/api/idbdatabase/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/API","title":"Web APIs"},{"uri":"/zh-TW/docs/Web/API/IDBDatabase","title":"IDBDatabase"}],"pageTitle":"IDBDatabase - Web APIs | MDN","noIndexing":false}}