{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"在網頁應用程式中使用本地檔案","mdn_url":"/zh-TW/docs/Web/API/File_API/Using_files_from_web_applications","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>現在可以透過新增至 HTML5 DOM 的 File API 讓 web 內容要求使用者選取本地端的檔案後讀取被選取檔案中的內容。檔案的選取動作可以使用 HTML 的 <a href=\"/zh-TW/docs/DOM/HTMLInputElement\"><code>input</code></a> 元素，或是用拖曳檔案（drag and drop）的方式來完成。</p>\n<p>如果你想要使用 DOM 檔案 API 的文件擴展或是其他 Chrome 程式碼，你可以參考<a href=\"/zh-TW/Extensions/Using_the_DOM_File_API_in_chrome_code\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">使用 DOM 檔案 API 在 FireFox 外觀代碼中</a>。</p>"}},{"type":"prose","value":{"id":"使用_html_選擇本地檔案","title":"使用 HTML 選擇本地檔案","isH3":false,"content":"<p>HTML 語法：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>File API 可以從 <a href=\"/zh-TW/docs/Web/API/File\"><code>File</code></a> 物件中讀取 <a href=\"/zh-TW/docs/Web/API/FileList\"><code>FileList</code></a> ，<a href=\"/zh-TW/docs/Web/API/FileList\"><code>FileList</code></a> 內包含使用者所選取的檔案。</p>\n<p>如果使用者只選擇一個檔案，那麼我們只需要考慮第一個檔案物件。</p>\n<p>使用 DOM 獲取選擇的檔案：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> selectedFile <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>使用 <a href=\"https://jquery.com/\" class=\"external\" rel=\" noopener\">jQuery</a> 獲取選擇的檔案：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> selectedFile <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> selectedFile <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> 如果獲取 \"files is undefined\" 錯誤: 代表未選擇正確的 HTML 元素, 這時忘記 jQuery 回傳符合 DOM 元素的清單. 改使用 DOM 元素呼叫 \"files\" 方法.</p>\n</div>"}},{"type":"prose","value":{"id":"使用_change_event_獲取選擇的檔案","title":"使用 change event 獲取選擇的檔案","isH3":false,"content":"<p>使用 File API 選擇單一檔案是非常簡單的，如下</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>當使用者選取一個檔案，呼叫 <code>handleFiles()</code> 會得到一個 <a href=\"/zh-TW/docs/Web/API/FileList\"><code>FileList</code></a> 的物件。<a href=\"/zh-TW/docs/Web/API/FileList\"><code>FileList</code></a> 裡面還會有一個 <code><a href=\"/zh-TW/docs/Web/API/File\"><code>File</code></a></code> 的物件，裡面的東西就是使用者選取的檔案。</p>\n<p>如果你想要讓使用者一次選擇多個檔案，可以在 <code>input</code> 元素中使用 <code>multiple</code> 的屬性：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>在上述這個例子中，檔案名單會傳遞到 <code>handleFiles()</code> 函數，其中包含了使用者選的每個檔案 <a href=\"/zh-TW/docs/Web/API/File\"><code>File</code></a> 物件。</p>"}},{"type":"prose","value":{"id":"使用_eventlistener_動態地監聽","title":"使用 EventListener 動態地監聽","isH3":true,"content":"<p>如果使用了其他的函數庫（<a href=\"http://www.jquery.com/\" class=\"external\" rel=\" noopener\">jQuery</a>），你會需要使用 <a href=\"/zh-TW/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a> 去監聽事件，例如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> inputElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inputField\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ninputElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> handleFiles<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> fileList <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/* now you can work with the file list */</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>在這個例子中，<code>handleFiles()</code> 函數找尋檔案清單而非接收參數, 因為這樣增加的 event listeners 不能接受參數.</p>"}},{"type":"prose","value":{"id":"獲得選取檔案的資訊","title":"獲得選取檔案的資訊","isH3":false,"content":"<p>由 DOM 提供的 <a href=\"/zh-TW/docs/Web/API/FileList\"><code>FileList</code></a> 物件代表使用者選取的所有檔案，每個又是 <code><a href=\"/zh-TW/docs/Web/API/File\"><code>File</code></a></code> 物件。可以藉由 <a href=\"/zh-TW/docs/Web/API/FileList\"><code>FileList</code></a> 的 length 屬性得知使用者選取的檔案數量：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> numFiles <span class=\"token operator\">=</span> files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>使用陣列獲取 <a href=\"/zh-TW/docs/Web/API/File\"><code>File</code></a> 物件：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>上述的例子顯示獲取在檔案清單裡所有檔案物件的方法。</p>\n<p><a href=\"/zh-TW/docs/Web/API/File\"><code>File</code></a> 提供三個包含檔案重要訊息的屬性。</p>\n<dl>\n  <dt id=\"name\"><code>name</code></dt>\n  <dd>\n    <p>唯讀的檔案名稱，並未包含檔案路徑。</p>\n  </dd>\n  <dt id=\"size\"><code>size</code></dt>\n  <dd>\n    <p>為 64 位元的整數，用以表示檔案的 byte 的長度。</p>\n  </dd>\n  <dt id=\"type\"><code>type</code></dt>\n  <dd>\n    <p>為唯讀字串。表示檔案的 MIME-type 。若是無法取得檔案的 Mime-type ，則其值會是一個空字串 <code>\"\"</code>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"使用_click_方法隱藏檔案輸入元素","title":"使用 click() 方法隱藏檔案輸入元素","isH3":false,"content":"<p>從 Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)開始，為了顯示個人化開啟檔案的 UI 和使用者選擇的檔案可以隱藏 <a href=\"/zh-TW/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> 元素和顯示個人化的設計。可以藉由設置 CSS 「display:none」 和對 <a href=\"/zh-TW/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> 元素呼叫 <code>click()</code> 方法。</p>\n<p>HTML 如下：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileElem<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/*<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>none</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileSelect<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Select some files<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p><code>doClick()</code> 方法:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> fileSelect <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileSelect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  fileElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileElem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfileSelect<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileElem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fileElem<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prevent navigation to \"#\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>很明顯的，可以使用 CSS 來設計新的上傳檔案的按鈕。</p>"}},{"type":"prose","value":{"id":"使用拖放選取檔案","title":"使用拖放選取檔案","isH3":false,"content":"<p>使用者可以使用拖放來選取檔案，首先要設置放的區域，確定文件可以接收放的檔案，方法如下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> dropbox<span class=\"token punctuation\">;</span>\n\ndropbox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dropbox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndropbox<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dragenter\"</span><span class=\"token punctuation\">,</span> dragenter<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndropbox<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dragover\"</span><span class=\"token punctuation\">,</span> dragover<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndropbox<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drop\"</span><span class=\"token punctuation\">,</span> drop<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>在這個範例中，我們將 ID \"dropbox\" 設為放的區域，這是由於我們監聽了 <code>dragenter</code>、<code>dragover</code> 和 <code>drop</code>事件。</p>\n<p>我們甚至不需要處理 <code>dragenter</code> 和 <code>dragover</code> 事件，所以這些函數很簡單。他們阻止了事件的傳播和預設事件的發生：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">dragenter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">dragover</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>神奇的 <code>drop()</code> 函數:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> dt <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> files <span class=\"token operator\">=</span> dt<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>這邊我們用 dataTransfer</code> 來獲取檔案清單, 並傳遞給 <code>handleFiles()</code>。 我們可以發現，不論使用拖放或是其他取得檔案，處理檔案的方式都是相同。</p>"}},{"type":"prose","value":{"id":"範例：顯示選取的圖片","title":"範例：顯示選取的圖片","isH3":false,"content":"<p>假設要開發一個分享照片的網站，想使用 HTML5 來讓使用者在上傳圖片前預覽縮圖。簡單來說就是像先前討論地一樣建立 input 元素或是 drop 區域，接著再呼叫類似 <code>handleFiles()</code> 的函數。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">files</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> imageType <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">image.*</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>imageType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"obj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span>file <span class=\"token operator\">=</span> file<span class=\"token punctuation\">;</span>\n    preview<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reader<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">aImg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> aImg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsDataURL</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>這邊迴圈處理了使用者選取的每個檔案並檢查每個檔案的類型是不是圖檔(藉由使用正規表達式檢查是否符合字串 \"image.*\")。每一個是圖片的檔案，我們創建一個 <code>img</code> 元素。CSS 被使用來美化外框、陰影、還有設定圖片的尺寸，所以那些並不需要在這邊寫入。</p>\n<p>為了使圖片可以在 DOM 裡面更容易被找到，所以每個圖片都有設定 CSS class “obj”。 我們也在每個圖檔標記 <code>file</code> 屬性以辨認 <a href=\"/zh-TW/docs/DOM/File\"><code>File</code></a>；這使我們更容易取得真正要上傳的圖檔。最後我們使用<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Node/appendChild\"><code>Node.appendChild()</code> <small>(en-US)</small></a> 在文件中增加縮圖的元素。</p>\n<p><a href=\"/zh-TW/docs/DOM/FileReader\"><code>FileReader</code></a> 處理要非同步讀取的圖檔並跟 <code>img</code> 元素連接。在創建 <code>FileReader</code> 物件後，我們設置了 <code>onload</code>並 呼叫 <code>readAsDataURL()</code> 在背景呼叫讀取的程序。當所有圖檔都被讀取時，他們被轉換為傳到 <code>onload callback</code> 的 <code>data</code> URL。 這個範例簡易的設置<code>img</code> 元素的 <code>src</code> 屬性來讀取圖檔並在螢幕上顯示。</p>"}},{"type":"prose","value":{"id":"使用_object_urls","title":"使用 object URLs","isH3":false,"content":"<p>Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1) 支援 DOM 的<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>window.URL.createObjectURL()</code> <small>(en-US)</small></a> 和 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/revokeObjectURL\"><code>window.URL.revokeObjectURL()</code> <small>(en-US)</small></a> 方法。可以藉由這些方法創建表示任何為 DOM <a href=\"/zh-TW/docs/DOM/File\"><code>File</code></a> 物件的 data URL 字串，包含了使用者電腦上的檔案。</p>\n<p>可以使 <a href=\"/zh-TW/docs/DOM/File\"><code>File</code></a> 物件作為 HTML 元素 URL 的參考，創建 object URL 的方法：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> objectURL <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>fileObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>object URL 為表示 <a href=\"/zh-TW/docs/DOM/File\"><code>File</code></a> 物件的字串。即使已經對相同檔案創建了 object URL，每次呼叫 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>window.URL.createObjectURL()</code> <small>(en-US)</small></a>，就會創建一個 object URL。當文檔卸載時他們將會被自動釋放，如果要動態地使用，需要呼叫 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/revokeObjectURL\"><code>window.URL.revokeObjectURL()</code> <small>(en-US)</small></a> 釋放：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span>objectURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"範例：使用_object_urls_顯示圖片","title":"範例：使用 object URLs 顯示圖片","isH3":false,"content":"<p>(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)這個範例使用 object URLs 顯示圖像縮圖。此外也顯示了其他包含檔案名稱和檔案大小的訊息。<a href=\"https://media.prod.mdn.mozit.cloud/samples/domref/file-click-demo.html\" class=\"external\" rel=\" noopener\">線上範例</a> (註:瀏覽器版本要求 11/22 之後的火狐版本)。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>備註：</strong> 這個 API 在較早的 Firefox 4 betas 存在但是 11/22 號後的版本有改變, 所以確定瀏覽器在最新的版本!</p>\n</div>\n<p>HTML：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileElem<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">multiple</span> <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/*<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>none</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileSelect<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Select some files<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fileList<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>No files selected!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>This establishes our file <a href=\"/zh-TW/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element, as well as a link that invokes the file picker, since we keep the file input hidden to prevent that less-than-attractive UI from being displayed. This is explained above in the section <a href=\"#%E4%BD%BF%E7%94%A8click()_%E6%96%B9%E6%B3%95%E9%9A%B1%E8%97%8F%E6%AA%94%E6%A1%88%E8%BC%B8%E5%85%A5%E5%85%83%E7%B4%A0\">Using hidden file input elements using the click() method</a>, as is the <code>doClick()</code> method that invokes the file picker.</p>\n<p>The <code>handleFiles()</code> method follows:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> fileSelect <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileSelect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  fileElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileElem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  fileList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fileList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfileSelect<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileElem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fileElem<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prevent navigation to \"#\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleFiles</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">files</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    fileList<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;p&gt;No files selected!&lt;/p&gt;\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> li <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      list<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      img<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n      img<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      li<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">var</span> info <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      info<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">+</span> <span class=\"token string\">\" bytes\"</span><span class=\"token punctuation\">;</span>\n      li<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    fileList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This starts by fetching the URL of the <a href=\"/zh-TW/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> with the ID \"fileList\". This is the block into which we'll insert out file list, including thumbmails.</p>\n<p>If the <a href=\"/zh-TW/docs/Web/API/FileList\"><code>FileList</code></a> object passed to <code>handleFiles()</code> is <code>null</code>, we simply set the inner HTML of the block to display \"No files selected!\". Otherwise, we start building our file list, as follows:</p>\n<ol>\n  <li>A new unordered list (<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/ul\"><code>&lt;ul&gt;</code> <small>(en-US)</small></a> element is created.</li>\n  <li>The new list element is inserted into the <a href=\"/zh-TW/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> block by calling its <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>element.appendChild()</code></a> method.</li>\n  <li>For each <a href=\"/zh-TW/docs/Web/API/File\"><code>File</code></a> in the <a href=\"/zh-TW/docs/Web/API/FileList\"><code>FileList</code></a> represented by <code>files</code>:\n    <ol>\n      <li>Create a new list item (<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/li\"><code>&lt;li&gt;</code> <small>(en-US)</small></a>) element and insert it into the list.</li>\n      <li>Create a new image (<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code> <small>(en-US)</small></a>) element.</li>\n      <li>Set the image's source to a new object URL representing the file, using <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>window.URL.createObjectURL()</code> <small>(en-US)</small></a> to create the blob URL.</li>\n      <li>Set the image's height to 60 pixels.</li>\n      <li>Set up the image's load event handler to release the object URL, since it's no longer needed once the image has been loaded. This is done by calling the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/URL/revokeObjectURL\"><code>window.URL.revokeObjectURL()</code> <small>(en-US)</small></a> method, passing in the object URL string as specified by <code>img.src</code>.</li>\n      <li>Append the new list item to the list.</li>\n    </ol>\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"範例：上傳檔案","title":"範例：上傳檔案","isH3":false,"content":"<p>接下來這個範例顯示如何非同步的上傳檔案到伺服器。</p>"}},{"type":"prose","value":{"id":"新增上傳的工作","title":"新增上傳的工作","isH3":true,"content":"<p>接續先前創建縮圖的範例，將每個縮圖都設置 CSS class “obj”， 這使得我們可以很容易地使用<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Document/querySelectorAll\"><code>Document.querySelectorAll()</code> <small>(en-US)</small></a> 選擇使用者要上傳的圖檔，例如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">sendFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> imgs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".obj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> imgs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileUpload</span><span class=\"token punctuation\">(</span>imgs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> imgs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>第二行創建了 <code>imgs</code> 陣列，存放著所有文件中 CSS class 為 “obj” 的 Node。在這個範例中，我們使用這個來創建縮圖。Once we have that list, it's trivial to go through the list, creating a new <code>FileUpload</code> instance for each. Each of these handles uploading the corresponding file.</p>"}},{"type":"prose","value":{"id":"處理上傳檔案的程序","title":"處理上傳檔案的程序","isH3":true,"content":"<p><code>FileUpload</code> 函數接受圖檔和檔案.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">FileUpload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img<span class=\"token punctuation\">,</span> file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctrl <span class=\"token operator\">=</span> <span class=\"token function\">createThrobber</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xhr <span class=\"token operator\">=</span> xhr<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xhr<span class=\"token punctuation\">.</span>upload<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"progress\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>lengthComputable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">var</span> percentage <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>loaded <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> e<span class=\"token punctuation\">.</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          self<span class=\"token punctuation\">.</span>ctrl<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>percentage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  xhr<span class=\"token punctuation\">.</span>upload<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          self<span class=\"token punctuation\">.</span>ctrl<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>ctrl<span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">;</span>\n          canvas<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"http://demos.hacks.mozilla.org/paul/demos/resources/webservices/devnull.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">overrideMimeType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text/plain; charset=x-user-defined-binary'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">sendAsBinary</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsBinaryString</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>FileUpload()</code> 函數創建被用來顯示上傳進度的 throbber，接著創建 <a href=\"/zh-TW/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> 上傳檔案.</p>\n<p>傳輸資料前的幾個準備工作:</p>\n<ol>\n  <li>The <code>XMLHttpRequest</code>'s upload \"progress\" listener is set to update the throbber with new percentage information, so that as the upload progresses, the throbber will be updated based on the latest information.</li>\n  <li>The <code>XMLHttpRequest</code>'s upload \"load\" event handler is set to update the throbber with 100% as the progress information (to ensure the progress indicator actually reaches 100%, in case of granularity quirks during the process). It then removes the throbber, since it's no longer needed. This causes the throbber to disappear once the upload is complete.</li>\n  <li>The request to upload the image file is opened by calling <code>XMLHttpRequest</code>'s <code>open()</code> method to start generating a POST request.</li>\n  <li>The MIME type for the upload is set by calling the <code>XMLHttpRequest</code> function <code>overrideMimeType()</code>. In this case, we're using a generic MIME type; you may or may not need to set the MIME type at all, depending on your use case.</li>\n  <li>The <code>FileReader</code> object is used to convert the file to a binary string.</li>\n  <li>Finally, when the content is loaded the <code>XMLHttpRequest</code> function <code>sendAsBinary()</code> is called to upload the file's content.</li>\n</ol>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>備註：</strong> 範例中非標準的 <code>sendAsBinary</code> 方法已經在 Gecko 31 (Firefox 31 / Thunderbird 31 / SeaMonkey 2.28) 廢棄且很快將會被移除。可以改使用標準的 <code>send(Blob data)。</code></p>\n</div>"}},{"type":"prose","value":{"id":"非同步處理上傳檔案的程序","title":"非同步處理上傳檔案的程序","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">fileUpload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Please report improvements to: marco.buratto at tiscali.it</span>\n\n  <span class=\"token keyword\">var</span> fileName <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n    fileSize <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span>\n    fileData <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getAsBinary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// works on TEXT data ONLY.</span>\n    boundary <span class=\"token operator\">=</span> <span class=\"token string\">\"xxxxxxxxx\"</span><span class=\"token punctuation\">,</span>\n    uri <span class=\"token operator\">=</span> <span class=\"token string\">\"serverLogic.php\"</span><span class=\"token punctuation\">,</span>\n    xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> uri<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"multipart/form-data, boundary=\"</span><span class=\"token operator\">+</span>boundary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// simulate a file MIME POST request.</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Length\"</span><span class=\"token punctuation\">,</span> fileSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">&gt;=</span> <span class=\"token number\">200</span> <span class=\"token operator\">&amp;&amp;</span> xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">&lt;=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">304</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>responseText <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// display response.</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">;</span>\n  body <span class=\"token operator\">+=</span> <span class=\"token string\">\"Content-Disposition: form-data; name='fileId'; filename='\"</span> <span class=\"token operator\">+</span> fileName <span class=\"token operator\">+</span> <span class=\"token string\">\"'\\r\\n\"</span><span class=\"token punctuation\">;</span>\n  body <span class=\"token operator\">+=</span> <span class=\"token string\">\"Content-Type: application/octet-stream\\r\\n\\r\\n\"</span><span class=\"token punctuation\">;</span>\n  body <span class=\"token operator\">+=</span> fileData <span class=\"token operator\">+</span> <span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">;</span>\n  body <span class=\"token operator\">+=</span> <span class=\"token string\">\"--\"</span> <span class=\"token operator\">+</span> boundary <span class=\"token operator\">+</span> <span class=\"token string\">\"--\"</span><span class=\"token punctuation\">;</span>\n\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><em>使用二進制數據時，這些程式碼還需要修改。</em></p>"}},{"type":"prose","value":{"id":"你也可以參考這些文章","title":"你也可以參考這些文章","isH3":false,"content":"<ul>\n  <li><code><a href=\"/zh-TW/docs/Web/API/File\"><code>File</code></a></code></li>\n  <li><a href=\"/zh-TW/docs/Web/API/FileList\"><code>FileList</code></a></li>\n  <li><a href=\"/zh-TW/docs/Web/API/FileReader\"><code>FileReader</code></a></li>\n  <li><a href=\"/zh-TW/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\">Using XMLHttpRequest</a></li>\n  <li><a href=\"/zh-TW/Extensions/Using_the_DOM_File_API_in_chrome_code\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Using the DOM File API in chrome code</a></li>\n  <li><code><a href=\"/zh-TW/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a></code></li>\n</ul>"}}],"toc":[{"text":"使用 HTML 選擇本地檔案","id":"使用_html_選擇本地檔案"},{"text":"使用 change event 獲取選擇的檔案","id":"使用_change_event_獲取選擇的檔案"},{"text":"獲得選取檔案的資訊","id":"獲得選取檔案的資訊"},{"text":"使用 click() 方法隱藏檔案輸入元素","id":"使用_click_方法隱藏檔案輸入元素"},{"text":"使用拖放選取檔案","id":"使用拖放選取檔案"},{"text":"範例：顯示選取的圖片","id":"範例：顯示選取的圖片"},{"text":"使用 object URLs","id":"使用_object_urls"},{"text":"範例：使用 object URLs 顯示圖片","id":"範例：使用_object_urls_顯示圖片"},{"text":"範例：上傳檔案","id":"範例：上傳檔案"},{"text":"你也可以參考這些文章","id":"你也可以參考這些文章"}],"summary":"現在可以透過新增至 HTML5 DOM 的 File API 讓 web 內容要求使用者選取本地端的檔案後讀取被選取檔案中的內容。檔案的選取動作可以使用 HTML 的 input 元素，或是用拖曳檔案（drag and drop）的方式來完成。","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using files from web applications","locale":"en-US","native":"English (US)"},{"title":"Utilizar ficheros desde aplicaciones web","locale":"es","native":"Español"},{"title":"Utiliser des fichiers à partir d'applications web","locale":"fr","native":"Français"},{"title":"ウェブアプリケーションからのファイルの使用","locale":"ja","native":"日本語"},{"title":"웹 어플리케이션에서 파일 사용하기","locale":"ko","native":"한국어"},{"title":"Using files from web applications","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Использование файлов в веб приложениях","locale":"ru","native":"Русский"},{"title":"在 web 应用程序中使用文件","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/api/file_api/using_files_from_web_applications","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/api/file_api/using_files_from_web_applications/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/API","title":"Web APIs"},{"uri":"/zh-TW/docs/Web/API/File_API/Using_files_from_web_applications","title":"在網頁應用程式中使用本地檔案"}],"pageTitle":"在網頁應用程式中使用本地檔案 - Web APIs | MDN","noIndexing":false}}