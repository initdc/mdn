{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"JSON","mdn_url":"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"<ol><li><strong><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code> <small>(en-US)</small></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>JSON</code></strong> 物件包含了解析、或是轉換為 <a href=\"http://json.org/\" class=\"external\" rel=\" noopener\">JavaScript Object Notation</a>（<a href=\"/zh-TW/docs/Glossary/JSON\">JSON</a>）格式的方法。這物件不能被呼叫或建構；而除了它的兩個方法屬性以外，本身也沒有特別的功能。</p>"}},{"type":"prose","value":{"id":"描述","title":"描述","isH3":false,"content":""}},{"type":"prose","value":{"id":"javascript_object_notation","title":"JavaScript Object Notation","isH3":true,"content":"<p>JSON 是序列物件、陣列、數字、字串、布林值、還有 <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> 的語法。它建基、但不同於 JavaScript：有些 JavaScript 不是 JSON、而有些 JSON 不是 JavaScript。請參見 <a href=\"http://timelessrepo.com/json-isnt-a-javascript-subset\" class=\"external\" rel=\" noopener\">JSON: The JavaScript subset that isn't</a>。</p>\n<table>\n  <thead>\n    <tr>\n      <th>JavaScript 型別</th>\n      <th>與 JSON 的差別</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>物件與陣列</td>\n      <td>屬性名稱必須是包含在雙引號中的字串；禁止尾後逗號。</td>\n    </tr>\n    <tr>\n      <td>數字</td>\n      <td>數字不可以 0 作為開頭(在 JSON.stringify 0 會被忽略，但是在 JSON.parse 會造成語法錯誤)；小數點前面必須至少有一位數字。</td>\n    </tr>\n    <tr>\n      <td>字串</td>\n      <td>Only a limited set of characters may be escaped; certain control characters are prohibited; the Unicode line separator (<a href=\"https://unicode-table.com/en/2028/\" class=\"external\" rel=\" noopener\">U+2028</a>) and paragraph separator (<a href=\"https://unicode-table.com/en/2029/\" class=\"external\" rel=\" noopener\">U+2029</a>) characters are permitted; strings must be double-quoted. See the following example where <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> works fine and a <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>SyntaxError</code></a> is thrown when evaluating the code as JavaScript:</td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> code <span class=\"token operator\">=</span> <span class=\"token string\">'\"\\u2028\\u2029\"'</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// evaluates to \"\\u2028\\u2029\" in all engines</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws a SyntaxError in old engines</span>\n</code></pre></div>\n<p>JSON 的完整語法如下：</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">JSON = null\n    or true or false\n    or JSONNumber\n    or JSONString\n    or JSONObject\n    or JSONArray\n\nJSONNumber = - PositiveNumber\n          or PositiveNumber\nPositiveNumber = DecimalNumber\n              or DecimalNumber . Digits\n              or DecimalNumber . Digits ExponentPart\n              or DecimalNumber ExponentPart\nDecimalNumber = 0\n             or OneToNine Digits\nExponentPart = e Exponent\n            or E Exponent\nExponent = Digits\n        or + Digits\n        or - Digits\nDigits = Digit\n      or Digits Digit\nDigit = 0 through 9\nOneToNine = 1 through 9\n\nJSONString = \"\"\n          or \" StringCharacters \"\nStringCharacters = StringCharacter\n                or StringCharacters StringCharacter\nStringCharacter = any character\n                  except \" or \\ or U+0000 through U+001F\n               or EscapeSequence\nEscapeSequence = \\\" or \\/ or \\\\ or \\b or \\f or \\n or \\r or \\t\n              or \\u HexDigit HexDigit HexDigit HexDigit\nHexDigit = 0 through 9\n        or A through F\n        or a through f\n\nJSONObject = { }\n          or { Members }\nMembers = JSONString : JSON\n       or Members , JSONString : JSON\n\nJSONArray = [ ]\n         or [ ArrayElements ]\nArrayElements = JSON\n             or ArrayElements , JSON\n</pre></div>\n<p>Insignificant whitespace may be present anywhere except within a <code>JSONNumber</code> (numbers must contain no whitespace) or <code>JSONString</code> (where it is interpreted as the corresponding character in the string, or would cause an error). The tab character (<a href=\"https://unicode-table.com/en/0009/\" class=\"external\" rel=\" noopener\">U+0009</a>), carriage return (<a href=\"https://unicode-table.com/en/000D/\" class=\"external\" rel=\" noopener\">U+000D</a>), line feed (<a href=\"https://unicode-table.com/en/000A/\" class=\"external\" rel=\" noopener\">U+000A</a>), and space (<a href=\"https://unicode-table.com/en/0020/\" class=\"external\" rel=\" noopener\">U+0020</a>) characters are the only valid whitespace characters.</p>"}},{"type":"prose","value":{"id":"方法","title":"方法","isH3":false,"content":"<dl>\n  <dt id=\"json.parse\"><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a></dt>\n  <dd>\n    <p>解析 JSON 字串，能改變給定值和屬性、接著回傳解析值。</p>\n  </dd>\n  <dt id=\"json.stringify\"><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a></dt>\n  <dd>\n    <p>回傳給定的 JSON 對應字串，可自行決定只想包括哪些特定屬性、或替換的屬性值。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"polyfill","title":"Polyfill","isH3":false,"content":"<p>舊版瀏覽器並不支援 <code>JSON</code>。你可以在程式碼開頭插入以下程式碼，以解決這個問題。這個程式碼能實做不支援原生 <code>JSON</code> 物件的瀏覽器（如 Internet Explorer 6）。</p>\n<p>以下演算法能仿製原生 <code>JSON</code> 物件。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">parse</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sJSON</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'('</span> <span class=\"token operator\">+</span> sJSON <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">stringify</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> toString <span class=\"token operator\">=</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> hasOwnProperty <span class=\"token operator\">=</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>hasOwnProperty<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> isArray <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span>isArray <span class=\"token operator\">||</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'[object Array]'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> escMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string-property property\">'\"'</span><span class=\"token operator\">:</span> <span class=\"token string\">'\\\\\"'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'\\\\'</span><span class=\"token operator\">:</span> <span class=\"token string\">'\\\\\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'\\b'</span><span class=\"token operator\">:</span> <span class=\"token string\">'\\\\b'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'\\f'</span><span class=\"token operator\">:</span> <span class=\"token string\">'\\\\f'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'\\n'</span><span class=\"token operator\">:</span> <span class=\"token string\">'\\\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'\\r'</span><span class=\"token operator\">:</span> <span class=\"token string\">'\\\\r'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'\\t'</span><span class=\"token operator\">:</span> <span class=\"token string\">'\\\\t'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">escFunc</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> escMap<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">'\\\\u'</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> escRE <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\\\\"\\u0000-\\u001F\\u2028\\u2029]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token string\">'null'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">isFinite</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">'null'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'boolean'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value<span class=\"token punctuation\">.</span>toJSON <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> res <span class=\"token operator\">=</span> <span class=\"token string\">'['</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n              res <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">?</span> <span class=\"token string\">', '</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> res <span class=\"token operator\">+</span> <span class=\"token string\">']'</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'[object Object]'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token keyword\">in</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token comment\">// in case \"hasOwnProperty\" has been shadowed</span>\n              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                tmp<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">': '</span> <span class=\"token operator\">+</span> <span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'{'</span> <span class=\"token operator\">+</span> tmp<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">', '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'\"'</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>escRE<span class=\"token punctuation\">,</span> escFunc<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>More complex well-known <a href=\"http://remysharp.com/2010/10/08/what-is-a-polyfill/\" class=\"external\" rel=\" noopener\">polyfills</a> for the <code>JSON</code> object are <a href=\"https://github.com/douglascrockford/JSON-js\" class=\"external\" rel=\" noopener\">JSON2</a> and <a href=\"http://bestiejs.github.com/json3\" class=\"external\" rel=\" noopener\">JSON3</a>.</p>"}},{"type":"specifications","value":{"title":"規範","id":"規範","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/structured-data.html#sec-json-object","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.JSON"}},{"type":"browser_compatibility","value":{"title":"瀏覽器相容性","id":"瀏覽器相容性","isH3":false,"query":"javascript.builtins.JSON","dataURL":"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON/bcd.json"}},{"type":"prose","value":{"id":"參見","title":"參見","isH3":false,"content":"<ul>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\"><code>Date.prototype.toJSON()</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"描述","id":"描述"},{"text":"方法","id":"方法"},{"text":"Polyfill","id":"polyfill"},{"text":"規範","id":"規範"},{"text":"瀏覽器相容性","id":"瀏覽器相容性"},{"text":"參見","id":"參見"}],"summary":"JSON 物件包含了解析、或是轉換為 JavaScript Object Notation（JSON）格式的方法。這物件不能被呼叫或建構；而除了它的兩個方法屬性以外，本身也沒有特別的功能。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"JSON","locale":"en-US","native":"English (US)"},{"title":"JSON","locale":"es","native":"Español"},{"title":"JSON","locale":"fr","native":"Français"},{"title":"JSON","locale":"ja","native":"日本語"},{"title":"JSON","locale":"ko","native":"한국어"},{"title":"JSON","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"JSON","locale":"ru","native":"Русский"},{"title":"JSON","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/javascript/reference/global_objects/json","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/javascript/reference/global_objects/json/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-TW/docs/Web/JavaScript/Reference","title":"JavaScript 參考文件"},{"uri":"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects","title":"標準內建物件"},{"uri":"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/JSON","title":"JSON"}],"pageTitle":"JSON - JavaScript | MDN","noIndexing":false}}