{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Array.prototype.slice()","mdn_url":"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/slice","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"<ol><li><strong><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@species\"><code>get Array[@@species]</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@unscopables\"><code>Array.prototype[@@unscopables]</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>Array.prototype.length</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator\"><code>Array.prototype[@@iterator]()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at\"><code>Array.prototype.at()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"><code>Array.prototype.concat()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\"><code>Array.prototype.copyWithin()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\"><code>Array.prototype.entries()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.prototype.every()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"><code>Array.prototype.fill()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array.prototype.filter()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"><code>Array.prototype.find()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\"><code>Array.prototype.findIndex()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast\"><code>Array.prototype.findLast()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex\"><code>Array.prototype.findLastIndex()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\"><code>Array.prototype.flat()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap\"><code>Array.prototype.flatMap()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/group\"><code>Array.prototype.group()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/groupToMap\"><code>Array.prototype.groupToMap()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\"><code>Array.prototype.includes()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>Array.prototype.indexOf()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\"><code>Array.isArray()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"><code>Array.prototype.join()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/keys\"><code>Array.prototype.keys()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\"><code>Array.prototype.lastIndexOf()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/of\"><code>Array.of()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\"><code>Array.prototype.pop()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>Array.prototype.push()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\"><code>Array.prototype.reduce()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\"><code>Array.prototype.reduceRight()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\"><code>Array.prototype.reverse()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\"><code>Array.prototype.shift()</code></a></li><li><em><code>Array.prototype.slice()</code></em></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"><code>Array.prototype.some()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"><code>Array.prototype.sort()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.prototype.splice()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toLocaleString\"><code>Array.prototype.toLocaleString()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/toString\"><code>Array.prototype.toString()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\"><code>Array.prototype.unshift()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/values\"><code>Array.prototype.values()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code> <small>(en-US)</small></a></li></ol></li><li><strong><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code> <small>(en-US)</small></a></li><li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code> <small>(en-US)</small></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>slice()</code></strong> 方法會回傳一個新陣列物件，為原陣列選擇之 <code>begin</code> 至 <code>end</code>（不含 <code>end</code>）部分的淺拷貝（shallow copy）。而原本的陣列將不會被修改。</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/array-slice.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"語法","title":"語法","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: plain notranslate\">arr.slice([begin[, end]])\n</pre></div>"}},{"type":"prose","value":{"id":"參數","title":"參數","isH3":true,"content":"<dl>\n  <dt id=\"begin\"><code>begin</code> <span class=\"badge inline optional\">選擇性</span></dt>\n  <dd>\n    <p>自哪一個索引（起始為 0）開始提取拷貝。可使用負數索引，表示由陣列的最末項開始提取。<code>slice(-2)</code> 代表拷貝陣列中的最後兩個元素。假如 <code>begin</code> 為 undefined，則 <code>slice</code> 會從索引 <code>0</code> 開始提取。</p>\n  </dd>\n  <dt id=\"end\"><code>end</code> <span class=\"badge inline optional\">選擇性</span></dt>\n  <dd>\n    <p>至哪一個索引（起始為 0）<em>之前</em>停止提取。<code>slice</code> 提取但不包含至索引 <code>end</code>。舉例來說，<code>slice(1,4)</code> 提取了陣列中第二個元素至第四個元素前為止（元素索引 1、2 以及 3）來拷貝。可使用負數索引，表示由陣列的最末項開始提取。<code>slice(2,-1)</code> 代表拷貝陣列中第三個元素至倒數第二個元素。若省略了 <code>end</code>，則 <code>slice</code> 會提取至陣列的最後一個元素（<code>arr.length</code>）。假如 <code>end</code> 大於陣列的長度，<code>slice</code> 會提取至陣列的最後一個元素（<code>arr.length</code>）。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"回傳值","title":"回傳值","isH3":true,"content":"<p>一個包含提取之元素的新陣列。</p>"}},{"type":"prose","value":{"id":"說明","title":"說明","isH3":false,"content":"<p><code>slice</code> 不會修改原本的陣列，而是回傳由原本的陣列淺層複製的元素。原始陣列的元素會按照下列規則拷貝：</p>\n<ul>\n  <li>如果該元素是個對象引用（不是實際的對象），<code>slice</code> 會拷貝這個對象引用到新的陣列內。兩個對象引用都引用了同一個對象。如果被引用的對象發生改變，則新的和原來的陣列中的這個元素也會發生改變。</li>\n  <li>對於字串、數字、布林來說 (不是 <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>、<a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> 或者 <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> 對象), <code>slice</code> 會拷貝這些值到新的陣列內。在別的陣列內修改這些字串、數字或是布林，將不會影響另一個陣列。</li>\n</ul>\n<p>如果添加了新的元素到另一個陣列內，則另一個不會受到影響。</p>"}},{"type":"prose","value":{"id":"範例","title":"範例","isH3":false,"content":""}},{"type":"prose","value":{"id":"return_a_portion_of_an_existing_array","title":"Return a portion of an existing array","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lemon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mango'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> citrus <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// fruits contains ['Banana', 'Orange', 'Lemon', 'Apple', 'Mango']</span>\n<span class=\"token comment\">// citrus contains ['Orange','Lemon']</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"using_slice","title":"Using <code>slice</code>","isH3":true,"content":"<p>In the following example, <code>slice</code> creates a new array, <code>newCar</code>, from <code>myCar</code>. Both include a reference to the object <code>myHonda</code>. When the color of <code>myHonda</code> is changed to purple, both arrays reflect the change.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Using slice, create newCar from myCar.</span>\n<span class=\"token keyword\">var</span> myHonda <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">wheels</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">engine</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cylinders</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token number\">2.2</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myCar <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>myHonda<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cherry condition'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'purchased 1997'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> newCar <span class=\"token operator\">=</span> myCar<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Display the values of myCar, newCar, and the color of myHonda</span>\n<span class=\"token comment\">//  referenced from both arrays.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myCar = '</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>myCar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newCar = '</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>newCar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myCar[0].color = '</span> <span class=\"token operator\">+</span> myCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newCar[0].color = '</span> <span class=\"token operator\">+</span> newCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Change the color of myHonda.</span>\nmyHonda<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">'purple'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The new color of my Honda is '</span> <span class=\"token operator\">+</span> myHonda<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Display the color of myHonda referenced from both arrays.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myCar[0].color = '</span> <span class=\"token operator\">+</span> myCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newCar[0].color = '</span> <span class=\"token operator\">+</span> newCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This script writes:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myCar <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">wheels</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">engine</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">cylinders</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'cherry condition'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'purchased 1997'</span><span class=\"token punctuation\">]</span>\nnewCar <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">wheels</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">engine</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">cylinders</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nmyCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> red\nnewCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> red\nThe <span class=\"token keyword\">new</span> <span class=\"token class-name\">color</span> <span class=\"token keyword\">of</span> my Honda is purple\nmyCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> purple\nnewCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> purple\n</code></pre></div>","titleAsText":"Using slice"}},{"type":"prose","value":{"id":"類陣例（array-like）物件","title":"類陣例（Array-like）物件","isH3":false,"content":"<p><code>slice</code> method can also be called to convert Array-like objects / collections to a new Array. You just bind the method to the object. The <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Functions/arguments\"><code>arguments</code></a> inside a function is an example of an 'array-like object'.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> list1 <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 3]</span>\n</code></pre></div>\n<p>Binding can be done with the .<code>call</code> function of <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype</code></a> and it can also be reduced using <code>[].slice.call(arguments)</code> instead of <code>Array.prototype.slice.call</code>. Anyway, it can be simplified using <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>bind</code></a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> unboundSlice <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>slice<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> slice <span class=\"token operator\">=</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>unboundSlice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> list1 <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 3]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"streamlining_cross-browser_behavior","title":"Streamlining cross-browser behavior","isH3":false,"content":"<p>Although host objects (such as DOM objects) are not required by spec to follow the Mozilla behavior when converted by <code>Array.prototype.slice</code> and IE &lt; 9 does not do so, versions of IE starting with version 9 do allow this. “Shimming” it can allow reliable cross-browser behavior. As long as other modern browsers continue to support this ability, as currently do IE, Mozilla, Chrome, Safari, and Opera, developers reading (DOM-supporting) slice code relying on this shim will not be misled by the semantics; they can safely rely on the semantics to provide the now apparently <em>de facto</em> standard behavior. (The shim also fixes IE to work with the second argument of <code>slice()</code> being an explicit <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>/<a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> value as earlier versions of IE also did not allow but all modern browsers, including IE &gt;= 9, now do.)</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/**\n * Shim for \"fixing\" IE's lack of support (IE &lt; 9) for applying slice\n * on host objects like NamedNodeMap, NodeList, and HTMLCollection\n * (technically, since host objects have been implementation-dependent,\n * at least before ES2015, IE hasn't needed to work this way).\n * Also works on strings, fixes IE &lt; 9 to allow an explicit undefined\n * for the 2nd argument (as in Firefox), and prevents errors when\n * called on other DOM objects.\n */</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> _slice <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>slice<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Can't be used with DOM elements in IE &lt; 9</span>\n    <span class=\"token function\">_slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Fails in IE &lt; 9</span>\n    <span class=\"token comment\">// This will work for genuine arrays, array-like objects,</span>\n    <span class=\"token comment\">// NamedNodeMap (attributes, entities, notations),</span>\n    <span class=\"token comment\">// NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),</span>\n    <span class=\"token comment\">// and will not fail on other DOM objects (as do DOM elements in IE &lt; 9)</span>\n    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">slice</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">begin<span class=\"token punctuation\">,</span> end</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// IE &lt; 9 gets unhappy with an undefined end argument</span>\n      end <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> end <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> end <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// For native Array objects, we use the native slice function</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'[object Array]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> begin<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// For array like object we handle it ourselves.</span>\n      <span class=\"token keyword\">var</span> i<span class=\"token punctuation\">,</span> cloned <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        size<span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Handle negative value for \"begin\"</span>\n      <span class=\"token keyword\">var</span> start <span class=\"token operator\">=</span> begin <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      start <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> start <span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">+</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Handle negative value for \"end\"</span>\n      <span class=\"token keyword\">var</span> upTo <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> end <span class=\"token operator\">==</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> len<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        upTo <span class=\"token operator\">=</span> len <span class=\"token operator\">+</span> end<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// Actual expected size of the slice</span>\n      size <span class=\"token operator\">=</span> upTo <span class=\"token operator\">-</span> start<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cloned <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>charAt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            cloned<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            cloned<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>start <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">return</span> cloned<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"規範","id":"規範","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.slice","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Array.slice"}},{"type":"browser_compatibility","value":{"title":"瀏覽器相容性","id":"瀏覽器相容性","isH3":false,"query":"javascript.builtins.Array.slice","dataURL":"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/slice/bcd.json"}},{"type":"prose","value":{"id":"參見","title":"參見","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.prototype.splice()</code></a></li>\n  <li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li>\n  <li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li>\n</ul>"}}],"toc":[{"text":"語法","id":"語法"},{"text":"說明","id":"說明"},{"text":"範例","id":"範例"},{"text":"類陣例（Array-like）物件","id":"類陣例（array-like）物件"},{"text":"Streamlining cross-browser behavior","id":"streamlining_cross-browser_behavior"},{"text":"規範","id":"規範"},{"text":"瀏覽器相容性","id":"瀏覽器相容性"},{"text":"參見","id":"參見"}],"summary":"slice() 方法會回傳一個新陣列物件，為原陣列選擇之 begin 至 end（不含 end）部分的淺拷貝（shallow copy）。而原本的陣列將不會被修改。","popularity":0.0026,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Array.prototype.slice()","locale":"en-US","native":"English (US)"},{"title":"Array.prototype.slice()","locale":"es","native":"Español"},{"title":"Array.prototype.slice()","locale":"fr","native":"Français"},{"title":"Array.prototype.slice()","locale":"ja","native":"日本語"},{"title":"Array.prototype.slice()","locale":"ko","native":"한국어"},{"title":"Array.prototype.slice()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Array.prototype.slice()","locale":"ru","native":"Русский"},{"title":"Array.prototype.slice()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/javascript/reference/global_objects/array/slice","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/javascript/reference/global_objects/array/slice/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-TW/docs/Web/JavaScript/Reference","title":"JavaScript 參考文件"},{"uri":"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects","title":"標準內建物件"},{"uri":"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array","title":"Array"},{"uri":"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/slice","title":"Array.prototype.slice()"}],"pageTitle":"Array.prototype.slice() - JavaScript | MDN","noIndexing":false}}