{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"建構子函數的使用","mdn_url":"/zh-TW/docs/Web/JavaScript/Reference/Operators/new","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>還有一個選擇，你可以按照這兩個步驟來建立物件︰</p>\n<ol>\n  <li>編寫建構子函數以完成物件類型的定義。</li>\n  <li>使用 new 建立物件的實體。</li>\n</ol>\n<p>若要定義物件類型，就指定物件類型的名稱、屬性、方法並建立函數。舉例來說，假設你想要給 car 建立物件類型。你希望這個物件的類型稱作 <code>car</code>，而且你還希望他有 make、model、year 這些屬性。要做到這些，你需要編寫出以下的函數︰</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">car</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">make<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> year</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>make <span class=\"token operator\">=</span> make<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> model<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> year<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>注意 <code>this</code> 是用來把傳送給函數的值代入給物件的屬性。</p>\n<p>現在你可以建立稱作 <code>mycar</code> 的物件如下所示︰</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>mycar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">car</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Eagle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Talon TSi\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1993</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>這個語句建立 <code>mycar</code> 並且把指定的值代入給他自己的屬性。然後 <code>mycar.make</code> 的值是字串 \"Eagle\"，<code>mycar.year</code> 是整數 1993，依此類推。</p>\n<p>你可以藉由呼叫 <code>new</code> 來建立許多個 <code>car</code> 的物件。例如，</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>kenscar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">car</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nissan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"300ZX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1992</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvpgscar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">car</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mazda\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Miata\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1990</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>物件可以有另一個物件本身的屬性。例如，假設你定義稱為 <code>person</code> 的物件如下︰</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>然後實體化兩個新的 person 物件如下︰</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>rand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Rand McKinnon\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"M\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nken <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ken Jones\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"M\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>然後你可以改寫 car 的定義，加入用來接受 <code>person</code> 物件的 owner 屬性，如下︰</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">car</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">make<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> owner</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>make <span class=\"token operator\">=</span> make<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> model<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> year<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>owner <span class=\"token operator\">=</span> owner<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>若要實體化新的物件，你可以如下使用︰</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>car1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">car</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Eagle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Talon TSi\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1993</span><span class=\"token punctuation\">,</span> rand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncar2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">car</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Nissan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"300ZX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1992</span><span class=\"token punctuation\">,</span> ken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>注意，當建立新的物件的時候，傳入的並不是字面表達字串或整數值，上面的語句把 <code>rand</code> 和 <code>ken</code> 物件當作參數傳給 owners。然後如果你希望找出 car2 的 owner 的名稱，你可以如下存取屬性︰</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>car2<span class=\"token punctuation\">.</span>owner<span class=\"token punctuation\">.</span>name\n</code></pre></div>\n<p>注意，你永遠可以給之前定義的物件加入屬性。例如，語句</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>car1<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span>\n</code></pre></div>\n<p>把 <code>color</code> 屬性加入給 car1，並且把 \"black\" 的值代入給新加入的屬性。然而，這樣並不能影響到其他的任何物件。若要給所有同樣類型的物件加入新的屬性，你必須把新的屬性加入到 car 物件類型的定義。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Web/JavaScript/教學/新物件的建立/物件初始化子的使用\">« 前頁</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Web/JavaScript/教學/新物件的建立/物件屬性的索引\">次頁  »</a></li>\n</ul>"}}],"toc":[],"summary":"還有一個選擇，你可以按照這兩個步驟來建立物件︰","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"new operator","locale":"en-US","native":"English (US)"},{"title":"Operador new","locale":"es","native":"Español"},{"title":"L'opérateur new","locale":"fr","native":"Français"},{"title":"new 演算子","locale":"ja","native":"日本語"},{"title":"new operator","locale":"ko","native":"한국어"},{"title":"new operator","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Оператор new","locale":"ru","native":"Русский"},{"title":"new 运算符","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/web/javascript/reference/operators/new","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/web/javascript/reference/operators/new/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Web","title":"給開發者的網頁技術文件"},{"uri":"/zh-TW/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/zh-TW/docs/Web/JavaScript/Reference","title":"JavaScript 參考文件"},{"uri":"/zh-TW/docs/Web/JavaScript/Reference/Operators","title":"運算式與運算子"},{"uri":"/zh-TW/docs/Web/JavaScript/Reference/Operators/new","title":"建構子函數的使用"}],"pageTitle":"建構子函數的使用 - JavaScript | MDN","noIndexing":false}}