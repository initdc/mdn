{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Django Tutorial Part 3: Using models","mdn_url":"/zh-TW/docs/Learn/Server-side/Django/Models","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web\"><strong>全新手請從這開始！</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Web 入門</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web\">Web 概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">安裝基本軟體</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">自己的網站會是什麼樣子？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">處理檔案</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">發佈自己的網站</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Web 運作的方式</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/HTML\"><strong>HTML — 架構 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 介紹</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML\">HTML 概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">HTML 入門</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">標題裡是什麼？HTML 中的後設資料 (Metadata)</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML 文字基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">建立超連結</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">進階文字格式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">文件與網站架構</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">HTML 除錯</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">親和度：設個字母</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">親和度：架構出具備內容的網頁</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>多媒體與嵌入</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding\">多媒體與嵌入的概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">HTML 中的圖片</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">視訊與音訊內容</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">從物件到 iframe — 其他嵌入技巧</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">為 Web 新增向量圖</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">適應性圖片</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">親和度：Mozilla 形象頁面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 表格</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables\">HTML 表格概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Basics\">HTML表格基礎</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/CSS\"><strong>CSS — 設計 Web 的風格</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>初探 CSS</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps\">初探 CSS（概述）</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/What_is_CSS\">CSS 是什麼？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/Getting_started\">CSS 入門</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/How_CSS_works\">CSS 怎麼運作</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 組件</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>樣式化文字</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text\">樣式化文字概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Fundamentals\">基礎的文字與字型樣式化</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Styling_lists\">樣式化列表</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Styling_links\">樣式化連結</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Web_fonts\">Web 字型</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">親合度：設定社區大學首頁的版面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 版面配置</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout\">CSS 版面配置概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Flexbox\">彈性區塊</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Grids\">格線</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Floats\">浮動</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Positioning\">定位</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/JavaScript\"><strong>JavaScript — 動態的用戶端指令</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps\">JavaScript 第一步概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">什麼是 JavaScript？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/A_first_splash\">初次接觸 JavaScript</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_went_wrong\">出了什麼問題？JavaScript 疑難排解</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Variables\">儲存你所需的資訊 — 變數</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Math\">JavaScript 基礎概念 — 數字與運算子</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Strings\">處理文字 — JavaScript 中的字串</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Useful_string_methods\">有用的字串函式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Arrays\">陣列</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Silly_story_generator\">親合度：傻瓜故事產生器</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 基礎要件</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks\">JavaScript 基礎要件概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/conditionals\">於程式碼中決策 — 條件</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Looping_code\">程式碼迴圈</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Functions\">函式 — 可重複使用的程式碼區塊</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">建立自己的函式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Return_values\">函式回傳值</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Events\">事件介紹</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Image_gallery\">親合度：圖庫</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 物件介紹</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects\">JavaScript 物件概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Basics\">物件基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object_prototypes\">物件原型</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/JSON\">使用 JSON 資料</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object_building_practice\">物件建構實作</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">親合度：為彈跳球展示新增功能</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>非同步的 JavaScript</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客戶端 web APIs</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs\">客戶端 web APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">文件操作</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Forms\"><strong>網頁表單-與使用者資料合作</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>核心的表單學習途徑</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Forms\">網頁表單概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/How_to_structure_a_web_form\">如何建構網頁表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>深入網頁表單</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Accessibility\"><strong>無障礙網頁 — 每個人都可以使用的網頁</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>無障礙網頁指南</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility\">無障礙網頁概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/What_is_accessibility\">何謂無障礙網頁？</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA 基礎</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/Mobile\">行動裝置上的無障礙</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>無障礙網頁評估</summary>\n        <ol>\n            <li><a href=\"/zh-TW/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing\"><strong>工具與測試</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>介紹前端框架</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">前端框架簡介</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">開始學 Vue</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Svelte 入門</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Angular 新手入門</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">開始開發我們的 Angular 待辦事項應用程式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">使用樣式點綴我們的 Angular 應用程式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">建立一個 item 元件</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">篩選我們的待辦事項項目</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">建構 Angular 應用程式與更多資源</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub 概述</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>跨瀏覽器測試</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing\">跨瀏覽器測試概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">跨瀏覽器測試介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">測試執行策略</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">處理常見的 HTML 與 CSS 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">處理常見的 JavaScript 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">處理常見的親合度問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">建置功能偵測</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">自動化測試介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">設定自己的自動化測試環境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/zh-TW/docs/Learn/Server-side\"><strong>伺服端網站程式設計</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>第一步</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps\">第一步概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Introduction\">伺服端介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Client-Server_overview\">用戶端概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Web_frameworks\">伺服端網路框架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Website_security\">網站安全</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Django 網站框架 (Python)</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django\">Django 網站框架 (Python) 概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Introduction\">介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/development_environment\">設定開發環境</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Tutorial_local_library_website\">線上教學：本地圖書館網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/skeleton_website\">線上教學 2：建立網站骨架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Models\">線上教學 3：使用模型</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Admin_site\">線上教學 4：Django 管理網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Home_page\">線上教學 5：建立我們的首頁</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Generic_views\">線上教學 6：泛型清單與細節檢視</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Sessions\">線上教學 7：會話 (Sessions) 框架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Authentication\">線上教學 8：使用者授權與許可</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Forms\">線上教學 9：搭配表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Testing\">線上教學 10：測試 Django 的 Web App</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Deployment\">線上教學 11：佈署 Django 至產品</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/web_application_security\">Web App 安全性</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/django_assessment_blog\">親合度：DIY 迷你部落格</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express 網站框架 (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs\">Express 網站框架 (Node.js/JavaScript) 概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node 介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/development_environment\">設定 Node (Express) 的開發環境</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express 教學 1: 本地圖書館網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express 教學 2: 建立骨架網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express 教學 3: 使用資料庫 (Mongoose)</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/routes\">Express 教學 4: 路由與控制器</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5: 呈現圖書館的資料</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/forms\">Express 教學 6: 使用表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/deployment\">Express 教學 7: 佈署到正式環境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>更多資源</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>常見問題</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/HTML/Howto\">HTML 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/CSS/Howto\">CSS 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Web_mechanics\">Web 的運作方式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Tools_and_setup\">工具與設定</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Design_and_accessibility\">設計與親合度</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/Server-side/Django/skeleton_website\"> 前頁 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/Server-side/Django\"> Overview: Django</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/Server-side/Django/Admin_site\"> 次頁  </a></li>\n</ul>\n<p>本文介紹如何為 <a href=\"/zh-TW/docs/Learn/Server-side/Django/Tutorial_local_library_website\">LocalLibrary</a> 網站定義模型。它解釋了模型是什麼、聲明的方式以及一些主要字段類型。它還簡要展示了您可以訪問模型數據的幾個主要方法。</p>\n<table class=\"learn-box standard-table\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">前提:</th>\n      <td><a href=\"/zh-TW/docs/Learn/Server-side/Django/skeleton_website\">Django 教學 2: 創建骨架網站。</a></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">目標:</th>\n      <td>\n        <p>能夠設計和創建自己的模型，選擇適當的欄位。</p>\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"概覽","title":"概覽","isH3":false,"content":"<p>Django Web 應用程序通過被稱為模型的 Python 對象，訪問和管理數據。模型定義儲存數據的結構，包括欄位類型、以及可能還有最大大小，默認值，選擇列表選項，幫助文檔，表單的標籤文本等。模型的定義與底層數據庫無關 — 你可以選擇其中一個，作為項目設置的一部分。一旦你選擇了要使用的數據庫，你就不需要直接與之交談 — 只需編寫模型結構和其他代碼，Django 可以處理與數據庫通信的所有繁瑣工作。</p>\n<p>本教程將介紹如何定義和訪問 <a href=\"/zh-TW/docs/Learn/Server-side/Django/Tutorial_local_library_website\">LocalLibrary</a> 範例網站的模型。</p>"}},{"type":"prose","value":{"id":"設計_locallibrary_模型","title":"設計 LocalLibrary 模型","isH3":false,"content":"<p>在你投入開始編寫模型之前，花幾分鐘時間考慮我們需要存放的數據、以及不同物件之間的關係。</p>\n<p>我們知道，我們需要存放書籍的信息（標題，摘要，作者，語言，類別，ISBN），並且我們可能有多個副本（具有全域唯一的 ID，可用狀態等）。我們可以存放更多關於作者的信息，而不僅僅是他的名字，或多個作者的相同或相似的名稱。我們希望能根據書名，作者名，語言和類別對信息進行排序。</p>\n<p>在設計模型時，為每個“物件”分別設置模型（相關信息分組）是有意義的。在這種情況下，明顯的物件是書籍，書本實例和作者。</p>\n<p>你可能想要使用模型，來表示選擇列表選項（例如：選擇下拉列表），而不是硬編碼，將選項編寫進網站—這是當所有選項面臨未知、或改變時候的建議。在本網站，模型的明顯候選，包括書籍類型（例如：科幻小說，法國詩歌等）和語言（英語，法語，日語）。</p>\n<p>一旦我們已經決定了我們的模型和字段，我們需要考慮它們的關聯性。Django 允許你來定義一對一的關聯（<code>OneToOneField</code>），一對多（<code>ForeignKey</code>）和多對多（<code>ManyToManyField</code>）。</p>\n<p>思考一下，在網站中，我們將定義模型展示在下面 UML 關聯圖中（下圖）。如以上，我們創建了書的模型（書的通用細節），書本實例（系統中特定物理副本的書籍狀態），和作者。我們也決定了各類型模型，以便通過管理界面創建／選擇值。我們決定不給<code>BookInstance:status</code>一個模型 —我們硬編碼了（<code>LOAN_STATUS</code>）的值，因為我們不希望其改變。在每個框中，你可以看到模型名稱，字段名稱和類型，以及方法和返回類型。</p>\n<p>該圖顯示模型之間的關係，包括它們的多重性。多重性是圖中的數字，顯示可能存在於關係中的每個模型的數量（最大值和最小值）。例如，盒子之間的連接線，顯示書和類型相關。書模型中數字表明，一本書必須有一個或多個類型（想要多少就多少），而類型(Genres)模型線的另一端的數字(0..*)，表明它可以有零個或多個關聯書本(可以有這個書籍類別，也有對應的書；也可以是有這個書籍類別，但沒有對應的書)。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Django/Models/local_library_model_uml.svg\" alt=\"LocalLibrary Model UML\" width=\"1140\" height=\"724\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> 下一節提供一個基本解釋模型的定義與使用，當你在讀的時候，也需要一邊考慮如何構建上圖中的每個模型。</p>\n</div>"}},{"type":"prose","value":{"id":"模型入門","title":"模型入門","isH3":false,"content":"<p>本節簡要概述了模型定義，和一些重要的字段、和字段參數。</p>"}},{"type":"prose","value":{"id":"模型定義","title":"模型定義","isH3":true,"content":"<p>模型通常在 app 中的 <strong>models.py</strong> 檔案中定義。它們是繼承自 <code>django.db.models.Model</code>的子類， 可以包括屬性，方法和描述性資料(metadata)。下面區段為一個名為<code>MyModelName</code>的「典型」模型範例碼：</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyModelName</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"A typical class defining a model, derived from the Model class.\"\"\"</span>\n\n    <span class=\"token comment\"># Fields</span>\n    my_field_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> help_text<span class=\"token operator\">=</span><span class=\"token string\">'Enter field documentation'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token comment\"># Metadata</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'-my_field_name'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># Methods</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_absolute_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token triple-quoted-string string\">\"\"\"Returns the url to access a particular instance of MyModelName.\"\"\"</span>\n            <span class=\"token keyword\">return</span> reverse<span class=\"token punctuation\">(</span><span class=\"token string\">'model-detail-view'</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"String for representing the MyModelName object (in Admin site etc.).\"\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>field_name\n</code></pre></div>\n<p>在下面章節中，我們將更詳細解釋模型的每個功能。</p>\n<h4 id=\"字段\">字段</h4>\n<p>模型可以有任意數量的字段、任何類型的字段 — 每個字段都表示我們要存放在我們的一個資料庫中的一欄數據(a column of data)。每筆資料庫記錄（列 row）將由每個字段值之一組成。我們來看看上面看到的例子。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code>my_field_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> help_text<span class=\"token operator\">=</span><span class=\"token string\">'Enter field documentation'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>在上面例子中，有個叫 <code>my_field_name</code> 的單一字段，其類型為 <code>models.CharField</code> — 這意味著這個字段將會包含字母、數字字符串。使用特定的類別分配字段類型，這些類別，決定了用於將數據存放在資料庫中的記錄的類型，以及從 HTML 表單接收到值（即構成有效值）時使用的驗證標準。字段類型還可以獲取參數，進一步指定字段如何存放或如何被使用。在這裡的情況下，我們給了字段兩個參數：</p>\n<ul>\n  <li><code>max_length=20</code> — 表示此字段中值的最大長度為 20 個字符的狀態。</li>\n  <li><code>help_text=\"Enter field documentation\"</code> — 提供一個幫助用戶的文本標籤，讓用戶知道當前透過 HTML 表單輸入時要提供什麼值。</li>\n</ul>\n<p>字段名稱用於在視圖和模版中引用它。字段還有一個標籤，它被指定一個參數（<code>verbose_name</code>），或者通過大寫字段的變量名的第一個字母，並用空格替換下劃線（例如<code>my_field_name</code> 的默認標籤為 My field name ）。</p>\n<p>如果模型在表單中呈現（例如：在管理站點中），則聲明該字段的順序，將影響其默認順序，但可能會被覆蓋。</p>\n<h5 id=\"常用字段參數\">常用字段參數</h5>\n<p>當聲明很多／大多數不同的字段類型時，可以使用以下常用參數：</p>\n<ul>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#help-text\" class=\"external\" rel=\" noopener\">help_text</a> :提供 HTML 表單文本標籤(eg i 在管理站點中),如上所述。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#verbose-name\" class=\"external\" rel=\" noopener\">verbose_name</a> :字段標籤中的可讀性名稱，如果沒有被指定，Django 將從字段名稱推斷默認的詳細名稱。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#default\" class=\"external\" rel=\" noopener\">default</a> :該字段的默認值。這可以是值或可呼叫物件(callable object)，在這種情況下，每次創建新紀錄時都將呼叫該物件。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#null\" class=\"external\" rel=\" noopener\">null</a>：如為 <code>True</code>，即允許 Django 於資料庫該欄位寫入 <code>NULL</code>（但欄位型態如為 <code>CharField</code> 則會寫入空字串）。預設值是 <code>False</code>。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#blank\" class=\"external\" rel=\" noopener\">blank</a> :如果**<code>True</code>**，表單中的字段被允許為空白。默認是<code>False</code>，這意味著 Django 的表單驗證將強制你輸入一個值。這通常搭配 <code>NULL=True</code> 使用，因為如果要允許空值，你還希望數據庫能夠適當地表示它們。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#choices\" class=\"external\" rel=\" noopener\">choices</a> :這是給此字段的一組選項。如果提供這一項，預設對應的表單部件是「該組選項的列表」，而不是原先的標准文本字段。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#primary-key\" class=\"external\" rel=\" noopener\">primary_key</a> :如果是 True，將當前字段設置為模型的主鍵（主鍵是被指定用來唯一辨識所有不同表記錄的特殊數據庫欄位(column)）。如果沒有指定字段作為主鍵，則 Django 將自動為此添加一個字段。</li>\n</ul>\n<p>還有許多其他選項 — 你可以在<a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#field-options\" class=\"external\" rel=\" noopener\">這裡看到完整的字段選項</a>。</p>\n<h5 id=\"常用字段類型\">常用字段類型</h5>\n<p>以下列表描述了一些更常用的字段類型。</p>\n<ul>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.CharField\" class=\"external\" rel=\" noopener\">CharField</a> 是用來定義短到中等長度的字段字符串。你必須指定<code>max_length</code>要存儲的數據。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.TextField\" class=\"external\" rel=\" noopener\">TextField</a> 用於大型任意長度的字符串。你可以<code>max_length</code>為該字段指定一個字段，但僅當該字段以表單顯示時才會使用（不會在數據庫級別強制執行）。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.IntegerField\" class=\"external\" rel=\" noopener\">IntegerField</a> 是一個用於存儲整數（整數）值的字段，用於在表單中驗證輸入的值為整數。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#datefield\" class=\"external\" rel=\" noopener\">DateField</a> 和<a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#datetimefield\" class=\"external\" rel=\" noopener\">DateTimeField</a> 用於存儲／表示日期和日期／時間信息（分別是<code>Python.datetime.date</code> 和 <code>datetime.datetime</code> 對象）。這些字段可以另外表明（互斥）參數 <code>auto_now=Ture</code> （在每次保存模型時將該字段設置為當前日期），<code>auto_now_add</code>（僅設置模型首次創建時的日期）和 <code>default</code>（設置默認日期，可以被用戶覆蓋）。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#emailfield\" class=\"external\" rel=\" noopener\">EmailField</a> 用於存儲和驗證電子郵件地址。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#filefield\" class=\"external\" rel=\" noopener\">FileField</a> 和<a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#imagefield\" class=\"external\" rel=\" noopener\">ImageField</a> 分別用於上傳文件和圖像（<code>ImageField</code> 只需添加上傳的文件是圖像的附加驗證）。這些參數用於定義上傳文件的存儲方式和位置。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#autofield\" class=\"external\" rel=\" noopener\">AutoField</a> 是一種 <strong>IntegerField</strong> 自動遞增的特殊類型。如果你沒有明確指定一個主鍵，則此類型的主鍵將自動添加到模型中。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#foreignkey\" class=\"external\" rel=\" noopener\">ForeignKey</a> 用於指定與另一個數據庫模型的一對多關係（例如，汽車有一個製造商，但製造商可以製作許多汽車）。關係的“一”側是包含密鑰的模型。</li>\n  <li><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#manytomanyfield\" class=\"external\" rel=\" noopener\">ManyToManyField</a> 用於指定<a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#manytomanyfield\" class=\"external\" rel=\" noopener\">多對多</a>關係（例如，一本書可以有幾種類型，每種類型可以包含幾本書）。在我們的圖書館應用程序中，我們將非常類似地使用它們 ForeignKeys，但是可以用更複雜的方式來描述組之間的關係。這些具有參數 <code>on_delete</code> 來定義關聯記錄被刪除時會發生什麼（例如，值 <code>models.SET_NULL</code> 將簡單地設置為值 NULL ）。</li>\n</ul>\n<p>還有許多其他類型的字段，包括不同類型數字的字段（大整數，小整數，浮點數），布林值，URLs，唯一 ids 和其他 “時間相關” 的信息（持續時間，時間等）。你可以查閱<a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#field-types\" class=\"external\" rel=\" noopener\">完整列表</a> .</p>\n<h4 id=\"元數據metadata\">元數據(Metadata)</h4>\n<p>你可以通過宣告 class Meta 來宣告模型級別的元數據，如圖所示：</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n    ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'-my_field_name'</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>此元數據最有用的功能之一是控制在查詢模型類型時返回之記錄的默認排序。你可以透過在<code>ordering</code> 屬性的字段名稱列表中指定匹配順序來執行此操作，如上所示。排序將依賴字段的類型（字符串字段按字母順序排序，而日期字段按時間順序排序）。如上所示，你可以使用減號（-）前綴字段名稱以反轉排序順序。</p>\n<p>例如，如果我們選擇依照此預設來排列書單：</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code>ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-pubdate'</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>書單通過標題依據--字母排序--排列，從 A 到 Z，然後再依每個標題的出版日期，從最新到最舊排列。</p>\n<p>另一個常見的屬性是 <code>verbose_name</code> ,一個 <code>verbose_name</code> 說明單數和複數形式的類別。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code>verbose_name <span class=\"token operator\">=</span> <span class=\"token string\">'BetterName'</span>\n</code></pre></div>\n<p>其他有用的屬性允許你為模型創建和應用新的“訪問權限”（預設權限會被自動套用），允許基於其他的字段排序，或聲明該類是”抽象的“（你無法創建的記錄基類，並將由其他型號派生）。</p>\n<p>許多其他元數據選項控制模型中必須使用哪些數據庫以及數據的存儲方式。（如果你需要模型映射一個現有數據庫，這會有用）。</p>\n<p>完整有用的元數據選項在這裡<a href=\"https://docs.djangoproject.com/en/1.10/ref/models/options/\" class=\"external\" rel=\" noopener\">Model metadata options</a> (Django docs).</p>\n<h4 id=\"方法methods\">方法(Methods)</h4>\n<p>一個模型也可以有方法。</p>\n<p>**最起碼，在每個模型中，你應該定義標準的 Python 類方法<code>__str__()</code> **，<strong>來為每個物件返回一個人類可讀的字符串</strong>。此字符用於表示管理站點的各個記錄（以及你需要引用模型實例的任何其他位置）。通常這將返回模型中的標題或名稱字段。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>field_name\n</code></pre></div>\n<p>Django 方法中另一個常用方法是 <code>get_absolute_url()</code> ，這函數返回一個在網站上顯示個人模型記錄的 URL（如果你定義了該方法，那麼 Django 將自動在“管理站點”中添加“在站點中查看“按鈕在模型的記錄編輯欄）。<code>get_absolute_url()</code>的典型示例如下：</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">get_absolute_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Returns the url to access a particular instance of the model.\"\"\"</span>\n    <span class=\"token keyword\">return</span> reverse<span class=\"token punctuation\">(</span><span class=\"token string\">'model-detail-view'</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>備註：</strong> 假設你將使用 URL<code>/myapplication/mymodelname/2</code> 來顯示模型的單個記錄（其中“2”是 id 特定記錄），則需要創建一個 URL 映射器來將響應和 id 傳遞給“模型詳細視圖” （這將做出顯示記錄所需的工作）。以上示例中，<code>reverse()</code>函數可以“反轉”你的 url 映射器（在上訴命名為“model-detail-view”的案例中，以創建正確格式的 URL。</p>\n  <p>當然要做這個工作，你還是要寫 URL 映射，視圖和模版！</p>\n</div>\n<p>你可以定義一些你喜歡的其他方法，並從你的代碼或模版調用它們（只要它們不帶任何參數）。</p>"}},{"type":"prose","value":{"id":"模型管理","title":"模型管理","isH3":true,"content":"<p>一旦你定義了模型類，你可以使用它們來創建，更新或刪除記錄，並運行查詢獲取所有記錄或特定的記錄子集。當我們定義我們的視圖，我們將展示給你在這個教程如何去做。</p>\n<h4 id=\"創建和修改記錄\">創建和修改記錄</h4>\n<p>要創建一個記錄，你可以定義一個模型實例，然後呼叫 <code>save()</code>。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\"># Create a new record using the model's constructor.</span>\nrecord <span class=\"token operator\">=</span> MyModelName<span class=\"token punctuation\">(</span>my_field_name<span class=\"token operator\">=</span><span class=\"token string\">\"Instance #1\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Save the object into the database.</span>\nrecord<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>備註：</strong> 如果沒有任何的欄位被宣告為<code>主鍵</code>，這筆新的紀錄會被自動的賦予一個主鍵並將主鍵欄命名為 <code>id</code>。上例的那筆資料被儲存後，試著查詢這筆紀錄會看到它被自動賦予 1 的編號。</p>\n</div>\n<p>你可以透過「點(dot)的語法」取得或變更這筆新資料的欄位(字段)。你需要呼叫 <code>save()</code> 將變更過的資料存進資料庫。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\"># Access model field values using Python attributes.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#should return 1 for the first record.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>my_field_name<span class=\"token punctuation\">)</span> <span class=\"token comment\"># should print 'Instance #1'</span>\n\n<span class=\"token comment\"># Change record by modifying the fields, then calling save().</span>\nrecord<span class=\"token punctuation\">.</span>my_field_name <span class=\"token operator\">=</span> <span class=\"token string\">\"New Instance Name\"</span>\nrecord<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h4 id=\"搜尋紀錄\">搜尋紀錄</h4>\n<p>你可以使用模型的 <code>objects</code> 屬性(由 base class 提供)搜尋符合某個條件的紀錄。You can search for records that match a certain criteria using the model's attribute (provided by the base class).</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>備註：</strong> 要用\"抽象的\"模型還有欄位說明怎麼搜尋紀錄可能會有點令人困惑。我們會以一個 Book 模型，其包含<code>title</code>與<code>genre</code>字段，而 genre 也是一個僅有<code>name</code>一個字段的模型。</p>\n</div>\n<p>我們可以取得一個模型的所有紀錄，為一個 <code>QuerySet</code> 使用<code>objects.all()。</code> <code>QuerySet</code> 是一個可迭代的物件，表示他含有多個物件，而我們可以藉由迭代/迴圈取得每個物件。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code>all_books <span class=\"token operator\">=</span> Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Django 的 <code>filter()</code> 方法讓我們可以透過符合特定文字或數值的字段篩選回傳的<code>QuerySet</code>。例如篩選書名裡有 \"wild\" 的書並且計算總數，如下面所示。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code>wild_books <span class=\"token operator\">=</span> Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>title__contains<span class=\"token operator\">=</span><span class=\"token string\">'wild'</span><span class=\"token punctuation\">)</span>\nnumber_wild_books <span class=\"token operator\">=</span> Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>title__contains<span class=\"token operator\">=</span><span class=\"token string\">'wild'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>要比對的字段與比對方法都要被定義在篩選的參數名稱裡，並且使用這個格式：<code>比對字段__比對方法</code> (請注意上方範例中的 <code>title</code> 與 <code>contains</code> 中間隔了兩個底線唷)。在上面我們使用大小寫區分的方式比對<code>title</code> 。還有很多比對方式可以使用： <code>icontains</code> (不區分大小寫), <code>iexact</code> (大小寫區分且完全符合), <code>exact</code> (不區分大小寫但完全符合) 還有 <code>in</code>, <code>gt</code> (大於), <code>startswith</code>, 之類的。<a href=\"https://docs.djangoproject.com/en/2.0/ref/models/querysets/#field-lookups\" class=\"external\" rel=\" noopener\">全部的用法在這裡。</a></p>\n<p>有時候你會須要透過某個一對多的字段來篩選(例如一個 <code>外鍵</code>)。 這樣的狀況下，你可以使用兩個底線來指定相關模型的字段。例如透過某個特定的 genre 名稱篩選書籍，如下所示：</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\"># 會比對到: Fiction, Science fiction, non-fiction etc.</span>\nbooks_containing_genre <span class=\"token operator\">=</span> Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>genre__name__icontains<span class=\"token operator\">=</span><span class=\"token string\">'fiction'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>備註：</strong> 你可隨心地使用雙底線 (__) 來探索更多層的關係 (<code>ForeignKey</code>/<code>ManyToManyField</code>). 例如, 一本 <code>Book</code> 有許多不同的 types, 其進一步定義有參數 name 關聯的\"cover\"：<code>type__cover__name__exact='hard'.</code></p>\n</div>\n<p>還有很多是你可以用索引(queries)來做的，包含從相關的模型做向後查詢(backwards searches)、連鎖過濾器(chaining filters)、回傳「值的小集合」等。更多資訊可以到 <a href=\"https://docs.djangoproject.com/en/2.0/topics/db/queries/\" class=\"external\" rel=\" noopener\">Making queries</a> (Django Docs) 查詢。</p>"}},{"type":"prose","value":{"id":"定義_locallibrary_模型","title":"定義 LocalLibrary 模型","isH3":false,"content":"<p>這部份我們會開始定義圖書館的模型。</p>\n<p>先打開 models.py (在 <em>/locallibrary/catalog/</em>)，頁面的最上方可以看到樣板導入了 models 模組，其包含了模型的基本類別 <code>models.Model</code> ，能使我們的模型能夠繼承。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n<span class=\"token comment\"># Create your models here.</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"書籍類型模型_genre_model","title":"書籍類型模型 (Genre model)","isH3":true,"content":"<p>複製下方 <code>Genre</code> 模型的程式碼，並貼在你的 <code>models.py</code> 檔案底部，這個模型是用來儲存書籍類型的資訊 — 例如：該本書是否為科幻小說、羅曼史、軍事歷史等。</p>\n<p>就像先前提到的，我們以「模型」的方式建立一個書籍類型模型，而非以自由文本(free text)或者選擇列表(selection list)的方式，這樣做讓我們可以透過資料庫的形式而非硬編碼(hard coded)的方式來管理所有可能的值。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Genre</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Model representing a book genre.\"\"\"</span>\n    name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> help_text<span class=\"token operator\">=</span><span class=\"token string\">'Enter a book genre (e.g. Science Fiction)'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"String for representing the Model object.\"\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name\n</code></pre></div>\n<p>此模型有一個單一的 <code>CharField</code> 字段(<code>name</code>) 被用來描述書籍類別(限制輸入字元長度最多 200 個，同時也有提示文本(help_text) )。</p>\n<p>在模型最下方我們宣告一個 <code>__str__()</code> 方法來簡單回傳被特定一筆紀錄定義的書籍類別名稱。</p>\n<p>因為詳細名稱(verbose name)沒有被定義，所以字段在形式上會被稱為 <code>Name</code> 。</p>"}},{"type":"prose","value":{"id":"書本模型_book_model","title":"書本模型 (Book model)","isH3":true,"content":"<p>複製下方 Book 模型的程式碼，並貼在你的 <code>models.py</code> 檔案底部，這個 <code>Book</code> 模型一般來說代表一個可用書本的所有資訊，但並非包含特定的物理實例(physical instance)或者副本資訊(copy)，此模型使用 <code>CharField</code> 來表示書的 <code>title</code> 和 <code>isbn</code> (國際標準書號)(note how the <code>isbn</code> specifies its label as \"ISBN\" using the first unnamed parameter because the default label would otherwise be \"Isbn\").，另外此模型使用 <code>TextField</code> 來存 <code>summary</code> ，因為此文本可能會很長。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> reverse <span class=\"token comment\">#Used to generate URLs by reversing the URL patterns</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Model representing a book (but not a specific copy of a book).\"\"\"</span>\n    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    author <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'Author'</span><span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>SET_NULL<span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># Foreign Key used because book can only have one author, but authors can have multiple books</span>\n    <span class=\"token comment\"># Author as a string rather than object because it hasn't been declared yet in the file.</span>\n    summary <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> help_text<span class=\"token operator\">=</span><span class=\"token string\">'Enter a brief description of the book'</span><span class=\"token punctuation\">)</span>\n    isbn <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span><span class=\"token string\">'ISBN'</span><span class=\"token punctuation\">,</span> max_length<span class=\"token operator\">=</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> help_text<span class=\"token operator\">=</span><span class=\"token string\">'13 Character &lt;a href=\"https://www.isbn-international.org/content/what-isbn\"&gt;ISBN number&lt;/a&gt;'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># ManyToManyField used because genre can contain many books. Books can cover many genres.</span>\n    <span class=\"token comment\"># Genre class has already been defined so we can specify the object above.</span>\n    genre <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span>Genre<span class=\"token punctuation\">,</span> help_text<span class=\"token operator\">=</span><span class=\"token string\">'Select a genre for this book'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"String for representing the Model object.\"\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>title\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_absolute_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Returns the url to access a detail record for this book.\"\"\"</span>\n        <span class=\"token keyword\">return</span> reverse<span class=\"token punctuation\">(</span><span class=\"token string\">'book-detail'</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>「書籍類別」(<code>genre</code>)是一個 <code>ManyToManyField</code> ，因此一本書可以有很多書籍類別，而一個書結類別也能夠對應到很多本書。作者(<code>author</code>)被宣告為外鍵(<code>ForeignKey</code>)，因此每本書只會有一名作者，但一名作者可能會有多本書(實際上，一本書可能會有多名作者，不過這個案例不會有，所以在別的例子這種作法可能會有問題)</p>\n<p>在上面兩個宣告關聯性模型的敘述句內，關聯的對象都是用對象的模型類或字串的方式作為首個未具名參數的方式傳入句內做宣告。在關聯對象尚未被定義前，若要參照到該對象，必須使用該對象名稱字串的方式來宣告關聯性！還有一些 <code>author</code> 欄位的其它值得一提的參數：<code>null=True</code> 表示如果沒有作者的話，允許在資料庫中存入 <code>Null</code> 值；<code>on_delete=models.SET_NULL</code> 表示如果某筆作者紀錄被刪除的話，與該作者相關連的欄位都會被設成 <code>Null</code>。</p>\n<p>這個模型也定義了 <code>__str__()</code> ，使用書本的 <code>title</code> 字段來表示一筆 <code>Book</code> 的紀錄。而最後一個方法，<code>get_absolute_url()</code> ，則會回傳一個可以被用來存取該模型細節紀錄的 URL (要讓其有效運作，我們必須定義一個 URL 的映射，我們將其命名為 <code>book-detail</code> ，另外還得定義一個關聯示圖(view)與模板(template) )。</p>"}},{"type":"prose","value":{"id":"書本詳情模型_bookinstance_model","title":"書本詳情模型 (BookInstance model)","isH3":true,"content":"<p>接下來，複製下方 <code>BookInstance</code> 的模型，貼在其他模型下面，這個 <code>BookInstance</code> 模型表示一個特定的書籍副本(可會被某人借走)，並且包含如「副本是否可用」、「預計歸還日期」、「版本說明」或「版本細節」等資訊，還有一個在圖書館中唯一的 id 。</p>\n<p>有些字段(fields)和方法(methods)現在你也熟悉了。此模型使用了：</p>\n<ul>\n  <li><code>ForeignKey</code> 用來辨識相關的 <code>Book</code> (每本書可以有很多副本，但每個副本只能有一個<code>Book</code>)</li>\n  <li><code>CharField</code> 用來表示該本書的版本說明(特定版本)</li>\n</ul>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">import</span> uuid <span class=\"token comment\"># Required for unique book instances</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInstance</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Model representing a specific copy of a book (i.e. that can be borrowed from the library).\"\"\"</span>\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>UUIDField<span class=\"token punctuation\">(</span>primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span>uuid<span class=\"token punctuation\">.</span>uuid4<span class=\"token punctuation\">,</span> help_text<span class=\"token operator\">=</span><span class=\"token string\">'Unique ID for this particular book across whole library'</span><span class=\"token punctuation\">)</span>\n    book <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'Book'</span><span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>SET_NULL<span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    imprint <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    due_back <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    LOAN_STATUS <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Maintenance'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'On loan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Available'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Reserved'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    status <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>\n        max_length<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        choices<span class=\"token operator\">=</span>LOAN_STATUS<span class=\"token punctuation\">,</span>\n        blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n        default<span class=\"token operator\">=</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span>\n        help_text<span class=\"token operator\">=</span><span class=\"token string\">'Book availability'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'due_back'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"String for representing the Model object.\"\"\"</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> (</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token string\">)'</span></span>\n</code></pre></div>\n<p>我們額外宣告了一些新的字段(field)類別(types)：</p>\n<ul>\n  <li><code>UUIDField</code> 被用來將 <code>id</code> 字段再這個模型中設定為 <code>primary_key</code> ，這類別的字段會分配一個全域唯一的值給每一個實例(instance)，也就是任何一本你能在圖書館找到的書。</li>\n  <li><code>DateField</code> 會被用來設定 <code>due_back</code> 的日期(紀錄書本何時會被歸還，可再被使用，或者是否正在保養期)，這個字段允許 <code>blank</code> 或 <code>null</code> 值，而當元數據模型 (<code>Class Meta</code>)收到請求(query)時也會使用此字段來做資料排序。</li>\n  <li><code>status</code> 是一個 <code>CharField</code> 字段，用來定義一個選項列表。你可以看到，我們定義了一個包含「鍵-值對元組」的元組(tuple) 並使其成為選項的參數，鍵-值對中的值會陳列出來並可以被使用者選擇，當選項被選定後，鍵(key)也會被儲存下來。我們也設定了預設的鍵值為 \"m\" (maintenance) 用來表示當每本書在初始創造還未放上書架時是不可被使用的。</li>\n</ul>\n<p>而 <code>__str__()</code> 模型用來表示 <code>BookInstance</code> 這個物件的「唯一 ID」和「相關之 <code>Book</code> 書本名稱(title)」的組合。</p>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>備註：</strong> 關於 Python 的小提醒：</p>\n  <ul>\n    <li>\n      從 Python3.6 開始，你可以使用「字串插值語法」(又稱做 f-string)：\n      <code>f'{self.id} ({self.book.title})'</code>\n    </li>\n    <li>\n      在舊版 Python 這部分的教學中，我們則使用了另一種有效的 <a href=\"https://www.python.org/dev/peps/pep-3101/\" class=\"external\" rel=\" noopener\">formatted string</a> 語法\n      (e.g. <code>'{0} ({1})'.format(self.id,self.book.title)</code>)\n    </li>\n  </ul>\n</div>"}},{"type":"prose","value":{"id":"作者模型author_model","title":"作者模型(Author model)","isH3":true,"content":"<p>複製下方 <code>Author</code> 的模型程式碼並貼在 <strong>models.py</strong> 文件的最下方。</p>\n<p>現在所有的字段(fields)與方法(methods)你應該都熟悉了，此模型定義了作者的「名」、「姓」、「出生年月日」、「死亡日期(非必填)」。該模型也指定，預設情況下，<code>__str__()</code> 方法會回傳作者姓名(按照姓、名排序)。而 <code>get_absolute_url()</code> 方法會反轉 author-detail 的 URL 映射，來獲得顯示單個作者的 URL。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Author</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Model representing an author.\"\"\"</span>\n    first_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    last_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    date_of_birth <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    date_of_death <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token string\">'Died'</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'last_name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'first_name'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_absolute_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Returns the url to access a particular author instance.\"\"\"</span>\n        <span class=\"token keyword\">return</span> reverse<span class=\"token punctuation\">(</span><span class=\"token string\">'author-detail'</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"String for representing the Model object.\"\"\"</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>last_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>first_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"再次執行資料庫遷移database_migrations","title":"再次執行資料庫遷移(database migrations)","isH3":false,"content":"<p>你的所有模型都建立好了，現在必須再次執行你的資料庫 migrations 指令來將這些修改內容更信到資料庫中。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>python3 manage.py makemigrations\npython3 manage.py migrate\n</code></pre></div>"}},{"type":"prose","value":{"id":"語言模型language_model_—_挑戰","title":"語言模型(Language model) — 挑戰","isH3":false,"content":"<p>請想像一下，現在來了一位善心人士捐了一堆用不同語言寫的書(例如：波斯語)，而你的挑戰是必須制定一個最好在我們的圖說館網站呈現的方式，並把它做成模組。</p>\n<p>幾件事情需要思考：</p>\n<ul>\n  <li>「語言」需要與 <code>Book</code> 、<code>BookInstance</code> 或其他物件(Object)相關聯嗎？</li>\n  <li>\n    「不同語言」能以什麼形式來表示？\n    模型？自由文本字段(free text field)？硬編碼選擇列表(hard-coded selection list)？\n  </li>\n</ul>\n<p>當你決定好了，就開始動手吧！你可以在<a href=\"https://github.com/mdn/django-locallibrary-tutorial/blob/master/catalog/models.py\" class=\"external\" rel=\" noopener\">Github 的這裡</a>看到我們是怎麼思考的。</p>"}},{"type":"prose","value":{"id":"小結","title":"小結","isH3":false,"content":"<p>在這篇文章我們學到如何定義模型，並且利用這些資訊來設計與實作適合的模型給 <em>LocalLibrary 網站。</em></p>\n<p><em>再來我們要稍微撇開建立網站，先來看看 Django 的管理站(Django Administration site)，這個管理站能讓我們加入一些資料到圖書館中，讓我們再來能夠透過「示圖(views)與模板(templates)」(當然我們現在都還沒建立)來展示。</em></p>"}},{"type":"prose","value":{"id":"延伸閱讀","title":"延伸閱讀","isH3":false,"content":"<ul>\n  <li><a href=\"https://docs.djangoproject.com/en/2.0/intro/tutorial02/\" class=\"external\" rel=\" noopener\">Writing your first Django app, part 2</a> (Django docs)</li>\n  <li><a href=\"https://docs.djangoproject.com/en/2.0/topics/db/queries/\" class=\"external\" rel=\" noopener\">Making queries</a> (Django Docs)</li>\n  <li><a href=\"https://docs.djangoproject.com/en/2.0/ref/models/querysets/\" class=\"external\" rel=\" noopener\">QuerySet API Reference</a> (Django Docs)</li>\n</ul><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/Server-side/Django/skeleton_website\"> 前頁 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/Server-side/Django\"> Overview: Django</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/Server-side/Django/Admin_site\"> 次頁  </a></li>\n</ul>"}},{"type":"prose","value":{"id":"in_this_module","title":"In this module","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Introduction\">Django introduction</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/development_environment\">Setting up a Django development environment</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Django Tutorial: The Local Library website</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/skeleton_website\">Django Tutorial Part 2: Creating a skeleton website</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Models\" aria-current=\"page\">Django Tutorial Part 3: Using models</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Admin_site\">Django Tutorial Part 4: Django admin site</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Home_page\">Django Tutorial Part 5: Creating our home page</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Generic_views\">Django Tutorial Part 6: Generic list and detail views</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Sessions\">Django Tutorial Part 7: Sessions framework</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Authentication\">Django Tutorial Part 8: User authentication and permissions</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Forms\">Django Tutorial Part 9: Working with forms</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Testing\">Django Tutorial Part 10: Testing a Django web application</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Deployment\">Django Tutorial Part 11: Deploying Django to production</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/web_application_security\">Django web application security</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/django_assessment_blog\">DIY Django mini blog</a></li>\n</ul>"}}],"toc":[{"text":"概覽","id":"概覽"},{"text":"設計 LocalLibrary 模型","id":"設計_locallibrary_模型"},{"text":"模型入門","id":"模型入門"},{"text":"定義 LocalLibrary 模型","id":"定義_locallibrary_模型"},{"text":"再次執行資料庫遷移(database migrations)","id":"再次執行資料庫遷移database_migrations"},{"text":"語言模型(Language model) — 挑戰","id":"語言模型language_model_—_挑戰"},{"text":"小結","id":"小結"},{"text":"延伸閱讀","id":"延伸閱讀"},{"text":"In this module","id":"in_this_module"}],"summary":"本文介紹如何為 LocalLibrary 網站定義模型。它解釋了模型是什麼、聲明的方式以及一些主要字段類型。它還簡要展示了您可以訪問模型數據的幾個主要方法。","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Django Tutorial Part 3: Using models","locale":"en-US","native":"English (US)"},{"title":"Tutorial Django Parte 3: Uso de modelos","locale":"es","native":"Español"},{"title":"Django didactique Section 3: Utilisation des modèles de données","locale":"fr","native":"Français"},{"title":"Django チュートリアル Part 3: モデルの使用","locale":"ja","native":"日本語"},{"title":"Django Tutorial Part 3: Using models","locale":"ko","native":"한국어"},{"title":"Tutorial Django Parte 3: Usando models","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Django учебник Часть 3: Использование моделей","locale":"ru","native":"Русский"},{"title":"Django Tutorial Part 3: 使用模型","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/learn/server-side/django/models","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/learn/server-side/django/models/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Learn","title":"學習該如何開發 Web"},{"uri":"/zh-TW/docs/Learn/Server-side","title":"伺服端網站程式設計"},{"uri":"/zh-TW/docs/Learn/Server-side/Django","title":"Django 網站框架 (Python)"},{"uri":"/zh-TW/docs/Learn/Server-side/Django/Models","title":"Django Tutorial Part 3: Using models"}],"pageTitle":"Django Tutorial Part 3: Using models - 學習該如何開發 Web | MDN","noIndexing":false}}