{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Create BookInstance form","mdn_url":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/forms/Create_BookInstance_form","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/forms$edit#Create_BookInstance_form\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Edi</a>本章節演示如何定義一個頁面/表單，以創建 <code>BookInstance</code> 物件。這很像我們用來創建書本 <code>Book</code> 物件的表單。</p>"}},{"type":"prose","value":{"id":"導入驗證和清理方法","title":"導入驗證和清理方法","isH3":false,"content":"<p>打開 <strong>/controllers/bookinstanceController.js</strong>，並在檔案最上方，加入以下幾行:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> body<span class=\"token punctuation\">,</span>validationResult <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express-validator/check'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> sanitizeBody <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express-validator/filter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"controller—get_route","title":"Controller—get route","isH3":false,"content":"<p>At the top of the file, require the <em>Book</em> module (needed because each <code>BookInstance</code> is associated with a particular <code>Book</code>).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> Book <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/book'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Find the exported <code>bookinstance_create_get()</code> controller method and replace it with the following code.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display BookInstance create form on GET.</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">bookinstance_create_get</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    Book<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> books</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Successful, so render.</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bookinstance_form'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Create BookInstance'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">book_list</span><span class=\"token operator\">:</span>books<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The controller gets a list of all books (<code>book_list</code>) and passes it to the view <strong><code>bookinstance_form.pug</code></strong> (along with the <code>title</code>)</p>"}},{"type":"prose","value":{"id":"controller—post_route","title":"Controller—post route","isH3":false,"content":"<p>Find the exported <code>bookinstance_create_post()</code> controller method and replace it with the following code.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Handle BookInstance create on POST.</span>\nexports<span class=\"token punctuation\">.</span>bookinstance_create_post <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n\n    <span class=\"token comment\">// Validate fields.</span>\n    <span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Book must be specified'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">'imprint'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Imprint must be specified'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token string\">'due_back'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Invalid date'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">optional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">checkFalsy</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isISO8601</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// Sanitize fields.</span>\n    <span class=\"token function\">sanitizeBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">sanitizeBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">'imprint'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">sanitizeBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">'status'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">escape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">sanitizeBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">'due_back'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// Process request after validation and sanitization.</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">// Extract the validation errors from a request.</span>\n        <span class=\"token keyword\">const</span> errors <span class=\"token operator\">=</span> <span class=\"token function\">validationResult</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create a BookInstance object with escaped and trimmed data.</span>\n        <span class=\"token keyword\">var</span> bookinstance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BookInstance</span><span class=\"token punctuation\">(</span>\n          <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">book</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">imprint</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>imprint<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">due_back</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>due_back\n           <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>errors<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// There are errors. Render form again with sanitized values and error messages.</span>\n            Book<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> books</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n                    <span class=\"token comment\">// Successful, so render.</span>\n                    res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bookinstance_form'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Create BookInstance'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">book_list</span> <span class=\"token operator\">:</span> books<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">selected_book</span> <span class=\"token operator\">:</span> bookinstance<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>_id <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">errors</span><span class=\"token operator\">:</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">bookinstance</span><span class=\"token operator\">:</span>bookinstance <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Data from form is valid.</span>\n            bookinstance<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n                   <span class=\"token comment\">// Successful - redirect to new record.</span>\n                   res<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span>bookinstance<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The structure and behaviour of this code is the same as for creating our other objects. First we validate and sanitize the data. If the data is invalid, we then re-display the form along with the data that was originally entered by the user and a list of error messages. If the data is valid, we save the new <code>BookInstance</code> record and redirect the user to the detail page.</p>"}},{"type":"prose","value":{"id":"view","title":"View","isH3":false,"content":"<p>Create <strong>/views/bookinstance_form.pug</strong> and copy in the text below.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code>extends layout\n\nblock content\n  h1=title\n\n  form(method='POST' action='')\n    div.form-group\n      label(for='book') Book:\n      select#book.form-control(type='select' placeholder='Select book' name='book' required='true')\n        for book in book_list\n          if bookinstance\n            option(value=book._id selected=(bookinstance.book.toString()==book._id.toString() ? 'selected' : false)) #{book.title}\n          else\n            option(value=book._id) #{book.title}\n\n    div.form-group\n      label(for='imprint') Imprint:\n      input#imprint.form-control(type='text' placeholder='Publisher and date information' name='imprint' required='true' value=(undefined===bookinstance ? '' : bookinstance.imprint))\n    div.form-group\n      label(for='due_back') Date when book available:\n      input#due_back.form-control(type='date' name='due_back' value=(undefined===bookinstance ? '' : bookinstance.due_back))\n\n    div.form-group\n      label(for='status') Status:\n      select#status.form-control(type='select' placeholder='Select status' name='status' required='true')\n        option(value='Maintenance') Maintenance\n        option(value='Available') Available\n        option(value='Loaned') Loaned\n        option(value='Reserved') Reserved\n\n    button.btn.btn-primary(type='submit') Submit\n\n  if errors\n    ul\n      for error in errors\n        li!= error.msg\n</code></pre></div>\n<p>The view structure and behaviour is almost the same as for the <strong>book_form.pug</strong> template, so we won't go over it again.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> The above template hard-codes the <em>Status</em> values (Maintenance, Available, etc.) and does not \"remember\" the user's entered values. Should you so wish, consider reimplementing the list, passing in option data from the controller and setting the selected value when the form is re-displayed.</p>\n</div>"}},{"type":"prose","value":{"id":"what_does_it_look_like","title":"What does it look like?","isH3":false,"content":"<p>Run the application and open your browser to <a href=\"http://localhost:3000/\" class=\"external\" rel=\" noopener\">http://localhost:3000/</a>. Then select the <em>Create new book instance (copy)</em> link. If everything is set up correctly, your site should look something like the following screenshot. After you submit a valid <code>BookInstance</code>, it should be saved and you'll be taken to the detail page.</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms/Create_BookInstance_form/locallibary_express_bookinstance_create_empty.png\" alt=\"\" width=\"1147\" height=\"635\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"next_steps","title":"Next steps","isH3":false,"content":"<ul>\n  <li>Return to <a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a>.</li>\n  <li>Proceed to the next subarticle of part 6: <a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/forms/Delete_author_form\">Delete Author form</a>.</li>\n</ul>"}}],"toc":[{"text":"導入驗證和清理方法","id":"導入驗證和清理方法"},{"text":"Controller—get route","id":"controller—get_route"},{"text":"Controller—post route","id":"controller—post_route"},{"text":"View","id":"view"},{"text":"What does it look like?","id":"what_does_it_look_like"},{"text":"Next steps","id":"next_steps"}],"summary":"Edi本章節演示如何定義一個頁面/表單，以創建 BookInstance 物件。這很像我們用來創建書本 Book 物件的表單。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Create BookInstance form","locale":"en-US","native":"English (US)"},{"title":"Форма для создания BookInstance","locale":"ru","native":"Русский"},{"title":"创建书本实例表单","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/learn/server-side/express_nodejs/forms/create_bookinstance_form","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/learn/server-side/express_nodejs/forms/create_bookinstance_form/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Learn","title":"學習該如何開發 Web"},{"uri":"/zh-TW/docs/Learn/Server-side","title":"伺服端網站程式設計"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs","title":"Express web framework (Node.js/JavaScript)"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/forms","title":"Express 教學 6: 使用表單"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/forms/Create_BookInstance_form","title":"Create BookInstance form"}],"pageTitle":"Create BookInstance form - 學習該如何開發 Web | MDN","noIndexing":false}}