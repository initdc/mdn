{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"書本實例詳情頁面與自我挑戰","mdn_url":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"","body":[{"type":"prose","value":{"id":"書本實例詳情頁面","title":"書本實例詳情頁面","isH3":false,"content":"<p><code>BookInstance</code> 詳情頁面，需要呈現每一個 <code>BookInstance</code> 的信息，用 <code>_id</code> 欄位字段值（自動產生）做識別。它包含了 <code>Book</code> 名稱 (也是一個連結，連到 <em>書本細節</em>頁面)，接著是紀錄中的其它的信息。</p>"}},{"type":"prose","value":{"id":"controller_控制器","title":"Controller 控制器","isH3":true,"content":"<p>打開 <strong>/controllers/bookinstanceController.js</strong>. 找到 exported <code>bookinstance_detail()</code> 控制器方法，並用底下代碼置換。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display detail page for a specific BookInstance.</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">bookinstance_detail</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    BookInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> bookinstance</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bookinstance<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// No results.</span>\n          <span class=\"token keyword\">var</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Book copy not found'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Successful, so render.</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bookinstance_detail'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Book:'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">bookinstance</span><span class=\"token operator\">:</span>  bookinstance<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>該方法使用從 URL（使用路由）中提取的特定書本實例的 ID，調用<code>BookInstance.findById()</code>，並通過請求參數（<code>req.params.id</code>），在控制器中訪問。然後調用<code>populate()</code>來獲取相關 <code>Book</code> 的詳細信息。</p>"}},{"type":"prose","value":{"id":"view_視圖","title":"View 視圖","isH3":true,"content":"<p>創建 <strong>/views/bookinstance_detail.pug</strong> ，並複製下面的內容。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">extends</span> <span class=\"token class-name\">layout</span>\n\nblock content\n\n  h1 <span class=\"token constant\">ID</span><span class=\"token operator\">:</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">}</span>\n\n  p #<span class=\"token punctuation\">[</span>strong Title<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>bookinstance<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span>\n  p #<span class=\"token punctuation\">[</span>strong Imprint<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>imprint<span class=\"token punctuation\">}</span>\n\n  p #<span class=\"token punctuation\">[</span>strong Status<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Available'</span>\n      span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>success #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Maintenance'</span>\n      span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>danger #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n      span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>warning #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Available'</span>\n    p #<span class=\"token punctuation\">[</span>strong Due back<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>due_back<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>本模組中的所有東西，都在先前的章節演示過了。</p>"}},{"type":"prose","value":{"id":"它看起來像是","title":"它看起來像是?","isH3":true,"content":"<p>運行本應用，並打開瀏覽器訪問 <a href=\"http://localhost:3000/\" class=\"external\" rel=\" noopener\">http://localhost:3000/</a>/。選擇 <em>All book-instances</em> 連結，然後選擇其中一本。如果每個東西都設定正確了，你的網站看起來應該像是底下的截圖。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge/locallibary_express_bookinstance_detail.png\" alt=\"BookInstance Detail Page - Express Local Library site\" width=\"1016\" height=\"368\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"自我挑戰","title":"自我挑戰","isH3":false,"content":"<p>目前，我們網站上顯示的大多數日期，都使用默認的 JavaScript 格式（例如 <em>Tue Dec 06 2016 15:49:58 GMT+1100</em> （AUS 東部夏令時間））。本文的挑戰，是改善作者<code>Author</code>生命週期日期顯示的外觀信息（死亡/誔生日期）和<em>BookInstance 詳細信息</em>頁面，使用格式：December 6th, 2016。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> 您可以使用與我們用於 <em>Book Instance List</em> 的相同方法（將生命週期的虛擬屬性，添加到<code>Author</code>模型，並使用 <a href=\"https://www.npmjs.com/package/moment\" class=\"external\" rel=\" noopener\">moment</a> 來設置日期字符串的格式）。</p>\n</div>\n<p>這個挑戰的要求：</p>\n<ol>\n  <li>用 BookInstance 詳細信息頁面中的 <code>due_back_formatted</code> 替換 <code>due_back</code>。</li>\n  <li>更新作者模塊以添加壽命虛擬屬性。壽命應該有兩個值： <em>date_of_birth - date_of_death</em>，這兩個值的格式與 <code>BookInstance.due_back_formatted</code>的日期格式相同。</li>\n  <li>在當前使用 <code>date_of_birth</code> 和 <code>date_of_death</code>的所有視圖中，使用 <code>Author.lifespan</code> 。</li>\n</ol>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<ul>\n  <li>回到 <a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教學 5: 呈現圖書館資料</a></li>\n</ul>"}}],"toc":[{"text":"書本實例詳情頁面","id":"書本實例詳情頁面"},{"text":"自我挑戰","id":"自我挑戰"},{"text":"下一步","id":"下一步"}],"summary":"BookInstance 詳情頁面，需要呈現每一個 BookInstance 的信息，用 _id 欄位字段值（自動產生）做識別。它包含了 Book 名稱 (也是一個連結，連到 書本細節頁面)，接著是紀錄中的其它的信息。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BookInstance detail page and challenge","locale":"en-US","native":"English (US)"},{"title":"ブックインスタンス詳細ページとチャレンジ","locale":"ja","native":"日本語"},{"title":"书本实例细节页面、与自我挑战","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/learn/server-side/express_nodejs/displaying_data/bookinstance_detail_page_and_challenge","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/learn/server-side/express_nodejs/displaying_data/bookinstance_detail_page_and_challenge/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Learn","title":"學習該如何開發 Web"},{"uri":"/zh-TW/docs/Learn/Server-side","title":"伺服端網站程式設計"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs","title":"Express web framework (Node.js/JavaScript)"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express 教程 5: 呈現圖書館數據"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge","title":"書本實例詳情頁面與自我挑戰"}],"pageTitle":"書本實例詳情頁面與自我挑戰 - 學習該如何開發 Web | MDN","noIndexing":false}}