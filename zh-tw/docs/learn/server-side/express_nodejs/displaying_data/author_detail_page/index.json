{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"作者詳情頁面","mdn_url":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_detail_page","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>作者細節頁面，需要呈現指定作者 <code>Author</code> 的信息，使用 <code>_id</code> 欄位的值（自動產生）識別，接著是這個作者 <code>Author</code>的所有書本物件 <code>Book</code>的列表。</p>"}},{"type":"prose","value":{"id":"controller_控制器","title":"Controller 控制器","isH3":false,"content":"<p>打開 <strong>/controllers/authorController.js</strong>.</p>\n<p>在檔案最上方，加入底下幾行，引入 <em>async</em> 和 <em>Book</em> 模組(作者細節頁面需要它們)。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> async <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'async'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Book <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/book'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>找到 exported <code>author_detail()</code> 控制器方法，並用底下代碼置換。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display detail page for a specific Author.</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">author_detail</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    async<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">author</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            Author<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">authors_books</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          Book<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'author'</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">'title summary'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> results</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Error in API usage.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>author<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// No results.</span>\n            <span class=\"token keyword\">var</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Author not found'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// Successful, so render.</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'author_detail'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Author Detail'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> results<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">author_books</span><span class=\"token operator\">:</span> results<span class=\"token punctuation\">.</span>authors_books <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>此處的控制器方法使用 <code>async.parallel()</code>，用平行的方式，查詢作者 <code>Author</code>和相應的書本實例，並附加上繪製本頁面的回調，如果 2 個要求都成功完成，就運行回調。這個方式，就跟前面的<em>種類細節頁面</em>所說明的完全相同。</p>"}},{"type":"prose","value":{"id":"view_視圖","title":"View 視圖","isH3":false,"content":"<p>創建 <strong>/views/author_detail.pug</strong> ，並複制貼上底下的文字。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">extends</span> <span class=\"token class-name\">layout</span>\n\nblock content\n\n  h1 Author<span class=\"token operator\">:</span> #<span class=\"token punctuation\">{</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span>\n  p #<span class=\"token punctuation\">{</span>author<span class=\"token punctuation\">.</span>date_of_birth<span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span> #<span class=\"token punctuation\">{</span>author<span class=\"token punctuation\">.</span>date_of_death<span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">div</span><span class=\"token punctuation\">(</span>style<span class=\"token operator\">=</span><span class=\"token string\">'margin-left:20px;margin-top:20px'</span><span class=\"token punctuation\">)</span>\n\n    h4 Books\n\n    dl\n      each book <span class=\"token keyword\">in</span> author_books\n        dt\n          <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>book<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span>\n        dd #<span class=\"token punctuation\">{</span>book<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">else</span>\n        p This author has no books<span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>本模板裡的所有事物，都在先前的章節演示過了。</p>"}},{"type":"prose","value":{"id":"它看起來像是","title":"它看起來像是?","isH3":false,"content":"<p>運行本應用，並打開瀏覽器訪問 <a href=\"http://localhost:3000/\" class=\"external\" rel=\" noopener\">http://localhost:3000/</a>。選擇 <em>All Authors</em> 連結，然後選擇一個作者。如果每個東西都設定正確了，你的網站看起來應該會像底下的截圖。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_detail_page/locallibary_express_author_detail.png\" alt=\"Author Detail Page - Express Local Library site\" width=\"1463\" height=\"618\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> 作者的出生與死亡日期的外觀很醜！我們將在本文最後的自我挑戰處理它。</p>\n</div>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<ul>\n  <li>回到 <a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教學 5: 呈現圖書館資料</a></li>\n  <li>繼續教學 5 的最後一個部分: <a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge\">書本實例詳情頁面與自我挑戰</a></li>\n</ul>"}}],"toc":[{"text":"Controller 控制器","id":"controller_控制器"},{"text":"View 視圖","id":"view_視圖"},{"text":"它看起來像是?","id":"它看起來像是"},{"text":"下一步","id":"下一步"}],"summary":"作者細節頁面，需要呈現指定作者 Author 的信息，使用 _id 欄位的值（自動產生）識別，接著是這個作者 Author的所有書本物件 Book的列表。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Author detail page","locale":"en-US","native":"English (US)"},{"title":"著者詳細ページ","locale":"ja","native":"日本語"},{"title":"作者细节页面","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/learn/server-side/express_nodejs/displaying_data/author_detail_page","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/learn/server-side/express_nodejs/displaying_data/author_detail_page/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Learn","title":"學習該如何開發 Web"},{"uri":"/zh-TW/docs/Learn/Server-side","title":"伺服端網站程式設計"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs","title":"Express web framework (Node.js/JavaScript)"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express 教程 5: 呈現圖書館數據"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_detail_page","title":"作者詳情頁面"}],"pageTitle":"作者詳情頁面 - 學習該如何開發 Web | MDN","noIndexing":false}}