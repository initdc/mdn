{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"書本詳情頁面","mdn_url":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><em>書本細節頁面</em>需要呈現一本指定書本(<code>Book</code>)的信息, 使用它的 <code>_id</code> 字段值(自動產生)做為識別，接著是圖書館中書本實例(<code>BookInstance</code>)的信息。無論我們在哪裡呈現一個作者、種類、或書本實例，都應該連結到它的細節頁面。</p>"}},{"type":"prose","value":{"id":"controller_控制器","title":"Controller 控制器","isH3":false,"content":"<p>打開 <strong>/controllers/bookController.js.</strong> ，找到 exported <code>book_detail()</code> 控制器方法，用底下的代碼置換。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display detail page for a specific book.</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">book_detail</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    async<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">book</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            Book<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'author'</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'genre'</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">book_instance</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n          BookInstance<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'book'</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> results</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>book<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// No results.</span>\n            <span class=\"token keyword\">var</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Book not found'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// Successful, so render.</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book_detail'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Title'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">book</span><span class=\"token operator\">:</span>  results<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">book_instances</span><span class=\"token operator\">:</span> results<span class=\"token punctuation\">.</span>book_instance <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> 我們不需要用 require 導入 <em>async</em> 和 <em>BookInstance</em>，當我們實作主頁面控制器的時候，我們就已經引入這些模組。</p>\n</div>\n<p>此處的控制器方法使用 <code>async.parallel()</code>，用平行的方式找到 <code>Book</code> 以及它的相應複本 (<code>BookInstances</code>) 。這樣的處理方式，就跟上面的 <em>種類細節頁面</em> 所說明的完全相同。</p>"}},{"type":"prose","value":{"id":"view_視圖","title":"View 視圖","isH3":false,"content":"<p>創建 <strong>/views/book_detail.pug</strong> 並加入底下文字。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">extends</span> <span class=\"token class-name\">layout</span>\n\nblock content\n  h1 #<span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> #<span class=\"token punctuation\">{</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span>\n\n  p #<span class=\"token punctuation\">[</span>strong Author<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>book<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>book<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span>\n  p #<span class=\"token punctuation\">[</span>strong Summary<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>book<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">}</span>\n  p #<span class=\"token punctuation\">[</span>strong <span class=\"token constant\">ISBN</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>book<span class=\"token punctuation\">.</span>isbn<span class=\"token punctuation\">}</span>\n  p #<span class=\"token punctuation\">[</span>strong Genre<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n    each val<span class=\"token punctuation\">,</span> index <span class=\"token keyword\">in</span> book<span class=\"token punctuation\">.</span>genre\n      <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>val<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> index <span class=\"token operator\">&lt;</span> book<span class=\"token punctuation\">.</span>genre<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        <span class=\"token operator\">|</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function\">div</span><span class=\"token punctuation\">(</span>style<span class=\"token operator\">=</span><span class=\"token string\">'margin-left:20px;margin-top:20px'</span><span class=\"token punctuation\">)</span>\n    h4 Copies\n\n    each val <span class=\"token keyword\">in</span> book_instances\n      hr\n      <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Available'</span>\n        p<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>success #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Maintenance'</span>\n        p<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>danger #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">else</span>\n        p<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>warning #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n      p #<span class=\"token punctuation\">[</span>strong Imprint<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>imprint<span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Available'</span>\n        p #<span class=\"token punctuation\">[</span>strong Due back<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>due_back<span class=\"token punctuation\">}</span>\n      p #<span class=\"token punctuation\">[</span>strong Id<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>val<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">else</span>\n      p There are no copies <span class=\"token keyword\">of</span> <span class=\"token keyword\">this</span> book <span class=\"token keyword\">in</span> the library<span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>在這個模板裡，幾乎每個東西都在先前的章節演示過了。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>備註：</strong> 與該書相關的種類列表，在模板中的實作，如以下代碼。除了最後一本書之外，在與本書相關的每個種類之後，都會添加一個逗號。</p>\n  <div class=\"code-example\"><pre class=\"brush: plain notranslate\">  p #[strong Genre:]\n    each val, index in book.genre\n      a(href=val.url) #{val.name}\n      if index &lt; book.genre.length - 1\n        |,\n</pre></div>\n</div>"}},{"type":"prose","value":{"id":"它看起來像是","title":"它看起來像是?","isH3":false,"content":"<p>運行本應用，並打開瀏覽器訪問 <a href=\"http://localhost:3000/\" class=\"external\" rel=\" noopener\">http://localhost:3000/</a>。選擇 <em>All books</em> 連結，然後選擇其中一本書。如果每個東西都設定正確了，你的頁面看起來應該像是底下的截圖。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page/locallibary_express_book_detail.png\" alt=\"Book Detail Page - Express Local Library site\" width=\"1491\" height=\"765\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<ul>\n  <li>回到 <a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教學 5: 呈現圖書館資料</a></li>\n  <li>繼續教學 5 下一個部分: <a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_detail_page\">作者詳情頁面</a></li>\n</ul>"}}],"toc":[{"text":"Controller 控制器","id":"controller_控制器"},{"text":"View 視圖","id":"view_視圖"},{"text":"它看起來像是?","id":"它看起來像是"},{"text":"下一步","id":"下一步"}],"summary":"書本細節頁面需要呈現一本指定書本(Book)的信息, 使用它的 _id 字段值(自動產生)做為識別，接著是圖書館中書本實例(BookInstance)的信息。無論我們在哪裡呈現一個作者、種類、或書本實例，都應該連結到它的細節頁面。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Book detail page","locale":"en-US","native":"English (US)"},{"title":"本の詳細ページ","locale":"ja","native":"日本語"},{"title":"书本详细信息页面","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/learn/server-side/express_nodejs/displaying_data/book_detail_page","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/learn/server-side/express_nodejs/displaying_data/book_detail_page/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Learn","title":"學習該如何開發 Web"},{"uri":"/zh-TW/docs/Learn/Server-side","title":"伺服端網站程式設計"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs","title":"Express web framework (Node.js/JavaScript)"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express 教程 5: 呈現圖書館數據"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page","title":"書本詳情頁面"}],"pageTitle":"書本詳情頁面 - 學習該如何開發 Web | MDN","noIndexing":false}}