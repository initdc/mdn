{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"書本實例清單頁面","mdn_url":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_list_page","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>接下來，我們將實作圖書館中所有書本實例 (<code>BookInstance</code>) 的列表頁面。這個頁面需要包含與每個 <code>BookInstance</code> (鏈接到其詳細信息頁面) 關聯的書本 <code>Book</code> 標題，以及 <code>BookInstance</code>模型中的其他信息，包含每個副本的狀態，印記和唯一 ID。唯一 ID 的文字，應該鏈接到 <code>BookInstance</code> 詳細信息頁面。</p>"}},{"type":"prose","value":{"id":"controller_控制器","title":"Controller 控制器","isH3":false,"content":"<p><code>BookInstance</code>列表控制器函數，需要獲取所有書本實例的列表，填充關聯的書本信息，然後將列表傳遞給模板以進行呈現。</p>\n<p>打開 <strong>/controllers/bookinstanceController.js</strong>。找到導出的 <code>bookinstance_list()</code>控制器方法，並用以下代碼替換它（更改後的代碼以<strong>粗體</strong>顯示）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display list of all BookInstances.</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">bookinstance_list</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  BookInstance<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> list_bookinstances</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Successful, so render</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bookinstance_list'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Book Instance List'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">bookinstance_list</span><span class=\"token operator\">:</span> list_bookinstances <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>此方法使用模型的<code>find()</code>函數，返回所有 <code>BookInstance</code>對象。然後它將一個調用，以菊花鏈方式連接到 <code>populate()</code>，附加書本 <code>book</code>欄位字段，這將使用完整的 <code>Book</code>文檔，替換每個 <code>BookInstance</code>儲存的書本 ID。</p>\n<p>成功時，傳遞給查詢的回調，會呈現 <strong>bookinstance_list</strong> (.pug)模板，並將標題<code>title</code>和書籍實例列表 <code>bookinstance_list</code>作為變量傳遞。</p>"}},{"type":"prose","value":{"id":"view_視圖","title":"View 視圖","isH3":false,"content":"<p>創建 <strong>/views/bookinstance_list.pug</strong> ，並複制貼上底下的文字。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">extends</span> <span class=\"token class-name\">layout</span>\n\nblock content\n  h1<span class=\"token operator\">=</span> title\n\n  ul\n    each val <span class=\"token keyword\">in</span> bookinstance_list\n      li\n        <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>val<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>imprint<span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span>\n        <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Available'</span>\n          span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>success #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Maintenance'</span>\n          span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>danger #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n          span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>warning #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Available'</span>\n          <span class=\"token function\">span</span>  <span class=\"token punctuation\">(</span>Due<span class=\"token operator\">:</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>due_back<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">else</span>\n      li There are no book copies <span class=\"token keyword\">in</span> <span class=\"token keyword\">this</span> library<span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>這個視圖與其他視圖非常相似。它擴展了佈局，替換內容區塊，顯示從控制器傳入的標題 <code>title</code>，並遍歷 <code>bookinstance_list</code> 中的所有書籍副本。對於每個副本，我們都會顯示它的狀態（用顏色編碼），如果書本不可用，則顯示其預期返回日期。這裡引入了一個新功能 — 我們可以在標籤之後使用點符號表示法，來指定一個類別。因此，<code>span.text-success</code> 將被編譯為 &lt;<code>span class=\"text-success\"</code>&gt; (也可以用 Pug 編寫為 <code>span(class=\"text-success\"</code>)。</p>"}},{"type":"prose","value":{"id":"它看起來像是","title":"它看起來像是?","isH3":false,"content":"<p>運行本應用，打開瀏覽器訪問 <a href=\"http://localhost:3000/\" class=\"external\" rel=\" noopener\">http://localhost:3000/</a>，然後選擇 All book-instances 連結。假如每個東西都設定正確了，你的網站看起來應該像是底下的截圖。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_list_page/locallibary_express_bookinstance_list.png\" alt=\"BookInstance List Page - Express Local Library site\" width=\"1621\" height=\"435\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"下一步","title":"下一步","isH3":false,"content":"<ul>\n  <li>回到 <a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教學 5: 呈現圖書館資料</a></li>\n  <li>繼續教學 5 下一個部分: <a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Date_formatting_using_moment\">格式化日期 － 使用 moment</a>.</li>\n</ul>"}}],"toc":[{"text":"Controller 控制器","id":"controller_控制器"},{"text":"View 視圖","id":"view_視圖"},{"text":"它看起來像是?","id":"它看起來像是"},{"text":"下一步","id":"下一步"}],"summary":"接下來，我們將實作圖書館中所有書本實例 (BookInstance) 的列表頁面。這個頁面需要包含與每個 BookInstance (鏈接到其詳細信息頁面) 關聯的書本 Book 標題，以及 BookInstance模型中的其他信息，包含每個副本的狀態，印記和唯一 ID。唯一 ID 的文字，應該鏈接到 BookInstance 詳細信息頁面。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BookInstance list page","locale":"en-US","native":"English (US)"},{"title":"ブックインスタンスリストページ","locale":"ja","native":"日本語"},{"title":"Список экземпляров книг","locale":"ru","native":"Русский"},{"title":"书本实例列表页面","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/learn/server-side/express_nodejs/displaying_data/bookinstance_list_page","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/learn/server-side/express_nodejs/displaying_data/bookinstance_list_page/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Learn","title":"學習該如何開發 Web"},{"uri":"/zh-TW/docs/Learn/Server-side","title":"伺服端網站程式設計"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs","title":"Express web framework (Node.js/JavaScript)"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express 教程 5: 呈現圖書館數據"},{"uri":"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_list_page","title":"書本實例清單頁面"}],"pageTitle":"書本實例清單頁面 - 學習該如何開發 Web | MDN","noIndexing":false}}