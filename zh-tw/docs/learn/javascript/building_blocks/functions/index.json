{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"函數 - 可重複使用的代碼塊","mdn_url":"/zh-TW/docs/Learn/JavaScript/Building_blocks/Functions","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web\"><strong>全新手請從這開始！</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Web 入門</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web\">Web 概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">安裝基本軟體</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">自己的網站會是什麼樣子？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">處理檔案</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">發佈自己的網站</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Web 運作的方式</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/HTML\"><strong>HTML — 架構 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 介紹</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML\">HTML 概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">HTML 入門</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">標題裡是什麼？HTML 中的後設資料 (Metadata)</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML 文字基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">建立超連結</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">進階文字格式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">文件與網站架構</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">HTML 除錯</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">親和度：設個字母</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">親和度：架構出具備內容的網頁</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>多媒體與嵌入</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding\">多媒體與嵌入的概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">HTML 中的圖片</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">視訊與音訊內容</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">從物件到 iframe — 其他嵌入技巧</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">為 Web 新增向量圖</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">適應性圖片</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">親和度：Mozilla 形象頁面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 表格</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables\">HTML 表格概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Basics\">HTML表格基礎</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/CSS\"><strong>CSS — 設計 Web 的風格</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>初探 CSS</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps\">初探 CSS（概述）</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/What_is_CSS\">CSS 是什麼？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/Getting_started\">CSS 入門</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/How_CSS_works\">CSS 怎麼運作</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 組件</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>樣式化文字</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text\">樣式化文字概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Fundamentals\">基礎的文字與字型樣式化</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Styling_lists\">樣式化列表</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Styling_links\">樣式化連結</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Web_fonts\">Web 字型</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">親合度：設定社區大學首頁的版面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 版面配置</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout\">CSS 版面配置概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Flexbox\">彈性區塊</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Grids\">格線</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Floats\">浮動</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Positioning\">定位</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/zh-TW/docs/Learn/JavaScript\"><strong>JavaScript — 動態的用戶端指令</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps\">JavaScript 第一步概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">什麼是 JavaScript？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/A_first_splash\">初次接觸 JavaScript</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_went_wrong\">出了什麼問題？JavaScript 疑難排解</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Variables\">儲存你所需的資訊 — 變數</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Math\">JavaScript 基礎概念 — 數字與運算子</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Strings\">處理文字 — JavaScript 中的字串</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Useful_string_methods\">有用的字串函式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Arrays\">陣列</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Silly_story_generator\">親合度：傻瓜故事產生器</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>JavaScript 基礎要件</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks\">JavaScript 基礎要件概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/conditionals\">於程式碼中決策 — 條件</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Looping_code\">程式碼迴圈</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Functions\">函式 — 可重複使用的程式碼區塊</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">建立自己的函式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Return_values\">函式回傳值</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Events\">事件介紹</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Image_gallery\">親合度：圖庫</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 物件介紹</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects\">JavaScript 物件概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Basics\">物件基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object_prototypes\">物件原型</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/JSON\">使用 JSON 資料</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object_building_practice\">物件建構實作</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">親合度：為彈跳球展示新增功能</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>非同步的 JavaScript</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客戶端 web APIs</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs\">客戶端 web APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">文件操作</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Forms\"><strong>網頁表單-與使用者資料合作</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>核心的表單學習途徑</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Forms\">網頁表單概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/How_to_structure_a_web_form\">如何建構網頁表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>深入網頁表單</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Accessibility\"><strong>無障礙網頁 — 每個人都可以使用的網頁</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>無障礙網頁指南</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility\">無障礙網頁概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/What_is_accessibility\">何謂無障礙網頁？</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA 基礎</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/Mobile\">行動裝置上的無障礙</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>無障礙網頁評估</summary>\n        <ol>\n            <li><a href=\"/zh-TW/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing\"><strong>工具與測試</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>介紹前端框架</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">前端框架簡介</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">開始學 Vue</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Svelte 入門</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Angular 新手入門</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">開始開發我們的 Angular 待辦事項應用程式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">使用樣式點綴我們的 Angular 應用程式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">建立一個 item 元件</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">篩選我們的待辦事項項目</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">建構 Angular 應用程式與更多資源</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub 概述</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>跨瀏覽器測試</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing\">跨瀏覽器測試概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">跨瀏覽器測試介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">測試執行策略</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">處理常見的 HTML 與 CSS 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">處理常見的 JavaScript 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">處理常見的親合度問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">建置功能偵測</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">自動化測試介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">設定自己的自動化測試環境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/Server-side\"><strong>伺服端網站程式設計</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>第一步</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps\">第一步概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Introduction\">伺服端介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Client-Server_overview\">用戶端概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Web_frameworks\">伺服端網路框架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Website_security\">網站安全</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django 網站框架 (Python)</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django\">Django 網站框架 (Python) 概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Introduction\">介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/development_environment\">設定開發環境</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Tutorial_local_library_website\">線上教學：本地圖書館網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/skeleton_website\">線上教學 2：建立網站骨架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Models\">線上教學 3：使用模型</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Admin_site\">線上教學 4：Django 管理網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Home_page\">線上教學 5：建立我們的首頁</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Generic_views\">線上教學 6：泛型清單與細節檢視</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Sessions\">線上教學 7：會話 (Sessions) 框架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Authentication\">線上教學 8：使用者授權與許可</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Forms\">線上教學 9：搭配表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Testing\">線上教學 10：測試 Django 的 Web App</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Deployment\">線上教學 11：佈署 Django 至產品</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/web_application_security\">Web App 安全性</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/django_assessment_blog\">親合度：DIY 迷你部落格</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express 網站框架 (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs\">Express 網站框架 (Node.js/JavaScript) 概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node 介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/development_environment\">設定 Node (Express) 的開發環境</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express 教學 1: 本地圖書館網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express 教學 2: 建立骨架網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express 教學 3: 使用資料庫 (Mongoose)</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/routes\">Express 教學 4: 路由與控制器</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5: 呈現圖書館的資料</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/forms\">Express 教學 6: 使用表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/deployment\">Express 教學 7: 佈署到正式環境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>更多資源</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>常見問題</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/HTML/Howto\">HTML 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/CSS/Howto\">CSS 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Web_mechanics\">Web 的運作方式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Tools_and_setup\">工具與設定</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Design_and_accessibility\">設計與親合度</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Looping_code\"> 前頁 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks\"> Overview: Building blocks</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\"> 次頁  </a></li>\n</ul>\n<p>編碼中的另一個基本概念是函數，它允許您存儲一段代碼，該代碼在定義的塊內執行單個任務，然後在需要時使用一個簡短命令調用該代碼 - 而不必輸入相同的代碼 代碼多次。 在本文中，我們將探索函數背後的基本概念，例如基本語法，如何調用和定義它們，範圍和參數。</p>\n<table class=\"learn-box standard-table\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">Prerequisites:</th>\n      <td>\n        Basic computer literacy, a basic understanding of HTML and CSS,\n        <a href=\"/zh-TW/docs/Learn/JavaScript/First_steps\">JavaScript first steps</a>.\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Objective:</th>\n      <td>To understand the fundamental concepts behind JavaScript functions.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"where_do_i_find_functions","title":"Where do I find functions?","isH3":false,"content":"<p>In JavaScript, you'll find functions everywhere. In fact, we've been using functions all the way through the course so far; we've just not been talking about them very much. Now is the time, however, for us to start talking about functions explicitly, and really exploring their syntax.</p>\n<p>Pretty much anytime you make use of a JavaScript structure that features a pair of parentheses — <code>()</code> — and you're <strong>not</strong> using a common built-in language structure like a <a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Looping_code#the_standard_for_loop\">for loop</a>, <a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Looping_code#while_and_do_..._while\">while or do...while loop</a>, or <a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/conditionals#if_..._else_statements\">if...else statement</a>, you are making use of a function.</p>"}},{"type":"prose","value":{"id":"built-in_browser_functions","title":"Built-in browser functions","isH3":false,"content":"<p>We've made use of functions built in to the browser a lot in this course. Every time we manipulated a text string, for example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myText <span class=\"token operator\">=</span> <span class=\"token string\">'I am a string'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> newString <span class=\"token operator\">=</span> myText<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sausage'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// the replace() string function takes a string,</span>\n<span class=\"token comment\">// replaces one substring with another, and returns</span>\n<span class=\"token comment\">// a new string with the replacement made</span>\n</code></pre></div>\n<p>Or every time we manipulated an array:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'love'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'chocolate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'frogs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> madeAString <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>madeAString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// the join() function takes an array, joins</span>\n<span class=\"token comment\">// all the array items together into a single</span>\n<span class=\"token comment\">// string, and returns this new string</span>\n</code></pre></div>\n<p>Or every time we generated a random number:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myNumber <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// the random() function generates a random</span>\n<span class=\"token comment\">// number between 0 and 1, and returns that</span>\n<span class=\"token comment\">// number</span>\n</code></pre></div>\n<p>...we were using a function!</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> Feel free to enter these lines into your browser's JavaScript console to re-familiarize yourself with their functionality, if needed.</p>\n</div>\n<p>The JavaScript language has many built-in functions to allow you to do useful things without having to write all that code yourself. In fact, some of the code you are calling when you <strong>invoke</strong> (a fancy word for run, or execute) a built in browser function couldn't be written in JavaScript — many of these functions are calling parts of the background browser code, which is written largely in low-level system languages like C++, not web languages like JavaScript.</p>\n<p>Bear in mind that some built-in browser functions are not part of the core JavaScript language — some are defined as part of browser APIs, which build on top of the default language to provide even more functionality (refer to <a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_is_JavaScript#so_what_can_it_really_do\">this early section of our course</a> for more descriptions). We'll look at using browser APIs in more detail in a later module.</p>"}},{"type":"prose","value":{"id":"functions_versus_methods","title":"Functions versus methods","isH3":false,"content":"<p>One thing we need to clear up before we move on — technically speaking, built in browser functions are not functions — they are <strong>methods</strong>. This sounds a bit scary and confusing, but don't worry — the words function and method are largely interchangeable, at least for our purposes, at this stage in your learning.</p>\n<p>The distinction is that methods are functions defined inside objects. Built-in browser functions (methods) and variables (which are called <strong>properties</strong>) are stored inside structured objects, to make the code more efficient and easier to handle.</p>\n<p>You don't need to learn about the inner workings of structured JavaScript objects yet — you can wait until our later module that will teach you all about the inner workings of objects, and how to create your own. For now, we just wanted to clear up any possible confusion of method versus function — you are likely to meet both terms as you look at the available related resources across the Web.</p>"}},{"type":"prose","value":{"id":"custom_functions","title":"Custom functions","isH3":false,"content":"<p>You've also seen a lot of <strong>custom functions</strong> in the course so far — functions defined in your code, not inside the browser. Anytime you saw a custom name with parentheses straight after it, you were using a custom function. In our <a href=\"https://mdn.github.io/learning-area/javascript/building-blocks/loops/random-canvas-circles.html\" class=\"external\" rel=\" noopener\">random-canvas-circles.html</a> example (see also the full <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/building-blocks/loops/random-canvas-circles.html\" class=\"external\" rel=\" noopener\">source code</a>) from our <a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Looping_code\">loops article</a>, we included a custom <code>draw()</code> function that looked like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">,</span><span class=\"token constant\">HEIGHT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgba(255,0,0,0.5)'</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HEIGHT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This function draws 100 random circles inside an <a href=\"/zh-TW/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element. Every time we want to do that, we can just invoke the function with this</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>rather than having to write all that code out again every time we want to repeat it. And functions can contain whatever code you like — you can even call other functions from inside functions. The above function for example calls the <code>random()</code> function three times, which is defined by the following code:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>We needed this function because the browser's built-in <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Math/random\">Math.random()</a> function only generates a random decimal number between 0 and 1. We wanted a random whole number between 0 and a specified number.</p>"}},{"type":"prose","value":{"id":"invoking_functions","title":"Invoking functions","isH3":false,"content":"<p>You are probably clear on this by now, but just in case ... to actually use a function after it has been defined, you've got to run — or invoke — it. This is done by including the name of the function in the code somewhere, followed by parentheses.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// calls the function once</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"anonymous_functions","title":"Anonymous functions","isH3":false,"content":"<p>You may see functions defined and invoked in slightly different ways. So far we have just created a function like so:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>But you can also create a function that doesn't have a name:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This is called an <strong>anonymous function</strong> — it has no name! It also won't do anything on its own. You generally use an anonymous function along with an event handler, for example the following would run the code inside the function whenever the associated button is clicked:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyButton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>The above example would require there to be a <a href=\"/zh-TW/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> element available on the page to select and click. You've already seen this structure a few times throughout the course, and you'll learn more about and see it in use in the next article.</p>\n<p>You can also assign an anonymous function to be the value of a variable, for example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">myGreeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This function could now be invoked using:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">myGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This effectively gives the function a name; you can also assign the function to be the value of multiple variables, for example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">anotherGreeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This function could now be invoked using either of</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">myGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">anotherGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>But this would just be confusing, so don't do it! When creating functions, it is better to just stick to this form:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>You will mainly use anonymous functions to just run a load of code in response to an event firing — like a button being clicked — using an event handler. Again, this looks something like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myButton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// I can put as much code</span>\n  <span class=\"token comment\">// inside here as I want</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"function_parameters","title":"Function parameters","isH3":false,"content":"<p>Some functions require <strong>parameters</strong> to be specified when you are invoking them — these are values that need to be included inside the function parentheses, which it needs to do its job properly.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>備註：</strong> Parameters are sometimes called arguments, properties, or even attributes.</p>\n</div>\n<p>As an example, the browser's built-in <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Math/random\">Math.random()</a> function doesn't require any parameters. When called, it always returns a random number between 0 and 1:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myNumber <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The browser's built-in string <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/String/replace\">replace()</a> function however needs two parameters — the substring to find in the main string, and the substring to replace that string with:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myText <span class=\"token operator\">=</span> <span class=\"token string\">'I am a string'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> newString <span class=\"token operator\">=</span> myText<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sausage'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>備註：</strong> When you need to specify multiple parameters, they are separated by commas.</p>\n</div>\n<p>It should also be noted that sometimes parameters are optional — you don't have to specify them. If you don't, the function will generally adopt some kind of default behavior. As an example, the array <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/join\">join()</a> function's parameter is optional:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'love'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'chocolate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'frogs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> madeAString <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns 'I love chocolate frogs'</span>\n<span class=\"token keyword\">var</span> madeAString <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns 'I,love,chocolate,frogs'</span>\n</code></pre></div>\n<p>If no parameter is included to specify a joining/delimiting character, a comma is used by default.</p>"}},{"type":"prose","value":{"id":"function_scope_and_conflicts","title":"Function scope and conflicts","isH3":false,"content":"<p>Let's talk a bit about <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Scope\">scope <small>(en-US)</small></a> — a very important concept when dealing with functions. When you create a function, the variables and other things defined inside the function are inside their own separate <strong>scope</strong>, meaning that they are locked away in their own separate compartments, unreachable from inside other functions or from code outside the functions.</p>\n<p>The top level outside all your functions is called the <strong>global scope</strong>. Values defined in the global scope are accessible from everywhere in the code.</p>\n<p>JavaScript is set up like this for various reasons — but mainly because of security and organization. Sometimes you don't want variables to be accessible from everywhere in the code — external scripts that you call in from elsewhere could start to mess with your code and cause problems because they happen to be using the same variable names as other parts of the code, causing conflicts. This might be done maliciously, or just by accident.</p>\n<p>For example, say you have an HTML file that is calling in two external JavaScript files, and both of them have a variable and a function defined that use the same name:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!-- Excerpt from my HTML --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>first.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>second.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// first.js</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Chris'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello '</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">': welcome to our company.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// second.js</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Zaptec'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Our company is called '</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Both functions you want to call are called <code>greeting()</code>, but you can only ever access the <code>second.js</code> file's <code>greeting()</code> function — it is applied to the HTML later on in the source code, so its variable and function overwrite the ones in <code>first.js</code>.</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>備註：</strong> You can see this example <a href=\"https://mdn.github.io/learning-area/javascript/building-blocks/functions/conflict.html\" class=\"external\" rel=\" noopener\">running live on GitHub</a> (see also the <a href=\"https://github.com/mdn/learning-area/tree/master/javascript/building-blocks/functions\" class=\"external\" rel=\" noopener\">source code</a>).</p>\n</div>\n<p>Keeping parts of your code locked away in functions avoids such problems, and is considered best practice.</p>\n<p>It is a bit like a zoo. The lions, zebras, tigers, and penguins are kept in their own enclosures, and only have access to the things inside their enclosures — in the same manner as the function scopes. If they were able to get into other enclosures, problems would occur. At best, different animals would feel really uncomfortable inside unfamiliar habitats — a lion or tiger would feel terrible inside the penguins' watery, icy domain. At worst, the lions and tigers might try to eat the penguins!</p>\n<p>\n  <img src=\"/en-US/docs/Learn/JavaScript/Building_blocks/Functions/mdn-mozilla-zoo.png\" alt=\"\" width=\"656\" height=\"416\" loading=\"lazy\">\n</p>\n<p>The zoo keeper is like the global scope — he or she has the keys to access every enclosure, to restock food, tend to sick animals, etc.</p>"}},{"type":"prose","value":{"id":"active_learning_playing_with_scope","title":"Active learning: Playing with scope","isH3":true,"content":"<p>Let's look at a real example to demonstrate scoping.</p>\n<ol>\n  <li>First, make a local copy of our <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/building-blocks/functions/function-scope.html\" class=\"external\" rel=\" noopener\">function-scope.html</a> example. This contains two functions called <code>a()</code> and <code>b()</code>, and three variables — <code>x</code>, <code>y</code>, and <code>z</code> — two of which are defined inside the functions, and one in the global scope. It also contains a third function called <code>output()</code>, which takes a single parameter and outputs it in a paragraph on the page.</li>\n  <li>Open the example up in a browser and in your text editor.</li>\n  <li>Open the JavaScript console in your browser developer tools. In the JavaScript console, enter the following command:\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">output</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>You should see the value of variable <code>x</code> output to the screen.\n  </li>\n  <li>Now try entering the following in your console\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">output</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">output</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>Both of these should return an error along the lines of \"<a href=\"/zh-TW/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: y is not defined</a>\". Why is that? Because of function scope — <code>y</code> and <code>z</code> are locked inside the <code>a()</code> and <code>b()</code> functions, so <code>output()</code> can't access them when called from the global scope.\n  </li>\n  <li>However, what about when it's called from inside another function? Try editing <code>a()</code> and <code>b()</code> so they look like this:\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>Save the code and reload it in your browser, then try calling the <code>a()</code> and <code>b()</code> functions from the JavaScript console:\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>You should see the <code>y</code> and <code>z</code> values output in the page. This works fine, as the <code>output()</code> function is being called inside the other functions — in the same scope as the variables it is printing are defined in, in each case. <code>output()</code> itself is available from anywhere, as it is defined in the global scope.\n  </li>\n  <li>Now try updating your code like this:\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>Save and reload again, and try this again in your JavaScript console:\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>Both the <code>a()</code> and <code>b()</code> call should output the value of x — 1. These work fine because even though the <code>output()</code> calls are not in the same scope as <code>x</code> is defined in, <code>x</code> is a global variable so is available inside all code, everywhere.\n  </li>\n  <li>Finally, try updating your code like this:\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>Save and reload again, and try this again in your JavaScript console:\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>This time the <code>a()</code> and <code>b()</code> calls will both return that annoying \"<a href=\"/zh-TW/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: z is not defined</a>\" error — this is because the <code>output()</code> calls and the variables they are trying to print are not defined inside the same function scopes — the variables are effectively invisible to those function calls.\n  </li>\n</ol>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>備註：</strong> The same scoping rules do not apply to loop (e.g. <code>for() { ... }</code>) and conditional blocks (e.g. <code>if() { ... }</code>) — they look very similar, but they are not the same thing! Take care not to get these confused.</p>\n</div>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>備註：</strong> The <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a> error is one of the most common you'll encounter. If you get this error and you are sure that you have defined the variable in question, check what scope it is in.</p>\n</div>"}},{"type":"prose","value":{"id":"functions_inside_functions","title":"Functions inside functions","isH3":true,"content":"<p>Keep in mind that you can call a function from anywhere, even inside another function. This is often used as a way to keep code tidy — if you have a big complex function, it is easier to understand if you break it down into several sub-functions:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myBigFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> myValue<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">subFunction1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">subFunction2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">subFunction3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Just make sure that the values being used inside the function are properly in scope. The example above would throw an error <code>ReferenceError: myValue is not defined</code>, because although the <code>myValue</code> variable is defined in the same scope as the function calls, it is not defined inside the function definitions — the actual code that is run when the functions are called. To make this work, you'd have to pass the value into the function as a parameter, like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myBigFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> myValue <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">subFunction1</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">subFunction2</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">subFunction3</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction3</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"conclusion","title":"Conclusion","isH3":false,"content":"<p>This article has explored the fundamental concepts behind functions, paving the way for the next one in which we get practical and take you through the steps to building up your own custom function.</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-TW/docs/Web/JavaScript/Guide/Functions\">Functions detailed guide</a> — covers some advanced features not included here.</li>\n  <li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Functions\">Functions reference</a></li>\n  <li><a href=\"/zh-TW/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a>, <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow functions</a> — advanced concept references</li>\n</ul><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Looping_code\"> 前頁 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks\"> Overview: Building blocks</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\"> 次頁  </a></li>\n</ul>"}},{"type":"prose","value":{"id":"in_this_module","title":"In this module","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/conditionals\">Making decisions in your code — conditionals</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Looping_code\">Looping code</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Functions\" aria-current=\"page\">Functions — reusable blocks of code</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Build your own function</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Return_values\">Function return values</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Image gallery</a></li>\n</ul>"}}],"toc":[{"text":"Where do I find functions?","id":"where_do_i_find_functions"},{"text":"Built-in browser functions","id":"built-in_browser_functions"},{"text":"Functions versus methods","id":"functions_versus_methods"},{"text":"Custom functions","id":"custom_functions"},{"text":"Invoking functions","id":"invoking_functions"},{"text":"Anonymous functions","id":"anonymous_functions"},{"text":"Function parameters","id":"function_parameters"},{"text":"Function scope and conflicts","id":"function_scope_and_conflicts"},{"text":"Conclusion","id":"conclusion"},{"text":"See also","id":"see_also"},{"text":"In this module","id":"in_this_module"}],"summary":"編碼中的另一個基本概念是函數，它允許您存儲一段代碼，該代碼在定義的塊內執行單個任務，然後在需要時使用一個簡短命令調用該代碼 - 而不必輸入相同的代碼 代碼多次。 在本文中，我們將探索函數背後的基本概念，例如基本語法，如何調用和定義它們，範圍和參數。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Functions — reusable blocks of code","locale":"en-US","native":"English (US)"},{"title":"Fonctions — des blocs de code réutilisables","locale":"fr","native":"Français"},{"title":"関数 — 再利用可能なコードブロック","locale":"ja","native":"日本語"},{"title":"함수 — 코드 재사용","locale":"ko","native":"한국어"},{"title":"Funções — blocos reutilizáveis de código","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Функции — Переиспользуемые блоки кода","locale":"ru","native":"Русский"},{"title":"函数 - 可复用代码块","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/learn/javascript/building_blocks/functions","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/learn/javascript/building_blocks/functions/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Learn","title":"學習該如何開發 Web"},{"uri":"/zh-TW/docs/Learn/JavaScript","title":"JavaScript — 動態的客戶端指令"},{"uri":"/zh-TW/docs/Learn/JavaScript/Building_blocks","title":"JavaScript building blocks"},{"uri":"/zh-TW/docs/Learn/JavaScript/Building_blocks/Functions","title":"函數 - 可重複使用的代碼塊"}],"pageTitle":"函數 - 可重複使用的代碼塊 - 學習該如何開發 Web | MDN","noIndexing":false}}