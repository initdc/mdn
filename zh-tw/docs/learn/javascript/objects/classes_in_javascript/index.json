{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"JavaScript 中的「繼承」","mdn_url":"/zh-TW/docs/Learn/JavaScript/Objects/Classes_in_JavaScript","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web\"><strong>全新手請從這開始！</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Web 入門</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web\">Web 概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">安裝基本軟體</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">自己的網站會是什麼樣子？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">處理檔案</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">發佈自己的網站</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Web 運作的方式</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/HTML\"><strong>HTML — 架構 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 介紹</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML\">HTML 概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">HTML 入門</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">標題裡是什麼？HTML 中的後設資料 (Metadata)</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML 文字基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">建立超連結</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">進階文字格式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">文件與網站架構</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">HTML 除錯</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">親和度：設個字母</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">親和度：架構出具備內容的網頁</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>多媒體與嵌入</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding\">多媒體與嵌入的概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">HTML 中的圖片</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">視訊與音訊內容</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">從物件到 iframe — 其他嵌入技巧</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">為 Web 新增向量圖</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">適應性圖片</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">親和度：Mozilla 形象頁面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 表格</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables\">HTML 表格概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Basics\">HTML表格基礎</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/CSS\"><strong>CSS — 設計 Web 的風格</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>初探 CSS</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps\">初探 CSS（概述）</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/What_is_CSS\">CSS 是什麼？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/Getting_started\">CSS 入門</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/How_CSS_works\">CSS 怎麼運作</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 組件</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>樣式化文字</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text\">樣式化文字概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Fundamentals\">基礎的文字與字型樣式化</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Styling_lists\">樣式化列表</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Styling_links\">樣式化連結</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Web_fonts\">Web 字型</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">親合度：設定社區大學首頁的版面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 版面配置</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout\">CSS 版面配置概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Flexbox\">彈性區塊</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Grids\">格線</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Floats\">浮動</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Positioning\">定位</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/zh-TW/docs/Learn/JavaScript\"><strong>JavaScript — 動態的用戶端指令</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps\">JavaScript 第一步概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">什麼是 JavaScript？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/A_first_splash\">初次接觸 JavaScript</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_went_wrong\">出了什麼問題？JavaScript 疑難排解</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Variables\">儲存你所需的資訊 — 變數</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Math\">JavaScript 基礎概念 — 數字與運算子</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Strings\">處理文字 — JavaScript 中的字串</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Useful_string_methods\">有用的字串函式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Arrays\">陣列</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Silly_story_generator\">親合度：傻瓜故事產生器</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 基礎要件</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks\">JavaScript 基礎要件概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/conditionals\">於程式碼中決策 — 條件</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Looping_code\">程式碼迴圈</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Functions\">函式 — 可重複使用的程式碼區塊</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">建立自己的函式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Return_values\">函式回傳值</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Events\">事件介紹</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Image_gallery\">親合度：圖庫</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>JavaScript 物件介紹</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects\">JavaScript 物件概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Basics\">物件基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object_prototypes\">物件原型</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/JSON\">使用 JSON 資料</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object_building_practice\">物件建構實作</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">親合度：為彈跳球展示新增功能</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>非同步的 JavaScript</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客戶端 web APIs</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs\">客戶端 web APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">文件操作</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Forms\"><strong>網頁表單-與使用者資料合作</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>核心的表單學習途徑</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Forms\">網頁表單概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/How_to_structure_a_web_form\">如何建構網頁表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>深入網頁表單</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Accessibility\"><strong>無障礙網頁 — 每個人都可以使用的網頁</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>無障礙網頁指南</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility\">無障礙網頁概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/What_is_accessibility\">何謂無障礙網頁？</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA 基礎</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/Mobile\">行動裝置上的無障礙</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>無障礙網頁評估</summary>\n        <ol>\n            <li><a href=\"/zh-TW/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing\"><strong>工具與測試</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>介紹前端框架</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">前端框架簡介</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">開始學 Vue</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Svelte 入門</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Angular 新手入門</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">開始開發我們的 Angular 待辦事項應用程式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">使用樣式點綴我們的 Angular 應用程式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">建立一個 item 元件</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">篩選我們的待辦事項項目</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">建構 Angular 應用程式與更多資源</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub 概述</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>跨瀏覽器測試</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing\">跨瀏覽器測試概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">跨瀏覽器測試介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">測試執行策略</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">處理常見的 HTML 與 CSS 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">處理常見的 JavaScript 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">處理常見的親合度問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">建置功能偵測</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">自動化測試介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">設定自己的自動化測試環境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/Server-side\"><strong>伺服端網站程式設計</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>第一步</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps\">第一步概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Introduction\">伺服端介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Client-Server_overview\">用戶端概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Web_frameworks\">伺服端網路框架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Website_security\">網站安全</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django 網站框架 (Python)</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django\">Django 網站框架 (Python) 概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Introduction\">介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/development_environment\">設定開發環境</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Tutorial_local_library_website\">線上教學：本地圖書館網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/skeleton_website\">線上教學 2：建立網站骨架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Models\">線上教學 3：使用模型</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Admin_site\">線上教學 4：Django 管理網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Home_page\">線上教學 5：建立我們的首頁</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Generic_views\">線上教學 6：泛型清單與細節檢視</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Sessions\">線上教學 7：會話 (Sessions) 框架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Authentication\">線上教學 8：使用者授權與許可</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Forms\">線上教學 9：搭配表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Testing\">線上教學 10：測試 Django 的 Web App</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Deployment\">線上教學 11：佈署 Django 至產品</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/web_application_security\">Web App 安全性</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/django_assessment_blog\">親合度：DIY 迷你部落格</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express 網站框架 (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs\">Express 網站框架 (Node.js/JavaScript) 概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node 介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/development_environment\">設定 Node (Express) 的開發環境</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express 教學 1: 本地圖書館網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express 教學 2: 建立骨架網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express 教學 3: 使用資料庫 (Mongoose)</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/routes\">Express 教學 4: 路由與控制器</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5: 呈現圖書館的資料</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/forms\">Express 教學 6: 使用表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/deployment\">Express 教學 7: 佈署到正式環境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>更多資源</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>常見問題</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/HTML/Howto\">HTML 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/CSS/Howto\">CSS 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Web_mechanics\">Web 的運作方式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Tools_and_setup\">工具與設定</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Design_and_accessibility\">設計與親合度</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object_prototypes\"> 前頁 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Objects\"> Overview: Objects</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Objects/JSON\"> 次頁  </a></li>\n</ul>\n<p>在解釋過大部分的 OOJS 細節之後，本文將說明該如何建立「子」物件類別 (建構子)，並從其「母」類別繼承功能。此外，也將建議開發者應於何時、於何處使用 OOJS。</p>\n<table class=\"learn-box standard-table\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">必備條件：</th>\n      <td>\n        基本的電腦素養、已了解 HTML 與 CSS 基本概念、熟悉 JavaScript 基礎\n        (可參閱〈<a href=\"/zh-TW/docs/Learn/JavaScript/First_steps\">First steps</a>〉與〈<a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks\">Building blocks</a>〉) 與 OOJS 的基礎 (可參閱〈<a href=\"/en-US/docs/Learn/JavaScript/Objects/Basics\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Introduction to objects (en-US)</a>〉)。\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">主旨：</th>\n      <td>了解應如何建構 JavaScript 中的繼承。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"原型繼承","title":"原型繼承","isH3":false,"content":"<p>目前為止，我們看過幾個繼承的實作範例：原型鍊的運作方式，以及繼承的成員如何形成原型鍊。但這些大部分都與內建的瀏覽器函式有關。那我們又該如何在 JavaScript 建立物件且由其他物件繼承而來呢？</p>\n<p>如稍早的系列文章中所述，某些人認為 JavaScript 並非真正的物件導向 (OO) 語言。在「典型 OO」中，你必須定義特定的類別物件，才能定義哪些類別所要繼承的類別 (可參閱〈<a href=\"http://www.tutorialspoint.com/cplusplus/cpp_inheritance.htm\" class=\"external\" rel=\" noopener\">C++ inheritance</a>〉了解簡易範例)。JavaScript 則使用不同的系統 —「繼承」的物件並不會一併複製功能過來，而是透過原型鍊連接其所繼承的功能，亦即所謂的原型繼承 (<strong>Prototypal inheritance</strong>)。</p>\n<p>就透過範例了解此一概念吧。</p>"}},{"type":"prose","value":{"id":"入門","title":"入門","isH3":false,"content":"<p>首先將 <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/oojs/advanced/oojs-class-inheritance-start.html\" class=\"external\" rel=\" noopener\">oojs-class-inheritance-start.html</a> 檔案 (亦可參考<a href=\"https://mdn.github.io/learning-area/javascript/oojs/advanced/oojs-class-inheritance-start.html\" class=\"external\" rel=\" noopener\">實際執行</a>) 複製到本端磁碟。可在裡面找到本課程一直沿用的 <code>Person()</code> 建構子範例，但這裡有些許不同，也就是該建構子只定義了屬性：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">first<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">,</span> interests</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    first<span class=\"token punctuation\">,</span>\n    last\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> gender<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>interests <span class=\"token operator\">=</span> interests<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>這些函式均已定義於建構子的原型之上，例如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">greeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>假設要建立一個像前面 OO 定義中說過的 <code>Teacher</code> 類別，且除了繼承 <code>Person</code> 的所有成員，還要包含：</p>\n<ol>\n  <li>新的 <code>subject</code> 屬性，可包含老師所傳授的科目。</li>\n  <li>更新過的 <code>greeting()</code> 函式，要比標準的 <code>greeting()</code> 函式更正式一點，更適合老師在校對學生使用。</li>\n</ol>"}},{"type":"prose","value":{"id":"定義_teacher_建構子函式","title":"定義 Teacher() 建構子函式","isH3":false,"content":"<p>首先必須建立 <code>Teacher()</code> 建構子，將下列程式碼加到現有程式碼之下：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Teacher</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">first<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">,</span> interests<span class=\"token punctuation\">,</span> subject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">Person</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">,</span> interests<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subject <span class=\"token operator\">=</span> subject<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>這看起來和 Person 建構子有許多地方類似，但比較奇怪的就是之前沒看過的 <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>call()</code></a> 函式。此函式基本上可讓你呼叫在其他地方定義的函數，而非目前內文 (context) 中定義的函式。當執行函式時，第一個參數用來指定你要使用 <code>this</code> 值，其他參數則指定應該傳送到該函式的參數。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> 我們此範例中建立新的物件實例時，會指定所要繼承的屬性。但必須注意的是，即使實例不需將屬性指定為參數，你還是必須在建構子中將屬性指定為參數 (在建立物件時，你可能獲得設定為隨意值的屬性)。</p>\n</div>\n<p>所以這裡可在 <code>Teacher()</code> 建構子函式之內有效執行 <code>Person()</code> 建構子函式 (如上述)，藉以在 <code>Teacher()</code> 之內定義相同的屬性，但使用的是傳送到 <code>Teacher()</code> 的屬性值，而非 <code>Person()</code> 的屬性值 (我們將 <code>this</code> 值設為簡單的「<code>this」並</code>傳送到 <code>call()</code>，代表這個 <code>this</code> 是 <code>Teacher()</code> 的函式)。</p>\n<p>建構子的最後一行則定義了新的 <code>subject</code> 屬性，代表只有老師具備，一般人不會有。</p>\n<p>我們也可以單純這樣做：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Teacher</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">first<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">,</span> interests<span class=\"token punctuation\">,</span> subject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    first<span class=\"token punctuation\">,</span>\n    last\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> gender<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>interests <span class=\"token operator\">=</span> interests<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subject <span class=\"token operator\">=</span> subject<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>但這樣只是重新定義了新的屬性，而不是繼承自 <code>Person() 而來，所以無法達到我們預設的目標，也需要更多程式碼才能達成。</code></p>"}},{"type":"prose","value":{"id":"設定_teacher_的原型與建構子參考","title":"設定 Teacher() 的原型與建構子參考","isH3":false,"content":"<p>到目前為止發現一個問題：我們定義了新的建構子，但預設只有 1 個空白的 <code>prototype</code> 屬性。接著要讓 <code>Teacher()</code> 繼承 <code>Person()</code> 原型中所定義的函式，該怎麼做呢？</p>\n<ol>\n  <li>繼續在現有程式碼下方加入：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Teacher</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>這裡再次用好朋友 <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>create()</code></a> 解救。我們透過 <code>create()</code> 並搭配等同於 <code>Person.prototype</code> 的原型，建立新的 <code>prototype</code> 屬性值 (它本身就是物件，包含屬性與函式) ，並將之設定為 <code>Teacher.prototype</code> <code>的值。也就是說</code> <code>Teacher.prototype</code> 現在會繼承 <code>Person.prototype</code> 上的所有可用函式。\n  </li>\n  <li>此外，基於我們的繼承方式，<code>Teacher()</code> <code>prototype</code> 的建構子屬性目前設定為 <code>Person()。可參閱</code> <a href=\"https://stackoverflow.com/questions/8453887/why-is-it-necessary-to-set-the-prototype-constructor\" class=\"external\" rel=\" noopener\">Stack Overflow post</a> 進一步了解原因。可先儲存自己的程式碼、在瀏覽器中載入頁面，再將下列程式碼輸入至 JavaScript 主控台以驗證：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Teacher</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor\n</code></pre></div>\n  </li>\n  <li>這樣可能會產生問題，所以要設定正確。你可回到自己的原始碼並在最下方加入下列程式碼：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Teacher</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> Teacher<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>如果儲存並重新整理之後，只要輸入 <code>Teacher.prototype.constructor</code> 應該就會回傳 <code>Teacher()</code>。</li>\n</ol>"}},{"type":"prose","value":{"id":"給_teacher_新的_greeting_函式","title":"給 Teacher() 新的 greeting() 函式","isH3":false,"content":"<p>接著必須在 <code>Teacher()</code> 建構子上定義新的 <code>greeting()</code> 函式。</p>\n<p>最簡單的方法就是在 <code>Teacher()</code> 的原型上定義此函式。將下列加入程式碼最底部：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Teacher</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">greeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> prefix<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">===</span> <span class=\"token string\">'male'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">===</span> <span class=\"token string\">'Male'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">===</span> <span class=\"token string\">'m'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">===</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    prefix <span class=\"token operator\">=</span> <span class=\"token string\">'Mr.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">===</span> <span class=\"token string\">'female'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">===</span> <span class=\"token string\">'Female'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">===</span> <span class=\"token string\">'f'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">===</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    prefix <span class=\"token operator\">=</span> <span class=\"token string\">'Mrs.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    prefix <span class=\"token operator\">=</span> <span class=\"token string\">'Mx.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello. My name is '</span> <span class=\"token operator\">+</span> prefix <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>last <span class=\"token operator\">+</span> <span class=\"token string\">', and I teach '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>subject <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>這樣就會顯示老師的問候語，也會針對老師的性別使用合適的稱呼，可用於條件陳述式。</p>"}},{"type":"prose","value":{"id":"簡易範例","title":"簡易範例","isH3":false,"content":"<p>現在你已經輸入所有程式碼了，可以試著用<code>Teacher()</code> 建立物件實例。將下列 (或是你想用的類似程式碼) 加入現有程式碼的底部：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> teacher1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Teacher</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Dave'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Griffiths'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'football'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cookery'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mathematics'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>儲存並重新整理之後，試著存取新 <code>teacher1</code> 物件的屬性語函式，例如：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>teacher1<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span>\nteacher1<span class=\"token punctuation\">.</span>interests<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nteacher1<span class=\"token punctuation\">.</span><span class=\"token function\">bio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nteacher1<span class=\"token punctuation\">.</span>subject<span class=\"token punctuation\">;</span>\nteacher1<span class=\"token punctuation\">.</span><span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>這樣應該運作無虞。前 3 行的存取成員即繼承自一般 <code>Person()</code> 建構子 (類別)。最後 2 行的存取成員只能用於特定的 <code>Teacher()</code> 建構子 (類別) 之上。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>備註：</strong> 如果你無法進行到現有進度，可比較自己與<a href=\"https://github.com/mdn/learning-area/blob/master/javascript/oojs/advanced/oojs-class-inheritance-finished.html\" class=\"external\" rel=\" noopener\">完整版本</a> (亦可看<a href=\"https://mdn.github.io/learning-area/javascript/oojs/advanced/oojs-class-inheritance-finished.html\" class=\"external\" rel=\" noopener\">實際執行</a>的情形) 的程式碼。</p>\n</div>\n<p>這裡所提的技巧，當然不是在 JavaScript 建立繼承類別的唯一方法，但足以堪用。並可讓你了解應如何於 JavaScript 實作繼承。</p>\n<p>你可能也想看看某些新的 <a href=\"/zh-TW/docs/Glossary/ECMAScript\">ECMAScript</a> 功能，可更簡潔的在 JavaScript 中繼承 (參閱 <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Classes\">Classes</a>)。但由於這些功能尚未廣泛支援其他瀏覽器，這裡先略過不提。本系列文章中提到的其他程式碼，均可回溯支援到 IE9 或更早版本。當然還是有辦法支援更舊的版本。</p>\n<p>一般方法就是使用 JavaScript 函式庫，且最常見的就是簡單集結可用的功能，更快、更輕鬆的完成繼承。例如 <a href=\"https://coffeescript.org/#classes\" class=\"external\" rel=\" noopener\">CoffeeScript</a> 即提供了 <code>class``、extends</code> 等等。</p>"}},{"type":"prose","value":{"id":"進階習題","title":"進階習題","isH3":false,"content":"<p>在<a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Classes_in_JavaScript#object-oriented_programming_from_10000_meters\">〈OOP 理論〉段落</a>中，我們也納入了 <code>Student</code> 類別並繼承了 <code>Person</code> 的所有功能，此外也提供不同的 <code>greeting()</code> 函式，且較 <code>Teacher</code> 的問候語沒那麼正式。在看了該段落中的學生問候語之後，可試著實作自己的 <code>Student()</code> 建構子，並繼承 <code>Person()</code>, 的所有功能，再實作不同的 <code>greeting()</code> 函式。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>備註：</strong> 如果你無法進行到現有進度，可參考<a href=\"https://github.com/mdn/learning-area/blob/master/javascript/oojs/advanced/oojs-class-inheritance-student.html\" class=\"external\" rel=\" noopener\">完成版本</a> (亦可看<a href=\"https://mdn.github.io/learning-area/javascript/oojs/advanced/oojs-class-inheritance-student.html\" class=\"external\" rel=\" noopener\">實際執行</a>的情形)。</p>\n</div>"}},{"type":"prose","value":{"id":"物件成員摘要","title":"物件成員摘要","isH3":false,"content":"<p>簡單來說，你基本上需要考量 3 種類型的屬性＼函式：</p>\n<ol>\n  <li>已於建構子函式中定義，會交給物件實體的屬性＼函式。這應該很容易處理。在你自己的程式碼中，就是透過 <code>this.x = x</code> 類別行並在建構子中定義的成員；在瀏覽器程式碼中，就是僅限物件實體可用的成員 (一般是透過 <code>new</code> 關鍵字並呼叫建構子所建立，例如 <code>var myInstance = new myConstructor()</code>)。</li>\n  <li>直接在建構子上定義，並僅能用於該建構子的屬性＼函式。這類屬性＼函式往往只能用於內建瀏覽器物件之上，並直接「鍊接」至建構子 (而非實例) 以利識別，例如 <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a>。</li>\n  <li>定義於建構子原型上的屬性＼函式，交由所有的實例繼承，亦繼承了物件類別。這類屬性＼函式包含建構子原型屬性之上定義的所有成員，例如 <code>myConstructor.prototype.x()</code>。</li>\n</ol>\n<p>如果你不確定到底屬於上述的哪一個，也別擔心。現在你還在學習階段，往後定會熟能生巧。</p>"}},{"type":"prose","value":{"id":"在_javascript_中使用繼承的時機？","title":"在 JavaScript 中使用繼承的時機？","isH3":false,"content":"<p>看到這裡，你心裡應該覺得很複雜。沒錯。「原型」與「繼承」可說是 JavaScript 最複雜的概念之二，但許多 JavaScript 的強大功能與彈性，均來自於其物件結構與繼承，也值得你了解運作方式。</p>\n<p>不論是使用 WebAPI 的多樣功能，或是你在字串、陣列等所呼叫的函式＼屬性 (定義於內建瀏覽器物件之上)，你都可以不斷繼承下去。</p>\n<p>在自己的程式碼裡，特別是剛接觸或小型專案時，你用繼承的頻率可能沒那麼高。若沒真正需要，只是「為使用而使用」繼承，老實說只是浪費時間。但隨著程式碼規模越來越大，你就會找到使用的時間。如果你發現自己開始建立類似功能的多個物件時，就可先建立通用的物件類型，來概括所有共用的功能，並在特定物件類型中繼承這些功能，既方便又有效率。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>備註：</strong> 基於 JavaScript 運作的方式 (如原型鍊等)，物件之間的功能共享一般稱為「委託 (Delegation)」，即特定物件將功能委託至通用物件類型。「委託」其實比繼承更精確一點。因為「所繼承的功能」並不會複製到「進行繼承的物件」之上，卻是保留在通用物件之中。</p>\n</div>\n<p>當使用繼承時，建議你不要設定太多層的繼承關係，並時時留意你所定義的函式與屬性。在開始寫程式碼時，你可能會暫時修改內建瀏覽器物件的原型，除非你真的需要，否則儘量別這麼做。太多繼承可能連你自己都搞混，而且一旦需要除錯就會痛苦萬分。</p>\n<p>最後，物件可說是另一種形式的程式碼再利用，如同函式或迴圈一般，且有其專屬的角色與優點。如果你正建立一堆相關變數與函式，並要全部一起追蹤、封裝，就可以透過物件。你也能以物件方式傳送整個資料集合。而且上述兩種情況均不需使用建構子或繼承就能夠達成。如果你只需要某一物件的單一實作，那麼單純使用物件就好，完全不需要繼承。</p>"}},{"type":"prose","value":{"id":"摘要","title":"摘要","isH3":false,"content":"<p>本文為大家溫習了 OOJS 核心理論和語法。現在你應該了解 JavaScript 物件與 OOP 的基本概念、原型及原型繼承、建立類別 (建構子) 與物件實例的方法、為類別新增功能、建立從其他類別繼承而來的子類別。</p>\n<p>下篇文章就要來看看該如何搭配 JavaScript Object Notation (JSON)，使用 JavaScript 物件的常見資料交換格式。</p>"}},{"type":"prose","value":{"id":"另可參閱","title":"另可參閱","isH3":false,"content":"<ul>\n  <li><a href=\"http://www.objectplayground.com/\" class=\"external\" rel=\" noopener\">ObjectPlayground.com</a> — 互動式學習網站，讓你了解物件。</li>\n  <li><a href=\"https://www.amazon.com/gp/product/193398869X/\" class=\"external\" rel=\" noopener\">Secrets of the JavaScript Ninja</a> 的第六章 — 進階 JavaScript 概念與技術的好書。第六章講述了原型與繼承的概念。此書有紙本與線上版。</li>\n  <li><a href=\"https://github.com/getify/You-Dont-Know-JS/blob/master/this%20&amp;%20object%20prototypes/README.md#you-dont-know-js-this--object-prototypes\" class=\"external\" rel=\" noopener\">You Don't Know JS: this &amp; Object Prototypes</a> — Kyle Simpson 絕佳 JavaScript 手冊系列的一部分。第五章特別深入講述了原型。我們透過本文為初學者提供簡易概念，但 Kyle 則說明得更深入、更精確。</li>\n</ul><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object_prototypes\"> 前頁 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Objects\"> Overview: Objects</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/Objects/JSON\"> 次頁  </a></li>\n</ul>"}}],"toc":[{"text":"原型繼承","id":"原型繼承"},{"text":"入門","id":"入門"},{"text":"定義 Teacher() 建構子函式","id":"定義_teacher_建構子函式"},{"text":"設定 Teacher() 的原型與建構子參考","id":"設定_teacher_的原型與建構子參考"},{"text":"給 Teacher() 新的 greeting() 函式","id":"給_teacher_新的_greeting_函式"},{"text":"簡易範例","id":"簡易範例"},{"text":"進階習題","id":"進階習題"},{"text":"物件成員摘要","id":"物件成員摘要"},{"text":"在 JavaScript 中使用繼承的時機？","id":"在_javascript_中使用繼承的時機？"},{"text":"摘要","id":"摘要"},{"text":"另可參閱","id":"另可參閱"}],"summary":"在解釋過大部分的 OOJS 細節之後，本文將說明該如何建立「子」物件類別 (建構子)，並從其「母」類別繼承功能。此外，也將建議開發者應於何時、於何處使用 OOJS。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Classes in JavaScript","locale":"en-US","native":"English (US)"},{"title":"Herencia en JavaScript","locale":"es","native":"Español"},{"title":"L'héritage au sein de JavaScript","locale":"fr","native":"Français"},{"title":"JavaScript での継承","locale":"ja","native":"日本語"},{"title":"Classes in JavaScript","locale":"ko","native":"한국어"},{"title":"Herança em JavaScript","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Наследование в JavaScript","locale":"ru","native":"Русский"},{"title":"JavaScript 中的类","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/learn/javascript/objects/classes_in_javascript","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/learn/javascript/objects/classes_in_javascript/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Learn","title":"學習該如何開發 Web"},{"uri":"/zh-TW/docs/Learn/JavaScript","title":"JavaScript — 動態的客戶端指令"},{"uri":"/zh-TW/docs/Learn/JavaScript/Objects","title":"JavaScript 物件介紹"},{"uri":"/zh-TW/docs/Learn/JavaScript/Objects/Classes_in_JavaScript","title":"JavaScript 中的「繼承」"}],"pageTitle":"JavaScript 中的「繼承」 - 學習該如何開發 Web | MDN","noIndexing":false}}