{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"處理文字 - JavaScript中的字串","mdn_url":"/zh-TW/docs/Learn/JavaScript/First_steps/Strings","locale":"zh-TW","native":"正體中文 (繁體)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web\"><strong>全新手請從這開始！</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Web 入門</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web\">Web 概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">安裝基本軟體</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">自己的網站會是什麼樣子？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">處理檔案</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript 基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">發佈自己的網站</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Web 運作的方式</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/HTML\"><strong>HTML — 架構 Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 介紹</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML\">HTML 概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">HTML 入門</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">標題裡是什麼？HTML 中的後設資料 (Metadata)</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML 文字基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">建立超連結</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">進階文字格式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">文件與網站架構</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">HTML 除錯</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">親和度：設個字母</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">親和度：架構出具備內容的網頁</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>多媒體與嵌入</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding\">多媒體與嵌入的概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">HTML 中的圖片</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">視訊與音訊內容</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">從物件到 iframe — 其他嵌入技巧</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">為 Web 新增向量圖</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">適應性圖片</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">親和度：Mozilla 形象頁面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML 表格</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables\">HTML 表格概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Basics\">HTML表格基礎</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/CSS\"><strong>CSS — 設計 Web 的風格</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>初探 CSS</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps\">初探 CSS（概述）</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/What_is_CSS\">CSS 是什麼？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/Getting_started\">CSS 入門</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/How_CSS_works\">CSS 怎麼運作</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 組件</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>樣式化文字</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text\">樣式化文字概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Fundamentals\">基礎的文字與字型樣式化</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Styling_lists\">樣式化列表</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Styling_links\">樣式化連結</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Web_fonts\">Web 字型</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">親合度：設定社區大學首頁的版面</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS 版面配置</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout\">CSS 版面配置概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Flexbox\">彈性區塊</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Grids\">格線</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Floats\">浮動</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Positioning\">定位</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/zh-TW/docs/Learn/JavaScript\"><strong>JavaScript — 動態的用戶端指令</strong></a></li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>JavaScript 第一步</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps\">JavaScript 第一步概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">什麼是 JavaScript？</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/A_first_splash\">初次接觸 JavaScript</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_went_wrong\">出了什麼問題？JavaScript 疑難排解</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Variables\">儲存你所需的資訊 — 變數</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Math\">JavaScript 基礎概念 — 數字與運算子</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Strings\">處理文字 — JavaScript 中的字串</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Useful_string_methods\">有用的字串函式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Arrays\">陣列</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Silly_story_generator\">親合度：傻瓜故事產生器</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 基礎要件</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks\">JavaScript 基礎要件概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/conditionals\">於程式碼中決策 — 條件</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Looping_code\">程式碼迴圈</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Functions\">函式 — 可重複使用的程式碼區塊</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">建立自己的函式</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Return_values\">函式回傳值</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Events\">事件介紹</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Building_blocks/Image_gallery\">親合度：圖庫</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript 物件介紹</summary>\n          <ol>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects\">JavaScript 物件概述</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Basics\">物件基礎概念</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object_prototypes\">物件原型</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/JSON\">使用 JSON 資料</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Object_building_practice\">物件建構實作</a></li>\n            <li><a href=\"/zh-TW/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">親合度：為彈跳球展示新增功能</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>非同步的 JavaScript</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>客戶端 web APIs</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs\">客戶端 web APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">文件操作</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Forms\"><strong>網頁表單-與使用者資料合作</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>核心的表單學習途徑</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Forms\">網頁表單概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/How_to_structure_a_web_form\">如何建構網頁表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>深入網頁表單</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Accessibility\"><strong>無障礙網頁 — 每個人都可以使用的網頁</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>無障礙網頁指南</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility\">無障礙網頁概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/What_is_accessibility\">何謂無障礙網頁？</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA 基礎</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Accessibility/Mobile\">行動裝置上的無障礙</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>無障礙網頁評估</summary>\n        <ol>\n            <li><a href=\"/zh-TW/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing\"><strong>工具與測試</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>介紹前端框架</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">前端框架簡介</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">開始學 Vue</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Svelte 入門</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Angular 新手入門</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">開始開發我們的 Angular 待辦事項應用程式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">使用樣式點綴我們的 Angular 應用程式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">建立一個 item 元件</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">篩選我們的待辦事項項目</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">建構 Angular 應用程式與更多資源</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub 概述</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>跨瀏覽器測試</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing\">跨瀏覽器測試概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">跨瀏覽器測試介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">測試執行策略</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">處理常見的 HTML 與 CSS 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">處理常見的 JavaScript 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">處理常見的親合度問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">建置功能偵測</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">自動化測試介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">設定自己的自動化測試環境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/zh-TW/docs/Learn/Server-side\"><strong>伺服端網站程式設計</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>第一步</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps\">第一步概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Introduction\">伺服端介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Client-Server_overview\">用戶端概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Web_frameworks\">伺服端網路框架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/First_steps/Website_security\">網站安全</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django 網站框架 (Python)</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django\">Django 網站框架 (Python) 概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Introduction\">介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/development_environment\">設定開發環境</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Tutorial_local_library_website\">線上教學：本地圖書館網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/skeleton_website\">線上教學 2：建立網站骨架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Models\">線上教學 3：使用模型</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Admin_site\">線上教學 4：Django 管理網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Home_page\">線上教學 5：建立我們的首頁</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Generic_views\">線上教學 6：泛型清單與細節檢視</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Sessions\">線上教學 7：會話 (Sessions) 框架</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Authentication\">線上教學 8：使用者授權與許可</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Forms\">線上教學 9：搭配表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Testing\">線上教學 10：測試 Django 的 Web App</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/Deployment\">線上教學 11：佈署 Django 至產品</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/web_application_security\">Web App 安全性</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Django/django_assessment_blog\">親合度：DIY 迷你部落格</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express 網站框架 (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs\">Express 網站框架 (Node.js/JavaScript) 概述</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node 介紹</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/development_environment\">設定 Node (Express) 的開發環境</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express 教學 1: 本地圖書館網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express 教學 2: 建立骨架網站</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express 教學 3: 使用資料庫 (Mongoose)</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/routes\">Express 教學 4: 路由與控制器</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express 教程 5: 呈現圖書館的資料</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/forms\">Express 教學 6: 使用表單</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Server-side/Express_Nodejs/deployment\">Express 教學 7: 佈署到正式環境</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>更多資源</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>常見問題</summary>\n        <ol>\n          <li><a href=\"/zh-TW/docs/Learn/HTML/Howto\">HTML 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/CSS/Howto\">CSS 問題</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Web_mechanics\">Web 的運作方式</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Tools_and_setup\">工具與設定</a></li>\n          <li><a href=\"/zh-TW/docs/Learn/Common_questions#Design_and_accessibility\">設計與親合度</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Math\"> 前頁 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/First_steps\"> Overview: First steps</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Useful_string_methods\"> 次頁  </a></li>\n</ul>\n<p>接下來我們將把注意力轉向字串——這就是程式設計中調用的文字片段。在本文中，我們將介紹在學習 JavaScript 時您應該了解所有有關字串的常見事項，例如建立字串，跳脫字串中的引號以及將字串連接在一起。</p>\n<table class=\"learn-box standard-table\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">先備知識：</th>\n      <td>基本的電腦素養、對 HTML 與 CSS 有基本的認識、對 JavaScript 有認識。</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">目標：</th>\n      <td>熟悉 JavaScript 字串的基礎。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"文字的力量","title":"文字的力量","isH3":false,"content":"<p>文字對人類而言非常重要——它關乎我們如何交流、溝通。Web 以文字為基底的媒介，它的設計讓人類可以進行交流並分享資訊，因此掌握文字如何在 Web 上呈現是很有用的。<a href=\"/zh-TW/docs/Glossary/HTML\">HTML</a> 提供文字的結構以及定義；<a href=\"/zh-TW/docs/Glossary/CSS\">CSS</a> 讓我們更精確地設定樣式；而 JavaScript 則包含許多操作字串的特性，例如：製作客製化的歡迎訊息、正確地顯示所需的文字標籤、排列所需的詞語順序等。</p>\n<p>到目前為止，所有我們課程上的編碼幾乎都包含一些字串的操作。</p>"}},{"type":"prose","value":{"id":"字串_—_基礎","title":"字串 — 基礎","isH3":false,"content":"<p>剛開始你會覺得字串與數字的處理方式很類似，但當你越深入就會了解到一些明顯的差異。讓我們從在 console 裡輸入一些基本的程式行來熟悉它吧！在下方，我們提供一個 Console （你也可以另開一個頁籤或視窗<a href=\"https://mdn.github.io/learning-area/javascript/introduction-to-js-1/variables/index.html\" class=\"external\" rel=\" noopener\">使用他</a> ，或者使用瀏覽器的<a href=\"/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">開發者工具 (en-US)</a>）。</p>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>JavaScript console<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n      <span class=\"token selector\">*</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token selector\">html</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #0C323D<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #809089<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> monospace<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 700px<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 1%<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 1%<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.5<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token selector\">.input p</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> 1%<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token selector\">.output p</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token selector\">.input input</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 96%<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.5<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> monospace<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #0C323D<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #809089<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> both<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> geval <span class=\"token operator\">=</span> eval<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> inputDiv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> inputPara <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> inputForm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      inputDiv<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      inputPara<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'&gt;'</span><span class=\"token punctuation\">;</span>\n      inputDiv<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>inputPara<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      inputDiv<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>inputForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>inputDiv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        inputForm<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      inputForm<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> executeCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">executeCode</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">geval</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token string\">'error — '</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">var</span> outputDiv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> outputPara <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      outputDiv<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'output'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      outputPara<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Result: '</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">;</span>\n      outputDiv<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>outputPara<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>outputDiv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>opacity <span class=\"token operator\">=</span> <span class=\"token string\">'0.5'</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token function\">createInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">createInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"字串 — 基礎 sample\" id=\"frame_字串_—_基礎\" width=\"100%\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-TW/docs/Learn/JavaScript/First_steps/Strings/_sample_.%E5%AD%97%E4%B8%B2_%E2%80%94_%E5%9F%BA%E7%A4%8E.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"建立字串","title":"建立字串","isH3":true,"content":"<ol>\n  <li>首先，先輸入下面幾行程式碼：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> string <span class=\"token operator\">=</span> <span class=\"token string\">'The revolution will not be televised.'</span><span class=\"token punctuation\">;</span>\nstring<span class=\"token punctuation\">;</span>\n</code></pre></div>就像我們對數字的操作，我們聲明一個變數，並用一個值（字串）來初始化它，而後傳回這個值。唯一的差異在於，你需要用引號包住你的值。\n  </li>\n  <li>如果你沒有使用引號包住值，或缺少單一邊的引號，都會導致錯誤產生。試著輸入下面幾行程式碼：\n    <div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">let</span> badString <span class=\"token operator\">=</span> This is a test<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> badString <span class=\"token operator\">=</span> 'This is a test<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> badString <span class=\"token operator\">=</span> This is a test'<span class=\"token punctuation\">;</span>\n</code></pre></div>上述的程式無法運作，因為未使用引號包圍的文字都將被視為變數名稱、屬性名稱和保留字等。如果瀏覽器無法辨識它，便會產生錯誤（例如：「missing ; before statement」）。如果瀏覽器可以識別字段從哪裡開始，但無法找到字段的終點，意即缺少第二個引號，則會產生「unterminated string literal」的錯誤。如果你的程式出現了這樣的錯誤，檢查並確認自己的字串是否遺漏了任何引號。\n  </li>\n  <li>如果你先定義了變數 <code>string</code> ，則以下程式碼可以正常運作。馬上來試試看：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> badString <span class=\"token operator\">=</span> string<span class=\"token punctuation\">;</span>\nbadString<span class=\"token punctuation\">;</span>\n</code></pre></div><code>badString</code> 會被設定跟 <code>string</code> 具有一樣的值。\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"單引號與雙引號","title":"單引號與雙引號","isH3":true,"content":"<ol>\n  <li>在 JavaScript 中，你可以選擇用單引號或雙引號來包住字串。兩種方式都可行：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> sgl <span class=\"token operator\">=</span> <span class=\"token string\">'Single quotes.'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> dbl <span class=\"token operator\">=</span> <span class=\"token string\">\"Double quotes\"</span><span class=\"token punctuation\">;</span>\nsgl<span class=\"token punctuation\">;</span>\ndbl<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>兩種之間的差異非常小，取決於你個人的習慣與喜好。你可以選擇一種，並且固定使用它。交互使用兩種方式，容易造成混亂。特別是當你使用兩種不同的引號包住一個字串！這會導致錯誤回傳：\n    <div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">let</span> badQuotes <span class=\"token operator\">=</span> 'What on earth<span class=\"token operator\">?</span>\"<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>瀏覽器會認為字串並沒有結束，沒有作為包住字串的引號，是可以出現在字串裡面的。看看下面的例子，兩種都是可行的：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> sglDbl <span class=\"token operator\">=</span> <span class=\"token string\">'Would you eat a \"fish supper\"?'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> dblSgl <span class=\"token operator\">=</span> <span class=\"token string\">\"I'm feeling blue.\"</span><span class=\"token punctuation\">;</span>\nsglDbl<span class=\"token punctuation\">;</span>\ndblSgl<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>但是，字串中不可以再使用那個作為包住字串的引號。以下的程式行會出錯，因為瀏覽器無法判斷字串的結尾：\n    <div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">let</span> bigmouth <span class=\"token operator\">=</span> <span class=\"token string\">'I'</span>ve got no right to take my place<span class=\"token operator\">...</span>'<span class=\"token punctuation\">;</span>\n</code></pre></div>This leads us very nicely into our next subject.\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"字串中的跳脫字元（escaping_characters）","title":"字串中的跳脫字元（Escaping characters）","isH3":true,"content":"<p>要修復先前出錯的那一行程式碼，我們需要解決引號的問題。跳脫字元（Escaping characters）的意思是我們需要確保它們被辨識為文字，而非程式碼本身。在 JavaScript 中，我們在字元的前面放一個反斜線解決這個問題。試試看這個：</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> bigmouth <span class=\"token operator\">=</span> <span class=\"token string\">'I\\'ve got no right to take my place...'</span><span class=\"token punctuation\">;</span>\nbigmouth<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>這是可行的！你可以用一樣的方法跳脫其他字元，例如 <code>\\\"</code>。除此之外，還有一些特殊方法。更詳細的部分，請參閱<a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/String#escape_notation\">跳脫符號</a> 。</p>"}},{"type":"prose","value":{"id":"連接字串（concatenating_strings）","title":"連接字串（Concatenating strings）","isH3":false,"content":"<ol>\n  <li>連接（Concatenate）是一個新潮的程式用語。在 JavaScript 中，使用加號（+）將字串連接；這也是我們做數字相加的方式。但在這個狀況下，它有不同的作用。讓我們在 console 中示範：</li>\n  <li>\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code> <span class=\"token keyword\">let</span> one <span class=\"token operator\">=</span> <span class=\"token string\">'Hello, '</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">let</span> two <span class=\"token operator\">=</span> <span class=\"token string\">'how are you?'</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">let</span> joined <span class=\"token operator\">=</span> one <span class=\"token operator\">+</span> two<span class=\"token punctuation\">;</span>\n joined<span class=\"token punctuation\">;</span>\n</code></pre></div>這邊的結果是 <code>joined</code> 這個變數中，有了 「Hello, how are you?」這個值。\n  </li>\n  <li>在上一個範例中，我們只連接了兩個字串。但只要你在兩個字串之間加上 <code>+</code> ，那你要連接幾個都可以。試試看這個：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> multiple <span class=\"token operator\">=</span> one <span class=\"token operator\">+</span> one <span class=\"token operator\">+</span> one <span class=\"token operator\">+</span> one <span class=\"token operator\">+</span> two<span class=\"token punctuation\">;</span>\nmultiple<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>你也可以結合變數和字串。試試看這個：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> response <span class=\"token operator\">=</span> one <span class=\"token operator\">+</span> <span class=\"token string\">'I am fine — '</span> <span class=\"token operator\">+</span> two<span class=\"token punctuation\">;</span>\nresponse<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n</ol>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>備註：</strong> 當你輸入一個字串在你的程式碼中，並用單引號或雙引號將它括起來，它稱為<strong>字串文字</strong>（<strong>string literal</strong>）。</p>\n</div>"}},{"type":"prose","value":{"id":"concatenation_in_context","title":"Concatenation in context","isH3":true,"content":"<p>讓我們看看實際運用連接字串的例子——以下是這堂課中稍早的範例：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">&gt;</span></span>Press me<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbutton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'What is your name?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello '</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">', nice to see you!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><iframe class=\"hide-codepen-jsfiddle\" title=\"Concatenation in context sample\" id=\"frame_concatenation_in_context\" width=\"100%\" height=\"60\" src=\"https://yari-demos.prod.mdn.mozit.cloud/zh-TW/docs/Learn/JavaScript/First_steps/Strings/_sample_.concatenation_in_context.html\" loading=\"lazy\"></iframe>\n<p>在程式第四行我們用了 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Window/prompt\"><code>window.prompt()</code> <small>(en-US)</small></a> 這個函式，可以要求使用者透過彈出的對話框去回答問題，並將使用者輸入的文字儲存在給訂的變數內（在這個例子中就是 <code>name</code>）。接著我們在第五行用了 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Window/alert\"><code>window.alert()</code> <small>(en-US)</small></a> 函式，顯示另一個彈出視窗，以連接的方式將兩段字串文字以及 <code>name</code> 這個變數結合成一個字串。</p>"}},{"type":"prose","value":{"id":"數字_vs._字串","title":"數字 vs. 字串","isH3":true,"content":"<ol>\n  <li>那麼我們將字串和數字連接會發生什麼事呢？讓我們在 console 中試試看：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'Front '</span> <span class=\"token operator\">+</span> <span class=\"token number\">242</span><span class=\"token punctuation\">;</span>\n</code></pre></div>或許你預期會跑出錯誤訊息，但看來依然正常運作。若將字串表示成數字似乎不太合理，但將數字表示成字串看來是可行的，所以瀏覽器便會巧妙地將數字轉換成字串，並將這兩個字串連接在一起。\n  </li>\n  <li>你也可以用兩個數字做這個例子 — 將這兩個數字包在引號中強制將它們轉換成字串。試試看（並使用 typeof 這個運算子去檢查變數是數字或字串）：\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myDate <span class=\"token operator\">=</span> <span class=\"token string\">'19'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'67'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> myDate<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>如果你想轉換數字變數成字串，但不要更動到原本的變數；或是想轉換字串變數成數字，也不要更動到原本的變數，你可以使用以下兩種方式：\n    <ul>\n      <li>物件 <a href=\"/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> 會將欲處理的變數轉換成數字（如果可行的話）。試試以下例子：\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myString <span class=\"token operator\">=</span> <span class=\"token string\">'123'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> myNum <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>myString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> myNum<span class=\"token punctuation\">;</span>\n</code></pre></div>\n      </li>\n      <li>另一方面，也有 <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">toString() (en-US)</a> 方法能夠讓數字轉換為相等的字串。試試看：\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> myString <span class=\"token operator\">=</span> myNum<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> myString<span class=\"token punctuation\">;</span>\n</code></pre></div>\n      </li>\n    </ul>這些結構在某些情況相當好用。舉例來說：如果使用者在文字表單中輸入了一個數字，這個數字將會是字串格式。而若想要把這個數字加上另一個數字，那你會希望它是數字格式（才能做數字相加），所以可以使用 <code>Number()</code> 來處理這個情況。可以看看實際案例：<a href=\"https://github.com/mdn/learning-area/blob/master/javascript/introduction-to-js-1/first-splash/number-guessing-game.html#L61\" class=\"external\" rel=\" noopener\">猜數字遊戲, 第 61 行</a>。\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"模版字符串template_literals","title":"模版字符串(Template literals)","isH3":false,"content":"<p>另一種你會遇上的字串語法是<strong>模版字符串(template literals)</strong> (也稱做模版字串 template strings)。這是一種更新的語法提供更彈性、簡單的方式去理解字串。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>備註：</strong> 嘗試在你的瀏覽器上測試下面的範例，來看看會得到什麼結果。</p>\n</div>\n<p>將標準字串轉變為模版字符串，你需要將引號 (<code>' '</code>, or <code>\" \"</code>) 換為重音符 (backtick characters (<code>` `</code>) )，接著來看一個簡單的例子:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> song <span class=\"token operator\">=</span> <span class=\"token string\">'Fight the Youth'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>轉換成模版字符串會像這樣子:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>song <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Fight the Youth</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>如果我們想要連接字串，或是將算式的結果包含在裡面，用傳統的字串去寫會很瑣碎且麻煩:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> score <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> highestScore <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> output <span class=\"token operator\">=</span> <span class=\"token string\">'I like the song \"'</span> <span class=\"token operator\">+</span> song <span class=\"token operator\">+</span> <span class=\"token string\">'\". I gave it a score of '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>score<span class=\"token operator\">/</span>highestScore <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'%.'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>模版字符串能大量簡化這串程式碼:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>output <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">I like the song \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> song <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\". I gave it a score of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> score<span class=\"token operator\">/</span>highestScore <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">%.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  全部一串都只需要包含在一對重音符號裡，不再需要切開、合起一堆字串碎片。\n  當你想要包含變數或者算式在字串裡時，你只需要將它放在 <em>佔位符</em> <code>${ }</code> 裡。\n</p>\n<p>你能將複雜的算式包含在模版字符串裡，舉個例子:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> examScore <span class=\"token operator\">=</span> <span class=\"token number\">45</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> examHighestScore <span class=\"token operator\">=</span> <span class=\"token number\">70</span><span class=\"token punctuation\">;</span>\nexamReport <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You scored </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> examScore <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> examHighestScore <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>examScore<span class=\"token operator\">/</span>examHighestScore<span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">%). </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> examScore <span class=\"token operator\">&gt;=</span> <span class=\"token number\">49</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Well done, you passed!'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Bad luck, you didn\\'t pass this time.'</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<ul>\n  <li>前兩個佔位符非常好理解，字串裡只包含了單一值。</li>\n  <li>第三個計算了一個百分比的結果且四捨五入進整數。</li>\n  <li>第四個使用了三元運算符來檢查分數是否高於指定分數且印出一個通過或著失敗的訊息結果。</li>\n</ul>\n<p>另一個可以注意的點是，如果你想要將傳統字串拆分成多行，你需要加上一個斷行字母, <code>\\n</code></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>output <span class=\"token operator\">=</span> <span class=\"token string\">'I like the song \"'</span> <span class=\"token operator\">+</span> song <span class=\"token operator\">+</span> <span class=\"token string\">'\".\\nI gave it a score of '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>score<span class=\"token operator\">/</span>highestScore <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'%.'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  模版字符串保留了程式碼中的斷行方式，所以不再需要使用斷行字母。\n  這樣也能達到相同的結果:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>output <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">I like the song \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> song <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\".\nI gave it a score of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> score<span class=\"token operator\">/</span>highestScore <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">%.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  我們建議你盡可能習慣使用模版字符串。現今流行的瀏覽器都能完好的支援它，只有一個地方你能發現它並不支援外: Internet Explorer。\n  我們有許多的例子仍然使用目前標準的字串語法，但我們未來將會加入更多模版字符串的應用。\n</p>\n<p>來我們的<a href=\"/zh-TW/docs/Web/JavaScript/Reference/Template_literals\">Template literals</a> 相關頁面看看更多的範例與進階的特色細節。</p>"}},{"type":"prose","value":{"id":"測試您的技能！","title":"測試您的技能！","isH3":false,"content":"<p>\n  你已到達文章的結尾了，但你能記得最重要的資訊嗎?\n  在繼續學習之前，你可以找些難一點的測驗，來檢測你有記得這些知識 — <a href=\"/en-US/docs/Learn/JavaScript/First_steps/Test_your_skills:_Strings\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Test your skills: Strings (en-US)</a>. 記住，接下來的文章也需要這些知識，所以你可能想先看看。\n</p>"}},{"type":"prose","value":{"id":"結語","title":"結語","isH3":false,"content":"<p>以上是 JavaScript 中基礎的字串觀念。下個文章中，我們會依循這些概念並試試一些適用於字串的內建方法，進而運用這些方法讓字串能照我們想要的方式呈現。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Math\"> 前頁 </a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/First_steps\"> Overview: First steps</a></li>\n    <li><a class=\"button minimal\" href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Useful_string_methods\"> 次頁  </a></li>\n</ul>"}},{"type":"prose","value":{"id":"在這個學習模組中","title":"在這個學習模組中","isH3":false,"content":"<ul>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">什麼是 JavaScript?</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/A_first_splash\">和 JavaScript 的第一次接觸</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/What_went_wrong\">什麼出錯了？JavaScript 的疑難排解（除錯）</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Variables\">儲存你需要的資訊 — 變數</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Math\">JavaScript 的基本運算— 數字 與 運算子</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Strings\" aria-current=\"page\">處理文字 - JavaScript 的字串</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Useful_string_methods\">有用的字串方法</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Arrays\">陣列</a></li>\n  <li><a href=\"/zh-TW/docs/Learn/JavaScript/First_steps/Silly_story_generator\">附錄：笑話產生器</a></li>\n</ul>"}}],"toc":[{"text":"文字的力量","id":"文字的力量"},{"text":"字串 — 基礎","id":"字串_—_基礎"},{"text":"連接字串（Concatenating strings）","id":"連接字串（concatenating_strings）"},{"text":"模版字符串(Template literals)","id":"模版字符串template_literals"},{"text":"測試您的技能！","id":"測試您的技能！"},{"text":"結語","id":"結語"},{"text":"在這個學習模組中","id":"在這個學習模組中"}],"summary":"接下來我們將把注意力轉向字串——這就是程式設計中調用的文字片段。在本文中，我們將介紹在學習 JavaScript 時您應該了解所有有關字串的常見事項，例如建立字串，跳脫字串中的引號以及將字串連接在一起。","popularity":0.0013,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Handling text — strings in JavaScript","locale":"en-US","native":"English (US)"},{"title":"Manejar texto — cadenas en JavaScript","locale":"es","native":"Español"},{"title":"Gérer du texte — les chaînes de caractères en JavaScript","locale":"fr","native":"Français"},{"title":"テキストを扱う — JavaScript での文字列","locale":"ja","native":"日本語"},{"title":"문자열 다루기 — 문자열","locale":"ko","native":"한국어"},{"title":"Trabalhando com texto — strings em JavaScript","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Работа с текстом — строки в JavaScript","locale":"ru","native":"Русский"},{"title":"文本处理 — JavaScript 中的字符串","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"zh-tw/learn/javascript/first_steps/strings","github_url":"https://github.com/mdn/translated-content/blob/main/files/zh-tw/learn/javascript/first_steps/strings/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/zh-TW/docs/Learn","title":"學習該如何開發 Web"},{"uri":"/zh-TW/docs/Learn/JavaScript","title":"JavaScript — 動態的客戶端指令"},{"uri":"/zh-TW/docs/Learn/JavaScript/First_steps","title":"JavaScript 初探"},{"uri":"/zh-TW/docs/Learn/JavaScript/First_steps/Strings","title":"處理文字 - JavaScript中的字串"}],"pageTitle":"處理文字 - JavaScript中的字串 - 學習該如何開發 Web | MDN","noIndexing":false}}