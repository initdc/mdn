{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Call stack","mdn_url":"/ru/docs/Glossary/Call_stack","locale":"ru","native":"Русский","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Стек вызовов</strong> (<strong>call stack</strong>) - это механизм для интерпретаторов (таких как интерпретатор JavaScript в веб-браузере) для отслеживания текущего местонахождения интерпретатора в скрипте, который вызывает несколько <a href=\"/ru/docs/Glossary/Function\">функций</a>, — какая из функций выполняется на данный момент, какие функции вызываются изнутри этой (выполняемой) функции, какая будет вызвана следующей и т. д.</p>\n\n<ul>\n <li>Когда скрипт вызывает функцию, интерпретатор добавляет её в стек вызовов и потом начинает её обработку.</li>\n <li>Любые функции, вызванные этой функцией, добавляются в  стек вызовов и выполняются, как только происходит их вызов. </li>\n <li>Когда выполнение основной функции завершено, интерпретатор снимает её со стека вызовов и возобновляет выполнение кода в списке основного кода с той точки, где остановился до этого.</li>\n <li>Если стек занимает больше места, чем ему было присвоено, это приводит к ошибке переполнения стека (\"stack overflow\" error).</li>\n</ul>"}},{"type":"prose","value":{"id":"пример","title":"Пример","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// [1] Some code here</span>\n   <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">// [2] Some code here</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Invoke the `greeting` function</span>\n<span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [3] Some code here</span></code></pre></div>\n\n<p>Код выше будет выполнен следующим образом:</p>\n\n<ol>\n <li>Игнорирование всех функций, пока не будет достигнуто место вызова функции <code>greeting()</code>.</li>\n <li>Вызывается функция <code>greeting().</code></li>\n <li><p>Функция \"greeting\" помещается в очередь стека вызовов.</p>\n\n<div class=\"note notecard\" id=\"sect1\">\n<p>Очередь стека вызовов:<br>\n - greeting</p>\n</div>\n</li> \n <li>Выполняется код внутри функции `greeting`.</li>\n <li>Вызывается функция <code>sayHi()</code>.</li>\n <li><p>Функция <code>sayHi()</code> помещается в очередь стека вызовов.</p>\n<div class=\"note notecard\" id=\"sect2\">\n<p>Очередь стека вызовов:<br>\n - greeting<br>\n - sayHi</p>\n</div>\n</li>\n <li>Выполняется весь код внутри функции <code>sayHi()</code> до самого конца.</li>\n <li>Возврат выполнения кода  с места вызова функции <code>sayHi()</code> и продолжение выполнения оставшегося кода функции <code>greeting()</code>.</li>\n <li>Выполненная функция <code>sayHi()</code> удаляется из очереди стека вызовов.<br>\n\n  <div class=\"note notecard\" id=\"sect3\">\n  <p>Очередь стека вызовов:<br>\n   - greeting</p>\n  </div>\n </li>\n <li>Когда весь код внутри функции <code>greeting()</code> выполнен, происходит возврат выполнения оставшейся части основного скрипта JS с места вызова функции <code>greeting()</code>.</li>\n <li>Выполненная функция <code>greeting()</code> удаляется из очереди стека вызовов.<br>\n\n  <div class=\"note notecard\" id=\"sect4\">\n  <p>Очередь стека вызовов:<br>\n   ПУСТО</p>\n  </div>\n </li>\n</ol>\n\n<p>Выполнение кода началось с пустого стека вызовов, и всякий раз, когда мы вызывали функцию, она автоматически добавлялась в очередь стека вызовов, после выполнения всего своего кода она автоматически удалялась из очереди стека вызовов. И в конце выполнение кода также завершилось с пустым стеком вызовов.</p>"}},{"type":"prose","value":{"id":"узнать_больше","title":"Узнать больше","isH3":false,"content":""}},{"type":"prose","value":{"id":"общие_знания","title":"Общие знания","isH3":true,"content":"<ul>\n <li><a title=\"Стек вызовов\" href=\"https://ru.wikipedia.org/wiki/Стек_вызовов\" class=\"external\" rel=\" noopener\">Стек вызовов</a> на Википедии</li>\n</ul>"}}],"toc":[{"text":"Пример","id":"пример"},{"text":"Узнать больше","id":"узнать_больше"}],"summary":"Стек вызовов (call stack) - это механизм для интерпретаторов (таких как интерпретатор JavaScript в веб-браузере) для отслеживания текущего местонахождения интерпретатора в скрипте, который вызывает несколько функций, — какая из функций выполняется на данный момент, какие функции вызываются изнутри этой (выполняемой) функции, какая будет вызвана следующей и т. д.","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Call stack","locale":"en-US","native":"English (US)"},{"title":"Pila de llamadas","locale":"es","native":"Español"},{"title":"Pile d'exécution","locale":"fr","native":"Français"},{"title":"Call stack (コールスタック)","locale":"ja","native":"日本語"},{"title":"호출 스택","locale":"ko","native":"한국어"},{"title":"Call stack (Pilha de chamadas)","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Call stack（调用栈）","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/glossary/call_stack","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/glossary/call_stack/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Glossary","title":"Глоссарий"},{"uri":"/ru/docs/Glossary/Call_stack","title":"Call stack"}],"pageTitle":"Call stack - Глоссарий | MDN","noIndexing":false}}