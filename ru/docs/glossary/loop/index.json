{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Loop","mdn_url":"/ru/docs/Glossary/loop","locale":"ru","native":"Русский","sidebarHTML":"\n<ol>\n <li>Общие сведения\n  <ol>\n   <li><a title=\"Control flow\" href=\"https://ru.wikipedia.org/wiki/Control_flow#Loops\">Control flow</a> на Википедии</li>\n  </ol>\n </li>\n <li><a href=\"/ru/docs/Glossary\">MDN Web Docs Glossary</a>\n  <ol>\n   <li><a href=\"/ru/docs/Glossary/loop\">Loop</a></li>\n  </ol>\n </li>\n</ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Цикл - это последовательность инструкций, которая постоянно повторяется до тех пор, пока в <a href=\"/ru/docs/Glossary/Computer_Programming\">программе</a> не будет выполнено определённое условие. Примером может служить процесс получения элемента данных, его последующего изменения, а затем проверки некоторых <a href=\"/ru/docs/Glossary/Conditional\">условий</a>, например, что счётчик достиг заданного числа.</p>"}},{"type":"prose","value":{"id":"примеры","title":"Примеры","isH3":false,"content":""}},{"type":"prose","value":{"id":"цикл_for","title":"Цикл for","isH3":true,"content":"<h4 id=\"синтаксис\">Синтаксис:</h4>\n\n<pre class=\"notranslate\">for (statement 1; statement 2; statement 3){\n execute code block\n}</pre>\n\n<ul>\n <li>Statement 1 выполняется один раз до запуска блока кода.</li>\n <li>Statement 2 определяет условие, необходимое для выполнения блока кода.</li>\n <li>Statement 3 выполняется каждый раз, когда выполняется блок кода.</li>\n</ul>\n\n<h4 id=\"пример\">Пример:</h4>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//Этот цикл будет печатать числа 0-9 и остановится, когда условие будет выполнено (i = 10)</span>\n</code></pre></div>\n\n<p>Для приведённого выше примера синтаксис выглядит следующим образом:</p>\n\n<ul>\n <li>Statement 1 устанавливает переменную для цикла (var i = 0).</li>\n <li>Statement 2 устанавливает условие цикла (i &lt; 10).</li>\n <li>Statement 3 увеличивает значение i (i ++) при каждом запуске блока кода.</li>\n</ul>"}},{"type":"prose","value":{"id":"цикл_while","title":"Цикл while","isH3":true,"content":"<h4 id=\"синтаксис_2\">Синтаксис:</h4>\n\n<pre class=\"notranslate\">while (condition){\n execute code block\n}\n</pre>\n\n<ul>\n <li>Блок кода будет продолжать цикл до тех пор, пока условие выполняется (true).</li>\n</ul>\n\n<h4 id=\"пример_2\">Пример:</h4>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    i<span class=\"token operator\">++</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//Этот цикл выведет числа 0-4 и остановится, когда условие станет ложным (i &gt;=5)</span>\n</code></pre></div>\n\n<p>Для приведённого выше примера синтаксис выглядит следующим образом:</p>\n\n<ul>\n <li>Блок кода будет продолжать работать, пока переменная (i) меньше 5.</li>\n</ul>"}}],"toc":[{"text":"Примеры","id":"примеры"}],"summary":"Цикл - это последовательность инструкций, которая постоянно повторяется до тех пор, пока в программе не будет выполнено определённое условие. Примером может служить процесс получения элемента данных, его последующего изменения, а затем проверки некоторых условий, например, что счётчик достиг заданного числа.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Loop","locale":"en-US","native":"English (US)"},{"title":"boucle","locale":"fr","native":"Français"},{"title":"Loop (ループ)","locale":"ja","native":"日本語"}],"source":{"folder":"ru/glossary/loop","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/glossary/loop/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Glossary","title":"Глоссарий"},{"uri":"/ru/docs/Glossary/loop","title":"Loop"}],"pageTitle":"Loop - Глоссарий | MDN","noIndexing":false}}