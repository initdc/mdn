{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Абстракция","mdn_url":"/ru/docs/Glossary/Abstraction","locale":"ru","native":"Русский","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Абстракция в <a href=\"/ru/docs/Glossary/Computer_Programming\">программировании</a> — это способ снизить сложность и повысить эффективность проектирования и реализации программного обеспечения за счёт сокрытия технической сложности за более простым <a href=\"/ru/docs/Glossary/API\">API</a>.</p>"}},{"type":"prose","value":{"id":"преимущества_абстракции","title":"Преимущества абстракции","isH3":false,"content":"<ul>\n <li>Помогает избежать написания низкоуровневого кода.</li>\n <li>Упрощает повторное использование кода и позволяет избежать дублирования.</li>\n <li>Даёт возможность изменять внутреннюю реализацию программы, не затрагивая пользователей.</li>\n <li>Помогает повысить безопасность приложения или программы, поскольку пользователям доступны только нужные детали.</li>\n</ul>"}},{"type":"prose","value":{"id":"пример","title":"Пример","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">ImplementAbstraction</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// метод присваивает значения внутренним свойствам</span>\n    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  \n    <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a = '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b = '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ImplementAbstraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj<span class=\"token punctuation\">.</span><span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// a = 10</span>\n  <span class=\"token comment\">// b = 20</span></code></pre></div>"}},{"type":"prose","value":{"id":"дополнительные_ресурсы","title":"Дополнительные ресурсы","isH3":false,"content":""}},{"type":"prose","value":{"id":"общие_сведения","title":"Общие сведения","isH3":true,"content":"<ul>\n  <li><a title=\"Абстракция\" href=\"https://ru.wikipedia.org/wiki/Абстракция_(информатика)\" class=\"external\" rel=\" noopener\">Абстракция</a> на Википедии</li>\n</ul>"}}],"toc":[{"text":"Преимущества абстракции","id":"преимущества_абстракции"},{"text":"Пример","id":"пример"},{"text":"Дополнительные ресурсы","id":"дополнительные_ресурсы"}],"summary":"Абстракция в программировании — это способ снизить сложность и повысить эффективность проектирования и реализации программного обеспечения за счёт сокрытия технической сложности за более простым API.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Abstraction","locale":"en-US","native":"English (US)"},{"title":"Abstracción","locale":"es","native":"Español"},{"title":"Abstraction","locale":"fr","native":"Français"},{"title":"Abstraction (抽象化)","locale":"ja","native":"日本語"},{"title":"추상화","locale":"ko","native":"한국어"},{"title":"Abstração","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"抽象编程（Abstraction）","locale":"zh-CN","native":"中文 (简体)"},{"title":"抽象化","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/glossary/abstraction","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/glossary/abstraction/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Glossary","title":"Глоссарий"},{"uri":"/ru/docs/Glossary/Abstraction","title":"Абстракция"}],"pageTitle":"Абстракция - Глоссарий | MDN","noIndexing":false}}