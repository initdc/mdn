{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Создание кирпичей","mdn_url":"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Build_the_brick_field","locale":"ru","native":"Русский","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/ru/docs/Games/Anatomy\">Anatomy</a></li>\n              <li><a href=\"/ru/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/ru/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/ru/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/ru/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/ru/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/ru/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/ru/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/ru/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/ru/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/ru/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/ru/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/ru/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/ru/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/ru/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/ru/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Techniques/Async_scripts\">Using async scripts for asm.js</a></li>\n              <li><a href=\"/ru/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizing startup performance</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/WebRTC_data_channels\">Using WebRTC peer-to-peer data channels</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Efficient_animation_for_web_games\">Efficient animation for web games</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/ru/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/ru/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/ru/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/ru/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"></div>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Game_over\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Collision_detection\">Следующая статья  »</a></li>\n</ul><p></p>\n\n<div class=\"summary\" id=\"sect3\">\n<p>Это <strong>9 </strong>из 16 уроков <a href=\"/ru/docs/Games/Tutorials/%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5_2D_Breakout_%D0%B8%D0%B3%D1%80%D1%8B_%D0%BD%D0%B0_Phaser\">руководства разработки игры с помощью Phaser</a>. Исходный код этого урока вы можете найти здесь:  <a href=\"https://github.com/end3r/Gamedev-Phaser-Content-Kit/blob/gh-pages/demos/lesson09.html\" class=\"external\" rel=\" noopener\">Gamedev-Phaser-Content-Kit/demos/lesson09.html</a>.</p>\n</div>\n\n<p><span class=\"seoSummary\">Создать поле кирпичей немного сложнее, чем просто добавить объект на экран, но всё же, благодаря Phaser, нам будет полегче, по сравнению с чистым JavaScript. Давайте разберёмся, как создать набор кирпичей и нарисовать их всех, используя цикл.</span></p>"}},{"type":"prose","value":{"id":"определяем_переменные","title":"Определяем переменные","isH3":false,"content":"<p>Сначала, давайте определим необходимые переменные — добавьте следующий код ниже всех наших текущих определений переменных:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> bricks<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> newBrick<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickInfo<span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Переменная <code>bricks</code> будет использоваться в качестве набора кирпичей, <code>newBrick</code> будет тем самым кирпичом, который мы будем создавать в каждой итерации цикла и добавлять в набор, а в <code>brickInfo</code> будет хранить всю необходимую информацию о кирпичах, как таковых.</p>"}},{"type":"prose","value":{"id":"добавляем_графику_для_кирпича","title":"Добавляем графику для кирпича","isH3":false,"content":"<p>Далее, давайте загрузим изображение кирпича <code>brick</code>, при помощи ещё одного вызова функции <code>load.image()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">preload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    game<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'brick'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'img/brick.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Не забудьте скачать <a href=\"https://github.com/end3r/Gamedev-Phaser-Content-Kit/blob/gh-pages/demos/img/brick.png\" rel=\"noopener\" class=\"external\">изображение кирпича с Github</a> в папку <code>/img</code>.</p>"}},{"type":"prose","value":{"id":"рисуем_кирпичи","title":"Рисуем кирпичи","isH3":false,"content":"<p>Для удобства, давайте вынесем код отрисовки кирпичей в отдельную функцию <code>initBricks</code> и вызовем её в конце функции <code>create()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token function\">initBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Теперь перейдём непосредственно к самой функции. Добавим функцию <code>initBricks()</code> в самый конец нашего кода, прямо перед <code>&lt;/script&gt;</code>, а в теле этой функции опишем объект <code>brickInfo</code>, который нам скоро понадобится:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">initBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    brickInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">row</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">col</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> <span class=\"token number\">60</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Объект <code>brickInfo</code> содержит всю необходимую нам информацию о кирпичах: ширина и высота кирпичика, количество рядов и столбцов кирпичей, которые мы хотим отрисовать на игровом поле, отступы от левого и верхнего края экрана (место на &lt;canvas&gt;, откуда мы начнём располагать кирпичи) и зазоры между самими кирпичами.</p>\n\n<p>А теперь, собственно, к кирпичам — инициализируйте пустой набор для хранения кирпичей, путём добавления следующей строчки кода в функцию <code>initBricks()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>bricks <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Далее переберём в цикле ряды и столбцы — добавьте следующий код со вложенным циклом после предыдущей строки:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickInfo<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">.</span>col<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickInfo<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// create new brick and add it to the group</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Теперь необходимо в каждой итерации создавать кирпич, чтобы получить необходимое число кирпичей, нарисовать их всех на экране и добавить в наш набор <code>bricks</code>. Для этого добавим во вложенный цикл немного кода, как показано ниже:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickInfo<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">.</span>col<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickInfo<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> brickX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> brickY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        newBrick <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">sprite</span><span class=\"token punctuation\">(</span>brickX<span class=\"token punctuation\">,</span> brickY<span class=\"token punctuation\">,</span> <span class=\"token string\">'brick'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span>newBrick<span class=\"token punctuation\">,</span> Phaser<span class=\"token punctuation\">.</span>Physics<span class=\"token punctuation\">.</span><span class=\"token constant\">ARCADE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        newBrick<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>immovable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        newBrick<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bricks<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newBrick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Вот мы и создали новый кирпич в каждой итерации и отрисовали его на экране. Как мы помним из <a href=\"/Games/Tutorials/%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5_2D_Breakout_%D0%B8%D0%B3%D1%80%D1%8B_%D0%BD%D0%B0_Phaser/Physics\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">урока 5</a>, мы используем движок Arcade Physics. К каждому новому кирпичу применяем физику из этого движка и делаем его неподвижным, чтобы мячик его не сбивал, а, также, устанавливаем якорь кирпича в его середину. После этого, добавляем кирпич в набор <code>bricks</code>.</p>\n\n<p>Но у нас осталась проблема — все кирпичи мы рисуем в одном и том же месте, в координатах (0,0). Чтобы это исправить, давайте добавим вычисление координат <code>brickX</code> и <code>brickY</code> в каждой итерации. Обновите строки инициализации этих переменных, как показано ниже:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> brickX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickInfo<span class=\"token punctuation\">.</span>width<span class=\"token operator\">+</span>brickInfo<span class=\"token punctuation\">.</span>padding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickInfo<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickInfo<span class=\"token punctuation\">.</span>height<span class=\"token operator\">+</span>brickInfo<span class=\"token punctuation\">.</span>padding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickInfo<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Координата <code>x</code> каждого кирпича рассчитывается на основе суммы ширины кирпича <code>brickInfo.width</code> и зазора <code>brickInfo.padding</code>, умноженной на номер столбца <code>с</code>, после этого добавляем отступ от левого края <code>brickInfo.offset.left</code>; Расчёт <code>y</code> аналогичен, только используются номер ряда <font face=\"consolas, Liberation Mono, courier, monospace\"><span style=\"background-color: rgba(220, 220, 220, 0.5);\">r</span></font>, высота кирпича <code>brickInfo.height</code> и отступ от верхнего края <code>brickInfo.offset.top</code>. Вот теперь каждый кирпич на своём месте, с учётом всех отступов и зазоров.</p>"}},{"type":"prose","value":{"id":"проверяем_код_функции_initbricks()","title":"Проверяем код функции initBricks()","isH3":false,"content":"<p>Вот итоговый код функции <code>initBricks()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">initBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    brickInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">row</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">col</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">offset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">left</span><span class=\"token operator\">:</span> <span class=\"token number\">60</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n    <span class=\"token punctuation\">}</span>\n    bricks <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickInfo<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">.</span>col<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickInfo<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> brickX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickInfo<span class=\"token punctuation\">.</span>width<span class=\"token operator\">+</span>brickInfo<span class=\"token punctuation\">.</span>padding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickInfo<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> brickY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickInfo<span class=\"token punctuation\">.</span>height<span class=\"token operator\">+</span>brickInfo<span class=\"token punctuation\">.</span>padding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickInfo<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">;</span>\n            newBrick <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">sprite</span><span class=\"token punctuation\">(</span>brickX<span class=\"token punctuation\">,</span> brickY<span class=\"token punctuation\">,</span> <span class=\"token string\">'brick'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span>newBrick<span class=\"token punctuation\">,</span> Phaser<span class=\"token punctuation\">.</span>Physics<span class=\"token punctuation\">.</span><span class=\"token constant\">ARCADE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            newBrick<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>immovable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            newBrick<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            bricks<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newBrick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Если вы перезапустите страницу <code>index.html</code>, то увидеть кирпичи, нарисованные на расстоянии друг от друга.</p>"}},{"type":"prose","value":{"id":"сравните_свой_код","title":"Сравните свой код","isH3":false,"content":"<p>Вы можете проверить код из этого урока и поиграть с ним, чтобы лучше понять, как он работает:</p>\n\n<p></p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"400\" src=\"https://jsfiddle.net/end3r/cck2b9e8/embedded/\" loading=\"lazy\"></iframe></p><p></p>"}},{"type":"prose","value":{"id":"следующий_шаг","title":"Следующий шаг","isH3":false,"content":"<p>Кажется, что-то не так. Ах да! Мячик же проходит сквозь кирпичи. Добавим <a href=\"/ru/docs/Games/Tutorials/%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5_2D_Breakout_%D0%B8%D0%B3%D1%80%D1%8B_%D0%BD%D0%B0_Phaser/%D0%9E%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0_%D0%BA%D0%BE%D0%BB%D0%BB%D0%B8%D0%B7%D0%B8%D0%B9\">обработку коллизий</a>.</p>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Game_over\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Collision_detection\">Следующая статья  »</a></li>\n</ul><p></p>"}}],"toc":[{"text":"Определяем переменные","id":"определяем_переменные"},{"text":"Добавляем графику для кирпича","id":"добавляем_графику_для_кирпича"},{"text":"Рисуем кирпичи","id":"рисуем_кирпичи"},{"text":"Проверяем код функции initBricks()","id":"проверяем_код_функции_initbricks()"},{"text":"Сравните свой код","id":"сравните_свой_код"},{"text":"Следующий шаг","id":"следующий_шаг"}],"summary":"\nЭто 9 из 16 уроков руководства разработки игры с помощью Phaser. Исходный код этого урока вы можете найти здесь:  Gamedev-Phaser-Content-Kit/demos/lesson09.html.\nСоздать поле кирпичей немного сложнее, чем просто добавить объект на экран, но всё же, благодаря Phaser, нам будет полегче, по сравнению с чистым JavaScript. Давайте разберёмся, как создать набор кирпичей и нарисовать их всех, используя цикл.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Build the brick field","locale":"en-US","native":"English (US)"},{"title":"Build the brick field","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/games/tutorials/2d_breakout_game_phaser/build_the_brick_field","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/games/tutorials/2d_breakout_game_phaser/build_the_brick_field/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Games","title":"Разработка игр"},{"uri":"/ru/docs/Games/Tutorials","title":"Уроки"},{"uri":"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser","title":"2D игра на Phaser"},{"uri":"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Build_the_brick_field","title":"Создание кирпичей"}],"pageTitle":"Создание кирпичей - Разработка игр | MDN","noIndexing":false}}