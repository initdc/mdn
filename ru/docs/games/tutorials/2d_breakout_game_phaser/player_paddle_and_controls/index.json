{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Платформа и управление","mdn_url":"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Player_paddle_and_controls","locale":"ru","native":"Русский","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/ru/docs/Games/Anatomy\">Anatomy</a></li>\n              <li><a href=\"/ru/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/ru/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/ru/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/ru/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/ru/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/ru/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/ru/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/ru/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/ru/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/ru/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/ru/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/ru/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/ru/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/ru/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/ru/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Techniques/Async_scripts\">Using async scripts for asm.js</a></li>\n              <li><a href=\"/ru/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizing startup performance</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/WebRTC_data_channels\">Using WebRTC peer-to-peer data channels</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Efficient_animation_for_web_games\">Efficient animation for web games</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/ru/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/ru/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/ru/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/ru/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/ru/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"></div>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Bounce_off_the_walls\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Game_over\">Следующая статья  »</a></li>\n</ul><p></p>\n\n<div class=\"summary\" id=\"sect3\">\n<p>Это <strong>7 </strong>из 16 уроков <a href=\"/ru/docs/Games/Tutorials/%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5_2D_Breakout_%D0%B8%D0%B3%D1%80%D1%8B_%D0%BD%D0%B0_Phaser\">руководства разработки игры с помощью Phaser</a>. Исходный код этого урока вы можете найти здесь: <a href=\"https://github.com/end3r/Gamedev-Phaser-Content-Kit/blob/gh-pages/demos/lesson07.html\" class=\"external\" rel=\" noopener\">Gamedev-Phaser-Content-Kit/demos/lesson07.html</a>.</p>\n</div>\n\n<p>Теперь, когда мы научили мячик двигаться и отскакивать от стен, давайте добавим немного геймплея. В этой главе мы создадим платформу-ракетку, которой будем отбивать наш мячик.</p>"}},{"type":"prose","value":{"id":"рисуем_платформу","title":"Рисуем платформу","isH3":false,"content":"<p>С точки зрения фреймворка, платформа и мячик не сильно различаются - нам так же понадобится переменная для платформы, спрайт и немного магии.</p>"}},{"type":"prose","value":{"id":"создаём_платформу","title":"Создаём платформу","isH3":true,"content":"<p>Сначала, добавим переменную <code>paddle</code>, сразу после переменной <code>ball</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> paddle<span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>После этого, в функции <code>preload</code>, загрузим изображение <code>paddle</code> при помощи ещё одного вызова функции <code>load.image()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">preload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    game<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ball'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'img/ball.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    game<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">'paddle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'img/paddle.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"добавляем_графику_для_платформы","title":"Добавляем графику для платформы","isH3":true,"content":"<p>Чуть не забыли, на этом этапе нам надо скачать <a href=\"https://github.com/end3r/Gamedev-Phaser-Content-Kit/blob/gh-pages/demos/img/paddle.png\" class=\"external\" rel=\" noopener\">изображение платформы с Github</a> в папку <code>/img</code>.</p>"}},{"type":"prose","value":{"id":"рисуем_платформу_с_физикой","title":"Рисуем платформу с физикой","isH3":true,"content":"<p>Далее, мы инициализируем спрайт нашей платформы при помощи функции <code>add.sprite()</code> — добавьте следующую строку кода в самый конец функции <code>create()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>paddle <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">sprite</span><span class=\"token punctuation\">(</span>game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'paddle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Мы можем использовать <code>world.width</code> и <code>world.height</code> для позиционирования платформы в том месте, где мы хотим: <code>game.world.width*0.5</code> расположит платформу прямо по середине экрана. В данном случае, нам повезло, что наш игровой мир совпадает с <code>&lt;canvas&gt;</code>, однако, в других играх мир может быть гораздо больше экрана. </p>\n\n<p>Как вы могли заметить, перезагрузив, на данном этапе, страницу <code>index.html</code>, платформа находится не совсем по середине экрана. Почему? Всё дело в том, что, по умолчанию, точка, из которой начинается позиционирование объекта (якорь), находится в левом верхнем углу. Но мы можем это изменить и переместить якорь в середину платформы по ширине и в самый низ по высоте, чтобы проще было позиционировать платформу, относительно нижней грани экрана. Добавьте следующую строку кода:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>paddle<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Платформу расположили там, где и хотели. Теперь, чтобы платформа могла взаимодействовать с мячиком, добавим ей физику. Добавьте следующую строку кода в самый низ функции <code>create()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span>paddle<span class=\"token punctuation\">,</span> Phaser<span class=\"token punctuation\">.</span>Physics<span class=\"token punctuation\">.</span><span class=\"token constant\">ARCADE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Вот и настало время для магии - фреймворк сам позаботится о проверке столкновений (коллизий) в каждом кадре. Для того, чтобы включить проверку коллизий между платформой и мячиком, вызовите функцию <code>collide()</code> в функции <code>update()</code> как показано ниже:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>arcade<span class=\"token punctuation\">.</span><span class=\"token function\">collide</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">,</span> paddle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>В качестве аргументов, мы передаём два объекта, между которыми проверяются коллизии — в нашем случае, мячик и платформа. Вроде, сработало, но не совсем так, как мы ожидали — когда мячик сталкивается с платформой, последняя падает за пределы экрана! А мы, всего лишь, хотим, чтобы мячик отскакивал от платформы, а платформа, при этом, оставалась на месте. Мы можем использовать свойство <code>immovable</code>, для того, чтобы платформа не двигалась, когда мячик бьётся об неё. Для этого добавьте следующую строку кода в конец функции <code>create()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>paddle<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>immovable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Вот! Теперь всё работает, как надо.</p>"}},{"type":"prose","value":{"id":"управляем_платформой","title":"Управляем платформой","isH3":false,"content":"<p>Следующая проблема заключается в том, что мы не можем двигать платформу. Чтобы сделать это мы можем воспользоваться вводом <code>input</code> (мышь или сенсорный экран, в зависимости от платформы) и расположить нашу платформу в месте расположения курсора. Добавьте следующую строку кода в функцию <code>update()</code>, как показано ниже:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span>arcade<span class=\"token punctuation\">.</span><span class=\"token function\">collide</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">,</span> paddle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    paddle<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Теперь, каждый кадр координата <code>x</code> платформы будет соответствовать координате <code>x</code> курсора. Однако, при старте игры, положение нашей платформы не по центру экрана, из-за того, что положение курсора не определено. Чтобы это исправить, давайте добавим платформе координату <code>x</code> по умолчанию, на случай, если положение курсора не определено. Обновите предыдущую строку кода:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>paddle<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>x <span class=\"token operator\">||</span> game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Если вы этого ещё не сделали, то обновите страницу <code>index.html</code> и попробуйте то, что у нас получилось!</p>"}},{"type":"prose","value":{"id":"расположение_мячика","title":"Расположение мячика","isH3":false,"content":"<p>Теперь давайте разместим мячик на платформе. Так же, как и платформу, расположим мячик по середине экрана по горизонтали, с небольшим отступом от нижней грани экрана по вертикали. Для этого переместим якорь мячика в его середину. Найдите строку <code>ball = game.add.sprite( ... )</code> и заметите её на следующие две:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ball <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">sprite</span><span class=\"token punctuation\">(</span>game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> game<span class=\"token punctuation\">.</span>world<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ball'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nball<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Скорость оставим такую же, но изменим направление по оси <code>y</code>, изменив второй параметр со 150 на -150, и теперь мяч будет двигаться вверх. Найдите строку <code>ball.body.velocity.set( ... )</code> и измените её, как показано ниже:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ball<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Теперь мячик появляется по середине платформы и двигается вверх.</p>"}},{"type":"prose","value":{"id":"сравните_свой_код","title":"Сравните свой код","isH3":false,"content":"<p>Вы можете проверить код из этого урока и поиграть с ним, чтобы лучше понять, как он работает:</p>\n\n<p></p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"400\" src=\"https://jsfiddle.net/end3r/ogqza0ye/embedded/\" loading=\"lazy\"></iframe></p><p></p>"}},{"type":"prose","value":{"id":"следующий_шаг","title":"Следующий шаг","isH3":false,"content":"<p>Мы можем управлять платформой и сделали так, чтобы мячик отскакивал от неё. Но какой от этого толк, если мячик отскакивает и от нижней грани экрана? В следующей главе мы добавим <a href=\"/ru/docs/Games/Tutorials/%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5_2D_Breakout_%D0%B8%D0%B3%D1%80%D1%8B_%D0%BD%D0%B0_Phaser/Game_over\">логику проигрыша и экран \"Game over\"</a>.</p>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Bounce_off_the_walls\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Game_over\">Следующая статья  »</a></li>\n</ul><p></p>"}}],"toc":[{"text":"Рисуем платформу","id":"рисуем_платформу"},{"text":"Управляем платформой","id":"управляем_платформой"},{"text":"Расположение мячика","id":"расположение_мячика"},{"text":"Сравните свой код","id":"сравните_свой_код"},{"text":"Следующий шаг","id":"следующий_шаг"}],"summary":"\nЭто 7 из 16 уроков руководства разработки игры с помощью Phaser. Исходный код этого урока вы можете найти здесь: Gamedev-Phaser-Content-Kit/demos/lesson07.html.\n","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Player paddle and controls","locale":"en-US","native":"English (US)"},{"title":"Player paddle and controls","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/games/tutorials/2d_breakout_game_phaser/player_paddle_and_controls","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/games/tutorials/2d_breakout_game_phaser/player_paddle_and_controls/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Games","title":"Разработка игр"},{"uri":"/ru/docs/Games/Tutorials","title":"Уроки"},{"uri":"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser","title":"2D игра на Phaser"},{"uri":"/ru/docs/Games/Tutorials/2D_breakout_game_Phaser/Player_paddle_and_controls","title":"Платформа и управление"}],"pageTitle":"Платформа и управление - Разработка игр | MDN","noIndexing":false}}