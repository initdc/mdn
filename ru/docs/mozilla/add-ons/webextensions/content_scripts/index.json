{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Встраиваемый скрипт","mdn_url":"/ru/docs/Mozilla/Add-ons/WebExtensions/Content_scripts","locale":"ru","native":"Русский","sidebarHTML":"\n  <ol>\n    <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions\"><strong>Browser extensions</strong></a></li>\n    <li class=\"toggle\">\n      <details>\n        <summary>Getting started</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/What_are_WebExtensions\">What are extensions?</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Your_first_WebExtension\">Your first extension</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Your_second_WebExtension\">Your second extension</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Anatomy_of_a_WebExtension\">Anatomy of an extension</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Examples\">Example extensions</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/What_next_\">What next?</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>Concepts</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Using_the_JavaScript_APIs\">Using the JavaScript APIs</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Content_scripts\">Content scripts</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Match_patterns\">Match patterns</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Working_with_files\">Working with files</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Internationalization\">Internationalization</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy\">Content Security Policy</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Native_messaging\">Native messaging</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Differences_between_API_implementations\">Differences between API implementations</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Chrome_incompatibilities\">Chrome incompatibilities</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>User interface</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface\">User Interface</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface/Browser_action\">Toolbar button</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface/Page_actions\">Address bar button</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface/Sidebars\">Sidebars</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface/Context_menu_items\">Context menu items</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface/Options_pages\">Options page</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface/Extension_pages\">Extension pages</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface/Notifications\">Notifications</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface/Omnibox\">Address bar suggestions</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface/devtools_panels\">Developer tools panels</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>How to</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Intercept_HTTP_requests\">Intercept HTTP requests</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Modify_a_web_page\">Modify a web page</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Safely_inserting_external_content_into_a_page\">Insert external content</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Sharing_objects_with_page_scripts\">Share objects with page scripts</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Add_a_button_to_the_toolbar\">Add a button to the toolbar</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Implement_a_settings_page\">Implement a settings page</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Working_with_the_Tabs_API\">Work with the Tabs API</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Work_with_the_Bookmarks_API\">Work with the Bookmarks API</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Work_with_the_Cookies_API\">Work with the Cookies API</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Work_with_contextual_identities\">Work with contextual identities</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Interact_with_the_clipboard\">Interact with the clipboard</a></li>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Build_a_cross_browser_extension\">Build a cross-browser extension</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Firefox_differentiators\">Firefox differentiators</a></summary>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>JavaScript APIs</summary>\n        <ol><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Browser_support_for_JavaScript_APIs\">Browser support for JavaScript APIs</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/cookies\">cookies</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/downloads\">downloads</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/runtime\">runtime</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/tabs\">tabs</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/webRequest\">webRequest</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/windows\">windows</a></li></ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n      <summary>Manifest keys</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/manifest.json\">Introduction</a></li>\n        </ol>\n      <ol><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/manifest.json/content_security_policy\">content_security_policy</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/manifest.json/description\">description</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/manifest.json/permissions\">permissions</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/manifest.json/background\">ключ background</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/manifest.json/icons\">ключ icons</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/manifest.json/manifest_version\">ключ manifest_version</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/manifest.json/name\">ключ name</a></li><li><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/manifest.json/version\">ключ version</a></li></ol>\n      </details>\n    </li>\n     <li class=\"toggle\">\n      <details>\n        <summary>Extension Workshop</summary>\n        <ol>\n          <li><a href=\"https://extensionworkshop.com/documentation/develop/\">Develop</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/publish/\">Publish</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/manage/\">Manage</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/enterprise/\">Enterprise</a></li>\n        </ol>\n      </details>\n    </li>\n    <li><a href=\"/ru/docs/Mozilla/Add-ons/Contact_us\"><strong>Contact us</strong></a></li>\n    <li class=\"toggle\">\n      <details>\n        <summary>Channels</summary>\n        <ol>\n          <li><a href=\"https://blog.mozilla.org/addons\">Add-ons blog</a></li>\n          <li><a href=\"https://discourse.mozilla.org/c/add-ons\">Add-ons forum</a></li>\n          <li><a href=\"https://chat.mozilla.org/#/room/%23addons:mozilla.org\">Add-ons chat</a></li>\n        </ol>\n      </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<p>Встраиваемый скрипт - это часть расширения, которая выполняется в контексте отдельной веб-страницы (в отличии от фоновых скриптов, выполняющихся в контексте целого браузера).</p>\n\n<p><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Anatomy_of_a_WebExtension#фоновые_скрипты\">Фоновые скрипты</a> имеют доступ ко всем методам <a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API\">WebExtension JavaScript APIs</a>, но они не имеют доступа к контенту отдельных веб-страниц. Так что если вашему расширению необходимо взаимодействие с контентом веб-страницы, вам нужен встраиваемый скрипт.</p>\n\n<p>Точно так же, как скрипты загружаемые веб-страницами, встраиваемый скрипт может читать и изменять контент веб-страницы, используя DOM API.</p>\n\n<p>Встраиваемые скрипты имеют доступ только к <a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#%D0%92%D0%B7%D0%B0%D0%B8%D0%BC%D0%BE%D0%B4%D0%B5%D0%B9%D1%81%D1%82%D0%B2%D0%B8%D0%B5_%D1%81_%D1%84%D0%BE%D0%BD%D0%BE%D0%B2%D1%8B%D0%BC%D0%B8_%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%B0%D0%BC%D0%B8\" aria-current=\"page\">небольшому подмножеству методов WebExtension API</a>, но они могут <a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#%D0%92%D0%B7%D0%B0%D0%B8%D0%BC%D0%BE%D0%B4%D0%B5%D0%B9%D1%81%D1%82%D0%B2%D0%B8%D0%B5_%D1%81_%D1%84%D0%BE%D0%BD%D0%BE%D0%B2%D1%8B%D0%BC%D0%B8_%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%B0%D0%BC%D0%B8\" aria-current=\"page\">взаимодействовать с фоновыми скриптами</a>, используя систему передачи сообщений, таким образом опосредовано имея доступ ко всему WebExtension API.</p>\n\n<div class=\"note notecard\" id=\"sect2\">\n<p>Обратите внимание, что встраивание скриптов блокируется на следующих доменах:</p>\n\n<ul style=\"display: grid;\">\n <li>accounts-static.cdn.mozilla.net</li>\n <li>accounts.firefox.com</li>\n <li>addons.cdn.mozilla.net</li>\n <li>addons.mozilla.org</li>\n <li>api.accounts.firefox.com</li>\n <li>content.cdn.mozilla.net</li>\n <li>content.cdn.mozilla.net</li>\n <li>discovery.addons.mozilla.org</li>\n <li>input.mozilla.org</li>\n <li>install.mozilla.org</li>\n <li>oauth.accounts.firefox.com</li>\n <li>profile.accounts.firefox.com</li>\n <li>support.mozilla.org</li>\n <li>sync.services.mozilla.com</li>\n <li>testpilot.firefox.com</li>\n</ul>\n\n<p>Если вы попытаетесь встроить скрипт на страницы, находящиеся на вышеперечисленных доменах, у вас ничего не выйдет, и веб-страница сделает запись о <a href=\"/ru/docs/Web/HTTP/CSP\">CSP</a> ошибке.</p>\n\n<p>По причине того, что список запрещённых доменов включает в себя addons.mozilla.org, пользователи, которые попытаются испытать ваше расширение прямо на странице загрузки, могут посчитать, что расширение не работает! В связи с этим вы могли бы предоставить им соответствующее предупреждение или <a href=\"https://extensionworkshop.com/documentation/develop/onboard-upboard-offboard-users/\" class=\"external\" rel=\" noopener\">onboarding page</a> чтобы немедленно переадресовать их с addons.mozilla.org.</p>\n</div>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p>Значения, определённые в глобальной области видимости встраиваемого скрипта с помощью <code>var foo</code> или <code>window.foo = \"bar\"</code> могут исчезать по причине бага <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1408996\" class=\"external\" rel=\" noopener\">1408996</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"загрузка_встраиваемого_скрипта","title":"Загрузка встраиваемого скрипта","isH3":false,"content":"<p>Загрузка встраиваемых скриптов на веб-страницу происходит следующими тремя способами:</p>\n\n<ol>\n <li><strong>Автоматическая загрузка скрипта на страницах с определёнными URL, объявленными при установке:</strong> используя <code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/content_scripts\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">content_scripts (en-US)</a></code> ключ в manifest.json, вы можете запросить браузер загружать встраиваемый скрипт каждый раз, когда браузер загружает веб-страницу, чей URL <a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Match_patterns\">совпадает с объявленными шаблонами</a>.</li>\n <li><strong>Автоматическая загрузка скрипта на страницах с определёнными URL, объявленными в момент работы расширения:</strong> используя <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/contentScripts\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">contentScripts (en-US)</a> API, вы можете запросить браузер загружать встраиваемый скрипт каждый раз, когда браузер загружает веб-страницу, чей URL <a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Match_patterns\">совпадает с объявленными шаблонами</a>. Это очень похоже на первый метод, но позволяет добавлять и удалять правила динамически во время работы расширения.</li>\n <li><strong>Загрузка скрипта расширением в конкретную вкладку:</strong> используя <code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/tabs/executeScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">tabs.executeScript() (en-US)</a></code> API, вы можете загружать встраиваемые скрипты в определённые вкладки когда захотите: например, в ответ на нажатие пользователя на <a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/user_interface/Browser_action\">browser action</a>.</li>\n</ol>\n\n<p>Существует только одна глобальная область видимости <em>для одного фрейма, для одного расширения</em>. Это означает, что значения из одного встраиваемого скрипта могут быть доступны для другого встраиваемого скрипта, не зависимо от того, как встраиваемый скрипт был загружен на страницу.</p>\n\n<p>Используя методы (1) и (2), вы можете загружать скрипты на страницы, чьи URL могут быть представлены, используя <a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/Match_patterns\">шаблон совпадения</a>.</p>\n\n<p>Используя метод (3), вы к тому же можете загружать скрипты на страницы вашего расширения, но вы не можете загружать скрипты на привилегированные страницы браузеры (например \"about:debugging\" или \"about:addons\").</p>"}},{"type":"prose","value":{"id":"условия_работы_встраиваемого_скрипта","title":"Условия работы встраиваемого скрипта","isH3":false,"content":""}},{"type":"prose","value":{"id":"доступ_к_dom","title":"Доступ к DOM","isH3":true,"content":"<p>Встраиваемые скрипты имеют доступ и могут изменять DOM на веб-странице, так же как и обычные скрипты. Так же они могут видеть любые изменения сделанные с DOM страничными скриптами.</p>\n\n<p>При этом, встраиваемые скрипты имеют \"чистое DOM представление\". Это значит:</p>\n\n<ul>\n <li>Встраиваемые скрипты не могут видеть JavaScript переменных, определённых страничными скриптами.</li>\n <li>Если страничный скрипт переназначит встроенное свойство DOM, встраиваемый скрипт всё равно будет видеть его изначальное значение, а не переназначенное.</li>\n</ul>\n\n<p>В Firefox это поведение называется <a href=\"https://firefox-source-docs.mozilla.org/dom/scriptSecurity/xray_vision.html\" class=\"only-in-en-us external\" title=\"Currently only available in English (US)\" rel=\" noopener\">Xray vision (en-US)</a>.</p>\n\n<p>Например, рассмотрите эту веб-страницу:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content-type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>page-scripts/page-script.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<p>Скрипт \"page-script.js\" делает следующее:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// page-script.js</span>\n\n<span class=\"token comment\">// добавляет новый элемент к DOM</span>\n<span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"Этот параграф был добавлен страничным скриптом.\"</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"page-script-para\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// определяет новое свойство на объекте window</span>\nwindow<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> <span class=\"token string\">\"Эта глобальная переменная была добавлена страничным скриптом\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// переопределяет встроенную window.confirm() функцию</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">confirm</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Страничный скрипт так же переопределил 'confirm'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Теперь расширение загружает встраиваемый скрипт на страницу:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\n<span class=\"token comment\">// получает доступ и изменяет DOM</span>\n<span class=\"token keyword\">var</span> pageScriptPara <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"page-script-para\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npageScriptPara<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// не может видеть свойств определённых страничным скриптом</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// undefined</span>\n\n<span class=\"token comment\">// видит изначальное значение свойства, переопределённого страничным скриптом</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Вы уверены?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// вызывает оригинальный window.confirm()</span></code></pre></div>\n\n<p>Те же самые правила применяются и наоборот: страничный скрипт не может видеть JavaScript свойств, добавленных встраиваемым скриптом.</p>\n\n<p>Это означает, что встраиваемый скрипт может полагаться на то, что DOM свойства всегда будут вести себя предсказуемо, и не беспокоиться о том, что его переменные будут иметь конфликт с переменными из страничного скрипта.</p>\n\n<p>Одно из последствий такого поведения состоит в том, что встраиваемый скрипт не будет иметь доступ к JavaScript библиотекам, загруженным страничным скриптом. Например, если веб-страница загружает jQuery, встраиваемый скрипт не сможет увидеть эту библиотеку.</p>\n\n<p>Если встраиваемому скрипту необходимо использовать какую-либо JavaScript библиотеку, тогда эта библиотека должна быть загружена, тем же способом, как и встраиваемый скрипт вместе с ним:</p>\n\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"content_scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"matches\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*://*.mozilla.org/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"js\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"jquery.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"content-script.js\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Примечание:</strong> Firefox предоставляет некоторое API, позволяющее встраиваемому скрипту иметь доступ к JavaScript объектам, созданным страничным скриптом, и предоставлять свои собственные JavaScript объекты страничному скрипту.</p>\n\n<p>Смотрите <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Sharing_objects_with_page_scripts\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">совместное использование объектов со страничным скриптом (en-US)</a> для получения дополнительной информации.</p>\n</div>"}},{"type":"prose","value":{"id":"доступные_webextension_api","title":"Доступные WebExtension API","isH3":true,"content":"<p>В дополнение стандартному DOM API, встраиваемый скрипт может использовать следующие методы WebExtension APIs:</p>\n\n<p>Из <code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/extension\">extension</a></code>:</p>\n\n<ul>\n <li><code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/extension#geturl()\">getURL()</a></code></li>\n <li><code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/extension#inincognitocontext\">inIncognitoContext</a></code></li>\n</ul>\n\n<p>Из <code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/runtime\">runtime</a></code>:</p>\n\n<ul>\n <li><code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/runtime#connect()\">connect()</a></code></li>\n <li><code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/runtime#getmanifest()\">getManifest()</a></code></li>\n <li><code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/runtime#geturl()\">getURL()</a></code></li>\n <li><code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/runtime#onconnect\">onConnect</a></code></li>\n <li><code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/runtime#onmessage\">onMessage</a></code></li>\n <li><code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/API/runtime#sendmessage()\">sendMessage()</a></code></li>\n</ul>\n\n<p>Из <code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">i18n (en-US)</a></code>:</p>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n/getMessage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getMessage() (en-US)</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n/getAcceptLanguages\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getAcceptLanguages() (en-US)</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n/getUILanguage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getUILanguage() (en-US)</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n/detectLanguage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">detectLanguage() (en-US)</a></code></li>\n</ul>\n\n<p>Из <code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/menus\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">menus (en-US)</a></code>:</p>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/menus/getTargetElement\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getTargetElement (en-US)</a></code></li>\n</ul>\n\n<p>Ко всему из <code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">storage (en-US)</a></code>.</p>"}},{"type":"prose","value":{"id":"работа_с_xhr_и_fetch","title":"Работа с XHR и Fetch","isH3":true,"content":"<p>Встраиваемые скрипты могут делать запросы используя <code><a href=\"/ru/docs/Web/API/XMLHttpRequest\">window.XMLHttpRequest</a></code> и <code><a href=\"/ru/docs/Web/API/Fetch_API\">window.fetch()</a></code> API.</p>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p>В Firefox, запросы, совершаемые из встраиваемого скрипта (например, используя <a href=\"/ru/docs/Web/API/Fetch_API/Using_Fetch\">fetch()</a>) происходят в контексте расширения, так что вам необходимо предоставлять полный URL для доступа к контенту страниц. В Chrome, эти запросы совершаются в контексте страницы, так что URL может быть относительным, например <code>/api</code> будет трансформирован в <code>https://[current page URL]/api</code>.</p>\n</div>\n\n<p>Встраиваемый скрипт имеет точно такие же кросс-доменные привилегии, как и всё остальное расширение: так что если расширение запросило кросс-доменный доступ на какой-либо домен используя <code><a href=\"/ru/docs/Mozilla/Add-ons/WebExtensions/manifest.json/permissions\">permissions</a></code> ключ в manifest.json, тогда его встраиваемый скрипт тоже будет иметь доступ к этому домену.</p>\n\n<p>Это достигается, предоставляя встраиваемому скрипту более привилегированные XHR and fetch объекты. Что имеет побочный эффект, связанный с отсутствием <code><a href=\"/ru/docs/Web/HTTP/Headers/Origin\">Origin</a></code> и <code><a href=\"/ru/docs/Web/HTTP/Headers/Referer\">Referer</a></code> заголовков, которые имел бы запрос, выполняемый из страничного скрипта. Зачастую это предпочитаемо, для того чтобы предотвратить раскрытие кросс-доменной натуры запроса. Начиная с версии 58 и дальше, расширения, которым необходимо выполнять запросы, которые должны выглядеть будто они отправлены встраиваемым скриптом, могут использовать  <code>content.XMLHttpRequest</code> и <code>content.fetch()</code>. Кросс-браузерные расширения должны проверять присутствие этих методов.</p>"}},{"type":"prose","value":{"id":"взаимодействие_с_фоновыми_скриптами","title":"Взаимодействие с фоновыми скриптами","isH3":false,"content":"<p>Хотя встраиваемые скрипты не могут напрямую использовать большинство методов из WebExtension APIs, они могут взаимодействовать с фоновыми скриптами расширения, используя систему сообщений, и таким образом могут опосредованно иметь доступ к тем же самым API, что и фоновые скрипты.</p>\n\n<p>Существует два способа общения между фоновым и встраиваемым скриптами: вы можете посылать одиночные сообщения, ожидая необязательного ответа, или вы можете установить долгосрочное соединение на двух сторонах и использовать это соединение для обмена сообщениями.</p>"}},{"type":"prose","value":{"id":"одиночные_сообщения","title":"Одиночные сообщения","isH3":true,"content":"<p>Для отправки одиночного сообщения и ожидания необязательного ответа, вы можете использовать следующее API:</p>\n\n<table class=\"fullwidth-table standard-table\">\n <thead>\n  <tr>\n   <th scope=\"row\"></th>\n   <th scope=\"col\">Во встраиваемом скрипте</th>\n   <th scope=\"col\">В фоновом скрипте</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <th scope=\"row\">Отправка сообщения</th>\n   <td><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/sendMessage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">browser.runtime.sendMessage() (en-US)</a></code></td>\n   <td><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/tabs/sendMessage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">browser.tabs.sendMessage() (en-US)</a></code></td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Получение сообщения</th>\n   <td><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">browser.runtime.onMessage (en-US)</a></code></td>\n   <td><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">browser.runtime.onMessage (en-US)</a></code></td>\n  </tr>\n </tbody>\n</table>\n\n<p>Например, представьте встраиваемый скрипт, который обрабатывает нажатие левой кнопки мыши на веб-странице.</p>\n\n<p>Если нажатие было произведено по ссылке, встраиваемый скрипт отправляет сообщение фоновому скрипту со значение URL в ссылке:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> notifyExtension<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">notifyExtension</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>tagName <span class=\"token operator\">!=</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  browser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"url\"</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Фоновый скрипт ожидает эти сообщения и, при их получении, отображает уведомления, используя <code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/notifications\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">notifications (en-US)</a></code> API:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// background-script.js</span>\n\nbrowser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>notify<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  browser<span class=\"token punctuation\">.</span>notifications<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"basic\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"iconUrl\"</span><span class=\"token operator\">:</span> browser<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span><span class=\"token function\">getURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"link.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Вы нажали на ссылку!\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"message\"</span><span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span>url\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>(Этот пример кода частично взят из <a href=\"https://github.com/mdn/webextensions-examples/tree/master/notify-link-clicks-i18n\" class=\"external\" rel=\" noopener\">notify-link-clicks-i18n</a> примера на GitHub.)</p>"}},{"type":"prose","value":{"id":"обмен_сообщениями_через_постоянное_соединение","title":"Обмен сообщениями через постоянное соединение","isH3":true,"content":"<p>Отправка одиночных сообщений может стать довольно обременительной, если вы пересылаете много сообщений между встраиваемым и фоновым скриптами. Альтернативное решение в этой ситуации будет установить постоянное соединение между двумя скриптами, и использовать его для обмена сообщениями.</p>\n\n<p>Каждая из сторон имеет <code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/Port\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.Port (en-US)</a></code> объект, который они могут использовать для обмена сообщениями.</p>\n\n<p>Для создания постоянного соединения:</p>\n\n<ul>\n <li>Одна из сторон должна ждать соединений, используя <code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onConnect\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.onConnect (en-US)</a></code></li>\n <li>Другая сторона должна вызвать:\n  <ul>\n   <li><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/tabs/connect\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">tabs.connect() (en-US)</a></code> (при соединении со встраиваемым скриптом); или</li>\n   <li><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/connect\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.connect() (en-US)</a></code> (при соединении с фоновым скриптом).</li>\n  </ul>\n </li>\n</ul>\n\n<p>Результатом вызова этих методов будет возвращение <code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/Port\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.Port (en-US)</a></code> объекта.</p>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onConnect\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.onConnect (en-US)</a></code> методу передаётся аргумент, являющийся собственным портом этого скрипта,  <code><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/Port\">runtime.Port</a></code> объект.</li>\n</ul>\n\n<p>Как только обе стороны имеют порт, они могут:</p>\n\n<ul>\n <li>отправлять сообщения, используя <code>runtime.Port.postMessage()</code>, и</li>\n <li>получать сообщения используя <code>runtime.Port.onMessage()</code></li>\n</ul>\n\n<p>Например, сразу после загрузки, нижерасположенный встраиваемый скрипт:</p>\n\n<ul>\n <li>Соединяется с фоновым скриптом</li>\n <li>Сохраняет <code>Port</code> в переменную <code>myPort</code></li>\n <li>Начинает ожидать и записывать сообщения приходящие на <code>myPort</code></li>\n <li>Использует <code>myPort</code> для отправки сообщений на фоновый скрипт, когда пользователь нажимает левую кнопку мыши на документе</li>\n</ul>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\n<span class=\"token keyword\">var</span> myPort <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span><span class=\"token string\">\"port-from-cs\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyPort<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">greeting</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Привет из встраиваемого скрипта\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyPort<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Во встраиваемом скрипте, получено сообщение из фонового скрипта: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>greeting<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myPort<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">greeting</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Они кликнули по странице!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Соответствующий фоновый скрипт:</p>\n\n<ul>\n <li>Ожидает попытки соединения от встраиваемого скрипта</li>\n <li>Когда он получает эту попытку соединения:\n  <ul>\n   <li>сохраняет свой порт в переменную <code>portFromCS</code></li>\n   <li>отправляет сообщение встроенному скрипту, используя этот порт</li>\n   <li>начинает ожидать сообщений, приходящих на порт, и записывать их</li>\n  </ul>\n </li>\n <li>Отправляет сообщения на встраиваемый скрипт, используя <code>portFromCS</code>, когда пользователь нажимает кнопку расширения в браузере</li>\n</ul>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// background-script.js</span>\n\n<span class=\"token keyword\">var</span> portFromCS<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">connected</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  portFromCS <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n  portFromCS<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">greeting</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Привет, встраиваемый скрипт!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  portFromCS<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"В фоновом скрипте, получено сообщение от встраиваемого скрипта\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>greeting<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>onConnect<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>connected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbrowser<span class=\"token punctuation\">.</span>browserAction<span class=\"token punctuation\">.</span>onClicked<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  portFromCS<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">greeting</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Они нажали кнопку!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<h4 id=\"несколько_встраиваемых_скриптов\">Несколько встраиваемых скриптов</h4>\n\n<p>Если вы имеете несколько встраиваемых скриптов, с которыми вы обращаетесь в одно и то же время, вы бы могли сохранять каждое соединение в массиве.</p>\n\n<ul>\n</ul>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// background-script.js</span>\n\n<span class=\"token keyword\">var</span> ports <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">connected</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ports<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>tab<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span>    <span class=\"token operator\">=</span> p\n  <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>onConnect<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>connected<span class=\"token punctuation\">)</span>\n\nbrowser<span class=\"token punctuation\">.</span>browserAction<span class=\"token punctuation\">.</span>onClicked<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ports<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">greeting</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Они нажали на кнопку!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<ul>\n</ul>"}},{"type":"prose","value":{"id":"взаимодействие_с_веб-страницей","title":"Взаимодействие с веб-страницей","isH3":false,"content":"<p>Хотя по умолчанию встраиваемые скрипты не имеют доступ к объектам, которые созданы страничными скриптами, они могут взаимодействовать со страничными скриптами, используя <code><a href=\"/ru/docs/Web/API/Window/postMessage\">window.postMessage</a></code> и <code><a href=\"/ru/docs/Web/API/EventTarget/addEventListener\">window.addEventListener</a></code> API.</p>\n\n<p>Например:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// page-script.js</span>\n\n<span class=\"token keyword\">var</span> messenger <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from-page-script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmessenger<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> messageContentScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">messageContentScript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">direction</span><span class=\"token operator\">:</span> <span class=\"token string\">\"from-page-script\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Сообщение со страницы\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>source <span class=\"token operator\">==</span> window <span class=\"token operator\">&amp;&amp;</span>\n      event<span class=\"token punctuation\">.</span>data <span class=\"token operator\">&amp;&amp;</span>\n      event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">==</span> <span class=\"token string\">\"from-page-script\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Встраиваемый скрипт получил сообщение: \\\"\"</span> <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Для просмотра законченного и полностью рабочего примера, <a href=\"https://mdn.github.io/webextensions-examples/content-script-page-script-messaging.html\" class=\"external\" rel=\" noopener\">посетите эту страницу на GitHub</a> и следуйте инструкциям.</p>\n\n<div class=\"warning notecard\" id=\"sect6\">\n<p>Заметьте, при взаимодействии с непроверенными страницами этим способом, вам нужно быть очень осторожными . Расширения имеют возможность запускать привилегированный код, который может обладать серьёзными возможностями, и вредоносные веб-страницы легко могут обмануть ваше расширение, ради доступа к этим возможностям.</p>\n\n<p>Как простейший пример, представим встраиваемый скрипт, который получает сообщение от веб-страницы и делает что-то вроде этого:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>source <span class=\"token operator\">==</span> window <span class=\"token operator\">&amp;&amp;</span>\n      event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">&amp;&amp;</span>\n      event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">==</span> <span class=\"token string\">\"from-page-script\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Теперь страничный скрипт может запускать любой код со всеми привилегиями встраиваемого скрипта.</p>\n</div>"}},{"type":"prose","value":{"id":"использование_eval()_во_встраиваемых_скриптах","title":"Использование <code>eval()</code> во встраиваемых скриптах","isH3":false,"content":"<p>В Chrome, <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></code> всегда выполняет код в контексте встраиваемого скрипта, а не в контексте веб-страницы.</p>\n\n<p>В Firefox:</p>\n\n<ul>\n <li>Если вы вызываете <code>eval()</code>,  код выполняется в контексте <strong>встраиваемого скрипта</strong>.</li>\n <li>Если вы вызываете <code>window.eval()</code>, код выполняется в контексте <strong>страничного скрипта</strong>.</li>\n</ul>\n\n<p>Например, рассмотрите этот встраиваемый скрипт:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window.x = 1;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'window.y = 2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Во встраиваемом скрипте, window.x: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Во встраиваемом скрипте, window.y: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"check\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Этот код создаёт переменные <code>x</code> and <code>y</code>, используя <code>window.eval()</code> и <code>eval()</code>, затем записывает их значения, и отправляет сообщение на веб-страницу.</p>\n\n<p>Получая сообщение, страничный скрипт записывает те же самые переменные:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>source <span class=\"token operator\">===</span> window <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>data <span class=\"token operator\">&amp;&amp;</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>message <span class=\"token operator\">===</span> <span class=\"token string\">\"check\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">In page script, window.x: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">In page script, window.y: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>window<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>В Chrome, в консоли будут записаны следующие строки:</p>\n\n<pre class=\"notranslate\">In content script, window.x: 1\nIn content script, window.y: 2\nIn page script, window.x: undefined\nIn page script, window.y: undefined</pre>\n\n<p>В Firefox, будут записаны следующие строки:</p>\n\n<pre class=\"notranslate\">In content script, window.x: undefined\nIn content script, window.y: 2\nIn page script, window.x: 1\nIn page script, window.y: undefined</pre>\n\n<p>Те же правила применимы к <code><a href=\"/ru/docs/Web/API/setTimeout\">setTimeout()</a></code>, <code><a href=\"/ru/docs/Web/API/setInterval\">setInterval()</a></code>, и <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function()</a></code>.</p>\n\n<div class=\"warning notecard\" id=\"sect7\">\n<p>Будьте очень осторожны, запуская код в контексте страничного скрипта. Окружение страничного скрипта может контролироваться потенциально зловредным веб-страницей, которая может переопределить объекты, с которыми вы взаимодействуете, так что их поведение станет совершенно непредсказуемым:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// page.js переопределяет console.log</span>\n\n<span class=\"token keyword\">var</span> original <span class=\"token operator\">=</span> console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">original</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// content-script.js вызывает переопределённую версию</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console.log(false)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</div>","titleAsText":"Использование eval() во встраиваемых скриптах"}}],"toc":[{"text":"Загрузка встраиваемого скрипта","id":"загрузка_встраиваемого_скрипта"},{"text":"Условия работы встраиваемого скрипта","id":"условия_работы_встраиваемого_скрипта"},{"text":"Взаимодействие с фоновыми скриптами","id":"взаимодействие_с_фоновыми_скриптами"},{"text":"Взаимодействие с веб-страницей","id":"взаимодействие_с_веб-страницей"},{"text":"Использование <code>eval()</code> во встраиваемых скриптах","id":"использование_eval()_во_встраиваемых_скриптах"}],"summary":"Встраиваемый скрипт - это часть расширения, которая выполняется в контексте отдельной веб-страницы (в отличии от фоновых скриптов, выполняющихся в контексте целого браузера).","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Content scripts","locale":"en-US","native":"English (US)"},{"title":"Scripts de contenu","locale":"fr","native":"Français"},{"title":"コンテンツスクリプト","locale":"ja","native":"日本語"},{"title":"Content scripts","locale":"ko","native":"한국어"},{"title":"Content scripts","locale":"zh-CN","native":"中文 (简体)"},{"title":"內容腳本","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/mozilla/add-ons/webextensions/content_scripts","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/mozilla/add-ons/webextensions/content_scripts/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Mozilla","title":"Mozilla"},{"uri":"/ru/docs/Mozilla/Add-ons","title":"Дополнения"},{"uri":"/ru/docs/Mozilla/Add-ons/WebExtensions","title":"Расширения браузера"},{"uri":"/ru/docs/Mozilla/Add-ons/WebExtensions/Content_scripts","title":"Встраиваемый скрипт"}],"pageTitle":"Встраиваемый скрипт - Mozilla | MDN","noIndexing":false}}