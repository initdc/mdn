{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Использование кеширования в Firefox 1.5","mdn_url":"/ru/docs/Mozilla/Firefox/Releases/1.5/Using_Firefox_1.5_caching","locale":"ru","native":"Русский","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Замечания к релизам Firefox для разработчиков</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Mozilla/Firefox/Releases\">Замечания к релизам Firefox для разработчиков</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Дополнения</summary>\n            <ol>\n              <li><a href=\"/ru/Add-ons/WebExtensions\">Расширения браузера</a></li>\n              <li><a href=\"/ru/Add-ons/Themes\">Темы</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Firefox internals</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Mozilla/\">Проект Mozilla</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Gecko\">Gecko</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Firefox/Headless_mode\">Headless mode</a></li>\n              <li><a href=\"/ru/docs/Mozilla/JavaScript_code_modules\">Модули в JavaScript</a></li>\n              <li><a href=\"/ru/docs/Mozilla/js-ctypes\">JS-ctypes</a></li>\n              <li><a href=\"/ru/docs/Mozilla/MathML_Project\">Проект MathML</a></li>\n              <li><a href=\"/ru/docs/Mozilla/MFBT\">MFBT</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Projects\">Проекты Mozilla</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Preferences\">Система настроек</a></li>\n              <li><a href=\"/ru/docs/Mozilla/WebIDL_bindings\">WebIDL bindings</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Tech/XPCOM\">XPCOM</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Tech/XUL\">XUL</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Собрать Firefox из исходного кода и внести вклад в проект</summary>\n            <ol>\n              <li><a href=\"/ru/docs/Mozilla/Developer_guide/Build_Instructions\">Инструкции по сборке Firefox</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Developer_guide/Build_Instructions/Configuring_Build_Options\">Настройка правил сборки</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Developer_guide/Build_Instructions/How_Mozilla_s_build_system_works\">Как устроен механизм сборки</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Developer_guide/Source_Code/Mercurial\">Исходный код Mozilla</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Localization\">Локализация</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Mercurial\">Меркуриал</a></li>\n              <li><a href=\"/ru/docs/Mozilla/QA\">Контроль качества</a></li>\n              <li><a href=\"/ru/docs/Mozilla/Using_Mozilla_code_in_other_projects\">Использование кода Mozilla в других проектах</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div><p> </p>"}},{"type":"prose","value":{"id":"introduction","title":"Введение","isH3":true,"content":"<p><a href=\"/en-US/Firefox_1.5_for_developers\" title=\"en/Firefox_1.5_for_developers\">Firefox 1.5</a> использует кеширование целых Web-страниц, включая их JavaScript-состояния, в рамках сессии браузера. Переходы по посещённым страницам вперёд-назад не требуют загрузки страниц, а JavaScript-состояния сохраняются. Эта функция, обозначаемая иногда как <strong>bfcache</strong> (Back-Forward Cache), делает навигацию по страницам очень быстрой. Такое кешированное состояние сохраняется, пока пользователь не закроет браузер.</p>\n\n<p>Есть случаи, в которых Firefox не кеширует страницы. Вот некоторые обычные программные причины того, что страница не кеширована:</p>\n\n<ul>\n <li>страница использует обработчик <code>unload</code> или <code>beforeunload</code>;</li>\n <li>страница устанавливает заголовок «cache-control: no-store».</li>\n <li>доступ к сайту происходит по протоколу HTTPS, а страница устанавливает по меньшей мере один из следующих заголовков:\n  <ul>\n   <li>«Cache-Control: no-cache»</li>\n   <li>«Pragma: no-cache»</li>\n   <li>с заголовком «Expires: 0» or «Expires» со значением даты, лежащим в прошлом относительно значению заголовка «Date» (если только не указан также заголовок «Cache-Control: max-age=»);</li>\n  </ul>\n </li>\n <li>страница не полностью загрузилась, когда пользователь ушёл с неё, или имеет прерванные сетевые запросы по другим причинам (например, <code>XMLHttpRequest</code>));</li>\n <li>страница имеет работающие IndexedDB-транзакции;</li>\n <li>страница верхнего уровня содержит фреймы (например, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code> <small>(en-US)</small></a>), которые не кешируются по одной из перечисленных здесь причин;</li>\n <li>страница находится в фрейме и пользователь загружает новую страницу в этот фрейм (в этом случае, когда пользователь уходит со с этой страницы, последнее загруженное в фреймы содержимое есть то, что закешировано).</li>\n</ul>\n\n<p>Эта новая функция кеширования меняет поведение загрузки страницы, так что Web-авторы могут захотеть:</p>\n\n<ul>\n <li>узнать, когда на страницу происходит переход (когда она загружается из пользовательского кеша);</li>\n <li>определить поведение страницы, когда пользователь уходит со страницы (позволяя всё же странице быть закешированной).</li>\n</ul>\n\n<p>Это позволяют сделать два новых события браузера.</p>"}},{"type":"prose","value":{"id":"new_browser_events","title":"Новые события браузера","isH3":true,"content":"<p>Если вы используете эти новые события, ваши страницы продолжат правильно отображаться в других браузерах (мы протестировали старые версии Firefox, Internet Explorer, Opera и Safari), а при загрузке в Firefox 1.5 добавится новая функциональность кеширования.</p>\n\n<p>Примечание: по состоянию на октябрь 2009 года разработческие версии Safari добавили поддержку этих новых событий (см. <a class=\"link-https external\" href=\"https://bugs.webkit.org/show_bug.cgi?id=28758\" rel=\" noopener\">webkit-баг</a>).</p>\n\n<p>Стандартное поведение для Web-страниц следующее:</p>\n\n<ol>\n <li>Пользователь переходит на страницу.</li>\n <li>По мере загрузки страницы выполняются инлайновые скрипты.</li>\n <li>Как только страница загрузилась, срабатывает обработчик <code>onload</code>.</li>\n</ol>\n\n<p>Некоторые страницы включают четвёртый шаг. Если страница использует обработчик <code>unload</code> или <code>beforeunload</code> handler, он срабатывает прежде чем пользователь уходит со страницы. Если присутствует обработчик <code>unload</code>, эта страница не будет кеширована.</p>\n\n<p>Когда пользователь переходит на кешированную страницу, инлайновые скрипты и обработчик <code>onload</code> не запускаются (шаги 2 и 3), так как в большинстве случаев эффекты этих скриптов были сохранены.</p>\n\n<p>Если страница содержит скрипты или иное поведение, запускаемое в течение загрузки, которое вы хотите продолжить выполнять каждый раз, когда пользователь заходит на страницу, или если вы хотите знать, когда пользователь заходит на кешированную страницу, используйте новое событие <code>pageshow</code>.</p>\n\n<p>Если у вас есть поведение, запускаемое, когда пользователь уходит со страницы, но вы хотите воспользоваться новой функциональностью кеширования, и поэтому не хотите использовать обработчик unload, используйте новое событие <code>pagehide</code>.</p>\n\n<h4 id=\"pageshow_event\">Событие pageshow</h4>\n\n<p>Это событие работает так же, как событие <code>load</code>, но срабатывает каждый раз при загрузке страницы (в то время как событие <code>load</code> в Firefox 1.5 не срабатывает, когда страница загружается из кеша). При первой загрузке страницы событие <code>pageshow</code> срабатывает сразу после события <code>load</code>. Событие <code>pageshow</code> использует булевское свойство <code>persisted</code>, которое выставляется в <code>false</code> при начальной загрузке. Оно выставляется в <code>true</code>, если это не начальная загрузка (то есть когда страница уже кеширована).</p>\n\n<p>Выполняйте любой JavaScript-код, который должен отработать при каждой загрузке страницы, при срабатывании событий <code>pageshow</code>.</p>\n\n<p>Вызывая JavaScript-функции в обработчике события <code>pageshow</code>, вы можете обеспечить их вызов при загрузке страницы в браузерах, отличных от Firefox 1.5, вызывая этот обработчик в обработчике события <code>load</code>, как показано в примере ниже.</p>\n\n<h4 id=\"pagehide_event\">Событие pagehide</h4>\n\n<p>Если вы хотите определить поведение, которое происходит, когда пользователь уходит со страницы, но не хотите использовать событие <code>unload</code> (что воспрепятствовало бы кешированию страницы), вы можете использовать новое событие <code>pagehide</code>. Как и <code>pageshow</code>, событие <code>pagehide</code> использует булевское свойство <code>persisted</code>. Оно выставляется в <code>false</code>, если страница не кеширована в браузере, а в <code>true</code>,— если кеширована. Когда это свойство выставлено в <code>false</code>, обработчик <code>unload</code>, если он есть, вызывается сразу после события <code>pagehide</code>.</p>\n\n<p>Firefox 1.5 пытается имитировать события загрузки в том же порядке, в каком они срабатывают при начальной загрузке страницы. Фреймы обрабатываются таким же образом, что и документ верхнего уровня. Если страница содержит фреймы, то при загрузке кешированной страницы:</p>\n\n<ul>\n <li>События <code>pageshow</code> из каждого фрейма срабатывают перед событием <code>pageshow</code> в главном документе.</li>\n <li>Когда пользователь уходит с кешированной страницы, событие <code>pagehide</code> из каждого фрейма срабатывает перед событием <code>pagehide</code> в главном документе.</li>\n <li>Для навигации, происходящей внутри отдельного фрейма, события срабатывают только в затронутом фрейме.</li>\n</ul>\n\n<h4 id=\"pagehide_event\">Кеширование страницы несмотря на обработчики <code>unload</code> и <code>beforeunload</code></h4>\n\n<p>Если вы хотите использовать события <code>unload</code> или <code>beforeunload</code>, сохранив кеширование страницы, вы можете просто удалить эти события в обработчике события и восстановить их в обработчике <code>pageshow</code>, если возвращаетесь на эту страницу:</p>\n\n<pre class=\"notranslate\">window.addEventListener('pageshow', PageShowHandler, false);\nwindow.addEventListener('unload', UnloadHandler, false);\n\nfunction PageShowHandler() {\n\twindow.addEventListener('unload', UnloadHandler, false);\n}\n\nfunction UnloadHandler() {\n\twindow.removeEventListener('unload', UnloadHandler, false);\n}\n</pre>"}},{"type":"prose","value":{"id":"пример_кода","title":"Пример кода","isH3":true,"content":"<p>Приведённый ниже пример реализует страницу, которая использует обработчики <code>load</code> и <code>pageshow</code>. Поведение этой страницы следующее:</p>\n\n<ul>\n <li>В браузерах, отличных от Firefox 1.5, при каждой загрузке страницы происходит следующее: событие <code>load</code> вызывает функцию <code>onLoad</code>, которая вызывает функцию <code>onPageShow</code> (а также дополнительную функцию).</li>\n</ul>\n\n<ul>\n <li>В Firefox 1.5 при первой загрузке страницы событие <code>load</code> работает так же, как и в других браузерах. Кроме того, срабатывает событие <code>pageshow</code>, и, так как <code>persisted</code> установлено в <code>false</code>, не предпринимается никаких дополнительных действий.</li>\n</ul>\n\n<ul>\n <li>В Firefox 1.5 при загрузке страницы из кеша срабатывает только событие <code>pageshow</code>. Так как<code> persisted</code> установлено в <code>true</code>, вызывается только JavaScript-код в функции <code>onPageShow</code>.</li>\n</ul>\n\n<p>В этом примере:</p>\n\n<ul>\n <li>Страница вычисляет и отображает текущие дату и время каждый раз при загрузке. Это вычисление включает секунды и миллисекунды, так что вы легко можете протестировать функциональность.</li>\n <li>Курсор помещается в поле Name при первой загрузке страницы. В Firefox 1.5 при возвращении на страницу курсор остаётся в том поле, где он был, когда пользователь ушёл со страницы. В других браузерах курсор опять помещается в поле Name.</li>\n</ul>\n\n<pre class=\"notranslate\">&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n   \"http://www.w3.org/TR/html4/loose.dtd\"&gt;\n&lt;HTML&gt;\n&lt;head&gt;\n&lt;title&gt;Order query : Firefox 1.5 Example&lt;/title&gt;\n&lt;style type=\"text/css\"&gt;\nbody, p {\n\tfont-family: Verdana, sans-serif;\n\tfont-size: 12px;\n   \t}\n&lt;/style&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction onLoad() {\n\tloadOnlyFirst();\n\tonPageShow();\n}\n\nfunction onPageShow() {\n//вычисление текущего времени\n\tvar currentTime= new Date();\n\tvar year=currentTime.getFullYear();\n\tvar month=currentTime.getMonth()+1;\n\tvar day=currentTime.getDate();\n\tvar hour=currentTime.getHours();\n\tvar min=currentTime.getMinutes();\n\tvar sec=currentTime.getSeconds();\n\tvar mil=currentTime.getMilliseconds();\n\tvar displayTime = (month + \"/\" + day + \"/\" + year + \" \" +\n\t\thour + \":\" + min + \":\" + sec + \":\" + mil);\n\tdocument.getElementById(\"timefield\").value=displayTime;\n}\n\nfunction loadOnlyFirst() {\n\tdocument.zipForm.name.focus();\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onload=\"onLoad();\" onpageshow=\"if (event.persisted) onPageShow();\"&gt;\n&lt;h2&gt;Order query&lt;/h2&gt;\n\n&lt;form name=\"zipForm\" action=\"http://www.example.com/formresult.html\" method=\"get\"&gt;\n&lt;label for=\"timefield\"&gt;Date and time:&lt;/label&gt;\n&lt;input type=\"text\" id=\"timefield\"&gt;&lt;br&gt;\n&lt;label for=\"name\"&gt;Name:&lt;/label&gt;\n&lt;input type=\"text\" id=\"name\"&gt;&lt;br&gt;\n&lt;label for=\"address\"&gt;Email address:&lt;/label&gt;\n&lt;input type=\"text\" id=\"address\"&gt;&lt;br&gt;\n&lt;label for=\"order\"&gt;Order number:&lt;/label&gt;\n&lt;input type=\"text\" id=\"order\"&gt;&lt;br&gt;\n&lt;input type=\"submit\" name=\"submit\" value=\"Submit Query\"&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>Напротив, если приведённая выше страница не обрабатывает событие <code>pageshow</code> и выполняет все вычисления в обработчике события <code>load</code> (если код написан так, как показано в примере ниже), как положение курсора, так и дата/время в Firefox 1.5 будут кешированы, когда пользователь уйдёт со страницы. Когда пользователь вернётся на страницу, отобразятся кешированные дата/время.</p>\n\n<pre class=\"notranslate\">&lt;script&gt;\nfunction onLoad() {\n\tloadOnlyFirst();\n\n//calculate current time\n\tvar currentTime= new Date();\n\tvar year = currentTime.getFullYear();\n\tvar month = currentTime.getMonth()+1;\n\tvar day = currentTime.getDate();\n\tvar hour=currentTime.getHours();\n\tvar min=currentTime.getMinutes();\n\tvar sec=currentTime.getSeconds();\n\tvar mil=currentTime.getMilliseconds();\n\tvar displayTime = (month + \"/\" + day + \"/\" + year + \" \" +\n\t\thour + \":\" + min + \":\" + sec + \":\" + mil);\n\tdocument.getElementById(\"timefield\").value=displayTime;\n}\n\nfunction loadOnlyFirst() {\n\tdocument.zipForm.name.focus();\n}\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body onload=\"onLoad();\"&gt;\n</pre>"}},{"type":"prose","value":{"id":"developing_firefox_extensions","title":"Developing Firefox extensions","isH3":true,"content":"<p>Firefox 1.5 <a href=\"/en-US/Building_an_Extension\" title=\"en/Building_an_Extension\">extensions</a> need to allow for this caching functionality. If you are developing a Firefox extension that you want to be compatible with both 1.5 and earlier versions, make sure that it listens for the <code>load</code> event for triggers that can be cached and listens for the <code>pageshow</code> event for triggers that shouldn’t be cached.</p>\n\n<p>For instance, the Google Toolbar for Firefox should listen for the <code>load</code> event for the autolink function and to the <code>pageshow</code> event for the PageRank function in order to be compatible with both 1.5 and earlier versions.</p>\n\n<p></p>"}}],"toc":[],"summary":"Firefox 1.5 использует кеширование целых Web-страниц, включая их JavaScript-состояния, в рамках сессии браузера. Переходы по посещённым страницам вперёд-назад не требуют загрузки страниц, а JavaScript-состояния сохраняются. Эта функция, обозначаемая иногда как bfcache (Back-Forward Cache), делает навигацию по страницам очень быстрой. Такое кешированное состояние сохраняется, пока пользователь не закроет браузер.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using Firefox 1.5 caching","locale":"en-US","native":"English (US)"},{"title":"Utilisation du cache de Firefox 1.5","locale":"fr","native":"Français"},{"title":"Using Firefox 1.5 caching","locale":"ja","native":"日本語"},{"title":"Using Firefox 1.5 caching","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/mozilla/firefox/releases/1.5/using_firefox_1.5_caching","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/mozilla/firefox/releases/1.5/using_firefox_1.5_caching/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Mozilla","title":"Mozilla"},{"uri":"/ru/docs/Mozilla/Firefox","title":"Firefox"},{"uri":"/ru/docs/Mozilla/Firefox/Releases","title":"Замечания к релизу Firefox для разработчиков"},{"uri":"/ru/docs/Mozilla/Firefox/Releases/1.5","title":"Firefox 1.5 для разработчиков"},{"uri":"/ru/docs/Mozilla/Firefox/Releases/1.5/Using_Firefox_1.5_caching","title":"Использование кеширования в Firefox 1.5"}],"pageTitle":"Использование кеширования в Firefox 1.5 - Mozilla | MDN","noIndexing":false}}