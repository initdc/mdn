{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Как использовать GitHub Pages?","mdn_url":"/ru/docs/Learn/Common_questions/Using_Github_pages","locale":"ru","native":"Русский","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p class=\"summary\"><a href=\"https://github.com/\" class=\"external\" rel=\" noopener\">GitHub</a> — это сайт «социальной разработки». Он позволяет загружать репозитории кода для хранения <strong>в системе управления версиями</strong> <a href=\"http://git-scm.com/\" class=\"external\" rel=\" noopener\">Git</a>. После загрузки вы можете сотрудничать с другими участниками для работы над общим проектом, а ещё это система с открытым исходным кодом по умолчанию: любой человек в мире может найти ваш код на GitHub, использовать его, учиться по нему и улучшать его. Вы тоже можете взаимодействовать с кодом других людей! В этой статье представлено базовое руководство по публикации контента с использованием функции gh-pages Github.</p>"}},{"type":"prose","value":{"id":"публикация_контента","title":"Публикация контента","isH3":false,"content":"<p>GitHub — очень важное и полезное сообщество для участия, а Git/GitHub — очень популярная <a href=\"http://git-scm.com/book/ru/v2/%D0%92%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-%D0%9E-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B5-%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D1%8F-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D0%B9\" class=\"external\" rel=\" noopener\">система управления версиями</a> — большинство технологических компаний теперь использует её в своём рабочем процессе. У GitHub есть очень полезная функция <a href=\"https://pages.github.com/\" class=\"external\" rel=\" noopener\">GitHub Pages</a>, которая позволяет публиковать живую демонстрацию кода в виде сайта в Интернете.</p>"}},{"type":"prose","value":{"id":"базовая_установка_github","title":"Базовая установка Github","isH3":true,"content":"<ol>\n <li>Прежде всего, <a href=\"https://git-scm.com/downloads\" class=\"external\" rel=\" noopener\">установите Git</a> на свой компьютер. Это базовое программное обеспечение для управления версиями, поверх которого работает GitHub.</li>\n <li>Затем <a href=\"https://github.com/\" class=\"external\" rel=\" noopener\">зарегистрируйтесь на GitHub</a>. Это просто.</li>\n <li>После того, как вы зарегистрировались, войдите в свою учётную запись на <a href=\"https://github.com\" class=\"external\" rel=\" noopener\">github.com</a> с помощью своих имени пользователя и пароля.</li>\n</ol>"}},{"type":"prose","value":{"id":"подготовка_кода_для_загрузки","title":"Подготовка кода для загрузки","isH3":true,"content":"<p>В репозитории на Github вы можете хранить любой код, который вам нравится, но для полноценного использования функции GitHub Pages ваш код должен быть структурирован как типичный веб-сайт, то есть, основной точкой входа должен быть HTML-файл с именем <code>index.html</code>.</p>\n\n<p>Прежде чем двигаться дальше, вам необходимо инициализировать вашу папку (директорию) с кодом как репозиторий Git. Как это сделать:</p>\n\n<ol>\n <li>Направьте командную строку в вашу папку <code>test-site</code> (или папку с любым другим названием, содержащую ваш сайт). Для этого используйте команду <code>cd</code> (т.е. «<em>c</em>hange <em>d</em>irectory» — «поменяй директорию»). Вот что вы бы набрали, если бы разместили свой сайт в папке <code>test-site</code> на рабочем столе:\n\n  <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token builtin class-name\">cd</span> Desktop/test-site</code></pre></div>\n </li>\n <li>Когда командная строка указывает внутрь вашей папки веб-сайта, введите следующую команду, которая сообщает инструменту <code>git</code>, что папку нужно превратить в репозиторий git:\n  <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> init</code></pre></div>\n </li>\n</ol>\n\n<h4 id=\"дополнительно_об_интерфейсах_командной_строки\">Дополнительно об интерфейсах командной строки</h4>\n\n<p>Лучший способ загрузить код в Github — использовать командную строку. Это окно, в котором вы вводите команды, чтобы делать такие вещи, как создавать файлы и запускать программы, вместо того чтобы кликать внутри пользовательского интерфейса. Оно будет выглядеть примерно так:</p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/9483/command-line.png\" style=\"display: block; margin: 0px auto;\" loading=\"lazy\"></p>\n\n<div class=\"note notecard\" id=\"sect1\">\n<p><strong>Примечание</strong>: вы также можете использовать <a href=\"https://git-scm.com/downloads/guis\" class=\"external\" rel=\" noopener\">графический пользовательский интерфейс Git</a> для выполнения тех же задач, если вам неудобно работать с командной строкой.</p>\n</div>\n\n<p>Каждая операционная система поставляется с инструментом командной строки:</p>\n\n<ul>\n <li><strong>Windows</strong>: <strong>Командную строку</strong> (<strong>Command Prompt</strong>) можно вызвать, нажав клавишу Windows, набрав <em>Command Prompt</em> и выбрав её из появившегося списка. Обратите внимание, что в Windows свои собственные условные обозначения команд, отличные от Linux и OS X, поэтому приведённые ниже команды могут отличаться на вашем компьютере.</li>\n <li><strong>OS X</strong>: <strong>Терминал</strong> (<strong>Terminal</strong>) можно найти в <em>Applications &gt; Utilities</em>.</li>\n <li><strong>Linux</strong>: Обычно терминал можно вызвать с помощью <em>Ctrl + Alt + T</em>. Если это не сработает, найдите <strong>Terminal</strong> в панели приложений или меню.</li>\n</ul>\n\n<p>Сначала это может показаться немного пугающим, но не волнуйтесь — вы быстро разберётесь в основах. Вы говорите компьютеру что-то сделать в терминале, введя команду и нажав Enter, как показано выше.</p>"}},{"type":"prose","value":{"id":"создание_репозитория_для_вашего_кода","title":"Создание репозитория для вашего кода","isH3":true,"content":"<ol>\n <li>Затем вам нужно создать новый репозиторий для ваших файлов. Нажмите «Плюс» (+) в правом верхнем углу главной страницы GitHub и выберите «Новый репозиторий» (<em>New Repository</em>).</li>\n <li>На этой странице в поле «Имя репозитория» (<em>Repository name</em>) введите имя для своего репозитория, например <em>my-repository</em>.</li>\n <li>Также добавьте описание, чтобы уточнить, что будет содержать ваш репозиторий. Ваш экран должен выглядеть так:<br>\n  <img alt=\"\" src=\"https://mdn.mozillademos.org/files/12143/create-new-repo.png\" style=\"display: block; margin: 0px auto;\" loading=\"lazy\"></li>\n <li>Нажмите «Создать репозиторий» (<em>Create repository</em>); откроется следующая страница:<br>\n  <img alt=\"\" src=\"https://mdn.mozillademos.org/files/12141/github-repo.png\" style=\"display: block; margin: 0px auto;\" loading=\"lazy\"></li>\n</ol>"}},{"type":"prose","value":{"id":"загрузка_файлов_на_github","title":"Загрузка файлов на GitHub","isH3":true,"content":"<ol>\n <li>На текущей странице вас интересует раздел <em>…or push an existing repository from the command line</em> («...или загрузите существующий репозиторий с помощью командной строки»). В этом разделе вы должны увидеть две строки кода. Скопируйте всю первую строку, вставьте её в командную строку и нажмите Enter. Команда должна выглядеть примерно так:\n\n  <pre class=\"notranslate\">git remote add origin https://github.com/chrisdavidmills/my-repository.git</pre>\n </li>\n <li>Затем введите следующие две команды, нажимая Enter после каждой из них. Они готовят код для загрузки в GitHub и просят Git управлять этими файлами.\n  <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> <span class=\"token function\">add</span> --all\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">'adding my files to my repository'</span></code></pre></div>\n </li>\n <li>Наконец, загрузите код на GitHub, для чего вернитесь к текущей веб-странице GitHub и введите в терминал вторую из двух команд, которые мы увидели в секции <em>…or push an existing repository from the command line</em>:\n  <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> push -u origin main</code></pre></div>\n </li>\n <li>Теперь вам нужно включить функционал GitHub Pages для своего репозитория. Чтобы сделать это, зайдите на страницу своего репозитория и выберите «Настройки» (<em>Settings</em>), затем выберите <em>Pages</em> на панели слева. В разделе <em>Source</em> выберите ветку main. Страница должна обновиться.</li>\n <li>Перейдите в раздел GitHub Pages снова. Вы должны увидеть надпись «Ваш сайт готов к публикации на https://xxxxxx» («Your site is ready to be published at https://xxxxxx»).</li>\n <li>Если вы кликните на ссылку, вам должна открыться страница с живой демонстрацией вашего примера, при условии, что домашняя страница называется <code>index.html</code> — по умолчанию ссылка ведет именно на неё. Если точка входа на ваш сайт называется как-то иначе, например <code>myPage.html</code>, то чтобы увидеть её, вам нужно открыть <code>https://xxxxxx/myPage.html</code>.</li>\n</ol>"}},{"type":"prose","value":{"id":"больше_информации_о_github","title":"Больше информации о GitHub","isH3":true,"content":"<p>Если вы хотите поменять что-то на своем тестовом сайте и загрузить результат на GitHub, вам просто нужно внести изменения в свои файлы, как и раньше. Затем вам потребуется ввести следующие команды (нажимая Enter после каждой), чтобы загрузить их на GitHub:</p>\n\n<pre class=\"notranslate\">git add --all\ngit commit -m 'another commit'\ngit push</pre>\n\n<p>Вы можете написать более подходящее сообщение вместо <em>another commit</em>, чтобы уточнить, что именно вы только что изменили.</p>\n\n<p>Мы едва коснулись Git. Чтобы узнать больше, начните с нашей статьи <a href=\"/ru/docs/Learn/Tools_and_testing/GitHub\">Git и GitHub</a>.</p>"}}],"toc":[{"text":"Публикация контента","id":"публикация_контента"}],"summary":"GitHub — это сайт «социальной разработки». Он позволяет загружать репозитории кода для хранения в системе управления версиями Git. После загрузки вы можете сотрудничать с другими участниками для работы над общим проектом, а ещё это система с открытым исходным кодом по умолчанию: любой человек в мире может найти ваш код на GitHub, использовать его, учиться по нему и улучшать его. Вы тоже можете взаимодействовать с кодом других людей! В этой статье представлено базовое руководство по публикации контента с использованием функции gh-pages Github.","popularity":0.0023,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"How do I use GitHub Pages?","locale":"en-US","native":"English (US)"},{"title":"¿Cómo se utiliza Github pages?","locale":"es","native":"Español"},{"title":"Utiliser les pages GitHub","locale":"fr","native":"Français"},{"title":"GitHub Pages を使うには？","locale":"ja","native":"日本語"},{"title":"How do I use GitHub Pages?","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"应该如何使用 Github Pages?","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/learn/common_questions/using_github_pages","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/learn/common_questions/using_github_pages/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Learn","title":"Изучение веб-разработки"},{"uri":"/ru/docs/Learn/Common_questions","title":"Распространённые вопросы"},{"uri":"/ru/docs/Learn/Common_questions/Using_Github_pages","title":"Как использовать GitHub Pages?"}],"pageTitle":"Как использовать GitHub Pages? - Изучение веб-разработки | MDN","noIndexing":false}}