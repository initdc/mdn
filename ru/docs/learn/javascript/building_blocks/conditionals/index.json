{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Принятие решений в вашем коде — условные конструкции","mdn_url":"/ru/docs/Learn/JavaScript/Building_blocks/conditionals","locale":"ru","native":"Русский","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/Getting_started_with_the_web\"><strong>Новички начинают здесь!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Начало работы с Вебом</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web\">Начало работы с Вебом</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Установка базового программного обеспечения</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">Каким должен быть ваш веб-сайт?</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Работа с файлами</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/HTML_basics\">Основы HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/CSS_basics\">Основы CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">Основы JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Публикация вашего веб-сайта</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Как работает Веб</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/HTML\"><strong>HTML — структура Веба</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Вступление в HTML</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML\">Вступление в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Начало работы с HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">Что в \"шапке\"? Метаданные в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">Тексты в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Создание гиперссылок</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Продвинутое форматирование текста</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Структура документа и веб-сайта</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Отладка HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Задание: Выделение символа</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Задание: Структура страницы</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Мультимедиа и встраивание</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding\">Мультимедиа и встраивание</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Изображения в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Видео и аудио контент</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">От object до iframe — другие технологии встраивания</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Добавление векторный графики в Веб</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Отзывчивые изображения</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Задание: Страница о Mozilla</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML tables</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables\">HTML tables overview</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/CSS\"><strong>CSS — стилизирование Веба</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS first steps</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Стилизирование текста</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text\">Стилизирование текста</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Fundamentals\">Основы стилизирования текста и шрифта</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Styling_lists\">Стилизирование списков</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Styling_links\">Стилизирование ссылок</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Web_fonts\">Веб-шрифты</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Задание: Стилизирование школьного сайта</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS макет</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout\">CSS макет</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Grids\">Сетки</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Floats\">Float</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Positioning\">Позиционирование</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/ru/docs/Learn/JavaScript\"><strong>JavaScript — динамический клиентский скриптинг</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Первые шаги в JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps\">Первые шаги в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">Что такое JavaScript?</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/A_first_splash\">Первое погружение в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/What_went_wrong\">Что-то пошло не так? Устранение ошибок JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Variables\">Хранение нужной информации — Переменные</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Math\">Основы JavaScript — Числа и операторы</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Strings\">Работа с текстом — Строки в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Полезные методы для строк</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Arrays\">Массивы</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Задание: Генератор глупых историй</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>Блоки в JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks\">Блоки в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/conditionals\">Делаем решения в вашем годе — Условия</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Looping_code\">Повторение кода</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Functions\">Функции — Переиспользуемые блоки кода</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Создаём свою функцию</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Return_values\">Возвращаемые значения функций</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Events\">Введение в события</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Задание: Галерея изображений</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Введение в объекты JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects\">Введение в объекты JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Basics\">Основы объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object_prototypes\">Прототипы объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/JSON\">Работа с JSON данными</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object_building_practice\">Практика по созданию объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Задание: Добавление возможностей в пример с прыгающими шарами</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web APIs</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility guides</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Accessibility\">Accessibility overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility assessment</summary>\n        <ol>\n            <li><a href=\"/ru/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Tools_and_testing\"><strong>Инструменты и тестирование</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Кроссбраузерное тестирование</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing\">Кроссбраузерное тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Вступление в кроссбраузерное тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Стратегии выполнения тестирования</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Решение частых проблем с HTML и CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Решение частых проблем с JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Решение частых проблем доступности</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Проверка поддержки возможностей</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Вступление в автоматическое тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Установка вашей автоматической среды тестирования</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/Server-side\"><strong>Программирование серверной части сайта</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Первые шаги</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps\">Первые шаги</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Introduction\">Вступление в серверное программирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Client-Server_overview\">Клиент-сервер</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Web_frameworks\">Веб-фреймворки для серверной части</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Website_security\">Защищённость веб-сайтов</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Веб-фреймворк Django (Python)</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django\">Веб-фреймворк Django (Python)</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Introduction\">Вступление</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/development_environment\">Установка среды разработки</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Руководство: Сайт местной библиотеки</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/skeleton_website\">Руководство часть 2: Создаём набросок сайта</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Models\">Руководство часть 3: Использование моделей</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Admin_site\">Руководство часть 4: Django панель администратора</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Home_page\">Руководство часть 5: Создание нашей домашней страницы</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Generic_views\">Руководство часть 6: Списки и представления</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Sessions\">Руководство часть 7: Сессии</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Authentication\">Руководство часть 8: Аутенфикация и разрешения пользователей</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Forms\">Руководство часть 9: Работа с формами</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Testing\">Руководство часть 10: Тестирование веб-приложения на Django</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Deployment\">Руководство часть 11: Разворачивание Django на продакшн сервере</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/web_application_security\">Защищённость веб-приложения</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/django_assessment_blog\">Задание: создание мини блога</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript) overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node (Express) development environment</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express tutorial: The Local Library website</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Дальнейшее чтение</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Общие вопросы</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/HTML/Howto\">Вопросы по HTML</a></li>\n          <li><a href=\"/ru/docs/Learn/CSS/Howto\">Вопросы по CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Web_mechanics\">Как работает Веб</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Tools_and_setup\">Инструменты и установка</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Design_and_accessibility\">Дизайн и доступность</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"><ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/JavaScript/Building_blocks\"> Обзор: Building blocks</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/JavaScript/Building_blocks/Looping_code\"> Далее  </a></li>\n</ul></div>\n\n<p class=\"summary\">Во многих языках программирования код должен иметь возможность принимать решения на основе введённых пользователем данных. Например, в игре, если у пользователя осталось 0 жизней, то игра завершается. В приложении о погоде утром отображается восход солнца, а вечером звезды и луна. В этой статье мы рассмотрим как в  JavaScript работают так называемые \"условия\".</p>\n\n<table>\n <tbody>\n  <tr>\n   <th scope=\"row\">Необходимое условие:</th>\n   <td>Базовая компьютерная грамотность, базовое понимание HTML и CSS, <a href=\"/en-US/docs/Learn/JavaScript/First_steps\">JavaScript first steps</a>.</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Цель:</th>\n   <td>Понять принципы использования операторов условий в JavaScript.</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"выбор_одного_условия!..","title":"Выбор одного условия!..","isH3":false,"content":"<p>Люди (и животные) принимают какие-либо решения всю жизнь, от малозначимых (\"стоит ли мне съесть одну печеньку или две?\") до жизнеопределяющих (\"стоит ли мне остаться дома и работать на ферме отца или переехать в другую страну и изучать астрофизику?\")</p>\n\n<p>Операторы условия в JavaScript позволяют нам указать разного рода действия в зависимости от выбранного пользователем или системой ответа (например одна печенька или две) и связать его с действием (результатом), например, результатом \"съесть одну печеньку\" будет \"все ещё буду чувствовать себя голодным\", а результатом \"съесть две печеньки\" будет \"буду чувствовать себя сытым, но мама меня поругает за то, что я съел все сладости\". </p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/13703/cookie-choice-small.png\" style=\"display: block; margin: 0 auto;\" loading=\"lazy\"></p>"}},{"type":"prose","value":{"id":"оператор_if_..._else","title":"Оператор if ... else","isH3":false,"content":"<p>Давайте глянем на наиболее распространённый тип условного оператора, который вы будете использовать в JavaScript — <code><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/if...else\">if ... else</a></code><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/if...else\"> оператор</a>.</p>"}},{"type":"prose","value":{"id":"базовый_if_..._else_синтаксис","title":"Базовый if ... else синтаксис","isH3":true,"content":"<p>Базовый <code>if...else</code> синтаксис выглядит как <a href=\"/ru/docs/Glossary/Pseudocode\">pseudocode</a>:</p>\n\n<pre class=\"notranslate\">if (condition) {\n  code to run if condition is true\n} else {\n  run some other code instead\n}</pre>\n\n<p>Что мы имеем:</p>\n\n<ol>\n <li>Ключевое слово <code>if</code> расположено перед круглыми скобками.</li>\n <li>Условие для проверки (condition), расположено внутри круглых скобок (например \"это значение больше другого значения?\", или \"это значение существует?\"). Это условие использует операторы сравнения (<a href=\"/en-US/docs/Learn/JavaScript/First_steps/Math#comparison_operators\">comparison operators</a>), которые мы изучим позже, и возвратит нам <code>true</code> или <code>false</code>.</li>\n <li>Внутри скобок { } расположен код, который будет выполняться только в том случае, если условие (condition) верно (<code>true)</code>.</li>\n <li>Ключевое слово <code>else (иначе)</code>.</li>\n <li>Ещё скобки { }, код внутри которых выполнится, только если условие не верно (не <code>true)</code>.</li>\n</ol>\n\n<p>Этот код довольно читабелен — он говорит \"<strong>if (если)</strong>  <strong>condition (условие) </strong>возвращает <code>true (истина)</code>, запусти код A, <strong>else (иначе) </strong>запусти B\"</p>\n\n<p>Стоит заметить, что  <code>else</code> и второй блок скобок { } не обязателен — следующий код так же будет работать:</p>\n\n<pre class=\"notranslate\">if (condition) {\n  код, который должен выполнить, если условие истина\n}\n\nкакой-то другой код</pre>\n\n<p>Тем не менее, следует быть осторожным — в случае, если код внутри вторых скобок { } не контролируется условием, то этот код будет выполняться <strong>всегда</strong>. Это не плохо, просто вы должны помнить об этом, чаще вы хотите запустить один кусок кода <em>или </em>другой, но не оба.</p>\n\n<p>И, наконец, иногда вы можете встретить код <code>if...else</code> без фигурных скобок в сокращённой форме:</p>\n\n<pre class=\"notranslate\">if (condition) code to run if condition is true\nelse run some other code instead</pre>\n\n<p>Это абсолютно рабочий код, но он менее читаем, лучше использовать фигурные скобки, новые строки и отступы.</p>"}},{"type":"prose","value":{"id":"реальный_пример","title":"Реальный пример","isH3":true,"content":"<p>Чтобы лучше понять синтаксис, давайте рассмотрим реальный пример. Представьте, что мать или отец попросили помочь с работой по дому своего ребёнка.  Родитель может сказать: \"Если ты поможешь мне с покупками, то я дам тебе дополнительные деньги на карманные расходы, которые ты сможешь потратить на игрушку, какую захочешь\".  В JavaScript, мы можем представить это так: </p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> shoppingDone <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>shoppingDone <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> childsAllowance <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> childsAllowance <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>В этом коде, как показано, всегда будет <code>shoppingDone</code> равный <code>false</code>, что означает разочарование для нашего бедного ребёнка. Мы должны предоставить механизм для родителя, чтобы установить для переменной <code>shoppingDone</code> значение  <code>true</code> , если ребёнок помог с покупками.</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Примечание</strong>: вы можете увидеть больше в <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/building-blocks/allowance-updater.html\" class=\"external\" rel=\" noopener\">полной версии этого примера на GitHub</a> (также посмотреть как он <a href=\"https://mdn.github.io/learning-area/javascript/building-blocks/allowance-updater.html\" class=\"external\" rel=\" noopener\">работает вживую</a>.)</p>\n</div>"}},{"type":"prose","value":{"id":"else_if","title":"else if","isH3":true,"content":"<p>В предыдущем примере предоставлено два выбора, или результата — но что, если мы хотим больше, чем два?</p>\n\n<p>Существует способ привязать дополнительные варианты/результаты к вашему <code>if...else</code> — использовать<code>else if</code>. Для каждого дополнительного выбора требуется дополнительный блок, который нужно расположить между <code>if() { ... }</code> и <code>else { ... }</code> — проверьте следующий более сложный пример, который может быть частью простого приложения прогноза погоды:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>weather<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Выберите тип погоды сегодня: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>weather<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>--Сделайте выбор--<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sunny<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Солнечно<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rainy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Дождливо<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>snowing<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Снежно<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>overcast<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Облачно<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> select <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'select'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> para <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nselect<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> setWeather<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">setWeather</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> choice <span class=\"token operator\">=</span> select<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>choice <span class=\"token operator\">===</span> <span class=\"token string\">'sunny'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Сегодня хорошо и солнечно. Носите шорты! Идите на пляж, или в парк, и купите мороженое.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>choice <span class=\"token operator\">===</span> <span class=\"token string\">'rainy'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Дождь падает за окном; возьмите плащ и зонт, и не находитесь слишком долго на улице.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>choice <span class=\"token operator\">===</span> <span class=\"token string\">'snowing'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Снег падает - морозно! Лучше всего посидеть с чашкой горячего шоколада или слепить снеговика.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>choice <span class=\"token operator\">===</span> <span class=\"token string\">'overcast'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Дождя нет, но небо серое и мрачное; он все может измениться в любую минуту, поэтому на всякий случай возьмите дождевик.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n\n<p><iframe class=\"sample-code-frame\" title=\"else if sample\" id=\"frame_else_if\" width=\"100%\" height=\"100\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Learn/JavaScript/Building_blocks/conditionals/_sample_.else_if.html\" loading=\"lazy\"></iframe></p>\n\n<ol>\n <li>Здесь у нас есть элемент HTML <a href=\"/ru/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> который позволяет нам выбирать разные варианты погоды и простой абзац.</li>\n <li>В JavaScript мы создаём ссылки на элементы <a href=\"/ru/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> и <a href=\"/ru/docs/Web/HTML/Element/p\"><code>&lt;p&gt;</code></a> и добавляем обработчик события элемента <code>&lt;select&gt;</code>, чтобы при его изменении значения запускалась функция <code>setWeather()</code>.</li>\n <li>Когда функция будет запущена, первоначально мы определим значение переменной <code>choice</code>, которая равна выбранному значению в элементе  <code>&lt;select&gt;</code>. Затем мы используем условный оператор для отображения текста внутри абзаца в зависимости от того, какое значение у переменной  <code>choice</code>. Обратите внимание, как все условия проверяются в <code>else if() {...}</code> блоках, за исключением первого, который использует <code>if() {...}</code>блок.</li>\n <li>Последний выбор, внутри  <code>else {...}</code> блока, в основном является «последним средством» — код внутри него будет запущен, если ни одно из условий не будет <code>true</code>. В этом случае он служит для удаления текста из абзаца, если ничего не выбрано, например, если пользователь решает повторно выбрать опцию \"--Сделайте выбор--\" которая указана в начале.</li>\n</ol>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Примечание</strong>: вы можете <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/building-blocks/simple-else-if.html\" class=\"external\" rel=\" noopener\">найти этот пример на GitHub</a> (также <a href=\"https://mdn.github.io/learning-area/javascript/building-blocks/simple-else-if.html\" class=\"external\" rel=\" noopener\">увидеть как он работает</a>)</p>\n</div>"}},{"type":"prose","value":{"id":"примечание_об_операторах_сравнения","title":"Примечание об операторах сравнения","isH3":true,"content":"<p>Операторы сравнения используют для проверки условий внутри наших условных операторов. Сначала мы посмотрели на операторы сравнения в  нашей статье <a href=\"/ru/docs/Learn/JavaScript/First_steps/Math#comparison_operators\">Базовая математика в JavaScript — цифры и операторы</a> . Наш выбор это:</p>\n\n<ul>\n <li><code>===</code> и <code>!==</code> — проверяет одно значение идентично или не идентично другому.</li>\n <li><code>&lt;</code> и <code>&gt;</code> — проверяет одно значение меньше или больше, чем другое.</li>\n <li><code>&lt;=</code> и <code>&gt;=</code> — проверяет одно значение меньше или равно, либо больше или равно другому.</li>\n</ul>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p><strong>Примечание</strong>: Просмотрите материал по предыдущей ссылке, если вы хотите освежить свою память.</p>\n</div>\n\n<p>Мы хотели бы особо обратить внимание на проверку булевых значений (<code>true</code>/<code>false</code>),  и общий шаблон, который вы будете встречать снова и снова. Любое значение, которое не есть  <code>false</code>, <code>undefined</code>, <code>null</code>, <code>0</code>, <code>NaN</code>, или пустая строка (<code>''</code>) фактически возвращает <code>true</code> при тестировании как условного оператора. Поэтому вы можете просто использовать имя собственной переменной, чтобы проверить, равна ли она <code>true</code>, или существует (т. е. переменная не равна undefined). Например:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> cheese <span class=\"token operator\">=</span> <span class=\"token string\">'Cheddar'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cheese<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Ура! Есть сыр для приготовления бутерброда.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Сегодня нет сыра для бутерброда.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>И, возвращаясь к нашему предыдущему примеру о ребёнке, выполняющем поручение своего родителя, вы можете это записать так:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> shoppingDone <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>shoppingDone<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// не нужно явно указывать '=== true'</span>\n  <span class=\"token keyword\">var</span> childsAllowance <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> childsAllowance <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},{"type":"prose","value":{"id":"вложенность_if_..._else","title":"Вложенность if ... else","isH3":true,"content":"<p>Вполне нормально использовать один условный оператор <code>if...else</code> внутри другого — вложить их. Например, мы могли бы обновить наше приложение прогноза погоды, чтобы показать ещё один набор вариантов в зависимости от температуры:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>choice <span class=\"token operator\">===</span> <span class=\"token string\">'sunny'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>temperature <span class=\"token operator\">&lt;</span> <span class=\"token number\">86</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Сейчас '</span> <span class=\"token operator\">+</span> temperature <span class=\"token operator\">+</span> <span class=\"token string\">' градусов по фаренгейту — хорошо и солнечно. Идите на пляж, или в парк, и купите мороженое.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>temperature <span class=\"token operator\">&gt;=</span> <span class=\"token number\">86</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Сейчас '</span> <span class=\"token operator\">+</span> temperature <span class=\"token operator\">+</span> <span class=\"token string\">' градусов по фаренгейту — Жара! Если вы хотите выйти на улицу, обязательно используйте солнцезащитный крем.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Несмотря на то, что весь код работает вместе, каждый условный оператор <code>if...else</code> работает полностью отдельно от другого.</p>"}},{"type":"prose","value":{"id":"логические_операторы_и_или_и_не","title":"Логические операторы: И, ИЛИ и НЕ","isH3":true,"content":"<p>Если вы хотите проверить несколько условий без записи вложенных <code>if...else</code> условий, <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\">логические операторы</a> помогут вам. При использовании в условиях, первые два оператора делают следующее:</p>\n\n<ul>\n <li><code>&amp;&amp;</code> — И; позволяет объединить два или более выражения так, что каждое из них отдельно должно иметь значение <code>true</code> , чтобы в итоге общее выражение имело значение <code>true</code>.</li>\n <li><code>||</code> — ИЛИ; позволяет объединить два или более выражения так, что одно или несколько из них должно иметь значение <code>true</code> , чтобы в итоге общее выражение имело значение<code>true</code>.</li>\n</ul>\n\n<p>Чтобы дать вам пример оператора И, предыдущий фрагмент кода можно переписать так:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>choice <span class=\"token operator\">===</span> <span class=\"token string\">'sunny'</span> <span class=\"token operator\">&amp;&amp;</span> temperature <span class=\"token operator\">&lt;</span> <span class=\"token number\">86</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Сейчас '</span> <span class=\"token operator\">+</span> temperature <span class=\"token operator\">+</span> <span class=\"token string\">' градусов по фаренгейту — хорошо и солнечно. Идите на пляж, или в парк, и купите мороженое.'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>choice <span class=\"token operator\">===</span> <span class=\"token string\">'sunny'</span> <span class=\"token operator\">&amp;&amp;</span> temperature <span class=\"token operator\">&gt;=</span> <span class=\"token number\">86</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Сейчас '</span> <span class=\"token operator\">+</span> temperature <span class=\"token operator\">+</span> <span class=\"token string\">' градусов по фаренгейту — Жара! Если вы хотите выйти на улицу, обязательно используйте солнцезащитный крем.'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Так, для примера, первый блок кода выполнится только в том случае, если  <code>choice === 'sunny'</code> <em>и</em><code>temperature &lt; 86</code> вернут значение <code>true</code>.</p>\n\n<p>Давайте посмотрим на быстрый пример оператора ИЛИ:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iceCreamVanOutside <span class=\"token operator\">||</span> houseStatus <span class=\"token operator\">===</span> <span class=\"token string\">'в огне'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//если подъехал фургон с мороженым или дом горит</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Вы должны быстро покинуть дом.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Вероятно, можно в нем оставаться.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Последний тип логического оператора НЕ, выраженный <code>!</code> оператором, можно использовать для отрицания выражения. Давайте объединим его с ИЛИ в приведённом выше примере:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>iceCreamVanOutside <span class=\"token operator\">||</span> houseStatus <span class=\"token operator\">===</span> <span class=\"token string\">'on fire'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Вероятно, можно в нем оставаться.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Вы должны быстро покинуть дом.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>В этом фрагменте, если условие ИЛИ возвращает <code>true</code>, оператор НЕ будет отрицать это и выражение вернёт <code>false</code>.</p>\n\n<p>Можно сочетать любое количество логических операторов, в любой последовательности и в любой комбинации. В следующем примере код в блоке будет выполняться только в том случае, если оба условия с ИЛИ возвращают true, а следовательно, и оператор И возвращает true:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">===</span> <span class=\"token number\">5</span> <span class=\"token operator\">||</span> y <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span> <span class=\"token operator\">||</span> z <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>loggedIn <span class=\"token operator\">||</span> userName <span class=\"token operator\">===</span> <span class=\"token string\">'Steve'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// код выполняется</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Распространённой ошибкой при использовании логического оператора ИЛИ в условном выражении является указание переменной, значение которой нужно проверить со списком возможных значений этой переменной, разделённых операторами <code>||</code> (ИЛИ). Например.</p>\n\n<div class=\"code-example\"><pre class=\"example-bad brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">===</span> <span class=\"token number\">5</span> <span class=\"token operator\">||</span> <span class=\"token number\">7</span> <span class=\"token operator\">||</span> <span class=\"token number\">10</span> <span class=\"token operator\">||</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// выполнить код</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>В данном примере условие в <code>if(...)</code>  всегда будет оцениваться как true, поскольку 7 (или любое другое ненулевое значение) всегда будет оцениваться как true. Фактически, это условие гласит «если х равен 5, или 7 является true». Но нам требуется совсем не это. Чтобы достичь нужной цели, придётся выполнять полноценную проверку после каждого оператора ИЛИ:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">===</span> <span class=\"token number\">5</span> <span class=\"token operator\">||</span> x <span class=\"token operator\">===</span> <span class=\"token number\">7</span> <span class=\"token operator\">||</span> x <span class=\"token operator\">===</span> <span class=\"token number\">10</span> <span class=\"token operator\">||</span>x <span class=\"token operator\">===</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// выполнить код</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},{"type":"prose","value":{"id":"оператор_switch","title":"Оператор switch","isH3":false,"content":"<p>Выражения <code>if...else</code> отлично справляются с добавлением условного кода, однако они не лишены недостатков. Они хорошо подходят для ситуации, когда имеется всего пара вариантов развития событий, каждый из которых имеет блок с приемлемым количеством кода, а также в случаях, когда условие является довольно сложным и включает несколько логических операторов. Если же нам требуется всего лишь задать переменную для определённого выбранного значения или напечатать конкретную фразу при определённом условии, изученный нами синтаксис может оказаться довольно громоздким, особенно если имеется большое количество вариантов выбора.</p>\n\n<p>В этом случае нам поможет <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/switch\">оператор <code>switch</code> </a>– он принимает одно единственное выражение или значение, а затем просматривает ряд вариантов, пока не найдут вариант, соответствующий этому значению, после чего выполняет код, назначенный этому варианту. Вот пример использования этого оператора:</p>\n\n<pre class=\"notranslate\">switch (выражение) {\n  case choice1:\n    выполнить этот код\n    break;\n\n  case choice2:\n    выполнить этот код, а не предыдущий\n    break;\n\n  // вариантов может быть любое количество\n\n  default:\n    а вообще-то, выполнить только этот код\n}</pre>\n\n<p>Что мы имеем:</p>\n\n<ol>\n <li>Ключевое слово <code>switch</code>, за которым следует пара круглых скобок.</li>\n <li>В скобках приводится выражение или значение.</li>\n <li>Ключевое слово <code>case</code>, за которым следует вариант выбора (именно он проверяется на соответствие выражению или значению) и двоеточие.</li>\n <li>Код, который будет выполняться, если вариант совпадает с выражением.</li>\n <li>Оператор <code>break</code>, за которым следует точка с запятой. Если вариант совпал с выражением или значением, браузер закончит выполнять блок кода, дойдя до оператора <code>break</code>, и перейдёт к выполнению кода, расположенного после оператора switch.</li>\n <li>Вариантов выбора (пункты 3–5) может быть любое количество.</li>\n <li>Ключевое слово <code>default</code> используется точно также, как любой другой вариант выбора (пункты 3–5) за тем исключением, что после <code>default</code> нет других вариантов выбора, поэтому инструкция <code>break</code> не требуется, никакого кода дальше нет. Это вариант выбора по умолчанию, выбираемый, если ни один из других вариантов не совпал с выражением.</li>\n</ol>\n\n<div class=\"note notecard\" id=\"sect6\">\n<p><strong>Примечание.</strong> Вариант выбора <code>default</code> может быть пропущен, если выражение гарантированно совпадёт с одним из вариантов выбора. В противном случае вариант <code>default</code> необходим.</p>\n</div>"}},{"type":"prose","value":{"id":"пример_оператора_switch","title":"Пример оператора switch","isH3":true,"content":"<p>Давайте рассмотрим реальный пример — перепишем наше приложение прогноза погоды с использованием оператора switch:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>weather<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Выберите тип погоды сегодня: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>weather<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>--Сделайте выбор--<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sunny<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Солнечно<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rainy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Дождливо<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>snowing<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Снежно<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>overcast<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Облачно<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> select <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'select'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> para <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nselect<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> setWeather<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">setWeather</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> choice <span class=\"token operator\">=</span> select<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'sunny'</span><span class=\"token operator\">:</span>\n      para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Сегодня хорошо и солнечно. Наденьте шорты! Идите на пляж или в парк, и купите мороженое.'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'rainy'</span><span class=\"token operator\">:</span>\n      para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'На улице дождь. Возьмите плащ и зонт, и не гуляйте слишком долго'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'snowing'</span><span class=\"token operator\">:</span>\n      para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Идёт снег - морозно! Лучше всего посидеть с чашкой горячего шоколада или слепить снеговика.'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'overcast'</span><span class=\"token operator\">:</span>\n      para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Дождя нет, но небо серое и мрачное; он все может измениться в любую минуту, поэтому на всякий случай возьмите дождевик.'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p><iframe class=\"sample-code-frame\" title=\"Пример оператора switch sample\" id=\"frame_пример_оператора_switch\" width=\"100%\" height=\"100\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Learn/JavaScript/Building_blocks/conditionals/_sample_.%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80_%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D0%B0_switch.html\" loading=\"lazy\"></iframe></p>\n\n<div class=\"note notecard\" id=\"sect7\">\n<p><strong>Note</strong>: вы можете <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/building-blocks/simple-switch.html\" class=\"external\" rel=\" noopener\">найти этот пример на GitHub</a> (также увидеть <a href=\"https://mdn.github.io/learning-area/javascript/building-blocks/simple-switch.html\" class=\"external\" rel=\" noopener\">как он работает</a>.)</p>\n</div>"}},{"type":"prose","value":{"id":"тернарный_оператор","title":"Тернарный оператор","isH3":false,"content":"<p>Это последний теоретический раздел данной статьи и мы перейдём к практическим упражнениям. <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Тернарный или условный оператор</a> имеет простой синтаксис: он проверяет условие и возвращает одно значение или выражение, если условие является <code>true</code>, и другое значение/выражение, если условие является <code>false</code>. Часто это очень удобная альтернатива блоку <code>if...else</code>, позволяющая затрачивать меньшие усилия на написание кода, когда имеется всего лишь два варианта, выбираемых на основе условия <code>true</code>/<code>false</code>. Общая схема оператора:</p>\n\n<pre class=\"notranslate\">( условие) ? выполнить этот код : выполнить этот код вместо первого</pre>\n\n<p>Приведём простой пример:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> greeting <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> isBirthday <span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'С днём рождения, г-н Кузнецов! Хорошо вам повеселиться!'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Доброе утро, г-н Кузнецов.'</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>У нас есть переменная <code>isBirthday</code> , если она <code>true</code>, мы отправляем посетителю поздравление с днём рождения; если нет – выдаём стандартное приветствие.</p>"}},{"type":"prose","value":{"id":"пример_тернарного_оператора","title":"Пример тернарного оператора","isH3":true,"content":"<p>При использовании тернарного оператора не обязательно ограничиваться лишь значениями переменной, можно выполнять функции или строки кода; все, что угодно. В следующем примере показано простое средство выбора темы, задающее внешний вид веб-сайта с помощью тернарного оператора.</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>theme<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Выберите тему: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>theme<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>white<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Белая<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Чёрная<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Это мой веб-сайт<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> select <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'select'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>padding <span class=\"token operator\">=</span> <span class=\"token string\">'10px'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bgColor<span class=\"token punctuation\">,</span> textColor</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  html<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> bgColor<span class=\"token punctuation\">;</span>\n  html<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> textColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nselect<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span> select<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">'black'</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'white'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'black'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p><iframe class=\"sample-code-frame\" title=\"Пример тернарного оператора sample\" id=\"frame_пример_тернарного_оператора\" width=\"100%\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Learn/JavaScript/Building_blocks/conditionals/_sample_.%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80_%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%80%D0%BD%D0%BE%D0%B3%D0%BE_%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D0%B0.html\" loading=\"lazy\"></iframe></p>\n\n<p>Мы используем элемент <a href=\"/ru/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> для выбора темы (чёрная или белая), а также простой <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/Heading_Elements\"><code>&lt;h1&gt;</code> <small>(en-US)</small></a> для отображения заголовка веб-сайта. Кроме того, у нас есть функция <code>update()</code>, принимающая в качестве параметров (входных данных) два цвета. В качестве фона используется первый переданный цвет, а в качестве цвета текста – второй переданный цвет.</p>\n\n<p>Наконец, у нас есть обработчик событий <a href=\"/en-US/docs/Web/API/HTMLElement/change_event\">onchange</a> , использующийся для запуска функции, содержащей тернарный оператор. Сначала она проверяет условие — <code>select.value === 'black'</code>. Если возвращается <code>true</code>, мы запускаем функцию <code>update()</code> с параметрами чёрного и белого, в результате чего получаем чёрный цвет фона и белый цвет текста. Если возвращается <code>false</code>, мы запускаем функцию <code>update()</code> с параметрами белого и чёрного, в результате чего цвета веб-сайта меняются на противоположные.</p>\n\n<div class=\"note notecard\" id=\"sect8\">\n<p><strong>Note</strong>: вы можете <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/building-blocks/simple-ternary.html\" class=\"external\" rel=\" noopener\">найти этот пример на GitHub</a> (также увидеть <a href=\"https://mdn.github.io/learning-area/javascript/building-blocks/simple-ternary.html\" class=\"external\" rel=\" noopener\">как он работает</a>.)</p>\n</div>"}},{"type":"prose","value":{"id":"практическое_упражнение_простой_календарь","title":"Практическое упражнение: простой календарь","isH3":false,"content":"<p>В данном примере вы поможете нам закончить простое приложение календаря. Код включает:</p>\n\n<ul>\n <li>Элемент <a href=\"/ru/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, позволяющий пользователю выбирать разные месяцы.</li>\n <li>Обработчик событий <code>onchange</code> для обнаружения изменения значения, выбранного в меню <code>&lt;select&gt;</code>.</li>\n <li>Функция <code>createCalendar()</code> , рисующая календарь и отображающая правильный месяц в элементе <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/Heading_Elements\"><code>&lt;h1&gt;</code> <small>(en-US)</small></a>.</li>\n</ul>\n\n<p>Вы должны написать условную конструкцию в функции обработчика <code>onchange</code> , сразу после комментария <code>// ДОБАВЬТЕ СЮДА УСЛОВНОЕ ВЫРАЖЕНИЕ</code>. Конструкция должна:</p>\n\n<ol>\n <li>Проверить выбранный месяц (хранящийся в переменной <code>choice</code>. Это будет значение элемента <code>&lt;select&gt;</code> после изменения значения, например, \"Январь\".)</li>\n <li>Задать переменную, скажем, <code>days</code>, равную количеству дней в выбранном месяце. Для этого нужно будет проверить количество дней в каждом месяце. Високосный год можно не учитывать.</li>\n</ol>\n\n<p>Советы:</p>\n\n<ul>\n <li>Советуем использовать логический оператор OR для группировки нескольких месяцев в рамках одного условия; многие месяцы имеют одинаковое количество дней.</li>\n <li>Подумайте, какое количество дней в месяце встречается чаще всего и используйте его в качестве варианта по умолчанию.</li>\n</ul>\n\n<p>Если допустили ошибку, используйте кнопку «Сброс», чтобы вернуться к исходному виду примера. Если у вас совсем ничего не получается, нажмите «Показать решение».</p>\n\n<div class=\"note notecard\" id=\"sect9\">\n<p>В HTML коде внутри <code>&lt;select&gt;</code> названия месяцев <code>value=\"\"</code> введены на русском языке. Соответственно ссылки на них из вашего скрипта так же на русском. Не забываем про синтаксис. (прим. - <a href=\"/ru/settings\">ConstantineZz</a>)</p>\n</div>\n\n\n\n<p><iframe class=\"sample-code-frame\" title=\"Playable code sample\" id=\"frame_playable_code\" width=\"100%\" height=\"1110\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Learn/JavaScript/Building_blocks/conditionals/_sample_.playable_code.html\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"практическое_упражнение_расширяем_выбор_цветов","title":"Практическое упражнение: расширяем выбор цветов","isH3":false,"content":"<p>В данном примере вы будете использовать пример тернарного оператора, который мы рассматривали ранее, и превратите тернарный оператор в инструкцию switch, что позволит увеличить количество вариантов выбора для простого веб-сайта. Посмотрите на <a href=\"/ru/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> — на этот раз он включает не два, а целых пять вариантов тем. Нужно добавить инструкцию switch сразу под комментарием <code>// ДОБАВЬТЕ ИНСТРУКЦИЮ SWITCH</code>:</p>\n\n<ul>\n <li>Она должна принимать переменную <code>choice</code> в качестве входного выражения.</li>\n <li>Каждый элемент case должен содержать вариант выбора, соответствующий одному из доступных для выбора значений: белая, чёрная, лиловая, жёлтая или психоделическая тема.</li>\n <li>В блоке каждого элемента case необходимо вызывать функцию <code>update()</code>, которой передаётся два цвета: первый – это цвет фона, а второй – цвет текста. Помните, что значения цветов – это строковые значения, поэтому их нужно заключать в кавычки.</li>\n</ul>\n\n<p>Если допустили ошибку, используйте кнопку «Сброс», чтобы вернуться к исходному виду примера. Если у вас совсем ничего не получается, нажмите «Показать решение».</p>\n\n\n\n<p><iframe class=\"sample-code-frame\" title=\"Playable code 2 sample\" id=\"frame_playable_code_2\" width=\"100%\" height=\"650\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Learn/JavaScript/Building_blocks/conditionals/_sample_.playable_code_2.html\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"заключение","title":"Заключение","isH3":false,"content":"<p>Это все, что вам нужно знать на данный момент об условных логических структурах! Уверены, вы хорошо разобрались в теоретическом материале и с лёгкостью справились с предложенными упражнениями. Если же что-то осталось для вас непонятным, перечитайте статью ещё раз или <a href=\"/en-US/docs/Learn#contact_us\">свяжитесь с нами</a>.</p>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Math#comparison_operators\">Comparison operators</a></li>\n <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Control_flow_and_error_handling#conditional_statements\">Conditional statements in detail</a></li>\n <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/if...else\">if...else reference</a></li>\n <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator reference</a></li>\n</ul>\n\n<p></p><ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/JavaScript/Building_blocks\"> Обзор: Building blocks</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/JavaScript/Building_blocks/Looping_code\"> Далее  </a></li>\n</ul><p></p>"}}],"toc":[{"text":"Выбор одного условия!..","id":"выбор_одного_условия!.."},{"text":"Оператор if ... else","id":"оператор_if_..._else"},{"text":"Оператор switch","id":"оператор_switch"},{"text":"Тернарный оператор","id":"тернарный_оператор"},{"text":"Практическое упражнение: простой календарь","id":"практическое_упражнение_простой_календарь"},{"text":"Практическое упражнение: расширяем выбор цветов","id":"практическое_упражнение_расширяем_выбор_цветов"},{"text":"Заключение","id":"заключение"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"Во многих языках программирования код должен иметь возможность принимать решения на основе введённых пользователем данных. Например, в игре, если у пользователя осталось 0 жизней, то игра завершается. В приложении о погоде утром отображается восход солнца, а вечером звезды и луна. В этой статье мы рассмотрим как в  JavaScript работают так называемые \"условия\".","popularity":0.0029,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Making decisions in your code — conditionals","locale":"en-US","native":"English (US)"},{"title":"Tomando decisiones en tu código — condicionales","locale":"es","native":"Español"},{"title":"Prendre des décisions dans le code — conditions","locale":"fr","native":"Français"},{"title":"コードでの意思決定 — 条件文","locale":"ja","native":"日本語"},{"title":"판단 내리기 — 조건문","locale":"ko","native":"한국어"},{"title":"Tomando decisões no seu código — condicionais","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"在代码中做决定——条件语句","locale":"zh-CN","native":"中文 (简体)"},{"title":"在代碼中做出決定 - 條件","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/learn/javascript/building_blocks/conditionals","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/learn/javascript/building_blocks/conditionals/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Learn","title":"Изучение веб-разработки"},{"uri":"/ru/docs/Learn/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Learn/JavaScript/Building_blocks","title":"Структурные элементы JavaScript"},{"uri":"/ru/docs/Learn/JavaScript/Building_blocks/conditionals","title":"Принятие решений в вашем коде — условные конструкции"}],"pageTitle":"Принятие решений в вашем коде — условные конструкции - Изучение веб-разработки | MDN","noIndexing":false}}