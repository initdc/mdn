{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Базовая математика в JavaScript — числа и операторы","mdn_url":"/ru/docs/Learn/JavaScript/First_steps/Math","locale":"ru","native":"Русский","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/Getting_started_with_the_web\"><strong>Новички начинают здесь!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Начало работы с Вебом</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web\">Начало работы с Вебом</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Установка базового программного обеспечения</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">Каким должен быть ваш веб-сайт?</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Работа с файлами</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/HTML_basics\">Основы HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/CSS_basics\">Основы CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">Основы JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Публикация вашего веб-сайта</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Как работает Веб</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/HTML\"><strong>HTML — структура Веба</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Вступление в HTML</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML\">Вступление в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Начало работы с HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">Что в \"шапке\"? Метаданные в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">Тексты в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Создание гиперссылок</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Продвинутое форматирование текста</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Структура документа и веб-сайта</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Отладка HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Задание: Выделение символа</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Задание: Структура страницы</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Мультимедиа и встраивание</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding\">Мультимедиа и встраивание</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Изображения в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Видео и аудио контент</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">От object до iframe — другие технологии встраивания</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Добавление векторный графики в Веб</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Отзывчивые изображения</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Задание: Страница о Mozilla</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML tables</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables\">HTML tables overview</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/CSS\"><strong>CSS — стилизирование Веба</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS first steps</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Стилизирование текста</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text\">Стилизирование текста</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Fundamentals\">Основы стилизирования текста и шрифта</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Styling_lists\">Стилизирование списков</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Styling_links\">Стилизирование ссылок</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Web_fonts\">Веб-шрифты</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Задание: Стилизирование школьного сайта</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS макет</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout\">CSS макет</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Grids\">Сетки</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Floats\">Float</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Positioning\">Позиционирование</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/ru/docs/Learn/JavaScript\"><strong>JavaScript — динамический клиентский скриптинг</strong></a></li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>Первые шаги в JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps\">Первые шаги в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">Что такое JavaScript?</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/A_first_splash\">Первое погружение в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/What_went_wrong\">Что-то пошло не так? Устранение ошибок JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Variables\">Хранение нужной информации — Переменные</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Math\">Основы JavaScript — Числа и операторы</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Strings\">Работа с текстом — Строки в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Полезные методы для строк</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Arrays\">Массивы</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Задание: Генератор глупых историй</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Блоки в JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks\">Блоки в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/conditionals\">Делаем решения в вашем годе — Условия</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Looping_code\">Повторение кода</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Functions\">Функции — Переиспользуемые блоки кода</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Создаём свою функцию</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Return_values\">Возвращаемые значения функций</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Events\">Введение в события</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Задание: Галерея изображений</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Введение в объекты JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects\">Введение в объекты JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Basics\">Основы объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object_prototypes\">Прототипы объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/JSON\">Работа с JSON данными</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object_building_practice\">Практика по созданию объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Задание: Добавление возможностей в пример с прыгающими шарами</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web APIs</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility guides</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Accessibility\">Accessibility overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility assessment</summary>\n        <ol>\n            <li><a href=\"/ru/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Tools_and_testing\"><strong>Инструменты и тестирование</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Кроссбраузерное тестирование</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing\">Кроссбраузерное тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Вступление в кроссбраузерное тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Стратегии выполнения тестирования</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Решение частых проблем с HTML и CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Решение частых проблем с JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Решение частых проблем доступности</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Проверка поддержки возможностей</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Вступление в автоматическое тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Установка вашей автоматической среды тестирования</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/Server-side\"><strong>Программирование серверной части сайта</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Первые шаги</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps\">Первые шаги</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Introduction\">Вступление в серверное программирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Client-Server_overview\">Клиент-сервер</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Web_frameworks\">Веб-фреймворки для серверной части</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Website_security\">Защищённость веб-сайтов</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Веб-фреймворк Django (Python)</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django\">Веб-фреймворк Django (Python)</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Introduction\">Вступление</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/development_environment\">Установка среды разработки</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Руководство: Сайт местной библиотеки</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/skeleton_website\">Руководство часть 2: Создаём набросок сайта</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Models\">Руководство часть 3: Использование моделей</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Admin_site\">Руководство часть 4: Django панель администратора</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Home_page\">Руководство часть 5: Создание нашей домашней страницы</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Generic_views\">Руководство часть 6: Списки и представления</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Sessions\">Руководство часть 7: Сессии</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Authentication\">Руководство часть 8: Аутенфикация и разрешения пользователей</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Forms\">Руководство часть 9: Работа с формами</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Testing\">Руководство часть 10: Тестирование веб-приложения на Django</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Deployment\">Руководство часть 11: Разворачивание Django на продакшн сервере</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/web_application_security\">Защищённость веб-приложения</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/django_assessment_blog\">Задание: создание мини блога</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript) overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node (Express) development environment</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express tutorial: The Local Library website</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Дальнейшее чтение</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Общие вопросы</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/HTML/Howto\">Вопросы по HTML</a></li>\n          <li><a href=\"/ru/docs/Learn/CSS/Howto\">Вопросы по CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Web_mechanics\">Как работает Веб</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Tools_and_setup\">Инструменты и установка</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Design_and_accessibility\">Дизайн и доступность</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/JavaScript/First_steps/Variables\"> Назад </a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/JavaScript/First_steps\"> Обзор: Первые шаги</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/JavaScript/First_steps/Strings\"> Далее  </a></li>\n</ul></div>\n\n<p class=\"summary\">В этой части курса мы обсуждаем математику в JavaScript — как мы можем использовать <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Operator\">operators <small>(en-US)</small></a> и другие функции, чтобы успешно манипулировать числами для выполнения наших задач.</p>\n\n<table>\n <tbody>\n  <tr>\n   <th scope=\"row\">Необходимые условия:</th>\n   <td>Базовая компьютерная грамотность, базовое понимание HTML и CSS, понимание того, что такое JavaScript.</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Цель:</th>\n   <td>Ознакомление с основами математики в JavaScript.</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"все_любят_математику","title":"Все любят математику","isH3":false,"content":"<p>Хорошо, может быть, не все. Некоторые из нас любят математику, некоторые из нас ненавидели математику с тех пор, как мы изучали таблицу умножения в школе, а некоторые из нас находятся где-то между ними. Но никто из нас не может отрицать, что математика является фундаментальной частью жизни, и мы не можем обойтись без неё. Это особенно актуально, когда мы учимся программировать на JavaScript (или на любом другом языке, если на то пошло) — большая часть того, что мы делаем, опирается на обработку числовых данных, вычисление новых значений и т.д. Так что не удивительно, что JavaScript имеет полнофункциональный набор математических функций.</p>\n\n<p>В этой статье обсуждаются только основные разделы, которые вам нужно знать сейчас.</p>"}},{"type":"prose","value":{"id":"типы_чисел","title":"Типы чисел","isH3":true,"content":"<p>В программировании даже скромная система десятичных чисел, которую мы все так хорошо знаем, сложнее, чем вы думаете. Мы используем разные термины для описания различных типов десятичных чисел. Например:</p>\n\n<ul>\n <li><strong>Целые </strong>— это целые числа, такие как: 10, 400, или -5.</li>\n <li><strong>С плавающей точкой </strong><em>(или: с плавающей запятой) </em>— имеют целую и дробную части, например: 12.5 или 56.7786543.</li>\n <li><strong>Doubles </strong>— тип чисел с плавающей точкой, которые имеют большую точность, чем стандартные числа с плавающей точкой (что означает, что они точны для большего числа десятичных знаков).</li>\n</ul>\n\n<p>У нас даже есть разные типы числовых систем:</p>\n\n<ul>\n <li><strong>Бинарная</strong> — низкоуровневый язык компьютеров; нули и единицы (0 и 1);</li>\n <li><strong>Восьмеричная</strong> — 8-ми разрядная, использует 0–7 в каждом столбце;</li>\n <li><strong>Десятичная</strong> — 10-ти разрядная, использует 0-9 в каждом столбце;</li>\n <li><strong>Шестнадцатеричная</strong> — 16-ти разрядная, используют 0–9 и потом a–f в каждом столбце. Вы, возможно, уже встречали эти числа, когда задавали <a href=\"/en-US/docs/Learn/CSS/Building_blocks/Values_and_units#hexadecimal_values\">цвет в CSS</a>.</li>\n</ul>\n\n<p><strong>Прежде чем взорвётся ваш мозг, остановитесь прямо здесь и сейчас!</strong> </p>\n\n<p>Во-первых, мы просто будем придерживаться десятичных чисел на протяжении всего курса; вы редко когда будете сталкиваться с необходимостью думать в других числовых системах, если вообще когда-либо с ней столкнётесь.</p>\n\n<p>Во-вторых, в отличие от некоторых других языков программирования, JavaScript имеет только один тип данных для чисел, как вы догадались это <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>. Это означает, независимо от типа чисел, с которыми вы работаете в JavaScript, обрабатывать вы их будете точно так же.</p>"}},{"type":"prose","value":{"id":"для_меня_всё_—_числа","title":"Для меня всё — числа","isH3":true,"content":"<p>Давайте быстро поиграем с некоторыми числами, чтобы снова познакомиться с основным синтаксисом, который нам нужен. Введите команды, перечисленные ниже, в вашу консоль (<a href=\"/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools\">developer tools JavaScript console</a>), или используйте простую встроенную консоль.</p>\n\n<ol>\n <li>Прежде всего, давайте объявим пару переменных и инициализируем их целым числом и числом с плавающей точкой, соответственно, затем введите имена переменных обратно, чтобы проверить, что все в порядке:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myInt <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myFloat <span class=\"token operator\">=</span> <span class=\"token number\">6.667</span><span class=\"token punctuation\">;</span>\nmyInt<span class=\"token punctuation\">;</span>\nmyFloat<span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n <li>Числовые значения набираются без кавычек. Попробуйте объявить и инициализировать ещё пару переменных, содержащих числа, прежде чем двигаться дальше.</li>\n <li>Теперь давайте убедимся, что обе переменные содержат одинаковый тип данных. Для этого есть оператор <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/typeof\"><code>typeof</code></a>, который позволяет проверить какой тип данных содержит в себе переменная. Введите две приведённые ниже строки:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">typeof</span> myInt<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> myFloat<span class=\"token punctuation\">;</span></code></pre></div>\n  В обоих случаях вы должны получить <code>\"number\"</code> — это все упрощает, чем если бы разные числа имели разные типы данных, и нам приходилось иметь дело с ними по-разному.</li>\n</ol>"}},{"type":"prose","value":{"id":"арифметические_операторы","title":"Арифметические операторы","isH3":false,"content":"<p dir=\"ltr\" id=\"tw-target-text\">Арифметические операторы — это основные операторы, которые мы используем для различных математических операций, например таких, как сложение или вычитание:</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Оператор</th>\n   <th scope=\"col\">Имя</th>\n   <th scope=\"col\">Функция</th>\n   <th scope=\"col\">Пример</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code>+</code></td>\n   <td>Сложение</td>\n   <td>Объединение чисел в одно целое.</td>\n   <td><code>6 + 9</code></td>\n  </tr>\n  <tr>\n   <td><code>-</code></td>\n   <td>Вычитание</td>\n   <td>Вычитает правое число от левого.</td>\n   <td><code>20 - 15</code></td>\n  </tr>\n  <tr>\n   <td><code>*</code></td>\n   <td>Умножение</td>\n   <td>Умножает два числа вместе.</td>\n   <td><code>3 * 7</code></td>\n  </tr>\n  <tr>\n   <td><code>/</code></td>\n   <td>Деление</td>\n   <td>Делит левое число на правое.</td>\n   <td><code>10 / 5</code></td>\n  </tr>\n  <tr>\n   <td><code>%</code></td>\n   <td>Модуль числа</td>\n   <td>\n    <p>Возвращает значение остатка при делении первого числа на второе. Результат будет иметь тот же знак, что и первое число.</p>\n   </td>\n   <td>\n    <p><code>11 % 3 = 2</code> (поскольку число 3 вмещается три раза, остатком будет число 2)</p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>**</code></td>\n   <td>показатель степени</td>\n   <td>Возводит базовое число в указанную степень, то есть количество базовых чисел, указанных экспонентой, умножается вместе. Впервые он был представлен в EcmaScript 2016.</td>\n   <td><code>5 ** 5</code> (возвращает 3125, или как: 5*5*5*5*5)</td>\n  </tr>\n </tbody>\n</table>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Примечание</strong>: Иногда числа участвующие в математических операциях называют операндами ( <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Operand\">operands <small>(en-US)</small></a> ).</p>\n</div>\n\n<p dir=\"ltr\" id=\"tw-target-text\">Нам, вероятно, не нужно учить вас базовым математическим операциям, но мы хотели бы проверить ваше понимание синтаксиса. Попробуйте ввести приведённые ниже примеры в свою консоль (<a href=\"/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools\">developer tools JavaScript console</a>), или используйте встроенную консоль, с которой вы уже знакомы, чтобы ознакомиться с синтаксисом.</p>\n\n<ol>\n <li>Для начала попробуйте ввести простые примеры, такие как:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span>\n<span class=\"token number\">9</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span>\n<span class=\"token number\">60</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span></code></pre></div>\n </li>\n <li>Вы также можете попробовать объявить переменные и присвоить им различные числа. Попробуйте вместо чисел использовать ранее объявленные переменные — переменные будут вести себя точно так же, как значения, которые они хранят. Например:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">9</span> <span class=\"token operator\">*</span> num1<span class=\"token punctuation\">;</span>\nnum2 <span class=\"token operator\">/</span> num1<span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n <li>И напоследок, попробуйте ввести более сложные выражения, например:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\nnum2 <span class=\"token operator\">%</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> num1<span class=\"token punctuation\">;</span>\nnum2 <span class=\"token operator\">+</span> num1 <span class=\"token operator\">/</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n</ol>\n\n<p>Некоторые примеры выше могут дать вам не тот результат, которого вы ожидали; приведённый ниже раздел может дать ответ на вопрос о том, почему.</p>"}},{"type":"prose","value":{"id":"приоритет_операторов","title":"Приоритет операторов","isH3":true,"content":"<p>Давайте взглянем на последний пример сверху. Предположим, что <code>num2</code> содержит значение 50 и <code>num1</code> содержит значение 10 (как и было обозначено выше):</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>num2 <span class=\"token operator\">+</span> num1 <span class=\"token operator\">/</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Будучи человеком, вы, вероятно, прочитаете это как <em>\"50 плюс 10 равно 60\",</em> затем <em>\"8 плюс 2 равно 10\"</em>, и, наконец, <em>\"60 делить на 10 равно 6\"</em>.</p>\n\n<p>Но браузер видит это по-другому: <em>\"10 делить на 8 равно 1.25\", </em>затем <em>\"50 плюс 1.25 плюс 2 равно 53.25\".</em></p>\n\n<p>Это происходит из-за <strong>приоритета операторов</strong> - некоторые операторы будут применены перед другими в процесс вычисления суммы (в программировании её называют выражением). Приоритет операторов в JavaScript ничем не отличается от приоритета арифметических операций, который вы изучали в школе - умножение и деление всегда выполняются первыми, затем сложение и вычитание (сумма всегда вычисляется слева направо).</p>\n\n<p>Если вы хотите переопределить порядок выполнения операторов, вы можете окружить парными скобками часть выражения, которая должна быть выполнена первой. Для получения результата 6 вам следует сделать следующее:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">(</span>num2 <span class=\"token operator\">+</span> num1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Результат этого выражения равен 6.</p>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Примечание</strong>: полный список операторов JavaScript и приоритетов их выполнения можно найти по этой ссылке: <a href=\"/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#operator_precedence\">Expressions and operators</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"операторы_инкремента_и_декремента","title":"Операторы инкремента и декремента","isH3":false,"content":"<p>Иногда вам захочется повторно добавить или вычесть единцу к/из значению числовой переменной. Это можно сделать с помощью оператора инкремента (<code>++</code>) и декремента (<code>--</code>). Мы использовали <code>++</code> в нашей игре \"Угадай число\" в статье <a href=\"/ru/docs/Learn/JavaScript/First_steps/A_first_splash\">первое погружение в JavaScript</a>, где мы добавляли 1 к переменной <code>guessCount</code>, в которой хранилось значение количества попыток пользователя после каждого хода.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>guessCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p><strong>Замечание</strong>: инкремент и декремент часто используются в <a href=\"/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration\">циклах</a>, о которых вы узнаете позже. Например, если вы захотите пройтись по списку цен и добавить к каждой налог с продаж, вам придётся в цикле обойти каждую цену и провести необходимые вычисления для учёта налога. Инкремент будет использован для перехода на новую ячейку списка при необходимости. У нас есть несложный пример реализации такого списка - попробуйте и взгляните на код чтобы посмотреть, сможете ли вы найти инкременты! Мы взглянем на циклы поближе позже по ходу курса.</p>\n</div>\n\n<p>Давайте попробуем сыграть с этим в вашей консоли. Для начала заметим, что вы не можете использовать инкремент/декремент непосредственно к числу, что может показаться странным. Дело в том, что мы присваиваем к переменной новое обновлённое число, а не просто вычисляем значение. Следующий пример приведёт к ошибке:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">3</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Таким образом, вы можете применить инкремент только к существующим переменным:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\nnum1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Так, вторая странность! Если вы сделаете это, вы получите значение 4 - браузер возвращает текущее число, после чего применяет к нему оператор инкремента. Вы можете удостовериться в том, что инкремент был применён, узнав значение переменной ещё раз:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>num1<span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>То же самое для <code>--</code>: попробуйте пример ниже</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\nnum2<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\nnum2<span class=\"token punctuation\">;</span></code></pre></div>\n\n<div class=\"note notecard\" id=\"sect6\">\n<p><strong>Замечание</strong>: вы можете заставить делать это в другом порядке - применить инкремент/декремент и только потом вернуть значение. Для этого необходимо записать оператор слева от переменной, а не справа. Попробуйте пример сверху ещё раз, но в этот раз используйте <code>++num1</code> и <code>--num2</code>. </p>\n</div>"}},{"type":"prose","value":{"id":"операторы_присваивания","title":"Операторы присваивания","isH3":false,"content":"<p>Операторы присваивания - операторы, которые присваивают значение переменным. Мы уже много раз использовали самый простой из них, <code>=</code>, он просто приравнивает значение переменной слева к значению справа:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// x содержит значение 3</span>\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// y содержит значение 4</span>\nx <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span> <span class=\"token comment\">// x теперь содержит значение y (x == 4)</span></code></pre></div>\n\n<p>Однако есть ещё несколько сложных конструкций, которые позволяют делать ваш код более простым и аккуратным. Наиболее часто используемые перечислены ниже:</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Operator</th>\n   <th scope=\"col\">Name</th>\n   <th scope=\"col\">Purpose</th>\n   <th scope=\"col\">Example</th>\n   <th scope=\"col\">Shortcut for</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code>+=</code></td>\n   <td>Присваивание сложения</td>\n   <td>Прибавляет значение справа к переменной слева и возвращает новое значение переменной</td>\n   <td><code>x = 3;<br>\n    x += 4;</code></td>\n   <td><code>x = 3;<br>\n    x = x + 4;</code></td>\n  </tr>\n  <tr>\n   <td><code>-=</code></td>\n   <td>Присваивание вычитания</td>\n   <td>Вычитает значение справа из переменной слева и возвращает новое значение переменной</td>\n   <td><code>x = 6;<br>\n    x -= 3;</code></td>\n   <td><code>x = 6;<br>\n    x = x - 3;</code></td>\n  </tr>\n  <tr>\n   <td><code>*=</code></td>\n   <td>\n    <p>Присваивание умножения</p>\n   </td>\n   <td>Умножает переменную слева на значение справа и возвращает новое значение переменной</td>\n   <td><code>x = 2;<br>\n    x *= 3;</code></td>\n   <td><code>x = 2;<br>\n    x = x * 3;</code></td>\n  </tr>\n  <tr>\n   <td><code>/=</code></td>\n   <td>Присваивание деления</td>\n   <td>Делит переменную слева на значение справа и возвращает новое значение переменной</td>\n   <td><code>x = 10;<br>\n    x /= 5;</code></td>\n   <td><code>x = 10;<br>\n    x = x / 5;</code></td>\n  </tr>\n </tbody>\n</table>\n\n<p>Попробуйте использовать такие конструкции, что понять, как они работают. Сможете ли вы определить значение до того, как напишите вторую строку?</p>\n\n<p>Заметьте, что значение справа может быть как числом (константой), так и переменной, например:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// x содержит значение 3</span>\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// y содержит значение 4</span>\nx <span class=\"token operator\">*=</span> y<span class=\"token punctuation\">;</span> <span class=\"token comment\">// x содержит значение 12</span></code></pre></div>\n\n<div class=\"note notecard\" id=\"sect7\">\n<p><strong>Примечание:</strong> есть ещё <a href=\"/ru/docs/Web/JavaScript/Guide/Expressions_and_Operators\">другие операторы присваивания</a>, в этой статье перечислены только самые базовые.</p>\n</div>"}},{"type":"prose","value":{"id":"активное_обучение_меняем_размеры_коробки","title":"Активное обучение: меняем размеры коробки","isH3":false,"content":"<p>В этом упражнении вы будете пользоваться числами и операторами для работы с размерами коробки. Коробка рисуется с помощью API браузера, которое называется Canvas API. Вам не следует беспокоиться о том, как это работает - просто сосредоточьтесь на математике. Ширина и высота коробки (в пикселях) определяются переменными <code>x</code> и <code>y</code>, которые изначально равны 50.</p>\n\n<p><iframe width=\"100%\" height=\"520\" src=\"https://mdn.github.io/learning-area/javascript/introduction-to-js-1/maths/editable_canvas.html\" loading=\"lazy\"></iframe></p>\n\n<p><strong><a href=\"https://mdn.github.io/learning-area/javascript/introduction-to-js-1/maths/editable_canvas.html\" class=\"external\" rel=\" noopener\">Открыть в новом окне</a></strong></p>\n\n<p>В коде сверху, который вы можете изменять, под комментарием есть две строчки, с помощью которых вы можете увеличивать/уменьшать размеры коробки. Мы хотим, чтобы вы выполнили несколько заданий:</p>\n\n<ul>\n <li>Поменяйте строчку с размером x так, чтобы коробка была шириной 50px, причём 50 должно быть вычислено с помощью чисел 43 и 7 и арифметического оператора.</li>\n <li>Поменяйте строчку с размером y так, чтобы коробка была высотой 75px, причём 75 должно быть вычислено с помощью чисел 25 и 3 и арифметического оператора.</li>\n <li>Поменяйте строчку с размером y так, чтобы коробка была высотой 250, при этом 250 вычислено с помощью двух чисел и оператором взятия остатка (модуль).</li>\n <li>Поменяйте строчку с размером y так, чтобы коробка была высотой 150px, причём 150 вычислено с помощью трёх чисел и операторов вычитания и деления.</li>\n <li>Поменяйте строчку с размером x так, чтобы коробка была шириной 200px, при этом 200 вычислено с помощью числа 4 и оператора присваивания.</li>\n <li>Поменяйте строчку с размером y так, чтобы коробка была высотой 200px, причём 200 вычислено с помощью чисел 50 и 3 и операторов умножения и присваивания сложения.</li>\n</ul>\n\n<p>Не расстраивайтесь, если вы не поняли код сверху. Нажмите кнопку <em>Reset</em> для запуска программы снова. Если вы смогли ответить верно на все вопросы, попробуйте поэкспериментировать с кодом ещё (или, например, предложить друзьям несколько заданий).</p>"}},{"type":"prose","value":{"id":"операторы_сравнения","title":"Операторы сравнения","isH3":false,"content":"<p>Иногда нам может понадобиться проверить какое-либо условие, а затем поступить в зависимости от результата - для этого мы используем <strong>операторы сравнения</strong>.</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Оператор</th>\n   <th scope=\"col\">Имя</th>\n   <th scope=\"col\">Назначение</th>\n   <th scope=\"col\">Пример</th>\n  </tr>\n  <tr>\n   <td><code>===</code></td>\n   <td>Строгое равенство</td>\n   <td>Проверяет левое и правое значения на идентичность</td>\n   <td><code>5 === 2 + 4</code></td>\n  </tr>\n  <tr>\n   <td><code>!==</code></td>\n   <td>Строгое неравенство</td>\n   <td>Проверяет левое и правое значения на <strong>не</strong>идентичность</td>\n   <td><code>5 !== 2 + 3</code></td>\n  </tr>\n  <tr>\n   <td><code>&lt;</code></td>\n   <td>Меньше</td>\n   <td>Проверяет, меньше ли левое значение правого</td>\n   <td><code>10 &lt; 6</code></td>\n  </tr>\n  <tr>\n   <td><code>&gt;</code></td>\n   <td>Больше</td>\n   <td>Проверяет, больше ли левое значение правого</td>\n   <td><code>10 &gt; 20</code></td>\n  </tr>\n  <tr>\n   <td>&lt;=</td>\n   <td>Меньше или равно</td>\n   <td>Проверят, меньше ли левое значение правому (или равно ему)</td>\n   <td><code>3 &lt;= 2</code></td>\n  </tr>\n  <tr>\n   <td>&gt;=</td>\n   <td>Больше или равно</td>\n   <td>Проверят, больше ли левое значение левого (или равно ему)</td>\n   <td><code>5 &gt;= 4</code></td>\n  </tr>\n </thead>\n</table>\n\n<div class=\"note notecard\" id=\"sect8\">\n<p><strong>Примечание</strong>: вы можете заметить, что некоторые люди используют <code>==</code> и <code>!=</code> в их программах для сравнения на равенство и неравенство — это валидные JavaScript-операторы, но они отличаются от <code>===</code>/<code>!==</code> — первая пара проверяет на равенство/неравенство значений, не рассматривая их типы. Вторая пара - строгая версия первой, которая проверяет типы операндов. При использовании строгой версии выявляется больше ошибок, поэтому мы рекомендуем использовать именно её.</p>\n</div>\n\n<p>Если вы попробуете использовать эти операторы в консоли, вы увидите, что все они возвращают значения <code>true</code>/<code>false</code> — о типе данных <code>boolean</code> мы писали в прошлой статье. С их помощью мы можем принимать решения в нашей программе, например:</p>\n\n<ul>\n <li>Порождать текст на кнопке в зависимости от того, нажата она или нет.</li>\n <li>Высвечивать сообщение о поражении при проигрыше или поздравление при победе в игре.</li>\n <li>Показывать пользователю верное окно приветствия в зависимости от времени года.</li>\n <li>Увеличивать или уменьшать карту при выборе одной из двух опций.</li>\n</ul>\n\n<p>Мы взглянем на то, как реализовать такую логику после знакомства с условными выражениями в следующей статье. Сейчас мы рассмотрим небольшой пример:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">&gt;</span></span>Запустить машину<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Машина остановлена<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> txt <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> updateBtn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateBtn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>btn<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">===</span> <span class=\"token string\">'Start machine'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    btn<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Stop machine'</span><span class=\"token punctuation\">;</span>\n    txt<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'The machine has started!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    btn<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Start machine'</span><span class=\"token punctuation\">;</span>\n    txt<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'The machine id stopped.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p><iframe width=\"100%\" height=\"100\" src=\"https://mdn.github.io/learning-area/javascript/introduction-to-js-1/maths/conditional.html\" loading=\"lazy\"></iframe></p>\n\n<p><strong><a href=\"https://mdn.github.io/learning-area/javascript/introduction-to-js-1/maths/conditional.html\" class=\"external\" rel=\" noopener\">Открыть в новом окне</a></strong></p>\n\n<p>Мы использовали оператор равенства внутри функции <code>updateBtn()</code>. В этом случае мы не проверяем пару математических выражений на равенство значений — мы просто смотрим, является ли текст на кнопке определённой строкой — что по сути является тем же самым. Если кнопка при нажатии содержит \"Start machine\", мы меняем содержимое метки на \"Stop machine\" и обновляем метку. Если же текст кнопки — \"Stop machine\", при нажатии мы возвращаем все обратно. </p>\n\n<div class=\"note notecard\" id=\"sect9\">\n<p><strong>Примечание</strong>: Такой элемент управления, который переключается между двумя состояниями, обычно называется <strong>тумблером</strong>. Он переключается между одним состоянием и другим: свет включён, свет выключен и т. д.</p>\n</div>"}},{"type":"prose","value":{"id":"итого","title":"Итого","isH3":false,"content":"<p>В этой статье мы привели основную информацию, необходимую для работы с числами в JavaScript. Вы постоянно будете использовать числа в процессе обучения языку, поэтому желательно разобраться в этом сейчас. Если вам действительно не нравится математика, пусть вас утешит, что эта статья была сравнительно короткой.</p>\n\n<p>В следующей статье мы изучим текст и то, как мы работаем с ним в JavaScript.</p>\n\n<div class=\"note notecard\" id=\"sect10\">\n<p><strong>Примечание</strong>: если вам хочется узнать подробнее о том, как математика реализуется в JavaScript, вы можете посмотреть главный раздел JavaScript MDN. Статьи <a href=\"/ru/docs/Web/JavaScript/Guide/Numbers_and_dates\">Числа и даты</a> и <a href=\"/ru/docs/Web/JavaScript/Reference/Operators\">Выражения и операторы</a> - хороший вариант для начала.</p>\n</div>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/JavaScript/First_steps/Variables\"> Назад </a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/JavaScript/First_steps\"> Обзор: Первые шаги</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/JavaScript/First_steps/Strings\"> Далее  </a></li>\n</ul><p></p>"}}],"toc":[{"text":"Все любят математику","id":"все_любят_математику"},{"text":"Арифметические операторы","id":"арифметические_операторы"},{"text":"Операторы инкремента и декремента","id":"операторы_инкремента_и_декремента"},{"text":"Операторы присваивания","id":"операторы_присваивания"},{"text":"Активное обучение: меняем размеры коробки","id":"активное_обучение_меняем_размеры_коробки"},{"text":"Операторы сравнения","id":"операторы_сравнения"},{"text":"Итого","id":"итого"}],"summary":"В этой части курса мы обсуждаем математику в JavaScript — как мы можем использовать operators (en-US) и другие функции, чтобы успешно манипулировать числами для выполнения наших задач.","popularity":0.003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Basic math in JavaScript — numbers and operators","locale":"en-US","native":"English (US)"},{"title":"Matemáticas básicas en JavaScript — números y operadores","locale":"es","native":"Español"},{"title":"Mathématiques de base en JavaScript — nombres et opérateurs","locale":"fr","native":"Français"},{"title":"JavaScriptでの基本演算 — 数値と演算子","locale":"ja","native":"日本語"},{"title":"자바스크립트의 기본적인 연산 - 숫자와 연산자","locale":"ko","native":"한국어"},{"title":"Matemática básica no JavaScript — números e operadores","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"JavaScript 中的基础数学 — 数字和操作符","locale":"zh-CN","native":"中文 (简体)"},{"title":"JavaScript中的基本數學 - 數字和運算符","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/learn/javascript/first_steps/math","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/learn/javascript/first_steps/math/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Learn","title":"Изучение веб-разработки"},{"uri":"/ru/docs/Learn/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Learn/JavaScript/First_steps","title":"Первые шаги в JavaScript"},{"uri":"/ru/docs/Learn/JavaScript/First_steps/Math","title":"Базовая математика в JavaScript — числа и операторы"}],"pageTitle":"Базовая математика в JavaScript — числа и операторы - Изучение веб-разработки | MDN","noIndexing":false}}