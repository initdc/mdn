{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Введение в серверную часть","mdn_url":"/ru/docs/Learn/Server-side/First_steps/Introduction","locale":"ru","native":"Русский","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/Getting_started_with_the_web\"><strong>Новички начинают здесь!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Начало работы с Вебом</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web\">Начало работы с Вебом</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Установка базового программного обеспечения</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">Каким должен быть ваш веб-сайт?</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Работа с файлами</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/HTML_basics\">Основы HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/CSS_basics\">Основы CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">Основы JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Публикация вашего веб-сайта</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Как работает Веб</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/HTML\"><strong>HTML — структура Веба</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Вступление в HTML</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML\">Вступление в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Начало работы с HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">Что в \"шапке\"? Метаданные в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">Тексты в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Создание гиперссылок</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Продвинутое форматирование текста</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Структура документа и веб-сайта</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Отладка HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Задание: Выделение символа</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Задание: Структура страницы</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Мультимедиа и встраивание</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding\">Мультимедиа и встраивание</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Изображения в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Видео и аудио контент</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">От object до iframe — другие технологии встраивания</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Добавление векторный графики в Веб</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Отзывчивые изображения</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Задание: Страница о Mozilla</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML tables</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables\">HTML tables overview</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/CSS\"><strong>CSS — стилизирование Веба</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS first steps</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Стилизирование текста</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text\">Стилизирование текста</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Fundamentals\">Основы стилизирования текста и шрифта</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Styling_lists\">Стилизирование списков</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Styling_links\">Стилизирование ссылок</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Web_fonts\">Веб-шрифты</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Задание: Стилизирование школьного сайта</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS макет</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout\">CSS макет</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Grids\">Сетки</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Floats\">Float</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Positioning\">Позиционирование</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/JavaScript\"><strong>JavaScript — динамический клиентский скриптинг</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Первые шаги в JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps\">Первые шаги в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">Что такое JavaScript?</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/A_first_splash\">Первое погружение в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/What_went_wrong\">Что-то пошло не так? Устранение ошибок JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Variables\">Хранение нужной информации — Переменные</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Math\">Основы JavaScript — Числа и операторы</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Strings\">Работа с текстом — Строки в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Полезные методы для строк</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Arrays\">Массивы</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Задание: Генератор глупых историй</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Блоки в JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks\">Блоки в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/conditionals\">Делаем решения в вашем годе — Условия</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Looping_code\">Повторение кода</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Functions\">Функции — Переиспользуемые блоки кода</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Создаём свою функцию</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Return_values\">Возвращаемые значения функций</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Events\">Введение в события</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Задание: Галерея изображений</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Введение в объекты JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects\">Введение в объекты JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Basics\">Основы объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object_prototypes\">Прототипы объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/JSON\">Работа с JSON данными</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object_building_practice\">Практика по созданию объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Задание: Добавление возможностей в пример с прыгающими шарами</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web APIs</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility guides</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Accessibility\">Accessibility overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility assessment</summary>\n        <ol>\n            <li><a href=\"/ru/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Tools_and_testing\"><strong>Инструменты и тестирование</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Кроссбраузерное тестирование</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing\">Кроссбраузерное тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Вступление в кроссбраузерное тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Стратегии выполнения тестирования</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Решение частых проблем с HTML и CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Решение частых проблем с JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Решение частых проблем доступности</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Проверка поддержки возможностей</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Вступление в автоматическое тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Установка вашей автоматической среды тестирования</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/ru/docs/Learn/Server-side\"><strong>Программирование серверной части сайта</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Первые шаги</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps\">Первые шаги</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Introduction\">Вступление в серверное программирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Client-Server_overview\">Клиент-сервер</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Web_frameworks\">Веб-фреймворки для серверной части</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Website_security\">Защищённость веб-сайтов</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Веб-фреймворк Django (Python)</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django\">Веб-фреймворк Django (Python)</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Introduction\">Вступление</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/development_environment\">Установка среды разработки</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Руководство: Сайт местной библиотеки</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/skeleton_website\">Руководство часть 2: Создаём набросок сайта</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Models\">Руководство часть 3: Использование моделей</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Admin_site\">Руководство часть 4: Django панель администратора</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Home_page\">Руководство часть 5: Создание нашей домашней страницы</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Generic_views\">Руководство часть 6: Списки и представления</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Sessions\">Руководство часть 7: Сессии</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Authentication\">Руководство часть 8: Аутенфикация и разрешения пользователей</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Forms\">Руководство часть 9: Работа с формами</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Testing\">Руководство часть 10: Тестирование веб-приложения на Django</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Deployment\">Руководство часть 11: Разворачивание Django на продакшн сервере</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/web_application_security\">Защищённость веб-приложения</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/django_assessment_blog\">Задание: создание мини блога</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript) overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node (Express) development environment</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express tutorial: The Local Library website</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Дальнейшее чтение</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Общие вопросы</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/HTML/Howto\">Вопросы по HTML</a></li>\n          <li><a href=\"/ru/docs/Learn/CSS/Howto\">Вопросы по CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Web_mechanics\">Как работает Веб</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Tools_and_setup\">Инструменты и установка</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Design_and_accessibility\">Дизайн и доступность</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"><ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/Server-side/First_steps\"> Обзор: First steps</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/Server-side/First_steps/Client-Server_overview\"> Далее  </a></li>\n</ul></div>\n\n<p class=\"summary\">Добро пожаловать на курс для начинающих по программированию серверной части сайта! В этой первой статье мы рассмотрим программирование на стороне сервера с высокого уровня, отвечая на такие вопросы, как «что это»?, «как это отличается от программирования на стороне клиента»? и «почему это так полезно»? После прочтения этой статьи вы поймёте дополнительные возможности, доступные веб-сайтам посредством программирования на стороне сервера.</p>\n\n<table>\n <tbody>\n  <tr>\n   <th scope=\"row\">Перед стартом:</th>\n   <td>Базовая компьютерная грамотность. Базовое понимание, что такое веб-сервер.</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Цель:</th>\n   <td>Ознакомиться с тем, что такое программирование серверной части, на что оно способно и чем отличается от программирования клиентской части.</td>\n  </tr>\n </tbody>\n</table>\n\n<p>Большинство крупных веб-сайтов используют программирование серверной части чтобы динамично отображать различные данные при необходимости, в основном взятые из базы данных, располагающейся на сервере и отправляемые клиенту для отображения через некоторый код (например, HTML и JavaScript).</p>\n\n<p>Возможно, самая значительная польза программирования серверной части в том, что оно позволяет формировать контент веб-сайта под конкретного пользователя. Динамические сайты могут выделять контент, который более актуален в зависимости от предпочтений и привычек пользователя. Это также может упростить использование сайтов за счёт сохранения личных предпочтений и информации, например, повторного использования сохранённых данных кредитной карты для оптимизации последующих платежей.</p>\n\n<p>Это также даёт возможность взаимодействовать с пользователем сайта, посылая уведомления и обновления по электронной почте или по другим каналам. Все эти возможности позволяют глубже взаимодействовать с пользователями.</p>\n\n<p>В современном мире веб-разработки настоятельно рекомендуется узнать о разработке на стороне сервера.</p>"}},{"type":"prose","value":{"id":"что_такое_программирование_серверной_части_сайта","title":"Что такое программирование серверной части сайта?","isH3":false,"content":"<p>Веб-браузеры взаимодействуют с <a href=\"/ru/docs/Learn/Common_questions/What_is_a_web_server\">веб-серверами</a> при помощи гипертекстового транспортного протокола (<a href=\"/ru/docs/Glossary/HTTP\">HTTP</a>). Когда вы нажимаете на ссылку на веб-странице, заполняете форму или запускаете поиск,  <strong>HTTP-запрос </strong> отправляется из вашего браузера на целевой сервер.</p>\n\n<p>Запрос включает в себя URL, определяющий затронутый ресурс, метод, определяющий требуемое действие (например, получить, удалить или опубликовать ресурс) и может включать дополнительную информацию, закодированную в параметрах URL (пары поле-значение, отправленные как <a href=\"https://en.wikipedia.org/wiki/Query_string\" class=\"external\" rel=\" noopener\">строка запроса</a>), как POST запрос (данные, отправленные методом <a href=\"/en-US/docs/Web/HTTP/Methods/POST\">HTTP POST</a>) или в <a href=\"/ru/docs/Glossary/Cookie\">куки-файлах</a>.</p>\n\n<p>Веб-серверы ожидают сообщений с клиентскими запросами, обрабатывают их по прибытию и отвечают веб-браузеру при помощи ответного HTTP сообщения (<strong>HTTP-ответ</strong>). Ответ содержит строку состояния, показывающую, был ли запрос успешным или нет (например, «HTTP/1.1 200 OK» в случае успеха).</p>\n\n<p>Тело успешного ответа на запрос может содержать запрашиваемые данные (например, новую HTML-страницу или изображение, и т. п.), который может отображаться через веб-браузер.</p>"}},{"type":"prose","value":{"id":"статические_сайты","title":"Статические сайты","isH3":true,"content":"<p>Схема ниже показывает базовую архитектуру веб-сервера для <em>статического сайта</em> (статический сайт — это тот, который возвращает одно и то же жёстко закодированное содержимое с сервера всякий раз, когда запрашивается конкретный ресурс). Когда пользователь хочет перейти на страницу, браузер отправляет HTTP-запрос «GET» с указанием его URL. </p>\n\n<p>Сервер извлекает запрошенный документ из своей файловой системы и возвращает HTTP-ответ, содержащий документ и <a href=\"/ru/docs/Web/HTTP/Status#Successful_responses\">успешный статус</a> (обычно 200 OK). Если файл не может быть извлечён по каким-либо причинам, возвращается статус ошибки (смотри <a href=\"/ru/docs/Web/HTTP/Status#Client_error_responses\">ошибки клиента</a> и <a href=\"/ru/docs/Web/HTTP/Status#Server_error_responses\">ошибки сервера</a>).</p>\n\n<p><img alt=\"A simplified diagram of a static web server.\" src=\"https://mdn.mozillademos.org/files/13841/Basic%20Static%20App%20Server.png\" loading=\"lazy\"></p>"}},{"type":"prose","value":{"id":"одинаково_ли_программирование_серверной_части_и_клиентской","title":"Одинаково ли программирование серверной части и клиентской?","isH3":false,"content":"<h3 id=\"динамические_сайты\">Динамические сайты</h3>\n\n<p>Динамический веб-сайт — это тот, где часть содержимого ответа генерируется динамически только при необходимости. На динамическом веб-сайте HTML-страницы обычно создаются путём вставки данных из базы данных в заполнители в HTML-шаблонах (это гораздо более эффективный способ хранения большого количества контента, чем использование статических сайтов).</p>\n\n<p>Динамический сайт может возвращать разные данные для URL-адреса на основе информации, предоставленной пользователем или сохранёнными настройками, и может выполнять другие операции, как часть возврата ответа (например, отправку уведомлений).</p>\n\n<p>Большая часть кода для поддержки динамического веб-сайта должна выполняться на сервере. Создание этого кода известно, как «<strong>программирование серверной части</strong>» (или иногда «<strong>программирование бэкенда</strong>»).</p>\n\n<p>Схема ниже показывает простую архитектуру <em>динамического сайта</em>. Как и на предыдущей схеме, браузеры отправляют HTTP-запросы на сервер, затем сервер обрабатывает запросы и возвращает соответствующие HTTP-ответы.</p>\n\n<p>Запросы статических ресурсов обрабатываются так же, как и для статических сайтов (статические ресурсы — это любые файлы, которые не меняются, обычно это: CSS, JavaScript, изображения, предварительно созданные PDF-файлы и прочее).</p>\n\n<p><img alt=\"A simplified diagram of a web server that uses server-side programming to get information from a database and construct HTML from templates. This is the same diagram as is in the Client-Server overview.\" src=\"https://mdn.mozillademos.org/files/13839/Web%20Application%20with%20HTML%20and%20Steps.png\" loading=\"lazy\"></p>\n\n<p>Запросы динамических данных отправляются (2) в код серверной части (показано на диаграмме как <em>Веб-приложение</em>). Для «динамических запросов» сервер интерпретирует запрос, читает необходимую информацию из базы данных (3), комбинирует извлечённые данные с шаблонами HTML и возвращает ответ, содержащий сгенерированный HTML (5, 6).</p>\n\n<div id=\"sect3\">\n\n</div>\n\n<p>Теперь обратим внимание на код, задействованный в серверной части и клиентской части. В каждом случае код существенно различается:</p>\n\n<ul>\n <li>Они имеют различные цели и назначение.</li>\n <li>Как правило, они не используют одни и те же языки программирования (исключение составляет JavaScript, который можно использовать на стороне сервера и клиента).</li>\n <li>Они выполняются в разных средах операционной системы.</li>\n</ul>\n\n<p>Код, который выполняется в браузере, известный как <strong>код клиентской части</strong>, прежде всего связан с улучшением внешнего вида и поведения отображаемой веб-страницы. Это включает в себя выбор и стилизацию компонентов пользовательского интерфейса, создание макетов, навигацию, проверку форм и т. д. Напротив, программирование веб-сайта на стороне сервера в основном включает выбор содержимого, которое возвращается браузеру в ответ на запросы. Код на стороне сервера обрабатывает такие задачи, как проверка отправленных данных и запросов, использование баз данных для хранения и извлечения данных и отправка правильных данных клиенту по мере необходимости.</p>\n\n<p>Код клиентской части написан с использованием <a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">HTML</a>, <a href=\"/ru/docs/Learn/CSS\">CSS</a> и <a href=\"/ru/docs/Learn/JavaScript\">JavaScript</a> — он запускается в веб-браузере и практически не имеет доступа к базовой операционной системе (включая ограниченный доступ к файловой системе).</p>\n\n<p>Веб-разработчики не могут контролировать, какой браузер может использовать каждый пользователь для просмотра веб-сайта — браузеры обеспечивают противоречивые уровни совместимости с функциями кода на стороне клиента, и одной из задач программирования на стороне клиента является изящная обработка различий в поддержке браузера.</p>\n\n<p>Код серверной части может быть написан на любом количестве языков программирования — примеры популярных языков серверной части включают в себя PHP, Python, Ruby, C# и NodeJS (JavaScript). Код серверной части имеет полный доступ к операционной системе сервера, и разработчик может выбрать какой язык программирования (и какую версию) он хотел бы использовать.</p>\n\n<p>Разработчики обычно пишут свой код, используя <strong>веб-фреймворки</strong>. Веб-фреймворки — это наборы функций, объектов, правил и других конструкций кода, предназначенных для решения общих проблем, ускорения разработки и упрощения различных типов задач, стоящих в конкретной области.</p>\n\n<p>И снова, поскольку и клиентская и серверная части используют фреймворки, области очень разные и, следовательно, фреймворки тоже разные. Фреймворки клиентской части упрощают вёрстку и представление данных, тогда как фреймворки серверной части обеспечивают много «обычной» функциональности веб-сервера, которую вы, возможно, в противном случае, должны были осуществлять самостоятельно (например, поддержка сессий, поддержка пользователей и аутентификация, простой доступ к базе данных, шаблонам библиотек и т. д.).</p>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>На заметку</strong>: Фреймворки клиентской части часто используются для ускорения написания кода клиентской части, но вы также можете решить писать весь код руками; на самом деле, написание кода руками может быть более быстрым и эффективным, если вам нужен небольшой простой веб-сайт UI.</p>\n\n<p>И, наоборот, вы практически никогда не посмотрите в сторону написания кода серверной части веб-приложения без фреймворка: осуществление жизненно важной функции, такой как HTTP сервер действительно сложно сделать с нуля, скажем, на Python, но веб-фреймворки для Python, такие как Django, обеспечивают это из коробки наряду с другими полезными инструментами.</p>\n</div>\n\n<div id=\"sect5\">\n<h2 id=\"что_можно_сделать_в_серверной_части\">Что можно сделать в серверной части?</h2>\n\n<p>Программирование серверной части очень полезно поскольку позволяет <em>эффективно</em> доставлять информацию, составленную для индивидуальных пользователей и, таким образом, создавать намного лучший опыт использования.</p>\n\n<p>Компании, такие как Amazon, используют программирование серверной части для построения исследовательских результатов для товаров, формирования целевого предложения, основанного на предпочтениях клиента и предыдущих покупках, упрощения заказов и т. д. Банки используют программирование серверной части, чтобы хранить учётную информацию и позволять только авторизованным пользователям просматривать и совершать транзакции. Другие сервисы, такие как Facebook, Twitter, Instagram и Wikipedia используют бэкенд, чтобы выделять, распространять и контролировать доступ к интересному контенту.</p>\n</div>\n\n<p>Некоторые типичные применения и выгоды бэкенда перечислены ниже. Вы заметите, что есть некоторое пересечение!</p>"}},{"type":"prose","value":{"id":"эффективное_хранение_и_доставка_информации","title":"Эффективное хранение и доставка информации","isH3":true,"content":"<p>Представьте, сколько товаров доступно на Amazon, и представьте, сколько постов было написано на Facebook? Создание статической страницы для каждого товара или поста было бы абсолютно неэффективным.</p>\n\n<p>Программирование серверной части позволяет вместо этого хранить информацию в базе данных и динамически создавать и возвращать HTML и другие типы файлов (например, PDF, изображения, и т. д.). Также есть возможность просто вернуть данные (<a href=\"/ru/docs/Glossary/JSON\">JSON</a>, <a href=\"/ru/docs/Glossary/XML\">XML</a>, и т. д.) для отображения, используя подходящий фреймворк клиентской части (это уменьшает загрузку процессора на сервере и количество передаваемых данных).</p>\n\n<p>Сервер не ограничен в отправке информации из баз данных и может вместо этого возвращать результат инструментов программного обеспечения или данные из сервисов коммуникации. Контент даже может быть целевым относительно устройства клиента, который его получает.</p>\n\n<p>Из-за того, что информация находится в базе данных, её также можно легко передать и обновить через другие бизнес системы (например, отслеживание).</p>\n\n<div class=\"note notecard\" id=\"sect6\">\n<p><strong>На заметку:</strong> вам не нужно сильно напрягать своё воображение, чтобы увидеть достоинства кода серверной части для эффективного хранения и передачи информации:</p>\n\n<ol>\n <li>Зайдите на <a href=\"https://www.amazon.com/\" class=\"external\" rel=\" noopener\">Amazon</a> или в другой интернет-магазин.</li>\n <li>Введите в поиск несколько ключевых слов и заметьте, как структура страницы не изменилась, тогда как результаты изменились.</li>\n <li>Откройте два или три разных товара. Заметьте, что они имеют схожую структуру и внешний вид, но содержимое для разных товаров было вставлено из базы данных.</li>\n</ol>\n\n<p>Для обычного поиска (например, «рыба») вы можете увидеть буквально миллионы найденных значений. Использование базы данных позволяет им храниться и передаваться эффективно, и это позволяет контролировать представление информации всего в одном месте.</p>\n</div>"}},{"type":"prose","value":{"id":"настраиваемый_пользовательский_опыт_взаимодействия","title":"Настраиваемый пользовательский опыт взаимодействия","isH3":true,"content":"<p>Серверы могут хранить и использовать информацию о клиентах чтобы поставлять удобный и сделанный индивидуально пользовательский опыт взаимодействия. Например, многие сайты хранят данные кредитных карт, чтобы не нужно было вводить их повторно. Сайты, наподобие Google Maps, могут использовать сохранённое и текущее местоположение для предоставления информации о маршруте, а также историю поиска или путешествий для выделения местных предприятий в результатах поиска.</p>\n\n<p>Более глубокий анализ привычек пользователя может быть использован для прогнозирования их интересов и дальнейших настроек ответов и уведомлений, например, предоставление списка ранее посещённых популярных мест, которые вы, возможно, захотите найти на карте.</p>\n\n<div class=\"note notecard\" id=\"sect7\">\n<p><strong>На заметку:</strong> <a href=\"https://maps.google.com/\" class=\"external\" rel=\" noopener\">Google Maps</a> сохраняет вашу историю поиска и посещений. Часто посещаемые или часто вводимые в поиск локации выделяются больше, чем остальные.</p>\n\n<p>Результаты поиска Google оптимизируются на основе предыдущего поиска.</p>\n\n<ol>\n <li> Перейдите в <a href=\"https://google.com/\" class=\"external\" rel=\" noopener\">поиск Google</a>.</li>\n <li> Произведите поиск по слову «футбол».</li>\n <li> Теперь попробуйте ввести «любимое» в поисковой строке и понаблюдайте, как работают подсказки автозаполнения поиска.</li>\n</ol>\n\n<p>Стечение обстоятельств? Нет!</p>\n</div>"}},{"type":"prose","value":{"id":"контролируемый_доступ_к_контенту","title":"Контролируемый доступ к контенту","isH3":true,"content":"<p>Программирование серверной части позволяет сайтам ограничивать доступ авторизованным пользователям и предоставлять только ту информацию, которую пользователю разрешено видеть.</p>\n\n<p>Реальные примеры:</p>\n\n<ul>\n <li>Социальные сети, такие как Facebook, позволяют пользователям полностью контролировать свои данные, но только своим друзьям разрешать просматривать или комментировать их. Пользователь определяет, кто может просматривать его данные и, более того, чьи данные появляются на его стене. Авторизация — центральная часть опыта взаимодействия.</li>\n <li>Сайт, на котором вы находитесь прямо сейчас, контролирует доступ к контенту: статьи видны всем, но только авторизованные пользователи могут редактировать контент. Чтобы проверить это, нажмите на кнопку «Редактировать» в верхней части страницы, и, если вы авторизованы, вы увидите редакторский интерфейс, а если нет — вас перенаправит на страницу авторизации.</li>\n</ul>\n\n<div class=\"note notecard\" id=\"sect8\">\n<p><strong>На заметку:</strong> Рассмотрим другие реальные примеры, где доступ к контенту контролируется. Например, что вы можете увидеть, если зайдёте на сайт вашего банка? Авторизуйтесь через вашу учётную запись, и какую дополнительную информацию вы можете просматривать и редактировать? Что за информацию вы можете увидеть, которую может редактировать только банк?</p>\n</div>"}},{"type":"prose","value":{"id":"хранение_информации_о_сессиисостоянии","title":"Хранение информации о сессии/состоянии","isH3":true,"content":"<p>Программирование серверной части позволяет разработчикам использовать <strong>сессии</strong> – изначально это механизм, позволяющий серверу хранить информацию о текущем пользователе сайта и отправлять разные ответы, основанные на этой информации.</p>\n\n<p>Это позволяет, например, сайту знать, что пользователь был предварительно авторизован и выводить ссылки на его адрес электронной почты или историю заказов или, возможно, сохранить прогресс простой игры, так чтобы пользователь мог вернуться на сайт продолжить с того места, где он закончил.</p>\n\n<div class=\"note notecard\" id=\"sect9\">\n<p><strong>На заметку:</strong> Посетите новостной сайт, у которого есть подписка и откройте ветку тегов (например, <a href=\"http://www.theage.com.au/\" class=\"external\" rel=\" noopener\">The Age</a>). Продолжайте посещать сайт в течение нескольких часов/дней. В итоге вас начнёт перенаправлять на страницы, объясняющие, как оформить платную подписку, а сами статьи станут вам недоступны. Эта информация является примером сессии, сохранённой в куки-файлах.</p>\n</div>"}},{"type":"prose","value":{"id":"уведомления_и_средства_связи","title":"Уведомления и средства связи","isH3":true,"content":"<p>Серверы могут отправлять общие или пользовательские уведомления непосредственно через сайт или по электронной почте, через смс, мгновенные сообщения, видеосвязь или другие средства связи.</p>\n\n<p>Вот несколько примеров:</p>\n\n<ul>\n <li>Facebook или Twitter отправляет уведомления по электронной почте и смс-сообщения, чтобы уведомить вас о новых разговорах.</li>\n <li>Amazon регулярно отправляет письма на электронную почту, предлагающие товары, похожие на те, которые уже были куплены или просматривались вами, которые могут вас заинтересовать.</li>\n <li>Веб-сервер может посылать сообщения администратору сайта, предупреждая его о том, что на сервере заканчивается память или о подозрительной активности пользователя.</li>\n</ul>\n\n<div class=\"note notecard\" id=\"sect10\">\n<p><strong>На заметку</strong>: Самый распространённый вид уведомлений – это «подтверждение регистрации». Возьмите почти любой интересующий вас крупный сайт (Google, Amazon, Instagram и т. п.) и создайте новую учётную запись, используя ваш адрес электронной почты. Вскоре вы получите письмо, подтверждающее факт вашей регистрации или содержащее информацию о необходимости активировать вашу учётную запись.</p>\n</div>"}},{"type":"prose","value":{"id":"анализ_данных","title":"Анализ данных","isH3":true,"content":"<p>Веб-сайт может собирать много данных о своих пользователях: что они ищут, что они покупают, что они рекомендуют, как долго они остаются на каждой странице. Программирование серверной части может быть использовано, чтобы усовершенствовать ответы, основанные на анализе этих данных.</p>\n\n<p>Например, и Amazon, и Google рекламируют товары на основании предыдущих поисков (и покупок).</p>\n\n<div class=\"note notecard\" id=\"sect11\">\n<p><strong>На заметку</strong>: Если вы пользуетесь Facebook, зайдите на вашу стену и посмотрите на ряд постов. Заметьте, что некоторые посты не идут по порядку: в частности, посты с большим количеством «лайков» часто находятся выше по списку, чем остальные. Также взгляните на рекламу, которую вам показывают, вы вероятно увидите рекламу товаров, которые искали на других сайтах. Алгоритм Facebook для выделения контента и рекламы может казаться мистикой, но очевидно, что он зависит от ваших лайков и запросов поиска!</p>\n</div>"}},{"type":"prose","value":{"id":"подведение_итогов","title":"Подведение итогов","isH3":false,"content":"<p>Поздравляем, вы дошли до конца первой статьи о программировании серверной части.</p>\n\n<p>Теперь вы узнали, что код серверной части выполняется на веб-сервере и его основная роль состоит в контролировании отправляемой пользователю информации (тогда как код клиентской части в основном определяет структуру и способ преподнесения информации пользователю). Вы должны также понимать, что это полезно, так как позволяет создавать веб-сайты, которые эффективно доставляют информацию, собранную для конкретных пользователей и иметь чёткое представление о некоторых вещах, которые вы сможете делать, когда станете разработчиком бэкенда.</p>\n\n<p>Наконец, вы должны понимать, что код серверной части может быть написан на разных языках программирования, и что вам следует использовать веб-фреймворк для упрощения процесса написания кода.</p>\n\n<p>В следующей статье мы поможем вам выбрать лучший фреймворк для вашего первого сайта; затем мы изучим несколько основных взаимодействий с клиентской частью более подробно.</p>\n\n<p></p><ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/Server-side/First_steps\"> Обзор: First steps</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/Server-side/First_steps/Client-Server_overview\"> Далее  </a></li>\n</ul><p></p>"}}],"toc":[{"text":"Что такое программирование серверной части сайта?","id":"что_такое_программирование_серверной_части_сайта"},{"text":"Одинаково ли программирование серверной части и клиентской?","id":"одинаково_ли_программирование_серверной_части_и_клиентской"},{"text":"Подведение итогов","id":"подведение_итогов"}],"summary":"Добро пожаловать на курс для начинающих по программированию серверной части сайта! В этой первой статье мы рассмотрим программирование на стороне сервера с высокого уровня, отвечая на такие вопросы, как «что это»?, «как это отличается от программирования на стороне клиента»? и «почему это так полезно»? После прочтения этой статьи вы поймёте дополнительные возможности, доступные веб-сайтам посредством программирования на стороне сервера.","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Introduction to the server side","locale":"en-US","native":"English (US)"},{"title":"Introducción al lado servidor","locale":"es","native":"Español"},{"title":"Présentation du côté serveur","locale":"fr","native":"Français"},{"title":"サーバサイドの概要","locale":"ja","native":"日本語"},{"title":"Introduction to the server side","locale":"ko","native":"한국어"},{"title":"Introdução ao lado servidor","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"服务端编程介绍","locale":"zh-CN","native":"中文 (简体)"},{"title":"伺服器端的介紹","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/learn/server-side/first_steps/introduction","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/learn/server-side/first_steps/introduction/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Learn","title":"Изучение веб-разработки"},{"uri":"/ru/docs/Learn/Server-side","title":"Серверное программирование веб-сайтов"},{"uri":"/ru/docs/Learn/Server-side/First_steps","title":"Первые шаги в программировании веб-сайтов на стороне сервера"},{"uri":"/ru/docs/Learn/Server-side/First_steps/Introduction","title":"Введение в серверную часть"}],"pageTitle":"Введение в серверную часть - Изучение веб-разработки | MDN","noIndexing":false}}