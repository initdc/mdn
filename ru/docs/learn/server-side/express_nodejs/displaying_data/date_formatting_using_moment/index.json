{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Форматирование даты при помощи moment","mdn_url":"/ru/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Date_formatting_using_moment","locale":"ru","native":"Русский","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>По умолчанию отображение дат наших моделей некрасиво: <em>Tue Dec 06 2016 15:49:58 GMT+1100 (AUS Eastern Daylight Time)</em>. В этом разделе мы покажем, как можно обновить страницу списка <em>BookInstance List </em>из предыдущего раздела, чтобы представить поле <code>due_date</code>  в более удобном формате: December 6th, 2016. </p>\n\n<p>Подход, который будет использован, состоит в  создании виртуального свойства в модели <code>BookInstance</code>,  которое будет возвращать отформатированную дату. Форматирование будет производиться с использованием <a class=\"external external-icon\" href=\"https://www.npmjs.com/package/moment\" rel=\"noopener\">moment</a>, легковесной библиотеки JavaScript для разбора, проверки, изменения и форматирования дат.</p>\n\n<div class=\"note notecard\" id=\"sect1\">\n<p><strong>Примечание:</strong> Можно применять <em>moment</em> для форматирования непосредственно в шаблонах Pug, а можно отформатировать строку в других местах. Использование виртуального свойства позволяет получить дату, отформатированную точно так же, как при помощи <code>due_date</code>. </p>\n</div>"}},{"type":"prose","value":{"id":"установка_moment","title":"Установка moment","isH3":false,"content":"<p>Ведите следующую команду в корне проекта:</p>\n\n<div class=\"code-example\"><pre class=\"brush: bash line-numbers  language-bash notranslate\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> moment</code></pre></div>"}},{"type":"prose","value":{"id":"создание_виртуального_свойства","title":"Создание виртуального свойства","isH3":false,"content":"<ol>\n <li>Откройте файл <strong>./models/bookinstance.js</strong>.</li>\n <li>В начало файла введите строку для импортирования <em>moment</em>.\n  <div class=\"code-example\"><pre class=\"brush: js line-numbers  language-js notranslate\"><code><span class=\"token keyword\">var</span> moment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'moment'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n</ol>\n\n<p>Добавьте виртуальное свойство <code>due_back_formatted</code> сразу после свойства url.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js line-numbers  language-js notranslate\"><code>BookInstanceSchema\n<span class=\"token punctuation\">.</span><span class=\"token function\">virtual</span><span class=\"token punctuation\">(</span><span class=\"token string\">'due_back_formatted'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>due_back<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MMMM Do, YYYY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<div class=\"note notecard\" id=\"sect2\">\n<p><strong>Примечание:</strong> Метод format method может вывести дату почти по любому образцу. Синтаксис для представления различных составляющих даты можно найти в документации ( <a class=\"external external-icon\" href=\"http://momentjs.com/docs/#/displaying/\" rel=\"noopener\">moment documentation</a>).</p>\n</div>"}},{"type":"prose","value":{"id":"обновляем_представление","title":"Обновляем представление","isH3":false,"content":"<p>Откройте файл <strong>/views/bookinstance_list.pug</strong> и замените <code>due_back</code> на <code>due_back_formatted</code>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js line-numbers  language-js notranslate\"><code>      <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Available'</span>\n        <span class=\"token comment\">//span  (Due: #{val.due_back} )</span>\n        <span class=\"token function\">span</span>  <span class=\"token punctuation\">(</span>Due<span class=\"token operator\">:</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>due_back_formatted<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>       </code></pre></div>\n\n<p>Вот и все. Если вы перейдёте к  <em>All book-instances</em> в боковом меню, вы должны увидеть все даты  в привлекательном формате!</p>\n\n<p> </p>"}},{"type":"prose","value":{"id":"далее","title":"Далее","isH3":false,"content":"<ul>\n <li>Вернуться к <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a>.</li>\n <li>Перейти к следующему подразделу части  5: <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_list_page\">Author list page and Genre list page challenge</a> (страница списка авторов и тест- страница списка жанров).</li>\n</ul>\n\n<p> </p>"}}],"toc":[{"text":"Установка moment","id":"установка_moment"},{"text":"Создание виртуального свойства","id":"создание_виртуального_свойства"},{"text":"Обновляем представление","id":"обновляем_представление"},{"text":"Далее","id":"далее"}],"summary":"По умолчанию отображение дат наших моделей некрасиво: Tue Dec 06 2016 15:49:58 GMT+1100 (AUS Eastern Daylight Time). В этом разделе мы покажем, как можно обновить страницу списка BookInstance List из предыдущего раздела, чтобы представить поле due_date  в более удобном формате: December 6th, 2016.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Date formatting using luxon","locale":"en-US","native":"English (US)"},{"title":"moment を使用した日付のフォーマット","locale":"ja","native":"日本語"},{"title":"使用 moment 做日期格式化","locale":"zh-CN","native":"中文 (简体)"},{"title":"使用 moment 做日期格式化","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/learn/server-side/express_nodejs/displaying_data/date_formatting_using_moment","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/learn/server-side/express_nodejs/displaying_data/date_formatting_using_moment/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Learn","title":"Изучение веб-разработки"},{"uri":"/ru/docs/Learn/Server-side","title":"Серверное программирование веб-сайтов"},{"uri":"/ru/docs/Learn/Server-side/Express_Nodejs","title":"Веб-фреймворк Express (Node.js/JavaScript)"},{"uri":"/ru/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Учебник Express часть 5: Отображение данных библиотеки"},{"uri":"/ru/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Date_formatting_using_moment","title":"Форматирование даты при помощи moment"}],"pageTitle":"Форматирование даты при помощи moment - Изучение веб-разработки | MDN","noIndexing":false}}