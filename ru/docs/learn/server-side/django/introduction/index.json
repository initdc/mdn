{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Django введение","mdn_url":"/ru/docs/Learn/Server-side/Django/Introduction","locale":"ru","native":"Русский","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/Getting_started_with_the_web\"><strong>Новички начинают здесь!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Начало работы с Вебом</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web\">Начало работы с Вебом</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Установка базового программного обеспечения</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">Каким должен быть ваш веб-сайт?</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Работа с файлами</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/HTML_basics\">Основы HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/CSS_basics\">Основы CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">Основы JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Публикация вашего веб-сайта</a></li>\n            <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Как работает Веб</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/HTML\"><strong>HTML — структура Веба</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Вступление в HTML</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML\">Вступление в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Начало работы с HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">Что в \"шапке\"? Метаданные в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">Тексты в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Создание гиперссылок</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Продвинутое форматирование текста</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Структура документа и веб-сайта</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Отладка HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Задание: Выделение символа</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Задание: Структура страницы</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Мультимедиа и встраивание</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding\">Мультимедиа и встраивание</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Изображения в HTML</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Видео и аудио контент</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">От object до iframe — другие технологии встраивания</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Добавление векторный графики в Веб</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Отзывчивые изображения</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Задание: Страница о Mozilla</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML tables</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables\">HTML tables overview</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/ru/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/CSS\"><strong>CSS — стилизирование Веба</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS first steps</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Стилизирование текста</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text\">Стилизирование текста</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Fundamentals\">Основы стилизирования текста и шрифта</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Styling_lists\">Стилизирование списков</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Styling_links\">Стилизирование ссылок</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Web_fonts\">Веб-шрифты</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Задание: Стилизирование школьного сайта</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS макет</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout\">CSS макет</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Grids\">Сетки</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Floats\">Float</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Positioning\">Позиционирование</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/ru/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ru/docs/Learn/JavaScript\"><strong>JavaScript — динамический клиентский скриптинг</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Первые шаги в JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps\">Первые шаги в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">Что такое JavaScript?</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/A_first_splash\">Первое погружение в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/What_went_wrong\">Что-то пошло не так? Устранение ошибок JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Variables\">Хранение нужной информации — Переменные</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Math\">Основы JavaScript — Числа и операторы</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Strings\">Работа с текстом — Строки в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Полезные методы для строк</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Arrays\">Массивы</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Задание: Генератор глупых историй</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Блоки в JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks\">Блоки в JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/conditionals\">Делаем решения в вашем годе — Условия</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Looping_code\">Повторение кода</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Functions\">Функции — Переиспользуемые блоки кода</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Создаём свою функцию</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Return_values\">Возвращаемые значения функций</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Events\">Введение в события</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Задание: Галерея изображений</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Введение в объекты JavaScript</summary>\n          <ol>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects\">Введение в объекты JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Basics\">Основы объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object_prototypes\">Прототипы объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/JSON\">Работа с JSON данными</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Object_building_practice\">Практика по созданию объектов</a></li>\n            <li><a href=\"/ru/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Задание: Добавление возможностей в пример с прыгающими шарами</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web APIs</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility guides</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Accessibility\">Accessibility overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/ru/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility assessment</summary>\n        <ol>\n            <li><a href=\"/ru/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ru/docs/Learn/Tools_and_testing\"><strong>Инструменты и тестирование</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Кроссбраузерное тестирование</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing\">Кроссбраузерное тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Вступление в кроссбраузерное тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Стратегии выполнения тестирования</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Решение частых проблем с HTML и CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Решение частых проблем с JavaScript</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Решение частых проблем доступности</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Проверка поддержки возможностей</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Вступление в автоматическое тестирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Установка вашей автоматической среды тестирования</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/ru/docs/Learn/Server-side\"><strong>Программирование серверной части сайта</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Первые шаги</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps\">Первые шаги</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Introduction\">Вступление в серверное программирование</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Client-Server_overview\">Клиент-сервер</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Web_frameworks\">Веб-фреймворки для серверной части</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/First_steps/Website_security\">Защищённость веб-сайтов</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Веб-фреймворк Django (Python)</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django\">Веб-фреймворк Django (Python)</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Introduction\">Вступление</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/development_environment\">Установка среды разработки</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Руководство: Сайт местной библиотеки</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/skeleton_website\">Руководство часть 2: Создаём набросок сайта</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Models\">Руководство часть 3: Использование моделей</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Admin_site\">Руководство часть 4: Django панель администратора</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Home_page\">Руководство часть 5: Создание нашей домашней страницы</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Generic_views\">Руководство часть 6: Списки и представления</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Sessions\">Руководство часть 7: Сессии</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Authentication\">Руководство часть 8: Аутенфикация и разрешения пользователей</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Forms\">Руководство часть 9: Работа с формами</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Testing\">Руководство часть 10: Тестирование веб-приложения на Django</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/Deployment\">Руководство часть 11: Разворачивание Django на продакшн сервере</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/web_application_security\">Защищённость веб-приложения</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Django/django_assessment_blog\">Задание: создание мини блога</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript) overview</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node (Express) development environment</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express tutorial: The Local Library website</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li>\n          <li><a href=\"/ru/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Дальнейшее чтение</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Общие вопросы</summary>\n        <ol>\n          <li><a href=\"/ru/docs/Learn/HTML/Howto\">Вопросы по HTML</a></li>\n          <li><a href=\"/ru/docs/Learn/CSS/Howto\">Вопросы по CSS</a></li>\n          <li><a href=\"/ru/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Web_mechanics\">Как работает Веб</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Tools_and_setup\">Инструменты и установка</a></li>\n          <li><a href=\"/ru/docs/Learn/Common_questions#Design_and_accessibility\">Дизайн и доступность</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"><ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/Server-side/Django\"> Обзор: Django</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/Server-side/Django/development_environment\"> Далее  </a></li>\n</ul></div>\n\n<p class=\"summary\">В первой статье о Django мы отвечаем на вопрос «Что такое Django?» и даём обзор того, что делает его особенным. Мы опишем основные функции, в том числе некоторые из расширенных функций, которые у нас не будет времени подробно рассмотреть в этом модуле. Мы также покажем вам некоторые основные строительные блоки приложения Django (хотя на данный момент у вас ещё не будет среды разработки для тестирования).</p>\n\n<table>\n <tbody>\n  <tr>\n   <th scope=\"row\">Требования:</th>\n   <td>Базовая компьютерная грамотность. Общее понимание <a href=\"/ru/docs/Learn/Server-side/First_steps\">server-side website programming</a>, и в частности, механики <a href=\"/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview\">client-server interactions in websites</a>.</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Задача:</th>\n   <td>Узнать, что такое Django, какие функции он предоставляет, и основные строительные блоки приложения Django.</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"что_такое_django","title":"Что такое Django?","isH3":false,"content":"<p>Django — это высокоуровневый Python веб-фреймворк, который позволяет быстро создавать безопасные и поддерживаемые веб-сайты. Созданный опытными разработчиками, Django берёт на себя большую часть хлопот веб-разработки, поэтому вы можете сосредоточиться на написании своего веб-приложения без необходимости изобретать велосипед. Он бесплатный и с открытым исходным кодом, имеет растущее и активное сообщество, отличную документацию и множество вариантов как бесплатной, так и платной поддержки.</p>\n\n<p>Django помогает писать программное обеспечение, которое будет:</p>\n\n<dl>\n <dt id=\"полным\">Полным</dt>\n <dd>Django следует философии «Всё включено» и предоставляет почти всё, что разработчики могут захотеть сделать «из коробки». Поскольку всё, что вам нужно, является частью единого «продукта», всё это безупречно работает вместе, соответствует последовательным принципам проектирования и имеет обширную и <a href=\"https://docs.djangoproject.com/en/3.0/\" class=\"external\" rel=\" noopener\">актуальную документацию</a>.</dd>\n <dt id=\"разносторонним\">Разносторонним</dt>\n <dd><p>Django может быть (и был) использован для создания практически любого типа веб-сайтов — от систем управления контентом и wiki до социальных сетей и новостных сайтов. Он может работать с любой клиентской средой и может доставлять контент практически в любом формате (включая HTML, RSS-каналы, JSON, XML и т. д.). Сайт, который вы сейчас читаете, создан с помощью Django!</p>\n <p>Хотя Django предоставляет решения практически для любой функциональности, которая вам может понадобиться (например, для нескольких популярных баз данных, шаблонизаторов и т. д.), внутренне он также может быть расширен сторонними компонентами, если это необходимо.</p></dd>\n <dt id=\"безопасным\">Безопасным</dt>\n <dd><p>Django помогает разработчикам избежать многих распространённых ошибок безопасности, предоставляя фреймворк, разработанный чтобы «делать правильные вещи» для автоматической защиты сайта. Например, Django предоставляет безопасный способ управления учётными записями пользователей и паролями, избегая распространённых ошибок, таких как размещение информации о сеансе в файлы cookie, где она уязвима (вместо этого файлы cookie содержат только ключ, а фактические данные хранятся в базе данных) или непосредственное хранение паролей вместо хэша пароля.</p>\n <p><em>Хэш пароля </em>—<em> это значение фиксированной длины, созданное путём обработки пароля через <a href=\"https://ru.wikipedia.org/wiki/%D0%9A%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D1%85%D0%B5%D1%88-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F\" class=\"external\" rel=\" noopener\">криптографическую хэш-функцию</a>. Django может проверить правильность введённого пароля, пропустив его через хэш-функцию и сравнив вывод с сохранённым значением хэша. Благодаря «одностороннему» характеру функции, даже если сохранённое хэш-значение скомпрометировано, злоумышленнику будет сложно определить исходный пароль.</em></p>\n <p>Django, по умолчанию, обеспечивает защиту от многих уязвимостей, включая SQL-инъекцию, межсайтовый скриптинг, подделку межсайтовых запросов и кликджекинг (см. <a href=\"/ru/docs/Learn/Server-side/First_steps/Website_security\">Website security</a> для получения дополнительной информации об этих атаках).</p></dd>\n <dt id=\"масштабируемым\">Масштабируемым</dt>\n <dd>Django использует компонентную “<a href=\"https://en.wikipedia.org/wiki/Shared_nothing_architecture\" class=\"external\" rel=\" noopener\">shared-nothing</a>” архитектуру (каждая её часть  независима от других и, следовательно, может быть заменена или изменена, если это необходимо). Чёткое разделение частей означает, что Django может масштабироваться при увеличении трафика, путём добавления оборудования на любом уровне: серверы кеширования, серверы баз данных или серверы приложений. Одни из самых загруженных сайтов успешно масштабировали Django (например, Instagram и Disqus, если назвать только два из них).</dd>\n <dt id=\"удобным_в_сопровождении\">Удобным в сопровождении</dt>\n <dd>Код Django написан с использованием принципов и шаблонов проектирования, которые поощряют создание поддерживаемого и повторно используемого кода. В частности, в нём используется принцип «Don't Repeat Yourself» (DRY, «не повторяйся»), поэтому нет ненужного дублирования, что сокращает объём кода. Django также способствует группированию связанных функциональных возможностей в повторно используемые «приложения» и, на более низком уровне, группирует связанный код в модули (в соответствии с шаблоном <a href=\"/en-US/docs/Glossary/MVC\">Model View Controller (MVC)</a>).</dd>\n <dt id=\"переносным\">Переносным</dt>\n <dd>Django написан на Python, который работает на многих платформах. Это означает, что вы не привязаны к какой-либо конкретной серверной платформе и можете запускать приложения на многих версиях Linux, Windows и Mac OS X. Кроме того, Django хорошо поддерживается многими веб-хостингами, которые часто предоставляют определённую инфраструктуру и документацию для размещения сайтов Django.</dd>\n</dl>"}},{"type":"prose","value":{"id":"как_он_появился","title":"Как он появился?","isH3":false,"content":"<p>Django был разработан в период с 2003 по 2005 год командой, которая занималась созданием и обслуживанием газетных веб-сайтов. После создания нескольких сайтов, команда начала повторно использовать множество общего кода и шаблонов проектирования. Этот общий код эволюционировал в веб-фреймворк, который превратился в проект \"Django\" с открытым исходным кодом в июле 2005 года.</p>\n\n<p>Django продолжает расти и улучшаться с момента его первого релиза (1.0) в сентябре 2008 года до недавно выпущенной версии 3.1 (2020). В каждой версии добавлены новые функциональные возможности и исправлены ошибки, начиная от поддержки новых типов баз данных, шаблонизаторов и кеширования, до добавления «общих» функций просмотра и классов (уменьшающих объём кода, который разработчики должны писать для ряда программных задач).</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Примечание</strong>: Ознакомьтесь с <a href=\"https://docs.djangoproject.com/en/3.1/releases/\" class=\"external\" rel=\" noopener\">примечаниями к версии</a> на сайте Django, чтобы увидеть что изменилось в последних версиях и как много работы было проделано, чтобы улучшить Django.</p>\n</div>\n\n<p>Django — это процветающий совместный проект с открытым исходным кодом, в котором заняты многие тысячи пользователей и участников. Несмотря на то, что у него всё ещё есть некоторые особенности, которые отражают его происхождение, Django превратился в универсальный фреймворк, способный разрабатывать веб-сайты любого типа.</p>"}},{"type":"prose","value":{"id":"насколько_популярен_django","title":"Насколько популярен Django?","isH3":false,"content":"<p>Нет никаких доступных и окончательных оценок популярности серверных фреймворков (хотя сайты наподобие <a href=\"http://hotframeworks.com/\" class=\"external\" rel=\" noopener\">Hot Framework</a> и пытаются оценить популярность, используя такие механизмы, как подсчёт количества проектов на GitHub и вопросов на StackOverflow для каждой платформы). Лучший вопрос — «достаточно ли Django популярен», чтобы избежать проблем непопулярных платформ. Продолжает ли он развиваться? Можете ли вы получить помощь, если вам нужно? Найдёте ли вы оплачиваемую работу, если изучите Django?</p>\n\n<p>Основываясь на количестве крупных сайтов, которые используют Django, количестве участников и количестве людей, предоставляющих как бесплатную, так и платную поддержку, можно ответить: да, Django — популярный фреймворк!</p>\n\n<p>Django используют такие крупные сайты, как Disqus, Instagram, Knight Foundation, MacArthur Foundation, Mozilla, National Geographic, Open Knowledge Foundation, Pinterest и Open Stack (источник: <a href=\"https://www.djangoproject.com/start/overview/\" class=\"external\" rel=\" noopener\">обзорная страница Django</a>).</p>"}},{"type":"prose","value":{"id":"является_ли_django_гибким","title":"Является ли Django гибким?","isH3":false,"content":"<p>Веб-фреймворки часто можно поделить на \"гибкие\" и \"негибкие\".</p>\n\n<p>Негибкие - это те, у которых есть \"правильный путь\" для решения какой-либо конкретной задачи. Они часто поддерживают быстрое развёртывание в <em>определённой области</em> (решение проблем определённого типа), потому что правильный способ сделать что-либо обычно хорошо понимается и хорошо документируется. Однако они могут быть менее гибкими при решении проблем за пределами их основной сферы и, как правило, предлагают меньше вариантов того, какие компоненты и подходы они могут использовать.</p>\n\n<p>Напротив, у гибких фреймворков гораздо меньше ограничений на лучший способ склеивания компонентов для достижения цели или даже того, какие компоненты следует использовать. Они облегчают разработчикам использование наиболее подходящих инструментов для выполнения конкретной задачи, хотя и за счёт того, что вам нужно самим найти эти компоненты.</p>\n\n<p>Django «умеренно гибкий» и, следовательно, обеспечивает «лучшее из обоих миров». Он предоставляет набор компонентов для обработки большинства задач веб-разработки и один (или два) предпочтительных способа их использования. Однако такая архитектура Django означает, что вы обычно можете выбирать из нескольких различных опций или при необходимости добавлять поддержку для совершенно новых.</p>"}},{"type":"prose","value":{"id":"как_выглядит_код_django","title":"Как выглядит код Django?","isH3":false,"content":"<p>На традиционном информационном веб-сайте веб-приложение ожидает HTTP-запросы от веб-браузера (или другого клиента). Когда запрос получен, приложение разрабатывает то, что необходимо на основе URL-адреса и, возможно, данных в <code>POST</code> или <code>GET</code> запросах. В зависимости от того, что требуется, далее он может читать или записывать информацию из базы данных или выполнять другие задачи, необходимые для удовлетворения запроса. Затем приложение вернёт ответ веб-браузеру, часто динамически создавая HTML-страницу для отображения в браузере, вставляя полученные данные в HTML-шаблон.</p>\n\n<p>Веб-приложения, написанные на Django, обычно группируют код, который обрабатывает каждый из этих шагов, в отдельные файлы:</p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/13931/basic-django.png\" style=\"border-style: solid; border-width: 1px; display: block; margin: 0px auto;\" loading=\"lazy\"></p>\n\n<ul>\n <li><strong>URLs: </strong>Хотя можно обрабатывать запросы с каждого URL-адреса с помощью одной функции, гораздо удобнее писать отдельную функцию для обработки каждого ресурса. URL-маршрутизатор используется для перенаправления HTTP-запросов в соответствующее представление на основе URL-адреса запроса. Кроме того, URL-маршрутизатор может извлекать данные из URL-адреса в соответствии с заданным шаблоном и передавать их в соответствующую функцию отображения (view) в виде аргументов.</li>\n <li><strong>View:</strong> View (англ. «отображение») — это функция обработчика запросов, которая получает HTTP-запросы и возвращает ответы. Функция view имеет доступ к данным, необходимым для удовлетворения запросов, и делегирует ответы в шаблоны через модели.</li>\n <li><strong>Models:</strong> Модели представляют собой объекты Python, которые определяют структуру данных приложения и предоставляют механизмы для управления (добавления, изменения, удаления) и выполнения запросов в базу данных.</li>\n <li><strong>Templates:</strong> Template (англ. «шаблон») — это текстовый файл, определяющий структуру или разметку страницы (например HTML-страницы), с полями для подстановки, которые используются для вывода актуального содержимого. <em>View</em> может динамически создавать HTML-страницы, используя HTML-шаблоны и заполняя их данными из модели (<em>model).</em> Шаблон может быть использован для определения структуры файлов любых типов, не обязательно HTML.</li>\n</ul>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Примечание</strong>: Django реализует уровневую архитектуру \"Model View Template (MVT)\". Она имеет много общего с более известной архитектурой <a href=\"/en-US/docs/Web/Apps/Fundamentals/Modern_web_app_architecture/MVC_architecture\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Model View Controller</a>. </p>\n</div>\n\n<ul>\n</ul>\n\n<p>Следующие разделы дадут вам понимание того, как выглядят основные части Django (мы их изучим более детально чуть позже на курсе, когда будет настраивать окружение разработчика). </p>"}},{"type":"prose","value":{"id":"отправка_запроса_в_правильное_view_urls.py","title":"Отправка запроса в правильное view (urls.py)","isH3":true,"content":"<p>Сопоставитель URL-адресов обычно содержится в файле <strong>urls.py</strong>. В примере ниже сопоставитель (<code>urlpatterns</code>) определяет список сопоставлений между<em>маршрутами </em>(определёнными URL-<em>шаблонами</em>) и соответствующими функциями отображения (view). Если получен HTTP-запрос, который имеет URL-адрес, соответствующий определённому шаблону, то затем будет вызвана связанная функция отображения (view) и передана в запрос.</p>\n\n<pre class=\"notranslate\">urlpatterns = [\n    <strong>path('admin/', admin.site.urls),\n    </strong>path('book/&lt;int:id&gt;/', views.book_detail, name='book_detail'),\n    path('catalog/', include('catalog.urls')),\n    re_path(r'^([0-9]+)/$', views.best),\n]</pre>\n\n<p>Объект <code>urlpatterns</code> является списком функций <code>path()</code> и/или <code>re_path()</code> (в Python списки определяются с помощью квадратных скобок, внутри которых элементы разделены запятыми и могут содержать <a href=\"https://docs.python.org/2/faq/design.html#why-does-python-allow-commas-at-the-end-of-lists-and-tuples\" class=\"external\" rel=\" noopener\">необязательную завершающую запятую</a>. Например: <code>[item1, item2, item3,]</code>).</p>\n\n<p>Первый аргумент в обоих методах - маршрут (шаблон), который будет сопоставлен. В методе <code>path()</code> угловые скобки используются для определения частей URL-адреса, которые будут захвачены и переданы в функцию отображения (view) в качестве именованных аргументов. Функция <code>re_path()</code> использует гибкий подход к сопоставлению с шаблоном, известный как регулярное выражение. Мы поговорим об этом в следующей статье!</p>\n\n<p>Второй аргумент — это ещё одна функция, которая будет вызываться при сопоставлении шаблона. Обозначение <code>views.book_detail</code> указывает, что функция называется <code>book_detail()</code> и может быть обнаружена в модуле с именем <code>views</code> (т.е. внутри файла с именем <code>views.py</code>).</p>"}},{"type":"prose","value":{"id":"обработка_запроса_views.py","title":"Обработка запроса (views.py)","isH3":true,"content":"<p>Отображения (views) — это сердце веб-приложения, принимающего HTTP-запросы от веб-клиентов и возвращающего HTTP-ответы. Между этим они используют другие ресурсы фреймворка для доступа к базам данных, шаблонам визуализации и т. д.  </p>\n\n<p>В приведённом ниже примере показана минимальная функция представления <code>index()</code>, которая могла быть вызвана нашим сопоставителем URL-адресов в предыдущем разделе. Как и все функции отображения (view), она получает объект <code>HttpRequest</code> в качестве параметра (<code>request</code>) и возвращает объект <code>HttpResponse</code>. В этом случае мы ничего не делаем с запросом, и наш ответ просто возвращает жёстко запрограммированную строку. Мы покажем вам запрос, который делает что-то более интересное в следующем разделе.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\">## filename: views.py (Django view functions)</span>\n\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Получить HttpRequest — параметр запроса</span>\n    <span class=\"token comment\"># Выполнить операции, используя информацию из запроса.</span>\n    <span class=\"token comment\"># Вернуть HttpResponse</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello from Django!'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p><strong>Примечание</strong>: Немного Python:</p>\n\n<ul>\n <li><a href=\"https://docs.python.org/3/tutorial/modules.html\" class=\"external\" rel=\" noopener\">Модули Python</a> это библиотеки функций, сохранённые в различных файлах, которые мы можем использовать в нашем коде. Здесь мы импортируем только объект <code>HttpResponse</code> из модуля <code>django.http</code> чтобы использовать его в нашем отображении (view): <code>from django.http import HttpResponse</code> . Также есть другие способы импортирования некоторых или всех объектов модуля.</li>\n <li>Функции объявляются с помощью ключевого слова <code>def</code>, как показано выше, с именованными параметрами, перечисленными в скобках после имени функции; строка завершается двоеточием. Заметьте, что следующие строки содержат отступы.  Отступы важны, так как они определяют, какие строки кода находятся внутри конкретного блока (обязательные отступы — это ключевая особенность Python и одна из причин, почему код на Python так легко читать).</li>\n</ul>\n</div>\n\n<ul>\n</ul>\n\n<p>Отображения (view) обычно содержатся в файле <strong>views.py</strong>.</p>"}},{"type":"prose","value":{"id":"определение_данных_модели_models.py","title":"Определение данных модели (models.py)","isH3":true,"content":"<p>Веб-приложения Django обрабатывают и запрашивают данные через объекты Python, называемые моделями. Модели определяют структуру хранимых данных, включая типы полей и, возможно, их максимальный размер, значения по умолчанию, параметры списка выбора, текст справки для документации, текст меток для форм и т. д. Определение модели не зависит от используемой базы данных — ваши модели будут работать в любой из них. После того как вы выбрали базу данных, которую хотите использовать, вам не нужно напрямую обращаться к ней — вы просто пишете свою структуру модели и другой код, а Django выполняет всю «грязную работу» по обращению к базе данных за вас.</p>\n\n<p>В приведённом ниже фрагменте кода показана очень простая модель Django для объекта <code>Team</code>. Класс <code>Team</code> наследуется от класса <code>models.Model</code>. Он определяет имя команды и командный уровень в качестве полей символов и задаёт максимальное количество символов, которые могут быть сохранены для каждой записи. <code>Team_level</code> может быть одним из нескольких значений, поэтому мы определяем его как поле выбора и предоставляем сопоставление между отображаемыми вариантами и хранимыми данными вместе со значением по умолчанию.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\"># filename: models.py</span>\n\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Team</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    team_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span>\n\n    TEAM_LEVELS <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'U09'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Under 09s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'U10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Under 10s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'U11'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Under 11s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token comment\">#список других командных уровней</span>\n    <span class=\"token punctuation\">)</span>\n    team_level <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>choices<span class=\"token operator\">=</span>TEAM_LEVELS<span class=\"token punctuation\">,</span>default<span class=\"token operator\">=</span><span class=\"token string\">'U11'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n\n<div class=\"note notecard\" id=\"sect6\">\n<p><strong>Примечание</strong>: Немного Python:</p>\n\n<ul>\n <li>Python поддерживает «объектно-ориентированное программирование», то есть стиль программирования, в котором мы организуем наш код в объекты, которые включают связанные данные и функции для работы с этими данными. Объекты также могут наследовать / расширять / выводить из других объектов, позволяя использовать одинаковое поведение между связанными объектами. В Python мы используем ключевое слово <code>class</code>, чтобы определить «скелет» для объекта. Мы можем создать несколько конкретных <em>экземпляров</em> типа объекта на основе модели в классе.<br>\n  <br>\n  Так, например, мы имеем класс <code>Team</code>, который происходит от класса <code>Model</code>. Это означает, что эта модель будет содержать все методы модели, но мы также можем дать ей специализированные возможности. В нашей модели мы определяем поля нашей базы данных, в которой будем хранить данные, присваивая им конкретные имена. Django использует эти определения, включая имена полей, для создания основной базы данных.</li>\n</ul>\n</div>"}},{"type":"prose","value":{"id":"запросы_данных_views.py","title":"Запросы данных (views.py)","isH3":true,"content":"<p>Модель Django предоставляет простой API запросов для поиска в базе данных. Поиск может осуществляться по нескольким полям одновременно, используя различные критерии (такие как exact («точный»), case-insensitive («без учёта регистра»), greater than («больше чем») и т. д.), и может поддерживать сложные выражения (например, вы можете указать поиск в командах U11, у которых есть имя команды, начинающееся с «Fr» или заканчивается на «al»).</p>\n\n<p>Фрагмент кода показывает функцию view (обработчик ресурсов) для отображения всех команд U09. Выделенная жирным строка показывает, как мы можем использовать модель API-запросов для того, чтобы отфильтровать все записи, где поле <code>team_level</code> в точности содержит текст 'U09' (обратите внимание, как эти критерии передаются функции <code>filter()</code> в качестве аргумента с именем поля и типом соответствия, разделённым двойным подчёркиванием: <strong>team_level__exact</strong>). </p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\">## filename: views.py</span>\n\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Team\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    list_teams <span class=\"token operator\">=</span> Team<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>team_level__exact<span class=\"token operator\">=</span><span class=\"token string\">\"U09\"</span><span class=\"token punctuation\">)</span>\n    context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'youngest_teams'</span><span class=\"token punctuation\">:</span> list_teams<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'/best/index.html'</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span>\n</code></pre></div>\n\n<dl>\n</dl>\n\n<p>Данная функция использует функцию <code>render()</code> для того, чтобы создать <code>HttpResponse</code>, который будет отправлен назад браузеру. Эта функция является <em>ярлыком</em>; она создаёт HTML-файл, комбинируя указанный HTML-шаблон и некоторые данные для вставки в шаблон (предоставляется в переменной с именем «<code>context</code>»). В следующем разделе мы  покажем как данные вставляются в шаблон для создания HTML-кода.</p>"}},{"type":"prose","value":{"id":"вывод_данных_html-шаблоны","title":"Вывод данных (HTML-шаблоны)","isH3":true,"content":"<p>Системы шаблонов позволяют указать структуру выходного документа, используя заполнители для данных, которые будут вставлены при генерировании страницы. Шаблоны часто используются для создания HTML, но также могут создавать другие типы документов. Django «из коробки» поддерживает как собственную систему шаблонов, так и другую популярную библиотеку Python под названием Jinja2 (она также может быть использована для поддержки других систем, если это необходимо).</p>\n\n<p>Фрагмент кода показывает, как может выглядеть HTML-шаблон, вызванный функцией  <code>render()</code> из предыдущего раздела. Этот шаблон был написан с предположением, что во время отрисовки он будет иметь доступ к переменной списка, названной <code>youngest_teams</code> (содержащейся в контекстной переменной внутри функции <code>render()</code> выше). Внутри скелета HTML мы имеем выражение, которое сначала проверяет, существует ли переменная <code>youngest_teams</code>, а затем повторяет её в цикле <code>for</code>. При каждом повторе шаблон отображает значение <code>team_name</code> каждой команды в элементе <code><a href=\"/ru/docs/Web/HTML/Element/li\"><code>&lt;li&gt;</code></a></code>.</p>\n\n<pre class=\"notranslate\">## filename: best/templates/best/index.html\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;title&gt;Home page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  {% if youngest_teams %}\n    &lt;ul&gt;\n      {% for team in youngest_teams %}\n        &lt;li&gt;{{ team.team_name }}&lt;/li&gt;\n      {% endfor %}\n    &lt;/ul&gt;\n  {% else %}\n    &lt;p&gt;No teams are available.&lt;/p&gt;\n  {% endif %}\n&lt;/body&gt;\n&lt;/html&gt;</pre>"}},{"type":"prose","value":{"id":"что_ещё_можно_сделать","title":"Что ещё можно сделать?","isH3":false,"content":"<p>В предыдущих разделах показаны основные особенности, которые вы будете использовать почти в каждом веб-приложении: сопоставление URL-адресов, отображение, модели и шаблоны. Также Django предоставляет несколько других вещей:</p>\n\n<ul>\n <li><strong>Формы</strong>: HTML-формы используются для сбора пользовательских данных для обработки на сервере. Django упрощает создание, проверку и обработку формы.</li>\n <li><strong>Аутентификация пользователя и разрешения</strong>: Django включает надёжную систему аутентификации и авторизации пользователей, которая была построена с учётом безопасности.</li>\n <li><strong>Кеширование:</strong> Создание динамического контента намного более интенсивно (и медленнее), чем обслуживание статического содержимого. Django обеспечивает гибкое кеширование, чтобы вы могли хранить всю или часть отображаемой страницы, для того, чтобы она не вызывалась повторно, за исключением случаев, когда это необходимо.</li>\n <li><strong>Админ-панель: </strong>Административная панель в Django включена по умолчанию при создании приложения с использованием основного каркаса. Это упрощает управление админкой администраторам сайта для создания, редактирования и просмотра любых данных на вашем сайте.</li>\n <li><strong>Сериализация данных (преобразование в последовательную форму)</strong>: Django упрощает сериализацию и обслуживание ваших данных в таких форматах как XML или JSON. Это может быть полезно при создании веб-сервисов (веб-сайтов, которые исключительно служат для использования данных другими приложениями или сайтами и сами ничего не отображают) или при создании веб-сайта, на котором клиентский код обрабатывает весь рендеринг данных.</li>\n</ul>"}},{"type":"prose","value":{"id":"резюме","title":"Резюме","isH3":false,"content":"<p>Поздравляем, вы завершили первый шаг в своём путешествии по Django! Теперь вы должны понимать основные преимущества Django, немного его истории, и примерно как может выглядеть каждая из основных частей приложения Django. Вы должны также изучить несколько вещей о языке программирования Python, включая синтаксис списков, функций и классов.</p>\n\n<p>Вы уже видели код на Django выше, но в отличие от клиентского кода вам нужно настроить среду разработки для её запуска. Это наш следующий шаг.</p>\n\n<div id=\"sect7\"><ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/Server-side/Django\"> Обзор: Django</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Learn/Server-side/Django/development_environment\"> Далее  </a></li>\n</ul></div>"}}],"toc":[{"text":"Что такое Django?","id":"что_такое_django"},{"text":"Как он появился?","id":"как_он_появился"},{"text":"Насколько популярен Django?","id":"насколько_популярен_django"},{"text":"Является ли Django гибким?","id":"является_ли_django_гибким"},{"text":"Как выглядит код Django?","id":"как_выглядит_код_django"},{"text":"Что ещё можно сделать?","id":"что_ещё_можно_сделать"},{"text":"Резюме","id":"резюме"}],"summary":"В первой статье о Django мы отвечаем на вопрос «Что такое Django?» и даём обзор того, что делает его особенным. Мы опишем основные функции, в том числе некоторые из расширенных функций, которые у нас не будет времени подробно рассмотреть в этом модуле. Мы также покажем вам некоторые основные строительные блоки приложения Django (хотя на данный момент у вас ещё не будет среды разработки для тестирования).","popularity":0.0025,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Django introduction","locale":"en-US","native":"English (US)"},{"title":"Introducción a Django","locale":"es","native":"Español"},{"title":"Introduction à Django","locale":"fr","native":"Français"},{"title":"Djangoの紹介","locale":"ja","native":"日本語"},{"title":"Django 소개","locale":"ko","native":"한국어"},{"title":"Introdução ao Django","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Django 介绍","locale":"zh-CN","native":"中文 (简体)"},{"title":"Django 介紹","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/learn/server-side/django/introduction","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/learn/server-side/django/introduction/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Learn","title":"Изучение веб-разработки"},{"uri":"/ru/docs/Learn/Server-side","title":"Серверное программирование веб-сайтов"},{"uri":"/ru/docs/Learn/Server-side/Django","title":"Веб-фреймворк Django (Python)"},{"uri":"/ru/docs/Learn/Server-side/Django/Introduction","title":"Django введение"}],"pageTitle":"Django введение - Изучение веб-разработки | MDN","noIndexing":false}}