{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Как сделать PWA устанавливаемым","mdn_url":"/ru/docs/Web/Progressive_web_apps/Installable_PWAs","locale":"ru","native":"Русский","sidebarHTML":"\n<ol></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Web/Progressive_web_apps/Offline_Service_workers\" title=\"Currently only available in English (US)\"> Назад  (en-US)</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Web/Progressive_web_apps\" title=\"Currently only available in English (US)\"> Обзор: Progressive (en-US)</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\" title=\"Currently only available in English (US)\"> Далее   (en-US)</a></li>\n</ul>\n<p>В предыдущей статье мы читали о том, как <a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">js13kPWA</a> работает в off-line режиме благодаря <a href=\"/ru/docs/Web/API/Service_Worker_API\">service worker</a>, но мы можем пойти дальше и позволить устанавливать веб-приложения на поддерживающие мобильные браузеры, как если бы это было нативное приложение. В этой статье разберём, как этого добиться, используя веб-манифест и функцию под названием «Добавить на главный экран».</p>\n<p>Эта технология позволяет запускать приложение прямо с рабочего стола, без запуска браузера и ручного ввода URL-адреса. Ваше веб-приложение может быть установлено рядом с нативным. Поэтому к нему проще получить доступ, а так же вы можете указать, что приложение должно использовать полноэкранный режим браузера, делая его ещё более похожим на нативное</p>"}},{"type":"prose","value":{"id":"требования","title":"Требования","isH3":false,"content":"<p>Чтобы сделать сайт доступным для установки, ему необходимы следующие вещи:</p>\n<ul>\n  <li>Веб-манифест с <a href=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen#manifest\">правильно заполненными полями</a></li>\n  <li>Сайт должен использовать защищённый (HTTPS) домен</li>\n  <li>Иконка для предоставления приложения на устройстве</li>\n  <li>Зарегистрированный service worker, чтобы приложение работало в off-line режиме (на данный момент требуется только для Chrome на Android)</li>\n</ul>"}},{"type":"prose","value":{"id":"файл_манифеста","title":"Файл манифеста","isH3":true,"content":"<p>Ключевым элементом является файл манифеста, в котором представлена вся информация о веб-сайте в JSON формате.</p>\n<p>Обычно находится в корневой папке веб-приложения. Содержит информацию, такую как название приложения, paths пути к значкам разных размеров, которые можно использовать для представления приложения в мобильных операционных системах (например, в качестве значка домашнего экрана), и цвет фона для использования при загрузке. Эта информация необходима браузеру для правильного отображения приложения при установке и на домашнем экране.</p>\n<p>Файл <code>js13kpwa.webmanifest</code> веб-приложения <a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">js13kPWA</a> включён в раздел <a href=\"/ru/docs/Web/HTML/Element/head\"><code>&lt;head&gt;</code></a> файла <code>index.html</code> с помощью следующей строчки кода:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manifest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>js13kpwa.webmanifest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Примечание:</strong> Существует несколько расширений, используемых в прошлом: <code>manifest.webapp</code> был популярен в манифестах приложений Firefox OS, также многие используют <code>manifest.json</code> потому что содержание организовано по структуре JSON. Однако, расширение <code>.webmanifest</code> явно упоминается в <a href=\"https://w3c.github.io/manifest/\" class=\"external\" rel=\" noopener\">W3C manifest specification</a>, поэтому давайте придерживаться именно этого стандарта.</p>\n</div>\n<p>Содержимое файла может выглядеть так:</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"js13kGames Progressive Web App\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"short_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"js13kPWA\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Progressive Web App that lists games submitted to the A-Frame category in the js13kGames 2017 competition.\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icons/icon-32.png\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"32x32\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// ...</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icons/icon-512.png\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"512x512\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/pwa-examples/js13kpwa/index.html\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"display\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fullscreen\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"theme_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#B12A34\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"background_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#B12A34\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Названия большинства полей говорят сами за себя, но давайте разберём документ и объясним всё подробно:</p>\n<ul>\n  <li><code>name</code>: Полное название вашего приложения.</li>\n  <li><code>short_name</code>: Короткое название для отображения на домашнем экране.</li>\n  <li><code>description</code>: Одно-два предложения, описывающих приложение.</li>\n  <li><code>icons</code>: Куча информации о значках — URL, размеры, типы. Не забудьте указать хотя бы несколько, чтобы иконка лучше подходила под устройство пользователя</li>\n  <li><code>start_url</code>: Загружаемый исходный документ при запуске приложения</li>\n  <li><code>display</code>: Как приложение должно отображаться; может быть fullscreen (полноэкранный), standalone (автономный), minimal-ui (минимальный пользовательский интерфейс), browser (браузер)</li>\n  <li><code>theme_color</code>: Основной цвет для интерфейса, используемый операционной системой</li>\n  <li><code>background_color</code>: Цвет для фона, используемый при установке и на заставке</li>\n</ul>\n<p>Минимальные требования к манифесту - <code>name</code> и хотя бы один значок (с <code>src</code>, <code>size</code> и <code>type</code>). Поля <code>description</code>, <code>short_name</code>, и <code>start_url</code> являются рекомендуемыми. Вы можете использовать даже больше полей, чем указано выше — не забудьте проверить ссылку на <a href=\"/ru/docs/Web/Manifest\">Web App Manifest reference</a>.</p>"}},{"type":"prose","value":{"id":"добавить_на_домашний_экран","title":"Добавить на домашний экран","isH3":false,"content":"<p>\"Добавить на домашний экран\" (кратко: a2hs) - это функция, реализованная браузерами, которая берёт информацию, найденную в веб-манифесте, и использует для добавления приложения на домашний экран устройства со значком и именем. Это работает при выполнении требований, описанных выше.</p>\n<p>Когда пользователь посещает PWA с помощью браузера, поддерживающего технологию, должен отобразиться значок, указывающий на возможность установки приложения в качестве PWA.</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/15928/js13kpwa-icon.png\" alt=\"Add to Home screen popup of js13kPWA.\" loading=\"lazy\">\n</p>\n<p>После того, как пользователь кликнет на иконку, отобразится баннер установки. Информация в баннере генерируется на основе файла-манифеста — имя и значок отображаются в приглашении.</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/15927/js13kpwa-banner.png\" alt=\"Install banner of js13kPWA.\" loading=\"lazy\">\n</p>\n<p>Если пользователь нажимает кнопку, появляется окно, на котором изображены ярлык приложения и кнопки для подтверждения действий.</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/15926/js13kpwa-add.png\" alt=\"Add to Home screen popup of js13kPWA.\" loading=\"lazy\">\n</p>\n<p>При подтверждении ярлык будет добавлен на рабочий стол.</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/15834/js13kpwa-installed.png\" alt=\"\" loading=\"lazy\">\n</p>\n<p>После этого пользователь может запустить приложение и сразу начать его использовать. Обратите внимание, иногда у PWA (в зависимости от браузера и/или операционной системы) в правом нижнем углу отображается иконка браузера, чтобы пользователи понимали, что работают с веб-приложением.</p>"}},{"type":"prose","value":{"id":"экран_загрузки","title":"Экран загрузки","isH3":true,"content":"<p>В некоторых браузерах, на основе информации из манифеста, создаётся заставка, отображаемая при запуске PWA</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/15835/js13kpwa-splash.png\" alt=\"\" loading=\"lazy\">\n</p>\n<p>Иконка и фоновый цвет использовались для создания заставки.</p>"}},{"type":"prose","value":{"id":"итог","title":"Итог","isH3":false,"content":"<p>В статье мы узнали, как сделать PWA устанавливаемыми, используя веб-манифест, и добавить их на главный экран.</p>\n<p>Для получения большей информации, можете почитать наш <a href=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Add to Home screen гайд (en-US)</a>. В настоящее время поддержка ограничена браузерами Firefox для Android 58+, Мобильным Chrome и Android Webview 31+, также Opera для Android 32+, но поддержка должна расширяться в ближайшем будущем.</p>\n<p>Теперь давайте перейдём к последнему фрагменту PWA-головоломки — повторному запуску с помощью push-уведомлений.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Web/Progressive_web_apps/Offline_Service_workers\" title=\"Currently only available in English (US)\"> Назад  (en-US)</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Web/Progressive_web_apps\" title=\"Currently only available in English (US)\"> Обзор: Progressive (en-US)</a></li>\n    <li><a class=\"button minimal only-in-en-us\" href=\"/en-US/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\" title=\"Currently only available in English (US)\"> Далее   (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"Требования","id":"требования"},{"text":"Добавить на домашний экран","id":"добавить_на_домашний_экран"},{"text":"Итог","id":"итог"}],"summary":"В предыдущей статье мы читали о том, как js13kPWA работает в off-line режиме благодаря service worker, но мы можем пойти дальше и позволить устанавливать веб-приложения на поддерживающие мобильные браузеры, как если бы это было нативное приложение. В этой статье разберём, как этого добиться, используя веб-манифест и функцию под названием «Добавить на главный экран».","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"How to make PWAs installable","locale":"en-US","native":"English (US)"},{"title":"Cómo hacer PWAs instalables","locale":"es","native":"Español"},{"title":"Comment rendre les PWAs installables","locale":"fr","native":"Français"},{"title":"PWA をインストール可能にするには","locale":"ja","native":"日本語"},{"title":"PWA를 설치가능하게 만드는 방법","locale":"ko","native":"한국어"},{"title":"让 PWA 易于安装","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/progressive_web_apps/installable_pwas","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/progressive_web_apps/installable_pwas/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/Progressive_web_apps","title":"Прогрессивные веб-приложения"},{"uri":"/ru/docs/Web/Progressive_web_apps/Installable_PWAs","title":"Как сделать PWA устанавливаемым"}],"pageTitle":"Как сделать PWA устанавливаемым - Прогрессивные веб-приложения | MDN","noIndexing":false}}