{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Конструктор Function()","mdn_url":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/Function","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects\">Стандартные встроенные объекты</a></strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Свойства</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Методы</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong>Наследование:</strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Конструктор <code>Function</code></strong> создаёт новый <strong>объект</strong> <code>Function</code>. Вызов конструктора напрямую позволяет создавать функции программным путём, однако такой способ представляет угрозу для безопасности, а также несёт разные (хотя не такие значительные) проблемы с производительностью при использовании с <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>Global_Objects/eval</code></a>. Однако в отличие от eval, конструктор <code>Function</code> создаёт функции, выполняемые только в глобальной области видимости.</p><iframe class=\"interactive\" height=\"410\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/function-constructor.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"синтаксис","title":"Синтаксис","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> functionBody<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> functionBody<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">(</span>arg1<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">,</span> argN<span class=\"token punctuation\">,</span> functionBody<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"параметры","title":"Параметры","isH3":true,"content":"<dl>\n  <dt id=\"arg1_arg2_..._argn\"><code>arg1, arg2, ... argN</code></dt>\n  <dd>\n    <p>Имена, используемые функцией в качестве имён формальных аргументов. Каждое имя должно быть строкой с правильным JavaScript-значением (либо <a href=\"/ru/docs/Glossary/Identifier\">идентификатором</a>, <a href=\"/ru/docs/Web/JavaScript/Reference/Functions/Rest_parameters\">оставшимся параметром</a>, или <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">деструктурирующим присваиванием</a>, либо списком таких строк, разделённых запятой.</p>\n    <p>Поскольку параметры разбираются так же, как и объявления функций, допускается использование пробелов и комментариев. Например: <code>\"x\", \"theValue = 42\", \"[a, b] /* numbers */\"</code> — или <code>\"x, theValue = 42, [a, b] /* numbers */\"</code>. (<code>\"x, theValue = 42\", \"[a, b]\"</code> также будет правильным, хотя трудно читаемым).</p>\n  </dd>\n  <dt id=\"functionbody\"><code>functionBody</code></dt>\n  <dd>\n    <p>Строка, содержащая инструкции JavaScript, составляющие определение функции.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"описание","title":"Описание","isH3":false,"content":"<p>Объекты <code>Function</code>, созданные конструктором <code>Function</code>, разбираются при создании функции. Определение функции при помощи <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/function\">выражения function</a> или <a href=\"/ru/docs/Web/JavaScript/Reference/Statements/function\">инструкции function</a> и вызова её внутри вашего кода более эффективно, поскольку такие функции разбираются вместе с остальным кодом.</p>\n<p>Все аргументы, переданные в функцию, трактуются как имена идентификаторов параметров создаваемой функции, и имеют тот же порядок следования, что и при их передаче в конструктор функции. Если опустить аргумент, то значение этого параметра будет <code>undefined</code>.</p>\n<p>Вызов конструктора <code>Function</code> как функции (без использования оператора <code>new</code>) имеет тот же самый эффект, что и вызов его как конструктора.</p>"}},{"type":"prose","value":{"id":"примеры","title":"Примеры","isH3":false,"content":""}},{"type":"prose","value":{"id":"пример_указание_аргументов_в_конструкторе_function","title":"Пример: указание аргументов в конструкторе Function","isH3":true,"content":"<p>Следующий код создаёт объект `Function, который принимает два аргумента.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Пример может быть запущен непосредственно в вашей консоли JavaScript</span>\n\n<span class=\"token comment\">// Создаём функцию, принимающую два аргумента, и возвращающую их сумму</span>\n<span class=\"token keyword\">const</span> adder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'return a + b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Вызываем функцию</span>\n<span class=\"token function\">adder</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 8</span>\n</code></pre></div>\n<p>Аргументы \"<code>a</code>\" и \"<code>b</code>\" являются именами формальных аргументов, которые используются в теле функции, \"<code>return a + b</code>\".</p>"}},{"type":"specifications","value":{"title":"Спецификации","id":"спецификации","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-function-constructor","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Function.Function"}},{"type":"browser_compatibility","value":{"title":"Поддержка браузерами","id":"поддержка_браузерами","isH3":false,"query":"javascript.builtins.Function.Function","dataURL":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/Function/bcd.json"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":"<ul>\n  <li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions\">Функции и их область видимости</a></li>\n  <li>Инструкция <a href=\"/ru/docs/Web/JavaScript/Reference/Statements/function\"><code>function</code></a></li>\n  <li>Выражение <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/function\"><code>function</code></a></li>\n  <li>Инструкция <a href=\"/ru/docs/Web/JavaScript/Reference/Statements/function*\"><code>function*</code></a></li>\n  <li>Выражение <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/function*\"><code>function*</code></a></li>\n  <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\"><code>AsyncFunction</code></a></li>\n  <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\"><code>GeneratorFunction</code></a></li>\n</ul>"}}],"toc":[{"text":"Синтаксис","id":"синтаксис"},{"text":"Описание","id":"описание"},{"text":"Примеры","id":"примеры"},{"text":"Спецификации","id":"спецификации"},{"text":"Поддержка браузерами","id":"поддержка_браузерами"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"Конструктор Function создаёт новый объект Function. Вызов конструктора напрямую позволяет создавать функции программным путём, однако такой способ представляет угрозу для безопасности, а также несёт разные (хотя не такие значительные) проблемы с производительностью при использовании с Global_Objects/eval. Однако в отличие от eval, конструктор Function создаёт функции, выполняемые только в глобальной области видимости.","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Function() constructor","locale":"en-US","native":"English (US)"},{"title":"Function() constructor","locale":"es","native":"Español"},{"title":"Constructeur Function()","locale":"fr","native":"Français"},{"title":"Function() コンストラクター","locale":"ja","native":"日本語"}],"source":{"folder":"ru/web/javascript/reference/global_objects/function/function","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/javascript/reference/global_objects/function/function/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference","title":"Справочник по JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects","title":"Стандартные встроенные объекты"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function","title":"Function"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/Function","title":"Конструктор Function()"}],"pageTitle":"Конструктор Function() - JavaScript | MDN","noIndexing":false}}