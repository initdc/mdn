{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Function.name","mdn_url":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects\">Стандартные встроенные объекты</a></strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Свойства</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><em><code>Function.prototype.name</code></em></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Методы</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong>Наследование:</strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p>Read-only свойство <code><strong>name</strong></code> глобального объекта <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a> и его <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function#function_instances\">экземпляров</a> содержит название функции созданное во время определения функции или присваивания ссылки на функцию переменной, свойству, аргументу и т. п. Для анонимных функций это свойство может иметь значение <code>\"anonymous\"</code> или пустую строку  <code>\"\"</code>.</p>\n\n<p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/function-name.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe></p>\n\n<p>Интерактивные примеры размещены в GitHub репозитории. Если вы хотите добавить свои примеры, то клонируйте <a href=\"https://github.com/mdn/interactive-examples\" class=\"external\" rel=\" noopener\">https://github.com/mdn/interactive-examples</a> и пришлите пул реквест.</p>\n\n<p><table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th class=\"header\" colspan=\"2\">Атрибуты свойства<code>Function.name</code></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Записываемое</td>\n      <td>нет</td>\n    </tr>\n    <tr>\n      <td>Перечисляемое</td>\n      <td>нет</td>\n    </tr>\n    <tr>\n      <td>Настраиваемое</td>\n      <td>да</td>\n    </tr>\n  </tbody>\n</table><br>\n  </p>\n\n<div class=\"note notecard\" id=\"sect1\">\n<p>Заметьте, что в нестандартном, pre-ES2015 релизе <code>configurable</code> свойство было <code>false</code></p>\n</div>"}},{"type":"prose","value":{"id":"summary","title":"Примеры","isH3":false,"content":""}},{"type":"prose","value":{"id":"имя_объявленной_функции","title":"Имя объявленной функции","isH3":true,"content":"<p>Свойство <code>name</code> возвращает имя функции, либо пустую строку для анонимных функций:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>doSomething<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// выведет \"doSomething\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"имя_функции-конструктора","title":"Имя функции-конструктора","isH3":true,"content":"<p>Функции, созданные синтаксисом <code>new Function(...)</code> или просто <code>Function(...)</code> создают  <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a> и имеют name \"anonymous\":​​​</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"anonymous\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"предполагаемые_имена_функций","title":"Предполагаемые имена функций","isH3":true,"content":"<p>Переменные и методы могут предположить название анонимной функции из её синтаксической позиции  (new in ECMAScript 2015).</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">someMethod</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"f\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">.</span>someMethod<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"someMethod\"</span></code></pre></div>\n\n<p>Вы можете определить функцию с именем в <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/function\">function expression</a>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">someMethod</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">object_someMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">.</span>someMethod<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// выведет \"object_someMethod\"</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span> object_someMethod <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// ReferenceError: object_someMethod is not defined</span>\n</code></pre></div>\n\n<p>Вы не можете изменить имя функции, это свойство только для чтения:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// анонимная функция</span>\n  <span class=\"token function-variable function\">someMethod</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nobject<span class=\"token punctuation\">.</span>someMethod<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'otherMethod'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">.</span>someMethod<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//someMethod</span>\n\n</code></pre></div>\n\n<p>Для изменения name можно использовать <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a>.</p>"}},{"type":"prose","value":{"id":"сокращённые_имена_методов","title":"Сокращённые имена методов","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\no<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"foo\";</span></code></pre></div>"}},{"type":"prose","value":{"id":"имена_функций_после_привязки","title":"Имена функций после привязки","isH3":true,"content":"<p><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.bind()</code></a> производит функцию, получающую имя \"bound  и название самой функции.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"bound foo\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"имена_функций_для_getters_и_setters","title":"Имена функций для getters и setters","isH3":true,"content":"<p>Когда используются <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/get\">get</a></code> и <a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/set\">set</a>, \"get\" и \"set\" появятся в имени функции.</p>\n\n<pre class=\"notranslate\"><code>let o = {\n  get foo(){},\n  set foo(x){}\n};\n\nvar descriptor = Object.getOwnPropertyDescriptor(o, \"foo\");\ndescriptor.get.name; // \"get foo\"\ndescriptor.set.name; // \"set foo\";</code></pre>"}},{"type":"prose","value":{"id":"имена_функций-классов","title":"Имена функций-классов","isH3":true,"content":"<p>Можно использовать <code>obj.constructor.name</code> чтобы проверить \"class\" объекта (читайте предупреждение ниже):</p>\n\n<pre class=\"notranslate\"><code>function Foo() {}  // ES2015 Syntax: class Foo {}\n\nvar fooInstance = new Foo();\nconsole.log(fooInstance.constructor.name); // logs \"Foo\"</code>\n</pre>\n\n<div class=\"warning notecard\" id=\"sect2\">\n<p><strong>Warning:</strong> Интерпретатор объявит встроенное <code>Function.name</code> свойство только если функция не имеет своего собственного свойства <em>name</em> (см.  <a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-setfunctionname\" class=\"external\" rel=\" noopener\">9.2.11 of the ECMAScript2015 Language Specification</a>). Однако, в ES2015 статичные методы перезаписывают OwnProperty конструкторов класса-функции (ECMAScript2015, <a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-runtime-semantics-classdefinitionevaluation\" class=\"external\" rel=\" noopener\">14.5.14.21.b</a> + <a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer-runtime-semantics-propertydefinitionevaluation\" class=\"external\" rel=\" noopener\">12.2.6.9</a>).</p>\n</div>\n\n<p>Таким образом, нельзя получить доступ к <code>name</code> любого класса со статичным свойством <code>name()​​​​​​:</code></p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Со <code>static name()</code> методом <code>Foo.name</code> больше не содержит название класса, но отсылает к функции <code>name()</code>. Приведённое выше определение класса в ES2015 будет вести себя в Chrome и Firefx как в  ES5:</p>\n\n<pre class=\"notranslate\"><code>function Foo() {}\nObject.defineProperty(Foo, 'name', { writable: true });\nFoo.name = function() {};</code></pre>\n\n<p>Пытаясь получить доступ к <code>fooInstance</code> с помощью <code>fooInstance.constructor.name</code> не даст название класса, но выведет метод <code>name()</code>. Пример:</p>\n\n<pre class=\"notranslate\"><code>let fooInstance = new Foo();\nconsole.log(fooInstance.constructor.name); // logs function name()</code></pre>\n\n<p>Из ES5 syntax примера также видно, что в Chrome или Firefox статичное определение <code>Foo.name</code> становится <em>записываемым (writable)</em>. Встроенное определение в отсутствии кастомного статичного метода<em>доступно только для чтения</em>:</p>\n\n<pre class=\"notranslate\"><code>Foo.name = 'Hello';\nconsole.log(Foo.name); // logs \"Hello\" if class Foo has a static name() property but \"Foo\" if not.</code></pre>\n\n<p>Следовательно не ожидайте, что <code>Function.name</code> свойство будет всегда содержать имя класса.</p>"}},{"type":"prose","value":{"id":"имена_функций-символов","title":"Имена функций-символов","isH3":true,"content":"<p>Если у <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Symbol\"><code>Symbol</code></a> объявляется имя, то название метода - это имя квадратных скобках.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> sym1 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sym2 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>sym1<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>sym2<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\no<span class=\"token punctuation\">[</span>sym1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[foo]\"</span>\no<span class=\"token punctuation\">[</span>sym2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript_минифицированный","title":"JavaScript минифицированный","isH3":false,"content":"<div class=\"warning notecard\" id=\"sect3\">\n<p><strong>Warning:</strong> Будьте осторожны, используя <code>Function.name</code> и изменения source кода с помощью JavaScript compressors (minifiers) или обфускаторов. Эти инструменты часто используются, как встроенные в  JavaScript build pipeline, чтобы сократить размер билда перед деплоем в production. Такие трансформации часто изменяют имена функций.</p>\n</div>\n\n<p>Такой source code:</p>\n\n<pre class=\"notranslate\"><code>function Foo() {};\nlet foo = new Foo();\n\nif (foo.constructor.name === 'Foo') {\n  console.log(\"'foo' is an instance of 'Foo'\");\n} else {\n  console.log('Oops!');\n}</code></pre>\n\n<p>может быть сжат в:</p>\n\n<pre class=\"notranslate\"><code>function a() {};\nlet b = new a();\nif (b.constructor.name === 'Foo') {\n  console.log(\"'foo' is an instance of 'Foo'\");\n} else {\n  console.log('Oops!');\n}</code></pre>\n\n<p>В несжатой версии код выполняется ожидаемо <code>\"'foo' is an instance of 'Foo'\"</code>. В то время, как в сжатой версии он ведёт себя иначе. Если вы полагаетесь на <code>Function.name</code>, как в примере, то убедитесь, что pipeline не меняет код или не ожидайте от функции определённого имени.</p>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">\n    <p>Спецификация</p>\n   </th>\n   <th scope=\"col\">Статус</th>\n   <th scope=\"col\">Комментарии</th>\n  </tr>\n  <tr>\n   <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-name\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"ru\">Определение 'name' в этой спецификации.</small></a></td>\n   <td><span class=\"spec-standard\">Стандарт</span></td>\n   <td>Изначальное определение.</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Совместимость с браузерами","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Function.name","dataURL":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<div id=\"compat-mobile\"></div>"}}],"toc":[{"text":"Примеры","id":"summary"},{"text":"JavaScript минифицированный","id":"javascript_минифицированный"},{"text":"Совместимость с браузерами","id":"browser_compatibility"}],"summary":"Read-only свойство name глобального объекта Function и его экземпляров содержит название функции созданное во время определения функции или присваивания ссылки на функцию переменной, свойству, аргументу и т. п. Для анонимных функций это свойство может иметь значение \"anonymous\" или пустую строку  \"\".","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Function.prototype.name","locale":"en-US","native":"English (US)"},{"title":"Function.name","locale":"es","native":"Español"},{"title":"Function.name","locale":"fr","native":"Français"},{"title":"Function.name","locale":"ja","native":"日本語"},{"title":"Function.name","locale":"ko","native":"한국어"},{"title":"Function.name","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Function.name","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/javascript/reference/global_objects/function/name","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/javascript/reference/global_objects/function/name/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference","title":"Справочник по JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects","title":"Стандартные встроенные объекты"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function","title":"Function"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name","title":"Function.name"}],"pageTitle":"Function.name - JavaScript | MDN","noIndexing":false}}