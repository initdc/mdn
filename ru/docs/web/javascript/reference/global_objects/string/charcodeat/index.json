{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"String.prototype.charCodeAt()","mdn_url":"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects\">Стандартные встроенные объекты</a></strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Свойства</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/length\"><code>String length</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Методы</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/@@iterator\"><code>String.prototype[@@iterator]()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/anchor\"><code>String.prototype.anchor()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/at\"><code>String.prototype.at()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/big\"><code>String.prototype.big()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/blink\"><code>String.prototype.blink()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/bold\"><code>String.prototype.bold()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\"><code>String.prototype.charAt()</code></a></li><li><em><code>String.prototype.charCodeAt()</code></em></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt\"><code>String.prototype.codePointAt()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/concat\"><code>String.prototype.concat()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\"><code>String.prototype.endsWith()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/fixed\"><code>String.prototype.fixed()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/fontcolor\"><code>String.prototype.fontcolor()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/fontsize\"><code>String.prototype.fontsize()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode\"><code>String.fromCharCode()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\"><code>String.fromCodePoint()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/includes\"><code>String.prototype.includes()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\"><code>String.prototype.indexOf()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/italics\"><code>String.prototype.italics()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf\"><code>String.prototype.lastIndexOf()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/link\"><code>String.prototype.link()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\"><code>String.prototype.localeCompare()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/match\"><code>String.prototype.match()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll\"><code>String.prototype.matchAll()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\"><code>String.prototype.normalize()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\"><code>String.prototype.padEnd()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\"><code>String.prototype.padStart()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/raw\"><code>String.raw()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\"><code>String.prototype.repeat()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/replace\"><code>String.prototype.replace()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll\"><code>String.prototype.replaceAll()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/search\"><code>String.prototype.search()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/slice\"><code>String.prototype.slice()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/small\"><code>String.prototype.small()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/split\"><code>String.prototype.split()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\"><code>String.prototype.startsWith()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/strike\"><code>String.prototype.strike()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/sub\"><code>String.prototype.sub()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/substr\"><code>String.prototype.substr()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/substring\"><code>String.prototype.substring()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/sup\"><code>String.prototype.sup()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleLowerCase\"><code>String.prototype.toLocaleLowerCase()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleUpperCase\"><code>String.prototype.toLocaleUpperCase()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase\"><code>String.prototype.toLowerCase()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/toString\"><code>String.prototype.toString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase\"><code>String.prototype.toUpperCase()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/Trim\"><code>String.prototype.trim()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/trimEnd\"><code>String.prototype.trimEnd()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/trimStart\"><code>String.prototype.trimStart()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/valueOf\"><code>String.prototype.valueOf()</code></a></li></ol></li><li><strong>Наследование:</strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>"}},{"type":"prose","value":{"id":"summary","title":"Сводка","isH3":false,"content":"<p>Метод <strong><code>charCodeAt()</code></strong> возвращает числовое значение Юникода для символа по указанному индексу (за исключением кодовых точек Юникода, больших 0x10000).</p>"}},{"type":"prose","value":{"id":"syntax","title":"Синтаксис","isH3":false,"content":"<pre class=\"syntaxbox notranslate\"><code><var>str</var>.charCodeAt(<var>index</var>)</code></pre>"}},{"type":"prose","value":{"id":"parameters","title":"Параметры","isH3":true,"content":"<dl>\n <dt id=\"index\"><code>index</code></dt>\n <dd>Целое число больше, либо равное 0 и меньше длины строки; если параметр не является числом, он устанавливается в 0.</dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Описание","isH3":false,"content":"<p>Кодовые точки Юникода простираются в диапазоне от 0 до 1114111 (0x10FFFF). Первые 128 кодовых точек Юникода напрямую отображаются в кодировку ASCII. Информацию по Юникоду смотрите в <a href=\"/ru/docs/Web/JavaScript/Guide/Grammar_and_types#unicode\">Руководстве по JavaScript</a>.</p>\n\n<p>Обратите внимание, что метод <code>charCodeAt()</code> всегда возвращает значение, меньшее 65536. Так происходит потому, что большие кодовые точки представляются парой (меньших значений) «суррогатных» псевдо-символов, которые используются для составления настоящего символа. Поэтому для того, чтобы получить полный символ для значений символов от 65536 и выше, необходимо получить не только значение <code>charCodeAt(i)</code>, но также значение <code>charCodeAt(i + 1)</code> (как если бы строка состояла из двух букв). Смотрите второй и третий примеры ниже.</p>\n\n<p>Метод <code>charCodeAt()</code> возвращает <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>, если указанный индекс меньше нуля или больше длины строки.</p>\n\n<p>Обратная совместимость: в более старых версиях (например, в JavaScript 1.2) метод <code>charCodeAt()</code> возвращал число из кодировки ISO-Latin-1 по указанному индексу. Диапазон символов в кодировке ISO-Latin-1 простирается от 0 до 255. Первые 127 чисел напрямую отображаются в кодировку ASCII.</p>"}},{"type":"prose","value":{"id":"examples","title":"Примеры","isH3":false,"content":""}},{"type":"prose","value":{"id":"example:_using_charcodeat","title":"Пример: использование метода <code>charCodeAt()</code>","isH3":true,"content":"<p>В следующем примере возвращается число 65, значение Unicode для латинского символа «A».</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'ABC'</span><span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// вернёт 65</span>\n</code></pre></div>","titleAsText":"Пример: использование метода charCodeAt()"}},{"type":"prose","value":{"id":"example:_fixing_charcodeat_to_handle_non-basic-multilingual-plane_characters_if_their_presence_earlier_in_the_string_is_unknown","title":"Пример: исправление метода <code>charCodeAt()</code> для обработки символов не в Базовой многоязыковой плоскости, если их предыдущее присутствие в строке неизвестно","isH3":true,"content":"<p>Эта версия может использоваться в циклах for, даже когда неизвестно, были ли до указанной позиции символы из не-БМП.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">fixedCharCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// например, fixedCharCodeAt('\\uD800\\uDC00', 0); // 65536</span>\n  <span class=\"token comment\">// например, fixedCharCodeAt('\\uD800\\uDC00', 1); // false</span>\n  idx <span class=\"token operator\">=</span> idx <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> code <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> hi<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Старшая часть суррогатной пары (последнее число можно изменить на 0xDB7F,</span>\n  <span class=\"token comment\">// чтобы трактовать старшую часть суррогатной пары в частной плоскости как</span>\n  <span class=\"token comment\">// одиночный символ)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0xD800</span> <span class=\"token operator\">&lt;=</span> code <span class=\"token operator\">&amp;&amp;</span> code <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0xDBFF</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    hi <span class=\"token operator\">=</span> code<span class=\"token punctuation\">;</span>\n    low <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token string\">'Старшая часть суррогатной пары без следующей младшей в fixedCharCodeAt()'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>hi <span class=\"token operator\">-</span> <span class=\"token number\">0xD800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">-</span> <span class=\"token number\">0xDC00</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0xDC00</span> <span class=\"token operator\">&lt;=</span> code <span class=\"token operator\">&amp;&amp;</span> code <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0xDFFF</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Младшая часть суррогатной пары</span>\n    <span class=\"token comment\">// Мы возвращаем false, чтобы цикл пропустил эту итерацию,</span>\n    <span class=\"token comment\">// поскольку суррогатная пара</span>\n    <span class=\"token comment\">// уже обработана в предыдущей итерации</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// hi = str.charCodeAt(idx - 1);</span>\n    <span class=\"token comment\">// low = code;</span>\n    <span class=\"token comment\">// return ((hi - 0xD800) * 0x400) +</span>\n    <span class=\"token comment\">//   (low - 0xDC00) + 0x10000;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> code<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","titleAsText":"Пример: исправление метода charCodeAt() для обработки символов не в Базовой многоязыковой плоскости, если их предыдущее присутствие в строке неизвестно"}},{"type":"prose","value":{"id":"example:_fixing_charcodeat_to_handle_non-basic-multilingual-plane_characters_if_their_presence_earlier_in_the_string_is_known","title":"Пример: исправление метода <code>charCodeAt()</code> для обработки символов не в Базовой многоязыковой плоскости, если их предыдущее присутствие в строке известно","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">knownCharCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> idx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  str <span class=\"token operator\">+=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> code<span class=\"token punctuation\">,</span>\n      end <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> surrogatePairs <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>surrogatePairs<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> li <span class=\"token operator\">=</span> surrogatePairs<span class=\"token punctuation\">.</span>lastIndex<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>li <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;</span> idx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      idx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">&gt;=</span> end <span class=\"token operator\">||</span> idx <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  code <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> hi<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0xD800</span> <span class=\"token operator\">&lt;=</span> code <span class=\"token operator\">&amp;&amp;</span> code <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0xDBFF</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    hi <span class=\"token operator\">=</span> code<span class=\"token punctuation\">;</span>\n    low <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Перешагиваем через один, поскольку один «символ» является частью суррогатной пары</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>hi <span class=\"token operator\">-</span> <span class=\"token number\">0xD800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">-</span> <span class=\"token number\">0xDC00</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> code<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","titleAsText":"Пример: исправление метода charCodeAt() для обработки символов не в Базовой многоязыковой плоскости, если их предыдущее присутствие в строке известно"}},{"type":"specifications","value":{"title":"Спецификации","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/text-processing.html#sec-string.prototype.charcodeat","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.String.charCodeAt"}},{"type":"browser_compatibility","value":{"title":"Совместимость с браузерами","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.String.charCodeAt","dataURL":"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"see_also","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode\"><code>String.fromCharCode()</code></a></li>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\"><code>String.prototype.charAt()</code></a></li>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\"><code>String.fromCodePoint()</code></a></li>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt\"><code>String.prototype.codePointAt()</code></a></li>\n</ul>"}}],"toc":[{"text":"Сводка","id":"summary"},{"text":"Синтаксис","id":"syntax"},{"text":"Описание","id":"description"},{"text":"Примеры","id":"examples"},{"text":"Спецификации","id":"specifications"},{"text":"Совместимость с браузерами","id":"browser_compatibility"},{"text":"Смотрите также","id":"see_also"}],"summary":"Метод charCodeAt() возвращает числовое значение Юникода для символа по указанному индексу (за исключением кодовых точек Юникода, больших 0x10000).","popularity":0.0027,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"String.prototype.charCodeAt()","locale":"en-US","native":"English (US)"},{"title":"String.prototype.charCodeAt()","locale":"es","native":"Español"},{"title":"String.prototype.charCodeAt()","locale":"fr","native":"Français"},{"title":"String.prototype.charCodeAt()","locale":"ja","native":"日本語"},{"title":"String.prototype.charCodeAt()","locale":"ko","native":"한국어"},{"title":"String.prototype.charCodeAt()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"String.prototype.charCodeAt()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/javascript/reference/global_objects/string/charcodeat","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/javascript/reference/global_objects/string/charcodeat/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference","title":"Справочник по JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects","title":"Стандартные встроенные объекты"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/String","title":"String"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt","title":"String.prototype.charCodeAt()"}],"pageTitle":"String.prototype.charCodeAt() - JavaScript | MDN","noIndexing":false}}