{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Array.prototype.slice()","mdn_url":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/slice","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects\">Стандартные встроенные объекты</a></strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Свойства</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/@@species\"><code>get Array[@@species]</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/@@unscopables\"><code>Array.prototype[@@unscopables]</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>Array.prototype.length</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Методы</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator\"><code>Array.prototype[@@iterator]()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/at\"><code>Array.prototype.at()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"><code>Array.prototype.concat()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\"><code>Array.prototype.copyWithin()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\"><code>Array.prototype.entries()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.prototype.every()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"><code>Array.prototype.fill()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array.prototype.filter()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"><code>Array.prototype.find()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\"><code>Array.prototype.findIndex()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast\"><code>Array.prototype.findLast()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex\"><code>Array.prototype.findLastIndex()</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\"><code>Array.prototype.flat()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap\"><code>Array.prototype.flatMap()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/group\"><code>Array.prototype.group()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/groupToMap\"><code>Array.prototype.groupToMap()</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\"><code>Array.prototype.includes()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>Array.prototype.indexOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\"><code>Array.isArray()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"><code>Array.prototype.join()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/keys\"><code>Array.prototype.keys()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\"><code>Array.prototype.lastIndexOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/of\"><code>Array.of()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\"><code>Array.prototype.pop()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>Array.prototype.push()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\"><code>Array.prototype.reduce()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\"><code>Array.prototype.reduceRight()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\"><code>Array.prototype.reverse()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\"><code>Array.prototype.shift()</code></a></li><li><em><code>Array.prototype.slice()</code></em></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"><code>Array.prototype.some()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"><code>Array.prototype.sort()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.prototype.splice()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/toLocaleString\"><code>Array.prototype.toLocaleString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/toString\"><code>Array.prototype.toString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\"><code>Array.prototype.unshift()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/values\"><code>Array.prototype.values()</code></a></li></ol></li><li><strong>Наследование:</strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<p>Метод <code><strong>slice()</strong></code> возвращает новый массив, содержащий копию части исходного массива.</p>\n\n<div id=\"sect2\"><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/array-slice.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe></div>"}},{"type":"prose","value":{"id":"syntax","title":"Синтаксис","isH3":false,"content":"<pre class=\"syntaxbox notranslate\"><code><var>arr</var>.slice([<var>begin</var>[, <var>end</var>]])</code></pre>"}},{"type":"prose","value":{"id":"parameters","title":"Параметры","isH3":true,"content":"<dl>\n <dt id=\"begin\"><code>begin</code> <span class=\"badge inline optional\">Необязательный</span></dt>\n <dd><p>Индекс (счёт начинается с нуля), по которому начинать извлечение.</p>\n <p>Если индекс отрицательный, <code>begin</code> указывает смещение от конца последовательности. Вызов <code>slice(-2)</code> извлечёт два последних элемента последовательности.</p>\n <p>Если <code>begin</code> не определён, <code>slice()</code> начинает работать с индекса <code>0</code>.</p>\n <p>Если <code>begin</code> больше длины последовательности вернётся пустой массив.</p></dd>\n <dt id=\"end\"><code>end</code> <span class=\"badge inline optional\">Необязательный</span></dt>\n <dd><p>Индекс (счёт начинается с нуля), по которому заканчивать извлечение. Метод <code>slice()</code> извлекает элементы с индексом меньше <code>end</code>.</p>\n <p>Вызов <code>slice(1, 4)</code> извлечёт элементы со второго по четвёртый (элементы по индексам 1, 2 и 3).</p>\n <p>Если индекс отрицательный, <code>end</code> указывает смещение от конца последовательности. Вызов <code>slice(2, -1)</code> извлечёт из последовательности элементы начиная с третьего элемента с начала и заканчивая вторым с конца.</p>\n <p>Если <code>end</code> опущен, <code>slice()</code> извлекает все элементы до конца последовательности (<code>arr.length</code>).</p></dd>\n</dl>"}},{"type":"prose","value":{"id":"возвращаемое_значение","title":"Возвращаемое значение","isH3":true,"content":"<p>Новый массив, содержащий извлечённые элементы.</p>"}},{"type":"prose","value":{"id":"description","title":"Описание","isH3":false,"content":"<p>Метод <code>slice()</code> не изменяет исходный массив, а возвращает новую «одноуровневую» копию, содержащую копии элементов, вырезанных из исходного массива. Элементы исходного массива копируются в новый массив по следующим правилам:</p>\n\n<ul>\n <li>Ссылки на объекты (но не фактические объекты): метод <code>slice()</code> копирует ссылки на объекты в новый массив. И оригинал, и новый массив ссылаются на один и тот же объект. То есть, если объект по ссылке будет изменён, изменения будут видны и в новом, и в исходном массивах.</li>\n <li>Строки и числа (но не объекты <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> и <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>): метод <code>slice()</code> копирует значения строк и чисел в новый массив. Изменения строки или числа в одном массиве никак не затрагивает другой.</li>\n</ul>\n\n<p>Если к любому массиву будет добавлен новый элемент, это никак не повлияет на другой массив.</p>"}},{"type":"prose","value":{"id":"examples","title":"Примеры","isH3":false,"content":""}},{"type":"prose","value":{"id":"example_return_a_portion_of_an_existing_array","title":"Пример: возврат части существующего массива","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Пример: наши хорошие друзья цитрусовые среди фруктов</span>\n<span class=\"token keyword\">var</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Банан'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Апельсин'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Лимон'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Яблоко'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Манго'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> citrus <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// citrus содержит ['Апельсин', 'Лимон']</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"example_using_slice","title":"Пример: использование метода <code>slice()</code>","isH3":true,"content":"<p>В следующем примере метод <code>slice()</code> создаёт новый массив, <code>newCar</code>, из массива <code>myCar</code>. Оба содержат ссылку на объект <code>myHonda</code>. Когда цвет в объекте <code>myHonda</code> изменяется на багровый, оба массива замечают это изменение.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Используя slice, создаём newCar из myCar.</span>\n<span class=\"token keyword\">var</span> myHonda <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'красный'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">wheels</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">engine</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cylinders</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token number\">2.2</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myCar <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>myHonda<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'в хорошем состоянии'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'приобретена в 1997'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> newCar <span class=\"token operator\">=</span> myCar<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Отображаем значения myCar, newCar и цвет myHonda</span>\n<span class=\"token comment\">//  по ссылкам из обоих массивов.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myCar = '</span> <span class=\"token operator\">+</span> myCar<span class=\"token punctuation\">.</span><span class=\"token function\">toSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newCar = '</span> <span class=\"token operator\">+</span> newCar<span class=\"token punctuation\">.</span><span class=\"token function\">toSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myCar[0].color = '</span> <span class=\"token operator\">+</span> myCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newCar[0].color = '</span> <span class=\"token operator\">+</span> newCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Изменяем цвет myHonda.</span>\nmyHonda<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">'багровый'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Новый цвет моей Honda - '</span> <span class=\"token operator\">+</span> myHonda<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Отображаем цвет myHonda по ссылкам из обоих массивов.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myCar[0].color = '</span> <span class=\"token operator\">+</span> myCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newCar[0].color = '</span> <span class=\"token operator\">+</span> newCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Этот скрипт выведет:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myCar <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span><span class=\"token string\">'красный'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">wheels</span><span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">engine</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">cylinders</span><span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span><span class=\"token number\">2.2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'в хорошем состоянии'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'приобретена в 1997'</span><span class=\"token punctuation\">]</span>\nnewCar <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span><span class=\"token string\">'красный'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">wheels</span><span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">engine</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">cylinders</span><span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span><span class=\"token number\">2.2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nmyCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> красный\nnewCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> красный\nНовый цвет моей Honda <span class=\"token operator\">-</span> багровый\nmyCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> багровый\nnewCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> багровый\n</code></pre></div>","titleAsText":"Пример: использование метода slice()"}},{"type":"prose","value":{"id":"array-like","title":"Массивоподобные объекты","isH3":false,"content":"<p>Метод <code>slice()</code> также может использоваться для преобразования массивоподобных объектов / коллекций в новый массив <code>Array</code>. Вам просто нужно привязать метод к объекту. Псевдомассив <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Functions/arguments\"><code>arguments</code> <small>(en-US)</small></a> внутри функции как раз является примером «массивоподобного объекта».</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> list1 <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 3]</span>\n</code></pre></div>\n\n<p>Привязка может быть осуществлена посредством функции .<code>call()</code> из прототипа функции <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype</code> <small>(en-US)</small></a>, также запись может быть сокращена до <code>[].slice.call(arguments)</code> вместо использования <code>Array.prototype.slice.call()</code>. В любом случае, она может быть упрощена посредством использования функции <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>bind()</code></a>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> unboundSlice <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>slice<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> slice <span class=\"token operator\">=</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>unboundSlice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> list1 <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 3]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"streamlining_cross-browser_behavior","title":"Совершенствование кросс-браузерного поведения","isH3":false,"content":"<p>Хотя спецификация не требует от хост-объектов (например, объектов DOM) следовать поведению Mozilla при преобразовании с помощью <code>Array.prototype.slice()</code> и IE &lt; 9 так не делает, версии IE, начиная с 9-й это умеют. «Прокладывание» позволяет добиться надёжного кросс-браузерного поведения. Пока другие современные браузеры будут поддерживать эту способность, что и делают в настоящее время IE, Mozilla, Chrome, Safari и Opera, разработчики, читая (поддерживающий DOM) код функции <code>slice()</code>, опирающийся на эту прокладку, не будут вводиться в заблуждение его семантикой; они могут смело полагаться на текущую семантику, являющуюся, видимо, <em>де-факто</em> стандартным поведением. (Прокладка также исправляет поведение IE, позволяя работать со вторым аргументом <code>slice()</code>, явно определённым как <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>/<a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>, поскольку более ранние версии IE такое не позволяют, но все современные браузеры, в том числе IE &gt;= 9, поддерживают данное поведение.)</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/**\n * Прокладка для \"исправления\" отсутствия поддержки в IE &lt; 9 применения slice\n * к хост-объектам вроде NamedNodeMap, NodeList и HTMLCollection\n * (технически, поскольку хост-объекты зависят от реализации,\n * по крайней мере, до ES2015, IE не обязан так работать).\n * Также работает для строк, исправляет поведение IE &lt; 9, позволяя явно указывать undefined\n * вторым аргументом (как в Firefox), и предотвращает ошибки, возникающие при\n * вызове на других объектах DOM.\n */</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> _slice <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>slice<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Не может использоваться с элементами DOM в IE &lt; 9</span>\n    <span class=\"token function\">_slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// В IE &lt; 9 кидается исключение</span>\n    <span class=\"token comment\">// Функция будет работать для истинных массивов, массивоподобных объектов,</span>\n    <span class=\"token comment\">// NamedNodeMap (атрибуты, сущности, примечания),</span>\n    <span class=\"token comment\">// NodeList (например, getElementsByTagName), HTMLCollection (например, childNodes)</span>\n    <span class=\"token comment\">// и не будет падать на других объектах DOM (как это происходит на элементах DOM в IE &lt; 9)</span>\n    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">slice</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">begin<span class=\"token punctuation\">,</span> end</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// IE &lt; 9 будет недоволен аргументом end, равным undefined</span>\n      end <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> end <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> end <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Для родных объектов Array мы используем родную функцию slice</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'[object Array]'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> begin<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// Массивоподобные объекты мы обрабатываем самостоятельно</span>\n      <span class=\"token keyword\">var</span> i<span class=\"token punctuation\">,</span> cloned <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          size<span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Обрабатываем отрицательное значение begin</span>\n      <span class=\"token keyword\">var</span> start <span class=\"token operator\">=</span> begin <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      start <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> start<span class=\"token operator\">:</span> len <span class=\"token operator\">+</span> start<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Обрабатываем отрицательное значение end</span>\n      <span class=\"token keyword\">var</span> upTo <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> end <span class=\"token operator\">:</span> len<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        upTo <span class=\"token operator\">=</span> len <span class=\"token operator\">+</span> end<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// Фактически ожидаемый размер среза</span>\n      size <span class=\"token operator\">=</span> upTo <span class=\"token operator\">-</span> start<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cloned <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>charAt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            cloned<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            cloned<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>start <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">return</span> cloned<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Спецификации","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.slice","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Array.slice"}},{"type":"browser_compatibility","value":{"title":"Совместимость с браузерами","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Array.slice","dataURL":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/slice/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect4\">\n<p></p><p></p>\n</div>"}},{"type":"prose","value":{"id":"see_also","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.prototype.splice()</code></a></li>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li>\n</ul>"}}],"toc":[{"text":"Синтаксис","id":"syntax"},{"text":"Описание","id":"description"},{"text":"Примеры","id":"examples"},{"text":"Массивоподобные объекты","id":"array-like"},{"text":"Совершенствование кросс-браузерного поведения","id":"streamlining_cross-browser_behavior"},{"text":"Спецификации","id":"specifications"},{"text":"Совместимость с браузерами","id":"browser_compatibility"},{"text":"Смотрите также","id":"see_also"}],"summary":"Метод slice() возвращает новый массив, содержащий копию части исходного массива.","popularity":0.0158,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Array.prototype.slice()","locale":"en-US","native":"English (US)"},{"title":"Array.prototype.slice()","locale":"es","native":"Español"},{"title":"Array.prototype.slice()","locale":"fr","native":"Français"},{"title":"Array.prototype.slice()","locale":"ja","native":"日本語"},{"title":"Array.prototype.slice()","locale":"ko","native":"한국어"},{"title":"Array.prototype.slice()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Array.prototype.slice()","locale":"zh-CN","native":"中文 (简体)"},{"title":"Array.prototype.slice()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/javascript/reference/global_objects/array/slice","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/javascript/reference/global_objects/array/slice/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference","title":"Справочник по JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects","title":"Стандартные встроенные объекты"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array","title":"Array"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/slice","title":"Array.prototype.slice()"}],"pageTitle":"Array.prototype.slice() - JavaScript | MDN","noIndexing":false}}