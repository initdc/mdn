{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"JSON","mdn_url":"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects\">Стандартные встроенные объекты</a></strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Методы</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a></li></ol></li><li><strong>Наследование:</strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>"}},{"type":"prose","value":{"id":"summary","title":"Сводка","isH3":false,"content":"<p>Объект <strong><code>JSON</code></strong> содержит методы для разбора <a class=\"external\" href=\"http://json.org/\" rel=\" noopener\">объектной нотации JavaScript</a> (JavaScript Object Notation — сокращённо <a href=\"/ru/docs/Glossary/JSON\">JSON</a>) и преобразования значений в JSON. Его нельзя вызвать как функцию или сконструировать как объект, и кроме своих двух методов он не содержит никакой интересной функциональности.</p>"}},{"type":"prose","value":{"id":"description","title":"Описание","isH3":false,"content":""}},{"type":"prose","value":{"id":"javascript_object_notation","title":"Объектная нотация JavaScript","isH3":true,"content":"<p>JSON является синтаксисом для сериализации объектов, массивов, чисел, строк логических значений и значения <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>. Он основывается на синтаксисе JavaScript, однако всё же отличается от него: не каждый код на JavaScript является JSON, и не каждый JSON является кодом на JavaScript. Смотрите также статью <a href=\"http://timelessrepo.com/json-isnt-a-javascript-subset\" class=\"external\" rel=\" noopener\">JSON: подмножество JavaScript, которым он не является</a> (на английском).</p>\n\n<table>\n <caption>Различия между JavaScript и JSON</caption>\n <thead>\n  <tr>\n   <th scope=\"col\">Тип JavaScript</th>\n   <th scope=\"col\">Отличия от JSON</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td>Объекты и массивы</td>\n   <td>Имена свойств должны быть строками, заключёнными в двойные кавычки; конечные запятые запрещены.</td>\n  </tr>\n  <tr>\n   <td>Числа</td>\n   <td>Ведущие нули запрещены; перед десятичной запятой обязательно должна быть хотя бы одна цифра.</td>\n  </tr>\n  <tr>\n   <td>Строки</td>\n   <td>\n    <p>Только ограниченный набор символов может быть заэкранирован; некоторые управляющие символы запрещены; разрешены юникодные символы разделительной линии (<a href=\"https://unicode-table.com/ru/2028/\" class=\"external\" rel=\" noopener\">U+2028</a>) и разделительного параграфа (<a href=\"https://unicode-table.com/ru/2029/\" class=\"external\" rel=\" noopener\">U+2029</a>); строки должны быть заключены в двойные кавычки. Смотрите следующий пример, в котором метод <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> отрабатывает без проблем, а при вычислении кода как JavaScript выбрасывается исключение <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a>:</p>\n\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> code <span class=\"token operator\">=</span> <span class=\"token string\">'\"\\u2028\\u2029\"'</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// работает</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ошибка</span>\n</code></pre></div>\n   </td>\n  </tr>\n </tbody>\n</table>\n\n<p>Ниже представлен полный синтаксис JSON:</p>\n\n<pre class=\"notranslate\">JSON = null\n    or true or false\n    or JSONNumber\n    or JSONString\n    or JSONObject\n    or JSONArray\n\nJSONNumber = - PositiveNumber\n          or PositiveNumber\nPositiveNumber = DecimalNumber\n              or DecimalNumber . Digits\n              or DecimalNumber . Digits ExponentPart\n              or DecimalNumber ExponentPart\nDecimalNumber = 0\n             or OneToNine Digits\nExponentPart = e Exponent\n            or E Exponent\nExponent = Digits\n        or + Digits\n        or - Digits\nDigits = Digit\n      or Digits Digit\nDigit = 0 through 9\nOneToNine = 1 through 9\n\nJSONString = \"\"\n          or \" StringCharacters \"\nStringCharacters = StringCharacter\n                or StringCharacters StringCharacter\nStringCharacter = any character\n                  except \" or \\ or U+0000 through U+001F\n               or EscapeSequence\nEscapeSequence = \\\" or \\/ or \\\\ or \\b or \\f or \\n or \\r or \\t\n              or \\u HexDigit HexDigit HexDigit HexDigit\nHexDigit = 0 through 9\n        or A through F\n        or a through f\n\nJSONObject = { }\n          or { Members }\nMembers = JSONString : JSON\n       or Members , JSONString : JSON\n\nJSONArray = [ ]\n         or [ ArrayElements ]\nArrayElements = JSON\n             or ArrayElements , JSON</pre>\n\n<p>Во всех продукциях могут присутствовать незначащие пробельные символы, за исключением продукций <code><var>ЧислоJSON</var></code> (числа не должны содержать пробелов) и <code><var>СтрокаJSON</var></code> (где они интерпретируются как часть строки или возбуждают ошибку). Пробельными символами считаются символы табуляции (<a href=\"https://unicode-table.com/ru/0009/\" class=\"external\" rel=\" noopener\">U+0009</a>), возврата каретки (<a href=\"https://unicode-table.com/ru/000D/\" class=\"external\" rel=\" noopener\">U+000D</a>), перевода строки (<a href=\"https://unicode-table.com/ru/000A/\" class=\"external\" rel=\" noopener\">U+000A</a>) и, собственно, пробела (<a href=\"https://unicode-table.com/ru/0020/\" class=\"external\" rel=\" noopener\">U+0020</a>).</p>"}},{"type":"prose","value":{"id":"methods","title":"Методы","isH3":false,"content":"<dl>\n <dt id=\"json.parse\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a></dt>\n <dd>Разбирает строку JSON, возможно с преобразованием получаемого значения и его свойств и возвращает разобранное значение.</dd>\n <dt id=\"json.stringify\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a></dt>\n <dd>Возвращает строку JSON, соответствующую указанному значению, возможно с включением только определённых свойств или с заменой значений свойств определяемым пользователем способом.</dd>\n</dl>"}},{"type":"prose","value":{"id":"polyfill","title":"Полифил","isH3":false,"content":"<p>Объект <code>JSON</code> не поддерживается старыми браузерами. Вы можете работать с ним, добавив следующий код в начало ваших скриптов, он позволяет использовать объект <code>JSON</code> в реализациях, которые его ещё не поддерживают (например, в Internet Explorer 6).</p>\n\n<p>Следующий алгоритм имитирует работу настоящего объекта <code>JSON</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">parse</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sJSON</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'('</span> <span class=\"token operator\">+</span> sJSON <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">stringify</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">vContent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vContent <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> sOutput <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vContent<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> Array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> nId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> nId <span class=\"token operator\">&lt;</span> vContent<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> sOutput <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>vContent<span class=\"token punctuation\">[</span>nId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span> nId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token string\">'['</span> <span class=\"token operator\">+</span> sOutput<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sOutput<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">']'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vContent<span class=\"token punctuation\">.</span>toString <span class=\"token operator\">!==</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token string\">'\"'</span> <span class=\"token operator\">+</span> vContent<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\$&amp;'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> sProp <span class=\"token keyword\">in</span> vContent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          sOutput <span class=\"token operator\">+=</span> <span class=\"token string\">'\"'</span> <span class=\"token operator\">+</span> sProp<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\$&amp;'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\":'</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>vContent<span class=\"token punctuation\">[</span>sProp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">','</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'{'</span> <span class=\"token operator\">+</span> sOutput<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sOutput<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n     <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> vContent <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'\"'</span> <span class=\"token operator\">+</span> vContent<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\$&amp;'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"'</span> <span class=\"token operator\">:</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>vContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Более сложными известными <a class=\"external\" href=\"http://remysharp.com/2010/10/08/what-is-a-polyfill/\" rel=\" noopener\">полифилами</a> для объекта <code>JSON</code> являются проекты <a class=\"link-https external\" href=\"https://github.com/douglascrockford/JSON-js\" rel=\" noopener\">JSON2</a> и <a class=\"external\" href=\"http://bestiejs.github.com/json3\" rel=\" noopener\">JSON3</a>.</p>"}},{"type":"specifications","value":{"title":"Спецификации","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/structured-data.html#sec-json-object","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.JSON"}},{"type":"browser_compatibility","value":{"title":"Совместимость с браузерами","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.JSON","dataURL":"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"see_also","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Использование родного объекта JSON (en-US)</a></li>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\"><code>Date.prototype.toJSON()</code></a></li>\n</ul>"}}],"toc":[{"text":"Сводка","id":"summary"},{"text":"Описание","id":"description"},{"text":"Методы","id":"methods"},{"text":"Полифил","id":"polyfill"},{"text":"Спецификации","id":"specifications"},{"text":"Совместимость с браузерами","id":"browser_compatibility"},{"text":"Смотрите также","id":"see_also"}],"summary":"Объект JSON содержит методы для разбора объектной нотации JavaScript (JavaScript Object Notation — сокращённо JSON) и преобразования значений в JSON. Его нельзя вызвать как функцию или сконструировать как объект, и кроме своих двух методов он не содержит никакой интересной функциональности.","popularity":0.0017,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"JSON","locale":"en-US","native":"English (US)"},{"title":"JSON","locale":"es","native":"Español"},{"title":"JSON","locale":"fr","native":"Français"},{"title":"JSON","locale":"ja","native":"日本語"},{"title":"JSON","locale":"ko","native":"한국어"},{"title":"JSON","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"JSON","locale":"zh-CN","native":"中文 (简体)"},{"title":"JSON","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/javascript/reference/global_objects/json","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/javascript/reference/global_objects/json/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference","title":"Справочник по JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects","title":"Стандартные встроенные объекты"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON","title":"JSON"}],"pageTitle":"JSON - JavaScript | MDN","noIndexing":false}}