{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"BigInt","mdn_url":"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects\">Стандартные встроенные объекты</a></strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Методы</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt/asIntN\"><code>BigInt.asIntN()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt/asUintN\"><code>BigInt.asUintN()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/toLocaleString\"><code>BigInt.prototype.toLocaleString()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/toString\"><code>BigInt.prototype.toString()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/valueOf\"><code>BigInt.prototype.valueOf()</code> <small>(en-US)</small></a></li></ol></li><li><strong>Наследование:</strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p><strong><code>BigInt</code></strong> это встроенный объект, который предоставляет способ представлять целые числа больше 2<sup>53</sup> - 1, наибольшего числа, которое JavaScript может надёжно представить с <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> примитивом. Это максимальное значение можно получить, обратившись к <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a>.</p>\n\n<dl>\n</dl>"}},{"type":"prose","value":{"id":"описание","title":"Описание","isH3":false,"content":"<p><code>BigInt</code> создаётся путём добавления <code>n</code> в конец целочисленного литерала — <code>10n</code> — или вызовом функции <code>BigInt()</code>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> theBiggestInt <span class=\"token operator\">=</span> <span class=\"token number\">9007199254740991n</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> alsoHuge <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">9007199254740991</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 9007199254740991n</span>\n\n<span class=\"token keyword\">const</span> hugeString <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"9007199254740991\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 9007199254740991n</span>\n\n<span class=\"token keyword\">const</span> hugeHex <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x1fffffffffffff\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 9007199254740991n</span>\n\n<span class=\"token keyword\">const</span> hugeBin <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0b11111111111111111111111111111111111111111111111111111\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 9007199254740991n</span>\n</code></pre></div>\n\n<p>В некотором смысле он похож на <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>, но отличается в некоторых ключевых моментах — его нельзя использовать с методами во встроенном объекте <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a> и нельзя смешивать в операциях с любыми экземплярами Number.</p>\n\n<div class=\"warning notecard\" id=\"sect1\">\n<p><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> и <code>BigInt</code> нельзя смешивать в операциях — они должны быть приведены к тому же типу.</p>\n\n<p>Будьте осторожны приводя значения туда и обратно,  так как точность BigInt может быть потеряна при приведении к числу (<code>Number)</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"тип","title":"Тип","isH3":true,"content":"<p>При проверке с использованием оператора <code>typeof</code>, <code>BigInt</code> выдаёт тип <code>\"bigint\"</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">typeof</span> <span class=\"token number\">1n</span> <span class=\"token operator\">===</span> <span class=\"token string\">'bigint'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'bigint'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n</code></pre></div>\n\n<p>При оборачивании в объект, BigInt будет представлен как обычный объект:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">typeof</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span><span class=\"token number\">1n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"операторы","title":"Операторы","isH3":true,"content":"<p>Следующие операторы могут использоваться с <code>BigInt</code> (или объектом-обёрткой <code>BigInt</code>): <code>+</code>, <code>*</code>, <code>-</code>, <code>**</code>, <code>%</code>.</p>\n\n<p><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Побитовые операции (en-US)</a> также поддерживаются, кроме <code>&gt;&gt;&gt;</code> (сдвиг вправо с заполнением нулями).</p>\n\n<p>Не поддерживаемый унарный оператор (<code>+</code>) <a href=\"https://github.com/tc39/proposal-bigint/blob/master/ADVANCED.md#dont-break-asmjs\" class=\"external\" rel=\" noopener\">больше не ломает asm.js</a>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> previousMaxSafe <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_SAFE_INTEGER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 9007199254740991n</span>\n\n<span class=\"token keyword\">const</span> maxPlusOne <span class=\"token operator\">=</span> previousMaxSafe <span class=\"token operator\">+</span> <span class=\"token number\">1n</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 9007199254740992n</span>\n\n<span class=\"token keyword\">const</span> theFuture <span class=\"token operator\">=</span> previousMaxSafe <span class=\"token operator\">+</span> <span class=\"token number\">2n</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 9007199254740993n, это работает!</span>\n\n<span class=\"token keyword\">const</span> multi <span class=\"token operator\">=</span> previousMaxSafe <span class=\"token operator\">*</span> <span class=\"token number\">2n</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 18014398509481982n</span>\n\n<span class=\"token keyword\">const</span> subtr <span class=\"token operator\">=</span> multi – <span class=\"token number\">10n</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 18014398509481972n</span>\n\n<span class=\"token keyword\">const</span> mod <span class=\"token operator\">=</span> multi <span class=\"token operator\">%</span> <span class=\"token number\">10n</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 2n</span>\n\n<span class=\"token keyword\">const</span> bigN <span class=\"token operator\">=</span> <span class=\"token number\">2n</span> <span class=\"token operator\">**</span> <span class=\"token number\">54n</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 18014398509481984n</span>\n\nbigN <span class=\"token operator\">*</span> <span class=\"token operator\">-</span><span class=\"token number\">1n</span>\n<span class=\"token comment\">// ↪ –18014398509481984n</span>\n</code></pre></div>\n\n<p>Оператор <code>/</code> также работает, как и ожидалось, с целыми числами. Однако, поскольку это BigInt, эта операция будет округляться в меньшую сторону, то есть она не будет возвращать какие-либо дробные цифры.</p>\n\n<div class=\"warning notecard\" id=\"sect2\">\n<p>Результат операции с дробным результатом будет округлён в <strong><u>меньшую</u></strong> сторону при использовании  <code>BigInt</code>.</p>\n</div>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> expected <span class=\"token operator\">=</span> <span class=\"token number\">4n</span> <span class=\"token operator\">/</span> <span class=\"token number\">2n</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 2n</span>\n\n<span class=\"token keyword\">const</span> rounded <span class=\"token operator\">=</span> <span class=\"token number\">5n</span> <span class=\"token operator\">/</span> <span class=\"token number\">2n</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ 2n, not 2.5n</span>\n\n</code></pre></div>"}},{"type":"prose","value":{"id":"сравнения","title":"Сравнения","isH3":true,"content":"<p><code>BigInt</code> равен <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> только при нестрогом сравнении.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">0n</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span>\n<span class=\"token comment\">// ↪ false</span>\n\n<span class=\"token number\">0n</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n<span class=\"token comment\">// ↪ true</span></code></pre></div>\n\n<p><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Обычные числа</code></a> и <code>BigInt</code> можно сравнивать как обычно.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">1n</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span>\n<span class=\"token comment\">// ↪ true</span>\n\n<span class=\"token number\">2n</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span>\n<span class=\"token comment\">// ↪ true</span>\n\n<span class=\"token number\">2</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span>\n<span class=\"token comment\">// ↪ false</span>\n\n<span class=\"token number\">2n</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span>\n<span class=\"token comment\">// ↪ false</span>\n\n<span class=\"token number\">2n</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">2</span>\n<span class=\"token comment\">// ↪ true</span></code></pre></div>\n\n<p>Они могут быть смешаны в массивах и отсортированы:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> mixed <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4n</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">12n</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0n</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪  [4n, 6, -12n, 10, 4, 0, 0n]</span>\n\nmixed<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ↪ [-12n, 0, 0n, 10, 4n, 4, 6]</span>\n</code></pre></div>\n\n<p>Обратите внимание, что сравнения с <code>обьектом</code>-обёрткой <code>BigInt</code> действуют как с другими объектами, указывая на равенство только когда сравнивается идентичный экземпляр объекта:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">0n</span> <span class=\"token operator\">===</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span><span class=\"token number\">0n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token function\">Object</span><span class=\"token punctuation\">(</span><span class=\"token number\">0n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span><span class=\"token number\">0n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span><span class=\"token number\">0n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\no <span class=\"token operator\">===</span> o <span class=\"token comment\">// true</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"условные_выражения","title":"Условные выражения","isH3":true,"content":"<p><code>BigInt</code> ведёт себя как <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>обычное число</code></a> в следующих случаях:</p>\n\n<ul>\n <li>Преобразуется в <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> через функцию <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></li>\n <li>Используется с логическими операторами <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Operators\"><code>Logical Operators</code> <small>(en-US)</small></a> <code>||</code>, <code>&amp;&amp;</code> и <code>!</code></li>\n <li>В условном тесте, таком как <a href=\"/ru/docs/Web/JavaScript/Reference/Statements/if...else\"><code>if statement</code></a>.</li>\n</ul>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Привет из if!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Привет из else!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ↪ \"Привет из else!\"</span>\n\n<span class=\"token number\">0n</span> <span class=\"token operator\">||</span> <span class=\"token number\">12n</span>\n<span class=\"token comment\">// ↪ 12n</span>\n\n<span class=\"token number\">0n</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">12n</span>\n<span class=\"token comment\">// ↪ 0n</span>\n\n<span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">0n</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ↪ false</span>\n\n<span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">12n</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ↪ true</span>\n\n<span class=\"token operator\">!</span><span class=\"token number\">12n</span>\n<span class=\"token comment\">// ↪ false</span>\n\n<span class=\"token operator\">!</span><span class=\"token number\">0n</span>\n<span class=\"token comment\">// ↪ true</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"конструктор","title":"Конструктор","isH3":false,"content":"<dl>\n <dt id=\"bigint\"><code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/BigInt\">BigInt()</a></code></dt>\n <dd>Создаёт объект <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt\" aria-current=\"page\"><code>BigInt</code></a>.</dd>\n</dl>"}},{"type":"prose","value":{"id":"статические_методы","title":"Статические методы","isH3":false,"content":"<dl>\n <dt id=\"bigint.asintn\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt/asIntN\"><code>BigInt.asIntN()</code></a></dt>\n <dd>Оборачивает BigInt в пределах от -2<sup>width-1</sup> до 2<sup>width-1</sup>-1</dd>\n <dt id=\"bigint.asuintn\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt/asUintN\"><code>BigInt.asUintN()</code></a></dt>\n <dd>Оборачивает a BigInt в пределах от 0 до 2<sup>width</sup>-1</dd>\n</dl>"}},{"type":"prose","value":{"id":"методы_экземпляра","title":"Методы экземпляра","isH3":false,"content":"<dl>\n <dt id=\"bigint.prototype.tolocalestring_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/toLocaleString\"><code>BigInt.prototype.toLocaleString()</code> <small>(en-US)</small></a></dt>\n <dd>Возвращает строку с языкозависимым представлением числа. Переопределяет метод <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a>.</dd>\n <dt id=\"bigint.prototype.tostring_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/toString\"><code>BigInt.prototype.toString()</code> <small>(en-US)</small></a></dt>\n <dd>Возвращает строку, представляющую указанный объект по указанному основанию системы счисления. Переопределяет метод <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a>.</dd>\n <dt id=\"bigint.prototype.valueof_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/valueOf\"><code>BigInt.prototype.valueOf()</code> <small>(en-US)</small></a></dt>\n <dd>Возвращает примитивное значение указанного объекта. Переопределяет метод <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a>.</dd>\n</dl>"}},{"type":"prose","value":{"id":"рекомендации_по_использованию","title":"Рекомендации по использованию","isH3":false,"content":""}},{"type":"prose","value":{"id":"приведение","title":"Приведение","isH3":true,"content":"<p>Поскольку приведение между <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> и <code>BigInt</code> может привести к потере точности, рекомендуется использовать<code> BigInt</code> только тогда, когда разумно ожидаются значения, превышающие 2<sup>53</sup> и не приводить между двумя типами.</p>"}},{"type":"prose","value":{"id":"криптография","title":"Криптография","isH3":true,"content":"<p>Операции поддерживаемые <code>BigInt</code> не постоянны во времени. <code>BigInt</code> следовательно <a href=\"https://www.chosenplaintext.ca/articles/beginners-guide-constant-time-cryptography.html\" class=\"external\" rel=\" noopener\">не пригоден для использования в криптографии</a>.</p>"}},{"type":"prose","value":{"id":"использование_вместе_с_json","title":"Использование вместе с JSON","isH3":true,"content":"<p>Использование <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a> с любым значением типа <code>BigInt</code> приведёт к <code>TypeError</code>, поскольку значения <code>BigInt</code> не преобразуется в JSON по умолчанию, однако вы можете реализовать свой собственный метод <code>toJSON</code>, если вам необходимо:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">BigInt</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">toJSON</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Теперь вместо ошибки, <code>JSON.stringify</code> будет создавать строку:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// '\"1\"'</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"примеры","title":"Примеры","isH3":false,"content":""}},{"type":"prose","value":{"id":"расчёт_простых_чисел","title":"Расчёт простых чисел","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Возвращает true, если BigInt — простое число</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">p</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2n</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;=</span> p<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">%</span> i <span class=\"token operator\">===</span> <span class=\"token number\">0n</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Берет BigInt в качестве аргумента и возвращает BigInt</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">nthPrime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nth</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> maybePrime <span class=\"token operator\">=</span> <span class=\"token number\">2n</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> prime <span class=\"token operator\">=</span> <span class=\"token number\">0n</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>nth <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span>maybePrime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      nth<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n      prime <span class=\"token operator\">=</span> maybePrime<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    maybePrime<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> prime<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">nthPrime</span><span class=\"token punctuation\">(</span><span class=\"token number\">20n</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ↪ 73n</span></code></pre></div>"}},{"type":"specifications","value":{"title":"Спецификации","id":"спецификации","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-bigint-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.BigInt"}},{"type":"browser_compatibility","value":{"title":"Совместимость браузера","id":"совместимость_браузера","isH3":false,"query":"javascript.builtins.BigInt","dataURL":"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect4\">\n\n\n<p></p><p></p>\n</div>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a></li>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a></li>\n</ul>"}}],"toc":[{"text":"Описание","id":"описание"},{"text":"Конструктор","id":"конструктор"},{"text":"Статические методы","id":"статические_методы"},{"text":"Методы экземпляра","id":"методы_экземпляра"},{"text":"Рекомендации по использованию","id":"рекомендации_по_использованию"},{"text":"Примеры","id":"примеры"},{"text":"Спецификации","id":"спецификации"},{"text":"Совместимость браузера","id":"совместимость_браузера"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"BigInt это встроенный объект, который предоставляет способ представлять целые числа больше 253 - 1, наибольшего числа, которое JavaScript может надёжно представить с Number примитивом. Это максимальное значение можно получить, обратившись к Number.MAX_SAFE_INTEGER.","popularity":0.0016,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BigInt","locale":"en-US","native":"English (US)"},{"title":"BigInt","locale":"fr","native":"Français"},{"title":"BigInt","locale":"ja","native":"日本語"},{"title":"BigInt","locale":"ko","native":"한국어"},{"title":"BigInt","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"BigInt","locale":"zh-CN","native":"中文 (简体)"},{"title":"BigInt","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/javascript/reference/global_objects/bigint","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/javascript/reference/global_objects/bigint/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference","title":"Справочник по JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects","title":"Стандартные встроенные объекты"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt","title":"BigInt"}],"pageTitle":"BigInt - JavaScript | MDN","noIndexing":false}}