{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"SharedArrayBuffer","mdn_url":"/ru/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects\">Стандартные встроенные объекты</a></strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\"><code>SharedArrayBuffer</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Свойства</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/@@species\"><code>get SharedArrayBuffer[@@species]</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/byteLength\"><code>SharedArrayBuffer.prototype.byteLength</code> <small>(en-US)</small></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Методы</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/slice\"><code>SharedArrayBuffer.prototype.slice()</code> <small>(en-US)</small></a></li></ol></li><li><strong>Наследование:</strong></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Свойства</strong></a><ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Методы</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<p>Объект <strong><code>SharedArrayBuffer</code></strong> подобен ArrayBuffer, то есть это буфер фиксированной длины, использующийся для хранения любых бинарных данных. Главное отличие <code>SharedArrayBuffer</code> от <code>ArrayBuffer</code> заключается в том, что он используется для создания разделяемой области памяти. В отличие от <code>ArrayBuffer</code> <code>SharedArrayBuffer</code> не может быть откреплён от соответствующей ему области памяти.</p>"}},{"type":"prose","value":{"id":"описание","title":"Описание","isH3":false,"content":""}},{"type":"prose","value":{"id":"выделение_и_совместное_использование_памяти","title":"Выделение и совместное использование памяти","isH3":true,"content":"<p>Для совместного использования памяти с помощью объекта <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\" aria-current=\"page\"><code>SharedArrayBuffer</code></a> между одним агентом в кластере и другим (агентом может быть как основная программа страницы сайта, так и один из её веб-воркеров) используются <code><a href=\"/ru/docs/Web/API/Worker/postMessage\">postMessage</a></code> и <a href=\"/ru/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">алгоритм структурированного клонирования</a>.</p>\n\n<p>Алгоритм структурированного клонирования принимает <code>SharedArrayBuffers</code> и <code>TypedArrays</code>, отображённый в <code>SharedArrayBuffers</code>. В обоих случаях объект <code>SharedArrayBuffer</code> передаётся получателю, что приводит к появлению нового приватного объекта SharedArrayBuffer внутри агента-получателя (так же как для <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>). Оба объекта <code>SharedArrayBuffer</code> ссылаются на один и тот же блок общих данных, и побочный эффект, изменяющий блок данных в одном из агентов, в итоге проявится в другом агенте.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> sab <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nworker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>sab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"обновление_и_синхронизация_разделяемой_памяти_с_помощью_атомарных_операций","title":"Обновление и синхронизация разделяемой памяти с помощью атомарных операций","isH3":true,"content":"<p>Разделяемую память можно создавать и изменять одновременно в воркерах или основном потоке. В зависимости от системы (ЦПУ, ОС, браузера), распространение изменений по всем контекстам может занять некоторое время. Для синхронизации необходимы <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\">атомарные</a> операции .</p>"}},{"type":"prose","value":{"id":"api_принимающие_объекты_sharedarraybuffer","title":"API, принимающие объекты <code>SharedArrayBuffer</code>","isH3":true,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/WebGLRenderingContext/bufferData\" title=\"Метод WebGLRenderingContext.bufferData() WebGL API инициализирует и создает хранилище данных буферного объекта.\"><code>WebGLRenderingContext.bufferData()</code></a></li>\n <li><a href=\"/en-US/docs/Web/API/WebGLRenderingContext/bufferSubData\" title=\"Метод WebGLRenderingContext.bufferSubData() WebGL API обновляет подмножество хранилища данных буферного объекта.\"><code>WebGLRenderingContext.bufferSubData()</code></a></li>\n <li><a href=\"/en-US/docs/Web/API/WebGL2RenderingContext/getBufferSubData\" title=\"Метод WebGL2RenderingContext.getBufferSubData() WebGL 2 API считывает данные из привязанной точки буфера и записывает их в ArrayBuffer или SharedArrayBuffer.\"><code>WebGL2RenderingContext.getBufferSubData()</code></a></li>\n</ul>","titleAsText":"API, принимающие объекты SharedArrayBuffer"}},{"type":"prose","value":{"id":"конструктор","title":"Конструктор","isH3":false,"content":"<h3 id=\"требования_безопасности\">Требования безопасности</h3>\n\n<p>Разделяемая память и таймеры высокого разрешения были <a href=\"https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/\" class=\"external\" rel=\" noopener\">отключены в начале 2018 года</a> из-за атаки <a href=\"https://ru.wikipedia.org/wiki/Spectre_(%D1%83%D1%8F%D0%B7%D0%B2%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D1%8C)\" class=\"external\" rel=\" noopener\">Spectre</a>. В 2020 году был стандартизирован новый, безопасный подход, чтобы включить разделяемую память обратно. При следовании следующим мерам безопасности <code><a href=\"/ru/docs/Web/API/Window/postMessage\">postMessage()</a> не будет выкидывать исключение для <code>SharedArrayBuffer</code>, и разделяемая память будет доступна в разных потоках.</code></p><code>\n\n<p>Основное требование — ваш документ должен находиться в <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">безопасном контексте</a></p>\n\n<p>Для документов верхнего уровня нужно устновить два заголовка, чтобы изолировать ваш сайт от других источников (cross-origin):</p>\n\n<ul>\n <li><a href=\"/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy\"><code>Cross-Origin-Opener-Policy</code></a> со значением <code>same-origin</code> (защищает ваш источник от атаки)</li>\n <li><a href=\"/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy\"><code>Cross-Origin-Embedder-Policy</code></a> со значением <code>require-corp</code> (защищает жертв от вашего источника)</li>\n</ul>\n\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">Cross-Origin-Opener-Policy: same-origin\nCross-Origin-Embedder-Policy: require-corp\n</pre></div>\n\n<p>Чтобы проверить, что изоляция от других источников прошла успешно, протестируйте свойство <code><a href=\"/en-US/docs/Web/API/crossOriginIsolated\">crossOriginIsolated</a></code>, доступное для контекстов окна и воркера:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>crossOriginIsolated<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Начни работу с SharedArrayBuffer</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Сделай что-то другое</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Ознакомьтесь с <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">планируемыми изменениями разделяемой памяти</a>, которые начинают внедряться в браузерах (например, в Firefox 79).</p>\n\n<h3 id=\"всегда_используйте_оператор_new_для_создания_sharedarraybuffer\">Всегда используйте оператор new для создания SharedArrayBuffer</h3>\n\n<p>Конструкторы <code>SharedArrayBuffer</code> необходимо вызывать с помощью оператора <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>. Вызов конструктора <code>SharedArrayBuffer</code> как функции без указания <code>new</code> вызовет ошибку <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">var</span> sab <span class=\"token operator\">=</span> <span class=\"token function\">SharedArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TypeError: вызов встроенного конструктора SharedArrayBuffer</span>\n<span class=\"token comment\">// без new запрещено</span></code></pre></div>\n\n<div class=\"code-example\"><pre class=\"brush: js example-good notranslate\"><code><span class=\"token keyword\">var</span> sab <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n\n\n<dl>\n <dt id=\"sharedarraybuffer\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/SharedArrayBuffer\"><code>SharedArrayBuffer()</code></a></dt>\n <dd>Создаёт новый объект <code>SharedArrayBuffer</code>.</dd>\n</dl>\n\n<h3 id=\"свойства\">Свойства</h3>\n\n<dl>\n <dt id=\"sharedarraybuffer.prototype.bytelength_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/byteLength\"><code>SharedArrayBuffer.prototype.byteLength</code> <small>(en-US)</small></a></dt>\n <dd>Размер буферного массива в байтах. Задаётся при создании массива и не может быть изменён. <strong>Только для чтения.</strong></dd>\n</dl>\n\n<h2 id=\"методы\">Методы</h2>\n\n<dl>\n <dt id=\"sharedarraybuffer.prototype.slicebegin_end_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/slice\"><code>SharedArrayBuffer.prototype.slice(begin, end)</code> <small>(en-US)</small></a></dt>\n <dd>Возвращает новый <code>SharedArrayBuffer</code>, чьё содержимое — копия байтов изначального <code>SharedArrayBuffer</code> с <code>begin</code> (начала) включительно до <code>end</code> (конца), но не включая его. Если параметры <code>begin</code> или <code>end</code> отрицательны, метод обращается к индексу массива, начиная с конца, а не с начала.</dd>\n</dl>\n\n<h2 id=\"примеры\">Примеры</h2>\n\n<h3 id=\"создание_нового_sharedarraybuffer\">Создание нового SharedArrayBuffer</h3>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> sab <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h3 id=\"нарезание_sharedarraybuffer\">Нарезание SharedArrayBuffer</h3>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>sab<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// SharedArrayBuffer { byteLength: 1024 }</span>\nsab<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// SharedArrayBuffer { byteLength: 1022 }</span>\nsab<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// SharedArrayBuffer { byteLength: 2 }</span>\nsab<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SharedArrayBuffer { byteLength: 1 }</span></code></pre></div>\n\n<h3 id=\"использование_в_буфере_webgl\">Использование в буфере WebGL</h3>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webgl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">createBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">bindBuffer</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">bufferData</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> sab<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">STATIC_DRAW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h2 id=\"спецификации\">Спецификации</h2>\n\n<div class=\"bc-specs\" data-bcd-query=\"javascript.builtins.SharedArrayBuffer\" data-spec-urls=\"\" id=\"sect2\">\n  If you're able to see this, something went wrong on this page.\n</div>\n\n<h2 id=\"поддержка_браузерами\">Поддержка браузерами</h2>\n\n<p></p><div class=\"bc-data\" id=\"bcd:javascript.builtins.SharedArrayBuffer\" data-depth=\"1\">\n  If you're able to see this, something went wrong on this page.\n</div><p></p>\n\n<h2 id=\"смотрите_также\">Смотрите также</h2>\n\n<ul>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Atomics\"><code>Atomics</code></a></li>\n <li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a></li>\n <li><a href=\"/ru/docs/Web/JavaScript/Typed_arrays\">Типизированные массивы JavaScript</a></li>\n <li><a href=\"/ru/docs/Web/API/Web_Workers_API\">Веб-воркеры</a></li>\n <li><a href=\"https://github.com/lars-t-hansen/parlib-simple\" class=\"external\" rel=\" noopener\">parlib-simple</a> — простая библиотека, предоставляющая синхронизацию и абстракции для распределённых работ.</li>\n <li><a href=\"https://github.com/tc39/ecmascript_sharedmem/blob/master/TUTORIAL.md\" class=\"external\" rel=\" noopener\">Разделяемая память — краткая инструкция</a></li>\n <li>\n  <p><a href=\"https://hacks.mozilla.org/2016/05/a-taste-of-javascripts-new-parallel-primitives/\" class=\"external\" rel=\" noopener\">Немного о новых примитивах JavaScript для параллелизации работ – Mozilla Hacks</a></p>\n </li>\n</ul>\n</code>"}}],"toc":[{"text":"Описание","id":"описание"},{"text":"Конструктор","id":"конструктор"}],"summary":"Объект SharedArrayBuffer подобен ArrayBuffer, то есть это буфер фиксированной длины, использующийся для хранения любых бинарных данных. Главное отличие SharedArrayBuffer от ArrayBuffer заключается в том, что он используется для создания разделяемой области памяти. В отличие от ArrayBuffer SharedArrayBuffer не может быть откреплён от соответствующей ему области памяти.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"SharedArrayBuffer","locale":"en-US","native":"English (US)"},{"title":"SharedArrayBuffer","locale":"fr","native":"Français"},{"title":"SharedArrayBuffer","locale":"ja","native":"日本語"},{"title":"SharedArrayBuffer","locale":"ko","native":"한국어"},{"title":"SharedArrayBuffer","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/javascript/reference/global_objects/sharedarraybuffer","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/javascript/reference/global_objects/sharedarraybuffer/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference","title":"Справочник по JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects","title":"Стандартные встроенные объекты"},{"uri":"/ru/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer","title":"SharedArrayBuffer"}],"pageTitle":"SharedArrayBuffer - JavaScript | MDN","noIndexing":false}}