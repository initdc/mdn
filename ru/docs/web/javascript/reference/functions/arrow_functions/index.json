{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Стрелочные функции","mdn_url":"/ru/docs/Web/JavaScript/Reference/Functions/Arrow_functions","locale":"ru","native":"Русский","sidebarHTML":"\n <ol>\n  <li><a href=\"/ru/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/ru/docs/Web/JavaScript/Tutorials\"><strong>Уроки:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Базовые</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">Основы JavaScript</a></li>\n        <li><a href=\"/ru/docs/Learn/JavaScript/First_steps\">JavaScript first steps</a></li>\n        <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks</a></li>\n        <li><a href=\"/ru/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Руководство по JavaScript</summary>\n      <ol>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Introduction\">Вступление</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Grammar_and_Types\">Грамматика и типы</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Порядок выполнения и обработка ошибок</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Loops_and_iteration\">Циклы и итерации</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Functions\">Функции</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Выражения и операторы</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Numbers_and_dates\">Числа и даты</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Text_formatting\">Форматирование текста</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Regular_Expressions\">Регулярные выражения</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Indexed_collections\">Упорядоченные наборы данных</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Keyed_collections\">Коллекции</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Working_with_Objects\">Работа с объектами</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Подробнее об объектной модели</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Using_promises\">Using promises</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Iterators_and_generators\">Итераторы и генераторы</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Meta_programming\">Метапрограммирование</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Средние</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">Повторное введение в JavaScript</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Data_structures\">Структуры данных JavaScript</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Проверки на равенство и когда их использовать</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Closures\">Замыкания</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Продвинутые</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Наследование и цепочка прототипов</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Strict_mode\">Строгий режим</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Typed_arrays\">Типизированные массивы JavaScript</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Memory_Management\">Управление памятью</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/EventLoop\">Модель совпадения и циклы событий</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ru/docs/Web/JavaScript/Reference\">Справочная информация:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Встроенные объекты</summary>\n        <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Выражения и операторы</summary>\n      <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Инструкции и объявления</summary>\n      <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Функции</summary>\n      <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Классы</summary>\n      <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Ошибки</summary>\n      <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Ещё</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/JavaScript/JavaScript_technologies_overview\">Обзор технологий JavaScript</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Lexical_grammar\">Лексическая грамматика</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Data_structures\">Структуры данных JavaScript</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Перечисляемость и принадлежность свойств</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Iteration_protocols\">Протоколы перебора</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Strict_mode\">Строгий режим</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Переход в строгий режим</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Template_literals\">Шаблонные строки</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Устаревшие возможности</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>"}},{"type":"prose","value":{"id":"сводка","title":"Сводка","isH3":false,"content":"<p><strong>Выражения стрелочных функций</strong> имеют более короткий синтаксис по сравнению с <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/function\">функциональными выражениями</a> и лексически привязаны к значению <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/this\">this</a> (но не привязаны к собственному <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/this\">this</a>, <a href=\"/ru/docs/Web/JavaScript/Reference/Functions/arguments\">arguments</a>, <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/super\">super</a>, или <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a>). Выражение стрелочных функций не позволяют задавать имя, поэтому стрелочные функции <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/name\">анонимны</a>, если их ни к чему не присвоить.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Синтаксис","isH3":false,"content":""}},{"type":"prose","value":{"id":"базовый_синтаксис","title":"Базовый синтаксис","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">(</span><span class=\"token parameter\">param1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">,</span> …<span class=\"token punctuation\">,</span> paramN</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> statements <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">(</span><span class=\"token parameter\">param1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">,</span> …<span class=\"token punctuation\">,</span> paramN</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> expression\n<span class=\"token comment\">// эквивалентно: (param1, param2, …, paramN) =&gt; { return expression; }</span>\n\n<span class=\"token comment\">// Круглые скобки не обязательны для единственного параметра:</span>\n<span class=\"token punctuation\">(</span><span class=\"token parameter\">singleParam</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> statements <span class=\"token punctuation\">}</span>\n<span class=\"token parameter\">singleParam</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> statements <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Функция без параметров нуждается в круглых скобках:</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> statements <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> expression\n<span class=\"token comment\">// Эквивалентно: () =&gt; { return expression; }</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"расширенный_синтаксис","title":"Расширенный синтаксис","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Когда возвращаете литеральное выражение объекта, заключите тело в скобки</span>\n<span class=\"token parameter\">params</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> bar<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Остаточные параметры и параметры по умолчанию поддерживаются</span>\n<span class=\"token punctuation\">(</span><span class=\"token parameter\">param1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> statements <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">(</span><span class=\"token parameter\">param1 <span class=\"token operator\">=</span> defaultValue1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">,</span> …<span class=\"token punctuation\">,</span> paramN <span class=\"token operator\">=</span> defaultValueN</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> statements <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Деструктуризация тоже поддерживается</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> c<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> a <span class=\"token operator\">+</span> b <span class=\"token operator\">+</span> c<span class=\"token punctuation\">;</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 6</span>\n</code></pre></div>\n\n<p>Подробные примеры синтаксиса можно посмотреть <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:arrow_function_syntax\" class=\"external\" rel=\" noopener\">здесь</a>.</p>"}},{"type":"prose","value":{"id":"описание","title":"Описание","isH3":false,"content":"<p>Смотрите также <a href=\"https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/\" class=\"external\" rel=\" noopener\">\"ES6 In Depth: Arrow functions\" on hacks.mozilla.org</a>.</p>\n\n<p>Два фактора повлияли на появление стрелочных функции: более короткий синтаксис и лексика <code>this</code>.</p>"}},{"type":"prose","value":{"id":"короткие_функции","title":"Короткие функции","isH3":true,"content":"<p>В некоторых функциональных шаблонах приветствуются более короткие функции. Сравните:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'Hydrogen'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Helium'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Lithium'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Beryllium'</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nelements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Это выражение вернёт массив [8, 6, 7, 9]</span>\n\n<span class=\"token comment\">// Функцию выше можно записать как стрелочную функцию:</span>\nelements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [8, 6, 7, 9]</span>\n\n<span class=\"token comment\">// Если единственным оператором в выражении стрелочной функции является return,</span>\n<span class=\"token comment\">// можно удалить return и окружающие фигурные скобки</span>\n\nelements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=&gt;</span> element<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [8, 6, 7, 9]</span>\n\n<span class=\"token comment\">// В данном случае, поскольку нам нужно только свойство length, мы можем использовать деструктуризированный параметр:</span>\n<span class=\"token comment\">// Обратите внимание, что строка `\"length\"` соответствует свойству, которое мы хотим получить,</span>\n<span class=\"token comment\">// в то время как `lengthFooBArX` это просто имя переменной, которую можно назвать как вы хотите</span>\nelements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"length\"</span><span class=\"token operator\">:</span> lengthFooBArX <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> lengthFooBArX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [8, 6, 7, 9]</span>\n\n<span class=\"token comment\">// Это задание деструктуризированного параметра может быть записано, как показано ниже. Тем не менее, обратите внимание,</span>\n<span class=\"token comment\">// что нет строки `\"length\"`, чтобы выбрать, какое свойство мы хотим получить. Вместо этого в качестве свойства,</span>\n<span class=\"token comment\">// которое мы хотим извлечь из объекта, используется само литеральное имя переменной `length`</span>\nelements<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> length <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [8, 6, 7, 9]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"отсутствие_связывания_с_this","title":"Отсутствие связывания с <code>this</code>","isH3":true,"content":"<p>До появления стрелочных функций, каждая новая функция имела своё значение <code><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/this\">this</a></code> (новый объект в случае конструктора, undefined в <a href=\"/ru/docs/Web/JavaScript/Reference/Strict_mode\">strict</a> режиме вызова функции, контекст объекта при вызове функции как \"метода объекта\" и т.д.). Это очень раздражало при использовании объектно-ориентированного стиля программирования.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// В конструкторе Person() `this` указывает на себя.</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">growUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// В нестрогом режиме, в функции growUp() `this` указывает</span>\n    <span class=\"token comment\">// на глобальный объект, который отличается от `this`,</span>\n    <span class=\"token comment\">// определяемом в конструкторе Person().</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>В ECMAScript 3/5, данная проблема решалась присваиванием значения <code>this</code> переменной:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  that<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">growUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Функция с обратным вызовом(callback) содержит переменную that, которая</span>\n    <span class=\"token comment\">// ссылается на требуемый объект this.</span>\n    that<span class=\"token punctuation\">.</span>age<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Кроме этого, может быть создана <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\">привязанная функция</a>, в которую передаётся требуемое значение <code><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/this\">this</a></code> для функции (функция <code>growUp()</code> в примере выше).</p>\n\n<p>Стрелочные функции не содержат собственный контекст <code><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/this\">this</a></code>, а используют значение <code><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/this\">this</a></code> окружающего контекста. Поэтому нижеприведённый код работает как предполагалось:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// `this` указывает на объект Person</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<h4 id=\"строгий_режим_исполнения\">Строгий режим исполнения</h4>\n\n<p>Поскольку значение <code>this</code> определяется лексикой, правила строгого режима (<a href=\"/ru/docs/Web/JavaScript/Reference/Strict_mode\">strict mode</a>) относительно <code>this</code> игнорируются:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> window<span class=\"token punctuation\">;</span> <span class=\"token comment\">// или глобальный объект</span></code></pre></div>\n\n<p>Все остальные правила строгого режима применяются как обычно.</p>\n\n<h4 id=\"вызов_с_помощью_call_или_apply\">Вызов с помощью call или apply</h4>\n\n<p>Так как значение <code>this</code> определяется лексикой, вызов стрелочных функций с помощью методов <code>call()</code> или <code>apply()</code>, даже если передать аргументы в эти методы, не влияет на значение <code>this</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> adder <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">base</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function-variable function\">add</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">v</span> <span class=\"token operator\">=&gt;</span> v <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function-variable function\">addThruCall</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">v</span> <span class=\"token operator\">=&gt;</span> v <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">base</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">f</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>adder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// Выводит 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>adder<span class=\"token punctuation\">.</span><span class=\"token function\">addThruCall</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Всё равно выводит 2</span>\n</code></pre></div>","titleAsText":"Отсутствие связывания с this"}},{"type":"prose","value":{"id":"не_имеет_собственного_объекта_arguments","title":"Не имеет собственного объекта arguments","isH3":true,"content":"<p>Стрелочные функции не имеют собственного объекта arguments, поэтому в теле стрелочных функций arguments будет ссылаться на переменную в окружающей области.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> arguments <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">arr</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> arguments<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">arr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> arguments<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Неявное связывание ссылки arguments</span>\n                                   <span class=\"token comment\">// стрелочной функции f</span>\n                                   <span class=\"token comment\">// c объектом arguments функции foo</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></code></pre></div>\n\n<p>В большинстве случаев лучшей заменой объекта arguments в стрелочных функциях являются <a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\">остаточные параметры</a>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"использование_стрелочных_функций_как_методов","title":"Использование стрелочных функций как методов","isH3":true,"content":"<p>Как показано ранее, стрелочные функции лучше всего подходят для функций без методов. Посмотрим, что будет, когда мы попробуем их использовать как методы:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">c</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints undefined, Window {...} (или глобальный объект)</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints 10, Object {...}</span>\n</code></pre></div>\n\n<p>Стрелочные функции не объявляют привязку (\"bind\") их контекста <code>this</code>. Другой пример включает <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typeof</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// представляет глобальный объект 'Window', но 'this.a' возвращает 'undefined'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"использование_оператора_new","title":"Использование оператора <code>new</code>","isH3":true,"content":"<p>Стрелочные функции не могут быть использованы как конструктор и вызовут ошибку при использовании с <code>new</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// переменной \"a\" будет присвоено значение экземпляра анонимной функции</span>\n\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// будет выброшено исключение</span>\n<span class=\"token comment\">// Uncaught TypeError: (intermediate value) is not a constructor</span></code></pre></div>","titleAsText":"Использование оператора new"}},{"type":"prose","value":{"id":"использование_ключевого_слова_yield","title":"Использование ключевого слова <code>yield</code>","isH3":true,"content":"<p>Ключевое слово <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></code> не может быть использовано в теле стрелочной функции (за исключением случаев, когда разрешается использовать в функциях, вложенных в тело стрелочной функции). Как следствие стрелочные функции не могут быть использованы как генераторы.</p>","titleAsText":"Использование ключевого слова yield"}},{"type":"prose","value":{"id":"тело_функции","title":"Тело функции","isH3":false,"content":"<p>Тело стрелочной функции может иметь краткую (concise body) или блочную (block body) форму.</p>\n\n<p>Блочная форма не возвращает значение, необходимо явно вернуть значение.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">func</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> x <span class=\"token operator\">*</span> x<span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// краткий синтаксис,</span>\n                                        <span class=\"token comment\">// неявно возвращает результат</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">func</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// блочный синтаксис,</span>\n                                        <span class=\"token comment\">// явно возвращает результат</span></code></pre></div>"}},{"type":"prose","value":{"id":"возвращаемые_объектные_строки_литералы","title":"Возвращаемые объектные строки (литералы)","isH3":false,"content":"<p>Помните о том, что возвращаемые <a href=\"/ru/docs/Web/JavaScript/Guide/Grammar_and_types#литерал_объекта/\">объектные строки</a> используют сокращённый синтаксис: <code>params =&gt; {object:literal}</code> будет работать не так, как ожидается.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">func</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Вызов func() возвращает undefined!</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">func</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">foo</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// SyntaxError: function statement requires a name</span></code></pre></div>\n\n<p>Это происходит потому что код в скобках ({}) распознаётся как цепочка выражений (т.е. <code>foo</code> трактуется как наименование, а не как ключ в объектной строке).</p>\n\n<p>Не забывайте оборачивать скобками объектные строки.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">func</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"разрывы_строк","title":"Разрывы строк","isH3":false,"content":"<p>Стрелочная функция не может содержать разрывы строк между параметрами и стрелкой.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">func</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n           <span class=\"token operator\">=&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// SyntaxError: expected expression, got '=&gt;'</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"разбор_порядка_следования","title":"Разбор порядка следования","isH3":false,"content":"<p>Поскольку стрелка в стрелочной функции не является оператором, то стрелочные функции имеют специальные правила разбора (парсинга), которые взаимодействуют с <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">приоритетами операторов</a>  иначе, чем в обычных функциях.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> callback<span class=\"token punctuation\">;</span>\n\ncallback <span class=\"token operator\">=</span> callback <span class=\"token operator\">||</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ok</span>\n\ncallback <span class=\"token operator\">=</span> callback <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// SyntaxError: invalid arrow-function arguments</span>\n\ncallback <span class=\"token operator\">=</span> callback <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// ok</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"больше_примеров","title":"Больше примеров","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Пустая стрелочная функция возвращает undefined</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">empty</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string\">'foobar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Вернёт \"foobar\"</span>\n<span class=\"token comment\">// (Это Immediately Invoked Function Expression</span>\n<span class=\"token comment\">// смотри 'IIFE' в справочнике)</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">simple</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">a</span> <span class=\"token operator\">=&gt;</span> a <span class=\"token operator\">&gt;</span> <span class=\"token number\">15</span> <span class=\"token operator\">?</span> <span class=\"token number\">15</span> <span class=\"token operator\">:</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token function\">simple</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 15</span>\n<span class=\"token function\">simple</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">max</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> a <span class=\"token operator\">&gt;</span> b <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> b<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Удобные операции над массивами: filter, map, ...</span>\n\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> sum <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 66</span>\n\n<span class=\"token keyword\">var</span> even <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=&gt;</span> v <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [6, 0, 18]</span>\n\n<span class=\"token keyword\">var</span> double <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=&gt;</span> v <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [10, 12, 26, 0, 2, 36, 46]</span>\n\n<span class=\"token comment\">// Более короткие цепочки promise-ов</span>\npromise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Стрелочные функции без параметров, которые визуально легче разбирать</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Я буду раньше'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// deeper code</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Я буду позже'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Спецификации","id":"спецификации","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/ecmascript-language-functions-and-classes.html#sec-arrow-function-definitions","title":"ECMAScript Language Specification"}],"query":"javascript.functions.arrow_functions"}},{"type":"browser_compatibility","value":{"title":"Совместимость с браузерами","id":"совместимость_с_браузерами","isH3":false,"query":"javascript.functions.arrow_functions","dataURL":"/ru/docs/Web/JavaScript/Reference/Functions/Arrow_functions/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"замечания_для_firefox","title":"Замечания для Firefox","isH3":true,"content":"<ul>\n <li>Первоначальная реализация стрелочных функций в Firefox автоматически переводила их в строгий режим. Это поведение было изменено в <a href=\"/en-US/docs/Mozilla/Firefox/Releases/24\" title=\"/en-US/docs/Mozilla/Firefox/Releases/24\">Firefox 24</a>. Использование <code>\"use strict\";</code> стало обязательным.</li>\n <li>Стрелочные функции семантически отличаются от нестандартных <a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Expression_closures\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Expression Closures</a>, добавленных в <a href=\"/en-US/docs/Mozilla/Firefox/Releases/3\">Firefox 3</a> (подробности в <a href=\"/en-US/docs/Web/JavaScript/New_in_JavaScript/1.8\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Javascript 1.8</a>); в Expression Closures значение <code>this</code> не привязано лексически.</li>\n <li>До <a href=\"/en-US/Firefox/Releases/39\">Firefox 39</a>, перенос строки (<code>\\n</code>) был ошибочно разрешён после аргументов стрелочной функции. Это было исправлено для соблюдения спецификации ES2015, и код вроде: <code>() \\n =&gt; {}</code> теперь вызывает <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> в этой и более поздних версиях.</li>\n</ul>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n <li><a href=\"https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/\" class=\"external\" rel=\" noopener\">\"ES6 In Depth: Arrow functions\" on hacks.mozilla.org</a></li>\n</ul>"}}],"toc":[{"text":"Сводка","id":"сводка"},{"text":"Синтаксис","id":"syntax"},{"text":"Описание","id":"описание"},{"text":"Тело функции","id":"тело_функции"},{"text":"Возвращаемые объектные строки (литералы)","id":"возвращаемые_объектные_строки_литералы"},{"text":"Разрывы строк","id":"разрывы_строк"},{"text":"Разбор порядка следования","id":"разбор_порядка_следования"},{"text":"Больше примеров","id":"больше_примеров"},{"text":"Спецификации","id":"спецификации"},{"text":"Совместимость с браузерами","id":"совместимость_с_браузерами"},{"text":"See also","id":"see_also"}],"summary":"Выражения стрелочных функций имеют более короткий синтаксис по сравнению с функциональными выражениями и лексически привязаны к значению this (но не привязаны к собственному this, arguments, super, или new.target). Выражение стрелочных функций не позволяют задавать имя, поэтому стрелочные функции анонимны, если их ни к чему не присвоить.","popularity":0.0062,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Arrow function expressions","locale":"en-US","native":"English (US)"},{"title":"Funciones Flecha","locale":"es","native":"Español"},{"title":"Fonctions fléchées","locale":"fr","native":"Français"},{"title":"アロー関数式","locale":"ja","native":"日本語"},{"title":"화살표 함수","locale":"ko","native":"한국어"},{"title":"Arrow functions","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"箭头函数","locale":"zh-CN","native":"中文 (简体)"},{"title":"箭頭函式","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/javascript/reference/functions/arrow_functions","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/javascript/reference/functions/arrow_functions/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference","title":"Справочник по JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Reference/Functions","title":"Функции"},{"uri":"/ru/docs/Web/JavaScript/Reference/Functions/Arrow_functions","title":"Стрелочные функции"}],"pageTitle":"Стрелочные функции - JavaScript | MDN","noIndexing":false}}