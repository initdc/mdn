{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Операторы сравнения","mdn_url":"/ru/docs/Web/JavaScript/Equality_comparisons_and_sameness","locale":"ru","native":"Русский","sidebarHTML":"\n <ol>\n  <li><a href=\"/ru/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/ru/docs/Web/JavaScript/Tutorials\"><strong>Уроки:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Базовые</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">Основы JavaScript</a></li>\n        <li><a href=\"/ru/docs/Learn/JavaScript/First_steps\">JavaScript first steps</a></li>\n        <li><a href=\"/ru/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks</a></li>\n        <li><a href=\"/ru/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Руководство по JavaScript</summary>\n      <ol>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Introduction\">Вступление</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Grammar_and_Types\">Грамматика и типы</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Порядок выполнения и обработка ошибок</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Loops_and_iteration\">Циклы и итерации</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Functions\">Функции</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Выражения и операторы</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Numbers_and_dates\">Числа и даты</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Text_formatting\">Форматирование текста</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Regular_Expressions\">Регулярные выражения</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Indexed_collections\">Упорядоченные наборы данных</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Keyed_collections\">Коллекции</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Working_with_Objects\">Работа с объектами</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Подробнее об объектной модели</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Using_promises\">Using promises</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Iterators_and_generators\">Итераторы и генераторы</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Meta_programming\">Метапрограммирование</a></li>\n          <li><a href=\"/ru/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Средние</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/ru/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">Повторное введение в JavaScript</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Data_structures\">Структуры данных JavaScript</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Проверки на равенство и когда их использовать</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Closures\">Замыкания</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Продвинутые</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Наследование и цепочка прототипов</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Strict_mode\">Строгий режим</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Typed_arrays\">Типизированные массивы JavaScript</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Memory_Management\">Управление памятью</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/EventLoop\">Модель совпадения и циклы событий</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ru/docs/Web/JavaScript/Reference\">Справочная информация:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Встроенные объекты</summary>\n        <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Выражения и операторы</summary>\n      <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Инструкции и объявления</summary>\n      <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ru/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Функции</summary>\n      <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Классы</summary>\n      <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Ошибки</summary>\n      <ol><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/ru/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Ещё</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/JavaScript/JavaScript_technologies_overview\">Обзор технологий JavaScript</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Lexical_grammar\">Лексическая грамматика</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Data_structures\">Структуры данных JavaScript</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Перечисляемость и принадлежность свойств</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Iteration_protocols\">Протоколы перебора</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Strict_mode\">Строгий режим</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Переход в строгий режим</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Template_literals\">Шаблонные строки</a></li>\n        <li><a href=\"/ru/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Устаревшие возможности</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div class=\"summary\" id=\"sect2\">\n<p>JavaScript предоставляет три оператора сравнения величин:</p>\n\n<ul>\n <li>равенство (\"двойное равно\") использует <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#equality\">==</a>,</li>\n <li>строгое равенство (или \"тройное равно\" или \"идентично\") использует <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#identity\">===</a>,</li>\n <li>и <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a> (новшество из ECMAScript 6).</li>\n</ul>\n\n<p>Выбор оператора зависит от типа сравнения, которое необходимо произвести.</p>\n</div>\n\n<p>В общих чертах, двойное равно перед сравнением величин производит приведение типов; тройное равно сравнивает величины без приведения (если величины разных типов, вернёт <code>false</code>, даже не сравнивая); ну и <code>Object.is</code> ведёт себя так же, как и тройное равно, но со специальной обработкой для <code>NaN</code>, <code>-0</code> и <code>+0</code>, возвращая <code>false</code> при сравнении  <code>-0</code> и <code>+0</code>, и <code>true</code> для операции <code>Object.is(NaN, NaN)</code>. (В то время как двойное или тройное равенство вернут <code>false</code> согласно стандарту IEEE 754.) Следует отметить, что все эти различия в сравнениях применимы лишь для примитивов. Для любых не примитивных объектов <code>x</code> и <code>y</code>, которые имеют одинаковые структуры, но представляют собой два отдельных объекта (переменные <code>x</code> и <code>y</code> не ссылаются на один и тот же объект), все операторы сравнения вернут <code>false</code>.</p>"}},{"type":"prose","value":{"id":"сравнение_с_использованием","title":"Сравнение с использованием <code>==</code>","isH3":false,"content":"<p>Перед сравнением оператор равенства <em>приводит</em> обе величины к общему типу.  После приведений (одного или обоих операндов), конечное сравнение выполняется также как и для <code>===</code>.  Операция сравнения <em>симметрична</em>: <code>A == B</code> возвращает то же значение, что и  <code>B == A</code> для любых значений <code>A</code> и <code>B</code>.</p>\n\n<p>В следующей таблице  приведены результаты сравнения оператора равенства для различных значений:</p>\n\n<table class=\"standard-table\" style=\"height: 438px; width: 825px;\">\n <thead>\n  <tr>\n   <th scope=\"row\"><code> </code></th>\n   <th colspan=\"7\" scope=\"col\" style=\"text-align: center;\"><code>Операнд B</code></th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <th scope=\"row\"><code> </code></th>\n   <th><code> </code></th>\n   <th style=\"text-align: center;\"><code>Undefined</code></th>\n   <th style=\"text-align: center;\"><code>Null</code></th>\n   <th style=\"text-align: center;\"><code>Number</code></th>\n   <th style=\"text-align: center;\"><code>String</code></th>\n   <th style=\"text-align: center;\"><code>Boolean</code></th>\n   <th style=\"text-align: center;\"><code>Object</code></th>\n  </tr>\n  <tr>\n   <th colspan=\"1\" rowspan=\"6\" scope=\"row\"><code>Операнд A</code></th>\n   <th>\n    <p><code>Undefined</code></p>\n   </th>\n   <td style=\"text-align: center;\"><code>true</code></td>\n   <td style=\"text-align: center;\"><code>true</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <th><code>Null</code></th>\n   <td style=\"text-align: center;\"><code>true</code></td>\n   <td style=\"text-align: center;\"><code>true</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <th><code>Number</code></th>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>A === B</code></td>\n   <td style=\"text-align: center;\"><code>A === ToNumber(B)</code></td>\n   <td style=\"text-align: center;\"><code>A === ToNumber(B)</code></td>\n   <td style=\"text-align: center;\"><code>A == ToPrimitive(B)</code></td>\n  </tr>\n  <tr>\n   <th><code>String</code></th>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>ToNumber(A) === B</code></td>\n   <td style=\"text-align: center;\"><code>A === B</code></td>\n   <td style=\"text-align: center;\"><code>ToNumber(A) === ToNumber(B)</code></td>\n   <td style=\"text-align: center;\"><code>A == ToPrimitive(B)</code></td>\n  </tr>\n  <tr>\n   <th><code>Boolean</code></th>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>ToNumber(A) === B</code></td>\n   <td style=\"text-align: center;\"><code>ToNumber(A) === ToNumber(B)</code></td>\n   <td style=\"text-align: center;\"><code>A === B</code></td>\n   <td style=\"text-align: center;\"><code>ToNumber(A) == ToPrimitive(B)</code></td>\n  </tr>\n  <tr>\n   <th><code>Object</code></th>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>ToPrimitive(A) == B</code></td>\n   <td style=\"text-align: center;\"><code>ToPrimitive(A) == B</code></td>\n   <td style=\"text-align: center;\"><code>ToPrimitive(A) == ToNumber(B)</code></td>\n   <td style=\"text-align: center;\"><code>A === B</code></td>\n  </tr>\n </tbody>\n</table>\n\n<p>В таблице выше, ToNumber(A) пытается перед сравнением привести свой аргумент к числу. Такое поведение эквивалентно <code>+A</code> (унарный оператор <code>+</code>).  Если ToPrimitive(A) получает <em>объект</em> в качестве аргумента, то производятся попытки привести его к примитиву, вызывая на нем методы <code>A.toString</code> и <code>A.valueOf</code>.</p>\n\n<p><span id=\"result_box\" lang=\"ru\"><span class=\"hps\">Традиционно</span><span> (</span><span class=\"hps\">и в соответствии с</span> <span class=\"hps\">ECMAScript</span><span>)</span>, <span class=\"hps\">ни один из объектов</span> <span class=\"hps\">не равен</span> </span><code>undefined</code> или <code>null</code>.  Но большинство браузеров позволяет определённому классу объектов<span id=\"result_box\" lang=\"ru\"><span class=\"hps\"> (в частности,</span> <span class=\"hps\">объектам</span> <code><span class=\"hps\">document.all</span></code> <span class=\"hps\">для любой страницы</span><span>) <em>эмулировать</em> значение </span></span><code>undefined.</code>  Оператор равенства вернёт значение true для <code>null == A</code> и <code>undefined == A</code>, тогда, и только тогда, когда объект эмулирует значение <code>undefined</code>. Во всех остальных случаях объект не может быть равен <code>undefined</code> или <code>null</code>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">==</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// оба false, кроме очень редких случаев</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Некоторые разработчики считают, что лучше всегда употреблять оператор <em>строго</em> равенства, вместо сравнения с приведением типов. Результат строгого равенства легче предугадать, да и сравнивая значения, без их приведения, можно получить выигрыш в скорости<code>.</code></p>","titleAsText":"Сравнение с использованием =="}},{"type":"prose","value":{"id":"строгое_равенство_с_использованием","title":"Строгое равенство с использованием <code>===</code>","isH3":false,"content":"<p>Строгое равно проверяет на равенство две величины, при этом тип каждой из величин перед сравнением не изменяется (не приводится). Если значения имеют различающиеся типы, то они не могут быть равными. С другой стороны все не числовые переменные, принадлежащие одному типу, считаются равными между собой, если содержат одинаковые величины. Ну и, наконец, числовые переменные считаются равными, если они имеют одинаковые значения, либо одна из них <code>+0</code>, а вторая <code>-0</code>. В то же время, если хотя бы одна из числовых переменных содержит значение <code>NaN</code>, выражение вернёт <code>false</code>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">===</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">===</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">===</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">===</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre></div>\n\n<p>Практически всегда для сравнения следует использовать оператор строгого равенства. Для всех значений, за исключением числовых используется очевидная семантика: величина равна только сама себе. Как было сказано выше для числовых типов можно выделить два особых случая. Во-первых, сравнение <code>+0</code> и <code>-0</code>. Знак для нуля введён для упрощения некоторых вычислений с плавающей запятой, однако, с точки зрения математики, разницы между <code>+0</code> и <code>-0</code> не существует, поэтому оператор строгого равенства считает их равными. Во-вторых, сравнение величин <code>NaN</code>. <code>NaN</code> (Not a number) представляет из себя значение не определённой величины, которое применяется для не чётко определённых математических задач (например <code>+∞ + -∞</code>). Для оператора строго равенства <code>NaN</code> не равен ни одной из величин, в том числе и самому себе (единственный случай, когда <code>(x!==x)</code> вернёт true).</p>","titleAsText":"Строгое равенство с использованием ==="}},{"type":"prose","value":{"id":"равенство_одинаковых_величин","title":"Равенство одинаковых величин","isH3":false,"content":"<p>Равенство одинаковых величин определяет <em>функциональную идентичность</em> во всех контекстах сравниваемых величин. (Данный способ сравнения основывается на <a href=\"https://ru.wikipedia.org/wiki/Принцип_подстановки_Барбары_Лисков\" class=\"external\" rel=\" noopener\">принципе подстановки Барбары Лисков</a>.) Рассмотрим пример попытки изменения неизменяемого (immutable) свойства<code>:</code></p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Добавление неизменяемого свойства NEGATIVE_ZERO (отрицательный ноль) в конструктор Number.</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">,</span> <span class=\"token string\">\"NEGATIVE_ZERO\"</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">writable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">attemptMutation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">,</span> <span class=\"token string\">\"NEGATIVE_ZERO\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> v <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>При попытке изменения неизменяемого свойства, вызов <code>Object.defineProperty выбросит</code> исключение, однако, если новое свойство равняется старому, изменений не произойдёт и исключение не будет выброшено. Если <code>v</code> содержит <code>-0</code>, изменений не произойдёт, а значит, код отработает без выброса исключений. Однако, если же <code>v</code> содержит <code>+0</code>, <code>Number.NEGATIVE_ZERO</code> утратит свою неизменяемую величину. Именно для сравнения нового и текущего неизменяемых свойств используется сравнение одинаковых величин, представленное методом <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a></code>.</p>"}},{"type":"prose","value":{"id":"спецификации_для_равенства_строгого_равенства_и_равенства_одинаковых_величин","title":"Спецификации для равенства, строгого равенства и равенства одинаковых величин","isH3":false,"content":"<p>В стандарте ES5, сравнение выполняемое оператором <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">==</a> описывается в секции <a href=\"https://ecma-international.org/ecma-262/5.1/#sec-11.9.3\" title=\"http://ecma-international.org/ecma-262/5.1/#sec-11.9.3\" class=\"external\" rel=\" noopener\">11.9.3, The Abstract Equality Algorithm</a>. Описание оператора <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\">===</a> находится в секции <a href=\"https://ecma-international.org/ecma-262/5.1/#sec-11.9.6\" title=\"http://ecma-international.org/ecma-262/5.1/#sec-11.9.6\" class=\"external\" rel=\" noopener\">11.9.6, The Strict Equality Algorithm</a>. В секции <a href=\"https://ecma-international.org/ecma-262/5.1/#sec-9.12\" class=\"external\" rel=\" noopener\">9.12, The SameValue Algorithm</a> ES5  описывает операцию сравнение одинаковых величин для внутреннего движка  JS. Строгое равенство и равенство одинаковых величин, практически одинаковы, за исключением обработки <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">числовых типов</a>. ES6 предлагает использовать алгоритм сравнения одинаковых величин через вызов <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a></code>.</p>"}},{"type":"prose","value":{"id":"как_понимать_все_эти_способы_сравнения","title":"<code>Как понимать все эти способы сравнения?</code>","isH3":false,"content":"<p>До выхода редакции ES6 считалось, что оператор строгого равенства просто \"улучшенная\" версия оператора нестрогого равенства. Например, некоторые считали, что == просто улучшенная версия === потому, что первый оператор делает всё то же, что и второй, плюс приведение типов своих операндов. То есть 6 == \"6\". (Или же наоборот: оператор нестрогого равенства базовый, а оператор строгого равенства просто его улучшенная версия, ведь он добавляет ещё одно условие - требует, чтобы оба операнда были одного и того же типа. Какой вариант ближе вам, зависит только от вашей точки зрения на вещи.)</p>\n\n<p>Но эти точки зрения уже нельзя применить к новому методу сравнения <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> из новой редакции ES6. Нельзя сказать, что <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> более или менее строг относительно существующих способов сравнения, или что это нечто среднее между ними. Ниже в таблице показаны основные различия операторов сравнения. <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> интересен тем, что различает -0 и +0, а также умеет сравнивать два не числа <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a>.</p>\n\n<table class=\"standard-table\">\n <caption><code>Сравнительная таблица операторов сравнения</code></caption>\n <thead>\n  <tr>\n   <th scope=\"col\" style=\"text-align: center;\"><code>x</code></th>\n   <th scope=\"col\" style=\"text-align: center;\"><code>y</code></th>\n   <th scope=\"col\" style=\"width: 10em; text-align: center;\"><code>==</code></th>\n   <th scope=\"col\" style=\"width: 10em; text-align: center;\"><code>===</code></th>\n   <th scope=\"col\" style=\"width: 10em; text-align: center;\"><code>Object.is</code></th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code>undefined</code></td>\n   <td><code>undefined</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>null</code></td>\n   <td><code>null</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>true</code></td>\n   <td><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>false</code></td>\n   <td><code>false</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>\"foo\"</code></td>\n   <td><code>\"foo\"</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>{ foo: \"bar\" }</code></td>\n   <td><code>x</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>0</code></td>\n   <td><code>0</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>+0</code></td>\n   <td><code>-0</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>0</code></td>\n   <td><code>false</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>\"\"</code></td>\n   <td><code>false</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>\"\"</code></td>\n   <td><code>0</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>\"0\"</code></td>\n   <td><code>0</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>\"17\"</code></td>\n   <td><code>17</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>[1,2]</code></td>\n   <td><code>\"1,2\"</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>new String(\"foo\")</code></td>\n   <td><code>\"foo\"</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>null</code></td>\n   <td><code>undefined</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>null</code></td>\n   <td><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>undefined</code></td>\n   <td><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>{ foo: \"bar\" }</code></td>\n   <td><code>{ foo: \"bar\" }</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>new String(\"foo\")</code></td>\n   <td><code>new String(\"foo\")</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>0</code></td>\n   <td><code>null</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>0</code></td>\n   <td><code>NaN</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>\"foo\"</code></td>\n   <td><code>NaN</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>NaN</code></td>\n   <td><code>NaN</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n </tbody>\n</table>","titleAsText":"Как понимать все эти способы сравнения?"}},{"type":"prose","value":{"id":"когда_же_использовать_object.is","title":"<code>Когда же использовать <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> ?</code></code>","isH3":false,"content":"<code>\n\n<p>Особенность обработки <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a></code> нулей будет полезна в метапрограммировании, когда необходимо присвоить противоположное значение свойству через дескриптор <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">Object.defineProperty</a></code>. Если ваши задачи этого не требуют, то лучше воздержаться от использования <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a></code>, отдав предпочтение <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">=== (en-US)</a></code>. Даже если в коде необходимо сравнивать два <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/NaN\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></code>, обычно проще всего использовать существующий метод <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/isNaN\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\">isNaN</a></code>, чтобы последующие вычисления не влияли на сравнение нулей с разными знаками.</p>\n\n<p>Вот примеры операторов и методов, которые могут сделать различия между  <code>-0</code> и <code>+0</code> более явными, что непременно отразиться в вашем коде:</p>\n\n<dl>\n <dt id=\"-_унарный_минус\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#-_.28unary_negation.29\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators\"><code>- (унарный минус)</code></a></dt>\n <dd>\n <p>Очевидно, что применение унарного минуса к нулю даст <code>-0</code>. Но, иногда, это происходит совершенно незаметно. К примеру:</p>\n\n <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> stoppingForce <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>mass <span class=\"token operator\">*</span> <span class=\"token operator\">-</span>obj<span class=\"token punctuation\">.</span>velocity</code></pre></div>\n\n <p>Если значением <code>obj.velocity</code> будет <code>0</code>, то результатом выражения будет <code>-0</code>, что в итоге отразится в переменной <code>stoppingForce</code>.</p>\n </dd>\n <dt id=\"math.atan2\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2\"><code>Math.atan2</code></a></dt>\n <dt id=\"math.ceil\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\"><code>Math.ceil</code></a></dt>\n <dt id=\"math.pow\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\"><code>Math.pow</code></a></dt>\n <dt id=\"math.round\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/round\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"><code>Math.round</code></a></dt>\n <dd>Есть вероятность, что данные методы могут возвратить <code>-0</code>, даже если его не передавали явно одним из параметров. Например, если методом <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\">Math.pow</a></code> возвести <code>-<a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Infinity\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></code> в любую отрицательную степень. Ознакомьтесь с подробным описанием данных методов.</dd>\n</dl>\n\n<dl>\n <dt id=\"math.floor\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\"><code>Math.floor</code></a></dt>\n <dt id=\"math.max\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/max\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max\"><code>Math.max</code></a></dt>\n <dt id=\"math.min\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/min\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min\"><code>Math.min</code></a></dt>\n <dt id=\"math.sin\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\"><code>Math.sin</code></a></dt>\n <dt id=\"math.sqrt\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\"><code>Math.sqrt</code></a></dt>\n <dt id=\"math.tan\"><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\"><code>Math.tan</code></a></dt>\n</dl>\n\n<dl>\n <dd>В некоторых случаях можно получить результат, равный <code>-0</code>, если вышеперечисленным методам одним из параметров передать <code>-0</code>. Например, <code>Math.min(-0, +0)</code> вернёт <code>-0</code>. Ознакомьтесь с подробным описанием данных методов.</dd>\n</dl>\n\n<dl>\n <dt id=\"sect3\"><code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">~ (en-US)</a></code></dt>\n <dt id=\"sect4\"><code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">&lt;&lt; (en-US)</a></code></dt>\n <dt id=\"sect5\"><code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">&gt;&gt; (en-US)</a></code></dt>\n <dd>Каждый из этих операторов использует внутренний алгоритм <code>ToInt32</code>. В нём нет места для отрицательного нуля, потому значение <code>-0</code> не переживёт подобной операции. То есть и <code>Object.is(~~(-0), -0)</code>, и <code>Object.is(-0 &lt;&lt; 2 &gt;&gt; 2, -0)</code> возвратят <code>false</code>.</dd>\n</dl>\n\n<p>Из вышеперечисленного ясно, что использование <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a> иногда может быть проблемным. Естественно, если вам необходимо чётко различать <code>-0</code> и <code>+0</code>, то этот метод именно то, что нужно.</p>\n\n<h2 id=\"смотрите_также\"><code>Смотрите также</code></h2>\n\n<ul>\n <li><code><a href=\"http://dorey.github.io/JavaScript-Equality-Table/\" class=\"external\" rel=\" noopener\">Таблица сравнений Javascript</a></code></li>\n</ul>\n</code>","titleAsText":"Когда же использовать Object.is ?"}}],"toc":[{"text":"Сравнение с использованием <code>==</code>","id":"сравнение_с_использованием"},{"text":"Строгое равенство с использованием <code>===</code>","id":"строгое_равенство_с_использованием"},{"text":"Равенство одинаковых величин","id":"равенство_одинаковых_величин"},{"text":"Спецификации для равенства, строгого равенства и равенства одинаковых величин","id":"спецификации_для_равенства_строгого_равенства_и_равенства_одинаковых_величин"},{"text":"<code>Как понимать все эти способы сравнения?</code>","id":"как_понимать_все_эти_способы_сравнения"},{"text":"<code>Когда же использовать <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> ?</code></code>","id":"когда_же_использовать_object.is"}],"summary":"\nJavaScript предоставляет три оператора сравнения величин:\n\n\n равенство (\"двойное равно\") использует ==,\n строгое равенство (или \"тройное равно\" или \"идентично\") использует ===,\n и Object.is (новшество из ECMAScript 6).\n\n\nВыбор оператора зависит от типа сравнения, которое необходимо произвести.\n","popularity":0.0031,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Equality comparisons and sameness","locale":"en-US","native":"English (US)"},{"title":"Comparadores de igualdad e identidad","locale":"es","native":"Español"},{"title":"Utiliser les différents tests d'égalité","locale":"fr","native":"Français"},{"title":"等価性の比較と同一性","locale":"ja","native":"日本語"},{"title":"동치 비교 및 동일성","locale":"ko","native":"한국어"},{"title":"Comparações de igualdade e uniformidade","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"JavaScript 中的相等性判断","locale":"zh-CN","native":"中文 (简体)"},{"title":"相等比較","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/javascript/equality_comparisons_and_sameness","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/javascript/equality_comparisons_and_sameness/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ru/docs/Web/JavaScript/Equality_comparisons_and_sameness","title":"Операторы сравнения"}],"pageTitle":"Операторы сравнения - JavaScript | MDN","noIndexing":false}}