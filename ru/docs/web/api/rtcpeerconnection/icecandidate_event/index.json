{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"RTCPeerConnection: icecandidate event","mdn_url":"/ru/docs/Web/API/RTCPeerConnection/icecandidate_event","locale":"ru","native":"Русский","sidebarHTML":"\n <ol>\n  <li><a href=\"/ru/docs/Web/API/WebRTC_API\"><strong>WebRTC API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Руководства по WebRTC</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/Architecture\">Архитектура WebRTC</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/WebRTC_Basics\">Основы WebRTC</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/Protocols\">Протоколы WebRTC</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/Connectivity\">Работа с подключением</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/Overview\">Обзор интерфейсов WebRTC</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/Session_lifetime\">Время жизни сессии WebRTC</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/Using_data_channels\">Using data channels</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Уроки по WebRTC</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/adapter.js\">Функциональная совместимость с adapter.js</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/Taking_still_photos\">Делаем фото с камеры</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/Simple_RTCDataChannel_sample\">Простой пример канала с данными</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs\">Building an internet-connected phone with Peer.js</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Интерфейсы</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/MediaStream\"><code>MediaStream</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamEvent\"><code>MediaStreamEvent</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/ru/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessageEvent\"><code>MessageEvent</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/ru/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ru/docs/MDN\">Документация:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Внести вклад</summary>\n      <ol>\n        <li><a href=\"/ru/docs/MDN\">Проект MDN</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<p>Событие <strong><code>icecandidate</code></strong> отправляется <a href=\"/ru/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> когда <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code> <small>(en-US)</small></a> был идентифицирован и добавлен к локальному клиенту (local peer) через вызов <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription\"><code>RTCPeerConnection.setLocalDescription()</code> <small>(en-US)</small></a>. Обработчик события должен передать кандидата удалённому клиенту (remote peer) по каналу сигнализации (signaling channel), чтобы удалённый клиент (remote peer) смог добавить его в свой набор удалённых кандидатов (remote candidates).</p>\n\n<table class=\"properties\">\n <tbody>\n  <tr>\n   <th scope=\"row\">Всплывает</th>\n   <td>Нет</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Отменяемое</th>\n   <td>Нет</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Интерфейс</th>\n   <td><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a></td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Название обработчика событий</th>\n   <td><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event\"><code>RTCPeerConnection.onicecandidate</code> <small>(en-US)</small></a></td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"описание","title":"Описание","isH3":false,"content":"<p>Существует три причины, по которым событие <code>icecandidate</code> происходит (fired) у <a href=\"/ru/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</p>"}},{"type":"prose","value":{"id":"делимся_sharing_новым_кандидатом","title":"Делимся (Sharing) новым кандидатом","isH3":true,"content":"<p>В основном события <code>icecandidate</code> происходят, чтобы указать, что новый кандидат был построен (gathered). Этого кандидата нужно доставить удалённому клиенту (remote peer) через канал сигнализации (signaling channel), которым управляет ваш код.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>rtcPeerConnection<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onicecandidate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">sendCandidateToRemotePeer</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* there are no more candidates coming during this negotiation */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Удалённый клиент (peer), получив кандидата, добавит этого кандидата в свой пул кандидатов, используя вызов <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/addIceCandidate\"><code>addIceCandidate()</code> <small>(en-US)</small></a>, передавая в <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent/candidate\"><code>candidate</code> <small>(en-US)</small></a> строку, которую вы передали с помощью сервера сигнализации (signaling server).</p>"}},{"type":"prose","value":{"id":"indicating_the_end_of_a_generation_of_candidates","title":"Indicating the end of a generation of candidates","isH3":true,"content":"<p>When an ICE negotiation session runs out of candidates to propose for a given <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code> <small>(en-US)</small></a>, it has completed gathering for a <strong>generation</strong> of candidates. That this has occurred is indicated by an <code>icecandidate</code> event whose <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent/candidate\"><code>candidate</code> <small>(en-US)</small></a> string is empty (<code>\"\"</code>).</p>\n\n<p>You should deliver this to the remote peer just like any standard candidate, as described under <a href=\"#sharing_a_new_candidate\">Sharing a new candidate</a> above. This ensures that the remote peer is given the end-of-candidates notification as well. As you see in the code in the previous section, every candidate is sent to the other peer, including any that might have an empty candidate string. Only candidates for which the event's <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent/candidate\"><code>candidate</code> <small>(en-US)</small></a> property is <code>null</code> are not forwarded across the signaling connection.</p>\n\n<p>The end-of-candidates indication is described in <a href=\"https://tools.ietf.org/html/draft-ietf-mmusic-trickle-ice-02#section-9.3\" class=\"external\" rel=\" noopener\">section 9.3 of the Trickle ICE draft specification</a> (note that the section number is subject to change as the specification goes through repeated drafts).</p>"}},{"type":"prose","value":{"id":"indicating_that_ice_gathering_is_complete","title":"Indicating that ICE gathering is complete","isH3":true,"content":"<p>Once all ICE transports have finished gathering candidates and the value of the <a href=\"/ru/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> object's <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/iceGatheringState\"><code>iceGatheringState</code> <small>(en-US)</small></a> has made the transition to <code>complete</code>, an <code>icecandidate</code> event is sent with the value of <code>complete</code> set to <code>null</code>.</p>\n\n<p>This signal exists for backward compatibility purposes and does <em>not</em> need to be delivered onward to the remote peer (which is why the code snippet above checks to see if <code>event.candidate</code> is <code>null</code> prior to sending the candidate along.</p>\n\n<p>If you need to perform any special actions when there are no further candidates expected, you're much better off watching the ICE gathering state by watching for <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\"><code>icegatheringstatechange</code> <small>(en-US)</small></a> events:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>pc<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"icegatheringstatechange\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">ev</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">.</span>iceGatheringState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"new\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">/* gathering is either just starting or has been reset */</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"gathering\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">/* gathering has begun or is ongoing */</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"complete\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">/* gathering has ended */</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>As you can see in this example, the <code>icegatheringstatechange</code> event lets you know when the value of the <a href=\"/ru/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> property <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/iceGatheringState\"><code>iceGatheringState</code> <small>(en-US)</small></a> has been updated. If that value is now <code>complete</code>, you know that ICE gathering has just ended.</p>\n\n<p>This is a more reliable approach than looking at the individual ICE messages for one indicating that the ICE session is finished.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>This example creates a simple handler for the <code>icecandidate</code> event that uses a function called <code>sendMessage()</code> to create and send a reply to the remote peer through the signaling server.</p>\n\n<p>First, an example using <a href=\"/ru/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>pc<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"icecandidate\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">ev</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"new-ice-candidate\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">candidate</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>candidate\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>You can also set the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event\"><code>onicecandidate</code> <small>(en-US)</small></a> event handler property directly:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>pc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onicecandidate</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">ev</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"new-ice-candidate\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">candidate</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>candidate\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Specification</th>\n   <th scope=\"col\">Status</th>\n   <th scope=\"col\">Comment</th>\n  </tr>\n  <tr>\n   <td><a href=\"https://w3c.github.io/webrtc-pc/#event-icecandidate\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">WebRTC 1.0: Real-time Communication Between Browsers<br><small lang=\"ru\">Определение 'icecandidate' в этой спецификации.</small></a></td>\n   <td><span class=\"spec-cr\">Кандидат в рекомендации</span></td>\n   <td></td>\n  </tr>\n </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCPeerConnection.icecandidate_event","dataURL":"/ru/docs/Web/API/RTCPeerConnection/icecandidate_event/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></li>\n <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Signaling_and_video_calling\">Signaling and video calling</a></li>\n</ul>"}}],"toc":[{"text":"Описание","id":"описание"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"Событие icecandidate отправляется RTCPeerConnection когда RTCIceCandidate (en-US) был идентифицирован и добавлен к локальному клиенту (local peer) через вызов RTCPeerConnection.setLocalDescription() (en-US). Обработчик события должен передать кандидата удалённому клиенту (remote peer) по каналу сигнализации (signaling channel), чтобы удалённый клиент (remote peer) смог добавить его в свой набор удалённых кандидатов (remote candidates).","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"RTCPeerConnection: icecandidate event","locale":"en-US","native":"English (US)"},{"title":"RTCPeerConnection.onicecandidate","locale":"ko","native":"한국어"},{"title":"RTCPeerConnection: icecandidate 事件","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/api/rtcpeerconnection/icecandidate_event","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/rtcpeerconnection/icecandidate_event/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/RTCPeerConnection","title":"Интерфейс RTCPeerConnection"},{"uri":"/ru/docs/Web/API/RTCPeerConnection/icecandidate_event","title":"RTCPeerConnection: icecandidate event"}],"pageTitle":"RTCPeerConnection: icecandidate event - Интерфейсы веб API | MDN","noIndexing":false}}