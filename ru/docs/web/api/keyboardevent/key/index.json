{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"KeyboardEvent.key","mdn_url":"/ru/docs/Web/API/KeyboardEvent/key","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Конструктор</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Свойства</summary><ol><li><a href=\"/ru/docs/Web/API/KeyboardEvent/altKey\"><code>altKey</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/charCode\"><code>charCode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/code\"><code>code</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/ctrlKey\"><code>ctrlKey</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/isComposing\"><code>isComposing</code> <small>(en-US)</small></a></li><li><em><code>key</code></em></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/keyCode\"><code>keyCode</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/keyIdentifier\"><code>keyIdentifier</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/location\"><code>location</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/metaKey\"><code>metaKey</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/repeat\"><code>repeat</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/shiftKey\"><code>shiftKey</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Методы</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/getModifierState\"><code>getModifierState()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>initKeyboardEvent()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>initKeyEvent()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Наследование:</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/UIEvent\"><code>UIEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p>Ключ события <a href=\"/ru/docs/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a> <code><strong>key</strong></code> доступен только для чтения, возвращает значение клавиши, нажатой пользователем, принимая во внимание состояние клавиш-модификаторов, таких как <kbd>Shift</kbd> , а также локаль и раскладку клавиатуры. Его значение определяется следующим образом:</p>\n\n<div class=\"moreinfo pull-aside\" id=\"sect1\">\n<h4 id=\"key_values\">Key values</h4>\n\n<p>See a full list of <a href=\"/ru/docs/Web/API/UI_Events/Keyboard_event_key_values\">key values</a>.</p>\n</div>\n\n<ul>\n <li>If the pressed key has a printed representation, the returned value is a non-empty Unicode character string containing the printable representation of the key.</li>\n <li>If the pressed key is a control or special character, the returned value is one of the <a href=\"/ru/docs/Web/API/UI_Events/Keyboard_event_key_values\">pre-defined key values</a>.</li>\n <li>If the <code>KeyboardEvent</code> represents the press of a dead key, the key value must be \"<code>Dead</code>\".</li>\n <li>Some specialty keyboard keys (such as the extended keys for controlling media on multimedia keyboards) don't generate key codes on Windows; instead, they trigger <code>WM_APPCOMMAND</code> events. These events get mapped to DOM keyboard events, and are listed among the \"Virtual key codes\" for Windows, even though they aren't actually key codes.</li>\n <li>If the key cannot be identified, the returned value is <code>\"Unidentified\"</code>.</li>\n</ul>"}},{"type":"prose","value":{"id":"keyboardevent_sequence","title":"KeyboardEvent sequence","isH3":false,"content":"<p>Every <code>KeyboardEvent</code> is fired in a pre-determined sequence. For a given key press, the sequence of <code>KeyboardEvent</code>s fired is as follows assuming that <a href=\"/ru/docs/Web/API/Event/preventDefault\"><code>Event.preventDefault</code></a> is not called:</p>\n\n<ol>\n <li>A <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> event is first fired. If the key is held down further and the key produces a character key, then the event continues to be emitted in a platform implementation dependent interval and the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/repeat\"><code>KeyboardEvent.repeat</code> <small>(en-US)</small></a> read only property  is set to <code>true</code>.</li>\n <li>If the key produces a character key that would result in a character being inserted into possibly an <a href=\"/ru/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code> <small>(en-US)</small></a> or an element with <a href=\"/ru/docs/Web/API/HTMLElement/contentEditable\"><code>HTMLElement.contentEditable</code></a> set to true, the <code><a href=\"/ru/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code> and <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code> event types are fired in that order. Note that some other implementations may fire <code><a href=\"/en-US/docs/Web/API/Element/keypress_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keypress (en-US)</a></code> event if supported. The events will be fired repeatedly while the key is held down.</li>\n <li>A <code><a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keyup (en-US)</a></code> event is fired once the key is released. This completes the process.</li>\n</ol>\n\n<p>In sequence 1 &amp; 3, the <code>KeyboardEvent.key</code> attribute is defined and is set appropriately to a value according to the rules defined ealier.</p>"}},{"type":"prose","value":{"id":"keyboardevent_sequence_example","title":"KeyboardEvent sequence example","isH3":false,"content":"<p>Consider the event sequence generated when we interact with the <kbd>Shift</kbd> and the <kbd>2</kbd> key using a U.S keyboard layout as compared to when we do so using a UK keyboard layout.</p>\n\n<p>Try experimenting using the following two test cases:</p>\n\n<ol>\n <li>Press and hold the <kbd>Shift</kbd> key, then press <kbd>2</kbd> and release it. Next, release the <kbd>Shift</kbd> key.</li>\n <li>Press and hold the <kbd>Shift</kbd> key, then press and hold <kbd>2</kbd>. Release the <kbd>Shift</kbd> key. Finally, release <kbd>2</kbd>.</li>\n</ol>"}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test-target<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test-target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-clear-console<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-clear-console<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>clear console<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flex<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>console-log<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"css","title":"CSS","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.fx</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">-webkit-display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> -20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> -20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.fx &gt; div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.fx &gt; div:first-child</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 30%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.flex</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">-webkit-flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#test-target</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> textarea <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test-target'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nconsoleLog <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console-log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nbtnClearConsole <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn-clear-console'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"console-log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> message <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keydown'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>repeat<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" pressed  [event: keydown]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span>\n    <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" repeating  [event: keydown]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'beforeinput'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" about to be input  [event: beforeinput]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" input  [event: input]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" released  [event: keyup]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbtnClearConsole<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> child <span class=\"token operator\">=</span> consoleLog<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   consoleLog<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   child <span class=\"token operator\">=</span> consoleLog<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"result","title":"Result","isH3":true,"content":"<p><iframe class=\"sample-code-frame\" title=\"KeyboardEvent sequence example sample\" id=\"frame_keyboardevent_sequence_example\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/KeyboardEvent/key/_sample_.keyboardevent_sequence_example.html\" loading=\"lazy\"></iframe></p>\n\n<div class=\"note notecard\" id=\"sect2\">\n<p><strong>Note:</strong> On browsers that don't fully implement the <a href=\"/ru/docs/Web/API/InputEvent\"><code>InputEvent</code></a> interface which is used for the <code><a href=\"/ru/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code> and <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code> events, you may get incorrect output on those lines of the log output.</p>\n</div>"}},{"type":"prose","value":{"id":"case_1","title":"Case 1","isH3":true,"content":"<p>When the shift key is pressed, a <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> event is first fired, and the <code>key</code> property value is set to the string <code>\"Shift\"</code>. As we keep holding this key, the <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> event does not continue to fire repeatedly because it does not produce a character key.</p>\n\n<p>When <code>key 2</code> is pressed, another <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> event is fired for this new key press, and the <code>key</code> property value for the event is set to the string <code>\"@\"</code> for the U.S keyboard type and <code>\"\"\"</code> for the UK keyboard type, because of the active modifier <code>shift</code> key. The <code><a href=\"/ru/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code> and <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code> events are fired next because a character key has been produced.</p>\n\n<p>As we release the <code>key 2</code>, a <code><a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keyup (en-US)</a></code> event is fired and the <code>key</code> property will maintain the string values <code>\"@\"</code> and <code>\"\"\"</code> for the different keyboard layouts respectively.</p>\n\n<p>As we finally release the <code>shift</code> key, another <code><a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keyup (en-US)</a></code> event is fired for it, and the key attribute value remains <code>\"Shift\"</code>.</p>"}},{"type":"prose","value":{"id":"case_2","title":"Case 2","isH3":true,"content":"<p>When the shift key is pressed, a <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> event is first fired, and the <code>key</code> property value is set to be the string <code>\"Shift\"</code>. As we keep holding this key, the keydown event does not continue to fire repeatedly because it produced no character key.</p>\n\n<p>When <code>key 2</code> is pressed, another <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> event is fired for this new key press, and the <code>key</code> property value for the event is set to be the string <code>\"@\"</code> for the U.S keyboard type and <code>\"\"\"</code> for the UK keyboard type, because of the active modifier <code>shift</code> key. The <code><a href=\"/ru/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code> and <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code> events are fired next because a character key has been produced. As we keep holding the key, the <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> event continues to fire repeatedly and the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/repeat\"><code>KeyboardEvent.repeat</code> <small>(en-US)</small></a>  property is set to <code>true</code>. The <code><a href=\"/ru/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code> and <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code> events are fired repeatedly as well.</p>\n\n<p>As we release the <code>shift</code> key, a <code><a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keyup (en-US)</a></code> event is fired for it, and the key attribute value remains <code>\"Shift\"</code>. At this point, notice that the <code>key</code> property value for the repeating keydown event of the <code>key 2</code> key press is now \"2\" because the modifier <code>shift</code> key is no longer active. The same goes for the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InputEvent/data\"><code>InputEvent.data</code> <small>(en-US)</small></a> property of the <code><a href=\"/ru/docs/Web/Reference/Events/beforeinput\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">beforeinput</a></code> and <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">input (en-US)</a></code> events.</p>\n\n<p>As we finally release the <code>key 2</code>, a <code><a href=\"/en-US/docs/Web/API/Element/keyup_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keyup (en-US)</a></code> event is fired but the <code>key</code> property will be set to the string value <code>\"2\"</code> for both keyboard layouts because the modifier <code>shift</code> key is no longer active.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>This example uses <a href=\"/ru/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a> to listen for <code><a href=\"/en-US/docs/Web/API/Element/keydown_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">keydown (en-US)</a></code> events. When they occur,  the key's value is checked to see if it's one of the keys the code is interested in, and if it is, it gets processed in some way (possibly by steering a spacecraft, perhaps by changing the selected cell in a spreadsheet).</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keydown\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>defaultPrevented<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Do nothing if the event was already processed</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Down\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// IE/Edge specific value</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowDown\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"down arrow\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Up\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// IE/Edge specific value</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowUp\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"up arrow\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Left\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// IE/Edge specific value</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowLeft\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"left arrow\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Right\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// IE/Edge specific value</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowRight\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"right arrow\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Enter\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"enter\" or \"return\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Esc\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// IE/Edge specific value</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Escape\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"esc\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Quit when this doesn't handle the key event.</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Cancel the default action to avoid it being handled twice</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"specification","title":"Specification","isH3":false,"content":"<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Specification</th>\n   <th scope=\"col\">Status</th>\n   <th scope=\"col\">Comment</th>\n  </tr>\n  <tr>\n   <td><a href=\"https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/#widl-KeyboardEvent-key\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Document Object Model (DOM) Level 3 Events Specification<br><small lang=\"ru\">Определение 'KeyboardEvent.key' в этой спецификации.</small></a></td>\n   <td><span class=\"spec-obsolete\">Устаревшая</span></td>\n   <td>Initial definition, included key values.</td>\n  </tr>\n  <tr>\n   <td><a href=\"https://w3c.github.io/uievents/#dom-keyboardevent-key\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">UI Events<br><small lang=\"ru\">Определение 'KeyboardEvent.key' в этой спецификации.</small></a></td>\n   <td><span class=\"spec-wd\">Рабочий черновик</span></td>\n   <td></td>\n  </tr>\n </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.KeyboardEvent.key","dataURL":"/ru/docs/Web/API/KeyboardEvent/key/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}}],"toc":[{"text":"KeyboardEvent sequence","id":"keyboardevent_sequence"},{"text":"KeyboardEvent sequence example","id":"keyboardevent_sequence_example"},{"text":"Example","id":"example"},{"text":"Specification","id":"specification"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"Ключ события KeyboardEvent key доступен только для чтения, возвращает значение клавиши, нажатой пользователем, принимая во внимание состояние клавиш-модификаторов, таких как Shift , а также локаль и раскладку клавиатуры. Его значение определяется следующим образом:","popularity":0.0008,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"KeyboardEvent.key","locale":"en-US","native":"English (US)"},{"title":"KeyboardEvent.key","locale":"fr","native":"Français"},{"title":"KeyboardEvent.key","locale":"ja","native":"日本語"},{"title":"KeyboardEvent.key","locale":"ko","native":"한국어"},{"title":"KeyboardEvent.key","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/api/keyboardevent/key","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/keyboardevent/key/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/KeyboardEvent","title":"KeyboardEvent"},{"uri":"/ru/docs/Web/API/KeyboardEvent/key","title":"KeyboardEvent.key"}],"pageTitle":"KeyboardEvent.key - Интерфейсы веб API | MDN","noIndexing":false}}