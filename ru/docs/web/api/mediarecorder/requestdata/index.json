{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"MediaRecorder.requestData()","mdn_url":"/ru/docs/Web/API/MediaRecorder/requestData","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/MediaStream_Recording_API\">MediaStream Recording API</a></strong></li><li><strong><a href=\"/ru/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Конструктор</summary><ol><li><a href=\"/ru/docs/Web/API/MediaRecorder/MediaRecorder\"><code>MediaRecorder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Свойства</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/audioBitsPerSecond\"><code>audioBitsPerSecond</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/mimeType\"><code>mimeType</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/warning_event\"><code>onwarning</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/MediaRecorder/state\"><code>state</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stream\"><code>stream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond\"><code>videoBitsPerSecond</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Методы</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/isTypeSupported\"><code>isTypeSupported()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/pause\"><code>pause()</code> <small>(en-US)</small></a></li><li><em><code>requestData()</code></em></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/resume\"><code>resume()</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/MediaRecorder/start\"><code>start()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop\"><code>stop()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>События</summary><ol><li><a href=\"/ru/docs/Web/API/MediaRecorder/dataavailable_event\"><code>dataavailable</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/error_event\"><code>error</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/pause_event\"><code>pause</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/resume_event\"><code>resume</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/start_event\"><code>start</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop_event\"><code>stop</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Наследование:</summary><ol><li><a href=\"/ru/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Похожие страницы для MediaStream Recording</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BlobEvent\"><code>BlobEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorderErrorEvent\"><code>MediaRecorderErrorEvent</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p>Метод <strong><code>MediaRecorder.requestData()</code></strong> (часть <a href=\"/en-US/docs/Web/API/MediaStream_Recording_API\">MediaRecorder API</a>) используется, чтобы поднять <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>dataavailable</code></a> событие содержащее <a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a> объект захваченных медиа-данных как это было когда метод был вызван. This can then be grabbed и манипулировать как необходимо.</p>\n\n<p>When the <code>requestData()</code> method is invoked, the browser queues a task that runs the following steps:</p>\n\n<ol>\n <li>If <a href=\"/ru/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> is not \"recording\", raise a DOM <code>InvalidState</code> error and terminate these steps. If <a href=\"/ru/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> is \"recording\", continue to the next step.</li>\n <li>Raise a <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>dataavailable</code></a> event containing a <a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a> of the currently captured data (the Blob is available under the event's <code>data</code> attribute.)</li>\n <li>Create a new Blob and place subsequently captured data into it.</li>\n</ol>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<pre class=\"syntaxbox notranslate\">MediaRecorder.requestData()</pre>"}},{"type":"prose","value":{"id":"errors","title":"Errors","isH3":true,"content":"<p>An <code>InvalidState</code> error is raised if the <code>requestData()</code> method is called while the <code>MediaRecorder</code> object’s <a href=\"/ru/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> is not \"recording\" — the media cannot be captured if recording is not occurring.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">...</span>\n\n  captureMedia<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    mediaRecorder<span class=\"token punctuation\">.</span><span class=\"token function\">requestData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// makes snapshot available of data so far</span>\n    <span class=\"token comment\">// ondataavailable fires, then capturing continues</span>\n    <span class=\"token comment\">// in new Blob</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">...</span></code></pre></div>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Specification</th>\n   <th scope=\"col\">Status</th>\n   <th scope=\"col\">Comment</th>\n  </tr>\n  <tr>\n   <td><a href=\"https://w3c.github.io/mediacapture-record/#widl-MediaRecorder-requestData-void\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">MediaStream Recording<br><small lang=\"ru\">Определение 'MediaRecorder.requestData()' в этой спецификации.</small></a></td>\n   <td><span class=\"spec-wd\">Рабочий черновик</span></td>\n   <td>Initial definition</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaRecorder.requestData","dataURL":"/ru/docs/Web/API/MediaRecorder/requestData/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\">Using the MediaRecorder API</a></li>\n <li><a href=\"https://mdn.github.io/web-dictaphone/\" class=\"external\" rel=\" noopener\">Web Dictaphone</a>: MediaRecorder + getUserMedia + Web Audio API visualization demo, by <a href=\"https://twitter.com/chrisdavidmills\" class=\"external\" rel=\" noopener\">Chris Mills</a> (<a href=\"https://github.com/mdn/web-dictaphone/\" class=\"external\" rel=\" noopener\">source on Github</a>.)</li>\n <li><a href=\"https://simpl.info/mediarecorder/\" class=\"external\" rel=\" noopener\">simpl.info MediaStream Recording demo</a>, by <a href=\"https://twitter.com/sw12\" class=\"external\" rel=\" noopener\">Sam Dutton</a>.</li>\n <li><a href=\"/ru/docs/Web/API/Navigator/getUserMedia\"><code>Navigator.getUserMedia</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"Метод MediaRecorder.requestData() (часть MediaRecorder API) используется, чтобы поднять dataavailable событие содержащее Blob объект захваченных медиа-данных как это было когда метод был вызван. This can then be grabbed и манипулировать как необходимо.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MediaRecorder.requestData()","locale":"en-US","native":"English (US)"},{"title":"MediaRecorder.requestData()","locale":"ja","native":"日本語"}],"source":{"folder":"ru/web/api/mediarecorder/requestdata","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/mediarecorder/requestdata/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/MediaRecorder","title":"MediaRecorder"},{"uri":"/ru/docs/Web/API/MediaRecorder/requestData","title":"MediaRecorder.requestData()"}],"pageTitle":"MediaRecorder.requestData() - Интерфейсы веб API | MDN","noIndexing":false}}