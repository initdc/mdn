{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"MediaRecorder.start()","mdn_url":"/ru/docs/Web/API/MediaRecorder/start","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\">Media Recorder API</a></strong></li><li><strong><a href=\"/ru/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Конструктор</summary><ol><li><a href=\"/ru/docs/Web/API/MediaRecorder/MediaRecorder\"><code>MediaRecorder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Свойства</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/audioBitsPerSecond\"><code>audioBitsPerSecond</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/mimeType\"><code>mimeType</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/warning_event\"><code>onwarning</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/MediaRecorder/state\"><code>state</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stream\"><code>stream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond\"><code>videoBitsPerSecond</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Методы</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/isTypeSupported\"><code>isTypeSupported()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/pause\"><code>pause()</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/MediaRecorder/requestData\"><code>requestData()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/resume\"><code>resume()</code> <small>(en-US)</small></a></li><li><em><code>start()</code></em></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop\"><code>stop()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>События</summary><ol><li><a href=\"/ru/docs/Web/API/MediaRecorder/dataavailable_event\"><code>dataavailable</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/error_event\"><code>error</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/pause_event\"><code>pause</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/resume_event\"><code>resume</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/start_event\"><code>start</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop_event\"><code>stop</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Наследование:</summary><ol><li><a href=\"/ru/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Похожие страницы для Media Recorder API</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BlobEvent\"><code>BlobEvent</code> <small>(en-US)</small></a></li><li><a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>window.MediaRecorder</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<p>Метод <strong><code>MediaRecorder.start()</code></strong> (часть <a href=\"/en-US/docs/Web/API/MediaStream_Recording_API\">MediaRecorder API</a>) используется для начала захвата медиа <a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a>.</p>\n\n<p>When the <code>start()</code> method is invoked, the UA queues a task that runs the following steps:</p>\n\n<ol>\n <li>If the <a href=\"/ru/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> is not \"inactive\", raise a DOM <code>InvalidState</code> error and terminate these steps. if the <a href=\"/ru/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> is \"inactive\", continue on to the next step.</li>\n <li>Set the <a href=\"/ru/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> to \"recording\" and wait until media becomes available from the <code>stream</code> passed into <a href=\"/ru/docs/Web/API/Navigator/getUserMedia\"><code>Navigator.getUserMedia</code></a>.</li>\n <li>Once data becomes available, raise a <a href=\"/ru/docs/Web/API/MediaRecorder/start\" aria-current=\"page\"><code>MediaRecorder.start</code></a> event and start gathering the data into a <a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a> (see <a href=\"https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/MediaRecorder.html#bib-FILE-API\" class=\"external\" rel=\" noopener\">FILE-API</a>).</li>\n <li>If the <code>timeSlice</code> argument has been provided, once that many milliseconds of data have been collected — or a minimum time slice imposed by the UA, whichever is greater — raise a <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>MediaRecorder.dataavailable</code></a> event containing the Blob of collected data, and start gathering a new Blob of data. If <code>timeSlice</code> has not been provided, continue gathering data into the original Blob.</li>\n <li>When the <code>stream</code> is ended, set <a href=\"/ru/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> to \"inactive\" and stop gathering data.</li>\n <li>Raise a <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>MediaRecorder.dataavailable</code></a> event containing the Blob of data.</li>\n <li>Raise a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop\"><code>MediaRecorder.stop</code> <small>(en-US)</small></a> event.</li>\n</ol>\n\n<div class=\"note notecard\" id=\"sect2\">\n<p><strong>Note</strong>: If the browser is unable to start recording or continue recording, it<em> will</em> raise a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code> <small>(en-US)</small></a> event, followed by a <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>MediaRecorder.dataavailable</code></a> event containing the Blob it has gathered, followed by the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop\"><code>MediaRecorder.stop</code> <small>(en-US)</small></a> event.</p>\n</div>"}},{"type":"prose","value":{"id":"синтаксис","title":"Синтаксис","isH3":false,"content":"<pre class=\"syntaxbox notranslate\">MediaRecorder.start(timeslice)</pre>"}},{"type":"prose","value":{"id":"параметры","title":"Параметры","isH3":true,"content":"<dl>\n <dt id=\"timeslice\"><code>timeslice</code> <span class=\"badge inline optional\">Необязательный</span></dt>\n <dd>Этот параметр принимает значение в миллисекундах, и переопределяет длину куска захвата медиа для возвращения в каждом Blob. Если не указан, то все медиа данные будут занесены в один Blob, только если не был вызван метод <a href=\"/ru/docs/Web/API/MediaRecorder/requestData\"><code>MediaRecorder.requestData</code></a>.</dd>\n</dl>"}},{"type":"prose","value":{"id":"ошибки","title":"Ошибки","isH3":true,"content":"<p>An <code>InvalidState</code> error is raised if the <code>start()</code> method is called while the <code>MediaRecorder</code> object’s <a href=\"/ru/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> is not \"inactive\" — it makes no sense to start media capture if it is already happening.</p>"}},{"type":"prose","value":{"id":"пример","title":"Пример","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">...</span>\n\n  record<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    mediaRecorder<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"рекордер запущен\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">...</span></code></pre></div>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Specification</th>\n   <th scope=\"col\">Status</th>\n   <th scope=\"col\">Comment</th>\n  </tr>\n  <tr>\n   <td><a href=\"https://w3c.github.io/mediacapture-record/#widl-MediaRecorder-start-void-long-timeslice\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">MediaStream Recording<br><small lang=\"ru\">Определение 'MediaRecorder.start()' в этой спецификации.</small></a></td>\n   <td><span class=\"spec-wd\">Рабочий черновик</span></td>\n   <td>Initial definition</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Совместимость с браузерами","id":"совместимость_с_браузерами","isH3":false,"query":"api.MediaRecorder.start","dataURL":"/ru/docs/Web/API/MediaRecorder/start/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Использование MediaRecorder API (en-US)</a></li>\n <li><a href=\"https://mdn.github.io/web-dictaphone/\" class=\"external\" rel=\" noopener\">Веб-диктофон</a>: MediaRecorder + getUserMedia + Web Audio API от <a href=\"https://twitter.com/chrisdavidmills\" class=\"external\" rel=\" noopener\">Chris Mills</a> (<a href=\"https://github.com/mdn/web-dictaphone/\" class=\"external\" rel=\" noopener\">исходники на Github</a>.)</li>\n <li><a href=\"https://simpl.info/mediarecorder/\" class=\"external\" rel=\" noopener\">simpl.info Пример использования MediaStream</a> от <a href=\"https://twitter.com/sw12\" class=\"external\" rel=\" noopener\">Sam Dutton</a>.</li>\n <li><a href=\"/ru/docs/Web/API/Navigator/getUserMedia\"><code>Navigator.getUserMedia</code></a></li>\n</ul>"}}],"toc":[{"text":"Синтаксис","id":"синтаксис"},{"text":"Пример","id":"пример"},{"text":"Specifications","id":"specifications"},{"text":"Совместимость с браузерами","id":"совместимость_с_браузерами"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"Метод MediaRecorder.start() (часть MediaRecorder API) используется для начала захвата медиа Blob.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MediaRecorder.start()","locale":"en-US","native":"English (US)"},{"title":"MediaRecorder.start()","locale":"ja","native":"日本語"}],"source":{"folder":"ru/web/api/mediarecorder/start","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/mediarecorder/start/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/MediaRecorder","title":"MediaRecorder"},{"uri":"/ru/docs/Web/API/MediaRecorder/start","title":"MediaRecorder.start()"}],"pageTitle":"MediaRecorder.start() - Интерфейсы веб API | MDN","noIndexing":false}}