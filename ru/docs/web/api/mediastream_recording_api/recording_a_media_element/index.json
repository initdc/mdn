{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Запись медиа элемента","mdn_url":"/ru/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/MediaStream_Recording_API\">MediaStream Recording API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Руководства</summary><ol><li><a href=\"/ru/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\">Using the MediaStream Recording API</a></li><li><a href=\"/ru/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element\">Recording a media element</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Интерфейсы</summary><ol><li><a href=\"/ru/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a></li><li><a href=\"/ru/docs/Web/API/MediaRecorderErrorEvent\"><code>MediaRecorderErrorEvent</code></a></li><li><a href=\"/ru/docs/Web/API/BlobEvent\"><code>BlobEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":"html_содержимое","title":"HTML содержимое","isH3":false,"content":"<div id=\"sect1\"></div>\n\n<p>В статье Использование интерфейса MediaStream Recording API демонстрируется использование объекта типа <a href=\"/ru/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a> для захвата потока, представляющего объект типа <a href=\"/ru/docs/Web/API/MediaStream\"><code>MediaStream</code></a> , сгенерированного аппаратными средствами устройства и возвращаемого методом <a href=\"/ru/docs/Web/API/MediaDevices/getUserMedia\" title=\"navigator.mediaDevices.getUserMedia()\"><code>navigator.mediaDevices.getUserMedia()</code></a>, но можно также использовать HTML медиа элемент (а именно <a href=\"/ru/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> или <a href=\"/ru/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>)  в качестве источника потока <code>MediaStream</code> для его записи. В этой статье рассматривается пример выполняющий это.</p>\n\n<div id=\"example\">\n\n\n\n\n<p>Рассмотрим ключевые моменты кода  HTML. Это только небольшой отрывок, относящийся к информационной части приложения.</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>startButton<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    Start\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>Preview<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>preview<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>160<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>120<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoplay</span> <span class=\"token attr-name\">muted</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n\n<p>Основной интерфейс представляется в двух колонках. В левой находиться кнопка старта и элемент <a href=\"/ru/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> , который отображает предварительный просмотр видео. Это видео, воспроизводится камерой устройства. Заметьте, что используется атрибут <a href=\"/ru/docs/Web/HTML/Element/video#attr-autoplay\"><code>autoplay</code></a>, что бы поток начал воспроизводиться немедленно, снимаясь прямо  с камеры. Атрибут <a href=\"/ru/docs/Web/HTML/Element/video#attr-muted\"><code>muted</code></a> гарантирует отключение звука с микрофона, для предотвращения цикличного эхо эффекта.</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stopButton<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    Stop\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>Recording<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>recording<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>160<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>120<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>downloadButton<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    Download\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n\n<p>Справа мы видим кнопку остановки и элемент <code>&lt;video&gt;,</code> который будет использоваться для воспроизведения записанного видео. Обратите внимание, что на панели воспроизведения не установлен режим автозапуска (поэтому воспроизведение не начинается сразу после поступления мультимедиа), а также установлен атрибут <a href=\"/ru/docs/Web/HTML/Element/video#attr-controls\"><code>controls</code></a>, что говорит о необходимости показывать пользовательские элементы управления для воспроизведения, паузы и т. д.</p>\n\n<p>Под элементом воспроизведения находится кнопка для загрузки записанного видео.</p>\n\n\n\n<h2 id=\"javascript\">JavaScript</h2>\n\n<p>Теперь давайте посмотрим на код JavaScript</p>\n\n<h3 id=\"установка_глобальных_переменных\">Установка глобальных переменных</h3>\n\n<p>Мы начнём с установления некоторых глобальных переменных, которые нам понадобятся.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> preview <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"preview\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> recording <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"recording\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> startButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"startButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> stopButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stopButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> downloadButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"downloadButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> logElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> recordingTimeMS <span class=\"token operator\">=</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Большинство из них являются ссылками на элементы, с которыми нам нужно работать. Последняя, <code>recordingTimeMS</code>, установлена на 5000 миллисекунд (5 секунд);.</p>\n\n<h3 id=\"используемые_функции\">Используемые функции</h3>\n\n<p>Далее мы создадим несколько служебных функций, которые будут использованы позже.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  logElement<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Функция<code> log ()</code> используется для вывода текстовых строк в <a href=\"/ru/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a>, чтобы мы могли делиться информацией с пользователем.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">delayInMS</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> delayInMS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>The <code>wait()</code> function returns a new <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves once the specified number of milliseconds have elapsed. It works by using an <a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">arrow function</a> which calls <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/setTimeout\"><code>window.setTimeout()</code> <small>(en-US)</small></a>, specifying the promise's resolution handler as the timeout handler function. That lets us use promise syntax when using timeouts, which can be very handy when chaining promises, as we'll see later.</p>\n\n<h3 id=\"starting_media_recording\">Starting media recording</h3>\n\n<p>The <code>startRecording()</code> function handles starting the recording process:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">startRecording</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream<span class=\"token punctuation\">,</span> lengthInMS</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> recorder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaRecorder</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  recorder<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondataavailable</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  recorder<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>recorder<span class=\"token punctuation\">.</span>state <span class=\"token operator\">+</span> <span class=\"token string\">\" for \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>lengthInMS<span class=\"token operator\">/</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" seconds...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> stopped <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    recorder<span class=\"token punctuation\">.</span>onstop <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">;</span>\n    recorder<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> recorded <span class=\"token operator\">=</span> <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>lengthInMS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> recorder<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> <span class=\"token string\">\"recording\"</span> <span class=\"token operator\">&amp;&amp;</span> recorder<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    stopped<span class=\"token punctuation\">,</span>\n    recorded\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p><code>startRecording()</code> takes two input parameters: a <a href=\"/ru/docs/Web/API/MediaStream\"><code>MediaStream</code></a> to record from and the length in milliseconds of the recording to make. We always record no more than the specified number of milliseconds of media, although if the media stops before that time is reached, <a href=\"/ru/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a> automatically stops recording as well.</p>\n\n<dl>\n <dt id=\"line_2\">Line 2</dt>\n <dd>Creates the <code>MediaRecorder</code> that will handle recording the input <code>stream</code>.</dd>\n <dt id=\"line_3\">Line 3</dt>\n <dd>Creates an empty array, <code>data</code>, which will be used to hold the <a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a>s of media data provided to our <a href=\"/ru/docs/Web/API/MediaRecorder/dataavailable_event\" title=\"ondataavailable\"><code>ondataavailable</code></a> event handler.</dd>\n <dt id=\"line_5\">Line 5</dt>\n <dd>Sets up the handler for the <code><a href=\"/ru/docs/Web/Reference/Events/dataavailable\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">dataavailable</a></code> event. The received event's <code>data</code> property is a <a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a> that contains the media data. The event handler simply pushes the <code>Blob</code> onto the <code>data</code> array.</dd>\n <dt id=\"lines_6-7\">Lines 6-7</dt>\n <dd>Starts the recording process by calling <a href=\"/ru/docs/Web/API/MediaRecorder/start\" title=\"recorder.start()\"><code>recorder.start()</code></a>, and outputs a message to the log with the updated state of the recorder and the number of seconds it will be recording.</dd>\n <dt id=\"lines_9-12\">Lines 9-12</dt>\n <dd>Creates a new <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, named <code>stopped</code>, which is resolved when the <code>MediaRecorder</code>'s <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/stop_event\"><code>onstop</code> <small>(en-US)</small></a> event handler is called, and is rejected if its <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/error_event\"><code>onerror</code> <small>(en-US)</small></a> event handler is called. The rejection handler receives as input the name of the error that occurred.</dd>\n <dt id=\"lines_14-16\">Lines 14-16</dt>\n <dd>Creates a new <code>Promise</code>, named <code>recorded</code>, which is resolved when the specified number of milliseconds have elapsed. Upon resolution, it stops the <code>MediaRecorder</code> if it's recording.</dd>\n <dt id=\"lines_18-22\">Lines 18-22</dt>\n <dd>These lines create a new <code>Promise</code> which is fulfilled when both of the two <code>Promise</code>s (<code>stopped</code> and <code>recorded</code>) have resolved. Once that resolves, the array data is returned by <code>startRecording()</code> to its caller.</dd>\n</dl>\n\n<h3 id=\"stopping_the_input_stream\">Stopping the input stream</h3>\n\n<p>The <code>stop()</code> function simply stops the input media:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  stream<span class=\"token punctuation\">.</span><span class=\"token function\">getTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">track</span> <span class=\"token operator\">=&gt;</span> track<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>This works by calling <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStream/getTracks\"><code>MediaStream.getTracks()</code> <small>(en-US)</small></a>, using <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>forEach()</code></a> to call <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/stop\"><code>MediaStreamTrack.stop()</code> <small>(en-US)</small></a> on each track in the stream.</p>\n\n<h3 id=\"getting_an_input_stream_and_setting_up_the_recorder\">Getting an input stream and setting up the recorder</h3>\n\n<p>Now let's look at the most intricate piece of code in this example: our event handler for clicks on the start button:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>startButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    preview<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">;</span>\n    downloadButton<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">;</span>\n    preview<span class=\"token punctuation\">.</span>captureStream <span class=\"token operator\">=</span> preview<span class=\"token punctuation\">.</span>captureStream <span class=\"token operator\">||</span> preview<span class=\"token punctuation\">.</span>mozCaptureStream<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=&gt;</span> preview<span class=\"token punctuation\">.</span>onplaying <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">startRecording</span><span class=\"token punctuation\">(</span>preview<span class=\"token punctuation\">.</span><span class=\"token function\">captureStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> recordingTimeMS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">recordedChunks</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> recordedBlob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span>recordedChunks<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"video/webm\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    recording<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>recordedBlob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    downloadButton<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> recording<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">;</span>\n    downloadButton<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> <span class=\"token string\">\"RecordedVideo.webm\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Successfully recorded \"</span> <span class=\"token operator\">+</span> recordedBlob<span class=\"token punctuation\">.</span>size <span class=\"token operator\">+</span> <span class=\"token string\">\" bytes of \"</span> <span class=\"token operator\">+</span>\n        recordedBlob<span class=\"token punctuation\">.</span>type <span class=\"token operator\">+</span> <span class=\"token string\">\" media.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>When a <code><a href=\"/en-US/docs/Web/API/Element/click_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">click (en-US)</a></code> event occurs, here's what happens:</p>\n\n<dl>\n <dt id=\"lines_2-4\">Lines 2-4</dt>\n <dd><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>navigator.mediaDevices.getUserMedia()</code> <small>(en-US)</small></a> is called to request a new <a href=\"/ru/docs/Web/API/MediaStream\"><code>MediaStream</code></a> that has both video and audio tracks. This is the stream we'll record.</dd>\n <dt id=\"lines_5-9\">Lines 5-9</dt>\n <dd>When the Promise returned by <code>getUserMedia()</code> is resolved, the preview <a href=\"/ru/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element's <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLMediaElement/srcObject\"><code>srcObject</code> <small>(en-US)</small></a> property is set to be the input stream, which causes the video being captured by the user's camera to be displayed in the preview box. Since the <code>&lt;video&gt;</code> element is muted, the audio won't play. The \"Download\" button's link is then set to refer to the stream as well. Then, in line 8, we arrange for <code>preview.captureStream()</code> to call <code>preview.mozCaptureStream()</code> so that our code will work on Firefox, on which the <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>MediaRecorder.captureStream()</code></a> method is prefixed. Then a new <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves when the preview video starts to play is created and returned.</dd>\n <dt id=\"line_10\">Line 10</dt>\n <dd>When the preview video begins to play, we know there's media to record, so we respond by calling the <code><a href=\"#starting_media_recording\">startRecording()</a></code> function we created earlier, passing in the preview video stream (as the source media to be recorded) and <code>recordingTimeMS</code> as the number of milliseconds of media to record. As mentioned before, <code>startRecording()</code> returns a <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> whose resolution handler is called (receiving as input an array of <a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a> objects containing the chunks of recorded media data) once recording has completed.</dd>\n <dt id=\"lines_11-15\">Lines 11-15</dt>\n <dd>The recording process's resolution handler receives as input an array of media data <code>Blob</code>s locally known as <code>recordedChunks</code>. The first thing we do is merge the chunks into a single <a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a> whose MIME type is <code>\"video/webm\"</code> by taking advantage of the fact that the <a href=\"/ru/docs/Web/API/Blob/Blob\" title=\"Blob()\"><code>Blob()</code></a> constructor concatenates arrays of objects into one object. Then <a href=\"/ru/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a> is used to create an URL that references the blob; this is then made the value of the recorded video playback element's <a href=\"/ru/docs/Web/HTML/Element/video#attr-src\"><code>src</code></a> attribute (so that you can play the video from the blob) as well as the target of the download button's link.\n <p>Then the download button's <a href=\"/ru/docs/Web/HTML/Element/A#attr-download\"><code>download</code></a> attribute is set. While the <code>download</code> attribute can be a Boolean, you can also set it to a string to use as the name for the downloaded file. So by setting the download link's <code>download</code> attribute to \"RecordedVideo.webm\", we tell the browser that clicking the button should download a file named <code>\"RecordedVideo.webm\"</code> whose contents are the recorded video.</p>\n </dd>\n <dt id=\"lines_17-18\">Lines 17-18</dt>\n <dd>The size and type of the recorded media are output to the log area below the two videos and the download button.</dd>\n <dt id=\"line_20\">Line 20</dt>\n <dd>The <code>catch()</code> for all the <code>Promise</code>s outputs the error to the logging area by calling our <code>log()</code> function.</dd>\n</dl>\n\n<h3 id=\"handling_the_stop_button\">Handling the stop button</h3>\n\n<p>The last bit of code adds a handler for the <code><a href=\"/en-US/docs/Web/API/Element/click_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">click (en-US)</a></code> event on the stop button using <a href=\"/ru/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>stopButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span>preview<span class=\"token punctuation\">.</span>srcObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>This simply calls the <code><a href=\"#stopping_the_input_stream\">stop()</a></code> function we covered earlier.</p>\n</div>"}},{"type":"prose","value":{"id":"result","title":"Result","isH3":false,"content":"<p>When put all together with the rest of the HTML and the CSS not shown above, it looks and works like this:</p>\n\n<p><iframe class=\"sample-code-frame\" title=\"Example sample\" id=\"frame_example\" width=\"600\" height=\"440\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element/_sample_.example.html\" allow=\"camera;microphone\" loading=\"lazy\"></iframe></p>\n\n<p>You can <a href=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element/_sample_.Example.html\" class=\"external\" rel=\" noopener\">take a look at all the code</a>, including the parts hidden above because they aren't critical to the explanation of how the APIs are being used.</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/MediaStream_Recording_API\">MediaStream Recording API</a></li>\n <li><a href=\"/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\">Using the MediaStream Recording API</a></li>\n <li><a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API\">Media Capture and Streams API</a></li>\n</ul>"}}],"toc":[{"text":"HTML содержимое","id":"html_содержимое"},{"text":"Result","id":"result"},{"text":"See also","id":"see_also"}],"summary":"В статье Использование интерфейса MediaStream Recording API демонстрируется использование объекта типа MediaRecorder для захвата потока, представляющего объект типа MediaStream , сгенерированного аппаратными средствами устройства и возвращаемого методом navigator.mediaDevices.getUserMedia(), но можно также использовать HTML медиа элемент (а именно <audio> или <video>)  в качестве источника потока MediaStream для его записи. В этой статье рассматривается пример выполняющий это.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Recording a media element","locale":"en-US","native":"English (US)"},{"title":"メディア要素の記録","locale":"ja","native":"日本語"}],"source":{"folder":"ru/web/api/mediastream_recording_api/recording_a_media_element","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/mediastream_recording_api/recording_a_media_element/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/MediaStream_Recording_API","title":"MediaStream Recording API"},{"uri":"/ru/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element","title":"Запись медиа элемента"}],"pageTitle":"Запись медиа элемента - Интерфейсы веб API | MDN","noIndexing":false}}