{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Clients.openWindow()","mdn_url":"/ru/docs/Web/API/Clients/openWindow","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/ru/docs/Web/API/Clients\"><code>Clients</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Методы</summary><ol><li><a href=\"/ru/docs/Web/API/Clients/claim\"><code>claim()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Clients/get\"><code>get()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Clients/matchAll\"><code>matchAll()</code> <small>(en-US)</small></a></li><li><em><code>openWindow()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Похожие страницы для Service Workers API</summary><ol><li><a href=\"/ru/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/ru/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Client\"><code>Client</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/ru/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ru/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<p>Метод <strong><code>openWindow()</code></strong> интерфейса <a href=\"/ru/docs/Web/API/Clients\"><code>Clients</code></a> создаёт новый контекст просмотра верхнего уровня и загружает заданный URL. Если вызывающий скрипт не имеет разрешения на отображение всплывающих окон, <code>openWindow()</code> выдаст <code>InvalidAccessError</code>.</p>\n\n<p>В Firefox этому методу разрешено отображать всплывающие окна только при вызове события клике по уведомлению.</p>\n\n<p>В Chrome для Android этот метод может открыть URL-адрес в существующем контексте просмотра, предоставляемым автономным веб-приложением (<a href=\"/en-US/docs/Web/Progressive_web_apps\">standalone web app</a>), ранее добавленным на главный экран пользователя. С недавнего времени это также работает в Chrome для Windows.</p>"}},{"type":"prose","value":{"id":"синтаксис","title":"Синтаксис","isH3":false,"content":"<pre class=\"syntaxbox notranslate\">self.clients.openWindow(<em>url</em>).then(function(<em>windowClient</em>) {\n  // Do something with your WindowClient\n});</pre>"}},{"type":"prose","value":{"id":"параметры","title":"Параметры","isH3":true,"content":"<dl>\n <dt id=\"url\"><code>url</code></dt>\n <dd><a href=\"/ru/docs/conflicting/Web/JavaScript/Reference/Global_Objects/String_9094f63a1f7efd350dd69d6a8ae174fb\"><code>USVString</code></a> - URL-адрес клиента, который вы хотите открыть. Обычно это значение должно быть URL из того же источника, что и вызывающий скрипт.</dd>\n</dl>"}},{"type":"prose","value":{"id":"возвращаемое_значение","title":"Возвращаемое значение","isH3":true,"content":"<p><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, который преобразуется в объект <a href=\"/ru/docs/Web/API/WindowClient\"><code>WindowClient</code></a>, если URL-адрес исходит из того же источника, что и сервис-воркер, иначе <a href=\"/ru/docs/Glossary/Null\">null value</a> .</p>"}},{"type":"prose","value":{"id":"примеры","title":"Примеры","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Отправить уведомление в OS, если возможно</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>Notification<span class=\"token punctuation\">.</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> notificationObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">'Click here to view your messages.'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> self<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>origin <span class=\"token operator\">+</span> <span class=\"token string\">'/some/path'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// data: { url: 'http://example.com' },</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  self<span class=\"token punctuation\">.</span>registration<span class=\"token punctuation\">.</span><span class=\"token function\">showNotification</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You\\'ve got messages!'</span><span class=\"token punctuation\">,</span> notificationObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Обработчик события клика по уведомлению</span>\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'notificationclick'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Закрываем всплывающее окно с уведомлением</span>\n  e<span class=\"token punctuation\">.</span>notification<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Получите все клиенты Windows</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span>clients<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'window'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">clientsArr</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Если вкладка, соответствующая целевому URL-адресу, уже существует, сфокусируйтесь на ней;</span>\n    <span class=\"token keyword\">const</span> hadWindowToFocus <span class=\"token operator\">=</span> clientsArr<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">windowClient</span> <span class=\"token operator\">=&gt;</span> windowClient<span class=\"token punctuation\">.</span>url <span class=\"token operator\">===</span> e<span class=\"token punctuation\">.</span>notification<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>url <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>windowClient<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// В противном случае откройте новую вкладку для соответствующего URL-адреса и сфокусируйте её.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hadWindowToFocus<span class=\"token punctuation\">)</span> clients<span class=\"token punctuation\">.</span><span class=\"token function\">openWindow</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>notification<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">windowClient</span> <span class=\"token operator\">=&gt;</span> windowClient <span class=\"token operator\">?</span> windowClient<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Спецификации","id":"спецификации","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#clients-openwindow","title":"Service Workers 1"}],"query":"api.Clients.openWindow"}},{"type":"browser_compatibility","value":{"title":"Совместимость с браузером","id":"совместимость_с_браузером","isH3":false,"query":"api.Clients.openWindow","dataURL":"/ru/docs/Web/API/Clients/openWindow/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect3\">\n\n\n<p></p><p></p>\n</div>"}}],"toc":[{"text":"Синтаксис","id":"синтаксис"},{"text":"Примеры","id":"примеры"},{"text":"Спецификации","id":"спецификации"},{"text":"Совместимость с браузером","id":"совместимость_с_браузером"}],"summary":"Метод openWindow() интерфейса Clients создаёт новый контекст просмотра верхнего уровня и загружает заданный URL. Если вызывающий скрипт не имеет разрешения на отображение всплывающих окон, openWindow() выдаст InvalidAccessError.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Clients.openWindow()","locale":"en-US","native":"English (US)"},{"title":"Clients.openWindow()","locale":"fr","native":"Français"},{"title":"Clients.openWindow()","locale":"ja","native":"日本語"},{"title":"Clients.openWindow()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/api/clients/openwindow","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/clients/openwindow/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Clients","title":"Clients"},{"uri":"/ru/docs/Web/API/Clients/openWindow","title":"Clients.openWindow()"}],"pageTitle":"Clients.openWindow() - Интерфейсы веб API | MDN","noIndexing":false}}