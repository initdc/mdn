{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Начало работы с WebGL","mdn_url":"/ru/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL","locale":"ru","native":"Русский","sidebarHTML":"\n <ol>\n  <li><a href=\"/ru/docs/Web/API/WebGL_API\"><strong>WebGL API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Руководство WebGL</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL\">Начало работы с WebGL</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Tutorial/Adding_2D_content_to_a_WebGL_context\">Добавление двухмерного контента в контекст WebGL</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\">Использование шейдеров для задания цвета в WebGL</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL\">Оживление объектов при помощи WebGL</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">Создание 3D с помощью WebGL</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\">Использование текстур WebGL</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL\">Освещение WebGL</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL\">Анимация текстур WebGL</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Примеры и статьи</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Matrix_math_for_the_web\">Математическая матрица для Веба</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/WebGL_model_view_projection\">WebGL модель, представление, проекция</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/WebGL_best_practices\">WebGL лучшие практики</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Using_Extensions\">Использование расширений WebGL</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/Basic_2D_animation_example\">A basic 2D WebGL animation example</a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGL_API/By_example\">WebGL by example</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Интерфейсы</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLBuffer\"><code>WebGLBuffer</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLContextEvent\"><code>WebGLContextEvent</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/ru/docs/Web/API/WebGLProgram\"><code>WebGLProgram</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLQuery\"><code>WebGLQuery</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLSampler\"><code>WebGLSampler</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLShader\"><code>WebGLShader</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLShaderPrecisionFormat\"><code>WebGLShaderPrecisionFormat</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLSync\"><code>WebGLSync</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLTexture\"><code>WebGLTexture</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n\n  <li><strong><a href=\"/ru/docs/MDN\">Доментация:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Внести вклад</summary>\n      <ol>\n        <li><a href=\"/ru/docs/MDN\">Проект MDN</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p> <ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/WebGL_API/Tutorial/Adding_2D_content_to_a_WebGL_context\">Следующая статья  »</a></li>\n</ul><p></p>\n\n<p><a class=\"external\" href=\"https://www.khronos.org/webgl/\" rel=\" noopener\">WebGL</a> позволяет веб-контенту использовать API, основанный на <a class=\"external\" href=\"https://www.khronos.org/opengles/\" rel=\" noopener\">OpenGL ES</a> 2.0, для визуализации трёхмерной графики без использования плагинов в HTML элементе <a class=\"internal\" href=\"/en-US/HTML/Canvas\" title=\"en/HTML/Canvas\"><code>canvas</code></a> в браузерах, которые осуществляют его поддержку. WebGL программы состоят из кода управления, написанном на JavaScript и кода специальных эффектов (шейдерного кода), который выполняется на графическом процессоре. WebGL элементы могут быть смешаны с другими HTML-элементами и собраны с другими частями веб-страницы или фоном веб-страницы.</p>\n\n<p>Эта статья знакомит вас с основами использования WebGL. Предполагается, что вы уже знакомы с математическими основами трёхмерной графики. Данная статья не обучит вас OpenGL.</p>"}},{"type":"prose","value":{"id":"подготовка_к_визуализации_в_3d","title":"Подготовка к визуализации в 3D","isH3":false,"content":"<p>Первое, что вам понадобится для использования WebGL для визуализации в 3D - это элемент canvas. Фрагмент на HTML ниже содержит элемент canvas и определяет обработчик события <code>onload</code>, которое инициализирует наш контекст WebGL.</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>glcanvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>640<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>480<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    Your browser doesn't appear to support the HTML5 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token entity named-entity\" title=\"<\">&amp;lt;</span>canvas<span class=\"token entity named-entity\" title=\">\">&amp;gt;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code</span><span class=\"token punctuation\">&gt;</span></span> element.\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"подготовка_контекста_webgl","title":"Подготовка контекста WebGL","isH3":true,"content":"<p>Функция <code>start()</code>, в нашем JavaScript-коде вызывается после загрузки документа. Её назначение - настройка контекста WebGL и начать отрисовку содержимого.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> gl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// глобальная переменная для контекста WebGL</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"glcanvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gl <span class=\"token operator\">=</span> <span class=\"token function\">initWebGL</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// инициализация контекста GL</span>\n\n  <span class=\"token comment\">// продолжать только если WebGL доступен и работает</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">clearColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// установить в качестве цвета очистки буфера цвета чёрный, полная непрозрачность</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">DEPTH_TEST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                               <span class=\"token comment\">// включает использование буфера глубины</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">depthFunc</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">LEQUAL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                                <span class=\"token comment\">// определяет работу буфера глубины: более ближние объекты перекрывают дальние</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">COLOR_BUFFER_BIT</span><span class=\"token operator\">|</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">DEPTH_BUFFER_BIT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// очистить буфер цвета и буфер глубины.</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Первое, что мы здесь делаем - получаем ссылку на элемент canvas, помещаем её в переменную <code>canvas</code>. Очевидно, что если вам не требуется многократно получать ссылку на canvas, вы должны избежать сохранения этого значения глобально, а только сохранить её в локальной переменной или в поле объекта.</p>\n\n<p>Как только мы получили ссылку на canvas, мы вызываем функцию <code>initWebGL()</code>; Эту функцию мы определяем незамедлительно, её работа - инициализировать контекст WebGL.</p>\n\n<p>Если контекст успешно инициализирован, в <code>gl</code> будет содержаться ссылка на него. В этом случае, мы устанавливаем цвет очистки буфера цвета (цвет фона) на чёрный, затем очищаем контекст этим цветом. После этого, контекст конфигурируется параметрами настройки. В данном случае, мы включаем буфер глубины и определяем, что более близкие объекты будут перекрывать более дальние.</p>\n\n<p>Всё вышеперечисленное необходимо сделать только для первоначальной инициализации. Чуть позже мы увидим работу по визуализации трёхмерных объектов.</p>"}},{"type":"prose","value":{"id":"создание_контекста_webgl","title":"Создание контекста WebGL","isH3":true,"content":"<p>Функция <code>initWebGL()</code> выглядит следующим образом:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">initWebGL</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">canvas</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  gl <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Попытаться получить стандартный контекст. Если не получится, попробовать получить экспериментальный.</span>\n    gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"experimental-webgl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Если мы не получили контекст GL, завершить работу</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>gl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unable to initialize WebGL. Your browser may not support it.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gl <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> gl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n\n<p>Чтобы получить контекст WebGL для canvas, мы запрашиваем у элемента canvas контекст именуемый как \"webgl\". Если данная попытка завершается неудачно, мы пытаемся получить контекст, именуемый как \"experimental-webgl\". Если данная попытка также завершается неудачно, мы отображаем окно с предупреждением, позволяющим пользователю понять, что его браузер не поддерживает WebGL. Это всё, что необходимо сделать. На данном этапе мы будем иметь в переменной <code>gl</code> либо значение null (означающее, что контекст WebGL не доступен), либо ссылку на контекст WebGL в котором, мы будем производить отрисовку.</p>\n\n<div class=\"note notecard\" id=\"sect1\"><strong>Обратите внимание:</strong> Контекст, именуемый как \"experimental-webgl\" - это временное имя для контекста, используемое на время процесса разработки спецификации. После того, как спецификация будет полностью разработана будет использоваться только имя контекста \"webgl\".</div>\n\n<p>На данном этапе этого кода достаточно, чтобы успешно инициализировать контекст WebGL, и вы увидите пустой чёрный блок, готовый к заполнению контентом.</p>\n\n<p>Если ваш браузер поддерживает WebGL, то вы можете посмотреть результат выполнения приведённого выше кода, щёлкнув по этой <a href=\"http://mdn.github.io/webgl-examples/tutorial/sample1/index.html\" title=\"https://developer.mozilla.org/samples/webgl/sample1/index.html\" class=\"external\" rel=\" noopener\">ссылке</a>.</p>"}},{"type":"prose","value":{"id":"изменение_размера_контекста_webgl","title":"Изменение размера контекста WebGL","isH3":true,"content":"<p>Новый контекст WebGL будет иметь возможность задания размеров области отображения в момент получения контекста путём задания высоты и ширины элемента canvas, без использования CSS. Редактирование стиля элемента canvas будет изменять его отображаемый размер, без изменения размеров области отрисовки. Редактирование атрибутов ширины и высоты элемента canvas после создания контекста не будет также изменять число пикселей для отрисовки. Чтобы изменить размер области отрисовки, с которой WebGL производит работу, например, когда пользователь изменяет размер окна на весь экран или когда вам необходимо менять настройки графики в самом приложении, вам необходимо вызвать контекстную функцию WebGL <code>viewport()</code>, чтобы подтвердить изменения.</p>\n\n<p>Чтобы изменить размер области отрисовки контекста WebGL с переменными <code>gl</code> и <code>canvas</code>, использующимися в примере выше:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>gl<span class=\"token punctuation\">.</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Элемент canvas будет изменять размер, в случае, если его отрисовать с другими размерами области отрисовки, чем те, что указаны в его стилях CSS, согласно которым он занимает место на экране. Изменение размера с помощью CSS наиболее полезно для сохранения ресурсов, отрисовывая с низким разрешением и позволяя браузеру растягивать полученный результат; сжимать возможно при использовании эффекта избыточной выборки сглаживания ( super sample antialiasing - SSAA) (приводит к менее приемлемым результатам и серьёзным потерям производительности). В большинстве случаев лучше полагаться на множественную выборку сглаживания (<abbr style=\"line-height: 24px;\" title=\"&quot;Multisample\">MSAA) и </abbr>на реализацию алгоритмов фильтрации текстур, которые поддерживаются браузером пользователя, чем делать то же самое посредством грубой силы и надеяться, что алгоритм масштабирования изображений, используемый браузером, выдаст красивый результат.</p>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":true,"content":"<ul>\n <li><a href=\"https://dev.opera.com/articles/introduction-to-webgl-part-1/\" class=\"external\" rel=\" noopener\">Введение в WebGL</a> - Автор: Luz Caballero Ресурс: DEV.OPERA. Эта статья адресована тем, кто хочет узнать что такое WebGL, как работает WebGL и как устроена концепция конвейера визуализации и знакомит с некоторыми библиотеками WebGL.</li>\n <li><a href=\"https://duriansoftware.com/joe/An-intro-to-modern-OpenGL.-Table-of-Contents.html\" class=\"external\" rel=\" noopener\">Введение в современный OpenGL</a> - Серия хороших статей о OpenGL, написанная Joe Groff. В них дана вводная информация о OpenGL, начиная с истории возникновения и заканчивая важной концепцией графического конвейера. Весь материал сопровождается примерами с демонстрацией работы OpenGL. Если вы не знакомы с OpenGL, этот материал будет вам полезен.</li>\n</ul>\n\n<p></p><ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/WebGL_API/Tutorial/Adding_2D_content_to_a_WebGL_context\">Следующая статья  »</a></li>\n</ul><p></p>"}}],"toc":[{"text":"Подготовка к визуализации в 3D","id":"подготовка_к_визуализации_в_3d"}],"summary":"WebGL позволяет веб-контенту использовать API, основанный на OpenGL ES 2.0, для визуализации трёхмерной графики без использования плагинов в HTML элементе canvas в браузерах, которые осуществляют его поддержку. WebGL программы состоят из кода управления, написанном на JavaScript и кода специальных эффектов (шейдерного кода), который выполняется на графическом процессоре. WebGL элементы могут быть смешаны с другими HTML-элементами и собраны с другими частями веб-страницы или фоном веб-страницы.","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Getting started with WebGL","locale":"en-US","native":"English (US)"},{"title":"Primeros pasos con WebGL","locale":"es","native":"Español"},{"title":"Commencer avec WebGL","locale":"fr","native":"Français"},{"title":"WebGL 入門","locale":"ja","native":"日本語"},{"title":"Getting started with WebGL","locale":"ko","native":"한국어"},{"title":"Começando com WebGL","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"初识 WebGL","locale":"zh-CN","native":"中文 (简体)"},{"title":"WebGL 入門","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/api/webgl_api/tutorial/getting_started_with_webgl","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/webgl_api/tutorial/getting_started_with_webgl/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/WebGL_API","title":"WebGL"},{"uri":"/ru/docs/Web/API/WebGL_API/Tutorial","title":"WebGL tutorial"},{"uri":"/ru/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL","title":"Начало работы с WebGL"}],"pageTitle":"Начало работы с WebGL - Интерфейсы веб API | MDN","noIndexing":false}}