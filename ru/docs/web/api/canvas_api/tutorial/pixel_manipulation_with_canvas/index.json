{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Пиксельная манипуляция с холстом","mdn_url":"/ru/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas","locale":"ru","native":"Русский","sidebarHTML":"\n <ol>\n  <li><a href=\"/ru/docs/Web/API/Canvas_API\"><strong>Canvas API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Руководство по Canvas</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">Базовое использование</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">Рисование фигур</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">Применение стилей и цветов</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_text\">Рисование текста</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Using_images\">Использование изображений</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Transformations\">Трансформации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Compositing\">Композиция и обрезка</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">Простые анимации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">Расширенные анимации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">Манипуляция пикселями</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">Оптимизация canvas</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Finale\">Заключение</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Примеры</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/A_basic_ray-caster\">Простой излучатель лучей</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Манипяция видео с помощью canvas</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Интерфейсы</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code> <small>(en-US)</small></a></li>\n        <li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ru/docs/MDN\">Документация:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Внести свой вклад</summary>\n      <ol>\n        <li><a href=\"/ru/docs/MDN\">Проект MDN</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"> <ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal page-not-created\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" title=\"This is a link to an unwritten page\">Следующая статья  »</a></li>\n</ul></div>\n\n<div class=\"summary\" id=\"sect2\">\n<p>До сих пор мы не смотрели на фактические пиксели нашего объекта canvas (далее \"холст\"). С объектом <code>ImageData</code> вы можете напрямую читать и писать массив данных для управления пиксельными данными. Мы также рассмотрим, как можно сгладить сглаживание изображения (сглаживание) и как сохранить изображения с вашего холста.</p>\n</div>"}},{"type":"prose","value":{"id":"объект_imagedata","title":"Объект <code>ImageData</code>","isH3":false,"content":"<p>Объект <a href=\"/ru/docs/Web/API/ImageData\"><code>ImageData</code></a> представляет базовые пиксельные данные области объекта холста. Он содержит следующие атрибуты только для чтения:</p>\n\n<dl>\n <dt id=\"width\"><code>width</code></dt>\n <dd>Ширина изображения в пикселях.</dd>\n <dt id=\"height\"><code>height</code></dt>\n <dd>Высота изображения в пикселях.</dd>\n <dt id=\"data\"><code>data</code></dt>\n <dd>A <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a> представляет собой одномерный массив, содержащий данные в порядке RGBA, с целыми значениями от <code>0</code> до <code>255</code> (в комплекте).</dd>\n</dl>\n\n<p>Свойство <code>data</code> возвращает <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a>, к которому можно получить доступ, чтобы посмотреть на необработанные пиксельные данные; каждый пиксель представлен четырьмя однобайтовыми значениями (красный, зелёный, синий и альфа в этом порядке, то есть формат «RGBA»). Каждый компонент цвета представлен целым числом от 0 до 255. Каждому компоненту присваивается последовательный индекс внутри массива, причём красный компонент верхнего левого пикселя находится в индексе 0 внутри массива. Затем пиксели идут слева направо, затем вниз, по всему массиву.</p>\n\n<p><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a> содержит высоту × ширину × 4 байта данных, значения индекса варьируются от 0 до (высота × ширина × 4) -1.</p>\n\n<p>Например, чтобы прочитать значение синего компонента из пикселя в столбце 200, строка 50 на изображении, вы должны сделать следующее:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>blueComponent <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Вы можете получить доступ к размеру массива пикселей в байтах, прочитав атрибут <code>Uint8ClampedArray.length</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> numBytes <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Объект ImageData"}},{"type":"prose","value":{"id":"создание_объекта_imagedata","title":"Создание объекта <code>ImageData</code>","isH3":false,"content":"<p>Чтобы создать новый пустой объект <code>ImageData</code> , вы должны использовать метод <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createImageData\"><code>createImageData ()</code> <small>(en-US)</small></a>. Существуют две версии метода <code>createImageData()</code> :</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createImageData</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Это создаёт новый объект <code>ImageData</code> с указанными параметрами. Все пиксели заданы прозрачным черным.</p>\n\n<p>Вы также можете создать новый объект <code>ImageData</code> ImageData с теми же размерами, что и объект, заданный <code>anotherImageData</code> . Все пиксели нового объекта установлены на прозрачный чёрный. <strong>Это не копирует данные изображения!</strong></p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createImageData</span><span class=\"token punctuation\">(</span>anotherImageData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","titleAsText":"Создание объекта ImageData"}},{"type":"prose","value":{"id":"получение_пиксельных_данных_для_контекста","title":"Получение пиксельных данных для контекста","isH3":false,"content":"<p>Чтобы получить объект <code>ImageData</code> , содержащий копию пиксельных данных для контекста холста, вы можете использовать метод <code>getImageData()</code> :</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Этот метод возвращает объект <code>ImageData</code> , представляющий пиксельные данные для области холста, углы которого представлены точками (<code>left</code> , <code>top</code>), (<code>left+width</code> , <code>top</code>), (<code>left</code> , <code>top+height</code>) и (<code>left+width</code> , <code>top+height</code>). Координаты задаются в единицах пространства координат холста.</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Примечание:</strong> Любые пиксели за пределами холста возвращаются как прозрачный чёрный цвет в результирующий объект <code>ImageData</code> .</p>\n</div>\n\n<p>Этот метод также показан в статье <a href=\"/en-US/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Manipulating video using canvas</a>.</p>"}},{"type":"prose","value":{"id":"выбор_цвета","title":"Выбор цвета","isH3":true,"content":"<p>В этом примере мы используем метод <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\">getImageData() </a> для отображения цвета под курсором мыши. Для этого нам нужна текущая позиция мыши с <code>layerX</code> и <code>layerY</code>, затем мы просматриваем пиксельные данные в этой позиции в массиве пикселей, который предоставляет нам <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\">getImageData() </a> . Наконец, мы используем данные массива для установки цвета фона и текста <code>&lt;div&gt;</code> для отображения цвета.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js; notranslate\"><code><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'https://mdn.mozillademos.org/files/5397/rhino.jpg'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerX<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerY<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> pixel <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> pixel<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> rgba <span class=\"token operator\">=</span> <span class=\"token string\">'rgba('</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span>\n             <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">;</span>\n  color<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span>  rgba<span class=\"token punctuation\">;</span>\n  color<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> rgba<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> pick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p><iframe class=\"sample-code-frame\" title=\"Выбор цвета sample\" id=\"frame_выбор_цвета\" width=\"610\" height=\"240\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas/_sample_.%D0%B2%D1%8B%D0%B1%D0%BE%D1%80_%D1%86%D0%B2%D0%B5%D1%82%D0%B0.html\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"отображение_пиксельных_данных_в_контекст","title":"Отображение пиксельных данных в контекст","isH3":false,"content":"<p>Вы можете использовать метод <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData\">putImageData()</a> для рисования пиксельных данных в контексте:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>myImageData<span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Параметры <code>dx</code>и <code>dy</code>указывают координаты устройства в контексте, в котором будет отображаться верхний левый угол пиксельных данных, которые вы хотите нарисовать.</p>\n\n<p>Например, чтобы нарисовать все изображение, представленное <code>myImageData</code>, в верхнем левом углу контекста, вы можете просто сделать следующее:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>myImageData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"оттенки_серого_цвета_и_инвертирование_цветов","title":"Оттенки серого цвета и инвертирование цветов","isH3":true,"content":"<p>В этом примере мы перебираем все пиксели для изменения их значений, а затем помещаем модифицированный массив пикселей обратно в canvas с помощью <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData\">putImageData()</a>. Функция инвертирования просто вычитает каждый цвет из максимального значения 255. Функция оттенков серого просто использует среднее значение красного, зелёного и синего. Вы также можете использовать средневзвешенное значение, заданное формулой <code>x = 0.299r + 0.587g + 0.114b</code>, например. Для дополнительной информации см. <a href=\"http://en.wikipedia.org/wiki/Grayscale\" class=\"external\" rel=\" noopener\">Grayscale</a> в Википедии.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'https://mdn.mozillademos.org/files/5397/rhino.jpg'</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> imageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">invert</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>     <span class=\"token operator\">=</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// red</span>\n      data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// green</span>\n      data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// blue</span>\n    <span class=\"token punctuation\">}</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">grayscale</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> avg <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n      data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>     <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span> <span class=\"token comment\">// red</span>\n      data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span> <span class=\"token comment\">// green</span>\n      data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span> <span class=\"token comment\">// blue</span>\n    <span class=\"token punctuation\">}</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> invertbtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'invertbtn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  invertbtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> invert<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> grayscalebtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'grayscalebtn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  grayscalebtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> grayscale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p><iframe class=\"sample-code-frame\" title=\"Оттенки серого цвета и инвертирование цветов sample\" id=\"frame_оттенки_серого_цвета_и_инвертирование_цветов\" width=\"330\" height=\"270\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas/_sample_.%D0%BE%D1%82%D1%82%D0%B5%D0%BD%D0%BA%D0%B8_%D1%81%D0%B5%D1%80%D0%BE%D0%B3%D0%BE_%D1%86%D0%B2%D0%B5%D1%82%D0%B0_%D0%B8_%D0%B8%D0%BD%D0%B2%D0%B5%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5_%D1%86%D0%B2%D0%B5%D1%82%D0%BE%D0%B2.html\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"масштабирование_и_сглаживание","title":"Масштабирование и сглаживание","isH3":false,"content":"<p>С помощью метода                                                             <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/drawImage\" title=\"drawImage ()\"><code>drawImage ()</code></a>, второго холста и свойства <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\"><code>imageSmoothingEnabled</code> <small>(en-US)</small></a> мы способны увеличить изображение и посмотреть его более детально.</p>\n\n<p>Мы получаем положение мыши и обрезаем изображение на 5 пикселей левее и выше и на 5 пикселей правее и ниже положения мыши. Затем мы копируем его на другой холст и изменяем размер изображения до размера, который мы хотим. При масштабировании мы изменяем холст с исходного размера 10×10 пикселей до 200×200.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>zoomctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span>\n                  Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Поскольку по умолчанию включено сглаживание, мы можем захотеть отключить сглаживание, чтобы увидеть чёткие пиксели. Вы можете переключить флажок, чтобы увидеть эффект свойства <code>imageSmoothingEnabled</code> (которому нужны префиксы для разных браузеров).</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'https://mdn.mozillademos.org/files/5397/rhino.jpg'</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> zoomctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zoom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> smoothbtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'smoothbtn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">toggleSmoothing</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    zoomctx<span class=\"token punctuation\">.</span>imageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">;</span>\n    zoomctx<span class=\"token punctuation\">.</span>mozImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">;</span>\n    zoomctx<span class=\"token punctuation\">.</span>webkitImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">;</span>\n    zoomctx<span class=\"token punctuation\">.</span>msImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  smoothbtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> toggleSmoothing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">zoom</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerX<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerY<span class=\"token punctuation\">;</span>\n    zoomctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span>\n                      Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  canvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p><iframe class=\"sample-code-frame\" title=\"Масштабирование и сглаживание sample\" id=\"frame_масштабирование_и_сглаживание\" width=\"620\" height=\"490\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas/_sample_.%D0%BC%D0%B0%D1%81%D1%88%D1%82%D0%B0%D0%B1%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5_%D0%B8_%D1%81%D0%B3%D0%BB%D0%B0%D0%B6%D0%B8%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5.html\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"сохранение_изображений","title":"Сохранение изображений","isH3":false,"content":"<p><a href=\"/ru/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> предоставляет метод <code>toDataURL()</code>, который полезен при сохранении изображений. Он возвращает <a href=\"/en-US/docs/Web/HTTP/data_URIs\">data URI</a>, содержащий представление изображения в формате, заданном параметром <code>type</code> (по умолчанию используется в <a class=\"external external-icon\" href=\"https://en.wikipedia.org/wiki/Portable_Network_Graphics\" rel=\" noopener\">PNG</a> ). Возвращаемое изображение имеет разрешение 96 точек на дюйм.</p>\n\n<dl>\n <dt id=\"примечание\"><strong>Примечание:</strong> </dt>\n <dd>Имейте в виду, что если холст содержит пиксели, полученные из другого <a href=\"/ru/docs/Glossary/Origin\">origin</a> без использования CORS, холст будет <strong>испорчен</strong>, и его содержимое больше не будет считываться и сохраняться. Смотрите <a href=\"/en-US/docs/Web/HTML/CORS_enabled_image#безопасность_и_испорченные_холсты\">Безопасность и испорченные холсты</a> в <a href=\"/en-US/docs/Web/HTML/CORS_enabled_image\">Allowing cross-origin use of images and canvas</a></dd>\n <dt id=\"sect7\"></dt>\n <dt id=\"canvas.todataurlimagepng\"><a href=\"/ru/docs/Web/API/HTMLCanvasElement/toDataURL\" title=\"canvas.toDataURL('image/png')\"><code>canvas.toDataURL('image/png')</code></a></dt>\n <dd>Настройки по умолчанию. Создаёт изображение в формате PNG.</dd>\n <dt id=\"canvas.todataurlimagejpeg_quality\"><a href=\"/ru/docs/Web/API/HTMLCanvasElement/toDataURL\" title=\"canvas.toDataURL('image/jpeg', quality)\"><code>canvas.toDataURL('image/jpeg', quality)</code></a></dt>\n <dd>Создаёт изображение в формате JPG. Дополнительно вы можете задать параметр \"качество\" (quality) в диапазоне от 0 до 1, причём единица задаёт лучшее качество и 0 -  почти не распознаваемый, но небольшой по размеру файл.</dd>\n</dl>\n\n<p>После того как вы создали URI данные из своего холста, вы можете использовать его как источник любого <a href=\"/ru/docs/Web/HTML/Element/image\"><code>&lt;image&gt;</code></a> или поместить его в гиперссылку с <a href=\"/en-US/docs/Web/HTML/Element/a#attr-download\">download attribute</a>, чтобы сохранить его на диске, например.</p>\n\n<p>Вы также можете создать <a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a> из холста.</p>\n\n<dl>\n <dt id=\"canvas.toblobcallback_type_encoderoptions\"><a href=\"/ru/docs/Web/API/HTMLCanvasElement/toBlob\" title=\"canvas.toBlob(callback, type, encoderOptions)\"><code>canvas.toBlob(callback, type, encoderOptions)</code></a></dt>\n <dd>Создаёт объект <code>Blob</code>, представляющий изображение, содержащееся в холсте.</dd>\n</dl>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/ru/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n <li><a href=\"/en-US/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Manipulating video using canvas</a></li>\n <li><a href=\"https://codepo8.github.io/canvas-images-and-pixels/\" class=\"external\" rel=\" noopener\">Canvas, images and pixels – by Christian Heilmann</a></li>\n</ul>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal page-not-created\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" title=\"This is a link to an unwritten page\">Следующая статья  »</a></li>\n</ul><p></p>"}}],"toc":[{"text":"Объект <code>ImageData</code>","id":"объект_imagedata"},{"text":"Создание объекта <code>ImageData</code>","id":"создание_объекта_imagedata"},{"text":"Получение пиксельных данных для контекста","id":"получение_пиксельных_данных_для_контекста"},{"text":"Отображение пиксельных данных в контекст","id":"отображение_пиксельных_данных_в_контекст"},{"text":"Масштабирование и сглаживание","id":"масштабирование_и_сглаживание"},{"text":"Сохранение изображений","id":"сохранение_изображений"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"\nДо сих пор мы не смотрели на фактические пиксели нашего объекта canvas (далее \"холст\"). С объектом ImageData вы можете напрямую читать и писать массив данных для управления пиксельными данными. Мы также рассмотрим, как можно сгладить сглаживание изображения (сглаживание) и как сохранить изображения с вашего холста.\n","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Pixel manipulation with canvas","locale":"en-US","native":"English (US)"},{"title":"Pixel manipulation with canvas","locale":"es","native":"Español"},{"title":"Manipulation de pixels avec canvas","locale":"fr","native":"Français"},{"title":"キャンバスとピクセル操作","locale":"ja","native":"日本語"},{"title":"像素操作","locale":"zh-CN","native":"中文 (简体)"},{"title":"Pixel manipulation with canvas","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/api/canvas_api/tutorial/pixel_manipulation_with_canvas","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/canvas_api/tutorial/pixel_manipulation_with_canvas/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Canvas_API","title":"Canvas"},{"uri":"/ru/docs/Web/API/Canvas_API/Tutorial","title":"Руководство по Canvas"},{"uri":"/ru/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas","title":"Пиксельная манипуляция с холстом"}],"pageTitle":"Пиксельная манипуляция с холстом - Интерфейсы веб API | MDN","noIndexing":false}}