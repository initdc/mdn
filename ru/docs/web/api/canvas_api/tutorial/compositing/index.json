{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Композиция и обрезка","mdn_url":"/ru/docs/Web/API/Canvas_API/Tutorial/Compositing","locale":"ru","native":"Русский","sidebarHTML":"\n <ol>\n  <li><a href=\"/ru/docs/Web/API/Canvas_API\"><strong>Canvas API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Руководство по Canvas</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">Базовое использование</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">Рисование фигур</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">Применение стилей и цветов</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_text\">Рисование текста</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Using_images\">Использование изображений</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Transformations\">Трансформации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Compositing\">Композиция и обрезка</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">Простые анимации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">Расширенные анимации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">Манипуляция пикселями</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">Оптимизация canvas</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Finale\">Заключение</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Примеры</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/A_basic_ray-caster\">Простой излучатель лучей</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Манипяция видео с помощью canvas</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Интерфейсы</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code> <small>(en-US)</small></a></li>\n        <li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ru/docs/MDN\">Документация:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Внести свой вклад</summary>\n      <ol>\n        <li><a href=\"/ru/docs/MDN\">Проект MDN</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"> <ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Transformations\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">Следующая статья  »</a></li>\n</ul></div>\n\n<div class=\"summary\" id=\"sect2\">\n<p>Во всех наших <a href=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations\">предыдущих примерах</a>, фигуры всегда были нарисованы одна поверх другой. Это более чем достаточно для большинства ситуаций, но это ограничивает порядок, в котором построены композиционные формы. Однако, мы можем изменить это поведение, установив свойство <code>globalCompositeOperation</code>. Кроме того, свойства <code>clip</code> позволяет скрыть нежелательные части формы.</p>\n</div>"}},{"type":"prose","value":{"id":"globalcompositeoperation","title":"<code>globalCompositeOperation</code>","isH3":false,"content":"<p>Мы можем не только рисовать новые фигуры за существующие формы, но мы также можем использовать его, чтобы замаскировать определённые участки, очистить разделы от холста (не ограничивается прямоугольниками, как<a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/clearRect\" title=\"clearRect()\"><code>clearRect()</code></a> method does) и другое.</p>\n\n<dl>\n <dt id=\"globalcompositeoperation_type_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\"><code>globalCompositeOperation = type</code> <small>(en-US)</small></a></dt>\n <dd>Это задаёт Тип операции композиции для применения при разработке новых форм, где Тип является строкой, идентифицирующей, какие из двенадцати операций композитинг в использовании.</dd>\n</dl>\n\n<p>См.  <a href=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing/Example\">примеры компоновки</a> кода из следующих примеров.</p>\n\n<p><iframe class=\"sample-code-frame\" title=\"Compositing example sample\" id=\"frame_compositing_example\" width=\"750\" height=\"6750\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing/Example/_sample_.compositing_example.html\" loading=\"lazy\"></iframe></p>","titleAsText":"globalCompositeOperation"}},{"type":"prose","value":{"id":"clipping_paths","title":"Обрезка контуров","isH3":false,"content":"<p><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/209/Canvas_clipping_path.png\" style=\"float: right;\" loading=\"lazy\">Отсечённый контур похож на обычную форму холста, но он действует как маска, чтобы скрыть нежелательные части фигур. Это визуализируется на изображении справа. Форма красной звезды - наша отправочная дорожка. Все, что выходит за пределы этого пути, не будет нарисовано на холсте.</p>\n\n<p>Если мы сравниваем отсечённый контур со свойством <code>globalCompositeOperation</code> на изображении, мы видим два режима композитинга, которые достигают более или менее того же эффекта в исходном и исходном состоянии.   Наиболее важные различия между ними заключаются в том, что отсечение контура фактически  никогда не обращается к холсту и контур обрезки никогда не влияет добавление новых форм. Это делает обрезку контура идеальным для рисования нескольких фигур в ограниченной области.</p>\n\n<p>В главе о <a href=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\" title=\"Web/Guide/HTML/Canvas_tutorial/Drawing_shapes#Drawing_paths\">рисовании форм</a>, я назвал только <code>stroke()</code> и <code>fill()</code> методы, но есть третий способ можно использовать с контурами, так называемый <code>clip()</code>.</p>\n\n<dl>\n <dt id=\"clip_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/clip\"><code>clip()</code> <small>(en-US)</small></a></dt>\n <dd>Преобразует текущий выстраиваемый контур в отсечённый контур.</dd>\n</dl>\n\n<p>Используйте <code>clip()</code> вместо <code>closePath()</code> для закрытия контура и его преобразования в отсечённый контур вместо создания заполняющего  или обрамляющего контура.</p>\n\n<p>По умолчанию элемент <a href=\"/ru/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> использует отсечённый контур, который в точности совпадает по размеру с размером самого холста. Это означает, что никакого отсечения попросту не произойдёт.</p>"}},{"type":"prose","value":{"id":"a_clip_example","title":"Пример обрезки","isH3":true,"content":"<p>В этом примере мы будем использовать круговую обрезку контура, чтобы ограничить рисование набора случайных звёзд определённой областью.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js; notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create a circular clipping path</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// draw background</span>\n  <span class=\"token keyword\">var</span> lingrad <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createLinearGradient</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lingrad<span class=\"token punctuation\">.</span><span class=\"token function\">addColorStop</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#232256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lingrad<span class=\"token punctuation\">.</span><span class=\"token function\">addColorStop</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#143778'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> lingrad<span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// draw stars</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span> <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token number\">75</span> <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">drawStar</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">drawStar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">/</span> <span class=\"token number\">0.525731</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.200811</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n\n\n<p>В первых нескольких строках кода мы рисуем чёрный прямоугольник размером с холстом в качестве фона, а затем переводим начало координат в центр. Затем мы создаём круговой обтравочный контур, рисуя дугу и вызывающий <code>clip()</code>. Обрезанные контуры также являются частью состояния сохранения холста. Если бы мы хотели сохранить исходный обтравочный контур, мы могли бы сохранить состояние холста перед созданием нового.</p>\n\n<p>Все, что нарисовано после создания отсечённого контура, появится только внутри этого пути. Вы можете видеть это чётко в линейном градиенте, который нарисован далее. После этого набирается набор из 50 случайно расположенных и масштабированных звёзд, используя <code>drawStar()</code>. Снова звезды появляются только в пределах определённого обтравочного контура.</p>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/208/Canvas_clip.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"A clip example sample\" id=\"frame_a_clip_example\" width=\"180\" height=\"180\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Compositing/_sample_.a_clip_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Transformations\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">Следующая статья  »</a></li>\n</ul><p></p>"}}],"toc":[{"text":"<code>globalCompositeOperation</code>","id":"globalcompositeoperation"},{"text":"Обрезка контуров","id":"clipping_paths"}],"summary":"\nВо всех наших предыдущих примерах, фигуры всегда были нарисованы одна поверх другой. Это более чем достаточно для большинства ситуаций, но это ограничивает порядок, в котором построены композиционные формы. Однако, мы можем изменить это поведение, установив свойство globalCompositeOperation. Кроме того, свойства clip позволяет скрыть нежелательные части формы.\n","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Compositing and clipping","locale":"en-US","native":"English (US)"},{"title":"Compositing and clipping","locale":"es","native":"Español"},{"title":"Composition et découpe","locale":"fr","native":"Français"},{"title":"合成とクリッピング","locale":"ja","native":"日本語"},{"title":"도형 합성","locale":"ko","native":"한국어"},{"title":"Compositing and clipping","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"组合 Compositing","locale":"zh-CN","native":"中文 (简体)"},{"title":"合成效果","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/api/canvas_api/tutorial/compositing","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/canvas_api/tutorial/compositing/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Canvas_API","title":"Canvas"},{"uri":"/ru/docs/Web/API/Canvas_API/Tutorial","title":"Руководство по Canvas"},{"uri":"/ru/docs/Web/API/Canvas_API/Tutorial/Compositing","title":"Композиция и обрезка"}],"pageTitle":"Композиция и обрезка - Интерфейсы веб API | MDN","noIndexing":false}}