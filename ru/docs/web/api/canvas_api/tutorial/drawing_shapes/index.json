{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Рисование фигур с помощью canvas","mdn_url":"/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes","locale":"ru","native":"Русский","sidebarHTML":"\n <ol>\n  <li><a href=\"/ru/docs/Web/API/Canvas_API\"><strong>Canvas API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Руководство по Canvas</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">Базовое использование</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">Рисование фигур</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">Применение стилей и цветов</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_text\">Рисование текста</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Using_images\">Использование изображений</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Transformations\">Трансформации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Compositing\">Композиция и обрезка</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">Простые анимации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">Расширенные анимации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">Манипуляция пикселями</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">Оптимизация canvas</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Finale\">Заключение</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Примеры</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/A_basic_ray-caster\">Простой излучатель лучей</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Манипяция видео с помощью canvas</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Интерфейсы</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code> <small>(en-US)</small></a></li>\n        <li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ru/docs/MDN\">Документация:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Внести свой вклад</summary>\n      <ol>\n        <li><a href=\"/ru/docs/MDN\">Проект MDN</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"> <ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">Следующая статья  »</a></li>\n</ul></div>\n\n<div class=\"summary\" id=\"sect2\">\n<p>Теперь, установив наше <a href=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">окружение canvas</a>, мы можем погрузиться в детали того, как рисовать в canvas. К концу этой статьи, вы научитесь рисовать прямоугольники, треугольники, линии, дуги и кривые, при условии что вы хорошо знакомы с основными геометрическими фигурами. Работа с путями весьма важна, когда рисуете объекты на canvas и мы увидим как это может быть сделано.</p>\n</div>"}},{"type":"prose","value":{"id":"сетка","title":"Сетка","isH3":false,"content":"<p><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/224/Canvas_default_grid.png\" style=\"float: right;\" loading=\"lazy\">Перед тем, как мы начнём рисовать, нам нужно поговорить о сетке canvas или <strong>координатной плоскости</strong>. Наш HTML каркас из предыдущей страницы включал в себя элемент canvas 150 пикселей в ширину и 150 пикселей в высоту. Справа можно увидеть этот canvas с сеткой, накладываемой по умолчанию. Обычно 1 единица на сетке соответствует 1 пикселю на canvas. Начало координат этой сетки расположено <em>в верхнем левом углу</em> в координате <code><em>(</em></code><code><em>0,0 )</em></code>. Все элементы размещены относительно этого начала. Таким образом, положение верхнего левого угла синего квадрата составляет <code><em>х</em></code> пикселей слева и <code><em>у</em></code> пикселей сверху, на координате <code><em>(х</em></code><code><em>, у)</em></code>. Позже в этом уроке мы увидим, как можно перевести начало координат в другое место, вращать сетку и даже масштабировать её, но сейчас мы будем придерживаться настроек сетки по умолчанию.</p>"}},{"type":"prose","value":{"id":"рисование_прямоугольников","title":"Рисование прямоугольников","isH3":false,"content":"<p>В отличие от <a href=\"/ru/docs/Glossary/SVG\">SVG</a>, <a href=\"/ru/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> поддерживает только одну примитивную фигуру: прямоугольник. Все другие фигуры должны быть созданы комбинацией одного или большего количества контуров (paths), набором точек, соединённых в линии. К счастью в ассортименте рисования контуров у нас есть  функции, которые делают возможным составление очень сложных фигур.</p>\n\n<p>Сначала рассмотрим прямоугольник. Ниже представлены три функции рисования прямоугольников в canvas:</p>\n\n<dl>\n <dt id=\"fillrectx_y_width_height\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/fillRect\" title=\"fillRect(x, y, width, height)\"><code>fillRect(x, y, width, height)</code></a></dt>\n <dd>Рисование заполненного прямоугольника.</dd>\n <dt id=\"strokerectx_y_width_height\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/strokeRect\" title=\"strokeRect(x, y, width, height)\"><code>strokeRect(x, y, width, height)</code></a></dt>\n <dd>Рисование прямоугольного контура.</dd>\n <dt id=\"clearrectx_y_width_height\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/clearRect\" title=\"clearRect(x, y, width, height)\"><code>clearRect(x, y, width, height)</code></a></dt>\n <dd>Очистка  прямоугольной области, делая содержимое совершенно прозрачным.</dd>\n</dl>\n\n<p>Каждая из приведённых функций принимает несколько параметров: </p>\n\n<ul>\n <li><em>x</em>, <em>y</em> устанавливают положение верхнего левого угла прямоугольника в canvas (относительно начала координат);</li>\n <li><code><em>width</em></code>(ширина) и <code><em><em>height</em></em></code>(высота) определяют размеры прямоугольника.</li>\n</ul>\n\n<p>Ниже приведена функция draw(), использующая эти три функции.</p>"}},{"type":"prose","value":{"id":"пример_создания_прямоугольных_фигур","title":"Пример создания прямоугольных фигур","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>getContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">strokeRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Этот пример изображён ниже.</p>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/245/Canvas_rect.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"Пример создания прямоугольных фигур sample\" id=\"frame_пример_создания_прямоугольных_фигур\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes/_sample_.%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80_%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F_%D0%BF%D1%80%D1%8F%D0%BC%D0%BE%D1%83%D0%B3%D0%BE%D0%BB%D1%8C%D0%BD%D1%8B%D1%85_%D1%84%D0%B8%D0%B3%D1%83%D1%80.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>\n\n<p>Функция fillRect() рисует большой чёрный квадрат со стороной 100 px. Функция clearRect() вырезает квадрат 60х60 из центра, а функция strokeRect() создаёт прямоугольный контур 50х50 пикселей внутри очищенного квадрата.</p>\n\n<p>На следующей странице мы рассмотрим две альтернативы методу clearRect(), и также увидим, как можно изменять цвет и стиль контура отображаемых фигур.</p>\n\n<p>В отличие от функций создания контуров, которые будут рассмотрены в следующем разделе, все три функции создания прямоугольника сразу же отображаются на canvas.</p>"}},{"type":"prose","value":{"id":"рисование_контуров_path","title":"Рисование контуров (path)","isH3":false,"content":"<p>Остальные примитивные фигуры создаются <em>контурами</em>. Контур - это набор точек, которые, соединяясь в отрезки линий, могут образовывать различные фигуры, изогнутые или нет, разной ширины и разного цвета. Контур (или субконтур) может быть закрытым.</p>\n\n<p>Создание фигур используя контуры происходит в несколько важных шагов:</p>\n\n<ol>\n <li>Сначала вы создаёте контур.</li>\n <li>Затем, используя <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D#paths\">команды рисования</a>, рисуете контур.</li>\n <li>Потом закрываете контур.</li>\n <li>Созданный контур вы можете обвести или залить для его отображения.</li>\n</ol>\n\n<p>Здесь приведены функции, которые можно использовать в описанных шагах:</p>\n\n<dl>\n <dt id=\"beginpath\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/beginPath\" title=\"beginPath()\"><code>beginPath()</code></a></dt>\n <dd>Создаёт новый контур. После создания используется в дальнейшем командами рисования при построении контуров.</dd>\n <dt id=\"path_методы\"><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D#paths\">Path методы</a></dt>\n <dd>Методы для установки различных контуров объекта.</dd>\n <dt id=\"closepath\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/closePath\" title=\"closePath()\"><code>closePath()</code></a></dt>\n <dd>Закрывает контур, так что будущие команды рисования вновь направлены контекст.</dd>\n <dt id=\"stroke\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/stroke\" title=\"stroke()\"><code>stroke()</code></a></dt>\n <dd>Рисует фигуру с внешней обводкой.</dd>\n <dt id=\"fill\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/fill\" title=\"fill()\"><code>fill()</code></a></dt>\n <dd>Рисует фигуру с заливкой внутренней области.</dd>\n</dl>\n\n<p>Первый шаг создания контура заключается в вызове функции <strong><code>beginPath()</code></strong>. Внутри содержатся контуры в виде набора суб-контуров (линии, дуги и др.), которые вместе образуют форму фигуры. Каждый вызов этого метода очищает набор, и мы можем начинать рисовать новые фигуры.</p>\n\n<div class=\"note notecard\" id=\"sect4\"><strong>Note:</strong>  если текущий контур пуст (например, как после вызова <code>beginPath() </code>или на вновь созданном canvas), первой командой построения контура всегда является функция  <strong><code>moveTo()</code></strong>. Поэтому мы всегда можем установить начальную позицию рисования контура после перезагрузки.</div>\n\n<p>Вторым шагом является вызов методов, определяемых видом контура, который нужно нарисовать. Их мы рассмотрим позднее.</p>\n\n<p>Третий и необязательный шаг - это вызов <strong><code>closePath()</code></strong>. Этот метод пытается закрыть фигуру, рисуя прямую линию из текущей точки в начальную. Если фигура была уже закрыта или является просто точкой, то функция ничего не делает.</p>\n\n<div class=\"note notecard\" id=\"sect5\"><strong>Note:</strong> Когда вы вызываете <strong><code>fill()</code></strong>, то каждая открытая фигура закрывается автоматически, так что вы можете не использовать <code>closePath()</code>. Это обстоятельство не имеет место в случае вызова <code>stroke()</code>.</div>"}},{"type":"prose","value":{"id":"рисование_треугольника","title":"Рисование треугольника","isH3":true,"content":"<p>Например, код для рисования треугольника будет выглядеть как-то так:</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>getContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Результат выглядит так:</p>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/9847/triangle.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"Рисование треугольника sample\" id=\"frame_рисование_треугольника\" width=\"110\" height=\"110\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes/_sample_.%D1%80%D0%B8%D1%81%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5_%D1%82%D1%80%D0%B5%D1%83%D0%B3%D0%BE%D0%BB%D1%8C%D0%BD%D0%B8%D0%BA%D0%B0.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>"}},{"type":"prose","value":{"id":"передвижение_пера","title":"Передвижение пера","isH3":true,"content":"<p>Одна очень полезная функция, которая ничего не рисует, но связана по смыслу с вышеописанными функциями  - это <strong><code>moveTo()</code></strong>. Вы можете представить это как отрыв (подъем) пера от бумаги и его перемещение в другое место.</p>\n\n<dl>\n <dt id=\"movetox_y\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/moveTo\" title=\"moveTo(x, y)\"><code>moveTo(x, y)</code></a></dt>\n <dd>Перемещает перо в точку с координатами x и y.</dd>\n</dl>\n\n<p>При инициализации canvas или при вызове <code>beginPath()</code>, вы захотите использовать функцию <code>moveTo()</code> для перемещения в точку начала рисования. Можно использовать <code>moveTo()</code> и для рисования несвязанного(незакрытого) контура. Посмотрите на смайлик ниже.</p>\n\n<p>Вы можете проверить это сами, используя участок кода ниже. Просто вставьте в функцию <code>draw()</code>, рассмотренную ранее.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js; notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>getContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Внешняя окружность</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">110</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// рот (по часовой стрелке)</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Левый глаз</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Правый глаз</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Результат этого ниже:</p>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/252/Canvas_smiley.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"Передвижение пера sample\" id=\"frame_передвижение_пера\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes/_sample_.%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%D0%B2%D0%B8%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5_%D0%BF%D0%B5%D1%80%D0%B0.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>\n\n<p>Если вы захотите увидеть соединение линии, то можете удалить вызов <code>moveTo()</code>.</p>\n\n<div class=\"note notecard\" id=\"sect8\">\n<p><strong>Note:</strong> Подробнее о функции <code>arc()</code>,посмотрите <a href=\"#дуги\">Дуги</a> .</p>\n</div>"}},{"type":"prose","value":{"id":"линии","title":"Линии","isH3":true,"content":"<p>Для рисования прямых линий используйте метод <code>lineTo()</code>.</p>\n\n<dl>\n <dt id=\"linetox_y\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/lineTo\" title=\"lineTo(x, y)\"><code>lineTo(x, y)</code></a></dt>\n <dd>Рисует линию с текущей позиции до позиции, определённой <code>x и y</code>.</dd>\n</dl>\n\n<p>Этот метод принимает два аргумента <code><em>x</em> и <em>y</em></code>, которые являются координатами конечной точки линии. Начальная точка зависит от ранее нарисованных путей, причём конечная точка предыдущего пути является начальной точкой следующего и т. д. Начальная точка также может быть изменена с помощью метода <code>moveTo()</code>.</p>\n\n<p>Пример ниже рисует два треугольника, один закрашенный и другой обведён контуром.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js; notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>getContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Filled triangle</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">105</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">105</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Stroked triangle</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span><span class=\"token number\">125</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">125</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Отрисовка начинается с вызова <code>beginPath()</code>, чтобы начать рисовать путь новой фигуры. Затем мы используем метод <code>moveTo()</code>, чтобы переместить начальную точку в нужное положение. Ниже рисуются две линии, которые образуют две стороны треугольника.</p>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/238/Canvas_lineTo.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"Линии sample\" id=\"frame_линии\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes/_sample_.%D0%BB%D0%B8%D0%BD%D0%B8%D0%B8.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>\n\n<p>Вы заметите разницу между закрашенным и обведённым контуром треугольниками. Это, как упоминалось выше, из-за того, что фигуры автоматически закрываются, когда путь заполнен (т. е. закрашен), но не тогда, когда он очерчен (т. е. обведён контуром). Если бы мы не учли <code>closePath()</code> для очерченного треугольника, тогда только две линии были бы нарисованы, а не весь треугольник.</p>"}},{"type":"prose","value":{"id":"дуги","title":"Дуги","isH3":true,"content":"<p>Для рисования дуг и окружностей, используем методы arc() и arcTo().</p>\n\n<dl>\n <dt id=\"arcx_y_radius_startangle_endangle_anticlockwise\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/arc\" title=\"arc(x, y, radius, startAngle, endAngle, anticlockwise)\"><code>arc(x, y, radius, startAngle, endAngle, anticlockwise)</code></a></dt>\n <dd>Рисуем дугу с центром в точке <code><em>(x,y)</em></code> радиусом <code><em>radius</em></code>, начиная с угла <em><code>startAngle </code>и заканчивая в </em><em><code>endAngle </code>в направлении против часовой стрелки <code>anticlockwise</code></em><code> </code>(по умолчанию по ходу движения часовой стрелки).</dd>\n <dt id=\"arctox1_y1_x2_y2_radius\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/arcTo\" title=\"arcTo(x1, y1, x2, y2, radius)\"><code>arcTo(x1, y1, x2, y2, radius)</code></a></dt>\n <dd>Рисуем дугу с заданными контрольными точками и радиусом, соединяя эти точки прямой линией.</dd>\n</dl>\n\n<p>Рассмотрим детальнее метод <em>arc()</em>, который имеет пять параметров: <em><code>x</code></em> и <em><code>y</code></em> — это координаты центра окружности, в которой должна быть нарисована дуга. <em><code>radius</code></em> — не требует пояснений. Углы <code>startAngle</code> и <code>endAngle</code> определяют начальную и конечную точки дуги в радианах вдоль кривой окружности. Отсчёт происходит от оси x. Параметр <code>anticlockwise</code> — логическое значение, которое, если <code>true</code>, то рисование дуги совершается против хода часовой стрелки; иначе рисование происходит по ходу часовой стрелки.</p>\n\n<div class=\"note notecard\" id=\"sect10\">\n<p><strong>Note</strong>: Углы в функции arc() измеряют в радианах, не в градусах. Для перевода градусов в радианы вы можете использовать JavaScript-выражение: <code>radians = (Math.PI/180)*degrees</code>.</p>\n</div>\n\n<p>Следующий пример немного сложнее, чем мы рассматривали ранее. Здесь нарисованы 12 различных дуг с разными углами и заливками.</p>\n\n<p>Два <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for\"><code>for</code> цикла</a> размещают дуги по столбцам и строкам. Для каждой дуги, мы начинаем новый контур, вызывая <em><code>beginPath()</code></em>. В этом коде каждый параметр дуги для большей ясности задан в виде переменной, но вам не обязательно делать так в реальных проектах.</p>\n\n<p>Координаты <code>x</code> и <code>y</code>  должны быть достаточно ясны. <code>radius</code> and <code>startAngle</code> — фиксированы. <code>endAngle</code> начинается со 180 градусов (полуокружность) в первой колонке и, увеличиваясь с шагом 90 градусов, достигает кульминации полноценной окружностью в последнем столбце.</p>\n\n<p>Установка параметра <code>clockwise</code> определяет результат; в первой и третьей строках рисование дуг происходит по часовой стрелке, а во второй и четвёртой - против часовой стрелки. Благодаря if-условию верхняя половина дуг образуется с контуром, (обводкой), а нижняя половина дуг - с заливкой.</p>\n\n<div class=\"note notecard\" id=\"sect11\">\n<p><strong>Note:</strong> Этот пример требует немного большего холста (canvas), чем другие на этой странице: 150 x 200 pixels.</p>\n</div>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js; notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>getContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token operator\">+</span>j<span class=\"token operator\">*</span><span class=\"token number\">50</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// x coordinate</span>\n        <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">50</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// y coordinate</span>\n        <span class=\"token keyword\">var</span> radius <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Arc radius</span>\n        <span class=\"token keyword\">var</span> startAngle <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Starting point on circle</span>\n        <span class=\"token keyword\">var</span> endAngle <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// End point on circle</span>\n        <span class=\"token keyword\">var</span> anticlockwise <span class=\"token operator\">=</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// clockwise or anticlockwise</span>\n\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> startAngle<span class=\"token punctuation\">,</span> endAngle<span class=\"token punctuation\">,</span> anticlockwise<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">&gt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/204/Canvas_arc.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"Дуги sample\" id=\"frame_дуги\" width=\"160\" height=\"210\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes/_sample_.%D0%B4%D1%83%D0%B3%D0%B8.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>"}},{"type":"prose","value":{"id":"безье_и_квадратичные_кривые","title":"Безье и квадратичные кривые","isH3":true,"content":"<p>Следующим типом доступных контуров являются  <a class=\"external\" href=\"http://en.wikipedia.org/wiki/B%C3%A9zier_curve\" rel=\"external noopener\">кривые Безье</a>, и к тому же доступны в кубическом и квадратичном вариантах. Обычно они используются при рисовании сложных составных фигур.</p>\n\n<dl>\n <dt id=\"quadraticcurvetocp1x_cp1y_x_y_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo\"><code>quadraticCurveTo(cp1x, cp1y, x, y)</code> <small>(en-US)</small></a></dt>\n <dd>Рисуется квадратичная кривая Безье с текущей позиции пера в конечную точку с координатами <code>x</code> и <code>y</code>, используя контрольную точку с координатами <code>cp1x</code> и <code>cp1y</code>.</dd>\n <dt id=\"beziercurvetocp1x_cp1y_cp2x_cp2y_x_y\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo\" title=\"bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)\"><code>bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)</code></a></dt>\n <dd>Рисуется кубическая кривая Безье с текущей позиции пера в конечную точку с координатами <code>x</code> и <code>y</code>, используя две контрольные точки с координатами (<code>cp1x</code>, <code>cp1y</code>) и (cp2x, cp2y).</dd>\n</dl>\n\n<p><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/223/Canvas_curves.png\" style=\"float: right;\" loading=\"lazy\">Различие между ними можно увидеть на рисунке, изображённом справа. Квадратичная кривая Безье имеет стартовую и конечную точки (синие точки) и всего одну контрольную точку (красная точка), в то время как кубическая кривая Безье использует две контрольные точки.</p>\n\n<p>Параметры <code>x</code> и <code>y</code> в этих двух методах являются координатами конечной точки. <code>cp1x</code> и <code>cp1y</code> — координаты первой контрольной точки, а <code>cp2x</code> и <code>cp2y</code> — координаты второй контрольной точки.</p>\n\n<p>Использование квадратичных или кубических кривых Безье может быть  спорным выходом, так как в отличие от приложений векторной графики типа Adobe Illustrator, мы не имеем полной видимой обратной связи с тем, что мы делаем. Этот факт делает довольно сложным процесс рисования сложных фигур. В следующем примере мы нарисуем совсем простую составную фигуру, но, если у вас есть время и ещё больше терпения, можно создать более сложные составные фигуры.</p>\n\n<p>В этом примере нет ничего слишком тяжёлого. В обоих случаях мы видим последовательность кривых, рисуя которые, в результате получим составную фигуру.</p>\n\n<h4 id=\"квадратичные_кривые_безье\">Квадратичные кривые Безье</h4>\n\n<p>В этом примере многократно используются квадратичные кривые Безье для рисования речевой выноски.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js; notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>getContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Quadratric curves example</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">quadraticCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">62.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">quadraticCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">quadraticCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">125</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">quadraticCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">quadraticCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span><span class=\"token number\">62.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">quadraticCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/243/Canvas_quadratic.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"Квадратичные кривые Безье sample\" id=\"frame_квадратичные_кривые_безье\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes/_sample_.%D0%BA%D0%B2%D0%B0%D0%B4%D1%80%D0%B0%D1%82%D0%B8%D1%87%D0%BD%D1%8B%D0%B5_%D0%BA%D1%80%D0%B8%D0%B2%D1%8B%D0%B5_%D0%B1%D0%B5%D0%B7%D1%8C%D0%B5.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>\n\n<h4 id=\"кубические_кривые_безье\">Кубические кривые Безье</h4>\n\n<p>В этом примере нарисовано сердце с использованием кубических кривых Безье.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js; notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>getContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Cubic curves example</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span><span class=\"token number\">70</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">62.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">62.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">110</span><span class=\"token punctuation\">,</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span><span class=\"token number\">62.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span><span class=\"token number\">62.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/207/Canvas_bezier.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"Кубические кривые Безье sample\" id=\"frame_кубические_кривые_безье\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes/_sample_.%D0%BA%D1%83%D0%B1%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5_%D0%BA%D1%80%D0%B8%D0%B2%D1%8B%D0%B5_%D0%B1%D0%B5%D0%B7%D1%8C%D0%B5.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>"}},{"type":"prose","value":{"id":"прямоугольники","title":"Прямоугольники","isH3":true,"content":"<p>Все эти методы мы видели в  <a href=\"#рисование_прямоугольников\">Рисование прямоугольников</a>, которые рисуют прямоугольники сразу в canvas, так же есть метод <code>rect()</code>, который не отображает, а только добавляет контур рисования (path) заданного прямоугольника к последнему открытому контуру.</p>\n\n<dl>\n <dt id=\"rectx_y_width_height\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/rect\" title=\"rect(x, y, width, height)\"><code>rect(x, y, width, height)</code></a></dt>\n <dd>Добавляет в path прямоугольник, верхний левый угол которого указан с помощью (x, y) с вашими width и height</dd>\n</dl>\n\n<p>Когда этот метод вызван, автоматически вызывается метод moveTo() с параметрами (x, y). Другими словами, позиция курсора устанавливается в начало добавленного прямоугольника.</p>"}},{"type":"prose","value":{"id":"создание_комбинаций","title":"Создание комбинаций","isH3":true,"content":"<p>До сих пор, в каждом примере использовался только один тип функции контуров для каждой фигуры.<br>\n Однако, нет никаких ограничений на количество или типы контуров, которые вы можете использовать для создания фигур. Давайте в этом примере объединим все вышеперечисленные  функции контуров, чтобы создать набор очень известных игровых персонажей.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>getContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">roundedRect</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">roundedRect</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">roundedRect</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">roundedRect</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span><span class=\"token number\">119</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">roundedRect</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span><span class=\"token number\">135</span><span class=\"token punctuation\">,</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">roundedRect</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span><span class=\"token number\">135</span><span class=\"token punctuation\">,</span><span class=\"token number\">119</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">37</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">51</span><span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">115</span><span class=\"token punctuation\">,</span><span class=\"token number\">51</span><span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">51</span><span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">102</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">94</span><span class=\"token punctuation\">,</span><span class=\"token number\">89</span><span class=\"token punctuation\">,</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span><span class=\"token number\">88</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">105</span><span class=\"token punctuation\">,</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">94</span><span class=\"token punctuation\">,</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">102</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">106.333</span><span class=\"token punctuation\">,</span><span class=\"token number\">111.333</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">101.666</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span><span class=\"token number\">111.333</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">92.333</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">87.666</span><span class=\"token punctuation\">,</span><span class=\"token number\">111.333</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">91</span><span class=\"token punctuation\">,</span><span class=\"token number\">96</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span><span class=\"token number\">96</span><span class=\"token punctuation\">,</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span><span class=\"token number\">106</span><span class=\"token punctuation\">,</span><span class=\"token number\">91</span><span class=\"token punctuation\">,</span><span class=\"token number\">106</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">94</span><span class=\"token punctuation\">,</span><span class=\"token number\">106</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">94</span><span class=\"token punctuation\">,</span><span class=\"token number\">96</span><span class=\"token punctuation\">,</span><span class=\"token number\">91</span><span class=\"token punctuation\">,</span><span class=\"token number\">96</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">96</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">96</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">106</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">106</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">106</span><span class=\"token punctuation\">,</span><span class=\"token number\">106</span><span class=\"token punctuation\">,</span><span class=\"token number\">107</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">107</span><span class=\"token punctuation\">,</span><span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">bezierCurveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">107</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">106</span><span class=\"token punctuation\">,</span><span class=\"token number\">96</span><span class=\"token punctuation\">,</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span><span class=\"token number\">96</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">89</span><span class=\"token punctuation\">,</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// A utility function to draw a rectangle with rounded corners.</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">roundedRect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> radius</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arcTo</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> height<span class=\"token punctuation\">,</span> x <span class=\"token operator\">+</span> radius<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> height<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arcTo</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> width<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> height<span class=\"token punctuation\">,</span> x <span class=\"token operator\">+</span> width<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> height <span class=\"token operator\">-</span> radius<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arcTo</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> width<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x <span class=\"token operator\">+</span> width <span class=\"token operator\">-</span> radius<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arcTo</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> radius<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Конечное изображение выглядит так:</p>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/9849/combinations.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"Создание комбинаций sample\" id=\"frame_создание_комбинаций\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes/_sample_.%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5_%D0%BA%D0%BE%D0%BC%D0%B1%D0%B8%D0%BD%D0%B0%D1%86%D0%B8%D0%B9.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>\n\n<p>Мы не будем подробно останавливаться на том, так как это на самом деле удивительно просто. Наиболее важные вещи, которые следует отметить, это использование свойства <code>fillStyle</code> в контексте рисования и использование функции утилиты (в данном случае <code>roundedRect()</code>). Использование функций утилиты для битов чертежа часто может быть очень полезным и сократить количество необходимого кода, а также его сложность.</p>\n\n<p>Позже, в этом уроке, мы ещё раз рассмотрим <code>fillStyle</code>, но более подробно. Здесь же мы используем его для изменения цвета заливки путей вместо цвета по умолчанию от чёрного до белого, а затем обратно.</p>"}},{"type":"prose","value":{"id":"path2d_объекты","title":"Path2D объекты","isH3":false,"content":"<p>Как мы видели в последнем примере, есть серия путей и команд для рисования объектов на вашем холсте. Чтобы упростить код и повысить производительность, объект <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code> <small>(en-US)</small></a>, доступный в последних версиях браузеров, позволяет вам кешировать или записывать эти команды рисования. Вы можете быстро запускать свои пути.<br>\n Давайте посмотрим, как мы можем построить объект <code>Path2D</code> :</p>\n\n<dl>\n <dt id=\"path2d_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D/Path2D\"><code>Path2D()</code> <small>(en-US)</small></a></dt>\n <dd>Конструктор <code><strong>Path2D()</strong></code> возвращает вновь созданный объект <code>Path2D</code>  необязательно с другим путём в качестве аргумента (создаёт копию) или необязательно со строкой, состоящей из данных пути <a href=\"/en-US/docs/Web/SVG/Tutorial/Paths\">SVG path</a> .</dd>\n</dl>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Path2D</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// пустой path объект</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Path2D</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// копирование из другого path</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Path2D</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// path из SVG</span></code></pre></div>\n\n<p>Все  <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D#Paths\">методы path</a> , такие как  <code>moveTo</code>,  <code>rect</code>,  <code>arc</code>, или <code>quadraticCurveTo</code>,  и т.п, которые мы уже знаем, доступны для объектов <code>Path2D</code></p>\n\n<p>API <code>Path2D</code> также добавляет способ комбинирования путей с использованием метода <code>addPath</code>. Это может быть полезно, если вы хотите, например, создавать объекты из нескольких компонентов.</p>\n\n<dl>\n <dt id=\"path2d.addpathpath_transform_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D/addPath\"><code>Path2D.addPath(path [, transform])</code> <small>(en-US)</small></a></dt>\n <dd>Добавляет путь к текущему пути с необязательной матрицей преобразования.</dd>\n</dl>"}},{"type":"prose","value":{"id":"path2d_пример","title":"Path2D пример","isH3":true,"content":"<p>В этом примере мы создаём прямоугольник и круг. Оба они сохраняются как объект <code>Path2D</code>, поэтому они доступны для последующего использования. С новым API <code>Path2D</code> несколько методов были обновлены, чтобы при необходимости принять объект <code>Path2D</code> для использования вместо текущего пути. Здесь <code>stroke</code> и <code>fill</code> используются с аргументом пути, например, для рисования обоих объектов на холст.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js; notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>getContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> rectangle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Path2D</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rectangle<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> circle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Path2D</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    circle<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    circle<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span>rectangle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>circle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/9851/path2d.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"Path2D пример sample\" id=\"frame_path2d_пример\" width=\"130\" height=\"110\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes/_sample_.path2d_%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>"}},{"type":"prose","value":{"id":"использование_svg_путей","title":"Использование SVG путей","isH3":true,"content":"<p>Ещё одна мощная функция нового Canvas <code>Path2D</code> API использует данные пути SVG, <a href=\"/en-US/docs/Web/SVG/Tutorial/Paths\">SVG path data</a>, для инициализации путей на вашем холсте. Это может позволить вам передавать данные пути и повторно использовать их как в SVG, так и в холсте.</p>\n\n<p>Путь перемещается в точку (<code>M10 10</code>), а затем горизонтально перемещается на 80 пунктов вправо (<code>h 80</code>), затем на 80 пунктов вниз (<code>v 80</code>), затем на 80 пунктов влево (<code>h -80</code>), а затем обратно на start (<code>z</code>). <br>\n Этот пример можно увидеть на странице  <a href=\"/en-US/docs/Web/API/Path2D/Path2D#using_svg_paths\"><code>Path2D</code> constructor</a>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js; notranslate\"><code><span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Path2D</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"M10 10 h 80 v 80 h -80 Z\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<div id=\"sect17\"><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">Следующая статья  »</a></li>\n</ul></div>"}}],"toc":[{"text":"Сетка","id":"сетка"},{"text":"Рисование прямоугольников","id":"рисование_прямоугольников"},{"text":"Рисование контуров (path)","id":"рисование_контуров_path"},{"text":"Path2D объекты","id":"path2d_объекты"}],"summary":"\nТеперь, установив наше окружение canvas, мы можем погрузиться в детали того, как рисовать в canvas. К концу этой статьи, вы научитесь рисовать прямоугольники, треугольники, линии, дуги и кривые, при условии что вы хорошо знакомы с основными геометрическими фигурами. Работа с путями весьма важна, когда рисуете объекты на canvas и мы увидим как это может быть сделано.\n","popularity":0.0019,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Drawing shapes with canvas","locale":"en-US","native":"English (US)"},{"title":"Dibujando formas con canvas","locale":"es","native":"Español"},{"title":"Dessiner des formes avec le canevas","locale":"fr","native":"Français"},{"title":"キャンバスでの図形の描画","locale":"ja","native":"日本語"},{"title":"캔버스(canvas)를 이용한 도형 그리기","locale":"ko","native":"한국어"},{"title":"Desenhando formas com canvas","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"使用 canvas 来绘制图形","locale":"zh-CN","native":"中文 (简体)"},{"title":"繪製圖形","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/api/canvas_api/tutorial/drawing_shapes","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/canvas_api/tutorial/drawing_shapes/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Canvas_API","title":"Canvas"},{"uri":"/ru/docs/Web/API/Canvas_API/Tutorial","title":"Руководство по Canvas"},{"uri":"/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes","title":"Рисование фигур с помощью canvas"}],"pageTitle":"Рисование фигур с помощью canvas - Интерфейсы веб API | MDN","noIndexing":false}}