{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Transformations","mdn_url":"/ru/docs/Web/API/Canvas_API/Tutorial/Transformations","locale":"ru","native":"Русский","hasMathML":true,"sidebarHTML":"\n <ol>\n  <li><a href=\"/ru/docs/Web/API/Canvas_API\"><strong>Canvas API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Руководство по Canvas</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">Базовое использование</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">Рисование фигур</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">Применение стилей и цветов</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Drawing_text\">Рисование текста</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Using_images\">Использование изображений</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Transformations\">Трансформации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Compositing\">Композиция и обрезка</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">Простые анимации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">Расширенные анимации</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">Манипуляция пикселями</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">Оптимизация canvas</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Finale\">Заключение</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Примеры</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/A_basic_ray-caster\">Простой излучатель лучей</a></li>\n        <li><a href=\"/ru/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Манипяция видео с помощью canvas</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Интерфейсы</summary>\n      <ol>\n        <li><a href=\"/ru/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li>\n        <li><a href=\"/ru/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code> <small>(en-US)</small></a></li>\n        <li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ru/docs/MDN\">Документация:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Внести свой вклад</summary>\n      <ol>\n        <li><a href=\"/ru/docs/MDN\">Проект MDN</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"> <ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Using_images\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Compositing\">Следующая статья  »</a></li>\n</ul></div>\n\n<div class=\"summary\" id=\"sect2\">Ранее в этом уроке мы узнали о  <a href=\"https://translate.googleusercontent.com/translate_c?act=url&amp;depth=1&amp;hl=ru&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com&amp;sl=en&amp;sp=nmt4&amp;tl=ru&amp;u=https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes&amp;usg=ALkJrhiuWce927wE2920fN95Jlcrf1HyUg\" class=\"external\" rel=\" noopener\">сетке холста</a> и <strong>координатном пространстве</strong> .  До сих пор мы использовали только сетку по умолчанию и изменили размер всего холста для наших нужд. При преобразованиях существуют более мощные способы изменения исходных координат в различные положение, поворот сетки и даже масштабирование.</div>"}},{"type":"prose","value":{"id":"saving_and_restoring_state","title":"Сохранение и восстановление состояния","isH3":false,"content":"<p>Прежде чем перейти к методам преобразования, давайте рассмотрим два других метода, которые необходимы, когда вы начинаете создавать все более сложные рисунки.</p>\n\n<dl>\n <dt id=\"save\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/save\" title=\"save()\"><code>save()</code></a></dt>\n <dd>Сохраняет все состояние холста.</dd>\n <dt id=\"restore\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/restore\" title=\"restore()\"><code>restore()</code></a></dt>\n <dd>Восстанавливает последнее сохранённое состояние холста.</dd>\n</dl>\n\n<p>Состояние холста сохраняется в стеке. Каждый раз, когда вызывается метод <code>save()</code>, текущее состояние отрисовки записывается в стек. Состояние отрисовки содержит:</p>\n\n<ul>\n <li>Трансформации, которые были применены (например, <code>translate</code>, <code>rotate</code> and <code>scale</code> – см. ниже).</li>\n <li>Текущее значение следующих атрибутов: <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/strokeStyle\" title=\"strokeStyle\"><code>strokeStyle</code></a>, <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/fillStyle\" title=\"fillStyle\"><code>fillStyle</code></a>, <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/globalAlpha\" title=\"globalAlpha\"><code>globalAlpha</code></a>, <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/lineWidth\" title=\"lineWidth\"><code>lineWidth</code></a>, <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/lineCap\" title=\"lineCap\"><code>lineCap</code></a>, <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/lineJoin\" title=\"lineJoin\"><code>lineJoin</code></a>, <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/miterLimit\" title=\"miterLimit\"><code>miterLimit</code></a>, <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/lineDashOffset\" title=\"lineDashOffset\"><code>lineDashOffset</code></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX\"><code>shadowOffsetX</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY\"><code>shadowOffsetY</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowBlur\"><code>shadowBlur</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowColor\"><code>shadowColor</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\"><code>globalCompositeOperation</code> <small>(en-US)</small></a>, <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/font\" title=\"font\"><code>font</code></a>, <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/textAlign\" title=\"textAlign\"><code>textAlign</code></a>, <a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/textBaseline\" title=\"textBaseline\"><code>textBaseline</code></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/direction\"><code>direction</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\"><code>imageSmoothingEnabled</code> <small>(en-US)</small></a>.</li>\n <li>Текущее значение границ вырезанного холста (<a href=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing#clipping_paths\">clipping path</a>), которые будут рассматриваться в следующем разделе.</li>\n</ul>\n\n<p>Вы можете вызывать метод <code>save()</code> столько раз, сколько захотите. В то же время, при вызове метода <code>restore()</code> последнее сохранённое состояние будет считано из стека, и все сохранённые настройки будут восстановлены.</p>"}},{"type":"prose","value":{"id":"a_save_and_restore_canvas_state_example","title":"Пример сохранения и восстановления состояния холста","isH3":true,"content":"<p>Здесь показано, как функционирует сохранение в стек состояния отрисовки на примере последовательной отрисовки набора прямоугольников.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// рисуем прямоугольник с настройками по умолчанию</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// сохраняем состояние</span>\n\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#09F'</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// вносим изменения в настройки</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// рисуем прямоугольник с новыми настройками</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// сохраняем состояние</span>\n\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#FFF'</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// вносим изменения в настройки</span>\n  ctx<span class=\"token punctuation\">.</span>globalAlpha <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// рисуем прямоугольник с новыми настройками</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// возвращаемся к предыдущим настройкам</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// рисуем прямоугольник с восстановленными настройками</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// возвращаемся к начальным настройкам</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// рисуем прямоугольник с изначальными настройками</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n\n\n<p>Сначала рисуется большой прямоугольник с настройками по умолчанию. Затем мы сохраняем состояние холста, после чего изменяем цвет заливки. Затем рисуем второй синий прямоугольник меньшего размера и опять сохраняем состояние. Снова изменяем какие-то настройки и рисуем третий полупрозрачный белый прямоугольник.</p>\n\n<p>До сих пор наши действия ничем не отличались от тех, что мы делали в предыдущем разделе. Однако, как только мы сделали первый вызов <code>restore(),</code> последнее сохранённое состояние отрисовки было восстановлено из стека, вернув все сохранённые настройки. Если бы мы не сохранили предыдущее состояние, используя <code>save()</code>, нам бы пришлось менять цвет заливки и настройки прозрачности вручную для возврата к предыдущему состоянию. Для каких-нибудь двух простых свойств это, может быть, сделать не так сложно. Но если таких свойств гораздо больше, это чревато очень быстрым разрастанием кода.</p>\n\n<p>Когда второй вызов <code>restore()</code> сделан, изначальное состояние (то самое, которое было сделано перед первым вызовом <code>save</code>) восстанавливается и последний нарисованный прямоугольник вновь становится чёрным.</p>\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/249/Canvas_savestate.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"A save and restore canvas state example sample\" id=\"frame_a_save_and_restore_canvas_state_example\" width=\"180\" height=\"180\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_save_and_restore_canvas_state_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>"}},{"type":"prose","value":{"id":"translating","title":"Трансляция (смещение)","isH3":false,"content":"<p><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/234/Canvas_grid_translate.png\" style=\"float: right;\" loading=\"lazy\">Первый метод для трансформирования холста <code>translate()</code>. Он используется для перемещения холста в любую точку нашей сетки.</p>\n\n<dl>\n <dt id=\"translatex_y_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/translate\"><code>translate(x, y)</code> <small>(en-US)</small></a></dt>\n <dd>Перемещение холста на сетке. <code>x</code> и <code>y</code> - смещение по горизонтали и вертикали соответственно.</dd>\n</dl>\n\n<p>Неплохая идея - сохранять <code>canvas state</code> перед использованием любых трансформаций. Обычно удобнее использовать метод <code>restore</code>, чем выполнять обратные преобразования, чтобы вернуться к начальному состоянию. Кроме того, если вы выполняете преобразования внутри цикла не используя <code>save</code> и <code>restore</code>, вы рискуете потерять часть рисунка, потому что он был нарисован за пределами края холста.</p>"}},{"type":"prose","value":{"id":"a_translate_example","title":"Пример использования <code>translate</code>","isH3":true,"content":"<p>Этот пример демонстрирует некоторые преимущества при использовании смещения холста. Без использования метода <code>translate()</code> все прямоугольники будут отрисованы в одинаковой позиции (0,0). Метод <code>translate()</code> даёт возможность размещения прямоугольника в любой позиции без изменения параметров функции <code>fillRect()</code>. Это может дать некоторое упрощение для понимания и использования.</p>\n\n<p>Внутри функции <code>draw()</code> мы вызываем <code>fillRect()</code> девять раз, используя два цикла <code>for</code>. Каждый раз мы сохраняем состояние холста, смещаем его, рисуем прямоугольник, а затем восстанавливаем исходное состояние. Заметьте, что <code>fillRect()</code> всегда использует одни и те же параметры, а изменение позиции фигуры осуществляется с помощью <code>translate()</code>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb('</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">51</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span> <span class=\"token operator\">-</span> <span class=\"token number\">51</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', 255)'</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> j <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/9857/translate.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"A translate example sample\" id=\"frame_a_translate_example\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_translate_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>","titleAsText":"Пример использования translate"}},{"type":"prose","value":{"id":"rotating","title":"Поворот","isH3":false,"content":"<p><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/233/Canvas_grid_rotate.png\" style=\"float: right;\" loading=\"lazy\">Второй метод трансформации <code>rotate()</code>. Он используется для поворота нашего холста.</p>\n\n<dl>\n <dt id=\"rotateangle\"><a href=\"/ru/docs/Web/API/CanvasRenderingContext2D/rotate\" title=\"rotate(angle)\"><code>rotate(angle)</code></a></dt>\n <dd>Поворачивает наш холст по часовой стрелке вокруг начальной точки на угол <code>anglе</code> в радианах.</dd>\n</dl>\n\n<p>Центр поворота - всегда начало координат. Для изменения координат центра мы должны сместить холст, используя метод <code>translate()</code>.</p>"}},{"type":"prose","value":{"id":"a_rotate_example","title":"Пример использования<code>rotate</code>","isH3":true,"content":"<p>В этом примере мы сначала используем <code>rotate()</code> для поворота прямоугольника относительно начала координат, а затем, используя <code>translate()</code> совместно с <code>rotate()</code> поворачиваем прямоугольник относительно его центра.</p>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p><strong>Памятка</strong>: Углы измеряются в радианах, а не в градусах. Для преобразования единиц используйте следующую формулу: <code>radians = (Math.PI/180)*degrees</code>.</p>\n</div>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// left rectangles, rotate from canvas origin</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// blue rect</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#0095DD'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// grey rect</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#4D4E53'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// right rectangles, rotate from rectangle center</span>\n  <span class=\"token comment\">// draw blue rect</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#0095DD'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// translate to rectangle center</span>\n                          <span class=\"token comment\">// x = x + 0.5 * width</span>\n                          <span class=\"token comment\">// y = y + 0.5 * height</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// rotate</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// translate back</span>\n\n  <span class=\"token comment\">// draw grey rect</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#4D4E53'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Для поворота прямоугольника относительно его центра мы сначала смещаем начало координат, выполняем поворот, а затем выполняем обратное смещение к точке 0,0, и наконец рисуем прямоугольник.</p>\n\n\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/9859/rotate.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"A rotate example sample\" id=\"frame_a_rotate_example\" width=\"310\" height=\"210\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_rotate_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>","titleAsText":"Пример использованияrotate"}},{"type":"prose","value":{"id":"scaling","title":"Масштабирование","isH3":false,"content":"<p>Следующий метод трансформации холста - scaling. Он используется для растяжения, сжатия и отражения координатной сетки. Он может использоваться для отрисовки растянутых или сжатых по осям фигур и изображений.</p>\n\n<dl>\n <dt id=\"scalex_y_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/scale\"><code>scale(x, y)</code> <small>(en-US)</small></a></dt>\n <dd>Масштабирует координатную сетку холста по горизонтали и вертикали. Оба параметра - вещественные числа. Значения меньше 1.0 уменьшают, а больше 1.0 увеличивают масштаб сетки. Значение 1.0 не изменяет его.</dd>\n</dl>\n\n<p>Используя отрицательные значения вы можете зеркально отразить направление осей. Например, используя <code>translate(0,canvas.height); scale(1,-1);</code> вы получите хорошо известную декартову систему координат с началом в нижнем левом углу.</p>\n\n<p>По умолчанию единица координатной сетки точно соответствует одному пикселю. Если же вы, например, зададите масштабный коэффициент 0.5, то единица сетки будет равна половине пикселя, и нарисованная фигура будет иметь размер в два раза меньше оригинала. Наоборот, если задать масштабный коэффициент 2.0, единица сетки будет соответствовать двум пикселям, а нарисованная фигура станет в два раза больше.</p>"}},{"type":"prose","value":{"id":"a_scale_example","title":"Пример использования <code>scale</code>","isH3":true,"content":"<p>В этом примере мы нарисуем прямоугольники, используя разные масштабные коэффициенты.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// рисуем масштабированный прямоугольник.</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// размещаем текст, отражённый по горизонтали</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> <span class=\"token string\">'48px serif'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MDN'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n\n\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/9861/scale.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"A scale example sample\" id=\"frame_a_scale_example\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_scale_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>","titleAsText":"Пример использования scale"}},{"type":"prose","value":{"id":"transforms","title":"Матричное преобразование","isH3":false,"content":"<p>В заключении рассмотрим метод, который вызывает изменения в соответствии с матрицей преобразования.</p>\n\n<dl>\n <dt id=\"transforma_b_c_d_e_f_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/transform\"><code>transform(a, b, c, d, e, f)</code> <small>(en-US)</small></a></dt>\n <dd><p>Накладывает матрицу преобразования, заданную параметрами, на текущую матрицу. Матрица преобразования задаётся следующим образом: <math><semantics><mrow><mo>[</mo><mtable columnalign=\"center center center\" rowspacing=\"0.5ex\"><mtr><mtd><mi>a</mi></mtd><mtd><mi>c</mi></mtd><mtd><mi>e</mi></mtd></mtr><mtr><mtd><mi>b</mi></mtd><mtd><mi>d</mi></mtd><mtd><mi>f</mi></mtd></mtr><mtr><mtd><mn>0</mn></mtd><mtd><mn>0</mn></mtd><mtd><mn>1</mn></mtd></mtr></mtable><mo>]</mo></mrow><annotation encoding=\"TeX\">\\left[ \\begin{array}{ccc} a &amp; c &amp; e \\\\ b &amp; d &amp; f \\\\ 0 &amp; 0 &amp; 1 \\end{array} \\right]</annotation></semantics></math></p>\n\n <p>If any of the arguments are <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></code> the transformation matrix must be marked as infinite instead of the method throwing an exception.</p>\n</dd></dl>\n\n<p>Параметры функции:</p>\n\n<dl>\n <dt id=\"a_m11\"><code>a (m11)</code></dt>\n <dd>Horizontal scaling.</dd>\n <dt id=\"b_m12\"><em><code>b (m12)</code></em></dt>\n <dd>Horizontal skewing.</dd>\n <dt id=\"c_m21\"><code>c (m21)</code></dt>\n <dd>Vertical skewing.</dd>\n <dt id=\"d_m22\"><code>d (m22)</code></dt>\n <dd>Vertical scaling.</dd>\n <dt id=\"e_dx\"><code>e (dx)</code></dt>\n <dd>Horizontal moving.</dd>\n <dt id=\"f_dy\"><code>f (dy)</code></dt>\n <dd>Vertical moving.</dd>\n <dt id=\"settransforma_b_c_d_e_f_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\"><code>setTransform(a, b, c, d, e, f)</code> <small>(en-US)</small></a></dt>\n <dd>Сбрасывает текущую матрицу преобразования, а затем вызывает<code>transform()</code> в соответствии с аргументами.</dd>\n <dt id=\"resettransform_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/resetTransform\"><code>resetTransform()</code> <small>(en-US)</small></a></dt>\n <dd>Сбрасывает текущую матрицу преобразования к значению по умолчанию. Аналогично вызову <code>ctx.setTransform(1, 0, 0, 1, 0, 0);</code></dd>\n</dl>"}},{"type":"prose","value":{"id":"пример_использования_transform_и_settransform","title":"Пример использования <code>transform</code> и <code>setTransform</code>","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> sin <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> cos <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    c <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span> <span class=\"token operator\">/</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb('</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>cos<span class=\"token punctuation\">,</span> sin<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>sin<span class=\"token punctuation\">,</span> cos<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">setTransform</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgba(255, 128, 255, 0.5)'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n\n\n<p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"https://mdn.mozillademos.org/files/255/Canvas_transform.png\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"Пример использования transform и setTransform sample\" id=\"frame_пример_использования_transform_и_settransform\" width=\"230\" height=\"280\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80_%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F_transform_%D0%B8_settransform.html\" loading=\"lazy\"></iframe></td></tr></tbody></table></p>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Using_images\">« Предыдущая статья</a></li>\n    <li><a class=\"button minimal\" href=\"/ru/docs/Web/API/Canvas_API/Tutorial/Compositing\">Следующая статья  »</a></li>\n</ul><p></p>","titleAsText":"Пример использования transform и setTransform"}}],"toc":[{"text":"Сохранение и восстановление состояния","id":"saving_and_restoring_state"},{"text":"Трансляция (смещение)","id":"translating"},{"text":"Поворот","id":"rotating"},{"text":"Масштабирование","id":"scaling"},{"text":"Матричное преобразование","id":"transforms"}],"summary":"Ранее в этом уроке мы узнали о  сетке холста и координатном пространстве .  До сих пор мы использовали только сетку по умолчанию и изменили размер всего холста для наших нужд. При преобразованиях существуют более мощные способы изменения исходных координат в различные положение, поворот сетки и даже масштабирование.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Transformations","locale":"en-US","native":"English (US)"},{"title":"Transformations","locale":"fr","native":"Français"},{"title":"座標変換","locale":"ja","native":"日本語"},{"title":"변형 (transformations)","locale":"ko","native":"한국어"},{"title":"变形 Transformations","locale":"zh-CN","native":"中文 (简体)"},{"title":"變形效果","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/api/canvas_api/tutorial/transformations","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/canvas_api/tutorial/transformations/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Canvas_API","title":"Canvas"},{"uri":"/ru/docs/Web/API/Canvas_API/Tutorial","title":"Руководство по Canvas"},{"uri":"/ru/docs/Web/API/Canvas_API/Tutorial/Transformations","title":"Transformations"}],"pageTitle":"Transformations - Интерфейсы веб API | MDN","noIndexing":false}}