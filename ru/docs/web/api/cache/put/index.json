{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Cache.put()","mdn_url":"/ru/docs/Web/API/Cache/put","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/ru/docs/Web/API/Cache\"><code>Cache</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Методы</summary><ol><li><a href=\"/ru/docs/Web/API/Cache/add\"><code>add()</code></a></li><li><a href=\"/ru/docs/Web/API/Cache/addAll\"><code>addAll()</code></a></li><li><a href=\"/ru/docs/Web/API/Cache/delete\"><code>delete()</code></a></li><li><a href=\"/ru/docs/Web/API/Cache/keys\"><code>keys()</code></a></li><li><a href=\"/ru/docs/Web/API/Cache/match\"><code>match()</code></a></li><li><a href=\"/ru/docs/Web/API/Cache/matchAll\"><code>matchAll()</code></a></li><li><em><code>put()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Похожие страницы для Service Workers API</summary><ol><li><a href=\"/ru/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Client\"><code>Client</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/ru/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/ru/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ru/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>Это экспериментальная технология</strong><br>Так как спецификация этой технологии ещё не стабилизировалась, смотрите <a href=\"#browser_compatibility\">таблицу совместимости</a> по поводу использования в различных браузерах. Также заметьте, что синтаксис и поведение экспериментальной технологии может измениться в будущих версиях браузеров, вслед за изменениями спецификации.</p></div><p></p>\n\n<p>Метод <strong><code>put()</code></strong> интерфейса <a href=\"/ru/docs/Web/API/Cache\"><code>Cache</code></a> позволяет добавлять пары ключ/значение в текущий объект <a href=\"/ru/docs/Web/API/Cache\"><code>Cache</code></a>.</p>\n\n<p>Often, you will just want to <a href=\"/ru/docs/Web/API/fetch\" title=\"fetch()\"><code>fetch()</code></a> one or more requests, then add the result straight to your cache. In such cases you are better off using <a href=\"/ru/docs/Web/API/Cache/add\" title=\"Cache.add()\"><code>Cache.add()</code></a>/<a href=\"/ru/docs/Web/API/Cache/addAll\" title=\"Cache.addAll()\"><code>Cache.addAll()</code></a>, as they are shorthand functions for one or more of these operations.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bad response status'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n</code></pre></div>\n\n<div class=\"note notecard\" id=\"sect2\">\n<p><strong>Note</strong>: <code>put()</code> will overwrite any key/value pair previously stored in the cache that matches the request.</p>\n</div>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Note</strong>: <a href=\"/ru/docs/Web/API/Cache/add\"><code>Cache.add</code></a>/<a href=\"/ru/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a> do not cache responses with <code>Response.status</code> values that are not in the 200 range, whereas <a href=\"/ru/docs/Web/API/Cache/put\" aria-current=\"page\"><code>Cache.put</code></a> lets you store any request/response pair. As a result, <a href=\"/ru/docs/Web/API/Cache/add\"><code>Cache.add</code></a>/<a href=\"/ru/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a> can't be used to store opaque responses, whereas <a href=\"/ru/docs/Web/API/Cache/put\" aria-current=\"page\"><code>Cache.put</code></a> can.</p>\n</div>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Note</strong>: Initial Cache implementations (in both Blink and Gecko) resolve <a href=\"/ru/docs/Web/API/Cache/add\"><code>Cache.add</code></a>, <a href=\"/ru/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a>, and <a href=\"/ru/docs/Web/API/Cache/put\" aria-current=\"page\"><code>Cache.put</code></a> promises when the response body is fully written to the disk.  More recent spec versions state that the browser can resolve the promise as soon as the entry is recorded in the database even if the response body is still streaming in.</p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// request/response pair has been added to the cache</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n <dt id=\"request\">request</dt>\n <dd>The <a href=\"/ru/docs/Web/API/Request\"><code>Request</code></a> you want to add to the cache.</dd>\n <dt id=\"response\">response</dt>\n <dd>The <a href=\"/ru/docs/Web/API/Response\"><code>Response</code></a> you want to match up to the request.</dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with void.</p>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p><strong>Note</strong>: The promise will reject with a <code>TypeError</code> if the URL scheme is not <code>http</code> or <code>https</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>This example is from the MDN <a href=\"https://github.com/mdn/sw-test/\" class=\"external\" rel=\" noopener\">sw-test example</a> (see <a href=\"https://mdn.github.io/sw-test/\" class=\"external\" rel=\" noopener\">sw-test running live</a>). Here we wait for a <a href=\"/ru/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> to fire. We construct a custom response like so:</p>\n\n<ol>\n <li>Check whether a match for the request is found in the <a href=\"/ru/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a> using <a href=\"/ru/docs/Web/API/CacheStorage/match\" title=\"CacheStorage.match()\"><code>CacheStorage.match()</code></a>. If so, serve that.</li>\n <li>If not, open the <code>v1</code> cache using <code>open()</code>, put the default network request in the cache using <a href=\"/ru/docs/Web/API/Cache/put\" title=\"Cache.put()\" aria-current=\"page\"><code>Cache.put()</code></a> and return a clone of the default network request using <code>return response.clone()</code>. Clone is needed because <code>put()</code> consumes the response body.</li>\n <li>If this fails (e.g., because the network is down), return a fallback response.</li>\n</ol>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> response<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cachedResponse <span class=\"token operator\">=</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  response <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n  caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Specification</th>\n   <th scope=\"col\">Status</th>\n   <th scope=\"col\">Comment</th>\n  </tr>\n  <tr>\n   <td><a href=\"https://w3c.github.io/ServiceWorker/#dom-cache-put\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"ru\">Определение 'Cache: put' в этой спецификации.</small></a></td>\n   <td><span class=\"spec-wd\">Рабочий черновик</span></td>\n   <td>Initial definition.</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Cache.put","dataURL":"/ru/docs/Web/API/Cache/put/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/ServiceWorker_API/Using_Service_Workers\">Using Service Workers</a></li>\n <li><a href=\"/ru/docs/Web/API/Cache\"><code>Cache</code></a></li>\n <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/caches\"><code>WorkerGlobalScope.caches</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"Метод put() интерфейса Cache позволяет добавлять пары ключ/значение в текущий объект Cache.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Cache.put()","locale":"en-US","native":"English (US)"},{"title":"Cache.put()","locale":"fr","native":"Français"},{"title":"Cache.put()","locale":"ja","native":"日本語"},{"title":"Cache.put()","locale":"ko","native":"한국어"},{"title":"Cache.put()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/api/cache/put","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/cache/put/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Cache","title":"Cache"},{"uri":"/ru/docs/Web/API/Cache/put","title":"Cache.put()"}],"pageTitle":"Cache.put() - Интерфейсы веб API | MDN","noIndexing":false}}