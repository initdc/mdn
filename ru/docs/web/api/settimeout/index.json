{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"WindowTimers.setTimeout()","mdn_url":"/ru/docs/Web/API/setTimeout","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/setTimeout\"><code>SetTimeout</code></a></strong></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>"}},{"type":"prose","value":{"id":"summary","title":"Краткое изложение","isH3":false,"content":"<p>Вызов функции или выполнение фрагмента кода после указанной задержки.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Синтаксис","isH3":false,"content":"<pre class=\"syntaxbox notranslate\"><em>var timeoutID</em> = window.setTimeout(<em>func</em>, [, <em>delay</em>, <em>param1</em>, <em>param2</em>, ...]);\n<em>var timeoutID</em> = window.setTimeout(<em>code </em>[, <em>delay]</em>);\n</pre>\n\n<p>где</p>\n\n<ul>\n <li><code>timeoutID -</code> это <em>числовой</em> ID, который может быть использован позже с <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/clearTimeout\"><code>window.clearTimeout()</code> <small>(en-US)</small></a>.</li>\n <li><code>func -</code> это <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\" title=\"en-US/docs/Core_JavaScript_1.5_Reference/Global_Objects/Function\">функция</a>, которую требуется вызвать после <code>delay</code> миллисекунд.</li>\n <li><code>code</code> - в альтернативном варианте применения это строка, содержащая код, который вы хотите выполнить после <code>delay</code> миллисекунд (использовать этот метод <strong>не рекомендуется</strong> по тем же причинам, что и <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#don't_use_eval!\" title=\"en-US/docs/Core JavaScript 1.5 Reference/Global Functions/Eval#Don't use eval!\">eval()</a>)</li>\n <li><code>delay</code>  <span class=\"badge inline optional\">Необязательный</span> -  задержка в миллисекундах (тысячных долях секунды), после которой будет выполнен вызов функции. Реальная задержка может быть больше; см. <a href=\"#notes\">Notes</a> ниже.</li>\n</ul>\n\n<p>Необходимо принять во внимание, что передача дополнительных параметров функции в первом варианте не работает в Internet Explorer 9 и ниже. Для использования этой функциональности в таких браузерах, необходимо использовать код для совместимости (см. раздел <a href=\"#аргументы_колбэк-функции\">Аргументы колбэк-функции</a>).</p>\n\n<div class=\"warning notecard\" id=\"sect2\"><strong>Important:</strong> Prior to Gecko 13 (Firefox 13.0 / Thunderbird 13.0 / SeaMonkey 2.10), Gecko passed an extra parameter to the callback routine, indicating the \"actual lateness\" of the timeout in milliseconds. This non-standard parameter is no longer passed.</div>"}},{"type":"prose","value":{"id":"example","title":"Пример","isH3":false,"content":"<p>В следующем примере на веб странице создаются две простые кнопки, к которым привязываются действия setTimeout и clearTimeout. Нажатие на первую кнопку установит таймаут, который вызовет диалоговое окно через две секунды. Также будет сохранён id для clearTimeout. Таймаут также может быть отменён по нажатию на вторую кнопку.</p>"}},{"type":"prose","value":{"id":"html_content","title":"HTML Content","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Live Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">delayedAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Show an alert box after two seconds<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">clearAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Cancel alert before it happens<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript_content","title":"JavaScript Content","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> timeoutID<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">delayedAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  timeoutID <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>slowAlert<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">slowAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"That was really slow!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">clearAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeoutID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p><iframe class=\"sample-code-frame\" title=\"Example sample\" id=\"frame_example\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/API/setTimeout/_sample_.example.html\" loading=\"lazy\"></iframe></p>\n\n<p>Смотрите также <a href=\"/en-US/docs/Web/API/clearTimeout#example\" title=\"en-US/docs/DOM/window.clearTimeout#Example\"><code>пример clearTimeout()</code></a>.</p>"}},{"type":"prose","value":{"id":"аргументы_колбэк-функции","title":"Аргументы колбэк-функции","isH3":false,"content":"<p>Если вам нужно передать аргумент в вашу callback функцию, но нужно, чтобы это работало в Internet Explorer 9 и ниже, который не поддерживает передачу дополнительных параметров (ни с <code>setTimeout()</code> или <code>setInterval()</code>), то вы можете прописать специальный код для <em>совместимости с IE, </em>вставив этот код в начало ваших скриптов, который включит функцию передачи стандартных параметров HTML5 в Internet Explorer для обоих таймеров.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\\\n|*|\n|*|  IE-specific polyfill which enables the passage of arbitrary arguments to the\n|*|  callback functions of JavaScript timers (HTML5 standard syntax).\n|*|\n|*|  https://developer.mozilla.org/en-US/docs/DOM/window.setInterval\n|*|\n|*|  Syntax:\n|*|  var timeoutID = window.setTimeout(func, delay, [param1, param2, ...]);\n|*|  var timeoutID = window.setTimeout(code, delay);\n|*|  var intervalID = window.setInterval(func, delay[, param1, param2, ...]);\n|*|  var intervalID = window.setInterval(code, delay);\n|*|\n\\*/</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>all <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>setTimeout<span class=\"token punctuation\">.</span>isPolyfill<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> __nativeST__ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>setTimeout<span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setTimeout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>vCallback<span class=\"token punctuation\">,</span> nDelay <span class=\"token comment\">/*, argumentToPass1, argumentToPass2, etc. */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> aArgs <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">__nativeST__</span><span class=\"token punctuation\">(</span>vCallback <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">vCallback</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> aArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> vCallback<span class=\"token punctuation\">,</span> nDelay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span>setTimeout<span class=\"token punctuation\">.</span>isPolyfill <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>all <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>setInterval<span class=\"token punctuation\">.</span>isPolyfill<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> __nativeSI__ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>setInterval<span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setInterval</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>vCallback<span class=\"token punctuation\">,</span> nDelay <span class=\"token comment\">/*, argumentToPass1, argumentToPass2, etc. */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> aArgs <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">__nativeSI__</span><span class=\"token punctuation\">(</span>vCallback <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">vCallback</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> aArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> vCallback<span class=\"token punctuation\">,</span> nDelay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span>setInterval<span class=\"token punctuation\">.</span>isPolyfill <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"правка_только_для_ie","title":"Правка только для IE","isH3":false,"content":"<p>If you want a completely unobtrusive hack for every other mobile or desktop browser, including IE 9 and below, you can either use JavaScript conditional comments:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*@cc_on\n  // conditional IE &lt; 9 only fix\n  @if (@_jscript_version &lt;= 6)\n  (function(f){\n     window.setTimeout =f(window.setTimeout);\n     window.setInterval =f(window.setInterval);\n  })(function(f){return function(c,t){var a=[].slice.call(arguments,2);return f(function(){c.apply(this,a)},t)}});\n  @end\n@*/</span>\n</code></pre></div>\n\n<p>Или используйте очень чистый подход, основанный на условном свойстве IE HTML:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!--[if lte IE 9]&gt;&lt;script&gt;\n(function(f){\nwindow.setTimeout =f(window.setTimeout);\nwindow.setInterval =f(window.setInterval);\n})(function(f){return function(c,t){\nvar a=[].slice.call(arguments,2);return f(function(){c.apply(this,a)},t)}\n});\n&lt;/script&gt;&lt;![endif]--&gt;</span>\n</code></pre></div>\n\n<p>Another possibility is to use an anonymous function to call your callback, but this solution is a bit more expensive. Example:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> intervalID <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"three\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>Yet another possibility is to use <a href=\"/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\" title=\"/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\">function's bind</a>. Example:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"проблема_с_this","title":"Проблема с \"<code>this</code>\"","isH3":false,"content":"<p>Когда вы передаёте метод в <code>setTimeout()</code> (или в любую другую функцию, если на то пошло), то вызов будет осуществлён с неправильным значением <code>this</code>. Эта проблема разъясняется детально в <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/this#method_binding\" title=\"en-US/docs/Core_JavaScript_1.5_Reference/Operators/Special_Operators/this_Operator#Method_binding\">JavaScript reference</a>.</p>","titleAsText":"Проблема с \"this\""}},{"type":"prose","value":{"id":"объяснение","title":"Объяснение","isH3":true,"content":"<p>Code executed by <code>setTimeout()</code> is run in a separate execution context to the function from which it was called. As a consequence, the <code>this</code> keyword for the called function will be set to the <code>window</code> (or <code>global</code>) object; it will not be the same as the <code>this</code> value for the function that called <code>setTimeout</code>. See the following example:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"zero\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">myMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>sProperty<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\"</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\"</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"[object Window]\" after 1 second</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"undefined\" after 1.5 seconds</span>\n<span class=\"token comment\">// let's try to pass the 'this' object</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error: \"NS_ERROR_XPC_BAD_OP_ON_WN_PROTO: Illegal operation on WrappedNative prototype object\"</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// same error</span></code></pre></div>\n\n<p>Как видите, нет способов передать объект <code>this</code> в колбэк-функцию..</p>"}},{"type":"prose","value":{"id":"возможное_решение","title":"Возможное решение","isH3":true,"content":"<p>A possible way to solve the \"<code>this</code>\" problem is to replace the two native <code>setTimeout()</code> or <code>setInterval()</code> global functions with two <em>non-native</em> ones which will enable their invocation through the <a href=\"en-US/docs/JavaScript/Reference/Global_Objects/Function/call\" title=\"en-US/docs/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call</code></a> method. The following example shows a possible replacement:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Enable the passage of the 'this' object through the JavaScript timers</span>\n\n<span class=\"token keyword\">var</span> __nativeST__ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>setTimeout<span class=\"token punctuation\">,</span> __nativeSI__ <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>setInterval<span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setTimeout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>vCallback<span class=\"token punctuation\">,</span> nDelay <span class=\"token comment\">/*, argumentToPass1, argumentToPass2, etc. */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> oThis <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> aArgs <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">__nativeST__</span><span class=\"token punctuation\">(</span>vCallback <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">vCallback</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>oThis<span class=\"token punctuation\">,</span> aArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> vCallback<span class=\"token punctuation\">,</span> nDelay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">setInterval</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>vCallback<span class=\"token punctuation\">,</span> nDelay <span class=\"token comment\">/*, argumentToPass1, argumentToPass2, etc. */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> oThis <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> aArgs <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">__nativeSI__</span><span class=\"token punctuation\">(</span>vCallback <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">vCallback</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>oThis<span class=\"token punctuation\">,</span> aArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> vCallback<span class=\"token punctuation\">,</span> nDelay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<div class=\"note notecard\" id=\"sect3\"><strong>Note:</strong> These two replacements will also enable the HTML5 standard passage of arbitrary arguments to the callback functions of timers in IE. So they can be used as polyfills also. See the <a href=\"#аргументы_колбэк-функции\">Callback arguments</a> paragraph.</div>\n\n<p>Новая тестируемая особенность:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"zero\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">myMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>sProperty<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>alert<span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// the standard use of setTimeout and setInterval is preserved, but...</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\" after 2 seconds</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"two\" after 2.5 seconds</span>\n</code></pre></div>\n\n<p>Это не нативные решения <em>ad hoc</em> для этой проблемы.</p>\n\n<div class=\"note notecard\" id=\"sect4\"><strong>Note:</strong> JavaScript 1.8.5 introduces the <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\" title=\"en-US/docs/JavaScript/Reference/Global Objects/Function/bind\">Function.prototype.bind()</a></code> method, which lets you specify the value that should be used as <code>this</code> for all calls to a given function. This lets you easily bypass problems where it's unclear what this will be, depending on the context from which your function was called.</div>"}},{"type":"prose","value":{"id":"замечания","title":"Замечания","isH3":false,"content":"<p>Отложенное выполнение кода можно отменить, используя <code><a href=\"/en-US/docs/Web/API/clearTimeout\" title=\"en-US/docs/DOM/window.clearTimeout\">window.clearTimeout()</a></code>. Если функция должна вызываться неоднократно (например, каждые N миллисекунд), необходимо использовать <code><a href=\"/en-US/docs/Web/API/setInterval\" title=\"en-US/docs/DOM/window.setInterval\">window.setInterval()</a></code>.</p>\n\n<p>Важно заметить, что функция или код не могут быть выполнены, пока не завершится поток, вызвавший <code>setTimeout()</code>.</p>"}},{"type":"prose","value":{"id":"passing_string_literals","title":"Passing string literals","isH3":true,"content":"<p>Передача строки вместо функции в <code>setTimeout()</code> сопряжена с теми же опасностями, что и использование <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#don.27t_use_eval.21\" title=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/eval\">eval</a>. </code></p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Правильно</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Неправильно</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert(\\\"Hello World!\\\");\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre></div>\n\n<p>String literals are evaluated in the global context, so local symbols in the context where <code>setTimeout()</code> was called will not be available when the string is evaluated as code.</p>"}},{"type":"prose","value":{"id":"минимальная_максимальная_задержка_и_вложенность_таймаута","title":"Минимальная/ максимальная задержка и вложенность таймаута","isH3":true,"content":"<p><a class=\"external\" href=\"https://code.google.com/p/chromium/issues/detail?id=792#c10\" rel=\" noopener\">Historically</a> browsers implement <code>setTimeout()</code> \"clamping\": successive <code>setTimeout()</code> calls with <code>delay</code> smaller than the \"minimum delay\" limit are forced to use at least the minimum delay. The minimum delay, <code>DOM_MIN_TIMEOUT_VALUE</code>, is 4 ms (stored in a preference in Firefox: <code>dom.min_timeout_value</code>), with a <code>DOM_CLAMP_TIMEOUT_NESTING_LEVEL</code> of 5ms.</p>\n\n<p>In fact, 4ms is <a class=\"external\" href=\"https://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers\" rel=\" noopener\">specified by the HTML5 spec</a> and is consistent across browsers released in 2010 and onward. Prior to (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), the minimum timeout value for nested timeouts was 10 ms.</p>\n\n<p>In addition to \"clamping\", the timeout can also fire later when the page (or the OS/browser itself) is busy with other tasks.</p>\n\n<p>To implement a 0 ms timeout in a modern browser, you can use <a href=\"/ru/docs/Web/API/Window/postMessage\"><code>window.postMessage()</code></a> as <a class=\"external\" href=\"https://dbaron.org/log/20100309-faster-timeouts\" rel=\" noopener\">described here</a>.</p>\n\n<p>Browsers including Internet Explorer, Chrome, Safari, and Firefox store the delay as a 32-bit signed Integer internally. This causes an Integer overflow when using delays larger than 2147483647, resulting in the timeout being executed immediately.</p>\n\n<h4 id=\"неактивные_вкладки\">Неактивные вкладки</h4>\n\n<p>In (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2) and Chrome 11, timeouts are clamped to firing no more often than once per second (1000ms) in inactive tabs; see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=633421\" class=\"external\" rel=\" noopener\">баг&nbsp;633421</a> for more information about this in Mozilla or <a class=\"external\" href=\"https://crbug.com/66078\" rel=\" noopener\">crbug.com/66078</a> for details about this in Chrome.</p>"}},{"type":"browser_compatibility","value":{"title":"Совместимость с браузерами","id":"совместимость_с_браузерами","isH3":false,"query":"api.setTimeout","dataURL":"/ru/docs/Web/API/setTimeout/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"specification","title":"Спецификация","isH3":false,"content":"<p>Part of DOM level 0, as specified in <a class=\"external\" href=\"https://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#timers\" rel=\" noopener\">HTML5</a>.</p>"}},{"type":"prose","value":{"id":"see_also","title":"Также интересно","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/JavaScript/Timers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">JavaScript timers</a></li>\n <li><a href=\"/en-US/docs/Mozilla/JavaScript_code_modules/Timer.jsm\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">Timer.jsm</a></li>\n <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/setInterval\"><code>window.setInterval</code> <small>(en-US)</small></a></li>\n <li><a href=\"/ru/docs/Web/API/window/requestAnimationFrame\"><code>window.requestAnimationFrame</code></a></li>\n <li><a href=\"/en-US/docs/JavaScript/Timers/Daemons\" title=\"This is a link to an unwritten page\" class=\"page-not-created\"><em>Daemons</em> management</a></li>\n</ul>"}}],"toc":[{"text":"Краткое изложение","id":"summary"},{"text":"Синтаксис","id":"syntax"},{"text":"Пример","id":"example"},{"text":"Аргументы колбэк-функции","id":"аргументы_колбэк-функции"},{"text":"Правка только для IE","id":"правка_только_для_ie"},{"text":"Проблема с \"<code>this</code>\"","id":"проблема_с_this"},{"text":"Замечания","id":"замечания"},{"text":"Совместимость с браузерами","id":"совместимость_с_браузерами"},{"text":"Спецификация","id":"specification"},{"text":"Также интересно","id":"see_also"}],"summary":"Вызов функции или выполнение фрагмента кода после указанной задержки.","popularity":0.0036,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"setTimeout()","locale":"en-US","native":"English (US)"},{"title":"WindowOrWorkerGlobalScope.setTimeout","locale":"es","native":"Español"},{"title":"setTimeout()","locale":"fr","native":"Français"},{"title":"setTimeout()","locale":"ja","native":"日本語"},{"title":"setTimeout()","locale":"ko","native":"한국어"},{"title":"window.setTimeout","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/api/settimeout","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/settimeout/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/setTimeout","title":"WindowTimers.setTimeout()"}],"pageTitle":"WindowTimers.setTimeout() - Интерфейсы веб API | MDN","noIndexing":false}}