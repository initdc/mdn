{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"MediaSource","mdn_url":"/ru/docs/Web/API/MediaSource","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Media_Source_Extensions_API\">Media Source Extensions API <small>(en-US)</small></a></strong></li><li><strong><a href=\"/ru/docs/Web/API/MediaSource\"><code>MediaSource</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Конструктор</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/MediaSource\"><code>MediaSource()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Свойства</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/activeSourceBuffers\"><code>activeSourceBuffers</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/duration\"><code>duration</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/readyState\"><code>readyState</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/sourceBuffers\"><code>sourceBuffers</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Методы</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/addSourceBuffer\"><code>addSourceBuffer()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/clearLiveSeekableRange\"><code>clearLiveSeekableRange()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/endOfStream\"><code>endOfStream()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/isTypeSupported\"><code>isTypeSupported()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/removeSourceBuffer\"><code>removeSourceBuffer()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\"><code>setLiveSeekableRange()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Наследование:</summary><ol><li><a href=\"/ru/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Похожие страницы для Media Source Extensions</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality\"><code>HTMLVideoElement.getVideoPlaybackQuality()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code> <small>(en-US)</small></a></li><li><a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>TextTrack.sourceBuffer</code></a></li><li><a href=\"/ru/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/VideoTrack/sourceBuffer\"><code>VideoTrack.sourceBuffer</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>Это экспериментальная технология</strong><br>Так как спецификация этой технологии ещё не стабилизировалась, смотрите <a href=\"#browser_compatibility\">таблицу совместимости</a> по поводу использования в различных браузерах. Также заметьте, что синтаксис и поведение экспериментальной технологии может измениться в будущих версиях браузеров, вслед за изменениями спецификации.</p></div><p></p>\n\n<p><strong><code>MediaSource</code></strong> – это интерфейс <a href=\"/en-US/docs/Web/API/Media_Source_Extensions_API\">Media Source Extensions API</a> для предоставления интерактивного источника медиаданных объектам типа <a href=\"/ru/docs/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a>.</p>"}},{"type":"prose","value":{"id":"конструктор","title":"Конструктор","isH3":false,"content":"<dl>\n <dt id=\"mediasource_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/MediaSource\"><code>MediaSource()</code> <small>(en-US)</small></a></dt>\n <dd>Создаёт и возвращает новый объект <code>MediaSource</code> не имеющий подключённых буферов данных.</dd>\n</dl>"}},{"type":"prose","value":{"id":"свойства","title":"Свойства","isH3":false,"content":"<p><em>Наследует свойства родительского интерфейса , <a href=\"/ru/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n\n<dl>\n <dt id=\"mediasource.sourcebuffers_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/sourceBuffers\"><code>MediaSource.sourceBuffers</code> <small>(en-US)</small></a> <span title=\"Это значение изменять нельзя.\" class=\"badge inline readonly\">Только для чтения </span></dt>\n <dd>Возвращает объект типа <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code> <small>(en-US)</small></a>  содержащий список объектов типа <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code> <small>(en-US)</small></a> , связанных непосредственно с текущим <code>MediaSource</code>.</dd>\n <dt id=\"mediasource.activesourcebuffers_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/activeSourceBuffers\"><code>MediaSource.activeSourceBuffers</code> <small>(en-US)</small></a> <span title=\"Это значение изменять нельзя.\" class=\"badge inline readonly\">Только для чтения </span></dt>\n <dd>Возвращает объект типа <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code> <small>(en-US)</small></a> содержащий подмножество объектов типа <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code> <small>(en-US)</small></a> хранящих в себе другие объекты типа <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>SourceBuffers</code></a> — список объектов, предоставляющих доступ к выбранному видео, доступным аудиодорожкам, текстовым данным и тд.</dd>\n <dt id=\"mediasource.readystate_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/readyState\"><code>MediaSource.readyState</code> <small>(en-US)</small></a> <span title=\"Это значение изменять нельзя.\" class=\"badge inline readonly\">Только для чтения </span></dt>\n <dd>Возвращает enum, отображающий состояние текущего <code>MediaSource-объекта</code>, будь то отсутствие подключения к медиа-элементу(<code>closed</code>), подключённый и готовый к передаче объектов типа <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code> <small>(en-US)</small></a> (open), или подключённый, но с завершённым потоком <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/endOfStream\"><code>MediaSource.endOfStream()</code> <small>(en-US)</small></a> (<code>ended</code>.)</dd>\n <dt id=\"mediasource.duration_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/duration\"><code>MediaSource.duration</code> <small>(en-US)</small></a></dt>\n <dd>Возвращает или устанавливает продолжительность предоставляемых медиаданных.</dd>\n</dl>\n\n<dl>\n</dl>\n\n<dl>\n</dl>"}},{"type":"prose","value":{"id":"методы","title":"Методы","isH3":false,"content":"<p><em>Наследует свойства родительского интерфейса, <a href=\"/ru/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n\n<dl>\n <dt id=\"mediasource.addsourcebuffer_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/addSourceBuffer\"><code>MediaSource.addSourceBuffer()</code> <small>(en-US)</small></a></dt>\n <dd>Создаёт новый объект типа <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code> <small>(en-US)</small></a>, с указанным  MIME-типом и добавляет в список <code>MediaSource</code>'s <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>SourceBuffers</code></a>.</dd>\n <dt id=\"mediasource.removesourcebuffer_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/removeSourceBuffer\"><code>MediaSource.removeSourceBuffer()</code> <small>(en-US)</small></a></dt>\n <dd>Удаляет указанный <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code> <small>(en-US)</small></a> из списка <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>SourceBuffers</code></a>, связанного с текущим <code>MediaSource-объектом</code>.</dd>\n <dt id=\"mediasource.endofstream_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/endOfStream\"><code>MediaSource.endOfStream()</code> <small>(en-US)</small></a></dt>\n <dd>Сигнализирует об окончании потока.</dd>\n <dt id=\"sect2\">\n <h2 id=\"статичные_методы\">Статичные методы</h2>\n </dt>\n <dt id=\"mediasource.istypesupported_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaSource/isTypeSupported\"><code>MediaSource.isTypeSupported()</code> <small>(en-US)</small></a></dt>\n <dd>Возвращает значение <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code> <small>(en-US)</small></a>, поясняющее, поддерживается ли клиентом полученный MIME-тип  — если это так, то можно успешно создать объект типа <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code> <small>(en-US)</small></a> для этого MIME-типа.</dd>\n</dl>"}},{"type":"prose","value":{"id":"примеры","title":"Примеры","isH3":false,"content":"<p>Нижеприведённый простой пример подгружает видео фрагмент за фрагментом так скоро, как может, воспроизводя их \"как только так сразу\". Этот пример был написан Nick Desaulniers и может быть <a href=\"http://nickdesaulniers.github.io/netfix/demo/bufferAll.html\" class=\"external\" rel=\" noopener\">просмотрен здесь в виде демо</a> (также вы можете <a href=\"https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html\" class=\"external\" rel=\" noopener\">загрузить исходный код</a> для дальнейшего изучения.)</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> assetURL <span class=\"token operator\">=</span> <span class=\"token string\">'frag_bunny.mp4'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Need to be specific for Blink regarding codecs</span>\n<span class=\"token comment\">// ./mp4info frag_bunny.mp4 | grep Codec</span>\n<span class=\"token keyword\">var</span> mimeCodec <span class=\"token operator\">=</span> <span class=\"token string\">'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'MediaSource'</span> <span class=\"token keyword\">in</span> window <span class=\"token operator\">&amp;&amp;</span> MediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">isTypeSupported</span><span class=\"token punctuation\">(</span>mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//console.log(mediaSource.readyState); // closed</span>\n  video<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>mediaSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sourceopen'</span><span class=\"token punctuation\">,</span> sourceOpen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unsupported MIME type or codec: '</span><span class=\"token punctuation\">,</span> mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sourceOpen</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//console.log(this.readyState); // open</span>\n  <span class=\"token keyword\">var</span> mediaSource <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> sourceBuffer <span class=\"token operator\">=</span> mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">addSourceBuffer</span><span class=\"token punctuation\">(</span>mimeCodec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">fetchAB</span><span class=\"token punctuation\">(</span>assetURL<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">buf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    sourceBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'updateend'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      mediaSource<span class=\"token punctuation\">.</span><span class=\"token function\">endOfStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      video<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//console.log(mediaSource.readyState); // ended</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sourceBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">appendBuffer</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">fetchAB</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span>responseType <span class=\"token operator\">=</span> <span class=\"token string\">'arraybuffer'</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Specification</th>\n   <th scope=\"col\">Status</th>\n   <th scope=\"col\">Comment</th>\n  </tr>\n  <tr>\n   <td><a href=\"https://w3c.github.io/media-source/#mediasource\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Media Source Extensions<br><small lang=\"ru\">Определение 'MediaSource' в этой спецификации.</small></a></td>\n   <td><span class=\"spec-rec\">Рекомендация</span></td>\n   <td>Initial definition.</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaSource","dataURL":"/ru/docs/Web/API/MediaSource/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBuffer\"><code>SourceBuffer</code> <small>(en-US)</small></a></li>\n <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SourceBufferList\"><code>SourceBufferList</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"Конструктор","id":"конструктор"},{"text":"Свойства","id":"свойства"},{"text":"Методы","id":"методы"},{"text":"Примеры","id":"примеры"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"MediaSource – это интерфейс Media Source Extensions API для предоставления интерактивного источника медиаданных объектам типа HTMLMediaElement.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MediaSource","locale":"en-US","native":"English (US)"},{"title":"MediaSource","locale":"fr","native":"Français"},{"title":"MediaSource","locale":"ja","native":"日本語"},{"title":"MediaSource","locale":"zh-CN","native":"中文 (简体)"},{"title":"MediaSource","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/api/mediasource","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/mediasource/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/MediaSource","title":"MediaSource"}],"pageTitle":"MediaSource - Интерфейсы веб API | MDN","noIndexing":false}}