{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Navigator.getVRDisplays()","mdn_url":"/ru/docs/Web/API/Navigator/getVRDisplays","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/WebVR_API\">WebVR API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Руководства</summary><ol><li><a href=\"/ru/docs/Web/API/WebVR_API/Using_the_WebVR_API\">Using the WebVR API</a></li><li><a href=\"/ru/docs/Web/API/WebVR_API/Concepts\">WebVR concepts</a></li><li><a href=\"/ru/docs/Web/API/WebVR_API/Using_VR_controllers_with_WebVR\">Using VR controllers with WebVR</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Интерфейсы</summary><ol><li><a href=\"/ru/docs/Web/API/VRDisplay\"><code>VRDisplay</code></a></li><li><a href=\"/ru/docs/Web/API/VRDisplayCapabilities\"><code>VRDisplayCapabilities</code></a></li><li><a href=\"/ru/docs/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a></li><li><a href=\"/ru/docs/Web/API/VRFrameData\"><code>VRFrameData</code></a></li><li><a href=\"/ru/docs/Web/API/VRPose\"><code>VRPose</code></a></li><li><a href=\"/ru/docs/Web/API/VREyeParameters\"><code>VREyeParameters</code></a></li><li><a href=\"/ru/docs/Web/API/VRFieldOfView\"><code>VRFieldOfView</code></a></li><li><a href=\"/ru/docs/Web/API/VRLayerInit\"><code>VRLayerInit</code></a></li><li><a href=\"/ru/docs/Web/API/VRStageParameters\"><code>VRStageParameters</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Свойства</summary><ol><li><a href=\"/ru/docs/Web/API/Gamepad/displayId\"><code>Gamepad.displayId</code></a></li><li><a href=\"/ru/docs/Web/API/Navigator/activeVRDisplays\"><code>Navigator.activeVRDisplays</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Методы</summary><ol><li><a href=\"/ru/docs/Web/API/Navigator/getVRDisplays\"><code>Navigator.getVRDisplays()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>События</summary><ol><li><a href=\"/ru/docs/Web/API/Window/vrdisplayactivate_event\"><code>Window</code>: <code>vrdisplayactivate</code></a></li><li><a href=\"/ru/docs/Web/API/Window/vrdisplayblur_event\"><code>Window</code>: <code>vrdisplayblur</code></a></li><li><a href=\"/ru/docs/Web/API/Window/vrdisplayconnected_event\"><code>Window</code>: <code>vrdisplayconnected</code></a></li><li><a href=\"/ru/docs/Web/API/Window/vrdisplaydeactivate_event\"><code>Window</code>: <code>vrdisplaydeactivate</code></a></li><li><a href=\"/ru/docs/Web/API/Window/vrdisplaydisconnected_event\"><code>Window</code>: <code>vrdisplaydisconnected</code></a></li><li><a href=\"/ru/docs/Web/API/Window/vrdisplayfocus_event\"><code>Window</code>: <code>vrdisplayfocus</code></a></li><li><a href=\"/ru/docs/Web/API/Window/vrdisplaypresentchange_event\"><code>Window</code>: <code>vrdisplaypresentchange</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>Это экспериментальная технология</strong><br>Так как спецификация этой технологии ещё не стабилизировалась, смотрите <a href=\"#browser_compatibility\">таблицу совместимости</a> по поводу использования в различных браузерах. Также заметьте, что синтаксис и поведение экспериментальной технологии может измениться в будущих версиях браузеров, вслед за изменениями спецификации.</p></div></div>\n\n<p>Метод <strong><code>getVRDisplays()</code></strong> интерфейса <a href=\"/ru/docs/Web/API/Navigator\"><code>Navigator</code></a> возвращает объект типа <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a>, из которого можно получить массив объектов типа <a href=\"/ru/docs/Web/API/VRDisplay\"><code>VRDisplay</code></a>, являющихся отображением любого доступного из подключённых к компьютеру VR устройств.</p>"}},{"type":"prose","value":{"id":"синтаксис","title":"Синтаксис","isH3":false,"content":"<pre class=\"syntaxbox notranslate\">navigator.getVRDisplays().then(function(displays) {\n  //Тут можно что-то сделать с доступными VR устройствами\n});</pre>"}},{"type":"prose","value":{"id":"параметры","title":"Параметры","isH3":true,"content":"<p>Нет.</p>"}},{"type":"prose","value":{"id":"возвращаемое_значение","title":"Возвращаемое значение","isH3":true,"content":"<p>Объект типа Promise, содержащий в случае успешного выполнения массив объектов <a href=\"/ru/docs/Web/API/VRDisplay\"><code>VRDisplay</code></a>.</p>"}},{"type":"prose","value":{"id":"примеры","title":"Примеры","isH3":false,"content":"<p></p><div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>getVRDisplays<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'WebVR 1.1 supported'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Then get the displays attached to the computer</span>\n  navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getVRDisplays</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">displays</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// If a display is available, use it to present the scene</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>displays<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      vrDisplay <span class=\"token operator\">=</span> displays<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Now we have our VRDisplay object and can do what we want with it</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> You can see this complete code at <a href=\"https://github.com/mdn/webvr-tests/blob/master/raw-webgl-example/webgl-demo.js\" class=\"external\" rel=\" noopener\">raw-webgl-example</a>.</p>\n</div><p></p>"}},{"type":"specifications","value":{"title":"Спецификации","id":"спецификации","isH3":false,"specifications":[],"query":"api.Navigator.getVRDisplays"}},{"type":"browser_compatibility","value":{"title":"Совместимость с браузерами","id":"совместимость_с_браузерами","isH3":false,"query":"api.Navigator.getVRDisplays","dataURL":"/ru/docs/Web/API/Navigator/getVRDisplays/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/WebVR_API\">WebVR API homepage</a></li>\n <li><a href=\"http://mozvr.com/\" class=\"external\" rel=\" noopener\">MozVr.com</a> — demos, downloads, and other resources from the Mozilla VR team.</li>\n</ul>"}}],"toc":[{"text":"Синтаксис","id":"синтаксис"},{"text":"Примеры","id":"примеры"},{"text":"Спецификации","id":"спецификации"},{"text":"Совместимость с браузерами","id":"совместимость_с_браузерами"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"Метод getVRDisplays() интерфейса Navigator возвращает объект типа Promise, из которого можно получить массив объектов типа VRDisplay, являющихся отображением любого доступного из подключённых к компьютеру VR устройств.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Navigator.getVRDisplays()","locale":"en-US","native":"English (US)"},{"title":"Navigator.getVRDisplays()","locale":"ja","native":"日本語"}],"source":{"folder":"ru/web/api/navigator/getvrdisplays","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/navigator/getvrdisplays/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Navigator","title":"Navigator"},{"uri":"/ru/docs/Web/API/Navigator/getVRDisplays","title":"Navigator.getVRDisplays()"}],"pageTitle":"Navigator.getVRDisplays() - Интерфейсы веб API | MDN","noIndexing":false}}