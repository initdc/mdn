{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Streams API","mdn_url":"/ru/docs/Web/API/Streams_API","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/Streams_API\">Streams API</a></strong></li><li><strong><a href=\"/ru/docs/Web/API/Streams_API\"><code>Streams_API</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Похожие страницы для Streams</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/body\"><code>Response.body</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/fetch\"><code>fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>Это экспериментальная технология</strong><br>Так как спецификация этой технологии ещё не стабилизировалась, смотрите <a href=\"#browser_compatibility\">таблицу совместимости</a> по поводу использования в различных браузерах. Также заметьте, что синтаксис и поведение экспериментальной технологии может измениться в будущих версиях браузеров, вслед за изменениями спецификации.</p></div></div>\n\n<p class=\"summary\">Streams API (API обработки потоков) позволяет программно получить доступ с помощью JavaScript к полученным по сети потокам данных и обработать их по желанию разработчика.</p>"}},{"type":"prose","value":{"id":"концепция_и_использование","title":"Концепция и использование","isH3":false,"content":"<p>Потоковая передача данных предполагает разбивку ресурса, который вы хотите получить через сеть, на мелкие кусочки и затем их обработку часть за частью. Это то, что браузеры делают в любом случае получения ассетов, чтобы показать их на страницах — видео буфер и другие ресурсы доступные для воспроизведения, и иногда это заметно на изображениях, загружающихся частями.</p>\n\n<p>Но методы работы с этим и данные никогда прежде не были доступны для JavaScript. Раньше, если мы хотели обработать часть ресурса, нам всё равно пришлось бы загрузить весь файл (будь то видео, текстовый файл и т.п.), мы были бы обязаны скачать файл целиком, дождаться пока он будет приведён к необходимому формату и только потом работать с файлом после его полной загрузки.</p>\n\n<p>С помощью потоков доступных в JavaScript меняется все — вы можете начать обрабатывать данные бит за битом как только данные появляются на стороне клиента, без необходимости генерировать буфер, строку или какой либо объект из потока.</p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/15817/Concept.png\" style=\"display: block; margin: 0px auto;\" loading=\"lazy\"></p>\n\n<p>Но это не все преимущества — вы можете отловить процессы старта и завершения потока, связывать потоки в цепочки, обрабатывать ошибки или прерывать их если это необходимо, реагировать на скорость с которой поток считывается.</p>\n\n<p>Основное использование потоков крутиться вокруг создания ответов доступными в виде потоков. Например, тело ответа <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>Body</code></a> возвращённого успешным <a href=\"/en-US/docs/Web/API/fetch\">fetch запросом</a> может быть представлено как <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a>, и вы можете прочитать его используя ридер полученный методом <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/getReader\"><code>ReadableStream.getReader()</code> <small>(en-US)</small></a>, отменить его с помощью <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/cancel\"><code>ReadableStream.cancel()</code> <small>(en-US)</small></a>, и тп.</p>\n\n<p>Более сложные примеры задействуют создание ваших собственных  потоков с помощью конструктора <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/ReadableStream\"><code>ReadableStream()</code> <small>(en-US)</small></a>, например чтобы обработать данные внутри <a href=\"/en-US/docs/Web/API/Service_Worker_API\">service worker</a>.</p>\n\n<p>Вы также можете записывать данные в потоки используя <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code> <small>(en-US)</small></a>.</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Примечание</strong>: вы можете найти больше информации о теории и практике использования потоков в следующих статьях — <a href=\"/en-US/docs/Web/API/Streams_API/Concepts\">Концепты API потоков</a> , <a href=\"/en-US/docs/Web/API/Streams_API/Using_readable_streams\">Использование потоков на чтение</a>, и <a href=\"/en-US/docs/Web/API/Streams_API/Using_writable_streams\">Использование потоков на запись</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"интерфейсы","title":"Интерфейсы","isH3":false,"content":""}},{"type":"prose","value":{"id":"потоки_чтения_данных","title":"Потоки чтения данных","isH3":true,"content":"<dl>\n <dt id=\"readablestream_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a></dt>\n <dd>Представляет собой считываемый поток данных. Он может быть использован чтобы обработать потоки ответов от <a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a>, или созданный разработчиком поток (например произвольный <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/ReadableStream\"><code>ReadableStream()</code> <small>(en-US)</small></a>).</dd>\n <dt id=\"readablestreamdefaultreader_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code> <small>(en-US)</small></a></dt>\n <dd>Представляет собой считывателя, который может быть использован чтобы считать данные поставляемые из сети (например fetch запрос).</dd>\n <dt id=\"readablestreamdefaultcontroller_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code> <small>(en-US)</small></a></dt>\n <dd>Представляет собой контроллер позволяющий контролировать состояние <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a> и очереди внутри него. Является контроллером по умолчанию для не байтовых потоков.</dd>\n</dl>"}},{"type":"prose","value":{"id":"writable_streams","title":"Writable streams","isH3":true,"content":"<dl>\n <dt id=\"writablestream_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code> <small>(en-US)</small></a></dt>\n <dd>Предоставляет стандартную абстракцию, известную как раковина, для записи потоков по месту назначения. Этот объект идёт вместе со встроенными методами контроля обратного потока и созданием очередей.</dd>\n <dt id=\"writablestreamdefaultwriter_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code> <small>(en-US)</small></a></dt>\n <dd>Представляет запись потока по умолчанию, которая может использоваться для записи фрагментов данных в записываемый поток.</dd>\n <dt id=\"writablestreamdefaultcontroller_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code> <small>(en-US)</small></a></dt>\n <dd>Представляет собой контроллер состояния <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code> <small>(en-US)</small></a>. При создании <code>WritableStream</code>, создаётся также соответствующий экземпляр <code>WritableStreamDefaultController</code>.</dd>\n</dl>"}},{"type":"prose","value":{"id":"дополнительные_api_и_операции_по_работе_с_потоками","title":"Дополнительные API и операции по работе с потоками","isH3":true,"content":"<dl>\n <dt id=\"bytelengthqueuingstrategy_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code> <small>(en-US)</small></a></dt>\n <dd>Предоставляет встроенную стратегию длины байт-очереди, которая может быть использована при построении потоков.</dd>\n <dt id=\"countqueuingstrategy_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code> <small>(en-US)</small></a></dt>\n <dd>Предоставляет встроенную стратегию организации очередей подсчёта чанков, которая может использоваться при построении потоков.</dd>\n</dl>"}},{"type":"prose","value":{"id":"дополнения_к_другим_api","title":"Дополнения к другим API","isH3":true,"content":"<dl>\n <dt id=\"request\"><a href=\"/ru/docs/Web/API/Request\"><code>Request</code></a></dt>\n <dd>При создании нового объекта типа <code>Request</code>, вы можете добавить <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a> в свойство <code>body</code> его словаря <code>RequestInit</code>.  Этот объект типа <code>Request</code> может быть отправлен в  <a href=\"/ru/docs/Web/API/fetch\"><code>WindowOrWorkerGlobalScope.fetch()</code></a>, чтобы начать загрузку потока.</dd>\n <dt id=\"body\"><a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>Body</code></a></dt>\n <dd>Ответ <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>Body</code></a> возвращённый успешному <a href=\"/en-US/docs/Web/API/fetch\">fetch запросу</a> вывешивается по умолчанию как <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a>, и может иметь получателя прикреплённого к нему и тп.</dd>\n</dl>"}},{"type":"prose","value":{"id":"интерфейсы_в_дополнение_к_bytestream","title":"Интерфейсы в дополнение к ByteStream","isH3":true,"content":"<div class=\"warning notecard\" id=\"sect4\">\n<p><strong>Важно</strong>: данные интерфейсы пока не реализованы, и были подняты вопросы о том, находятся ли детали спецификации в достаточно законченном состоянии для их реализации. Со временем это может измениться</p>\n</div>\n\n<dl>\n <dt id=\"readablestreambyobreader_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code> <small>(en-US)</small></a></dt>\n <dd>Represents a BYOB (\"bring your own buffer\") reader that can be used to read stream data supplied by the developer (e.g. a custom <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/ReadableStream\"><code>ReadableStream()</code> <small>(en-US)</small></a> constructor).</dd>\n <dt id=\"readablebytestreamcontroller_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code> <small>(en-US)</small></a></dt>\n <dd>Контроллер позволяющий обрабатывать состояние <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a> и внутреннюю очередь. Байтовые контроллеры для байтовых потоков.</dd>\n <dt id=\"readablestreambyobrequest_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code> <small>(en-US)</small></a></dt>\n <dd>Represents a pull into request in a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code> <small>(en-US)</small></a>.</dd>\n</dl>"}},{"type":"prose","value":{"id":"примеры","title":"Примеры","isH3":false,"content":"<p>Мы создали папку с примерами, которые идут вместе с документацией к API потоков — смотрите <a href=\"https://github.com/mdn/dom-examples/tree/master/streams\" class=\"external\" rel=\" noopener\">mdn/dom-examples/streams</a>. Можно найти такие примеры как:</p>\n\n<ul>\n <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-pump/\" class=\"external\" rel=\" noopener\">Simple stream pump</a>: Этот пример показывает как использовать поток чтения данных и передавать его данные в другой поток.</li>\n <li><a href=\"https://mdn.github.io/dom-examples/streams/grayscale-png/\" class=\"external\" rel=\" noopener\">Сделать черно-белый PNG</a>: Пример показывает конвертацию потока данных PNG изображения в черно-белый формат.</li>\n <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-random-stream/\" class=\"external\" rel=\" noopener\">Простой произвольный поток</a>: В этом примере показано, как использовать пользовательский поток для создания случайных строк, помещать их в очередь как блоки, а затем считывать их обратно.</li>\n <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-tee-example/\" class=\"external\" rel=\" noopener\">Simple tee example</a>: Этот пример расширяет первый пример, показывая как поток может быть связан, и оба результирующих потока будут прочитаны независимо.</li>\n <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-writer/\" class=\"external\" rel=\" noopener\">Simple writer</a>: This example shows how to to write to a writable stream, then decode the stream and write the contents to the UI.</li>\n <li><a href=\"https://mdn.github.io/dom-examples/streams/png-transform-stream/\" class=\"external\" rel=\" noopener\">Unpack chunks of a PNG</a>: This example shows how <a href=\"/en-US/docs/Web/API/ReadableStream/pipeThrough\"><code>pipeThrough()</code></a> can be used to transform a ReadableStream into a stream of other data types by transforming a data of a PNG file into a stream of PNG chunks.</li>\n</ul>\n\n<p>Примеры от других разработчиков:</p>\n\n<ul>\n <li><a href=\"https://fetch-progress.anthum.com/\" class=\"external\" rel=\" noopener\">Progress Indicators with Streams, Service Workers, &amp; Fetch</a>.</li>\n</ul>"}},{"type":"prose","value":{"id":"спецификации","title":"Спецификации","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Specification</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://streams.spec.whatwg.org/\" class=\"external\" rel=\" noopener\">Streams Living Standard</a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"совместимость_с_браузерами","title":"Совместимость с браузерами","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"Поток записи данных","id":"поток_записи_данных","isH3":true,"query":"api.ReadableStream","dataURL":"/ru/docs/Web/API/Streams_API/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/Streams_API/Concepts\">Streams API концепт</a></li>\n <li><a href=\"/en-US/docs/Web/API/Streams_API/Using_readable_streams\">Использование потоков чтения</a></li>\n <li><a href=\"/en-US/docs/Web/API/Streams_API/Using_writable_streams\">Использование потоков записи</a></li>\n</ul>"}}],"toc":[{"text":"Концепция и использование","id":"концепция_и_использование"},{"text":"Интерфейсы","id":"интерфейсы"},{"text":"Примеры","id":"примеры"},{"text":"Спецификации","id":"спецификации"},{"text":"Совместимость с браузерами","id":"совместимость_с_браузерами"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"Streams API (API обработки потоков) позволяет программно получить доступ с помощью JavaScript к полученным по сети потокам данных и обработать их по желанию разработчика.","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Streams API","locale":"en-US","native":"English (US)"},{"title":"Streams API","locale":"fr","native":"Français"},{"title":"Streams API","locale":"ja","native":"日本語"},{"title":"Streams API","locale":"ko","native":"한국어"},{"title":"Streams API","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Stream API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/api/streams_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/streams_api/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Streams_API","title":"Streams API"}],"pageTitle":"Streams API - Интерфейсы веб API | MDN","noIndexing":false}}