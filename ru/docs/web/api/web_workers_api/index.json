{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Web Workers API","mdn_url":"/ru/docs/Web/API/Web_Workers_API","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/Web_Workers_API\">Web Workers API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Руководства</summary><ol><li><a href=\"/ru/docs/Web/API/Web_Workers_API/Using_web_workers\">Using Web Workers</a></li><li><a href=\"/ru/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\">Functions and classes available to Web Workers</a></li><li><a href=\"/ru/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">The structured clone algorithm</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Интерфейсы</summary><ol><li><a href=\"/ru/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a></li><li><a href=\"/ru/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ru/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></li><li><a href=\"/ru/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a></li><li><a href=\"/ru/docs/Web/API/Worker\"><code>Worker</code></a></li><li><a href=\"/ru/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></li><li><a href=\"/ru/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code></a></li><li><a href=\"/ru/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p class=\"summary\"><strong>Web Workers</strong> это механизм, который позволяет скрипту выполняться в фоновом потоке, который отделен от основного потока веб-приложения. Преимущество заключается в том, ресурсоёмкие вычисления могут выполняться в отдельном потоке, позволяя запустить основной (обычно пользовательский) поток без блокировки и замедления.</p>"}},{"type":"prose","value":{"id":"концепции_и_использование_web_воркеров","title":"Концепции и использование Web воркеров","isH3":false,"content":"<p>Worker (работник, воркер)  - это объект созданный при помощи конструктора (например, <a href=\"/ru/docs/Web/API/Worker/Worker\" title=\"Worker()\"><code>Worker()</code></a>), который запускает именованный файл JavaScript - этот файл содержит код, который будет запускаться в потоке воркера; воркеры запускаются в другом глобальном контексте отличном от текущего контекста <a href=\"/ru/docs/Web/API/Window\"><code>window</code></a>. Этот контекст представлен объектом <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code> <small>(en-US)</small></a> в случае специализированных воркеров (стандартные воркеры, которые используются одним скриптом, общие воркеры используют <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a>).</p>\n\n<p>Вы можете запустить любой код, который вам нравится внутри потока воркера, за некоторыми исключениями. Например, вы не можете напрямую манипулировать DOM внутри воркера или использовать некоторые методы и свойства по умолчанию объекта <a href=\"/ru/docs/Web/API/Window\"><code>window</code></a>. Но вы можете использовать большое количество свойств и методов, доступных в <code>window</code>, включая <a href=\"/en-US/docs/Web/API/WebSockets_API\">WebSockets</a>, и механизм хранения данных такой, как <a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB</a> или <a href=\"/en-US/docs/Web/API/Data_Store_API\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Data Store API,</a> который доступен только в ОС Firefox. За дополнительной информацией смотрите <a href=\"/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\">Функции и классы доступные воркерам.</a></p>\n\n<p>Данные отправляются между потоком воркера и основным потоком через систему сообщений - обе стороны отправляют свои сообщения с помощью метода <code>postMessage ()</code> и отвечают на сообщения через обработчик события <code>onmessage</code> (сообщение содержится в атрибуте данных события  <code><a href=\"/ru/docs/Web/Reference/Events/Message\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">Message</a></code>. Данные копируются, а не используются совместно.</p>\n\n<p>Воркеры могут, в свою очередь, создавать новых воркеров, в этом случае они должны иметь одно и то же происхождение - родительскую страницу. Кроме того, воркеры могут использовать <a class=\"internal\" href=\"/en-US/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> для сетевого ввода-вывода, за исключением того, что атрибуты <code>responseXML</code> и <code>channel </code>на XMLHttpRequest всегда возвращают значение <code>null</code>.</p>\n\n<p>В дополнение к специализированным существуют и другие виды воркеров:</p>\n\n<ul>\n <li>Совместные воркеры - это воркеры, которые могут использоваться несколькими скриптами совместно, работающими в разных окнах, IFrames и т.д. в пределах одного домена, что и воркер. Они немного сложнее, чем специализированные воркеры - скрипты должны связываться через активный порт. Подробнее см. <a href=\"/ru/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a>.</li>\n <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\">ServiceWorkers</a> по сути действуют как прокси-серверы, которые находятся между веб-приложениями, а также браузером и сетью (если доступны). Помимо прочего они предназначены для создания эффективного автономного взаимодействия, перехвата сетевых запросов и принятия соответствующих мер на основе доступности сети и обновления данных на сервере. Они также позволят доступ к push-уведомлениям и API-интерфейсам фоновой синхронизации.</li>\n <li>Воркеры в Chrome - это воркеры специального типа Firefox, которые вы можете использовать, если вы разрабатываете надстройки и хотите использовать воркеры в расширениях и иметь доступ к js-ctypes в вашем воркере. Смотрите также <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>ChromeWorker</code></a>. </li>\n <li><a href=\"/en-US/docs/Web/API/Web_Audio_API#audio_workers\">Audio Workers</a>(аудио воркеры) обеспечивают возможность прямой обработки аудиозаписей в рамках веб-контекста воркера.</li>\n</ul>\n\n<div class=\"note notecard\" id=\"sect1\">\n<p><strong>Замечание</strong>: В соответствии с <a href=\"https://html.spec.whatwg.org/multipage/workers.html#runtime-script-errors-2\" class=\"external\" rel=\" noopener\">Web workers Spec</a>, события ошибок воркеров не должны \"всплывать\" (смотрите  <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1188141\" class=\"external\" rel=\" noopener\">баг&nbsp;1188141</a>. Такое поведение было реализовано в Firefox 42.</p>\n</div>"}},{"type":"prose","value":{"id":"интерфейсы_web_воркера","title":"Интерфейсы Web воркера","isH3":false,"content":"<dl>\n <dt id=\"abstractworker_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker\"><code>AbstractWorker</code> <small>(en-US)</small></a></dt>\n <dd>Абстрактные свойства и методы общие для всех типов воркеров (т.е. <a href=\"/ru/docs/Web/API/Worker\"><code>Worker</code></a> или <a href=\"/ru/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a>).</dd>\n <dt id=\"worker\"><a href=\"/ru/docs/Web/API/Worker\"><code>Worker</code></a></dt>\n <dd>Представляет поток исполнения воркера, позволяющий передавать сообщения текущему коду воркера.</dd>\n <dt id=\"sharedworker\"><a href=\"/ru/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></dt>\n <dd>Представляет конкретный вид воркера, к которому можно получить доступ из нескольких контекстов, будь то несколько окон, iframe или даже воркеров.</dd>\n <dt id=\"workerglobalscope\"><a href=\"/ru/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></dt>\n <dd>Represents the generic scope of any worker (doing the same job as <a href=\"/ru/docs/Web/API/Window\"><code>Window</code></a> does for normal web content). Different types of worker have scope objects that inherit from this interface and add more specific features.</dd>\n <dt id=\"dedicatedworkerglobalscope_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code> <small>(en-US)</small></a></dt>\n <dd>Represents the scope of a dedicated worker, inheriting from <a href=\"/ru/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> and adding some dedicated features.</dd>\n <dt id=\"sharedworkerglobalscope_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a></dt>\n <dd>Represents the scope of a shared worker, inheriting from <a href=\"/ru/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> and adding some dedicated features.</dd>\n <dt id=\"workernavigator_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code> <small>(en-US)</small></a></dt>\n <dd>Представляет идентификатор и состояние пользовательского агента (клиента).</dd>\n</dl>"}},{"type":"prose","value":{"id":"примеры","title":"Примеры","isH3":false,"content":"<p>Мы создали пару простых демонстрационных программ чтобы показать основы использования:</p>\n\n<ul>\n <li><a href=\"https://github.com/mdn/simple-web-worker\" class=\"external\" rel=\" noopener\">Базовый пример отдельного воркера</a> (<a href=\"https://mdn.github.io/simple-web-worker/\" class=\"external\" rel=\" noopener\">запускает отдельного воркера</a>).</li>\n <li><a href=\"https://github.com/mdn/simple-shared-worker\" class=\"external\" rel=\" noopener\">Базовый пример разделяемого воркера</a> (<a href=\"https://mdn.github.io/simple-shared-worker/\" class=\"external\" rel=\" noopener\">запускает разделяемого воркера</a>).</li>\n</ul>\n\n<p>Больше информации о том, как работают эти демонстрационные программы, вы можете найти в статье <a href=\"/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\">Использование Web воркеров</a>.</p>"}},{"type":"prose","value":{"id":"спецификации","title":"Спецификации","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Specification</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://html.spec.whatwg.org/multipage/workers.html#workers\" class=\"external\" rel=\" noopener\">HTML Living Standard # workers</a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\">Использование Web воркеров</a></li>\n <li><a href=\"/en-US/docs/Web/API/Worker\">Worker Interface</a></li>\n <li><a href=\"/en-US/docs/Web/API/SharedWorker\">Интерфейс SharedWorker</a></li>\n <li><a href=\"/en-US/docs/Web/API/ServiceWorker_API\">ServiceWorker API</a></li>\n <li><a href=\"/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\">Функции и классы доступные воркерам</a></li>\n <li><a href=\"/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\">Продвинутые концепции и примеры</a></li>\n <li><a href=\"/en-US/docs/Web/API/ChromeWorker\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">ChromeWorker</a>: для использования воркеров в привелегированном/chrome коде</li>\n</ul>"}}],"toc":[{"text":"Концепции и использование Web воркеров","id":"концепции_и_использование_web_воркеров"},{"text":"Интерфейсы Web воркера","id":"интерфейсы_web_воркера"},{"text":"Примеры","id":"примеры"},{"text":"Спецификации","id":"спецификации"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"Web Workers это механизм, который позволяет скрипту выполняться в фоновом потоке, который отделен от основного потока веб-приложения. Преимущество заключается в том, ресурсоёмкие вычисления могут выполняться в отдельном потоке, позволяя запустить основной (обычно пользовательский) поток без блокировки и замедления.","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Web Workers API","locale":"en-US","native":"English (US)"},{"title":"Web Workers API","locale":"es","native":"Español"},{"title":"API Web Workers","locale":"fr","native":"Français"},{"title":"ウェブワーカー API","locale":"ja","native":"日本語"},{"title":"Web Workers API","locale":"ko","native":"한국어"},{"title":"Web Workers API","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Web Workers API","locale":"zh-CN","native":"中文 (简体)"},{"title":"Web Workers API","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/api/web_workers_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/web_workers_api/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Web_Workers_API","title":"Web Workers API"}],"pageTitle":"Web Workers API - Интерфейсы веб API | MDN","noIndexing":false}}