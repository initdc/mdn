{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Алгоритм структурированного клонирования","mdn_url":"/ru/docs/Web/API/Web_Workers_API/Structured_clone_algorithm","locale":"ru","native":"Русский","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Алгоритм структурированного клонирования — это новый алгоритм, <a class=\"external\" href=\"https://www.w3.org/html/wg/drafts/html/master/infrastructure.html#safe-passing-of-structured-data\" rel=\" noopener\">определённый спецификацией HTML5</a> для сериализации комплексных JavaScript объектов. Он более функционален, чем <a href=\"/en-US/JSON\" title=\"en/JSON\">JSON</a> в том что способен поддерживать сериализацию объектов содержащих циклические графы — первичные объекты, которые ссылаются на другие объекты у которых есть ссылка на первичные объекты в том же графе. В дополнение, в некоторых других случаях алгоритм структурированного клонирования может быть более эффективен, чем JSON.</p>\n\n<p>Алгоритм, по существу, перебирает все поля оригинального объекта, дублируя значения каждого поля в новый объект. Если поле представляет из себя объект с собственными полями, то эти дочерние поля также перебираются рекурсивно, пока каждое поле и все дочерние поля не будут продублированы в новый объект.</p>"}},{"type":"prose","value":{"id":"преимущества_перед_json","title":"Преимущества перед JSON","isH3":false,"content":"<p>Вот основные преимущества структурированного клонирования перед JSON:</p>\n\n<ul>\n <li>Структурированные клоны могут копировать <a href=\"/en-US/JavaScript/Reference/Global_Objects/RegExp\" title=\"en/JavaScript/Reference/Global Objects/regexp\"><code>RegExp</code></a> объекты.</li>\n <li>Структурированные клоны могут копировать <a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a>, <a href=\"/ru/docs/Web/API/File\"><code>File</code></a>, и <a href=\"/ru/docs/Web/API/FileList\"><code>FileList</code></a> объекты.</li>\n <li>Структурированные клоны могут копировать <a href=\"/ru/docs/Web/API/ImageData\"><code>ImageData</code></a> объекты. The dimensions of the clone's <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>CanvasPixelArray</code> <small>(en-US)</small></a> will match the original and have a duplicate of the same pixel data.</li>\n <li>Structured clones can correctly duplicate objects containing cyclic graphs of references.</li>\n</ul>"}},{"type":"prose","value":{"id":"исключения_не_работающие_со_структурированными_клонами","title":"Исключения, не работающие со структурированными клонами","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/JavaScript/Reference/Global_Objects/Error\" title=\"en/JavaScript/Reference/Global Objects/Error\"><code>Error</code></a> and <a href=\"/en-US/JavaScript/Reference/Global_Objects/Function\" title=\"en/JavaScript/Reference/Global Objects/Function\"><code>Function</code></a> objects cannot be duplicated by the structured clone algorithm; attempting to do so will throw a <code>DATA_CLONE_ERR</code> exception.</li>\n <li>Attempting to clone DOM nodes will likewise throw a <code>DATA_CLONE_ERR</code> exception.</li>\n <li>Certain parameters of objects are not preserved:\n  <ul>\n   <li>The <code>lastIndex</code> field of <a href=\"/en-US/JavaScript/Reference/Global_Objects/RegExp\" title=\"en/JavaScript/Reference/Global Objects/regexp\"><code>RegExp</code></a> objects is not preserved.</li>\n   <li>Property descriptors, setters, and getters (as well as similar metadata-like features) are not duplicated. For example, if an object is marked read-only using a property descriptor, it will be read-write in the duplicate, since that's the default condition.</li>\n   <li>The prototype chain does not get walked and duplicated.</li>\n  </ul>\n </li>\n</ul>"}},{"type":"prose","value":{"id":"поддерживаемые_типы","title":"Поддерживаемые типы","isH3":false,"content":"<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Object type</th>\n   <th scope=\"col\">Notes</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/JavaScript/Data_structures#primitive_values\">All primitive types</a></td>\n   <td>However not symbols</td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a> object</td>\n   <td></td>\n  </tr>\n  <tr>\n   <td>String object</td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></td>\n   <td>The <code>lastIndex</code> field is not preserved.</td>\n  </tr>\n  <tr>\n   <td><a href=\"/ru/docs/Web/API/Blob\"><code>Blob</code></a></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"/ru/docs/Web/API/File\"><code>File</code></a></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"/ru/docs/Web/API/FileList\"><code>FileList</code></a></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/API/ArrayBuffer\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">ArrayBuffer</a></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">ArrayBufferView</a></td>\n   <td>This basically means all <a href=\"/en-US/docs/Web/JavaScript/Typed_arrays\">typed arrays</a> like Int32Array etc.</td>\n  </tr>\n  <tr>\n   <td><a href=\"/ru/docs/Web/API/ImageData\"><code>ImageData</code></a></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></td>\n   <td>This just includes plain objects (e.g. from object literals)</td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></td>\n   <td></td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"другой_вариант_вложенное_копирование‎","title":"Другой вариант: вложенное копирование‎","isH3":false,"content":"<p>Если вы хотите сделать вложенную копию объекта (т.е рекурсивно копировать все вложенные свойства, проходя по прототипной цепи),  вы должны использовать другой подход. Ниже приведён возможный пример.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">objectToBeCloned</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Basis.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>objectToBeCloned <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> objectToBeCloned<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> objectClone<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Filter out special objects.</span>\n  <span class=\"token keyword\">var</span> Constructor <span class=\"token operator\">=</span> objectToBeCloned<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>Constructor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Implement other special objects here.</span>\n    <span class=\"token keyword\">case</span> <span class=\"token literal-property property\">RegExp</span><span class=\"token operator\">:</span>\n      objectClone <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">(</span>objectToBeCloned<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token literal-property property\">Date</span><span class=\"token operator\">:</span>\n      objectClone <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">(</span>objectToBeCloned<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      objectClone <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Clone each property.</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> prop <span class=\"token keyword\">in</span> objectToBeCloned<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    objectClone<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clone</span><span class=\"token punctuation\">(</span>objectToBeCloned<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> objectClone<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<div class=\"note notecard\" id=\"sect1\"><strong>  Note:</strong> Этот алгоритм  реализован  только для  <a href=\"/en-US/JavaScript/Reference/Global_Objects/RegExp\" title=\"RegExp\"><code>RegExp</code></a>, <a href=\"/en-US/JavaScript/Reference/Global_Objects/Array\" title=\"Array\"><code>Array</code></a>, и <a href=\"/en-US/JavaScript/Reference/Global_Objects/Date\" title=\"Date\"><code>Date</code></a> специальных объектов. Вы можете реализовать другие условия, удовлетворяющие вашим потребностям.</div>"}},{"type":"prose","value":{"id":"ещё_по_теме","title":"Ещё по теме","isH3":false,"content":"<ul>\n <li><a class=\"external\" href=\"https://www.w3.org/TR/html5/infrastructure.html#safe-passing-of-structured-data\" rel=\" noopener\">HTML5 Specification: Safe passing of structured data</a></li>\n <li><a href=\"/ru/docs/Web/API/Window/history\"><code>window.history</code></a></li>\n <li><a href=\"/ru/docs/Web/API/Window/postMessage\"><code>window.postMessage()</code></a></li>\n <li><a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n <li><a href=\"/en-US/docs/Components.utils.cloneInto\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Components.utils.cloneInto</a></li>\n</ul>"}}],"toc":[{"text":"Преимущества перед JSON","id":"преимущества_перед_json"},{"text":"Исключения, не работающие со структурированными клонами","id":"исключения_не_работающие_со_структурированными_клонами"},{"text":"Поддерживаемые типы","id":"поддерживаемые_типы"},{"text":"Другой вариант: вложенное копирование‎","id":"другой_вариант_вложенное_копирование‎"},{"text":"Ещё по теме","id":"ещё_по_теме"}],"summary":"Алгоритм структурированного клонирования — это новый алгоритм, определённый спецификацией HTML5 для сериализации комплексных JavaScript объектов. Он более функционален, чем JSON в том что способен поддерживать сериализацию объектов содержащих циклические графы — первичные объекты, которые ссылаются на другие объекты у которых есть ссылка на первичные объекты в том же графе. В дополнение, в некоторых других случаях алгоритм структурированного клонирования может быть более эффективен, чем JSON.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"The structured clone algorithm","locale":"en-US","native":"English (US)"},{"title":"L’algorithme de clonage structuré","locale":"fr","native":"Français"},{"title":"構造化複製アルゴリズム","locale":"ja","native":"日本語"},{"title":"The structured clone algorithm","locale":"ko","native":"한국어"},{"title":"结构化克隆算法","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/api/web_workers_api/structured_clone_algorithm","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/web_workers_api/structured_clone_algorithm/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Web_Workers_API","title":"Web Workers API"},{"uri":"/ru/docs/Web/API/Web_Workers_API/Structured_clone_algorithm","title":"Алгоритм структурированного клонирования"}],"pageTitle":"Алгоритм структурированного клонирования - Интерфейсы веб API | MDN","noIndexing":false}}