{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Worker.postMessage()","mdn_url":"/ru/docs/Web/API/Worker/postMessage","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/Web_Workers_API\">Web Workers API</a></strong></li><li><strong><a href=\"/ru/docs/Web/API/Worker\"><code>Worker</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Конструктор</summary><ol><li><a href=\"/ru/docs/Web/API/Worker/Worker\"><code>Worker()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Методы</summary><ol><li><em><code>postMessage()</code></em></li><li><a href=\"/ru/docs/Web/API/Worker/terminate\"><code>terminate()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>События</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker/error_event\"><code>error</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/Worker/message_event\"><code>message</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker/messageerror_event\"><code>messageerror</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Наследование:</summary><ol><li><a href=\"/ru/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Похожие страницы для Web Workers API</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ru/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p>Метод <code><strong>postMessage()</strong></code> интерфейса <a href=\"/ru/docs/Web/API/Worker\"><code>Worker</code></a> отправляет сообщение во внутреннее пространство <code>worker</code>-а. Метод имеет один параметр с данными для отправки в <code>worker</code>. Данные могут быть любым значением или объектом JavaScript, которые может обработать <a href=\"/ru/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">алгоритм структурированного клонирования</a>, поддерживающий циклические ссылки.</p>\n\n<p><code>Worker</code> может отправить обратно информацию потоку создавшему его с помощью метода <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope/postMessage\"><code>DedicatedWorkerGlobalScope.postMessage</code> <small>(en-US)</small></a>.</p>"}},{"type":"prose","value":{"id":"синтаксис","title":"Синтаксис","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>worker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>transfer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"параметры","title":"Параметры","isH3":true,"content":"<dl>\n <dt id=\"message\"><em>message</em></dt>\n <dd><code>Object</code> передаваемый в <code>worker</code>. Будет содержаться в поле <code>data</code> описания события обработчика <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope/message_event\"><code>DedicatedWorkerGlobalScope.onmessage</code> <small>(en-US)</small></a>. Это может быть любое значение или объект JavaScript, которые может обработать алгоритм структурированного клонирования, поддерживающий циклические ссылки.</dd>\n <dt id=\"transfer\"><em>transfer</em> <span class=\"badge inline optional\">Необязательный</span></dt>\n <dd><p>Необязательный <code><a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array\">array</a></code> с передаваемыми (<a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>Transferable</code></a>) объектами (из тех, что были указаны в <code>message</code>) на которые передаются права собственности. Если право на объект передаётся, он становится непригодным (<em>neutered</em>) в контексте, из которого был отправлен, и становится доступным только в <code>worker</code>, которому он был отправлен.</p>\n <p>Переданные (<code>transferable</code>) объекты могут быть экземплярами классов <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>ArrayBuffer</code></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code> <small>(en-US)</small></a> или <a href=\"/ru/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>. null не является допустимым значением для передачи прав.</p></dd>\n</dl>"}},{"type":"prose","value":{"id":"возвращаемое_значение","title":"Возвращаемое значение","isH3":true,"content":"<p>Void.</p>"}},{"type":"prose","value":{"id":"пример","title":"Пример","isH3":false,"content":"<p>В следующем фрагменте кода показано создание объекта <a href=\"/ru/docs/Web/API/Worker\"><code>Worker</code></a> с помощью конструктора <a href=\"/ru/docs/Web/API/Worker/Worker\" title=\"Worker()\"><code>Worker()</code></a>. При изменении значений одного из двух полей формы (<code>first</code> и <code>second</code>) событием <code><a href=\"/en-US/docs/Web/API/HTMLElement/change_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">change (en-US)</a></code> вызывается функция <code>postMessage()</code> для отправки значений полей текущему worker.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myWorker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token string\">'worker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfirst<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myWorker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>second<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Сообщение отправлено работнику'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nsecond<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myWorker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>second<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Сообщение отправлено работнику'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Больше примеров можно найти здесь: <a class=\"external external-icon\" href=\"https://github.com/mdn/simple-web-worker\" rel=\" noopener\">Basic dedicated worker example</a> (<a class=\"external external-icon\" href=\"https://mdn.github.io/simple-web-worker/\" rel=\" noopener\">run dedicated worker</a>).</p>\n\n<div class=\"note notecard\" id=\"sect1\">\n<p><strong>Замечание</strong>: <code>postMessage()</code> может отправить только один объект за раз. Если нужно передать несколько значений, то можно отправить массив, как показано выше.</p>\n</div>"}},{"type":"prose","value":{"id":"пример_с_transfer","title":"Пример с Transfer","isH3":true,"content":"<p>В этом примере показано дополнение Firefox, которое передаёт <code>ArrayBuffer</code> из основного потока в <code>ChromeWorker</code>, а затем <code>ChromeWorker</code> передаёт его обратно в основной поток.</p>\n\n<h4 id=\"код_основного_потока\">Код основного потока:</h4>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myWorker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ChromeWorker</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>path <span class=\"token operator\">+</span> <span class=\"token string\">'myWorker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleMessageFromWorker</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'входящее сообщение от работника:'</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>aTopic<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'do_sendMainArrBuff'</span><span class=\"token operator\">:</span>\n            <span class=\"token function\">sendMainArrBuff</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>aBuf<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token string\">'свойство aTopic отсутствует в сообщении ChromeWorker'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmyWorker<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> handleMessageFromWorker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Создание и отправка буфера</span>\n<span class=\"token keyword\">var</span> arrBuf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arrBuf.byteLength, ДО передачи:'</span><span class=\"token punctuation\">,</span> arrBuf<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyWorker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">aTopic</span><span class=\"token operator\">:</span> <span class=\"token string\">'do_sendWorkerArrBuff'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">aBuf</span><span class=\"token operator\">:</span> arrBuf <span class=\"token comment\">// буфер который передаётся 3 строками ниже</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>\n        arrBuf <span class=\"token comment\">// буфер созданный на строке 9</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arrBuf.byteLength, ПОСЛЕ передачи:'</span><span class=\"token punctuation\">,</span> arrBuf<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<h4 id=\"код_worker-а\">Код Worker-а</h4>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>self<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>aTopic<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'do_sendWorkerArrBuff'</span><span class=\"token operator\">:</span>\n                <span class=\"token function\">sendWorkerArrBuff</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>aBuf<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token string\">'свойство aTopic отсутствует в сообщении ChromeWorker'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sendWorkerArrBuff</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">aBuf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'от рабочего, ДО отправки обратно, aBuf.byteLength:'</span><span class=\"token punctuation\">,</span> aBuf<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    self<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">aTopic</span><span class=\"token operator\">:</span><span class=\"token string\">'do_sendMainArrBuff'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">aBuf</span><span class=\"token operator\">:</span>aBuf<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>aBuf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'от рабочего, ПОСЛЕ отправки обратно, aBuf.byteLength:'</span><span class=\"token punctuation\">,</span> aBuf<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<h4 id=\"лог_консоли\">Лог консоли</h4>\n\n<pre class=\"notranslate\">arrBuf.byteLength, ДО передачи: 8                               bootstrap.js:40\narrBuf.byteLength, ПОСЛЕ передачи: 0                            bootstrap.js:42\n\nот рабочего, ДО отправки обратно, aBuf.byteLength: 8            myWorker.js:5:2\n\nвходящее сообщение от работника: message { ... }                bootstrap.js:20\nбуфер вернулся в основной поток, aBuf.byteLength: 8             bootstrap.js:12\n\nот рабочего, ПОСЛЕ отправки обратно, aBuf.byteLength: 0         myWorker.js:7:2</pre>\n\n<p><code>byteLength</code> равен 0 потому, что это переданный (<code>transferable</code>) объект. Полный пример демо дополнения Firefox можно найти здесь: <a href=\"https://github.com/Noitidart/ChromeWorker/tree/aca57d9cadc4e68af16201bdecbfb6f9a6f9ca6b\" class=\"external\" rel=\" noopener\">GitHub :: ChromeWorker - demo-transfer-arraybuffer</a></p>"}},{"type":"specifications","value":{"title":"Спецификации","id":"спецификации","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/workers.html#dom-worker-postmessage-dev","title":"HTML Standard"}],"query":"api.Worker.postMessage"}},{"type":"browser_compatibility","value":{"title":"Совместимость с браузерами","id":"совместимость_с_браузерами","isH3":false,"query":"api.Worker.postMessage","dataURL":"/ru/docs/Web/API/Worker/postMessage/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p>[1] Internet Explorer не поддерживает <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>Transferable</code></a> объекты.</p>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":"<ul>\n <li>Интерфейс <a href=\"/ru/docs/Web/API/Worker\"><code>Worker</code></a></li>\n</ul>"}}],"toc":[{"text":"Синтаксис","id":"синтаксис"},{"text":"Пример","id":"пример"},{"text":"Спецификации","id":"спецификации"},{"text":"Совместимость с браузерами","id":"совместимость_с_браузерами"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"Метод postMessage() интерфейса Worker отправляет сообщение во внутреннее пространство worker-а. Метод имеет один параметр с данными для отправки в worker. Данные могут быть любым значением или объектом JavaScript, которые может обработать алгоритм структурированного клонирования, поддерживающий циклические ссылки.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Worker.postMessage()","locale":"en-US","native":"English (US)"},{"title":"Worker.postMessage()","locale":"fr","native":"Français"},{"title":"Worker.postMessage()","locale":"ja","native":"日本語"},{"title":"Worker.postMessage()","locale":"ko","native":"한국어"},{"title":"Worker.postMessage()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/api/worker/postmessage","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/worker/postmessage/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Worker","title":"Worker"},{"uri":"/ru/docs/Web/API/Worker/postMessage","title":"Worker.postMessage()"}],"pageTitle":"Worker.postMessage() - Интерфейсы веб API | MDN","noIndexing":false}}