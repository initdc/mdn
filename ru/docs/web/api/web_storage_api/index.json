{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Веб хранилище (API)","mdn_url":"/ru/docs/Web/API/Web_Storage_API","locale":"ru","native":"Русский","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Web Storage API предоставляет механизмы, при помощи которых браузеры могут безопасно хранить пары ключ/значение в более интуитивно понятной манере, чем куки (cookies).</p>"}},{"type":"prose","value":{"id":"основы_веб_хранилища_и_его_использование","title":"Основы Веб хранилища и его использование","isH3":false,"content":"<p>В основе Веб хранилища лежат два механизма: </p>\n\n<ul>\n <li><code>хранилище сессии (sessionStorage)</code> обслуживает область хранения данных для каждого домена, доступное на протяжении сессии. (пока браузер открыт, даже в случае перезагрузки страницы) </li>\n <li><code>локальное хранилище (localStorage)</code> делает то же самое, но сохраняет данные даже в случае, если переоткрыть браузер. </li>\n</ul>\n\n<p>Обе функции доступны через  <a href=\"/ru/docs/Web/API/Window/sessionStorage\"><code>Window.sessionStorage</code></a> и <a href=\"/ru/docs/Web/API/Window/localStorage\"><code>Window.localStorage</code></a> свойства (если быть более точным, в браузерах, поддерживающих хранилища объект <code>Window</code>  выполняет объекты <code>WindowLocalStorage</code> и <code>WindowSessionStorage</code>, которые содержат свойства <code>localStorage</code> и <code>sessionStorage</code>) — вызов одного из них создаёт представление объекта <a href=\"/ru/docs/Web/API/Storage\"><code>Storage</code></a>, через который можно устанавливать, редактировать и удалять данные. Для каждого из типа хранилищ и по каждому домену используется отдельное представление Storage объекта  - они функционируют и управляются отдельно друг от друга. </p>\n\n<div class=\"note notecard\" id=\"sect1\">\n<p><strong>Замечание: </strong>Начиная с версии 45 Firefox, когда браузер прекращает работу/перезагружается, объем данных, сохранённых для каждого источника, ограничивается 10 МБ. Это было сделано, чтобы избежать проблем с памятью, вызванных чрезмерным использованием веб-хранилища.</p>\n</div>\n\n<div class=\"note notecard\" id=\"sect2\">\n<p><strong>Замечание: </strong>Доступ к веб хранилищу из iFrame третьей стороны запрещён, если пользователь <a href=\"https://support.mozilla.org/ru/kb/disable-third-party-cookies\" class=\"external\" rel=\" noopener\">отключил cookies третьих сторон</a> (Firefox ведёт себя так с <a href=\"/ru/docs/Mozilla/Firefox/Releases/43\">версии 43</a>).</p>\n</div>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Замечание:</strong> Web Storage это не тоже самое, что <a href=\"/ru/docs/Storage\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">mozStorage</a> (Mozilla's XPCOM интерфейсы для SQLite) или <a href=\"/ru/docs/Session_store_API\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">Session store API</a> (<a href=\"/ru/docs/XPCOM\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">XPCOM</a> утилита хранения для расширений).</p>\n</div>"}},{"type":"prose","value":{"id":"интерфейсы_веб_хранилища","title":"Интерфейсы Веб хранилища","isH3":false,"content":"<dl>\n <dt id=\"storage\"><a href=\"/ru/docs/Web/API/Storage\"><code>Storage</code></a></dt>\n <dd>Позволяет присваивать, извлекать (читать) и удалять данные для специфического домена и типа хранилища (сессии или локального).</dd>\n <dt id=\"window\"><a href=\"/ru/docs/Web/API/Window\"><code>Window</code></a></dt>\n <dd>Web Storage API расширяет <a href=\"/ru/docs/Web/API/Window\"><code>Window</code></a> объект, добавляя к нему два новых свойства  — <a href=\"/ru/docs/Web/API/Window/sessionStorage\"><code>Window.sessionStorage</code></a> и <a href=\"/ru/docs/Web/API/Window/localStorage\"><code>Window.localStorage</code></a> — которые предоставляют доступ к сессии текущего домена и к соответствующим локальным <a href=\"/ru/docs/Web/API/Storage\"><code>Storage</code></a> объектам, и <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Window/storage_event\"><code>Window.onstorage</code> <small>(en-US)</small></a> обработчик событий, который срабатывает при изменении объекта хранилища (например, при сохранении нового элемента)</dd>\n <dt id=\"storageevent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StorageEvent\"><code>StorageEvent</code> <small>(en-US)</small></a></dt>\n <dd>Событие <code title=\"event-storage\">storage</code> срабатывает на объекте документа Window при изменении объекта хранилища.</dd>\n</dl>"}},{"type":"prose","value":{"id":"примеры","title":"Примеры","isH3":false,"content":"<p>Чтобы проиллюстрировать типичное использование веб хранилища, мы создали простейший пример и назвали его <a href=\"https://github.com/mdn/dom-examples/tree/master/web-storage\" class=\"external\" rel=\" noopener\">Web Storage Demo</a>. На <a href=\"https://mdn.github.io/dom-examples/web-storage/\" class=\"external\" rel=\" noopener\">лендинге</a> нашего примера вы найдёте элементы управления для изменения фонового цвета, шрифта и изображения. Когда вы выбираете разные опции, страница мгновенно меняется. В дополнение, ваш выбор сохраняется в локальном хранилище, чтобы, если вы покинете страницу и потом загрузите её снова, ваши настройки восстановились. </p>\n\n<p>Также, мы сделали <a href=\"https://mdn.github.io/dom-examples/web-storage/event.html\" class=\"external\" rel=\" noopener\">страницу вывода событий</a>, которая выводит информацию о хранилище, каждый раз когда срабатывает событие <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StorageEvent\"><code>StorageEvent</code> <small>(en-US)</small></a>. Загрузите эту страницу в другой вкладке браузера, затем вернитесь на лендинг и поменяйте значения цвета, шрифта или изображения и понаблюдайте, как меняется выводимая информация.</p>"}},{"type":"prose","value":{"id":"спецификации","title":"Спецификации","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Specification</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://html.spec.whatwg.org/multipage/webstorage.html#webstorage\" class=\"external\" rel=\" noopener\">HTML Living Standard # webstorage</a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"поддержка_браузерами","title":"Поддержка браузерами","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"Window.localStorage","id":"window.localstorage","isH3":true,"query":"api.Window.localStorage","dataURL":"/ru/docs/Web/API/Web_Storage_API/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"browser_compatibility","value":{"title":"Window.sessionStorage","id":"window.sessionstorage","isH3":true,"query":"api.Window.sessionStorage","dataURL":"/ru/docs/Web/API/Web_Storage_API/bcd-2.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"приватный_режиминкогнито","title":"Приватный режим/Инкогнито","isH3":false,"content":"<p>Многие браузеры в наши дни поддерживают опции приватности, названные \"Инкогнито\" или \"Приватный просмотр\" и т.п., что позволяет быть уверенными, что следов приватной сессии не остаётся после закрытия браузера. Это фундаментальная несовместимость с Веб хранилищем по очевидным причинам. Таким образом, производители браузеров экспериментируют с различными сценариями, как справиться с этой несовместимостью.</p>\n\n<p>Многие браузеры выбрали стратегию, когда API хранилища доступно и кажется полностью функциональным, с одним большим отличием - все данные хранилища стираются после закрытия браузера. Для этих браузеров есть ещё другие интерпретации того, что следует делать с хранимыми данными (от обычного режима браузера). Следует ли им быть доступными в приватном режиме? Затем, есть несколько браузеров, особенно Safari, которые выбрали решение, в котором хранилище доступно, но пустое и имеет квоту 0 байт, фактически, делая невозможной запись туда данных.</p>\n\n<p>Разработчики должны быть осведомлены об этих различных реализациях и принимать их во внимание при разработке веб-сайтов, зависящих от API Веб хранилища. Для получения более подробной информации, пожалуйста, посмотрите на <a href=\"https://blog.whatwg.org/tag/localstorage\" class=\"external\" rel=\" noopener\">этот пост блога WHATWG</a>, специально посвящённый этой теме.</p>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"/ru/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\">Использование Web Storage API</a></li>\n <li><a href=\"https://medium.com/@ramsunvtech/onfocus-html5-storage-apis-b45d92aa424b\" class=\"external\" rel=\" noopener\">HTML5 Storage API By Venkatraman</a></li>\n</ul>\n\n<p> </p>\n\n<p> </p>"}}],"toc":[{"text":"Основы Веб хранилища и его использование","id":"основы_веб_хранилища_и_его_использование"},{"text":"Интерфейсы Веб хранилища","id":"интерфейсы_веб_хранилища"},{"text":"Примеры","id":"примеры"},{"text":"Спецификации","id":"спецификации"},{"text":"Поддержка браузерами","id":"поддержка_браузерами"},{"text":"Приватный режим/Инкогнито","id":"приватный_режиминкогнито"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"Web Storage API предоставляет механизмы, при помощи которых браузеры могут безопасно хранить пары ключ/значение в более интуитивно понятной манере, чем куки (cookies).","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Web Storage API","locale":"en-US","native":"English (US)"},{"title":"API de almacenamiento web","locale":"es","native":"Español"},{"title":"Web Storage API","locale":"fr","native":"Français"},{"title":"Web Storage API","locale":"ja","native":"日本語"},{"title":"Web Storage API","locale":"ko","native":"한국어"},{"title":"API de Armazenamento na Web","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Web Storage API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/api/web_storage_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/web_storage_api/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/Web_Storage_API","title":"Веб хранилище (API)"}],"pageTitle":"Веб хранилище (API) - Интерфейсы веб API | MDN","noIndexing":false}}