{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"NodeList","mdn_url":"/ru/docs/Web/API/NodeList","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/ru/docs/Web/API/NodeList\"><code>NodeList</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Свойства</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NodeList/length\"><code>length</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Методы</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NodeList/entries\"><code>entries()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NodeList/forEach\"><code>forEach()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NodeList/item\"><code>item()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NodeList/keys\"><code>keys()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NodeList/values\"><code>values()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Похожие страницы для DOM</summary><ol><li><a href=\"/ru/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/ru/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/ru/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/ru/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/ru/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CustomEvent\"><code>CustomEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/ru/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/ru/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/ru/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DocumentType\"><code>DocumentType</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/ru/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/ru/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/ru/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/ru/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/ru/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/ru/docs/Web/API/Node\"><code>Node</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/ru/docs/Web/API/Text\"><code>Text</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<p>Объект <strong>NodeList </strong>— это коллекция узлов, возвращаемая такими методами, как <a href=\"/ru/docs/Web/API/Node/childNodes\"><code>Node.childNodes</code></a> и <a href=\"/ru/docs/Web/API/Document/querySelectorAll\"><code>document.querySelectorAll</code></a>.</p>\n\n<div class=\"note notecard\" id=\"sect2\">\n<p>Несмотря на то, что <code>NodeList</code> не является массивом ( <code>Array</code> ), его вполне возможно перебрать при помощи метода forEach(). NodeList также можно конвертировать в <code>Array</code> при помощи <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a></p>\n\n<p>Однако некоторые старые браузеры на данный момент все ещё не поддерживают <code>NodeList.forEach()</code> или <code>Array.from()</code>. Данные ограничения можно обойти, используя <a href=\"/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach()</code></a> ( больше информации на этой странице ).</p>\n</div>"}},{"type":"prose","value":{"id":"свойства","title":"Свойства","isH3":false,"content":"<dl>\n <dt id=\"length\"><code>length</code></dt>\n <dd>Количество элементов в NodeList.</dd>\n</dl>"}},{"type":"prose","value":{"id":"методы","title":"Методы","isH3":false,"content":"<dl>\n <dt id=\"item_idx_\"><code><a href=\"/en-US/docs/Web/API/NodeList/item\" title=\"DOM/NodeList.item\">item</a> ( idx )</code></dt>\n <dd>Возвращает элемент из списка по его индексу или <code>null</code>, если индекс выходит за границы допустимого диапазона. Может быть использован как альтернатива <code>nodeList[idx]</code>, возвращающему <code>undefined</code> при недопустимом <code>idx.</code></dd>\n <dt id=\"entries\"><code>entries()</code></dt>\n <dd>Возвращает <a href=\"/ru/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>, позволяя перебрать все пары ключ/значение, содержащиеся в объекте.</dd>\n <dt id=\"foreach\"><code>forEach()</code></dt>\n <dd>Выполняет указанную функцию один раз для каждого элемента <code>NodeList</code></dd>\n <dt id=\"keys\">keys()</dt>\n <dd>Возвращает <a href=\"/ru/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>, позволяя перебрать все ключи каждой пары ключ/значение, содержащейся в объекте.</dd>\n <dt id=\"values\"><code>values()</code></dt>\n <dd>Возвращает <a href=\"/ru/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>, позволяя перебрать все значения каждой пары ключ/значение, содержащейся в объекте.</dd>\n</dl>"}},{"type":"prose","value":{"id":"описание","title":"Описание","isH3":false,"content":""}},{"type":"prose","value":{"id":"динамическая_коллекция","title":"Динамическая коллекция","isH3":true,"content":"<p>В определённых случаях <code>NodeList</code> может являться <em>динамической коллекцией</em>. Это означает, что любые изменения в DOM тут же отражаются на коллекции. Примером подобной коллекции является <a href=\"/ru/docs/Web/API/Node/childNodes\"><code>Node.childNodes</code></a>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> parent <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'parent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> child_nodes <span class=\"token operator\">=</span> parent<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>child_nodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// пусть равно \"2\"</span>\nparent<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>child_nodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// выведет \"3\"</span>\n</code></pre></div>\n\n<p>В других случаях <code>NodeList</code> является <em>статической коллекцией</em>. Это означает, что любые изменения в DOM не отражаются на его содержании. К примеру, <a href=\"/ru/docs/Web/API/Document/querySelectorAll\"><code>document.querySelectorAll</code></a> возвращает статический <code>NodeList</code>.</p>\n\n<p>Данное деление необходимо иметь в виду при выборе способа обхода элементов <code>NodeList</code>, а также сохранении длины списка в переменную.</p>"}},{"type":"prose","value":{"id":"отличия_nodelist_от_array","title":"Отличия <code>NodeList</code> от <code>Array</code>","isH3":true,"content":"<p><code>NodeList</code> используется подобно массивам, и потому может возникнуть закономерное желание использовать в нём методы, предоставляемые <code>Array.prototype</code>. Однако <code>NodeList</code> не реализует методы, подобные таковым у <code>Array</code>.</p>\n\n<p>В JavaScript существует механизм наследования, основанный на прототипах, применяемый как к встроенным («native») (таким как <code>Array</code>), так и «host»-объектам, предоставляемым средой исполнения (таким как <code>NodeList</code>) . Экземпляры класса <code>Array</code> получают свои методы (к примеру, <code>forEach </code>и <code>map</code>) из следующей цепочки наследования:</p>\n\n<p><code>myArray --&gt; Array.prototype --&gt; Object.prototype --&gt; null</code> (Цепочка прототипов объекта может быть получена рекурсивным вызовом Object.getPrototypeOf)</p>\n\n<p><code>forEach</code>, <code>map</code>, ровно как и все остальные свойства принадлежат <code>Array.prototype</code>.</p>\n\n<p>Цепочка же прототипов <code>NodeList</code> выглядит следующим образом:</p>\n\n<p><code>myNodeList --&gt; NodeList.prototype --&gt; Object.prototype --&gt; null</code></p>\n\n<p><code>NodeList.prototype</code> содержит метод <code>item</code>, но никак не остальные методы <code>Array.prototype</code>, поэтому они и не могут быть использованы с <code>NodeLists</code>.</p>\n\n<h4 id=\"обходные_пути\">Обходные пути</h4>\n\n<p>Один из способов решения данной проблемы — это копирование методов из <code>Array.prototype в </code><code>NodeList.prototype</code>. Однако необходимо отдавать себе отчёт в том, что <a href=\"http://perfectionkills.com/whats-wrong-with-extending-the-dom/\" class=\"external\" rel=\" noopener\">расширение объектов DOM опасно, особенно в старых версиях Internet Explorer (6, 7, 8)</a>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> arrayMethods <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyNames</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\narrayMethods<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span> attachArrayMethodsToNodeList <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">attachArrayMethodsToNodeList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">methodName</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>methodName <span class=\"token operator\">!==</span> <span class=\"token string\">\"length\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">NodeList</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span>methodName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span>methodName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> divs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'div'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> firstDiv <span class=\"token operator\">=</span> divs<span class=\"token punctuation\">[</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nfirstDiv<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">divChild</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  divChild<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">'#0F0'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Другой подход — расширение непосредственно объектов DOM:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> forEach <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>forEach<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> divs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'div'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> firstDiv <span class=\"token operator\">=</span> divs<span class=\"token punctuation\">[</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">forEach</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>firstDiv<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">divChild</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  divChild<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">'#0F0'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p>Стоит отметить, что передача объектов среды (такого как <code>NodeList</code>) через <code>this</code> native-методу (такому как <code>forEach</code>) гарантированно работает не во всех браузерах и точно не работает в некоторых.</p>\n</div>","titleAsText":"Отличия NodeList от Array"}},{"type":"prose","value":{"id":"пример","title":"Пример","isH3":false,"content":"<p>Элементы в <code>NodeList</code>, можно обработать следующим образом:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> myNodeList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> item <span class=\"token operator\">=</span> myNodeList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Вызов myNodeList.item(i) необязателен в JavaScript</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Не следует использовать конструкции <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for...in\" title=\"JavaScript/ Reference/Statements/for...in\">for...in</a></code> или <code><a href=\"/en-US/docs/JavaScript/Reference/Statements/for_each...in\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">for each...in</a></code> для перечисления элементов списка. Эти способы также перечислят и свойства <code>length</code> и <code>item</code>, что приведёт к логическим ошибкам в случае, если скрипт ожидает  только объекты <a href=\"/ru/docs/Web/API/Node\"><code>node</code></a>. Также <code>for..in</code> может перечислять свойства в любом порядке.</p>\n\n<p>Циклы <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for...of\" title=\"/en-US/docs/JavaScript/Reference/Statements/for...of\">for...of</a></code> корректно перечисляют все объекты внутри <code>NodeList</code> в браузерах, в которых поддерживается <code>for...of </code>(например, Firefox 13 или выше):</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'input[type=checkbox]'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> item <span class=\"token keyword\">of</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  item<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},{"type":"prose","value":{"id":"конвертирование_nodelist_в_array","title":"Конвертирование <code>NodeList</code> в <code>Array</code>","isH3":false,"content":"<p>Иногда удобнее работать с содержимым <code>NodeList</code>, используя методы <code>Array</code>. Ниже приведена техника преобразования <code>NodeList</code> к <code>Array</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> div_list <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns NodeList</span>\n<span class=\"token keyword\">var</span> div_array <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>div_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// преобразует NodeList в Array</span></code></pre></div>","titleAsText":"Конвертирование NodeList в Array"}},{"type":"prose","value":{"id":"спецификация","title":"Спецификация","isH3":false,"content":"<ul>\n <li><a href=\"https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-536297177\" class=\"external\" rel=\" noopener\">DOM Level 3</a></li>\n</ul>"}}],"toc":[{"text":"Свойства","id":"свойства"},{"text":"Методы","id":"методы"},{"text":"Описание","id":"описание"},{"text":"Пример","id":"пример"},{"text":"Конвертирование <code>NodeList</code> в <code>Array</code>","id":"конвертирование_nodelist_в_array"},{"text":"Спецификация","id":"спецификация"}],"summary":"Объект NodeList — это коллекция узлов, возвращаемая такими методами, как Node.childNodes и document.querySelectorAll.","popularity":0.0014,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"NodeList","locale":"en-US","native":"English (US)"},{"title":"NodeList","locale":"es","native":"Español"},{"title":"NodeList","locale":"fr","native":"Français"},{"title":"NodeList","locale":"ja","native":"日本語"},{"title":"NodeList","locale":"ko","native":"한국어"},{"title":"NodeList","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"NodeList","locale":"zh-CN","native":"中文 (简体)"},{"title":"NodeList","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ru/web/api/nodelist","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/api/nodelist/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/API","title":"Интерфейсы веб API"},{"uri":"/ru/docs/Web/API/NodeList","title":"NodeList"}],"pageTitle":"NodeList - Интерфейсы веб API | MDN","noIndexing":false}}