{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Медиа-буферизация, поиск и временные диапазоны","mdn_url":"/ru/docs/Web/Guide/Audio_and_video_delivery/buffering_seeking_time_ranges","locale":"ru","native":"Русский","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"summary\" id=\"sect1\">\n<p><span class=\"seoSummary\">Sometimes it's useful to know how much <a href=\"/ru/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> or <a href=\"/ru/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> has downloaded or is playable without delay — a good example of this is the buffered progress bar of an audio or video player. This article discusses how to build a buffer/seek bar using <a href=\"/en-US/docs/Web/API/TimeRanges\">TimeRanges</a>, and other features of the media API.</span></p>\n</div>"}},{"type":"prose","value":{"id":"buffered","title":"Buffered","isH3":false,"content":"<p>Атрибут <code>buffered</code> расскажет нам, какие части медиа-элемента были загружены. Он возвращает объект <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code> <small>(en-US)</small></a>, который содержит информацию о том, какие куски медиа были загружены. Обычно он непрерывный, но если пользователь перескакивает, когда медиа-элемент занят буферизацией, он может содержать пропуски.</p>\n\n<p>Это будет работать с <a href=\"/ru/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> или <a href=\"/ru/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>; теперь давайте рассмотрим простой пример для audio:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-audio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>music.mp3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>audio</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<p>Мы можем получить доступ к этому атрибутам, так:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> bufferedTimeRanges <span class=\"token operator\">=</span> myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"объект_timeranges","title":"Объект TimeRanges","isH3":false,"content":"<p>TimeRanges содержит данные о частях буферизованных участков медиафайла (один или более — сколько успело буферизоваться) (<a href=\"/en-US/docs/Web/API/TimeRanges\">Узнать больше о TimeRanges</a>).</p>\n\n<p>Объект <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code> <small>(en-US)</small></a> имеет следующие свойства:</p>\n\n<ul>\n <li><code>length</code>: число интервалов.</li>\n <li><code>start(index)</code>: начальное время указанного интервала.</li>\n <li><code>end(index)</code>: конечное время указанного интервала.</li>\n</ul>\n\n<p><span id=\"result_box\" lang=\"ru\"><span>Без действий пользователя обычно существует только один временной диапазон (</span></span>Time Ranges<span lang=\"ru\"><span>), но если вы переходите по медиа-файлу, может появиться более одного диапазона, как показано на рисунке ниже.</span> <span>Получится два буферизированных диапазона по времени - один с 0 по 5 секунду, а второй - с 15 по 19 секунду.</span></span></p>\n\n<pre class=\"notranslate\">------------------------------------------------------\n|=============|                    |===========|     |\n------------------------------------------------------\n0             5                    15          19    21</pre>\n\n<p><span id=\"result_box\" lang=\"ru\"><span>Для этого звукового файла</span></span> <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>TimeRange</code></a> будет иметь следующие доступные свойства:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// returns 2</span>\nmyAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns 0</span>\nmyAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// returns 5</span>\nmyAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns 15</span>\nmyAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// returns 19</span></code></pre></div>\n\n<p>Чтобы опробовать и визуализировать буферные диапазоны времени, мы можем написать немного HTML:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-audio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>music.mp3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audio/mpeg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>audio</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<p>и немного JavaScript:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> myAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> myCanvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> context <span class=\"token operator\">=</span> myCanvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    context<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'lightgray'</span><span class=\"token punctuation\">;</span>\n    context<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> myCanvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> myCanvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    context<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>\n    context<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> inc <span class=\"token operator\">=</span> myCanvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> myAudio<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// отображение TimeRanges</span>\n\n    myAudio<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'seeked'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">var</span> startX <span class=\"token operator\">=</span> myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> inc<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> endX <span class=\"token operator\">=</span> myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> inc<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> width <span class=\"token operator\">=</span> endX <span class=\"token operator\">-</span> startX<span class=\"token punctuation\">;</span>\n\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>startX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> myCanvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>startX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> myCanvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n\n<p><span id=\"result_box\" lang=\"ru\"><span>Это наглядно работает с длинными фрагментами аудио или видео. Нажмите кнопку воспроизведения и нажмите на панели прогресса и вы должны получить что-то вроде того, что показано на картинке ниже.</span> </span>Each red filled white rectangle represents a time range.</p>\n\n<p><img alt=\"A simple audio player with play button, seek bar and volume control, with a series of red rectangles beneath it representing time ranges.\" src=\"https://mdn.mozillademos.org/files/7347/bufferedtimeranges.png\" style=\"\" title=\"[https://mdn.mozillademos.org] A simple audio player with play button, seek bar and volume control, with a series of red rectangles beneath it representing time ranges.\" loading=\"lazy\"></p>\n\n<div class=\"note notecard\" id=\"sect2\">\n<p><strong>Note</strong>: You can see the <a href=\"http://jsbin.com/memazaro/1/edit\" class=\"external\" rel=\" noopener\">timerange code running live on JS Bin</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"seekable","title":"Seekable","isH3":false,"content":"<p>The <code>seekable</code> attribute returns a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code> <small>(en-US)</small></a> object and tells us which parts of the media can be played without delay; this is irrespective of whether that part has been downloaded or not. Some parts of the media may be seekable but not buffered if byte-range requests are enabled on the server. Byte range requests allow parts of the media file to be delivered from the server and so can be ready to play almost immediately — thus they are seekable.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> seekableTimeRanges <span class=\"token operator\">=</span> myAudio<span class=\"token punctuation\">.</span>seekable<span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"создание_собственной_буферизации","title":"Создание собственной буферизации","isH3":false,"content":"<p>If we wish to create our own custom player, we may want to provide feedback on how much of the media is ready to be played. In practice a good way to do this is use the <code>seekable</code> attribute, although as we have seen above seekable parts of the media are not neccessarily contiguous — they often are however and we can safely approximate this information to give the user an indication of which parts of the media can be played directly. We can find this point in the media using the following line of code:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> seekableEnd <span class=\"token operator\">=</span> myAudio<span class=\"token punctuation\">.</span>seekable<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>seekable<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Note</strong>: <code>myAudio.seekable.end(myAudio.seekable.length - 1)</code> actually tells us the end point of the last time range that is seekable (not all seekable media). In practice this is good enough as the browser either enables range requests or it doesn't. If it doesn't then <code>audio.seekable</code> will be equivalent to <code>audio.buffered</code>, which will give a valid indication of the end of seekable media. If range requests are enabled this value usually becomes the duration of the media almost instantly.</p>\n</div>\n\n<p>It is better perhaps to give an indication of how much media has actually downloaded — this what the browser's native players seem to display.</p>\n\n<p>Итак, давайте реализуем это. HTML для нашего плеера выглядит так:</p>\n\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code>&lt;audio id=<span class=\"token string\">\"my-audio\"</span> preload controls&gt;\n  &lt;source src=<span class=\"token string\">\"music.mp3\"</span> type=<span class=\"token string\">\"audio/mpeg\"</span>&gt;\n&lt;/audio&gt;\n&lt;div class=<span class=\"token string\">\"buffered\"</span>&gt;\n  &lt;span id=<span class=\"token string\">\"buffered-amount\"</span>&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;div class=<span class=\"token string\">\"progress\"</span>&gt;\n  &lt;span id=<span class=\"token string\">\"progress-amount\"</span>&gt;&lt;/span&gt;\n&lt;/div&gt;\n</code></pre></div>\n\n<p>Мы будем использовать следующий CSS для стилизации отображения буферизации:</p>\n\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.buffered</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #555<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#buffered-amount</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #777<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.progress</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> -20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#progress-amount</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #595<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>И следующий JavaScript реализует нашу функциональность:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">var</span> myAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  myAudio<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'progress'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> duration <span class=\"token operator\">=</span>  myAudio<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>duration <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> myAudio<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"buffered-amount\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> duration<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  myAudio<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'timeupdate'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> duration <span class=\"token operator\">=</span>  myAudio<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>duration <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'progress-amount'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">/</span> duration<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>The progress event is fired as data is downloaded, this is a good event to react to if we want to display download or buffering progress.</p>\n\n<p>The timeupdate event is fired 4 times a second as the media plays and that's where we increment our playing progress bar.</p>\n\n<p>This should give you results similar to the following, where the light grey bar represents the buffered progress and green bar shows the played progress:</p>\n\n<p><img alt=\"A simple audio player with play button, seek bar and volume control, with a bar below it. The bar has a red portion to show played video, and a dark gray bar to show how much has been buffered.\" src=\"https://mdn.mozillademos.org/files/7349/bufferedprogress.png\" style=\"\" title=\"[https://mdn.mozillademos.org] A simple audio player with play button, seek bar and volume control, with a bar below it. The bar has a red portion to show played video, and a dark gray bar to show how much has been buffered.\" loading=\"lazy\"></p>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Note</strong>: You can see the <a href=\"http://jsbin.com/badimipi/1/edit\" class=\"external\" rel=\" noopener\">buffering code running live on JS Bin</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"пару_слов_о_played","title":"Пару слов о Played","isH3":false,"content":"<p>Надо заметить, что есть свойство <code>played</code>, сообщающее, были ли воспроизведены интервалы полностью. Пример:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> played <span class=\"token operator\">=</span> audio<span class=\"token punctuation\">.</span>played<span class=\"token punctuation\">;</span> <span class=\"token comment\">// вернёт объект TimeRanges</span></code></pre></div>\n\n<p>Если просуммировать все интервалы <code>audio.played</code>, то получим долю прослушанного аудио, что может быть полезно для сбора метрик.</p>"}}],"toc":[{"text":"Buffered","id":"buffered"},{"text":"Объект TimeRanges","id":"объект_timeranges"},{"text":"Seekable","id":"seekable"},{"text":"Создание собственной буферизации","id":"создание_собственной_буферизации"},{"text":"Пару слов о Played","id":"пару_слов_о_played"}],"summary":"\nSometimes it's useful to know how much <audio> or <video> has downloaded or is playable without delay — a good example of this is the buffered progress bar of an audio or video player. This article discusses how to build a buffer/seek bar using TimeRanges, and other features of the media API.\nSometimes it's useful to know how much <audio> or <video> has downloaded or is playable without delay — a good example of this is the buffered progress bar of an audio or video player. This article discusses how to build a buffer/seek bar using TimeRanges, and other features of the media API.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Media buffering, seeking, and time ranges","locale":"en-US","native":"English (US)"},{"title":"Mémoire tampon, position, et plages de temps","locale":"fr","native":"Français"},{"title":"Media buffering, seeking, and time ranges","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/guide/audio_and_video_delivery/buffering_seeking_time_ranges","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/guide/audio_and_video_delivery/buffering_seeking_time_ranges/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/Guide","title":"Руководства Web-разработчика"},{"uri":"/ru/docs/Web/Guide/Audio_and_video_delivery","title":"Доставка аудио и видео контента"},{"uri":"/ru/docs/Web/Guide/Audio_and_video_delivery/buffering_seeking_time_ranges","title":"Медиа-буферизация, поиск и временные диапазоны"}],"pageTitle":"Медиа-буферизация, поиск и временные диапазоны - Руководства Web-разработчика | MDN","noIndexing":false}}