{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Валидация ограничений","mdn_url":"/ru/docs/Web/Guide/HTML/Constraint_validation","locale":"ru","native":"Русский","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Создание веб-форм всегда было сложной задачей. Хотя сверстать саму форму достаточно просто, проверить, имеет ли каждое поле валидное значение — сложнее, а информирование пользователя о проблеме может стать настоящей головной болью.<a href=\"/en-US/docs/Glossary/HTML5\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\"> HTML5 (en-US)</a> представил для форм новый механизм: он добавляет элементу <a href=\"/ru/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a> новые семантические типы и <em>constraint validation</em>, чтобы облегчить проверку содержимого на стороне клиента. С помощью новых атрибутов основные ограничения могут быть проверены без использования JavaScript; более сложные ограничения могут быть проверены с помощью <a href=\"/en-US/docs/Web/API/Constraint_validation\">Constraint validation API</a>.</p>\n\n<p>Базовое введение в эти концепции с примерами можно найти в разделе <a href=\"/ru/docs/Learn/Forms/Form_validation\">Валидация форм на стороне клиента</a>.</p>\n\n<div class=\"note notecard\" id=\"sect1\"><strong>Примечание:</strong> HTML5-валидация ограничений не отменяет необходимости дополнительной валидации на <em>стороне сервера</em>. Несмотря на то, что ожидается гораздо меньшее не валидных запросов формы, они всё же могут быть отправлены несовместимыми браузерами (например, не поддерживающими HTML5 или JavaScript) или злоумышленниками, которые пытаются взломать ваше веб-приложение. Следовательно, как и в случае с HTML4, вам по-прежнему нужно производить дополнительную валидацию ограничений ввода и на стороне сервера.</div>"}},{"type":"prose","value":{"id":"intrinsic_and_basic_constraints","title":"Внутренние и базовые ограничения","isH3":false,"content":"<p>В HTML5 базовые ограничения объявляются двумя способами:</p>\n\n<ul>\n <li>Задавать семантически наиболее подходящие значения для атрибута <a href=\"/ru/docs/Web/HTML/Element/Input#attr-type\"><code>type</code></a> элемента <a href=\"/ru/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a>. Например, типа <code>email</code> автоматически создаёт ограничение, которое проверяет, является ли значение валидным email-адресом.</li>\n <li>Использовать атрибуты валидации, позволяющие достаточно просто задать ограничения без помощи JavaScript.</li>\n</ul>"}},{"type":"prose","value":{"id":"semantic_input_types","title":"Семантические типы input","isH3":true,"content":"<p>Внутренние ограничения атрибута <a href=\"/ru/docs/Web/HTML/Element/Input#attr-type\"><code>type</code></a>:</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Тип input</th>\n   <th scope=\"col\">Описание ограничения</th>\n   <th scope=\"col\">Связанное нарушение</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code><a href=\"/en-US/docs/Web/HTML/Element/input/url\">&lt;input type=\"URL\"&gt;</a></code></td>\n   <td>Значение должно быть <a href=\"/en-US/docs/Learn/Common_questions/What_is_a_URL\">URL-адресом</a>, как указано в <a href=\"https://url.spec.whatwg.org/\" class=\"external\" rel=\" noopener\">URL Living Standard</a>.</td>\n   <td>Нарушение ограничения <strong><a href=\"/en-US/docs/Web/API/ValidityState/typeMismatch\">TypeMismatch</a></strong></td>\n  </tr>\n  <tr>\n   <td><code><a href=\"/en-US/docs/Web/HTML/Element/input/email\">&lt;input type=\"email\"&gt;</a></code></td>\n   <td>Значение должно быть синтаксически правильным email-адресом, который обычно имеет формат <code><em>username</em>@<em>hostname</em>.<em>tld</em></code>.</td>\n   <td>Нарушение ограничения <strong><a href=\"/en-US/docs/Web/API/ValidityState/typeMismatch\">TypeMismatch</a></strong></td>\n  </tr>\n </tbody>\n</table>\n\n<p>Для обоих этих типов input, если установлен атрибут <a href=\"/ru/docs/Web/HTML/Element/Input#attr-multiple\"><code>multiple</code></a> допускается ввод нескольких разделённых запятыми значений. Если какое-то из значений не удовлетворяет условию, описанному выше, срабатывает нарушение ограничения <strong>Type mismatch</strong>.</p>\n\n<p>Обратите внимание, что большинство типов input не имеют внутренних ограничений, так как некоторые из них недоступны для валидации ограничений или имеют алгоритм, по умолчанию преобразующий неправильные значения в правильные.</p>"}},{"type":"prose","value":{"id":"validation-related_attributes","title":"Атрибуты валидации","isH3":true,"content":"<p>В дополнение к атрибуту <code>type</code>, описанному выше, для описания основных ограничений используются следующие атрибуты:</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Атрибут</th>\n   <th scope=\"col\">Типы input, поддерживающие атрибут</th>\n   <th scope=\"col\">Возможные значения</th>\n   <th scope=\"col\">Описание ограничения</th>\n   <th scope=\"col\">Связанное нарушение</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code><a href=\"/ru/docs/Web/HTML/Attributes/pattern\">pattern</a></code></td>\n   <td><code>text</code>, <code>search</code>, <code>url</code>, <code>tel</code>, <code>email</code>, <code>password</code></td>\n   <td><a href=\"/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\">Регулярное выражение JavaScript</a> (без <a href=\"https://www.ecma-international.org/publications/standards/Ecma-262.htm\" class=\"external\" rel=\" noopener\">ECMAScript 5</a> флагов <code>global</code>, <code>ignoreCase</code>, and <code>multiline</code></td>\n   <td>Значение должно соответствовать шаблону.</td>\n   <td><code>Нарушение ограничения <strong><a href=\"/en-US/docs/Web/API/ValidityState/patternMismatch\">patternMismatch</a></strong></code></td>\n  </tr>\n  <tr>\n   <td rowspan=\"3\"><code><a href=\"/en-US/docs/Web/HTML/Attributes/min\">min</a></code></td>\n   <td><code>range</code>, <code>number</code></td>\n   <td>Валидное число</td>\n   <td rowspan=\"3\">Значение в поле должно быть больше или равно значению атрибута</td>\n   <td rowspan=\"3\">Нарушение ограничения <strong><code><a href=\"/en-US/docs/Web/API/ValidityState/rangeUnderflow\">rangeUnderflow</a></code></strong></td>\n  </tr>\n  <tr>\n   <td><code>date</code>, <code>month</code>, <code>week</code></td>\n   <td>Валидная дата</td>\n  </tr>\n  <tr>\n   <td><code>datetime</code>, <code>datetime-local</code>, <code>time</code></td>\n   <td>Валидная дата и время</td>\n  </tr>\n  <tr>\n   <td rowspan=\"3\"><code><a href=\"/en-US/docs/Web/HTML/Attributes/max\">max</a></code></td>\n   <td><code>range</code>, <code>number</code></td>\n   <td>Валидное число</td>\n   <td rowspan=\"3\">Значение в поле должно быть меньше или равно значению атрибута</td>\n   <td rowspan=\"3\">Нарушение ограничения <strong><code><a href=\"/en-US/docs/Web/API/ValidityState/rangeOverflow\">rangeOverflow</a></code></strong></td>\n  </tr>\n  <tr>\n   <td><code>date</code>, <code>month</code>, <code>week</code></td>\n   <td>Валидная дата</td>\n  </tr>\n  <tr>\n   <td><code>datetime</code>, <code>datetime-local</code>, <code>time</code></td>\n   <td>Валидная дата и время</td>\n  </tr>\n  <tr>\n   <td><code><a href=\"/en-US/docs/Web/HTML/Attributes/required\">required</a></code></td>\n   <td><code>text</code>, <code>search</code>, <code>url</code>, <code>tel</code>, <code>email</code>, <code>password</code>, <code>date</code>, <code>datetime</code>, <code>datetime-local</code>, <code>month</code>, <code>week</code>, <code>time</code>, <code>number</code>, <code>checkbox</code>, <code>radio</code>, <code>file</code>; а также элементы <a href=\"/ru/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> и <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code> <small>(en-US)</small></a></td>\n   <td><em>Нет</em>, так как это булев атрибут: его наличие означает <em>true</em>, а отсутствие — <em>false</em></td>\n   <td>В поле обязательно должно быть значение (если установлен атрибут)</td>\n   <td><strong><code><a href=\"/en-US/docs/Web/API/ValidityState/valueMissing\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">valueMissing</a></code></strong> constraint violation</td>\n  </tr>\n  <tr>\n   <td rowspan=\"5\"><code><a href=\"/en-US/docs/Web/HTML/Attributes/step\">step</a></code></td>\n   <td><code>date</code></td>\n   <td>Целое число дней</td>\n   <td rowspan=\"5\">Если для шага не задан литерал <code>any</code>, значением должно быть <strong>min</strong> + целое число, кратное шагу</td>\n   <td rowspan=\"5\">Нарушение ограничения <strong><code><a href=\"/en-US/docs/Web/API/ValidityState/stepMismatch\">stepMismatch</a></code></strong></td>\n  </tr>\n  <tr>\n   <td><code>month</code></td>\n   <td>Целое число месяцев</td>\n  </tr>\n  <tr>\n   <td><code>week</code></td>\n   <td>Целое число недель</td>\n  </tr>\n  <tr>\n   <td><code>datetime</code>, <code>datetime-local</code>, <code>time</code></td>\n   <td>Целое число секунд</td>\n  </tr>\n  <tr>\n   <td><code>range</code>, <code>number</code></td>\n   <td>Целое число</td>\n  </tr>\n  <tr>\n   <td><code><a href=\"/en-US/docs/Web/HTML/Attributes/minlength\">minlength</a></code></td>\n   <td><code>text</code>, <code>search</code>, <code>url</code>, <code>tel</code>, <code>email</code>, <code>password</code>; а также элемент <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code> <small>(en-US)</small></a>/td&gt;\n   </td><td>Целое число</td>\n   <td>Если атрибут не пустой, количество символов (точек кода) содержимого поля не должно быть меньше значения, указанного в атрибуте. Все символы новой строки нормализованы до одного символа (в отличие от CRLF-пар) для <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code> <small>(en-US)</small></a>.</td>\n   <td>Нарушение ограничения <strong><code><a href=\"/en-US/docs/Web/API/ValidityState/tooShort\">tooShort</a></code></strong></td>\n  </tr>\n  <tr>\n   <td><code><a href=\"/en-US/docs/Web/HTML/Attributes/maxlength\">maxlength</a></code></td>\n   <td><code>text</code>, <code>search</code>, <code>url</code>, <code>tel</code>, <code>email</code>, <code>password</code>; а также элемент <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code> <small>(en-US)</small></a></td>\n   <td>Целое число</td>\n   <td>Количество символов (точек кода) содержимого поля не должно превышать значение, указанное в атрибуте</td>\n   <td>Нарушение ограничения <strong><code><a href=\"/en-US/docs/Web/API/ValidityState/tooLong\">tooLong</a></code></strong></td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"constraint_validation_process","title":"Процесс валидации ограничений","isH3":false,"content":"<p>Валидация ограничений выполняется с помощью Constraint Validation API либо на отдельном элементе формы, либо на уровне формы, на самом элементе <a href=\"/ru/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a>. Способы валидации:</p>\n\n<ul>\n <li>Вызов метода <code>checkValidity()</code> или <code>reportValidity()</code> связанного с формой DOM-интерфейса, (<code><a href=\"/ru/docs/Web/API/HTMLInputElement\">HTMLInputElement</a></code>, <code><a href=\"/ru/docs/Web/API/HTMLSelectElement\">HTMLSelectElement</a></code>, <code><a href=\"/ru/docs/Web/API/HTMLButtonElement\">HTMLButtonElement</a></code>, <code><a href=\"/en-US/docs/Web/API/HTMLOutputElement\">HTMLOutputElement</a></code> или <code><a href=\"/en-US/docs/Web/API/HTMLTextAreaElement\">HTMLTextAreaElement</a></code>), который оценивает ограничения только на данном элементе, позволяя скрипту получить эту информацию. Метод <code>checkValidity()</code> возвращает логическое значение, указывающее, соотвествует ли значение элемента его ограничениям. (Обычно это делает браузер при определении того, какой CSS-псевдоклассов применяется: <a href=\"/ru/docs/Web/CSS/:valid\"><code>:valid</code></a> или <a href=\"/ru/docs/Web/CSS/:invalid\"><code>:invalid</code></a>.) Напротив, метод <code>reportValidity()</code> сообщает пользователю о любых нарушениях ограничений.</li>\n <li>Вызов метода <code>checkValidity()</code> или <code>reportValidity()</code> интерфейса <code><a href=\"/ru/docs/Web/API/HTMLFormElement\">HTMLFormElement</a></code>.</li>\n <li>Отправка самой формы.</li>\n</ul>\n\n<p>Вызов метода <code>checkValidity()</code> называется <em>статической</em> валидацией ограничений, а вызов метода <code>reportValidity()</code> или отправка формы называется <em>интерактивной</em> валидацией ограничений.</p>\n\n<div class=\"note notecard\" id=\"sect2\"><strong>Примечание: </strong>\n\n<ul>\n <li>Если элементу <a href=\"/ru/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> задан атрибут <a href=\"/ru/docs/Web/HTML/Element/form#attr-novalidate\"><code>novalidate</code></a>, интерактивная валидация ограничений не произойдёт.</li>\n <li>Вызов метода <code>submit()</code> интерфейса <code><a href=\"/ru/docs/Web/API/HTMLFormElement\">HTMLFormElement</a></code> не запускает валидацию ограничений. Другими словами, этот метод отправляет данные формы на сервер, даже если ограничения нарушены. Вместо него вызовите метод <code>click()</code> кнопки отправки формы.</li>\n</ul>\n</div>"}},{"type":"prose","value":{"id":"complex_constraints_using_the_constraint_validation_api","title":"Сложные ограничения с помощью Constraint Validation API","isH3":false,"content":"<p>С помощью JavaScript и Constraint Validation API можно реализовать более сложные ограничения, например, ограничения, касающиеся сразу нескольких полей или ограничения, включающие сложные вычисления.</p>\n\n<p>По сути, идея заключается в том, чтобы при наступлении определённого события поля формы (например, <strong>onchange</strong>) запускать JavaScript, чтобы определить, нарушено ограничение, и затем с помощью метода <code><em>field</em>.setCustomValidity()</code>, задать результат валидации: пустая строка означает, что ограничение соблюдается, а любая другая строка означает, что есть ошибка и эта строка является сообщением об ошибке, которое нужно показать пользователю.</p>"}},{"type":"prose","value":{"id":"constraint_combining_several_fields_postal_code_validation","title":"Ограничение, объединяющее несколько полей: Валидация почтового индекса","isH3":true,"content":"<p>Формат почтового индекса в разных странах отличается. Мало того, что в большинстве стран может быть дополнительный префикс с кодом страны (например, <code>D — </code> в Германии, <code>F — </code> во Франции или Швейцарии), в некоторых странах, почтовые индексы содержат фиксированное количеством цифр; другие, например, Великобритания, имеют ещё более сложную структуру, допускающую в определённых местах ещё и наличие букв.</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Примечание:</strong> Далее представлена не полная библиотека валидации почтового индекса, а скорее демонстрация ключевых концепций.</p>\n</div>\n\n<p>В качестве примера мы добавим скрипт, выполняющий валидацию органичений простой формы:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ZIP<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>ZIP : <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ZIP<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Country<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Country : <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Country<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ch<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Switzerland<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fr<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>France<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>de<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Germany<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>The Netherlands<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Validate<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<p>Получим следующую форму:</p>\n\n<p><iframe class=\"sample-code-frame\" title=\"Constraint combining several fields Postal code validation sample\" id=\"frame_constraint_combining_several_fields_postal_code_validation\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/Guide/HTML/Constraint_validation/_sample_.constraint_combining_several_fields_postal_code_validation.html\" loading=\"lazy\"></iframe></p>\n\n<p>Сначала запишем функцию, проверяющую само ограничение:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">checkZIP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Для каждой страны определяем шаблон, которому должен следовать почтовый индекс</span>\n  <span class=\"token keyword\">var</span> constraints <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">ch</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'^(CH-)?\\\\d{4}$'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Switzerland ZIPs must have exactly 4 digits: e.g. CH-1950 or 1950\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fr</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'^(F-)?\\\\d{5}$'</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">\"France ZIPs must have exactly 5 digits: e.g. F-75012 or 75012\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">de</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'^(D-)?\\\\d{5}$'</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">\"Germany ZIPs must have exactly 5 digits: e.g. D-12345 or 12345\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">nl</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'^(NL-)?\\\\d{4}\\\\s*([A-RT-Z][A-Z]|S[BCE-RT-Z])$'</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"Nederland ZIPs must have exactly 4 digits, followed by 2 letters except SA, SD and SS\"</span> <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Прочитать id страны</span>\n  <span class=\"token keyword\">var</span> country <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Country\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Получить поле NPA</span>\n  <span class=\"token keyword\">var</span> ZIPField <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ZIP\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Создать валидатор ограничения</span>\n  <span class=\"token keyword\">var</span> constraint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span>constraints<span class=\"token punctuation\">[</span>country<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>constraint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Валидировать индекс</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>constraint<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>ZIPField<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Индекс соответствует ограничению, мы используем ConstraintAPI, чтобы сообщить об этом</span>\n    ZIPField<span class=\"token punctuation\">.</span><span class=\"token function\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Индекс не соответствует ограничению , мы используем ConstraintAPI, чтобы</span>\n    <span class=\"token comment\">// показать сообщение, описывающее формат, требуемый для данной страны</span>\n    ZIPField<span class=\"token punctuation\">.</span><span class=\"token function\">setCustomValidity</span><span class=\"token punctuation\">(</span>constraints<span class=\"token punctuation\">[</span>country<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Затем мы связываем его с событием <strong>onchange</strong> для <a href=\"/ru/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> и с событием <strong>oninput</strong> для <a href=\"/ru/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Country\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>onchange <span class=\"token operator\">=</span> checkZIP<span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ZIP\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>oninput <span class=\"token operator\">=</span> checkZIP<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Вы можете посмотреть <a href=\"/@api/deki/files/4744/=constraint.html\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">живой пример</a> валидации индекса.</p>"}},{"type":"prose","value":{"id":"limiting_the_size_of_a_file_before_its_upload","title":"Ограничение размера загружаемого файла","isH3":true,"content":"<p>Ещё одним распространённым ограничением является лимит размера загружаемых файлов. Данная проверка на стороне клиента перед отправкой на сервер требует сочетания Constraint Validation API и особенно метода <code>field.setCustomValidity()</code> с другим JavaScript API, в данном случае — File API.</p>\n\n<p>Вот часть HTML:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FS<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Select a file smaller than 75 kB : <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FS<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<p>Она отображает:</p>\n\n<p><iframe class=\"sample-code-frame\" title=\"Limiting the size of a file before its upload sample\" id=\"frame_limiting_the_size_of_a_file_before_its_upload\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/Guide/HTML/Constraint_validation/_sample_.limiting_the_size_of_a_file_before_its_upload.html\" loading=\"lazy\"></iframe></p>\n\n<p>JavaScript считывает выбранный файл, с помощью метода <code>File.size()</code> получает его размер, сравнивает его с лимитом и вызывает Constraint Validation API, чтобы сообщить браузеру о нарушении:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">checkFileSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> <span class=\"token constant\">FS</span> <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> files <span class=\"token operator\">=</span> <span class=\"token constant\">FS</span><span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Если выбран хотя бы один файл</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">&gt;</span> <span class=\"token number\">75</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Проверить ограничение</span>\n       <span class=\"token constant\">FS</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Размер файла не должен превышать 75 kB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Если нарушения ограничений нет</span>\n  <span class=\"token constant\">FS</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Наконец мы связываем метод с нужным событием:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>onchange <span class=\"token operator\">=</span> checkFileSize<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p><a href=\"/@api/deki/files/4745/=fileconstraint.html\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Живой пример</a> валидации ограничения размера файла.</p>"}},{"type":"prose","value":{"id":"visual_styling_of_constraint_validation","title":"Визуальное оформление нарушения ограничений","isH3":false,"content":"<p>Помимо установки ограничений, веб-разработчики хотят управлять тем, какие сообщения показываются пользователям и как они оформлены.</p>"}},{"type":"prose","value":{"id":"controlling_the_look_of_elements","title":"Управление внешним видом элементов","isH3":true,"content":"<p>Изменять внешний вид элементов можно с помощью CSS-псевдоклассов.</p>\n\n<h4 id=\"required_and_optional_css_pseudo-classes\">CSS-псевдоклассы :required и :optional</h4>\n\n<p><a href=\"/ru/docs/Web/CSS/Pseudo-classes\">Псевдоклассы</a> <a href=\"/ru/docs/Web/CSS/:required\"><code>:required</code></a> и <a href=\"/ru/docs/Web/CSS/:optional\"><code>:optional</code></a> позволяют писать селекторы, соответствующие элементам формы, которые имеют или не имеют атрибут <a href=\"/ru/docs/Web/HTML/Global_attributes#attr-required\"><code>required</code></a></p>\n\n<h4 id=\"placeholder-shown_css_pseudo-class\">CSS-псевдокласс :placeholder-shown</h4>\n\n<p>Смотрите <a href=\"/ru/docs/Web/CSS/:placeholder-shown\"><code>:placeholder-shown</code></a></p>\n\n<h4 id=\"valid_invalid_css_pseudo-classes\">CSS-псевдоклассы :valid и :invalid</h4>\n\n<p><a href=\"/ru/docs/Web/CSS/Pseudo-classes\">Псевдоклассы</a> <a href=\"/ru/docs/Web/CSS/:valid\"><code>:valid</code></a> и <a href=\"/ru/docs/Web/CSS/:invalid\"><code>:invalid</code></a> используются для представления элементов &lt;input&gt;, содержимое которых является валидным или не валидным соответственно. Эти классы позволяют пользователю оформлять валидные или не валидные элементы формы, чтобы облегчить определение элементов, которые имеют корректный или некорректный формат.</p>"}},{"type":"prose","value":{"id":"controlling_the_text_of_constraint_violation","title":"Управление текстом нарушения ограничений","isH3":true,"content":"<p>Следующее может помочь с управлением текстом нарушения ограничений:</p>\n\n<ul>\n <li>Метод <a href=\"/en-US/docs/Web/API/Constraint_validation#element.setcustomvalidity(message)\">element.setCustomValidity(message)</a> для элементов:\n\n  <ul>\n   <li><a href=\"/ru/docs/Web/HTML/Element/fieldset\"><code>&lt;fieldset&gt;</code></a>. Примечание: Добавление кастомного сообщения валидации на элемент fieldset не предотвращает отправку формы в большинстве браузеров.</li>\n   <li><a href=\"/ru/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a></li>\n   <li><a href=\"/ru/docs/Web/HTML/Element/output\"><code>&lt;output&gt;</code></a></li>\n   <li><a href=\"/ru/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a></li>\n   <li>Кнопка отправки формы в виде элемента <a href=\"/ru/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> или <code>input</code> <code>submit</code> с указанным типом <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/input/submit\">submit <small>(en-US)</small></a>. Другие типы кнопок не участвуют в валидации ограничений.</li>\n   <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code> <small>(en-US)</small></a></li>\n  </ul>\n </li>\n <li>Интерфейс <a href=\"/en-US/docs/Web/API/ValidityState\"><code>ValidityState</code></a> описывает объект, возвращаемый свойством <a href=\"/en-US/docs/Web/API/Constraint_validation#validity\">validity</a> перечисленных выше типов элементов. Он представляет разные способы определения не валидности значения. Вместе они помогают объяснить, почему значение элемента не проходит валидацию, если оно не валидно.</li>\n</ul>"}}],"toc":[{"text":"Внутренние и базовые ограничения","id":"intrinsic_and_basic_constraints"},{"text":"Процесс валидации ограничений","id":"constraint_validation_process"},{"text":"Сложные ограничения с помощью Constraint Validation API","id":"complex_constraints_using_the_constraint_validation_api"},{"text":"Визуальное оформление нарушения ограничений","id":"visual_styling_of_constraint_validation"}],"summary":"Создание веб-форм всегда было сложной задачей. Хотя сверстать саму форму достаточно просто, проверить, имеет ли каждое поле валидное значение — сложнее, а информирование пользователя о проблеме может стать настоящей головной болью. HTML5 (en-US) представил для форм новый механизм: он добавляет элементу <input> новые семантические типы и constraint validation, чтобы облегчить проверку содержимого на стороне клиента. С помощью новых атрибутов основные ограничения могут быть проверены без использования JavaScript; более сложные ограничения могут быть проверены с помощью Constraint validation API.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Constraint validation","locale":"en-US","native":"English (US)"},{"title":"制約検証","locale":"ja","native":"日本語"},{"title":"约束验证","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ru/web/guide/html/constraint_validation","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/guide/html/constraint_validation/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/Guide","title":"Руководства Web-разработчика"},{"uri":"/ru/docs/Web/Guide/HTML/Constraint_validation","title":"Валидация ограничений"}],"pageTitle":"Валидация ограничений - Руководства Web-разработчика | MDN","noIndexing":false}}