{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Обработка аудио и видео","mdn_url":"/ru/docs/Web/Guide/Audio_and_video_manipulation","locale":"ru","native":"Русский","sidebarHTML":"\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"summary\" id=\"sect1\">\n<p>Веб-технологии примечательны тем, что они позволяют использовать различные инструменты в совокупности. Например, можно проводить манипуляции над имеющимися в браузере аудио и видео потоками с помощью <a href=\"/ru/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a>, <a href=\"/en-US/docs/Web/API/WebGL_API\">WebGL</a> или <a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a>: напрямую изменять аудио и видео, т.е. добавлять эффекты к аудио (реверберацию, компрессор), или к видео (фильтры ч/б, сепия и т.д.). В этой статье рассказывается о том, как это сделать.</p>\n</div>\n\n<div class=\"note notecard\" id=\"sect2\">\n<p><strong>Далее</strong> ещё в процессе перевода.</p>\n</div>"}},{"type":"prose","value":{"id":"обработка_видео","title":"Обработка видео","isH3":false,"content":"<p>Иногда удобно перенимать индивидуально размеры кадра в пикселях с каждого конкретного видео.</p>"}},{"type":"prose","value":{"id":"видео_и_холст_canvas","title":"Видео и холст (canvas)","isH3":true,"content":"<p>Элемент \"холст\" (<a href=\"/ru/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a>) — представляет поверхность (область) для рисования графикой на веб-странице. Это очень мощный инструмент, поэтому он может использоваться совместно с видео.</p>\n\n<p>Обычно это происходит следующим образом:</p>\n\n<ol>\n <li>Write a frame from the <a href=\"/ru/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element to an intermediary <a href=\"/ru/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element.</li>\n <li>Read the data from the intermediary <code>&lt;canvas&gt;</code> element and manipulate it.</li>\n <li>Write the manipulated data to your \"display\" <code>&lt;canvas&gt;</code>.</li>\n <li>Pause and repeat.</li>\n</ol>\n\n<p>For example, let's process a video to display it in greyscale. In this case, we'll show both the source video and the output greyscale frames. Ordinarily, if you were implementing a \"play video in greyscale\" feature, you'd probably add <code>display: none</code> to the style for the <code>&lt;video&gt;</code> element, to keep the source video from being drawn to the screen while showing only the canvas showing the altered frames.</p>\n\n<h4 id=\"html\">HTML</h4>\n\n<p>We can set up our video player and <code>&lt;canvas&gt;</code> element like this:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-video<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>480<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>270<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://jplayer.org/video/webm/Big_Buck_Bunny_Trailer.webm<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video/webm<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://jplayer.org/video/m4v/Big_Buck_Bunny_Trailer.m4v<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video/mp4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>480<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>270<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<h4 id=\"javascript\">JavaScript</h4>\n\n<p>This code handles altering the frames.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> processor <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">timerCallback</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>ended<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">computeFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      self<span class=\"token punctuation\">.</span><span class=\"token function\">timerCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// roughly 60 frames per second</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function-variable function\">doLoad</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>c1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx1 <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"play\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      self<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n      self<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n      self<span class=\"token punctuation\">.</span><span class=\"token function\">timerCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function-variable function\">computeFrame</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx1<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> frame <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx1<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> grey <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n      frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> grey<span class=\"token punctuation\">;</span>\n      frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> grey<span class=\"token punctuation\">;</span>\n      frame<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> grey<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx1<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  </code></pre></div>\n\n<p>Когда страница загрузилась осуществите вызов:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>processor<span class=\"token punctuation\">.</span><span class=\"token function\">doLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n\n<h4 id=\"результат\">Результат</h4>\n\n<p><iframe class=\"sample-code-frame\" title=\"Видео и холст canvas sample\" id=\"frame_видео_и_холст_canvas\" width=\"100%\" height=\"580\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/Guide/Audio_and_video_manipulation/_sample_.%D0%B2%D0%B8%D0%B4%D0%B5%D0%BE_%D0%B8_%D1%85%D0%BE%D0%BB%D1%81%D1%82_canvas.html\" loading=\"lazy\"></iframe></p>\n\n<p>This is a pretty simple example showing how to manipulate video frames using a canvas. For efficiency, you should consider using <a href=\"/ru/docs/Web/API/window/requestAnimationFrame\" title=\"requestAnimationFrame()\"><code>requestAnimationFrame()</code></a> instead of <code>setTimeout()</code> when running on browsers that support it.</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Примечание</strong>: Due to potential security issues if your video is on a different domain than your code, you'll need to enable <a href=\"/en-US/docs/Web/HTTP/CORS\">CORS (Cross Origin Resource Sharing)</a> on your video server.</p>\n</div>"}},{"type":"prose","value":{"id":"видео_и_webgl","title":"Видео и WebGL","isH3":true,"content":"<p><a href=\"/en-US/docs/Web/API/WebGL_API\">WebGL</a> is a powerful API that uses canvas to draw hardware-accelerated 3D or 2D scenes. You can combine WebGL and the <a href=\"/ru/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element to create video textures, which means you can put video inside 3D scenes.</p>\n\n<p><iframe width=\"670\" height=\"510\" src=\"https://mdn.github.io/webgl-examples/tutorial/sample8/index.html\" loading=\"lazy\"></iframe></p>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Примечание</strong>: You can find the <a href=\"https://github.com/mdn/webgl-examples/tree/gh-pages/tutorial/sample8\" class=\"external\" rel=\" noopener\">source code of this demo on GitHub</a> (<a href=\"https://mdn.github.io/webgl-examples/tutorial/sample8/\" class=\"external\" rel=\" noopener\">see it live</a> also).</p>\n</div>"}},{"type":"prose","value":{"id":"скорость_воспроизведения","title":"Скорость воспроизведения","isH3":true,"content":"<p>We can also adjust the rate that audio and video plays at using an attribute of the <a href=\"/ru/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> and <a href=\"/ru/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element called <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLMediaElement/playbackRate\"><code>playbackRate</code> <small>(en-US)</small></a>. <code>playbackRate</code> is a number that represents a multiple to be applied to the rate of playback, for example 0.5 represents half speed while 2 represents double speed.</p>\n\n<p>Note that the <code>playbackRate</code> property works with both <code>&lt;audio&gt;</code> and <code>&lt;video&gt;</code>, but in both cases, it changes the playback speed but <em>not</em> the pitch. To<span style=\"\"> manipulate the audio's pitch you need to use the Web Audio API. See the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioBufferSourceNode/playbackRate\"><code>AudioBufferSourceNode.playbackRate</code> <small>(en-US)</small></a> property.</span></p>\n\n<h4 id=\"html_2\">HTML</h4>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-video<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span>\n       <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://jplayer.org/video/m4v/Big_Buck_Bunny_Trailer.m4v<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<h4 id=\"javascript_2\">JavaScript</h4>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myVideo <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyVideo<span class=\"token punctuation\">.</span>playbackRate <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n\n\n<p><iframe class=\"sample-code-frame\" title=\"Playable code sample\" id=\"frame_playable_code\" width=\"700\" height=\"425\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/Guide/Audio_and_video_manipulation/_sample_.playable_code.html\" loading=\"lazy\"></iframe></p>\n\n<div class=\"note notecard\" id=\"sect6\">\n<p><strong>Примечание</strong>: Попробуйте запустить <a href=\"http://jsbin.com/qomuvefu/2/edit\" class=\"external\" rel=\" noopener\">этот пример</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"обработка_аудио","title":"Обработка аудио","isH3":false,"content":"<p><code>playbackRate</code> aside, to manipulate audio you'll typically use the <a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a>.</p>"}},{"type":"prose","value":{"id":"выбор_источника_аудио","title":"Выбор источника аудио","isH3":true,"content":"<p>The Web Audio API can receive audio from a variety of sources, then process it and send it back out to an <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code> <small>(en-US)</small></a> representing the output device to which the sound is sent after processing.</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">If the audio source is...</th>\n   <th scope=\"col\">Use this Web Audio node type</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td>An audio track from an HTML <a href=\"/ru/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> or <a href=\"/ru/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element</td>\n   <td><a href=\"/ru/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></td>\n  </tr>\n  <tr>\n   <td>A plain raw audio data buffer in memory</td>\n   <td><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code> <small>(en-US)</small></a></td>\n  </tr>\n  <tr>\n   <td>An oscillator generating a sine wave or other computed waveform</td>\n   <td><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code> <small>(en-US)</small></a></td>\n  </tr>\n  <tr>\n   <td>An audio track from <a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC</a> (such as the microphone input you can get using <a href=\"/ru/docs/Web/API/MediaDevices/getUserMedia\" title=\"getUserMedia()\"><code>getUserMedia()</code></a>.</td>\n   <td><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"аудио_фильтры","title":"Аудио фильтры","isH3":true,"content":"<p>The Web Audio API has a lot of different filter/effects that can be applied to audio using the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code> <small>(en-US)</small></a>, for example.</p>\n\n<h4 id=\"html_3\">HTML</h4>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-video<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span>\n       <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myvideo.mp4<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video/mp4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<h4 id=\"javascript_3\">JavaScript</h4>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    audioSource <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">createMediaElementSource</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filter <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">createBiquadFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\naudioSource<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>filter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfilter<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Configure filter</span>\nfilter<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"lowshelf\"</span><span class=\"token punctuation\">;</span>\nfilter<span class=\"token punctuation\">.</span>frequency<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\nfilter<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n\n\n<p><iframe class=\"sample-code-frame\" title=\"Playable code 2 sample\" id=\"frame_playable_code_2\" width=\"700\" height=\"425\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/Web/Guide/Audio_and_video_manipulation/_sample_.playable_code_2.html\" loading=\"lazy\"></iframe></p>\n\n<div class=\"note notecard\" id=\"sect8\">\n<p><strong>Примечание</strong>: unless you have <a href=\"/en-US/docs/Web/HTTP/CORS\">CORS</a> enabled, to avoid security issues your video should be on the same domain as your code.</p>\n</div>\n\n<h4 id=\"типичные_для_аудио_фильтры\">Типичные для аудио фильтры</h4>\n\n<p>These are some of the common types of audio filter you can apply:</p>\n\n<ul>\n <li>Low Pass: Allows frequencies below the cutoff frequency to pass through and attenuates frequencies above the cutoff.</li>\n <li>High Pass: Allows frequencies above the cutoff frequency to pass through and attenuates frequencies below the cutoff.</li>\n <li>Band Pass: Allows a range of frequencies to pass through and attenuates the frequencies below and above this frequency range.</li>\n <li>Low Shelf: Allows all frequencies through, but adds a boost (or attenuation) to the lower frequencies.</li>\n <li>High Shelf: Allows all frequencies through, but adds a boost (or attenuation) to the higher frequencies.</li>\n <li>Peaking: Allows all frequencies through, but adds a boost (or attenuation) to a range of frequencies.</li>\n <li>Notch: Allows all frequencies through, except for a set of frequencies.</li>\n <li>Allpass: Allows all frequencies through, but changes the phase relationship between the various frequencies.</li>\n</ul>\n\n<div class=\"note notecard\" id=\"sect9\">\n<p><strong>Примечание</strong>: Более подробно смотрите здесь: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code> <small>(en-US)</small></a></p>\n</div>"}},{"type":"prose","value":{"id":"convolutions_and_impulses","title":"Convolutions and impulses","isH3":true,"content":"<p>It's also possible to apply impulse responses to audio using the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code> <small>(en-US)</small></a>. An <strong>impulse response</strong> is the sound created after a brief impulse of sound (like a hand clap). An impulse response will signify the environment in which the impulse was created (for example, an echo created by clapping your hands in a tunnel).</p>\n\n<h4 id=\"пример\">Пример</h4>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> convolver <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">createConvolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconvolver<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>impulseResponseBuffer<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Connect the graph.</span>\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>convolver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconvolver<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>See this <a href=\"https://codepen.io/a2sheppy/pen/JjPgVYL\" class=\"external\" rel=\" noopener\">Codepen</a> for an applied (but very, very silly; like, little kids will giggle kind of silly) example.</p>"}},{"type":"prose","value":{"id":"spatial_audio","title":"Spatial audio","isH3":true,"content":"<p>We can also position audio using a <strong>panner node</strong>. A panner node—<a href=\"/ru/docs/Web/API/PannerNode\"><code>PannerNode</code></a>—lets us define a source cone as well as positional and directional elements, all in 3D space as defined using 3D cartesian coordinates.</p>\n\n<h4 id=\"пример_2\">Пример</h4>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> panner <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">createPanner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>coneOuterGain <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>coneOuterAngle <span class=\"token operator\">=</span> <span class=\"token number\">120</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>coneInnerAngle <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\npanner<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>panner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Position the listener at the origin.</span>\ncontext<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<div class=\"note notecard\" id=\"sect10\">\n<p><strong>Примечание</strong>: You can find an <a href=\"https://github.com/mdn/webaudio-examples/tree/master/panner-node\" class=\"external\" rel=\" noopener\">example on our GitHub repo</a>sitory (<a href=\"https://mdn.github.io/webaudio-examples/panner-node/\" class=\"external\" rel=\" noopener\">see it live</a> also).</p>\n</div>"}},{"type":"prose","value":{"id":"кодеки_javascript","title":"Кодеки JavaScript","isH3":false,"content":"<p>It's also possible to manipulate audio at a low level using JavaScript. This can be useful should you want to create audio codecs.</p>\n\n<p>Libraries currently exist for the following formats :</p>\n\n<ul>\n <li>AAC: <a href=\"https://github.com/audiocogs/aac.js\" class=\"external\" rel=\" noopener\">AAC.js</a></li>\n <li>ALAC: <a href=\"https://github.com/audiocogs/alac.js\" class=\"external\" rel=\" noopener\">alac.js</a></li>\n <li>FLAC: <a href=\"https://github.com/audiocogs/flac.js\" class=\"external\" rel=\" noopener\">flac.js</a></li>\n <li>MP3: <a href=\"https://github.com/audiocogs/mp3.js\" class=\"external\" rel=\" noopener\">mp3.js</a></li>\n <li>Opus: <a href=\"https://github.com/audiocogs/opus.js\" class=\"external\" rel=\" noopener\">Opus.js</a></li>\n <li>Vorbis: <a href=\"https://github.com/audiocogs/vorbis.js\" class=\"external\" rel=\" noopener\">vorbis.js</a></li>\n</ul>\n\n<div class=\"note notecard\" id=\"sect11\">\n<p><strong>Примечание</strong>: At Audiocogs, you can <a href=\"http://audiocogs.org/codecs/\" class=\"external\" rel=\" noopener\">Try out a few demos</a>; Audiocogs also provides a framework, <a href=\"http://audiocogs.org/codecs/\" class=\"external\" rel=\" noopener\">Aurora.js</a>, which is intended to help you author your own codecs in JavaScript.</p>\n</div>"}},{"type":"prose","value":{"id":"примеры","title":"Примеры","isH3":false,"content":"<ul>\n <li><a href=\"https://github.com/mdn/\" class=\"external\" rel=\" noopener\">Various Web Audio API (and other) examples</a></li>\n <li><a href=\"https://github.com/chrisdavidmills/threejs-video-cube\" class=\"external\" rel=\" noopener\">THREE.js Video Cube example</a></li>\n <li><a href=\"https://chromium.googlecode.com/svn/trunk/samples/audio/convolution-effects.html\" class=\"external\" rel=\" noopener\">Convolution Effects in Real-Time</a></li>\n</ul>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также","isH3":false,"content":""}},{"type":"prose","value":{"id":"tutorials","title":"Tutorials","isH3":true,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Manipulating Video Using Canvas</a></li>\n <li><a href=\"/en-US/docs/Web/Guide/Audio_and_video_delivery/WebAudio_playbackRate_explained\">HTML5 playbackRate explained</a></li>\n <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Using the Web Audio API</a></li>\n <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Web_audio_spatialization_basics\">Web audio spatialisation basics</a></li>\n <li><a href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL#using_the_video_frames_as_a_texture\">Using Video frames as a WebGL Texture</a> (You can also the <a href=\"https://threejs.org\" class=\"external\" rel=\" noopener\">THREE.js</a> WebGL library (and others) to <a href=\"http://stemkoski.github.io/Three.js/Video.html\" class=\"external\" rel=\" noopener\">achieve this effect</a>)</li>\n <li><a href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL\">Animating Textures in WebGL</a></li>\n <li><a href=\"https://www.html5rocks.com/en/tutorials/webaudio/games/#toc-room\" class=\"external\" rel=\" noopener\">Developing Game Audio with the Web Audio API (Room effects and filters)</a></li>\n</ul>"}},{"type":"prose","value":{"id":"reference","title":"Reference","isH3":true,"content":"<ul>\n <li>The <a href=\"/ru/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> and <a href=\"/ru/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> elements</li>\n <li>The <a href=\"/ru/docs/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a> API</li>\n <li>The <a href=\"/ru/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element</li>\n <li><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></li>\n <li><a href=\"/en-US/docs/Web/API/AudioContext\">AudioContext</a></li>\n <li>More info on <a href=\"/en-US/docs/Web/API/BaseAudioContext/createPanner\">Spatial Audio</a></li>\n <li><a href=\"/en-US/docs/Web/Media\">Web media technologies</a></li>\n</ul>\n\n<div id=\"sect12\"></div>"}}],"toc":[{"text":"Обработка видео","id":"обработка_видео"},{"text":"Обработка аудио","id":"обработка_аудио"},{"text":"Кодеки JavaScript","id":"кодеки_javascript"},{"text":"Примеры","id":"примеры"},{"text":"Смотрите также","id":"смотрите_также"}],"summary":"\nВеб-технологии примечательны тем, что они позволяют использовать различные инструменты в совокупности. Например, можно проводить манипуляции над имеющимися в браузере аудио и видео потоками с помощью <canvas>, WebGL или Web Audio API: напрямую изменять аудио и видео, т.е. добавлять эффекты к аудио (реверберацию, компрессор), или к видео (фильтры ч/б, сепия и т.д.). В этой статье рассказывается о том, как это сделать.\n","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Audio and video manipulation","locale":"en-US","native":"English (US)"},{"title":"Manipulation Audio et Vidéo","locale":"fr","native":"Français"},{"title":"音声と動画の加工","locale":"ja","native":"日本語"}],"source":{"folder":"ru/web/guide/audio_and_video_manipulation","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/guide/audio_and_video_manipulation/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/Guide","title":"Руководства Web-разработчика"},{"uri":"/ru/docs/Web/Guide/Audio_and_video_manipulation","title":"Обработка аудио и видео"}],"pageTitle":"Обработка аудио и видео - Руководства Web-разработчика | MDN","noIndexing":false}}