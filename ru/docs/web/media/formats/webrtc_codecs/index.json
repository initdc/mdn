{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Кодеки, используемые WebRTC","mdn_url":"/ru/docs/Web/Media/Formats/WebRTC_codecs","locale":"ru","native":"Русский","sidebarHTML":"\n<ol></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<p>С <a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a> возможно создание сайтов и приложений, позволяющих пользователям общаться в реальном времени, используя аудио и/или видео, а также передавать данные или другую информацию. Для общения, двум устройствам необходима возможность согласования использования кодеков, для каждой дорожки в потоке данных, для успешного взаимодействия и обмена медиаданными. В этом руководстве рассматриваются кодеки, которые требуются браузерам для этого, а также другие кодеки, которые поддерживаются некоторыми или всеми браузерами, поддерживающими <span class=\"seoSummary\">WebRTC.</span></p>"}},{"type":"prose","value":{"id":"безконтейнерные_медиаданные","title":"Безконтейнерные медиаданные","isH3":false,"content":"<p>WebRTC использует объект типа <a href=\"/ru/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> для представления каждого трека, передающегося между узлами соединения без использования контейнера или объекта типа <a href=\"/ru/docs/Web/API/MediaStream\"><code>MediaStream</code></a> , объединяющего треки. Какие кодеки могут быть в этих треках, спецификацией  WebRTC не определяется. Однако, <a href=\"https://datatracker.ietf.org/doc/html/rfc7742\" class=\"external\" rel=\" noopener\">RFC 7742</a> определяет, что все браузеры, поддерживающие WebRTC, должны поддерживать <a href=\"/en-US/docs/Web/Media/Formats/Video_codecs#vp8\">VP8</a> и <a href=\"/en-US/docs/Web/Media/Formats/Video_codecs#avc_(h.264)\">H.264</a> ограниченный базовый профиль для видео; и <a href=\"https://datatracker.ietf.org/doc/html/rfc7874\" class=\"external\" rel=\" noopener\">RFC 7874</a> , определяющая, что браузеры должны поддерживать, по меньшей мере, кодеки <a href=\"/en-US/docs/Web/Media/Formats/Audio_codecs#opus\">Opus</a> и <a href=\"/en-US/docs/Web/Media/Formats/Audio_codecs#g.711\">G.711</a>  форматов PCMA и PCMU.</p>\n\n<p>Эти две спецификации определяют свойства, которые должны поддерживаться каждым кодеком, а так же определённые функции для удобства использования, к примеру, функция эхоподавления. В этом руководстве происходит обзор кодеков, поддержка которых обязательна браузерам для реализации WebRTC, а так же иные (не обязательные) кодеки, поддерживаемые отдельными или всеми браузерами,.</p>\n\n<p>Хоть сжатие всегда и необходимо при работе со средствами массовой информации в Интернете, оно имеет дополнительное значение при проведении видеоконференций, чтобы участники могли общаться без задержек и перерывов. Второстепенное значение имеет необходимость синхронизации видео и звука, чтобы движения и любая вспомогательная информация (например, слайды или проекция) были представлены одновременно с соответствующим звуком</p>"}},{"type":"prose","value":{"id":"общие_требования_к_кодекам","title":"Общие требования к кодекам","isH3":false,"content":"<p>Прежде чем рассматривать возможности и требования, специфичные для кодеков, необходимо выполнить несколько общих требований, которые должны быть выполнены при любой конфигурации кодеков, используемой с WebRTC</p>\n\n<p>Если <a href=\"/ru/docs/Glossary/SDP\">SDP</a> специально не указывает иное, веб-браузер, принимающий видеопоток WebRTC, должен иметь возможность обрабатывать видео со скоростью не менее 20 кадров в секунду при минимальном разрешении 320 пикселей в ширину и 240 пикселей в высоту. Рекомендуется, чтобы видео кодировалось с частотой кадров и размером не ниже этого, поскольку это, по сути, нижняя граница того, что WebRTC обычно должен обрабатывать.</p>\n\n<p>SDP поддерживает независимый от кодеков способ указания предпочтительных разрешений видео (<a href=\"https://datatracker.ietf.org/doc/html/rfc6236\" class=\"external\" rel=\" noopener\">RFC 6236</a>). Это делается путём отправки <code>a=imageattr</code> атрибута SDP для указания максимально допустимого разрешения. Однако отправителю не требуется поддерживать этот механизм, поэтому вы должны быть готовы получать носители с другим разрешением, чем вы запрашивали. Помимо этого простого запроса максимального разрешения, определённые кодеки могут предлагать дополнительные способы запроса конкретных конфигураций мультимедиа.</p>"}},{"type":"prose","value":{"id":"поддерживаемые_видео_кодеки","title":"Поддерживаемые видео кодеки","isH3":false,"content":"<p>WebRTC устанавливает набор базовых кодеков, которые требуются браузерам для работы. Некоторые браузеры могут поддерживать дополнительный набор кодеков.</p>\n\n<p>Ниже приведены видеокодеки, которые требуются в любом полностью совместимом с WebRTC браузере, а также требуемые профили и браузеры, которые фактически соответствуют требованиям</p>\n\n<table class=\"standard-table\">\n <caption>\n <p>Обязательные видеокодеки</p>\n </caption>\n <thead>\n  <tr>\n   <th scope=\"row\">Наименование кодека</th>\n   <th scope=\"col\">Профиль</th>\n   <th scope=\"col\">Совместимость с браузерами</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <th scope=\"row\"><a href=\"#vp8\">VP8</a></th>\n   <td>—</td>\n   <td>Chrome, Edge, Firefox, Safari (12.1+)</td>\n  </tr>\n  <tr>\n   <th scope=\"row\"><a href=\"#avc\">AVC / H.264</a></th>\n   <td>Constrained Baseline (CB)</td>\n   <td>Chrome (52+), Edge, Firefox<sup><a href=\"#supported-foot-1\">[1]</a></sup>, Safari</td>\n  </tr>\n </tbody>\n</table>\n\n<p><a name=\"supported-foot-1\">[1]</a>  Firefox для Android 68 и более поздних версий больше не поддерживает AVC (H.264). Это связано с изменением требований магазина Google Play, которые не позволяют Firefox загружать и устанавливать кодек OpenH264, необходимый для обработки H.264 в соединениях WebRTC. Смотрим подробности в <a href=\"https://support.mozilla.org/en-US/kb/firefox-android-openh264\" class=\"external\" rel=\" noopener\"> статье о SUMO</a> .</p>\n\n<p>Для получения дополнительной информации о соображениях, связанных с WebRTC для каждого кодека, см. Подразделы ниже, перейдя по ссылкам на название каждого кодека.</p>\n\n<p>Полную информацию о том, какие видеокодеки и конфигурации требуется для поддержки WebRTC, можно найти в <a href=\"https://datatracker.ietf.org/doc/html/rfc7742\" class=\"external\" rel=\" noopener\">RFC 7742: Требования к обработке видео и кодекам WebRTC</a>. Стоит отметить, что RFC охватывает множество требований, связанных с видео, включая цветовые пространства (sRGB является предпочтительным, но не обязательным цветовым пространством по умолчанию), рекомендации по функциям обработки веб-камеры (автоматическая фокусировка, автоматический баланс белого, автоматический уровень освещения) и так далее.</p>\n\n<div class=\"note notecard\" id=\"sect2\">\n<p><strong> Предупреждение :</strong>  Эти требования относятся к веб-браузерам и другим продуктам, полностью совместимым с WebRTC. Продукты, не относящиеся к WebRTC, которые в некоторой степени могут взаимодействовать с WebRTC, могут поддерживать или не поддерживать эти кодеки, хотя это рекомендуется в технических документах</p>\n</div>\n\n<p>В дополнение к обязательным кодекам, некоторые браузеры также поддерживают дополнительные кодеки. Они перечислены в таблице ниже</p>\n\n<table class=\"standard-table\">\n <caption>\n <p>Другие видео кодеки</p>\n </caption>\n <thead>\n  <tr>\n   <th scope=\"row\">Наименование кодека</th>\n   <th scope=\"col\">Профили</th>\n   <th scope=\"col\">Совместимость с браузерами</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <th scope=\"row\">VP9</th>\n   <td>—</td>\n   <td>Chrome (48+), Firefox</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"кодек_vp8","title":"Кодек VP8","isH3":true,"content":"<p>VP8, который мы  <a href=\"/en-US/docs/Web/Media/Formats/Video_codecs#vp8\">описывали в общем</a>  в основной статье  <a href=\"/en-US/docs/Web/Media/Formats/Video_codecs\">руководства по сетевым видеокодекам</a>, имеет специфические требования, которым необходимо следовать при кодировании видео треков WebRTC соединения.</p>\n\n<p>По умолчанию, VP8 будет использовать квадратные пиксели (то есть, пиксели с соотношением сторон 1: 1).</p>\n\n<h4 id=\"дополнительное_замечание\">Дополнительное замечание</h4>\n\n<p>Формат полезной нагрузки сети для совместного использования VP8 с помощью <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/RTP\">RTP <small>(en-US)</small></a> (например, при использовании WebRTC) описано в <a href=\"https://datatracker.ietf.org/doc/html/rfc7741\" class=\"external\" rel=\" noopener\">RFC 7741: RTP Payload Format for VP8 Video</a>.</p>"}},{"type":"prose","value":{"id":"кодек_avc_h.264","title":"<a id=\"AVC\"> Кодек AVC / H.264</a>","isH3":true,"content":"<p>Поддержка профиля AVC Constrained Baseline (<code>CB</code>) требуется во всех полностью совместимых реализациях WebRTC. <code>CB</code> является подмножеством основного профиля и специально разработан для приложений с низкой сложностью и малой задержкой, таких как мобильное видео и видеоконференции, а также для платформ с более низкими возможностями обработки видео..</p>\n\n<p>Наш <a href=\"/en-US/docs/Web/Media/Formats/Video_codecs#avc_(h.264)\">обзор  AVC</a> и его функциональности найдёте в основном руководстве по видеокодекам.</p>\n\n<h4 id=\"требования_поддержки_специальных_параметров\">Требования поддержки специальных параметров</h4>\n\n<p>AVC предлагает широкий спектр параметров для управления дополнительными значениями. Чтобы повысить надёжность совместного использования мультимедиа WebRTC на нескольких платформах и в разных браузерах, необходимо, чтобы конечные точки WebRTC, поддерживающие AVC, обрабатывали определённые параметры определённым образом. Иногда это просто означает, что параметр должен (или не должен) поддерживаться. Иногда это означает, что необходимо указать конкретное значение для параметра или разрешить определённый набор значений. А иногда требования более сложны.</p>\n\n<h5 id=\"полезные_но_необязательные_параметры\">Полезные, но необязательные параметры</h5>\n\n<p>Эти параметры не обязаны поддерживаться конечной точкой WebRTC, и их использование также не обязательно. Их использование, некоторым образом, может улучшить пользовательское впечатление , но к использованию не обязательно. Некоторые из них довольно сложны в использовании.</p>\n\n<dl>\n <dt id=\"max-br\"><code>max-br</code></dt>\n <dd>Если параметр определён и поддерживается , он определяет максимальную скорость передачи видеоданных в  единицах 1,000 bps (бит в секунду) для VCL и 1,200 bps (бит в секунду) для NAL. Подробности на  <a href=\"https://tools.ietf.org/html/rfc6184#page-47\" class=\"external\" rel=\" noopener\">странице 47 спецификации RFC 6184</a>.</dd>\n <dt id=\"max-cpb\"><code>max-cpb</code></dt>\n <dd>Если параметр определён и поддерживается, он определяет максимальный размер буфера, кодируемых данных. Немного усложнённый параметр, размер которого может варьироваться. Смотрим на <a href=\"https://tools.ietf.org/html/rfc6184#page-45\" class=\"external\" rel=\" noopener\">страницу  45 спецификации RFC 6184</a> о подробностях.</dd>\n <dt id=\"max-dpb\"><code>max-dpb</code></dt>\n <dd>Определяет максимальный размер буфера  декодированных данных, выраженных в единицах  8/3 макроблоков. Подробности в спецификации <a href=\"https://tools.ietf.org/html/rfc6184#page-46\" class=\"external\" rel=\" noopener\">RFC 6184, страница 46</a>.</dd>\n <dt id=\"max-fs\"><code>max-fs</code></dt>\n <dd>Определяет максимальный размер видеокадра, выраженный в количестве макроблоков.</dd>\n <dt id=\"max-mbps\"><code>max-mbps</code></dt>\n <dd>Определяет максимальную скорость обработки макроблоков в секунду. Значение является целым числом..</dd>\n <dt id=\"max-smbps\"><code>max-smbps</code></dt>\n <dd>Определяет максимальную скорость обработки статических макроблоков в секунду (используя гипотетическое предположение, что все макроблоки являются статическими макроблоками).</dd>\n</dl>\n\n<h5 id=\"параметры_с_определёнными_требованиями\">Параметры с определёнными требованиями</h5>\n\n<p>Эти параметры являются необязательными, но имеют специальные требования при их использовании.</p>\n\n<dl>\n <dt id=\"packetization-mode\"><code>packetization-mode</code></dt>\n <dd>Все конечные точки обязательны для поддержания режима  1 (не чередующийся режим). Поддержка иных режимов пакетизации не обязательна, и сам параметр не обязателен для определения.</dd>\n <dt id=\"sprop-parameter-sets\"><code>sprop-parameter-sets</code></dt>\n <dd>Информация о последовательности и изображении для AVC может передаваться как внутри канала, так и вне его. При использовании AVC  с WebRTC, информация должна передаваться в канале, поэтому значение параметра не включается в SDP.</dd>\n</dl>\n\n<h5 id=\"обязательные_для_определения_параметры\">Обязательные для определения параметры</h5>\n\n<p>Эти параметры обязательны к определению, при использовании AVC в WebRTC соединении.</p>\n\n<ul>\n <li><code>profile-level-id</code></li>\n</ul>\n\n<p>Все реализации WebRTC обязательно определяют и передают  в своих  SDP, определяя суб  - профиль используемого кодека (подмножество инструментов кодирования, которые могут быть использованы для генерации потока или того, что поддерживает получатель) и уровня потока по умолчанию, или уровня поддержки получателя.</p>\n\n<p> Конкретное значение разработчику не известно, используется одно на всех, и устанавливается  WebRTC. Начиная с <a href=\"https://datatracker.ietf.org/doc/html/rfc6184\" class=\"external\" rel=\" noopener\">RFC 6184</a> (\"RTP Payload Format for H.264 Video\"), наличие <code>profile-level-id</code> необязательно.</p>\n\n<h4 id=\"прочие_требования\">Прочие требования</h4>\n\n<p>В целях поддержки переключения между книжной и альбомной ориентацией можно использовать два метода. Первый - это расширение заголовка видеоориентации (CVO) для протокола RTP. Однако, если это не сигнализируется как поддерживаемое в SDP, тогда рекомендуется, чтобы браузеры поддерживали сообщения Display Orientation SEI, хотя и не обязательно</p>\n\n<p>Если не указано иное, соотношение сторон пикселя составляет 1: 1, что указывает на то, что пиксели являются квадратными</p>\n\n<h4 id=\"прочие_замечания\">Прочие замечания</h4>\n\n<p>Формат полезной нагрузки, используемый для AVC в WebRTC, описан в <a href=\"https://datatracker.ietf.org/doc/html/rfc6184\" class=\"external\" rel=\" noopener\">RFC 6184: RTP Payload Format for H.264 Video</a>. Реализации AVC для WebRTC необходимы для поддержки специальных сообщений SEI :  «заполнитель нагрузки» и «полное замораживание кадра», они используются для плавного переключения между несколькими входными потоками.</p>","titleAsText":" Кодек AVC / H.264"}},{"type":"prose","value":{"id":"поддерживаемые_аудио_кодеки","title":"Поддерживаемые аудио кодеки","isH3":false,"content":"<p>Спецификация  <a href=\"https://datatracker.ietf.org/doc/html/rfc7874\" class=\"external\" rel=\" noopener\">RFC 7874</a> предписывает всем браузерам поддержку аудиокодеков, перечисленных в таблице :</p>\n\n<table class=\"standard-table\">\n <caption>\n <p>Обязательные аудиокодеки</p>\n </caption>\n <thead>\n  <tr>\n   <th scope=\"row\">Наименование кодека</th>\n   <th scope=\"col\">Совместимость с браузерами</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <th scope=\"row\"><a href=\"/en-US/docs/Web/Media/Formats/Audio_codecs#opus\">Opus</a></th>\n   <td>Edge, Firefox, Safari</td>\n  </tr>\n  <tr>\n   <th scope=\"row\"><a href=\"/en-US/docs/Web/Media/Formats/Audio_codecs#g.711\">G.711 PCM (A-law)</a></th>\n   <td>Chrome, Firefox, Safari</td>\n  </tr>\n  <tr>\n   <th scope=\"row\"><a href=\"/en-US/docs/Web/Media/Formats/Audio_codecs#g.711\">G.711 PCM (µ-law)</a></th>\n   <td>Chrome, Firefox, Safari</td>\n  </tr>\n </tbody>\n</table>\n\n<p>Более подробное обсуждение использования кодеков в WebRTC следует ниже.</p>\n\n<p>Спецификация  <a href=\"https://datatracker.ietf.org/doc/html/rfc7874\" class=\"external\" rel=\" noopener\">RFC 7874</a> определяет список аудио кодеков, которые браузеры, реализующие WebRTC обязаны поддерживать; так же предоставляются рекомендации и требования для специфических аудио функциональностей, таких как удаление эхоподавление, шумоподавление и выравнивание звука.</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong> Примечание :</strong>  Список выше указывает на минимальный набор кодеков, который требуется реализовать браузерам (браузерному окружению), поддерживающих  WebRTC. Такие браузеры могут поддерживать также и другие кодеки, что подвергает риску межплатформенной совместимости при использовании этих кодеков без проверки гарантированной работоспособности в часто используемых браузерах.</p>\n</div>\n\n<p>В дополнение к обязательным видеокодекам, некоторые браузеры поддерживают дополнительные кодеки, перечисленные в таблице:</p>\n\n<table class=\"standard-table\">\n <caption>Дополнительные аудио кодеки</caption>\n <thead>\n  <tr>\n   <th scope=\"row\">Наименование кодека</th>\n   <th scope=\"col\">Совместимость с браузерами</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <th scope=\"row\">G.722</th>\n   <td>Chrome, Firefox, Safari</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">iLBC<sup><a href=\"#other-audio-foot-1\">[1]</a></sup></th>\n   <td>Chrome, Safari</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">iSAC<sup><a href=\"#other-audio-foot-2\">[2]</a></sup></th>\n   <td>Chrome, Safari</td>\n  </tr>\n </tbody>\n</table>\n\n<p><a id=\"other-audio-foot-1\" name=\"other-audio-foot-1\">[1]</a> <strong><a title=\"Internet Low Bitrate Codec\" href=\"https://ru.wikipedia.org/wiki/Internet_Low_Bitrate_Codec\" class=\"external\" rel=\" noopener\">Internet Low Bitrate Codec</a></strong> (<strong>iLBC</strong>)  - узкополосный кодек с открытым кодом, разработанный Global IP Solutions и Google, спроектированный для потокового голосового аудио. Google и другие разработчики браузеров адоптировали его для работы с  WebRTC, но он доступен не во всех браузерах, и не является обязательно поддерживаемым кодеком.</p>\n\n<p><a id=\"other-audio-foot-2\" name=\"other-audio-foot-2\">[2]</a> The <strong><a title=\"Internet Speech Audio Codec\" href=\"https://ru.wikipedia.org/wiki/Internet_Speech_Audio_Codec\" class=\"external\" rel=\" noopener\">Internet Speech Audio Codec</a></strong> (<strong>iSAC</strong>)  -  другой кодек, разработанный Global IP Solutions, теперь принадлежащий Google, открывший его код. Используется Google Talk, QQ, и другими клиентами быстрых сообщений, специально спроектированный для голосовых сообщений, упакованных в поток RTP. Пока не является обязательной поддерживаемым кодеком. Поддерживается Safari и Chrome. Не поддерживается Firefox и Edge.</p>\n\n<p><strong><a title=\"Comfort noise\" href=\"https://ru.wikipedia.org/wiki/Comfort_noise\" class=\"external\" rel=\" noopener\">Comfort noise</a></strong> (<strong>CN</strong>) - комфортный шум. Является формой искусственного фонового шума, использующегося для заполнения пробелов в передаче, вместо использования полной тишины. Помогает избежать вибрационных эффектов, возникающих, когда голосовая активация или подобная функциональность  вызывает временное приостановление потока, известная как прерывистая передача (Discontinuous Transmission (DTX)). В спецификации <a href=\"https://datatracker.ietf.org/doc/html/rfc3389\" class=\"external\" rel=\" noopener\">RFC 3389</a>, метод предлагает использовать определённое заполнение в беззвучных промежутках.</p>\n\n<p>Комфортный шум используется с G.711 и может потенциально использоваться с другими кодеками, которые не имеют встроенной функции CN. Кодек Opus, к примеру, имеет собственную реализацию CN, поэтому использование RFC 3389 CN с кодеком Opus не рекомендуется.</p>\n\n<p>Отправитель звука никогда не должен использовать прерывистую передачу или комфортный шум.</p>"}},{"type":"prose","value":{"id":"кодек_opus","title":"Кодек Opus","isH3":true,"content":"<p>Формат Opus, определённый в <a href=\"https://datatracker.ietf.org/doc/html/rfc6716\" class=\"external\" rel=\" noopener\">RFC 6716</a>), является основным форматом для аудио в WebRTC. Формат полезной нагрузки RTP для Opus находится в <a href=\"https://datatracker.ietf.org/doc/html/rfc7587\" class=\"external\" rel=\" noopener\">RFC 7587</a>. Можете найти подробную информацию об Opus и его возможностях, а также о том, как другие API могут поддерживать Opus, в <a href=\"/en-US/docs/Web/Media/Formats/Audio_codecs#opus\">соответствующей секции</a>  нашего <a href=\"/en-US/docs/Web/Media/Formats/Audio_codecs\">руководства по аудиокодекам, использующимся в web</a>.</p>\n\n<p>Должны поддерживаться оба режима : речь и обычное аудио. Масштабируемость и гибкость Opus полезна при работе с аудио, имеющим различную степень сложности. Поддержка внутриполосных стереосигналов позволяет поддерживать стереозвук без усложнения процесса демультиплексирования.</p>\n\n<p>Весь диапазон битрейтов, поддерживаемых Opus (от 6 кбит / с до 510 кбит / с), поддерживается в WebRTC, причём скорость битов можно динамически изменять. Более высокие битовые скорости передачи обычно улучшают качество..</p>\n\n<h4 id=\"рекомендации_по_скорости_передачи_данных_bit_rate\">Рекомендации по скорости передачи данных (bit rate)</h4>\n\n<p>При условии размер кадра в 20 миллисекунд, в следующей таблице приведены рекомендуемые скорости передачи данных для различных типов носителей.</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Медиа носитель</th>\n   <th scope=\"col\">Рекомендованный диапазон bit rate</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td>Узкополосная речь (NB)</td>\n   <td>8 - 12 kbps</td>\n  </tr>\n  <tr>\n   <td>Широкополосная речь (WB)</td>\n   <td>16 - 20 kbps</td>\n  </tr>\n  <tr>\n   <td>Полноценная речь (FB)</td>\n   <td>28 - 40 kbps</td>\n  </tr>\n  <tr>\n   <td>Монофоническая музыка (FB mono)</td>\n   <td>48 - 64 kbps</td>\n  </tr>\n  <tr>\n   <td>Стереофоническая музыка (FB stereo)</td>\n   <td>64 - 128 kbps</td>\n  </tr>\n </tbody>\n</table>\n\n<p>Скорость передачи может быть скорректирована в любое время. Во избежание перегрузки сети средняя скорость передачи звука не должна превышать доступную пропускную способность сети (за вычетом любых других известных или ожидаемых дополнительных требований к пропускной способности).</p>"}},{"type":"prose","value":{"id":"кодек_g.711","title":"Кодек G.711","isH3":true,"content":"<p>G.711 определяет формат для звука с импульсной кодовой модуляцией (PCM) в виде серии 8-битных целочисленных выборок, взятых с частотой дискретизации 8000 Гц, что даёт скорость передачи данных 64 кбит / с. И в <a title=\"µ-law\" href=\"https://ru.wikipedia.org/wiki/M-law\" class=\"external\" rel=\" noopener\">µ-law</a> , и в <a title=\"A-law\" href=\"https://ru.wikipedia.org/wiki/A-law\" class=\"external\" rel=\" noopener\">A-law</a> разрешена кодировка.</p>\n\n<p>G.711 <a href=\"https://www.itu.int/rec/T-REC-G.711-198811-I/en\" class=\"external\" rel=\" noopener\">определяется ITU</a>  , а его формат нагрузки в <a href=\"https://datatracker.ietf.org/doc/html/rfc3551\" class=\"external\" rel=\" noopener\">RFC 3551: 4.5.14</a>.</p>\n\n<p>WebRTC требует, чтобы G.711 использовал 8-битные выборки со стандартной скоростью 64 кбит / с, хотя G.711 поддерживает некоторые другие варианты. WebRTC не предписывает использовать ни G.711.0 (сжатие без потерь), G.711.1 (широкополосная возможность), ни какие-либо другие расширения стандарта G.711</p>\n\n<p>Из-за низкой частоты дискретизации и размера выборки качество звука G.711 в целом считается низким по современным стандартам, хотя оно примерно эквивалентно звучанию стационарного телефона. Обычно он используется в качестве наименьшего общего знаменателя, чтобы гарантировать, что браузеры могут установить аудио-соединение независимо от платформ и браузеров, или как запасной вариант в целом.</p>"}},{"type":"prose","value":{"id":"определение_и_конфигурирование_кодеков","title":"Определение и конфигурирование кодеков","isH3":false,"content":""}},{"type":"prose","value":{"id":"получение_поддерживаемых_кодеков","title":"Получение поддерживаемых кодеков","isH3":true,"content":"<p>Поскольку браузер и платформа могут иметь различную доступность среди потенциальных кодеков - и могут иметь несколько профилей или уровней, поддерживаемых для данного кодека - первый шаг при настройке кодеков для объекта типа <a href=\"/ru/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>  - получить список доступных кодеков. Для этого сначала нужно инициализировать объект соединения, который получит список.</p>\n\n<p>Существует два способа для выполнения этого. Наиболее эффективный - использовать статический метод <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSender/getCapabilities\"><code>RTCRtpSender.getCapabilities()</code> <small>(en-US)</small></a> (или эквивалентный для принимающего узла <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpReceiver/getCapabilities\"><code>RTCRtpReceiver.getCapabilities()</code> <small>(en-US)</small></a> ), определяющий тип медиаданных в параметре. К примеру, для определения поддерживаемых кодеков видео применяем :</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>codecList <span class=\"token operator\">=</span> RTCRtpSender<span class=\"token punctuation\">.</span><span class=\"token function\">getCapabilities</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>codecs<span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Теперь массив <code>codecList</code> содержит объекты <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpCodecCapability\"><code>RTCRtpCodecCapability</code> <small>(en-US)</small></a> , каждый содержащий описываемую конфигурацию кодека. Также в списке будут присутствовать записи для повторной передачи (RTX), избыточного кодирования (RED) и прямого исправления ошибок (FEC).</p>\n\n<p>Если соединение находится в процессе запуска, используем событие <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\"><code>icegatheringstatechange</code> <small>(en-US)</small></a>  для наблюдения за изменением статуса сборки кандидатов  <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/ICE\">ICE <small>(en-US)</small></a> и при завершении, запрашиваем список кодеков.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> codecList <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\npeerConnection<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"icegatheringstatechange\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>peerConnection<span class=\"token punctuation\">.</span>iceGatheringState <span class=\"token operator\">===</span> <span class=\"token string\">\"complete\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> senders <span class=\"token operator\">=</span> peerConnection<span class=\"token punctuation\">.</span><span class=\"token function\">getSenders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    senders<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sender</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">.</span>track<span class=\"token punctuation\">.</span>kind <span class=\"token operator\">===</span> <span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        codecList <span class=\"token operator\">=</span> sender<span class=\"token punctuation\">.</span><span class=\"token function\">getParameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>codecs<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  codecList <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Обработчик события <code>icegatheringstatechange</code> установлен; в нем мы отслеживаем тип события <code>complete</code> завершения сборки кандидатов ICE, указывающее что сборка кандидатов завершена. Метод <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\"><code>RTCPeerConnection.getSenders()</code> <small>(en-US)</small></a> вызывается для получения списка всех объектов <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code> <small>(en-US)</small></a> , использующихся в соединении.</p>\n\n<p>Имея это в виду, мы просматриваем список отправителей и ищем первого, чей <a href=\"/ru/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> указывает, что тип <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>track</code></a> в своём свойстве  <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/kind\"><code>kind</code> <small>(en-US)</small></a> содержит значение <code>video</code>, указывающее, что данные являются видеоданными. Затем вызывается метод отправителя  <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSender/getParameters\"><code>getParameters()</code> <small>(en-US)</small></a> , и значением свойства  <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>codecs</code></a> возвращаемого объекта <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSendParameters\"><code>RTCRtpSendParameters</code> <small>(en-US)</small></a> , инициализируем переменную <code>codecList</code>.</p>\n\n<p>Если видеотрек не найден, устанавливаем  <code>codecList</code> в <code>null</code>.</p>\n\n<p>При возврате, <code>codecList </code>либо  <code>null</code> , указывающий на то, что видеодорожки не были найдены, либо это массив <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpCodecParameters\"><code>RTCRtpCodecParameters</code> <small>(en-US)</small></a> объектов, каждый из которых описывает одну разрешённую конфигурацию кодека. Особое значение в этих объектах имеет свойство <a class=\"page-not-created\" title=\"Документация об этом ещё не написана; пожалуйста, поспособствуйте её написанию!\"><code>payloadType</code></a>, которое является однобайтовым значением, однозначно идентифицирующим описанную конфигурацию.</p>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Примечание :</strong>  Два метода получения списков кодеков, показанные здесь, используют разные типы вывода в своих списках кодеков. Помните об этом при использовании результатов</p>\n</div>"}},{"type":"prose","value":{"id":"настройка_списка_кодеков","title":"Настройка списка кодеков","isH3":true,"content":"<p>Как только получен список доступных кодеков, его можно изменить и передать этот пересмотренный список методу  <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpTransceiver/setCodecPreferences\"><code>RTCRtpTransceiver.setCodecPreferences()</code> <small>(en-US)</small></a> для перенастройки списка, используемых кодеков. Это изменяет порядок предпочтений кодеков, позволяя указать WebRTC на более предпочтительный кодек среди прочих .</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">changeVideoCodec</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mimeType</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> transceivers <span class=\"token operator\">=</span> peerConnection<span class=\"token punctuation\">.</span><span class=\"token function\">getTransceivers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  transceivers<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">transceiver</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> kind <span class=\"token operator\">=</span> transceiver<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>track<span class=\"token punctuation\">.</span>kind<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> sendCodecs <span class=\"token operator\">=</span> RTCRtpSender<span class=\"token punctuation\">.</span><span class=\"token function\">getCapabilities</span><span class=\"token punctuation\">(</span>kind<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>codecs<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> recvCodecs <span class=\"token operator\">=</span> RTCRtpReceiver<span class=\"token punctuation\">.</span><span class=\"token function\">getCapabilities</span><span class=\"token punctuation\">(</span>kind<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>codecs<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kind <span class=\"token operator\">===</span> <span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      sendCodecs <span class=\"token operator\">=</span> <span class=\"token function\">preferCodec</span><span class=\"token punctuation\">(</span>mimeType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      recvCodecs <span class=\"token operator\">=</span> <span class=\"token function\">preferCodec</span><span class=\"token punctuation\">(</span>mimeType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      transceiver<span class=\"token punctuation\">.</span><span class=\"token function\">setCodecPreferences</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>sendCodecs<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>recvCodecs<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  peerConnection<span class=\"token punctuation\">.</span><span class=\"token function\">onnegotiationneeded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>В этом примере функция  <code>changeVideoCodec()</code> принимает в параметр MIME тип предпочтительного к использованию кодека. Код начинается с получения списка объектов приёмо-передатчиков объекта соединения <a href=\"/ru/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>.</p>\n\n<p>Затем, для каждого приёмо-передатчика анализируем тип медиа свойства <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code> <small>(en-US)</small></a>'s track's <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/kind\"><code>kind</code> <small>(en-US)</small></a>. Так же получаем список поддерживаемых браузером кодеков стороны отправки и получения  <code>video</code>, используя статический метод <code>getCapabilities()</code> обоих классов <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code> <small>(en-US)</small></a> и <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code> <small>(en-US)</small></a>.</p>\n\n<p>Если тип медиаданных является типом  <code>video</code>, вызываем метод <code>preferCodec()</code> для обоих взаимодействующих сторон списков кодеков, который реорганизует список кодеков необходимым образом  (смотри ниже).</p>\n\n<p>И наконец, вызываем метод <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpTransceiver/setCodecPreferences\"><code>setCodecPreferences()</code> <small>(en-US)</small></a> объекта  <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code> <small>(en-US)</small></a> для определения того, что использование кодеков обеих сторон разрешено, в указанном порядке.</p>\n\n<p>Это выполняется для каждого объекта приёмо-передатчика объекта соединения  <code>RTCPeerConnection</code>; как только все приёмо-передатчики обновили списки предпочитаемых кодеков, вызывается обработчик события  <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\"><code>onnegotiationneeded</code> <small>(en-US)</small></a> , который создаёт новый объект предложения, обновляет объект локального описания сессии, отправляет предложение удалённому узлу, и так далее, запуская согласование соединения .</p>\n\n<p>Функция <code>preferCodec()</code> вызываемая приведённым выше кодом, действует так, чтобы переместить указанный кодек в верхнюю часть списка (для приоритета во время согласования):</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">preferCodec</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">codecs<span class=\"token punctuation\">,</span> mimeType</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> otherCodecs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> sortedCodecs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> codecs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n\n  codecs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">codec</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>codec<span class=\"token punctuation\">.</span>mimeType <span class=\"token operator\">===</span> mimeType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      sortedCodecs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>codec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      otherCodecs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>codec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> sortedCodecs<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>otherCodecs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Этот код просто разбивает список кодеков на два массива: один, содержащий кодеки, чей  MIME тип совпадает с тем, который указан в параметре <code>mimeType</code> , другой же содержит остальные кодеки. Как только список разделён, они объединяются вместе с записями, соответствующими заданному <code>mimeType</code> следующими вначале, за которыми следуют остальные записи кодеков. Затем этот список возвращается вызывающему коду.</p>"}},{"type":"prose","value":{"id":"кодеки_по_умолчанию","title":"Кодеки по умолчанию","isH3":false,"content":"<p>Если не определённо иное, кодеки по умолчанию (предпочтительные кодеки), запрашиваемые браузерными реализациями  WebRTC, перечислены ниже</p>\n\n<table class=\"standard-table\">\n <caption>\n <p>Предпочтительные для  WebRTC кодеки основных веб-браузеров</p>\n </caption>\n <thead>\n  <tr>\n   <th scope=\"col\"></th>\n   <th scope=\"col\">Audio</th>\n   <th scope=\"col\">Video</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <th scope=\"row\">Chrome</th>\n   <td></td>\n   <td></td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Edge</th>\n   <td></td>\n   <td></td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Firefox</th>\n   <td></td>\n   <td>VP9 (Firefox 46 and later)<br>\n    VP8</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Opera</th>\n   <td></td>\n   <td></td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Safari</th>\n   <td></td>\n   <td></td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"правильный_выбор_кодеков","title":"Правильный выбор кодеков","isH3":false,"content":"<p>Перед выбором кодека, который не является обязательным (VP8 или AVC для видео и  Opus или PCM для аудио), следует серьёзно рассмотреть потенциальные недостатки: в особенности, если предполагается, что эти кодеки не широко доступны на всех устройствах, поддерживающих WebRTC.</p>\n\n<p>Если вы предпочитаете кодек, отличный от обязательных, вы должны по крайней мере разрешить откат к одному из обязательных кодеков, если поддержка для кодека, который вы предпочитаете, окажется недоступна.</p>"}},{"type":"prose","value":{"id":"аудио","title":"Аудио","isH3":true,"content":"<p>В целом, если кодек доступен и звук, который вы хотите отправить, имеет частоту дискретизации более 8 кГц, вам следует настоятельно рекомендовать использовать Opus в качестве основного кодека. Для голосовых соединений в стеснённой среде использование G.711 с частотой дискретизации 8 кГц может обеспечить приемлемое качество для разговора, но обычно вы будете использовать G.711 в качестве запасного варианта, поскольку есть другие более эффективные варианты, чей звук лучше, такие как Опус в своём узкополосном режиме .</p>"}},{"type":"prose","value":{"id":"видео","title":"Видео","isH3":true,"content":"<p>При выборе поддерживаемого видеокодека (или набора кодеков) необходимо учитывать ряд факторов</p>\n\n<h4 id=\"условия_лицензирования\">Условия лицензирования</h4>\n\n<p>Прежде чем выбрать видеокодек, убедитесь, что вы знаете о любых лицензионных требованиях к выбранному вами кодеку; можете найти информацию о возможных проблемах лицензирования в нашем основном <a href=\"/en-US/docs/Web/Media/Formats/Video_codecs\">руководстве по видеокодекам, используемым в  web</a>. Из двух обязательных кодеков для видео - VP8 и AVC / H.264 - только VP8 полностью свободен от лицензионных требований. Если выбираете AVC, убедитесь, что вы знаете о любых возможных сборах, которые вам, возможно, придётся заплатить; владельцы патентов обычно говорят, что большинству типичных разработчиков веб-сайтов не нужно беспокоиться об оплате лицензионных сборов, которые, как правило, больше ориентированы на разработчиков программного обеспечения для кодирования и декодирования.</p>\n\n<div class=\"warning notecard\" id=\"sect5\">\n<p><strong>Внимание :</strong>  Информация здесь не является юридической консультацией! Обязательно убедитесь в возможности ответственности, прежде чем принимать какие-либо окончательные решения, если существует вероятность возникновения проблем с лицензированием.</p>\n</div>\n\n<h4 id=\"энергопотребление_и_срок_службы_батареи\">Энергопотребление и срок службы батареи</h4>\n\n<p>Ещё один фактор, который следует учитывать, особенно на мобильных платформах, - это влияние кодека на время автономной работы. Если кодек обрабатывается аппаратно на данной платформе, он, вероятно, позволит значительно увеличить срок службы батареи и уменьшить выработку тепла.</p>\n\n<p>Например, Safari для iOS и iPadOS представила WebRTC с AVC в качестве единственного поддерживаемого видеокодека. Преимущество AVC на iOS и iPadOS заключается в возможности кодирования и декодирования на аппаратном уровне.Safari 12.1 представил поддержку VP8 в IRC, что улучшает взаимодействие, но за дополнительную плату - VP8 не имеет аппаратной поддержки на устройствах iOS, поэтому его использование приводит к увеличению нагрузки на процессор и сокращению срока службы батареи.</p>\n\n<h4 id=\"производительность\">Производительность</h4>\n\n<p>К счастью, VP8 и AVC работают одинаково с точки зрения конечного пользователя и одинаково адекватны для использования в видеоконференцсвязи и других решениях WebRTC. Окончательное решение остаётся за разработчиком. Какой бы вариант вы ни выбрали, обязательно прочитайте информацию, представленную в этой статье, о любых конкретных проблемах конфигурации, с которыми вам, возможно, придётся столкнуться для этого кодека.</p>\n\n<p>Имейте в виду, что выбор кодека, которого нет в списке обязательных кодеков, может привести к риску выбора кодека, который не поддерживается браузером, который предпочитают ваши пользователи. Прочтите <a href=\"/en-US/docs/Web/Media/Formats/Support_issues\">Решение проблем медиаподдержки в веб контенте</a> , чтобы узнать больше о том, как предлагать поддержку предпочитаемых кодеков, но при этом использовать браузеры, которые не поддерживают этот кодек.</p>"}},{"type":"prose","value":{"id":"последствия_для_безопасности","title":"Последствия для безопасности","isH3":false,"content":"<p>При выборе и настройке кодеков возникают интересные потенциальные проблемы безопасности. Видео WebRTC защищено с помощью Datagram Transport Layer Security (<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/DTLS\">DTLS <small>(en-US)</small></a>), но для мотивированной стороны теоретически возможно вывести величину изменения, которое происходит от кадра к кадру при использовании кодеков с переменной скоростью передачи (VBR), путём мониторинга скорости потока  и её изменения во времени.Это может потенциально позволить злоумышленнику сделать вывод о содержании потока, учитывая приливы и отливы скорости передачи.</p>\n\n<p>Подробнее о безопасности при использовании AVC в WebRTC см.  <a href=\"https://datatracker.ietf.org/doc/html/rfc6184#section-9\" class=\"external\" rel=\" noopener\">RFC 6184, секция 9: RTP Payload Format for H.264 Video: Security Considerations</a>.</p>"}},{"type":"prose","value":{"id":"смотрите_также","title":"Смотрите также :","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></li>\n <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Protocols\">Введение в протоколы WebRTC</a></li>\n <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Connectivity\">WebRTC соединение </a></li>\n <li><a href=\"/en-US/docs/Web/Media/Formats/Video_codecs\">Руководство по видеокодекам, использующимся в web</a></li>\n <li><a href=\"/en-US/docs/Web/Media/Formats/Audio_codecs\">Руководство по аудиокодекам, использующимся в web</a></li>\n <li><a href=\"/en-US/docs/Web/Media/Formats/Video_concepts\">Концепции цифрового видео</a></li>\n <li><a href=\"/en-US/docs/Web/Media/Formats/Audio_concepts\">Концепции цифрового аудио</a></li>\n</ul>"}}],"toc":[{"text":"Безконтейнерные медиаданные","id":"безконтейнерные_медиаданные"},{"text":"Общие требования к кодекам","id":"общие_требования_к_кодекам"},{"text":"Поддерживаемые видео кодеки","id":"поддерживаемые_видео_кодеки"},{"text":"Поддерживаемые аудио кодеки","id":"поддерживаемые_аудио_кодеки"},{"text":"Определение и конфигурирование кодеков","id":"определение_и_конфигурирование_кодеков"},{"text":"Кодеки по умолчанию","id":"кодеки_по_умолчанию"},{"text":"Правильный выбор кодеков","id":"правильный_выбор_кодеков"},{"text":"Последствия для безопасности","id":"последствия_для_безопасности"},{"text":"Смотрите также :","id":"смотрите_также"}],"summary":"WebRTC.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Codecs used by WebRTC","locale":"en-US","native":"English (US)"}],"source":{"folder":"ru/web/media/formats/webrtc_codecs","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/web/media/formats/webrtc_codecs/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/ru/docs/Web","title":"Веб-технологии для разработчиков"},{"uri":"/ru/docs/Web/Media","title":"Web media technologies"},{"uri":"/ru/docs/Web/Media/Formats","title":"Media type and format guide: image, audio, and video content"},{"uri":"/ru/docs/Web/Media/Formats/WebRTC_codecs","title":"Кодеки, используемые WebRTC"}],"pageTitle":"Кодеки, используемые WebRTC - Web media technologies | MDN","noIndexing":false}}