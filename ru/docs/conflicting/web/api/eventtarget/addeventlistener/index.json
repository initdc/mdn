{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"EventListener","mdn_url":"/ru/docs/conflicting/Web/API/EventTarget/addEventListener","locale":"ru","native":"Русский","sidebarHTML":"<ol><li><strong><a href=\"/ru/docs/Web/API/EventTarget\"><code>EventTarget</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Конструктор</summary><ol><li><a href=\"/ru/docs/Web/API/EventTarget/EventTarget\"><code>EventTarget()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Методы</summary><ol><li><em><code>addEventListener()</code></em></li><li><a href=\"/ru/docs/Web/API/EventTarget/dispatchEvent\"><code>dispatchEvent()</code></a></li><li><a href=\"/ru/docs/Web/API/EventTarget/removeEventListener\"><code>removeEventListener()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p>Интерфейс <code>EventListener</code> представляет собой объект, который может обработать событие, отправленное объектом <a href=\"/ru/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</p>\n\n<div class=\"note notecard\" id=\"sect1\">\n<p><strong>Note:</strong> Из-за необходимости совместимости с унаследованным контентом, <code>EventListener</code> принимает функцию или объект с методом  <code>handleEvent()</code>. Это показано в <a href=\"#example\">примере</a> ниже.</p>\n</div>"}},{"type":"prose","value":{"id":"свойства","title":"Свойства","isH3":false,"content":"<p><em>Интерфейс не реализует и не наследует никаких свойств.</em></p>"}},{"type":"prose","value":{"id":"method_overview","title":"Синтаксис","isH3":false,"content":"<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#handleevent()\">handleEvent</a>(in Event event);</code></td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"methods","title":"Методы","isH3":false,"content":""}},{"type":"prose","value":{"id":"handleevent","title":"handleEvent()","isH3":true,"content":"<p>Этот метод вызывается всякий раз, когда происходит событие того типа, для которого был зарегистрирован интерфейс EventListener.</p>\n\n<pre class=\"eval notranslate\">void handleEvent(\n  in Event event\n);\n</pre>\n\n<h5 id=\"parameters\">Параметры</h5>\n\n<dl>\n <dt id=\"event\"><code>event</code></dt>\n <dd>Событие DOM <a href=\"/ru/docs/Web/API/Event\"><code>Event</code></a> для которого регистрируется обработчик.</dd>\n</dl>"}},{"type":"prose","value":{"id":"remarks","title":"Примечания","isH3":true,"content":"<p>Поскольку у интерфейса отмечен флаг <code><span class=\"nowiki\">[function]</span></code>, все объекты JavaScript <a href=\"/en-US/JavaScript/Reference/Global_Objects/Function\" title=\"en/Core_JavaScript_1.5_Reference/Global_Objects/Function\">Function</a> автоматически реализуют этот интерфейс. Вызов метода <a href=\"#handleevent\">handleEvent</a> на такой реализации автоматически вызовет эту функцию.</p>"}},{"type":"prose","value":{"id":"пример","title":"Пример","isH3":false,"content":""}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Нажми сюда!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> buttonElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Добавим обработчик для события \"click\", предоставив callback.</span>\n<span class=\"token comment\">// Теперь по клику на элемент будет всплывать подсказка.</span>\n\nbuttonElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Событие вызвано функцией!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Теперь привяжем обработчик через объект, содержащий функцию</span>\n\nbuttonElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">handleEvent</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Событие вызвал handleEvent!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"результат","title":"Результат","isH3":true,"content":"<p><iframe class=\"sample-code-frame\" title=\"Пример sample\" id=\"frame_пример\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ru/docs/conflicting/Web/API/EventTarget/addEventListener/_sample_.%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80.html\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"see_also","title":"Смотрите также","isH3":false,"content":"<ul>\n <li><a href=\"https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventListener\" class=\"external\" rel=\" noopener\">Document Object Model Events: EventListener</a><span title=\"Рекомендация\" style=\"color:#fff;background:#309c40;display:inline-block; font-size:x-small; margin-left:6px; white-space:nowrap; padding:2px 5px;\">REC</span></li>\n</ul>"}}],"toc":[{"text":"Свойства","id":"свойства"},{"text":"Синтаксис","id":"method_overview"},{"text":"Методы","id":"methods"},{"text":"Пример","id":"пример"},{"text":"Смотрите также","id":"see_also"}],"summary":"Интерфейс EventListener представляет собой объект, который может обработать событие, отправленное объектом EventTarget.","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"EventListener","locale":"es","native":"Español"},{"title":"EventListener.handleEvent()","locale":"ja","native":"日本語"},{"title":"EventListener","locale":"pt-BR","native":"Português (do Brasil)"}],"source":{"folder":"ru/conflicting/web/api/eventtarget/addeventlistener","github_url":"https://github.com/mdn/translated-content/blob/main/files/ru/conflicting/web/api/eventtarget/addeventlistener/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"pageTitle":"EventListener | MDN","noIndexing":true}}