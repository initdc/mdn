{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Seguro","mdn_url":"/pt-BR/docs/Glossary/safe","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Um método HTTP é <strong>seguro</strong> se ele não altera o estado do servidor. Em outras palavras, um método é seguro se ele leva a uma operação de somente leitura. Diversos métodos de HTTP são seguros: <a href=\"/pt-BR/docs/Web/HTTP/Methods/GET\"><code>GET</code></a>, <a href=\"/pt-BR/docs/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a>, ou <a href=\"/pt-BR/docs/Web/HTTP/Methods/OPTIONS\"><code>OPTIONS</code></a>. Todos os métodos seguros também são <a class=\"page-not-created\" title=\"A documentação sobre isto ainda não foi escrita; por favor considere contribuir!\">idempotente</a>s, mas nem todos os métodos idempotentes são seguros. Por exemplo, <a href=\"/pt-BR/docs/Web/HTTP/Methods/PUT\"><code>PUT</code></a> e <a href=\"/pt-BR/docs/Web/HTTP/Methods/DELETE\"><code>DELETE</code></a> são ambos idempotentes, entretanto são inseguros.</p>\n<p>Mesmo se métodos seguros possuem a semântica de somente leitura, servidores podem alterar o seu estado (e.g., eles podem manter <em>log</em> ou estatísticas). O que é importante aqui, é de que chamando um método seguro, o cliente não requer que o servidor mude seu estado, e portanto não gerará carga desnecessária ao servidor. Navegadores podem chamar métodos seguros sem medo de causarem nenhum dano ao servidor: isso permite a eles a possibilidade de fazer atividades como pré-carregamento sem nenhum risco. <em>Web crawlers</em> também usam métodos seguros.</p>\n<p>Métodos seguros não servem somente para buscar arquivos estáticos, o servidor pode gerar uma resposta para um método seguro no voô, enquanto o <em>script</em> gerador garantir segurança: ele não deve ativar gatilhos externos, como ativar um pedido de compras em um site.</p>\n<p>É responsabilidade da aplicação no servidor implementar a semântica segura corretamente, o servidor <em>web</em> em si, sendo Apache, nginx ou IIS, não pode forçar ela por si só. Em particular, a aplicação não deve permitir que requisições <a href=\"/pt-BR/docs/Web/HTTP/Methods/GET\"><code>GET</code></a> alterem seu estado.</p>\n<p>Uma chamada a um método seguro, não alterando o estado do servidor:</p>\n<pre class=\"notranslate\">GET /pageX.html HTTP/1.1\n</pre>\n<p>Uma chamada a um método não seguro, que pode alterar o estado do servidor:</p>\n<pre class=\"notranslate\">POST /pageX.html HTTP/1.1\n</pre>\n<p>Uma chamada a um método idempotente, mas não seguro:</p>\n<pre class=\"notranslate\">DELETE /idX/delete HTTP/1.1\n</pre>"}},{"type":"prose","value":{"id":"aprenda_mais","title":"Aprenda mais","isH3":false,"content":""}},{"type":"prose","value":{"id":"conhecimento_geral","title":"Conhecimento geral","isH3":true,"content":"<ul>\n  <li>Definição de <a href=\"https://tools.ietf.org/html/rfc7231#section-4.2.1\" class=\"external\" rel=\" noopener\">seguro</a> na especificação HTTP.</li>\n</ul>"}},{"type":"prose","value":{"id":"conhecimento_técnico","title":"Conhecimento técnico","isH3":true,"content":"<ul>\n  <li>Descrição de métodos seguros comuns: <a href=\"/pt-BR/docs/Web/HTTP/Methods/GET\"><code>GET</code></a>, <a href=\"/pt-BR/docs/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a>, <a href=\"/pt-BR/docs/Web/HTTP/Methods/OPTIONS\"><code>OPTIONS</code></a></li>\n  <li>Descrição de métodos inseguros comuns: <a href=\"/pt-BR/docs/Web/HTTP/Methods/PUT\"><code>PUT</code></a>, <a href=\"/pt-BR/docs/Web/HTTP/Methods/DELETE\"><code>DELETE</code></a>, <a href=\"/pt-BR/docs/Web/HTTP/Methods/POST\"><code>POST</code></a></li>\n</ul>"}}],"toc":[{"text":"Aprenda mais","id":"aprenda_mais"}],"summary":"Um método HTTP é seguro se ele não altera o estado do servidor. Em outras palavras, um método é seguro se ele leva a uma operação de somente leitura. Diversos métodos de HTTP são seguros: GET, HEAD, ou OPTIONS. Todos os métodos seguros também são idempotentes, mas nem todos os métodos idempotentes são seguros. Por exemplo, PUT e DELETE são ambos idempotentes, entretanto são inseguros.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Safe","locale":"en-US","native":"English (US)"},{"title":"Seguro","locale":"es","native":"Español"},{"title":"Sécurisée","locale":"fr","native":"Français"},{"title":"Safe (安全)","locale":"ja","native":"日本語"},{"title":"안전함","locale":"ko","native":"한국어"},{"title":"Безопасный метод","locale":"ru","native":"Русский"},{"title":"Safe（安全）","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"pt-br/glossary/safe","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/glossary/safe/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Glossary","title":"Glossário"},{"uri":"/pt-BR/docs/Glossary/safe","title":"Seguro"}],"pageTitle":"Seguro - Glossário | MDN","noIndexing":false}}