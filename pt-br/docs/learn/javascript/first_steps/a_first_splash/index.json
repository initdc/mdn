{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Um primeiro mergulho no JavaScript","mdn_url":"/pt-BR/docs/Learn/JavaScript/First_steps/A_first_splash","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web\"><strong>Completos iniciantes, comecem por aqui!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Iniciando na Internet</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web\">Visão geral sobre Iniciando na Internet</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Instalação dos softwares básicos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">Como será seu site?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Lidando com arquivos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/HTML_basics\">O básico de HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/CSS_basics\">O básico de CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">O básico de JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Publicando seu site</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Como a Internet funciona</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/HTML\"><strong>HTML — Estruturando a Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introdução ao HTML</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML\">Visão geral da Introdução ao HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Iniciando em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">O que está no \"head\"? Metadados em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">Fundamentos de Textos HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Criando hiperlinks</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Formatação avançada de textos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Estrutura de Documentos e Sites</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Depurando HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Avaliação: Marcando uma carta</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Avaliação: Estruturação de uma página de conteúdo</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Multimídia e incorporação</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding\">Visão geral sobre Multimídia e incorporação</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Imagens em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Conteúdos em Vídeo e áudio</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">De objeto a iframe — outras tecnologias de incorporação</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adicionando vetores gráficos na Web</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Imagens responsivas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Avaliação: Página de abertura da Mozilla</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Tabelas HTML</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables\">Visão geral sobre tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Basics\">O básico sobre Tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Advanced\">Funcionalidades avançadas e acessibilidade de Tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Structuring_planet_data\">Avaliação: Estruturação dos dados do planenta</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/CSS\"><strong>CSS — Estilizando a Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS - primeiros passos</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps\">Visão geral das primeiras etapas com CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/What_is_CSS\">O que é CSS?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/Getting_started\">Iniciando com CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/How_CSS_is_structured\">como CSS é estruturado</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/How_CSS_works\">Como CSS funciona</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Usando seu novo Conhecimento</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Selectors\">seletores CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Tratamento de diferentes direções de texto</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Values_and_units\">Valores e unidades</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Dimensionando itens em CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Styling_tables\">Estilização de tabelas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Organizing\">Organize seu CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Estilização de textos</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text\">Visão geral da Estilização de textos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamentos da estilização de textos e fontes</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Styling_lists\">Estilização de listas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Styling_links\">Estilização de links</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Web_fonts\">Fontes Web</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Avaliação: Tipografia para a página inicial da escola pública local</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Esquemas CSS</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout\">Visão geral de esquemas CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Introduction\">Introdução a esquemas CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Floats\">\"Floats\" - Flutuando elementos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Positioning\">Posicionamento</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/pt-BR/docs/Learn/JavaScript\"><strong>JavaScript — Uma linguagem de script dinâmica para aplicações cliente</strong></a></li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>Primeiros passos com JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps\">Visão geral dos Primeiros passos com JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">O que é JavaScript?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/A_first_splash\">Um primeiro olhar em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_went_wrong\">O que deu errado? Solução de problemas de JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Variables\">Guardando a informação que precisa — Variáveis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Math\">Básico de JavaScript — Números e operadores</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Strings\">Lidando com textos — Strings em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Métodos de String úteis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Arrays\">\"Arrays\" — Arranjos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Avaliação: Gerador de estórias bobas</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Programando em JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks\">Visão geral de Programando em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/conditionals\">Tomando decisões no seu código — Condicionais</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Looping_code\">Código de repetição</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Functions\">Funções — Blocos de códigos reutilizáveis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Construa sua própria função</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Return_values\">Retorno de valores em funções</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Events\">Introdução a eventos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Avaliação: Galeria de imagens</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introdução Objetos em JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects\">Visão geral de Objetos em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Basics\">O básico de Objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object_prototypes\">\"Prototypes\" de objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/JSON\">Trabalhando com dados em JSON</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object_building_practice\">Prática de construção de objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Avaliação: Adicionando funcionalidades ao nosso aplicativo Bolas Saltitantes</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>APIs Web na aplicação Cliente</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs\">APIs Web na aplicação Cliente</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introdução a APIs Web</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulando documentos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Pegando dados do servidor</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">APIs de Terceiros</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Desenhando gráficos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">APIs de Vídeo e Áudio</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Armazenamento na aplicação cliente</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Accessibility\"><strong>Acessibilidade — Faça a Internet usável por qualquer pessoa</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Guias de acessibilidade</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility\">Visão geral sobre Acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/What_is_accessibility\">O que é acessibilidade?</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/HTML\">HTML: Uma boa base para acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/CSS_and_JavaScript\">Melhores práticas para acessibilidade em CSS e JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/WAI-ARIA_basics\">O básico de WAI-ARIA</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/Multimedia\">Multimídia acessível</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/Mobile\">Acessibilidade em dispositivos móveis</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Avaliando a acessibilidade</summary>\n        <ol>\n            <li><a href=\"/pt-BR/docs/Learn/Accessibility/Accessibility_troubleshooting\">Avaliação: Solução de problemas de Acessibilidade</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing\"><strong>Ferramentas e teste</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Testes entre navegadores</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing\">Visão geral de testes entre navegadores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introdução a testes entre navegadores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Estratégias para execução de testes</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Lidando com problemas comuns de HTML e CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Lidando com problemas comuns de JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Lidando com problemas comuns de acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementando detecção de funcionalidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introdução a testes automatizados</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Configurando seu próprio ambiente de testes automatizados</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/Server-side\"><strong>Programação de servidores de Aplicação</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Primeiros passos</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps\">Visão geral para os primeiros passos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Introduction\">Introdução ao Servidor de Aplicação</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Client-Server_overview\">Visão geral da arquitetura Cliente-Servidor</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Web_frameworks\">Frameworks Web para o Servidor de Aplicação</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Website_security\">Segurança de sites</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Framework Web Django (Python)</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django\">Visão geral do Framework Web Django (Python)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Introduction\">Introdução</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/development_environment\">Configurando um ambiente de desenvolvimento para aplicações Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial: Um site para a Biblioteca Local</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Parte 2: Criando o esqueleto de um site</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Models\">Tutorial Parte 3: Usando \"models\"</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Admin_site\">Tutorial Parte 4: Um site administrativo em Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Home_page\">Tutorial Parte 5: Criando nossa página inicial</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Generic_views\">Tutorial Parte 6: Páginas de lista genérica e detalhamento</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Sessions\">Tutorial Parte 7: Framework de sessões</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Authentication\">Tutorial Parte 8: Autenticação e permissões de usuário</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Forms\">Tutorial Part 9: Trabalhando com formulários</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Testing\">Tutorial Parte 10: Testando aplicações web em Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Deployment\">Tutorial Parte 11: Implantando Django em produção</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/web_application_security\">Segurança de Aplicações Web</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/django_assessment_blog\">Avaliação: Faça você mesmo: Um blog pessoal</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Framework Web Express (Node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs\">Visão geral do Framework Web Express (Node.js/JavaScript)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Introduction\">Introdução a Express/Node</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/development_environment\">Configurando um ambiente de desenvolvimento Node (Express)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Tutorial Rápido: Um site para a Biblioteca Local</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Tutorial Rápido Parte 2: Criando o esqueleto de um site</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/mongoose\">Tutorial Rápido Parte 3: Usando um banco de dados (com Mongoose)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/routes\">Tutorial Rápido Parte 4: Rotas e \"controllers\"</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Tutorial Rápido Parte 5: Mostrando os dados da Biblioteca</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/forms\">Tutorial Rápido Parte 6: Trabalhando com formulários</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/deployment\">Tutorial Rápido Parte 7: Implantando em produção</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Mais recursos</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Questões gerais</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/HTML/Howto\">Questões sobre HTML</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/CSS/Howto\">Questões sobre CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Howto\">Questões sobre JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Web_mechanics\">Como a Internet funciona</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Tools_and_setup\">Ferramentas e configuração</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Design_and_accessibility\">Projeto e acessibilidade</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_is_JavaScript\"> Anterior </a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/First_steps\"> Menu: First steps</a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_went_wrong\"> Próxima  </a></li>\n</ul></div>\n\n<p class=\"summary\">Agora você poderá aprender um pouco sobre a Teoria do Javascript e o que você poderá fazer com ele. Nós vamos lhe fornecer aqui um Curso rápido sobre as características básicas do JavaScript através de um tutorial completamente prático. Você irá construir um simples jogo de \"Adivinhe o número\", passo a passo. </p>\n\n<table class=\"learn-box standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"row\">Pré-requisitos:</th>\n   <td>Conhecimentos básicos de informática, uma compreensão básica de HTML e CSS, uma compreensão do que é JavaScript.</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Objetivo:</th>\n   <td>\n    <p>Ter um primeiro bit de experiência em escrever um pouco de  JavaScript, e adquirir  pelo menos uma compreensão básica do que envolve escrever um programa em JavaScript.</p>\n   </td>\n  </tr>\n </tbody>\n</table>\n\n<p>Nós não esperamos que você entenda todo o código imediatamente - Apenas queremos ensinar-lhe os melhores conceitos por enquanto e dar a você uma idéia de como o JavaScript (e outras linguagens de programação) funcionam. Em artigos posteriores você vai rever todos esses recursos com muito mais detalhes!</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Nota</strong>: Muitos dos recursos de código que você verá no JavaScript são iguais aos de outra linguagem de programação - funções, loops, etc. A sintaxe do código parece diferente, mas os conceitos ainda são praticamente os mesmos.</p>\n</div>"}},{"type":"prose","value":{"id":"pensando_como_um_programador","title":"Pensando como um Programador","isH3":false,"content":"<p>Uma das coisas mais difíceis de aprender na programação não é a sintaxe que você precisa aprender, mas como aplicá-la para resolver problemas do mundo real. Você precisa começar a pensar como um programador - isso geralmente envolve olhar para as descrições do que seu programa precisa fazer e analisar como eles podem ser aplicados na solução real (prática), quais recursos de código são necessários para alcançar esse objetivo, e como fazê-los trabalhar em conjunto.</p>\n\n<p>Isso requer um mistura de trabalho duro, experiência com a sintaxe de programação utilizada e prática, além de um pouco de criatividade, é claro. Quanto mais você programa, melhor programador se torna. Nós não prometemos transformar seu cérebro em um \"cérebro de programador\" em 5 minutos, mas vamos te dar todas as oportunidades para pensar na prática como um programador ao longo deste curso. </p>\n\n<p>Com isso em mente, vejamos o exemplo que estaremos construindo neste artigo e analisaremos o processo geral de dissecá-lo em tarefas tangíveis.</p>\n\n<p> </p>"}},{"type":"prose","value":{"id":"exemplo_—_jogo_adivinhe_um_número","title":"Exemplo — Jogo adivinhe um número","isH3":false,"content":"<p>Neste artigo vamos mostrar a você como construir este simples jogo, que pode ser visto abaixo:</p>\n\n\n\n<p><iframe class=\"sample-code-frame\" title=\"Exemplo — Jogo adivinhe um número\" id=\"frame_top_hidden_code\" width=\"100%\" height=\"320\" src=\"https://yari-demos.prod.mdn.mozit.cloud/pt-BR/docs/Learn/JavaScript/First_steps/A_first_splash/_sample_.top_hidden_code.html\" loading=\"lazy\"></iframe></p>\n\n<p>Vá em frente e jogue por um tempo para se familiarizar com o jogo antes de continuar.</p>\n\n<p>Vamos imaginar que o seu chefe te deu as seguintes diretrizes para criar este jogo:</p>\n\n<blockquote>\n<p>Quero que você crie um jogo simples do tipo adivinhe um número. Ele deve gerar um número aleatório de 1 a 100, depois desafiar o jogador a adivinhar o número em 10 rodadas. A cada rodada deve ser dito ao jogador se ele está certo ou errado, se estiver errado, deve ser dito se o palpite é muito baixo ou muito alto. Também deve ser mostrado ao jogador os números que ele tentou adivinhar anteriormente. O jogo termina se o jogador acertar o número ou acabarem o número de tentativas. Quando o jogo acabar, deve ser dado ao jogador a opção de jogar novamente.</p>\n</blockquote>\n\n<p>Olhando para o enunciado, a primeira coisa que devemos fazer é quebrá-lo em pequenas tarefas, da forma mais parecida com o pensamento de um programador quanto possível:</p>\n\n<ol>\n <li>Gerar um número aleatório entre 1 e 100.</li>\n <li>Gravar o número do turno que o jogador está. Iniciar em 1.</li>\n <li>Dar ao jogador uma forma de adivinhar o número.</li>\n <li>Após a tentativa ter sido submetida, primeiro gravar em algum lugar para que o usuário possa ver as tentativas anteriores.</li>\n <li>Depois, verificar se o palpite está correto.</li>\n <li>Se estiver correto:\n  <ol>\n   <li>Escrever mensagem de parabéns.</li>\n   <li>Impedir que o jogador insira mais respostas (isso pode bugar o jogo).</li>\n   <li>Mostrar controle que permita ao jogador reiniciar o jogo.</li>\n  </ol>\n </li>\n <li>Se o palpite estiver errado e o jogador ainda tem turnos sobrando:\n  <ol>\n   <li>Dizer ao jogador que ele está errado.</li>\n   <li>Permitir que ele insira outra resposta.</li>\n   <li>Incrementar o número do turno em 1.</li>\n  </ol>\n </li>\n <li>Se o jogador está errado mas não tem turnos sobrando:\n  <ol>\n   <li>Dizer ao jogador que o jogo acabou.</li>\n   <li>Impedir que o jogador insira mais respostas (isso pode bugar o jogo).</li>\n   <li>Mostrar controle que permita ao jogador reiniciar o jogo.</li>\n  </ol>\n </li>\n <li>Quando reiniciar, tenha certeza de resetar todas as variáveis e a interface do jogo, então volte para o passo 1.</li>\n</ol>\n\n<p>Então vamos em frente, olhando como podemos transformar esses passos em código, construindo esse exemplo e explorando as ferramentas do JavaScript ao longo do caminho.</p>"}},{"type":"prose","value":{"id":"configuração_inicial","title":"Configuração Inicial","isH3":true,"content":"<p>Para iniciar este tutorial, gostaríamos que você fizesse uma cópia do arquivo <a href=\"https://github.com/mdn/learning-area/blob/main/javascript/introduction-to-js-1/first-splash/number-guessing-game-start.html\" class=\"external\" rel=\" noopener\">jogo-adivinhe-o-numero-inicio.html</a> (<a href=\"https://mdn.github.io/learning-area/javascript/introduction-to-js-1/first-splash/number-guessing-game-start.html\" class=\"external\" rel=\" noopener\">ver demonstração</a>). Abra-o em um editor de texto e também no seu browser. No momento você vai apenas ver um simples cabeçalho, parágrafo de instruções e um formulário para entrada de informações, mas o formulário não fará nada por enquanto.</p>\n\n<p>O lugar em que começaremos a escrever nosso código será dentro da tag <a href=\"/pt-BR/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> na parte inferior do HTML:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n\n  <span class=\"token comment\">// Seu JavaScript vai aqui</span>\n\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"adicionando_variáveis_para_armazenar_nossos_dados","title":"Adicionando variáveis para armazenar nossos dados","isH3":true,"content":"<p>Vamos começar. Primeiramente, adicione as seguintes linhas na sua tag <a href=\"/pt-BR/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> :</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> numeroAleatorio<span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> palpites <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.palpites'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ultimoResultado <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.ultimoResultado'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> baixoOuAlto <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.baixoOuAlto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> envioPalpite <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.envioPalpite'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> campoPalpite <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.campoPalpite'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> contagemPalpites <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> botaoReinicio<span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Aqui estamos setando as variáveis que precisamos para guardar os dados que nosso programa irá utilizar. Variáveis são basicamente recipientes para valores (como números, ou strings ou textos). Variáveis são criadas com a palavra-chave <code>var</code> seguida de um nome para sua variável. Você pode atribuir um valor para sua variável com um sinal de igual (<code>=</code>) seguido do valor que você quer dar a ela.</p>\n\n<p>No nosso exemplo:</p>\n\n<ul>\n <li>À primeira variável — <code>numeroAleatorio</code> — é atribuído um número aleatório entre 1 e 100, calculado usando um algoritmo matemático.</li>\n <li>As próximas três variáveis são criadas para guardar uma referência para os parágrafos resultantes em nosso HTML, e são usadas para inserir valores nos parágrafos no código:\n  <div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>palpites<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ultimoResultado<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>baixoOuAlto<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n </li>\n <li>As próximas duas variáveis armazenam referências para o campo de texto e o botão de envio e são usados para controlar o envio do palpite.\n  <div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>campoPalpite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Digite seu palpite: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>campoPalpite<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>campoPalpite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Enviar palpite<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>envioPalpite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n </li>\n <li>As últimas duas variáveis (contagemPalpites e botaoReinicio) são usadas para armazenar a contagem dos palpites do usuário, e o outro é uma referência para o botão de reset, que não existe ainda (mas irá existir).</li>\n</ul>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p><strong>Nota</strong>: Você irá aprender muito mais sobre variáveis a partir do <a href=\"/en-US/docs/user:chrisdavidmills/variables\">próximo artigo</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"funções","title":"Funções","isH3":true,"content":"<p>Em seguida, adicione o seguinte código abaixo do JavaScript anterior:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">conferirPalpite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Eu sou um placeholder'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Funções são blocos reutilizáveis de código que você pode escrever uma vez e executá-lo de novo e de novo, eliminando a necessidade de repetir o código todas as vezes. Isso é realmente útil. Há várias formas de se definir funções, mas, por agora, vamos nos concentrar em um tipo simples. Aqui nós definimos uma função usando a palavra chave <code>function</code>, seguida de um nome, com parênteses colocados na sequência. Depois disso nós colocamos duas chaves (<code>{ }</code>). Dentro das chaves vai todo o código que queremos executar sempre que chamarmos a função.</p>\n\n<p>O código é executado digitando o nome da função seguido pelos parênteses.</p>\n\n<p>Tente salvar o seu código agora e atualizá-lo no navegador.</p>\n\n<p>Vá até o <a href=\"/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools\">console JavaScript</a>, e insira a seguinte linha:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">conferirPalpite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Você deverá ver um alerta aparecer dizendo \"Eu sou um placeholder\"; nós definimos uma função em nosso código que cria um alerta a qualquer hora em que a chamarmos.</p>\n\n<div class=\"note notecard\" id=\"sect6\">\n<p><strong>Nota</strong>: Você irá aprender muito mais sobre funções mais tarde no curso.</p>\n</div>"}},{"type":"prose","value":{"id":"operadores","title":"Operadores","isH3":true,"content":"<p>Os operadores JavaScript nos permite realizar testes, fazer cálculos matemáticos, unir sequências de texto, e outras coisas do tipo.</p>\n\n<p>Vamos salvar nosso código e atualizar a página exibida em nosso navegador. Abra o <a href=\"/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools\">console JavaScript</a> se você ainda não o tiver aberto, para que possamos digitar os exemplos mostrados abaixo — digite cada um exatamente como mostrado na coluna \"Exemplo\", pressionando Return/Enter na sequência, e veja quais resultados são retornados. Se você não tiver fácil acesso às ferramentas de desenvolvimento do navegador você pode sempre utilizar o console embutido simples, como no exemplo abaixo:</p>\n\n\n\n<p><iframe class=\"sample-code-frame\" title=\"Hidden code sample\" id=\"frame_hidden_code\" width=\"100%\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/pt-BR/docs/Learn/JavaScript/First_steps/A_first_splash/_sample_.hidden_code.html\" loading=\"lazy\"></iframe></p>\n\n<p>Primeiro vamos ver os operadores matemáticos, como por exemplo:</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Operador</th>\n   <th scope=\"col\">Nome</th>\n   <th scope=\"col\">Exemplo</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code>+</code></td>\n   <td>Adição</td>\n   <td><code>6 + 9</code></td>\n  </tr>\n  <tr>\n   <td><code>-</code></td>\n   <td>Subtração</td>\n   <td><code>20 - 15</code></td>\n  </tr>\n  <tr>\n   <td><code>*</code></td>\n   <td>Multiplicação</td>\n   <td><code>3 * 7</code></td>\n  </tr>\n  <tr>\n   <td><code>/</code></td>\n   <td>Divisão</td>\n   <td><code>10 / 5</code></td>\n  </tr>\n </tbody>\n</table>\n\n<p>Você também pode usar o operador <code>+</code> para unir sequências de texto (isso é chamado de concatenação em programação). Tente inserir as seguintes linhas:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> nome <span class=\"token operator\">=</span> <span class=\"token string\">'Bingo'</span><span class=\"token punctuation\">;</span>\nnome<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ola <span class=\"token operator\">=</span> <span class=\"token string\">' diz olá!'</span><span class=\"token punctuation\">;</span>\nola<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cumprimento <span class=\"token operator\">=</span> nome <span class=\"token operator\">+</span> ola<span class=\"token punctuation\">;</span>\ncumprimento<span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Há também alguns atalhos para operadores disponíveis, chamados de operadores de atribuição ampliada (ou atribuição composta). Por exemplo, se você quer adicionar uma nova sequência de texto à uma existente e retornar o resultado, você pode fazer o seguinte:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>nome <span class=\"token operator\">+=</span> <span class=\"token string\">' diz olá!'</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Isso é equivalente a:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>nome <span class=\"token operator\">=</span> nome <span class=\"token operator\">+</span> <span class=\"token string\">' diz olá!'</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Quando estamos rodando testes de verdadeiro/falso (por exemplo, condicinais internas — veja <a href=\"#conditionals\">abaixo</a>, usamos operadores de comparação, por exemplo:</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Operador</th>\n   <th scope=\"col\">Nome</th>\n   <th scope=\"col\">Exemplo</th>\n  </tr>\n  <tr>\n   <td><code>===</code></td>\n   <td>Igualdade estrita (é estritamente o mesmo?)</td>\n   <td><code>5 === 2 + 4</code></td>\n  </tr>\n  <tr>\n   <td><code>!==</code></td>\n   <td>Não-igualdade (não é o mesmo?)</td>\n   <td><code>'Chris' !== 'Ch' + 'ris'</code></td>\n  </tr>\n  <tr>\n   <td><code>&lt;</code></td>\n   <td>Menor que</td>\n   <td><code>10 &lt; 6</code></td>\n  </tr>\n  <tr>\n   <td><code>&gt;</code></td>\n   <td>Maior que</td>\n   <td><code>10 &gt; 20</code></td>\n  </tr>\n </thead>\n</table>"}},{"type":"prose","value":{"id":"condicionais","title":"Condicionais","isH3":true,"content":"<p>Voltando à nossa função <code>conferirPalpite()</code>, imagino que seja seguro dizer que não queremos que ela apenas exiba uma mensagem de teste (placeholder). Nós queremos verificar se o palpite do jogador está correto ou não, e responder apropriadamente.</p>\n\n<p>Neste ponto, substitua sua função <code>conferirPalpite()</code> atual por esta versão:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">conferirPalpite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> palpiteUsuario <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>campoPalpite<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contagemPalpites <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    palpites<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Palpites anteriores: '</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  palpites<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> palpiteUsuario <span class=\"token operator\">+</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>palpiteUsuario <span class=\"token operator\">===</span> numeroAleatorio<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ultimoResultado<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Parabéns! Você acertou!'</span><span class=\"token punctuation\">;</span>\n    ultimoResultado<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">;</span>\n    baixoOuAlto<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">configFimDeJogo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contagemPalpites <span class=\"token operator\">===</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ultimoResultado<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'!!!FIM DE JOGO!!!'</span><span class=\"token punctuation\">;</span>\n    baixoOuAlto<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">configFimDeJogo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    ultimoResultado<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Errado!'</span><span class=\"token punctuation\">;</span>\n    ultimoResultado<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>palpiteUsuario <span class=\"token operator\">&lt;</span> numeroAleatorio<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      baixoOuAlto<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Seu palpite está muito baixo!'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>palpiteUsuario <span class=\"token operator\">&gt;</span> numeroAleatorio<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      baixoOuAlto<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Seu palpite está muito alto!'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  contagemPalpites<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  campoPalpite<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  campoPalpite<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Isso é bastante código — ufa! Vamos abordar cada seção e explicar o que faz.</p>\n\n<ul>\n <li>A primeira linha (linha 2 no código acima) declara uma variável chamada <code>palpiteUsuario</code> e define seu valor igual ao valor inserido pelo jogador no campo de texto. Nós também rodamos esse valor através do método embutido <code>Number()</code>, apenas para ter certeza de que o valor inserido é um número.</li>\n <li>Em seguida, encontramos nosso primero bloco de código condicional (linhas 3–5 no código acima). Um bloco de código condicional lhe permite executar código seletivamente, dependendo se uma condição é verdadeira ou não. Se parece um pouco com uma função, mas não é. A forma mais simples de um bloco condicional começa com a palavra chave <code>if</code>, depois os parênteses, depois as chaves. Dentro dos parênteses nós incluímos um teste. Se o teste retornar <code>true</code>(verdadeiro), o código dentro das chaves é executado. Caso contrário, não é executado, e seguimos para a próxima parte do código. Neste caso, o teste está verificando se a variável <code>contagemPalpites</code> é igual a <code>1</code> (isto é, se essa é ou não a primeira tentativa do jogador):\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>contagemPalpites <span class=\"token operator\">===</span> <span class=\"token number\">1</span></code></pre></div>\n  Se a condição for verdadeira, nós tornamos o conteúdo do parágrafo de palpites, <code>&lt;p class=\"palpites\"&gt;&lt;/p&gt;</code> igual a \"Palpites anteriores: \". Caso contrário, o texto não é exibido.</li>\n <li>A linha 6 acrescenta o valor atual de <code>palpiteUsuario</code> ao final do parágrafo <code>palpites</code>, mais um espaço em branco para que haja espaçamento entre cada palpite mostrado.</li>\n <li>O próximo bloco (linhas 8–24 acima) fazem as seguintes conferências:\n  <ul>\n   <li>O primeiro <code>if(){ }</code> confere se o palpite do jogador é igual ao número aleatório (<code>numeroAleatorio</code>) definido no topo do nosso JavaScript. Se for, o jogador adivinhou corretamente o número e venceu o jogo. Então mostramos ao jogador uma mensagem de parabenização com uma agradável cor verde, limpamos o conteúdo do parágrado que informa sobre o palpite ser alto ou baixo <code>&lt;p class=\"baixoOuAlto\"&gt;&lt;/p&gt;</code>, e executamos uma função chamada <code>configFimDeJogo()</code>, que iremos discutir mais tarde.</li>\n   <li>Agora nós encadeamos outro teste ao final deste anterior usando uma estrutura <code>else if(){ }</code>. Este confere se o palpite do jogador é sua última tentativa. Se for, o programa faz o mesmo que no bloco anterior, porém com uma mensagem de fim de jogo ao invés do texto de parabenização.</li>\n   <li>O bloco final encadeado ao final do código (<code>else { }</code>) contém código que só é executado se nenhum dos outros dois testes retornar verdadeiro (ou seja, o jogador não acertou o número, porém ainda tem mais tentativas restantes). Neste caso nós dizemos a ele que está errado, e então rodamos outro teste condicional para checar se o palpite foi maior ou menor do que a resposta certa, exibindo então uma mensagem apropriada para informá-lo se foi maior ou menor.</li>\n  </ul>\n </li>\n <li>As próximas três linhas da função (linhas 26–28) nos deixa preparados para o próximo palpite ser submetido. Nós somamos 1 à variável <code>contagemPalpites</code> para que o jogador use sua tentativa (<code>++</code> é uma operação de incremento — incrementa em 1), e o campo de texto do formulário de inserção seja esvaziado e focado novamente, pronto para que o próximo palpite seja inserido.</li>\n</ul>"}},{"type":"prose","value":{"id":"eventos","title":"Eventos","isH3":true,"content":"<p>Neste ponto temos uma função <code>conferirPalpite()</code> bem implementada, mas ela não irá fazer nada pois nós não a chamamos ainda. Idealmente nós queremos que ela seja acionada quando o botão \"Enviar palpite\" for pressionado, e para fazer isso precisamos usar um evento. Eventos são ações que acontencem no navegador, como um botão sendo clicado, ou uma página carregada, ou um vídeo tocando; ações as quais podemos responder executando blocos de código. Os construtores que monitoram os acontecimentos de eventos são chamados de <strong>event listeners</strong>, e os blocos de código executados em resposta ao acontecimento do evento são chamados de <strong>event handlers</strong>.</p>\n\n<p>Adicione a seguinte linha abaixo da chave de fechamento da sua função <code>conferirPalpite()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>envioPalpite<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> conferirPalpite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Aqui nós estamos adicionando um <em>event listener</em> ao botão <code>envioPalpite</code>. Esse é um método que aceita a inserção de dois valores (chamados de argumentos) — o tipo de envento que estamos monitorando (neste caso o evento <code>click</code>) como um <em>string</em> (sequência de texto), e o código que queremos executar quando o evento ocorrer (neste caso a função <code>conferirPalpite()</code> — note que não temos que especificar os parênteses quando estivermos escrevendo dentro de <a href=\"/pt-BR/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>).</p>\n\n<p>Tente agora salvar e atualizar seu código, e seu exemplo deve funcionar agora, até um ponto. O único problema agora é que se você acertar o palpite ou ficar sem mais tentativas o jogo irá falhar, porque ainda não definimos a função <code>configFimDeJogo()</code> que deve ser executada uma vez que o jogo terminar. Vamos adicionar agora o código restante e completar a funcionalidade do nosso exemplo.</p>"}},{"type":"prose","value":{"id":"finalizando_a_funcionalidade_do_jogo","title":"Finalizando a funcionalidade do jogo","isH3":true,"content":"<p>Vamos adicionar a função <code>configFimDeJogo()</code> ao final do nosso código e então explorá-lo. Adicione agora isso, abaixo do restante do seu JavaScript:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">configFimDeJogo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  campoPalpite<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  envioPalpite<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  botaoReinicio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  botaoReinicio<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Iniciar novo jogo'</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>botaoReinicio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  botaoReinicio<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> reiniciarJogo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<ul>\n <li>As primeiras duas linhas desabilitam a entrada de texto do formulário e o clique do botão, definindo a propriedade <em>disabled</em> (desabilitado) de cada um como <code>true</code> (verdadeiro). Isso é necessário, pois se não o fizermos, o usuário poderia submeter mais palpites depois do jogo ter terminado, o que iria bagunçar as coisas.</li>\n <li>As próximas três linhas geram um novo elemento <a href=\"/pt-BR/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, define o texto de seu rótulo como \"Iniciar novo jogo\", e o adiciona ao final do nosso HTML existente.</li>\n <li>A linha final define um monitor de evento (<em>event listener</em>) em nosso botão, para que quando seja clicado, uma função chamada <code>reiniciarJogo()</code> seja executada.</li>\n</ul>\n\n<p>Agora precisamos definir essa função também! Adicione o seguinte código, novamente ao final do nosso JavaScript:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">reiniciarJogo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  contagemPalpites <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> reiniciarParas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.resultadoParas p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> reiniciarParas<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    reiniciarParas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  botaoReinicio<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>botaoReinicio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  campoPalpite<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  envioPalpite<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  campoPalpite<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  campoPalpite<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ultimoResultado<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">;</span>\n\n  numeroAleatorio <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Esse longo bloco de código redefine completamente tudo do modo como era no início do jogo, para que o jogador possa jogá-lo novamente. Ele:</p>\n\n<ul>\n <li>Coloca o valor da variável <code>contagemPalpites</code> novamente igual a 1.</li>\n <li>Limpa todos os parágrafos de informativos.</li>\n <li>Remove o botão resete do nosso código.</li>\n <li>Habilita os elementos do formulários, esvazia e direciona o foco ao campo de texto, pronto para que um novo palpite seja inserido.</li>\n <li>Remove a cor de fundo do parágrafo <code>ultimoResultado</code>.</li>\n <li>Gera um novo número aleatório para que o jogador não esteja tentando adivinhar o mesmo número novamente!</li>\n</ul>\n\n<p><strong>Neste ponto você deve ter um jogo (simples) completamente funcional — parabéns!</strong></p>\n\n<p>Tudo o que temos que fazer agora neste artigo é falar sobre alguns outros recursos importantes que você já viu, mesmo que não os tenha notado ainda.</p>"}},{"type":"prose","value":{"id":"loops","title":"Loops","isH3":true,"content":"<p>Uma parte do código acima que precisamos olhar mais detalhadamente é o loop <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for\">for</a>. Loop é um conceito muito importante em programação, que permite a você continuar executando um pedaço do código repetidamente, até que determinada condição seja satisfeita.</p>\n\n<p>Para começar, vá novamente até o <a href=\"/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools\">console JavaScript</a> do seu navegador, e insira o seguinte:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">21</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>O que aconteceu? Os números de 1 a 20 foram exibidos no seu console. Isso acontece por causa do loop. Um loop <code>for</code> utiliza a inserção de três valores (argumentos):</p>\n\n<ol>\n <li><strong>Um valor inicial</strong>: Nesse caso estamos iniciando a contagem em 1, mas poderia ser qualquer outro número que quisesse utilizar. Você pode substituir <code>i</code> por qualquer número que quiser também, mas <code>i</code> é utilizado por convenção porque é curto e fácil de lembrar.</li>\n <li><strong>Uma condição de saída</strong>: Aqui nós especificamos <code>i &lt; 21</code> — o loop irá continuar rodando até que <code>i</code> não seja mais menor que 21. Quando <code>i</code> alcançar 21, o loop não será mais executado.</li>\n <li><strong>Incremento</strong>: Nós especificamos <code>i++</code>, que siginifica \"adicione 1 à i\". O loop irá rodar uma vez para cada valor de <code>i</code>, até que <code>i</code> alcance o valor de 21 (como abordado acima). Nesse caso, nós estamos simplesmente imprimindo o valor de <code>i</code> no console em cada iteração usando <a href=\"/pt-BR/docs/Web/API/Console/log\" title=\"console.log()\"><code>console.log()</code></a>.</li>\n</ol>\n\n<p>Agora vamos olhar o loop em nosso jogo de adivinhar o número — o código seguinte pode ser encontrado dentro da função <code>reiniciarJogo()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> reiniciarParas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.resultadoParas p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> reiniciarParas<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  reiniciarParas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Esse código cria uma variável contendo uma lista de todos os parágrafos dentro de <code>&lt;div class=\"resultadoParas\"&gt;</code> usando o método <a href=\"/pt-BR/docs/Web/API/Document/querySelectorAll\" title=\"querySelectorAll()\"><code>querySelectorAll()</code></a>, e então faz o loop em cada um, removendo o conteúdo de texto dos mesmos.</p>"}},{"type":"prose","value":{"id":"uma_pequena_discussão_sobre_objetos","title":"Uma pequena discussão sobre objetos","isH3":true,"content":"<p>Vamos adicionar uma melhoria final antes de chegarmos a essa discussão. Adicione a linha seguinte logo abaixo da linha <code>var botaoReinicio;</code> próximo ao topo do seu JavaScript, em seguida salve nosso arquivo:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>campoPalpite<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Essa linha usa o método <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLElement/focus\"><code>focus()</code> <small>(en-US)</small></a> para automaticamente colocar o cursor dentro campo de texto do <a href=\"/pt-BR/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a> assim que a página carrega, significando que o usuário já pode começar a digitar o primeiro palpite, e não precisa clicar no campo do formulário primeiro. É apenas uma pequena adição, mas melhora a usabilidade — dando ao usuário uma boa dica visual do que ele deve fazer para jogar o jogo.</p>\n\n<p>Vamos analisar o que está acontencedo aqui com um pouco mais de detalhes. Em JavaScript, tudo é um objeto. Um objeto é uma coleção de funcionalidades relacionadas armazenadas em um único agrupamento. Você pode criar seus próprios objetos, mas isso é bastante avançado e nós não iremos abordar até mais tarde no curso. Por agora, vamos apenas discutir brevemente os objetos pré-construídos presentes em seu navegador, que lhe permite fazer várias coisas úteis.</p>\n\n<p>Neste caso particular, nós primeiro criamos a variável <code>campoPalpite</code> que armazena uma referência ao campo de inserção de texto do formulário em nosso HTML — a linha seguinte pode ser achada entre nossas declarações de variáveis próximas ao topo:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> campoPalpite <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.campoPalpite'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Para pegar essa referência, usamos o método <a href=\"/pt-BR/docs/Web/API/Document/querySelector\" title=\"querySelector()\"><code>querySelector()</code></a> do objeto <a href=\"/pt-BR/docs/Web/API/Document\"><code>document</code></a>. <code>querySelector()</code> pega um pedaço de informação — um <a href=\"/en-US/docs/Learn/CSS/Building_blocks/Selectors\">seletor CSS</a> que seleciona o elemento ao qual você quer referenciar.</p>\n\n<p>Como agora <code>campoPalpite</code> contém referência ao elemento <a href=\"/pt-BR/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a>, ele terá agora acesso a um número de propriedades (basicamente variáveis armazenadas dentro de objetos, sendo que alguns não podem ter seus valores alterados) e métodos (basicamente, funções armazenadas dentro de objetos). Um método disponível para elementos de inserção <code>&lt;input&gt;</code>, é o <code>focus()</code>, então agora podemos usar essa linha para focar o campo de inserção de texto:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>campoPalpite<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Variáveis que não contém referências a elementos de formulário não terão <code>focus()</code> disponível para elas. Por exemplo, a variável <code>palpites</code> contém referência de um elemento <a href=\"/pt-BR/docs/Web/HTML/Element/p\"><code>&lt;p&gt;</code></a>, e <code>contagemPalpites</code> contém um número.</p>"}},{"type":"prose","value":{"id":"brincando_com_objetos_do_navegador","title":"Brincando com objetos do navegador","isH3":true,"content":"<p>Vamos brincar um pouco com alguns objetos do navegador.</p>\n\n<ol>\n <li>Primeiro abra seu programa em um navegador.</li>\n <li>Em seguida, abra as <a href=\"/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools\">ferramentas de desenvolvimento do navegador</a>, e certifique-se de que a aba do console JavaScript esteja aberta.</li>\n <li>Digite <code>campoPalpite</code> e o console irá lhe mostrar que a variável contém um elemento <a href=\"/pt-BR/docs/Web/HTML/Element/Input\"><code>&lt;input&gt;</code></a>. Você também irá notar que o console completa automaticamente os nomes de objetos existentes dentro do ambiente de execução, incluindo suas variáveis!\n  <ol>\n   <li>Agora digite o seguinte:\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>campoPalpite<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">'Olá'</span><span class=\"token punctuation\">;</span></code></pre></div>\n    A propriedade <code>value</code> representa o valor atual inserido no campo de texto. Você verá que inserindo esse comando, nós mudamos o valor desse objeto!</li>\n  </ol>\n </li>\n <li>Agora tente digitar <code>palpites</code> e pressione <em>return</em>. O console irá mostrar que a variável contém um elemento <a href=\"/pt-BR/docs/Web/HTML/Element/p\"><code>&lt;p&gt;</code></a>.</li>\n <li>Agora tente inserir a linha seguinte:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>palpites<span class=\"token punctuation\">.</span>value</code></pre></div>\n  O navegador irá retornar <code>undefined</code>, porque <code>value</code> não existe em parágrafos.</li>\n <li>Para mudar o texto dentro de um parágrafo, você precisa da propriedade <a href=\"/pt-BR/docs/Web/API/Node/textContent\" title=\"textContent\"><code>textContent</code></a>. Tente isso:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>palpites<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Onde está meu parágrafo?'</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n <li>Agora algo divertido. Tente inserir as linhas abaixo, uma por uma:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>palpites<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\npalpites<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>fontSize <span class=\"token operator\">=</span> <span class=\"token string\">'200%'</span><span class=\"token punctuation\">;</span>\npalpites<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>padding <span class=\"token operator\">=</span> <span class=\"token string\">'10px'</span><span class=\"token punctuation\">;</span>\npalpites<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>boxShadow <span class=\"token operator\">=</span> <span class=\"token string\">'3px 3px 6px black'</span><span class=\"token punctuation\">;</span></code></pre></div>\n  Cada elemento em uma página tem uma propriedade <code>style</code>, que contém um objeto no qual estão inseridos em suas propriedades todos os estilos incorporados de CSS aplicados ao respectivo elemento. Isso nos permite configurar dinamicamente novos estilos CSS nos elementos usando JavaScript.</li>\n</ol>"}},{"type":"prose","value":{"id":"finalizado_por_enquanto...","title":"Finalizado por enquanto...","isH3":false,"content":"<p>Então é isso, para construir o exemplo — você chegou ao final, muito bem! Teste o resultado do seu código, ou <a href=\"https://mdn.github.io/learning-area/javascript/introduction-to-js-1/first-splash/number-guessing-game.html\" class=\"external\" rel=\" noopener\">jogue com nossa versão finalizada aqui</a>. Se você não conseguir fazer o exemplo funcionar, compare com o <a href=\"https://github.com/mdn/learning-area/blob/main/javascript/introduction-to-js-1/first-splash/number-guessing-game.html\" class=\"external\" rel=\" noopener\">código fonte</a>.</p>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_is_JavaScript\"> Anterior </a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/First_steps\"> Menu: First steps</a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_went_wrong\"> Próxima  </a></li>\n</ul><p></p>"}}],"toc":[{"text":"Pensando como um Programador","id":"pensando_como_um_programador"},{"text":"Exemplo — Jogo adivinhe um número","id":"exemplo_—_jogo_adivinhe_um_número"},{"text":"Finalizado por enquanto...","id":"finalizado_por_enquanto..."}],"summary":"Agora você poderá aprender um pouco sobre a Teoria do Javascript e o que você poderá fazer com ele. Nós vamos lhe fornecer aqui um Curso rápido sobre as características básicas do JavaScript através de um tutorial completamente prático. Você irá construir um simples jogo de \"Adivinhe o número\", passo a passo. ","popularity":0.0012,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"A first splash into JavaScript","locale":"en-US","native":"English (US)"},{"title":"Un primer acercamiento a JavaScript","locale":"es","native":"Español"},{"title":"Notre premier code JavaScript","locale":"fr","native":"Français"},{"title":"JavaScriptへの最初のダイブ","locale":"ja","native":"日本語"},{"title":"JavaScript에 발 담그기","locale":"ko","native":"한국어"},{"title":"Первое погружение в JavaScript","locale":"ru","native":"Русский"},{"title":"JavaScript 初体验","locale":"zh-CN","native":"中文 (简体)"},{"title":"初次接觸Javascript","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"pt-br/learn/javascript/first_steps/a_first_splash","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/learn/javascript/first_steps/a_first_splash/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/pt-BR/docs/Learn","title":"Aprendendo desenvolvimento web"},{"uri":"/pt-BR/docs/Learn/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Learn/JavaScript/First_steps","title":"Primeiros passos com JavaScript"},{"uri":"/pt-BR/docs/Learn/JavaScript/First_steps/A_first_splash","title":"Um primeiro mergulho no JavaScript"}],"pageTitle":"Um primeiro mergulho no JavaScript - Aprendendo desenvolvimento web | MDN","noIndexing":false}}