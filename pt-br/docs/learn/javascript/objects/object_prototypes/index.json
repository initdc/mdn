{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Protótipos de objetos","mdn_url":"/pt-BR/docs/Learn/JavaScript/Objects/Object_prototypes","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web\"><strong>Completos iniciantes, comecem por aqui!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Iniciando na Internet</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web\">Visão geral sobre Iniciando na Internet</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Instalação dos softwares básicos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">Como será seu site?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Lidando com arquivos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/HTML_basics\">O básico de HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/CSS_basics\">O básico de CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">O básico de JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Publicando seu site</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Como a Internet funciona</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/HTML\"><strong>HTML — Estruturando a Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introdução ao HTML</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML\">Visão geral da Introdução ao HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Iniciando em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">O que está no \"head\"? Metadados em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">Fundamentos de Textos HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Criando hiperlinks</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Formatação avançada de textos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Estrutura de Documentos e Sites</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Depurando HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Avaliação: Marcando uma carta</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Avaliação: Estruturação de uma página de conteúdo</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Multimídia e incorporação</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding\">Visão geral sobre Multimídia e incorporação</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Imagens em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Conteúdos em Vídeo e áudio</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">De objeto a iframe — outras tecnologias de incorporação</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adicionando vetores gráficos na Web</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Imagens responsivas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Avaliação: Página de abertura da Mozilla</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Tabelas HTML</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables\">Visão geral sobre tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Basics\">O básico sobre Tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Advanced\">Funcionalidades avançadas e acessibilidade de Tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Structuring_planet_data\">Avaliação: Estruturação dos dados do planenta</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/CSS\"><strong>CSS — Estilizando a Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS - primeiros passos</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps\">Visão geral das primeiras etapas com CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/What_is_CSS\">O que é CSS?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/Getting_started\">Iniciando com CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/How_CSS_is_structured\">como CSS é estruturado</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/How_CSS_works\">Como CSS funciona</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Usando seu novo Conhecimento</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Selectors\">seletores CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Tratamento de diferentes direções de texto</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Values_and_units\">Valores e unidades</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Dimensionando itens em CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Styling_tables\">Estilização de tabelas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Organizing\">Organize seu CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Estilização de textos</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text\">Visão geral da Estilização de textos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamentos da estilização de textos e fontes</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Styling_lists\">Estilização de listas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Styling_links\">Estilização de links</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Web_fonts\">Fontes Web</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Avaliação: Tipografia para a página inicial da escola pública local</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Esquemas CSS</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout\">Visão geral de esquemas CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Introduction\">Introdução a esquemas CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Floats\">\"Floats\" - Flutuando elementos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Positioning\">Posicionamento</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/pt-BR/docs/Learn/JavaScript\"><strong>JavaScript — Uma linguagem de script dinâmica para aplicações cliente</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Primeiros passos com JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps\">Visão geral dos Primeiros passos com JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">O que é JavaScript?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/A_first_splash\">Um primeiro olhar em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_went_wrong\">O que deu errado? Solução de problemas de JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Variables\">Guardando a informação que precisa — Variáveis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Math\">Básico de JavaScript — Números e operadores</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Strings\">Lidando com textos — Strings em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Métodos de String úteis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Arrays\">\"Arrays\" — Arranjos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Avaliação: Gerador de estórias bobas</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Programando em JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks\">Visão geral de Programando em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/conditionals\">Tomando decisões no seu código — Condicionais</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Looping_code\">Código de repetição</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Functions\">Funções — Blocos de códigos reutilizáveis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Construa sua própria função</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Return_values\">Retorno de valores em funções</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Events\">Introdução a eventos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Avaliação: Galeria de imagens</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>Introdução Objetos em JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects\">Visão geral de Objetos em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Basics\">O básico de Objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object_prototypes\">\"Prototypes\" de objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/JSON\">Trabalhando com dados em JSON</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object_building_practice\">Prática de construção de objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Avaliação: Adicionando funcionalidades ao nosso aplicativo Bolas Saltitantes</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>APIs Web na aplicação Cliente</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs\">APIs Web na aplicação Cliente</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introdução a APIs Web</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulando documentos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Pegando dados do servidor</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">APIs de Terceiros</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Desenhando gráficos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">APIs de Vídeo e Áudio</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Armazenamento na aplicação cliente</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Accessibility\"><strong>Acessibilidade — Faça a Internet usável por qualquer pessoa</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Guias de acessibilidade</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility\">Visão geral sobre Acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/What_is_accessibility\">O que é acessibilidade?</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/HTML\">HTML: Uma boa base para acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/CSS_and_JavaScript\">Melhores práticas para acessibilidade em CSS e JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/WAI-ARIA_basics\">O básico de WAI-ARIA</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/Multimedia\">Multimídia acessível</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/Mobile\">Acessibilidade em dispositivos móveis</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Avaliando a acessibilidade</summary>\n        <ol>\n            <li><a href=\"/pt-BR/docs/Learn/Accessibility/Accessibility_troubleshooting\">Avaliação: Solução de problemas de Acessibilidade</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing\"><strong>Ferramentas e teste</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Testes entre navegadores</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing\">Visão geral de testes entre navegadores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introdução a testes entre navegadores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Estratégias para execução de testes</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Lidando com problemas comuns de HTML e CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Lidando com problemas comuns de JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Lidando com problemas comuns de acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementando detecção de funcionalidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introdução a testes automatizados</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Configurando seu próprio ambiente de testes automatizados</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/Server-side\"><strong>Programação de servidores de Aplicação</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Primeiros passos</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps\">Visão geral para os primeiros passos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Introduction\">Introdução ao Servidor de Aplicação</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Client-Server_overview\">Visão geral da arquitetura Cliente-Servidor</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Web_frameworks\">Frameworks Web para o Servidor de Aplicação</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Website_security\">Segurança de sites</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Framework Web Django (Python)</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django\">Visão geral do Framework Web Django (Python)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Introduction\">Introdução</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/development_environment\">Configurando um ambiente de desenvolvimento para aplicações Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial: Um site para a Biblioteca Local</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Parte 2: Criando o esqueleto de um site</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Models\">Tutorial Parte 3: Usando \"models\"</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Admin_site\">Tutorial Parte 4: Um site administrativo em Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Home_page\">Tutorial Parte 5: Criando nossa página inicial</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Generic_views\">Tutorial Parte 6: Páginas de lista genérica e detalhamento</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Sessions\">Tutorial Parte 7: Framework de sessões</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Authentication\">Tutorial Parte 8: Autenticação e permissões de usuário</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Forms\">Tutorial Part 9: Trabalhando com formulários</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Testing\">Tutorial Parte 10: Testando aplicações web em Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Deployment\">Tutorial Parte 11: Implantando Django em produção</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/web_application_security\">Segurança de Aplicações Web</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/django_assessment_blog\">Avaliação: Faça você mesmo: Um blog pessoal</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Framework Web Express (Node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs\">Visão geral do Framework Web Express (Node.js/JavaScript)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Introduction\">Introdução a Express/Node</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/development_environment\">Configurando um ambiente de desenvolvimento Node (Express)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Tutorial Rápido: Um site para a Biblioteca Local</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Tutorial Rápido Parte 2: Criando o esqueleto de um site</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/mongoose\">Tutorial Rápido Parte 3: Usando um banco de dados (com Mongoose)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/routes\">Tutorial Rápido Parte 4: Rotas e \"controllers\"</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Tutorial Rápido Parte 5: Mostrando os dados da Biblioteca</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/forms\">Tutorial Rápido Parte 6: Trabalhando com formulários</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/deployment\">Tutorial Rápido Parte 7: Implantando em produção</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Mais recursos</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Questões gerais</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/HTML/Howto\">Questões sobre HTML</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/CSS/Howto\">Questões sobre CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Howto\">Questões sobre JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Web_mechanics\">Como a Internet funciona</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Tools_and_setup\">Ferramentas e configuração</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Design_and_accessibility\">Projeto e acessibilidade</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/conflicting/Learn/JavaScript/Objects/Classes_in_JavaScript\"> Anterior </a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/Objects\"> Menu: Objects</a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\"> Próxima  </a></li>\n</ul></div>\n\n<p class=\"summary\">Protótipos são o mecanismo pelo qual objetos JavaScript herdam recursos uns dos outros. Neste artigo, explicamos como as cadeias de protótipos funcionam e observamos como a propriedade prototype pode ser usada para adicionar métodos aos construtores existentes.</p>\n\n<table class=\"learn-box standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"row\">Pré-requisitos:</th>\n   <td>Entender como funções em JavaScript funcionam, familiaridade com o básico de JavaScript (veja <a href=\"/en-US/docs/Learn/JavaScript/First_steps\">Primeiros Passos</a> e <a href=\"/en-US/docs/Learn/JavaScript/Building_blocks\">Elementos Construtivos</a>), e o básico de Orientação a Objetos em JavaScript (veja <a href=\"/pt-BR/docs/Learn/JavaScript/Objects\">Introdução a Objetos</a>).</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Objetivo:</th>\n   <td>Entender protótipos de objetos JavaScript, como a cadeia de protótipos funciona, e como adicionar novos métodos à propriedade <em>prototype.</em></td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"uma_linguagem_baseada_em_protótipos","title":"Uma linguagem baseada em protótipos?","isH3":false,"content":"<p>O JavaScript é frequentemente descrito como uma <strong>linguagem baseada em protótipos</strong> — para fornecer herança, os objetos podem ter um <strong>objeto de protótipo</strong>, que atua como um objeto de modelo do qual herda métodos e propriedades. O objeto de protótipo de um objeto também pode ter um objeto de protótipo, do qual herda métodos e propriedades, e assim por diante. Isso geralmente é chamado de <strong>cadeia de protótipos</strong> e explica por que objetos diferentes têm propriedades e métodos definidos em outros objetos disponíveis para eles.</p>\n\n<p>Bem, para ser exato, as propriedades e os métodos são definidos na propriedade <code>prototype</code> nas funções construtoras dos Objetos, não nas próprias instâncias do objeto.</p>\n\n<p>Em JavaScript, é feito um link entre a instância do objeto e seu protótipo (sua propriedade  <code>__proto__</code>, que é derivada da propriedade <code>prototype</code> no construtor), e as propriedades e os métodos são encontrados percorrendo a cadeia de protótipos.</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Note:</strong> É importante entender que há uma distinção entre o protótipo de um objeto (que está disponível por meio de <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\">Object.getPrototypeOf(obj)</a></code>, ou por meio da propriedade <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\">__proto__</a></code> ) e a propriedade <code>prototype</code> em funções construtoras. O primeiro é a propriedade em cada instância e o último é a propriedade no construtor. Ou seja, <code>Object.getPrototypeOf(new Foobar())</code> refere-se ao mesmo objeto que <code>Foobar.prototype</code>.</p>\n</div>\n\n<p>Vejamos um exemplo para tornar isso um pouco mais claro.</p>"}},{"type":"prose","value":{"id":"noções_básicas_sobre_objetos_de_protótipo","title":"Noções básicas sobre objetos de protótipo","isH3":false,"content":"<p>Aqui voltaremos ao exemplo em que terminamos de escrever nosso construtor <code>Person()</code> — carregamos o exemplo em seu navegador. Se você ainda não o conseguiu trabalhar no último artigo, use nosso exemplo  <a href=\"https://mdn.github.io/learning-area/javascript/oojs/introduction/oojs-class-further-exercises.html\" class=\"external\" rel=\" noopener\">oojs-class-further-exercises.html</a> (veja também o <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/oojs/introduction/oojs-class-further-exercises.html\" class=\"external\" rel=\" noopener\">código-fonte</a>).</p>\n\n<p>Neste exemplo, definimos uma função construtora, assim:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">first<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">,</span> interests</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// property and method definitions</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>first <span class=\"token operator\">=</span> first<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>last <span class=\"token operator\">=</span> last<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Nós criamos então uma instância de objeto como esta:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Smith'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'music'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'skiing'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Se você digitar \"<code>person1.</code>\" em seu console JavaScript, você deve ver o navegador tentar concluir automaticamente isso com os nomes de membros disponíveis neste objeto:</p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/13853/object-available-members.png\" style=\"display: block; margin: 0 auto;\" loading=\"lazy\"></p>\n\n<p>Nesta lista, você verá os membros definidos no construtor de <code>person1</code>'s constructor — <code>Person()</code> — <code>name</code>, <code>age</code>, <code>gender</code>, <code>interests</code>, <code>bio</code>, e <code>greeting</code>. No entanto, você também verá alguns outros membros — <code>watch</code>, <code>valueOf</code>, etc — estes estão definidos no objeto de protótipo do <code>Person()</code>, que é <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></code>.</p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/13891/MDN-Graphics-person-person-object-2.png\" style=\"display: block; margin: 0px auto;\" loading=\"lazy\"></p>\n\n<p>O que acontece se você chamar um método em <code>person1</code>, que é realmente definido em <code>Object</code>? Por exemplo:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person1<span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n\n<p>Este método — <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\">Object.valueOf()</a></code> é herdado por  <code>person1</code> porque seu construtor é <code>Person()</code>, e o protótipo de <code>Person()</code> é  <code>Object()</code>. <code>valueOf()</code> retorna o valor do objeto em que é chamado — experimente e veja! Nesse caso, o que acontece é:</p>\n\n<ul>\n <li>O navegador verifica inicialmente se o objeto  <code>person1</code> tem um método  <code>valueOf()</code> disponível nele, conforme definido em seu construtor, <code>Person()</code>.</li>\n <li>Se não tem, então o navegador verifica se o objeto (<code>Object()</code>) de protótipo do construtor <code>Person()</code> tem um método <code>valueOf()</code> disponível, então ele é chamado, e tudo está bem!</li>\n</ul>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Nota</strong>: Queremos reiterar que os métodos e as propriedades <strong>não </strong>são copiados de um objeto para outro na cadeia de protótipos — eles são acessados ao percorrer a cadeia como descrito acima.</p>\n</div>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p><strong>Nota</strong>: Não existe uma maneira oficial de acessar diretamente o objeto protótipo de um objeto — os \"links\" entre os itens da cadeia são definidos em uma propriedade interna, chamada de <code>[[prototype]]</code> na especificação da linguagem JavaScript (veja <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/ECMAScript\">ECMAScript <small>(en-US)</small></a>). A maioria dos navegadores modernos, no entanto, tem uma propriedade disponível neles chamada <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\">__proto__</a></code> (que é sublinhada em ambos os lados), que contém o objeto de protótipo do construtor do objeto. Por exemplo, tente <code>person1.__proto__</code> and <code>person1.__proto__.__proto__</code> para ver como a cadeia se parece no código!</p>\n\n<p>Desde ECMAScript 2015 você pode acessar o objeto protótipo de um objeto indiretamente via <code>Object.getPrototypeOf(obj)</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"a_propriedade_prototype_onde_os_membros_herdados_são_definidos","title":"A propriedade prototype: Onde os membros herdados são definidos","isH3":false,"content":"<p>Então, onde estão as propriedades e os métodos herdados definidos? Se você observar a página de referência do  <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></code>, verá, à esquerda, um grande número de propriedades e métodos — muito mais do que o número de membros herdados que vimos disponíveis no objeto <code>person1</code>. Alguns são herdados e outros não — por que isso acontece?</p>\n\n<p>Como mencionado acima, os herdados são os definidos na propriedade  <code>prototype</code> (você poderia chamá-lo de um subespaço de nomes) — ou seja, aqueles que começam com <code>Object.prototype.</code>, e não os que começam com apenas <code>Object.</code> O valor da propriedade <code>prototype</code> é um objeto, que é basicamente um bucket para armazenar propriedades e métodos que queremos que sejam herdados por objetos mais abaixo na cadeia de protótipos.</p>\n\n<p>Portanto, <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/watch\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Object.prototype.watch()</a></code>, <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\">Object.prototype.valueOf()</a></code>, etc., estão disponíveis para qualquer tipo de objeto que herda de <code>Object.prototype</code>, incluindo novas instâncias de objeto criadas a partir do construtor <code>Person()</code>.</p>\n\n<p><code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is()</a></code>, <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\">Object.keys()</a></code>, e outros membros não definidos dentro do bloco <code>prototype</code> não são herdados por instâncias de objetos ou tipos de objetos que herdam de <code>Object.prototype</code>. Eles são métodos / propriedades disponíveis apenas no próprio construtor <code>Object()</code>.</p>\n\n<div class=\"note notecard\" id=\"sect6\">\n<p><strong>Nota</strong>: Isso parece estranho — como você pode ter um método definido em um construtor, que é em si uma função? Bem, uma função também é um tipo de objeto — veja a referência do construtor <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function()</a></code> se você não acredita em nós.</p>\n</div>\n\n<ol>\n <li>Você pode conferir as propriedades de protótipo existentes para si mesmo — volte ao nosso exemplo anterior e tente inserir o seguinte no console JavaScript:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype</code></pre></div>\n </li>\n <li>A saída não mostrará muito porque não definimos nada no protótipo do nosso construtor personalizado! Por padrão, o  <code>prototype</code> de um construtor sempre começa vazio. Agora tente o seguinte:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype</code></pre></div>\n </li>\n</ol>\n\n<p>Você verá um grande número de métodos definidos na propriedade <code>prototype</code>  do  <code>Object</code>, que estão disponíveis em objetos que herdam  <code>Object</code>, como mostrado anteriormente.</p>\n\n<p>Você verá outros exemplos de herança de cadeia de protótipos em todo o JavaScript — tente procurar os métodos e propriedades definidos no protótipo dos objetos globais <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></code>, <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></code>, <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></code>, e <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></code>, por exemplo. Estes todos têm um número de membros definidos em seu protótipo, e é por isso que, por exemplo, quando você cria uma string, como esta:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myString <span class=\"token operator\">=</span> <span class=\"token string\">'This is my string.'</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p><code>myString</code> imediatamente tem vários métodos úteis disponíveis, como <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split\">split()</a></code>, <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\">indexOf()</a></code>, <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace\">replace()</a></code>, etc.</p>\n\n<div class=\"note notecard\" id=\"sect7\">\n<p><strong>Nota</strong>: Vale a pena ler nosso guia mais aprofundado sobre <a href=\"/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain#using_prototypes_in_javascript\">Como usar protótipos em JavaScript</a>, uma vez que você tenha entendido esta seção e queira saber mais. Esta seção é intencionalmente simplificada para tornar esses conceitos um pouco mais fáceis de entender quando você os conhecer pela primeira vez.</p>\n</div>\n\n<div class=\"warning notecard\" id=\"sect8\">\n<p><strong>Importante</strong>: A propriedade <code>prototype</code> é uma das partes com o nome mais confuso do JavaScript — você pode pensar que <code>this</code> aponta para o objeto de protótipo do objeto atual, mas não (esse é um objeto interno que pode ser acessado por <code>__proto__</code>, lembra?) . Em vez disso, <code>prototype</code> é uma propriedade que contém um objeto no qual você define os membros que deseja herdar.</p>\n</div>"}},{"type":"prose","value":{"id":"revisitando_create","title":"Revisitando create()","isH3":false,"content":"<p>Anteriormente mostramos como o método <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\">Object.create()</a></code> pode ser usado para criar uma nova instância de objeto.</p>\n\n<ol>\n <li>Por exemplo, tente isso no console JavaScript do seu exemplo anterior:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person2 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>person1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n <li>O que <code>create()</code> realmente faz é criar um novo objeto a partir de um objeto de protótipo especificado. Aqui, <code>person2</code> está sendo criado usando  <code>person1</code> como um objeto de protótipo. Você pode verificar isso inserindo o seguinte no console:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person2<span class=\"token punctuation\">.</span>__proto__</code></pre></div>\n </li>\n</ol>\n\n<p>Isso retornará o <font face=\"consolas, Liberation Mono, courier, monospace\"><span style=\"background-color: rgba(220, 220, 220, 0.5);\">person1</span></font>.</p>"}},{"type":"prose","value":{"id":"a_propriedade_do_construtor","title":"A propriedade do construtor","isH3":false,"content":"<p>Toda função de construtor possui uma propriedade prototype cujo valor é um objeto que contém uma propriedade <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\">constructor</a></code>. Esta propriedade construtora aponta para a função construtora original. Como você verá na próxima seção, as propriedades definidas na propriedade Person.prototype (ou, em geral, na propriedade prototype de uma função construtora, que é um objeto, conforme mencionado na seção acima) tornam-se disponíveis para todos os objetos de instância criados usando Construtor Person(). Portanto, a propriedade constructor também está disponível para os objetos person1 e person2.</p>\n\n<ol>\n <li>Por exemplo, tente estes comandos no console:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person1<span class=\"token punctuation\">.</span>constructor\nperson2<span class=\"token punctuation\">.</span>constructor</code></pre></div>\n\n  <p>Estes devem retornar o construtor <code>Person()</code>, pois contém a definição original dessas instâncias.</p>\n\n  <p>Um truque inteligente é que você pode colocar parênteses no final da propriedade do <code>constructor</code> (contendo quaisquer parâmetros necessários) para criar outra instância de objeto daquele construtor. O construtor é uma função depois de tudo, então pode ser chamado usando parênteses; você só precisa incluir a palavra-chave <code>new</code> para especificar que deseja usar a função como um construtor.</p>\n </li>\n <li>Tente isso no console:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">person1<span class=\"token punctuation\">.</span>constructor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Karen'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Stephenson'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'playing drums'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mountain climbing'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n <li>Agora tente acessar os recursos do seu novo objeto, por exemplo:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person3<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first\nperson3<span class=\"token punctuation\">.</span>age\nperson3<span class=\"token punctuation\">.</span><span class=\"token function\">bio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n </li>\n</ol>\n\n<p>Isso funciona bem. Você não precisará usá-lo com frequência, mas pode ser realmente útil quando você deseja criar uma nova instância e não tem uma referência ao construtor original facilmente disponível por algum motivo.</p>\n\n<p>A propriedade do <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\">constructor</a></code> tem outros usos. Por exemplo, se você tiver uma instância de objeto e desejar retornar o nome do construtor do qual ela é uma instância, use o seguinte:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>instanceName<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">.</span>name</code></pre></div>\n\n<p>Tente isso, por exemplo:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person1<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">.</span>name\n</code></pre></div>\n\n<div class=\"note notecard\" id=\"sect9\">\n<p><strong>Nota</strong>: O valor de  <code>constructor.name</code> pode mudar (devido à herança prototípica, ligação, pré-processadores, transpilers, etc.), portanto, para exemplos mais complexos, você desejará usar o operador <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></code>. </p>\n</div>\n\n<ol>\n</ol>"}},{"type":"prose","value":{"id":"modificando_protótipos","title":"Modificando Protótipos","isH3":false,"content":"<p>Vamos dar uma olhada em um exemplo de modificação da propriedade <code>prototype</code> de uma função construtora — os métodos adicionados ao protótipo estão então disponíveis em todas as instâncias de objeto criadas a partir do construtor. Neste ponto, finalmente adicionaremos algo ao protótipo do nosso construtor <code>Person()</code>.</p>\n\n<ol>\n <li>Volte para o nosso exemplo de <a href=\"https://mdn.github.io/learning-area/javascript/oojs/introduction/oojs-class-further-exercises.html\" class=\"external\" rel=\" noopener\">oojs-class-further-exercises.html</a> e faça uma cópia local do <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/oojs/introduction/oojs-class-further-exercises.html\" class=\"external\" rel=\" noopener\">código-fonte</a>. Abaixo do JavaScript existente, adicione o seguinte código, que adiciona um novo método à propriedade <code>prototype</code> do construtor:\n\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">farewell</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first <span class=\"token operator\">+</span> <span class=\"token string\">' has left the building. Bye for now!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n <li>Salve o código e carregue a página no navegador e tente inserir o seguinte na entrada de texto:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person1<span class=\"token punctuation\">.</span><span class=\"token function\">farewell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n</ol>\n\n<p>Você deve receber uma mensagem de alerta, mostrando o nome da pessoa, conforme definido dentro do construtor. Isso é realmente útil, mas o que é ainda mais útil é que toda a cadeia de herança foi atualizada dinamicamente, disponibilizando automaticamente esse novo método em todas as instâncias de objeto derivadas do construtor.</p>\n\n<p>Pense nisso por um momento. Em nosso código, definimos o construtor, então criamos um objeto de instância a partir do construtor, então adicionamos um novo método ao protótipo do construtor:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">first<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">,</span> interests</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// property and method definitions</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Tammi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Smith'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'neutral'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'music'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'skiing'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'kickboxing'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">farewell</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first <span class=\"token operator\">+</span> <span class=\"token string\">' has left the building. Bye for now!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Mas o método  <code>farewell()</code> ainda está disponível na instância do objeto  <code>person1</code> — seus membros foram atualizados automaticamente para incluir o método <code>farewell()</code>.</p>\n\n<div class=\"note notecard\" id=\"sect10\">\n<p><strong>Note</strong>: Se você está tendo problemas para fazer este exemplo funcionar, dê uma olhada no nosso exemplo <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/oojs/advanced/oojs-class-prototype.html\" class=\"external\" rel=\" noopener\">oojs-class-prototype.html</a> (veja também <a href=\"https://mdn.github.io/learning-area/javascript/oojs/advanced/oojs-class-prototype.html\" class=\"external\" rel=\" noopener\">running live</a>).</p>\n</div>\n\n<p>Você raramente verá propriedades definidas na propriedade <code>prototype</code>, porque elas não são muito flexíveis quando definidas dessa forma. Por exemplo, você poderia adicionar uma propriedade assim:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>fullName <span class=\"token operator\">=</span> <span class=\"token string\">'Bob Smith'</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Isso não é muito flexível, pois a pessoa pode não ser chamada assim. Seria muito melhor construir o <code>fullName</code> fora do <code>name.first</code> e <code>name.last</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>fullName <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>last<span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>No entanto, isso não funciona, pois  <code>this</code> fará referência ao escopo global nesse caso, não ao escopo da função. Chamar essa propriedade retornaria <code>undefined undefined</code>. Isso funcionou bem no método que definimos anteriormente no protótipo porque ele está dentro um escopo de função, que será transferido com sucesso para o escopo da instância do objeto, portanto, você pode definir propriedades constantes no protótipo (ou seja, aquelas que nunca precisam ser alteradas), mas geralmente funciona melhor definir propriedades dentro do construtor.</p>\n\n<p>Na verdade, um padrão bastante comum para mais definições de objetos é definir as propriedades dentro do construtor e os métodos no protótipo. Isso torna o código mais fácil de ler, pois o construtor contém apenas as definições de propriedade e os métodos são divididos em blocos separados. Por exemplo:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Constructor with property definitions</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Test</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// property definitions</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// First method definition</span>\n\n<span class=\"token class-name\">Test</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">x</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Second method definition</span>\n\n<span class=\"token class-name\">Test</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">y</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// etc.</span></code></pre></div>\n\n<p>Esse padrão pode ser visto em ação no exemplo de <a href=\"https://github.com/zalun/school-plan-app/blob/master/stage9/js/index.js\" class=\"external\" rel=\" noopener\">aplicativo de plano escolar</a> de Piotr Zalewa.</p>"}},{"type":"prose","value":{"id":"sumário","title":"Sumário","isH3":false,"content":"<p>Este artigo abrangeu protótipos de objetos JavaScript, incluindo como cadeias de objetos de protótipos permitem que objetos herdem recursos uns dos outros, a propriedade prototype e como ela pode ser usada para adicionar métodos a construtores e outros tópicos relacionados.</p>\n\n<p>No próximo artigo, veremos como você pode implementar a herança de funcionalidade entre dois dos seus próprios objetos personalizados.</p>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/conflicting/Learn/JavaScript/Objects/Classes_in_JavaScript\"> Anterior </a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/Objects\"> Menu: Objects</a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\"> Próxima  </a></li>\n</ul><p></p>"}},{"type":"prose","value":{"id":"neste_módulo","title":"Neste módulo","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Basics\">Object basics</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Object-oriented JavaScript for beginners</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_prototypes\">Object prototypes</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Inheritance in JavaScript</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/JSON\">Working with JSON data</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_building_practice\">Object building practice</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Adding features to our bouncing balls demo</a></li>\n</ul>"}}],"toc":[{"text":"Uma linguagem baseada em protótipos?","id":"uma_linguagem_baseada_em_protótipos"},{"text":"Noções básicas sobre objetos de protótipo","id":"noções_básicas_sobre_objetos_de_protótipo"},{"text":"A propriedade prototype: Onde os membros herdados são definidos","id":"a_propriedade_prototype_onde_os_membros_herdados_são_definidos"},{"text":"Revisitando create()","id":"revisitando_create"},{"text":"A propriedade do construtor","id":"a_propriedade_do_construtor"},{"text":"Modificando Protótipos","id":"modificando_protótipos"},{"text":"Sumário","id":"sumário"},{"text":"Neste módulo","id":"neste_módulo"}],"summary":"Protótipos são o mecanismo pelo qual objetos JavaScript herdam recursos uns dos outros. Neste artigo, explicamos como as cadeias de protótipos funcionam e observamos como a propriedade prototype pode ser usada para adicionar métodos aos construtores existentes.","popularity":0.001,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Object prototypes","locale":"en-US","native":"English (US)"},{"title":"Prototipos de objetos","locale":"es","native":"Español"},{"title":"Prototypes Objet","locale":"fr","native":"Français"},{"title":"Object のプロトタイプ","locale":"ja","native":"日本語"},{"title":"Object prototypes","locale":"ko","native":"한국어"},{"title":"Прототипы объектов","locale":"ru","native":"Русский"},{"title":"对象原型","locale":"zh-CN","native":"中文 (简体)"},{"title":"物件原型","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"pt-br/learn/javascript/objects/object_prototypes","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/learn/javascript/objects/object_prototypes/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/pt-BR/docs/Learn","title":"Aprendendo desenvolvimento web"},{"uri":"/pt-BR/docs/Learn/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Learn/JavaScript/Objects","title":"Introdução a objetos em Javascript"},{"uri":"/pt-BR/docs/Learn/JavaScript/Objects/Object_prototypes","title":"Protótipos de objetos"}],"pageTitle":"Protótipos de objetos - Aprendendo desenvolvimento web | MDN","noIndexing":false}}