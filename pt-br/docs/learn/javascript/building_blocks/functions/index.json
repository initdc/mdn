{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Funções — blocos reutilizáveis de código","mdn_url":"/pt-BR/docs/Learn/JavaScript/Building_blocks/Functions","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web\"><strong>Completos iniciantes, comecem por aqui!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Iniciando na Internet</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web\">Visão geral sobre Iniciando na Internet</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Instalação dos softwares básicos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">Como será seu site?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Lidando com arquivos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/HTML_basics\">O básico de HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/CSS_basics\">O básico de CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">O básico de JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Publicando seu site</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Como a Internet funciona</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/HTML\"><strong>HTML — Estruturando a Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introdução ao HTML</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML\">Visão geral da Introdução ao HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Iniciando em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">O que está no \"head\"? Metadados em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">Fundamentos de Textos HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Criando hiperlinks</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Formatação avançada de textos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Estrutura de Documentos e Sites</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Depurando HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Avaliação: Marcando uma carta</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Avaliação: Estruturação de uma página de conteúdo</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Multimídia e incorporação</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding\">Visão geral sobre Multimídia e incorporação</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Imagens em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Conteúdos em Vídeo e áudio</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">De objeto a iframe — outras tecnologias de incorporação</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adicionando vetores gráficos na Web</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Imagens responsivas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Avaliação: Página de abertura da Mozilla</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Tabelas HTML</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables\">Visão geral sobre tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Basics\">O básico sobre Tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Advanced\">Funcionalidades avançadas e acessibilidade de Tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Structuring_planet_data\">Avaliação: Estruturação dos dados do planenta</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/CSS\"><strong>CSS — Estilizando a Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS - primeiros passos</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps\">Visão geral das primeiras etapas com CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/What_is_CSS\">O que é CSS?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/Getting_started\">Iniciando com CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/How_CSS_is_structured\">como CSS é estruturado</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/How_CSS_works\">Como CSS funciona</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Usando seu novo Conhecimento</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Selectors\">seletores CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Tratamento de diferentes direções de texto</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Values_and_units\">Valores e unidades</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Dimensionando itens em CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Styling_tables\">Estilização de tabelas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Organizing\">Organize seu CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Estilização de textos</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text\">Visão geral da Estilização de textos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamentos da estilização de textos e fontes</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Styling_lists\">Estilização de listas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Styling_links\">Estilização de links</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Web_fonts\">Fontes Web</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Avaliação: Tipografia para a página inicial da escola pública local</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Esquemas CSS</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout\">Visão geral de esquemas CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Introduction\">Introdução a esquemas CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Floats\">\"Floats\" - Flutuando elementos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Positioning\">Posicionamento</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/pt-BR/docs/Learn/JavaScript\"><strong>JavaScript — Uma linguagem de script dinâmica para aplicações cliente</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Primeiros passos com JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps\">Visão geral dos Primeiros passos com JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">O que é JavaScript?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/A_first_splash\">Um primeiro olhar em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_went_wrong\">O que deu errado? Solução de problemas de JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Variables\">Guardando a informação que precisa — Variáveis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Math\">Básico de JavaScript — Números e operadores</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Strings\">Lidando com textos — Strings em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Métodos de String úteis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Arrays\">\"Arrays\" — Arranjos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Avaliação: Gerador de estórias bobas</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>Programando em JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks\">Visão geral de Programando em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/conditionals\">Tomando decisões no seu código — Condicionais</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Looping_code\">Código de repetição</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Functions\">Funções — Blocos de códigos reutilizáveis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Construa sua própria função</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Return_values\">Retorno de valores em funções</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Events\">Introdução a eventos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Avaliação: Galeria de imagens</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introdução Objetos em JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects\">Visão geral de Objetos em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Basics\">O básico de Objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object_prototypes\">\"Prototypes\" de objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/JSON\">Trabalhando com dados em JSON</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object_building_practice\">Prática de construção de objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Avaliação: Adicionando funcionalidades ao nosso aplicativo Bolas Saltitantes</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>APIs Web na aplicação Cliente</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs\">APIs Web na aplicação Cliente</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introdução a APIs Web</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulando documentos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Pegando dados do servidor</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">APIs de Terceiros</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Desenhando gráficos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">APIs de Vídeo e Áudio</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Armazenamento na aplicação cliente</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Accessibility\"><strong>Acessibilidade — Faça a Internet usável por qualquer pessoa</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Guias de acessibilidade</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility\">Visão geral sobre Acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/What_is_accessibility\">O que é acessibilidade?</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/HTML\">HTML: Uma boa base para acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/CSS_and_JavaScript\">Melhores práticas para acessibilidade em CSS e JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/WAI-ARIA_basics\">O básico de WAI-ARIA</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/Multimedia\">Multimídia acessível</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/Mobile\">Acessibilidade em dispositivos móveis</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Avaliando a acessibilidade</summary>\n        <ol>\n            <li><a href=\"/pt-BR/docs/Learn/Accessibility/Accessibility_troubleshooting\">Avaliação: Solução de problemas de Acessibilidade</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing\"><strong>Ferramentas e teste</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Testes entre navegadores</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing\">Visão geral de testes entre navegadores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introdução a testes entre navegadores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Estratégias para execução de testes</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Lidando com problemas comuns de HTML e CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Lidando com problemas comuns de JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Lidando com problemas comuns de acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementando detecção de funcionalidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introdução a testes automatizados</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Configurando seu próprio ambiente de testes automatizados</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/Server-side\"><strong>Programação de servidores de Aplicação</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Primeiros passos</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps\">Visão geral para os primeiros passos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Introduction\">Introdução ao Servidor de Aplicação</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Client-Server_overview\">Visão geral da arquitetura Cliente-Servidor</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Web_frameworks\">Frameworks Web para o Servidor de Aplicação</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Website_security\">Segurança de sites</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Framework Web Django (Python)</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django\">Visão geral do Framework Web Django (Python)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Introduction\">Introdução</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/development_environment\">Configurando um ambiente de desenvolvimento para aplicações Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial: Um site para a Biblioteca Local</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Parte 2: Criando o esqueleto de um site</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Models\">Tutorial Parte 3: Usando \"models\"</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Admin_site\">Tutorial Parte 4: Um site administrativo em Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Home_page\">Tutorial Parte 5: Criando nossa página inicial</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Generic_views\">Tutorial Parte 6: Páginas de lista genérica e detalhamento</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Sessions\">Tutorial Parte 7: Framework de sessões</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Authentication\">Tutorial Parte 8: Autenticação e permissões de usuário</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Forms\">Tutorial Part 9: Trabalhando com formulários</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Testing\">Tutorial Parte 10: Testando aplicações web em Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Deployment\">Tutorial Parte 11: Implantando Django em produção</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/web_application_security\">Segurança de Aplicações Web</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/django_assessment_blog\">Avaliação: Faça você mesmo: Um blog pessoal</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Framework Web Express (Node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs\">Visão geral do Framework Web Express (Node.js/JavaScript)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Introduction\">Introdução a Express/Node</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/development_environment\">Configurando um ambiente de desenvolvimento Node (Express)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Tutorial Rápido: Um site para a Biblioteca Local</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Tutorial Rápido Parte 2: Criando o esqueleto de um site</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/mongoose\">Tutorial Rápido Parte 3: Usando um banco de dados (com Mongoose)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/routes\">Tutorial Rápido Parte 4: Rotas e \"controllers\"</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Tutorial Rápido Parte 5: Mostrando os dados da Biblioteca</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/forms\">Tutorial Rápido Parte 6: Trabalhando com formulários</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/deployment\">Tutorial Rápido Parte 7: Implantando em produção</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Mais recursos</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Questões gerais</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/HTML/Howto\">Questões sobre HTML</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/CSS/Howto\">Questões sobre CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Howto\">Questões sobre JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Web_mechanics\">Como a Internet funciona</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Tools_and_setup\">Ferramentas e configuração</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Design_and_accessibility\">Projeto e acessibilidade</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Looping_code\"> Anterior </a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks\"> Menu: Building blocks</a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\"> Próxima  </a></li>\n</ul></div>\n\n<p>Outro conceito essencial em código é função, que permitem que você armazene um pedaço de código que realiza uma simples tarefa dentro de um bloco, e então chama aquele código sempre que você precisar usá-lo com um curto comando — em vez de ter que escrever o mesmo código multiplas vezes. Neste artigo nós vamos explorar conceitos fundamentais por trás  das funções como sintaxe básica, como invocá-las e defini-las, escopo, e parâmetros.</p>\n\n<table class=\"learn-box standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"row\">Prerequisitos:</th>\n   <td>Infrmática básica, um entendimento básico de HTML e CSS, <a href=\"/en-US/docs/Learn/JavaScript/First_steps\">Primeiros passos em JavaScript</a>.</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Objetivo:</th>\n   <td>Entender conceitos fundamentais por trás das funções em JavaScript.</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"onde_eu_encontro_funções","title":"Onde eu encontro funções?","isH3":false,"content":"<p>Em JavaScript, você encontrará funções em todos os lugares, de fato, nós vamos usar funções ao longo de todo o curso; nós só não falaremos sobre elas em damasia. Agora está na hora, contudo, para falarmos sobre funções explicitamente, e realmente explorar sua sintaxe.</p>\n\n<div id=\"sect3\">Praticamente sempre que você faz uso de um uma estrutura JavaScript em que tem um par de parenteses — <code>()</code> — e você <strong>não</strong> está usando uma estrutura  embutida da linguagem como um <a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code#the_standard_for_loop\">for loop</a>, <a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code#while_and_do_..._while\">while or do...while loop</a>, ou <a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/conditionals#if_..._else_statements\">if...else statement</a>, você está fazendo uso de uma função.</div>"}},{"type":"prose","value":{"id":"funções_embutidas_do_navegador","title":"Funções embutidas do navegador","isH3":false,"content":"<p>Nós fizemos bastante uso de funções embutidas do navegador neste curso. Toda vez que manipulamos uma string de texto, por exemplo:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myText <span class=\"token operator\">=</span> <span class=\"token string\">'I am a string'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> newString <span class=\"token operator\">=</span> myText<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sausage'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// the replace() string function takes a string,</span>\n<span class=\"token comment\">// replaces one substring with another, and returns</span>\n<span class=\"token comment\">// a new string with the replacement made</span></code></pre></div>\n\n<p>Ou toda vez que manipulamos uma lista:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'love'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'chocolate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'frogs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> madeAString <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>madeAString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// the join() function takes an array, joins</span>\n<span class=\"token comment\">// all the array items together into a single</span>\n<span class=\"token comment\">// string, and returns this new string</span></code></pre></div>\n\n<p>Ou toda vez que nós geramos um número aleatório:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myNumber <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// the random() function generates a random</span>\n<span class=\"token comment\">// number between 0 and 1, and returns that</span>\n<span class=\"token comment\">// number</span></code></pre></div>\n\n<p>...nós usamos uma função!</p>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Nota</strong>: Fique a vontade para inserir essas linhas no console JavaScript do navegador para refamiliarizar-se com suas funcionalidades, se necessário.</p>\n</div>\n\n<p>A linguagem JavaScript tem muitas funções embutidas que o permitem fazer coisas úteis sem que você mesmo tenha que escrever aquele código. De fato, alguns dos códigos que você está chamando quando você <strong>invoca</strong> (uma palavra rebuscada para rodar, ou executar) uma função embutida de navegador não poderia ser escrita em JavaScript — muitas dessa funções são chamadas a partes de código base do navegador, que é escrita grandemente em linguages de sistema de baixo nível como C++, não linguagem Web como JavaScript.</p>\n\n<p>Tenha em mente que algumas funções embutidas de navegador não são parte do core da linguagem JavaScript — algumas são definidas como partes de APIs do navegador, que são construídas no topo da linguagem padão para prover ainda mais funcionalidades (recorra a <a href=\"/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript#so_what_can_it_really_do\">esta seção inicial de nosso curso</a> para mais descrições). Nós olharemos o uso de APIs de navegador em mais detalhes em um módulo posterior.</p>"}},{"type":"prose","value":{"id":"funções_versus_métodos","title":"Funções versus métodos","isH3":false,"content":"<p>Uma coisas que devemos esclarecer antes de seguir em frente — tecnicamente falando, funções embutidas de navegador não são funções — elas são <strong>métodos</strong>. Isso pode soar um pouco assustador e confuso, mas não se preocupe — as palavras funções e métodos são largamente intercambeáveis, ao menos para nossos propósitos, neste estágio de nosso aprendizado.</p>\n\n<p>A distinção é que métodos são funções definidas dentro de objetos. Funções embutidas de navegador (métodos) e variáveis (que são chamadas <strong>propriedades</strong>) são armazenadas dentro de objetos estruturados, para tornar o código mais estruturado e fácil de manipular.</p>\n\n<p>Você não precisa aprender sobre o funcionamento interno de objetos estruturados em JavaScript ainda — você pode esperar nosso módulo posterior que ensinará tudo sobre funcionamento interno de objetos, e como criar o seu próprio. Por hora, nós só queremos esclarecer qualquer confusão possível de método versus função — é provável que você encontre ambos termos enquanto você olhar os recursos disponível pela  Web.</p>"}},{"type":"prose","value":{"id":"funções_personalizadas","title":"Funções personalizadas","isH3":false,"content":"<p>Nós vimos também várias funções personalizadas no curso até agora — funções definidas em seu código, não dentro do navegador. Sempre que você viu um nome personalizado com parênteses logo após ele, você estava usando funções personalizadas. em nosso exemplo <a href=\"https://mdn.github.io/learning-area/javascript/building-blocks/loops/random-canvas-circles.html\" class=\"external\" rel=\" noopener\">random-canvas-circles.html</a> (veja também o <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/building-blocks/loops/random-canvas-circles.html\" class=\"external\" rel=\" noopener\">código fonte</a> completo) de nosso <a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code\">loops article</a>, nós incluimos a função personalizada <code>draw()</code> que era semelhante a essa:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">,</span><span class=\"token constant\">HEIGHT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgba(255,0,0,0.5)'</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HEIGHT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Esta função desenha 100 círculos aleatórios dentro de um elemento <a href=\"/pt-BR/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a>. Toda vez que queremos fazer isso, nós podemos simplesmente invocar a função com isto</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>ao invés de ter que escrever todo o código novamente todas as vezes que queremos repetí-lo. E funções podem conter qualquer código que você gosta — você pode até chamar outra função dentro das funções. A função acima por exemplo chama a função <code>random()</code> três vezes, o qual é definido pelo seguinte código:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Nós precisamos desta função porque a função embutida do navegador<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\">Math.random()</a> só gera números decimais aleatórios entre 0 e 1. Nós queriamos um número aleatório inteiro entre 0 e um número especificado.</p>"}},{"type":"prose","value":{"id":"invocando_funções","title":"Invocando funções","isH3":false,"content":"<p>Provavelmente você já tem conhecimento sobre iso agora, mas... para realmente usar uma função depois dela ter sido definida, você tem que rodá-la — ou invocá-la. Isso é feito ao se incluir o nome da função em algum lugar do código, seguido por parênteses.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Chama a função um vez</span></code></pre></div>"}},{"type":"prose","value":{"id":"funções_anônimas","title":"Funções anônimas","isH3":false,"content":"<p>Você viu funções definidas e invocadas de maneiras ligeiramente diferentes. Até agora nós só criamos funções como esta:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Mas você também pode criar funções que não tem nome:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Isto é chamado<strong> Função anônima</strong> — não tem nome! E também não fará nada em si mesma. Você geralmente cria funções anônimas junto com um  manipulador de eventos, o exemplo a seguir poderia rodar o código dentro da função sempre que o botão associado é clicado:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyButton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>O exemplo acima requer que exista um elemento <a href=\"/pt-BR/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> diponível na página para selecionar e clicar. Você já viu essa estrutura algumas vezes ao longo do curso, e aprenderá mais a respeito disso e o verá no próximo artigo.</p>\n\n<p>Voce também pode atribuir uma função anônima para ser o valor de uma variável, por exemplo:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">myGreeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Esta função agora poder ser invocada usando:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">myGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Isso dá efetivamente um nome a função; você também pode atribuir uma função para ser o valor de múltiplas variáveis , por exemplo:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">anotherGreeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Esta função agora pode ser invocada usando qualquer das funções abaixo</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">myGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">anotherGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Mas isso pode simplesmente ser confuso, então não faça! Quando criar funções, é melhor ficar com apenas uma forma:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>De modo geral você irá usar funções anônimas só para rodar um código em resposta a um disparo de evento — como um botão ao ser clicado — usando um gerenciador de eventos. Novamente, Isso é algo parecido com:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myButton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Eu posso colocar código aqui</span>\n  <span class=\"token comment\">// dentro o quanto eu quiser</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},{"type":"prose","value":{"id":"parâmetro_de_funções","title":"Parâmetro de funções","isH3":false,"content":"<p>Algumas funções requerem <strong>parâmetros</strong> a ser especificado quando você está invocando-os — esses são valores que precisam ser inclusos dentro dos parênteses da função, o que é necessário para fazer seu trabalho apropriado.</p>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p><strong>Nota</strong>: Parâmetros algumas vezes são chamados de argumentos, propriedades, ou até atributos.</p>\n</div>\n\n<p>Como um exemplo, a função embutida de navegador <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\">Math.random()</a> não requer nenhum parâmetro. Quando chamada, ela sempre retorna um número aleatório entre 0 e 1:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myNumber <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>A função embutida de navegador <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace\">replace()</a>  entretanto precisa de dois parâmetros — a substring para encotrar a string principal, e a substring para ser substituida com ela:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myText <span class=\"token operator\">=</span> <span class=\"token string\">'I am a string'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> newString <span class=\"token operator\">=</span> myText<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sausage'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<div class=\"note notecard\" id=\"sect6\">\n<p><strong>Nota</strong>: Quando você precisa especificar multiplos parâmetros, eles são separados por vígulas.</p>\n</div>\n\n<p>Nota-se também que algumas vezes os parâmetros são opcionais — você não tem que especificá-los. Se você não o faz, a função geralmente adota algum tipo de comportamento padrão. Como exemplo, a função <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join\">join()</a> tem parâmetro opcional:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'love'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'chocolate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'frogs'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> madeAString <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns 'I love chocolate frogs'</span>\n<span class=\"token keyword\">var</span> madeAString <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// returns 'I,love,chocolate,frogs'</span></code></pre></div>\n\n<p>Se nenhum parâmetro é incluído para especificar a combinação/delimitação de caractere, uma vírgula é usada por padrão.</p>"}},{"type":"prose","value":{"id":"função_escopo_e_conflitos","title":"Função escopo e conflitos","isH3":false,"content":"<p>vamos falar um pouco sobre <a href=\"/pt-BR/docs/Glossary/Scope\">scope</a> — um conceito muito importante quando lidamos com funções. Quando você cria uma função, as variáveis e outras coisas definidas dentro da função ficam dentro de seu próprio e separado <strong>escopo</strong>, significando que eles estão trancados a parte em seu próprio compartimento, inacesível de dentro de outras funções ou de código fora das funções.</p>\n\n<p>O mais alto nível fora de todas suas funções é chamado de <strong>escopo global</strong>. Valores definidos no escopo global são acessíveis em todo lugar do código.</p>\n\n<p>JavaScript é configurado assim por várias razões — mas principalmente por segurança e organização. Algumas vezes você não quer que variáveis sejam acessadas de todo lugar no código — scripts externos que você chama de algum outro lugar podem iniciar uma bagunça no seu código e causar problemas porque eles estão usando os mesmos nomes de variáveis que em outras partes do código, provocando conflitos. Isso pode ser feito maliciosamente, ou só por acidente.</p>\n\n<p>Por exemplo, digamos que você tem um arquivo HTML que está chamando dois arquivos JavaScript externos, e ambos tem uma variável e uma função definidos que usam o mesmo nome:</p>\n\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!-- Excerpt from my HTML --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>first.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>second.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span></code></pre></div>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// first.js</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Chris'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Olá '</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">': bem-vindo a nossa compania.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// second.js</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Zaptec'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Nossa compania é chamada '</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Ambas as funções que você quer chamar são chamadas <code>greeting()</code>, mas você só pode acessar o arquivo <code>second.js</code> da função <code>greeting()</code>  — Ele é aplicado no HTML depois no código fonte, então suas variáveis e funções sobrescrevem as de <code>first.js</code>.</p>\n\n<div class=\"note notecard\" id=\"sect7\">\n<p><strong>Nota</strong>: Você pode ver este exemplo <a href=\"https://mdn.github.io/learning-area/javascript/building-blocks/functions/conflict.html\" class=\"external\" rel=\" noopener\">rodando no GitHub</a> (veja também <a href=\"https://github.com/mdn/learning-area/tree/master/javascript/building-blocks/functions\" class=\"external\" rel=\" noopener\">o código fonte</a>).</p>\n</div>\n\n<p>Manter parte de seus código trancada em funções evita tais problemas, e é considerado boa prática.</p>\n\n<p>Parece um pouco com um zoológico. Os leões, zebras, tigres, e pinguins são mantidos em seus próprios cercados, e só tem acesso as coisas dentro de seu cercado — da mesma maneira que escopos de função. Se eles forem capazes de entrar em outros cercados, problemas podem acontecer. No melhor caso, diferentes animais poderiam sentir-se ralmente desconfortáveis dentro de habitats não familiares — um leão e um tigre poderiam sentir-se muito mal dentro de um úmido e gelado terreno. No pior caso, os leões e tigres poderiam tentar comer os pinguins!</p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/14079/MDN-mozilla-zoo.png\" style=\"display: block; margin: 0 auto;\" loading=\"lazy\"></p>\n\n<p>O zelador do zoológico é como o escopo global — ele ou ela tem as chaves para acessar cada cercado, reabastecer comida, tratar animais doentes, etc.</p>"}},{"type":"prose","value":{"id":"aprendizado_ativo_brincando_com_o_escopo","title":"Aprendizado ativo: Brincando com o escopo","isH3":true,"content":"<p>Vamos observar um exemplo real para mostrar escopo.</p>\n\n<ol>\n <li>Primeiro, faça uma cópia local de nosso exmplo <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/building-blocks/functions/function-scope.html\" class=\"external\" rel=\" noopener\">function-scope.html</a>. Isto contém duas funções chamadas <code>a()</code> e <code>b()</code>, e três variáveis — <code>x</code>, <code>y</code>, e <code>z</code> — duas das quais estão definidas dentro de funções, e uma no escopo global. Ele também contém uma terceira função chamada <code>output()</code>, que leva um simples parâmetro e mostra-o em um parágrafo na página.</li>\n <li>Abra o exemplo em um navegador e em um editor de textos.</li>\n <li>Abra o console JavaScript no developer tools de seu navegador. No console  JavaScript, digite o seguinte comando:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">output</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n  Você deve ver o valor da variável <code>x</code> exibida na página.</li>\n <li>Agora tente digitar o seguinte no seu console:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">output</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">output</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n  Ambos dever retornar um erro com as seguintes linhas \"<a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: y is not defined</a>\". Por que isso? Porque o escopo da função — <code>y</code> e <code>z</code> estão trancadas dentro das funções <code>a()</code> e  <code>b()</code>, então <code>output()</code> não pode acessá-las quando chamadas do escopo global.</li>\n <li>Contudo, que tal chamá-las de dentro de outra função? Tente editar <code>a()</code> e <code>b()</code> para que fiquem desta forma:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n  Salve o código e atualize o navegador, então tente chamar as funções <code>a()</code> e <code>b()</code> do console JavaScript:\n\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n  Você verá os valores de <code>y</code> e <code>z</code> mostrados na página. Isso funciona bem, desde que a função <code>output()</code> está sendo chamada dentro de outra função — no mesmo escopo que as variáveis que estam imprimindo são definidas, em cada caso. <code>output()</code> em si é acessível de qualquer lugar, como é definido no escopo global.</li>\n <li>Agora tente atualizar seu código como este:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n  Salve e atualize novamente, e tente isso novamente em seu console JavaScript:         </li>\n <li>\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n  Ambas chamadas de <code>a()</code> e <code>b()</code> devem mostrar o valor de x — 1. Isso dá certo porque até mesmo a chamada de  <code>output()</code> não está no mesmo escopo em que <code>x</code> é definido, <code>x</code> é uma variável global então é disponível dentro de todo código, em toda parte.</li>\n <li>Finalmente, tente atualizar o código o seguinte:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n  Salve e atualize novamente, e tente isso novamente em seu console JavaScript: </li>\n <li>\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n  Desta vez as chamadas de <code>a()</code> e <code>b()</code> retornaram o irritante erro \"<a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: z is not defined</a>\" — isto porque a chamada de <code>output()</code> e as variáveis que eles estão tentando imprimir não estão definidas dentro do mesmo escopo das funções — as variáveis são efetivamente invisíveis aquelas chamadas de função.</li>\n</ol>\n\n<div class=\"note notecard\" id=\"sect8\">\n<p><strong>Nota</strong>: As mesmas regras de escopo não se aplicam a laços (ex.: <code>for() { ... }</code>) e blocos condicionais (ex.: <code>if() { ... }</code>) — eles parecem muito semelhantes, mas eles não são a mesma coisa! Tome cuidado para não confudir-se.</p>\n</div>\n\n<div class=\"note notecard\" id=\"sect9\">\n<p><strong>Nota</strong>: O erro <a href=\"/en-US/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a> é um dos mais comuns que você encontrará. Se você receber este erro e tem certeza que definiu a variável em questão, cheque em que escopo ela está.</p>\n</div>\n\n<ul>\n</ul>"}},{"type":"prose","value":{"id":"funções_dentro_de_funções","title":"Funções dentro de funções","isH3":true,"content":"<p>Tenha em mente que você pode chamar uma função de qualquer lugar, até mesmo dentro de outra função.  Isso é frenquentemente usado para manter o código organizado — se você tem uma função grande e complexa, é mais fácil de entendê-la se você quebrá-la em várias subfunções:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myBigFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> myValue<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">subFunction1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">subFunction2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">subFunction3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p>Apenas certifique-se que os valores usados dentro da função estão apropriadamente no escopo. O exemplo acima deve lançar um erro <code>ReferenceError: myValue is not defined</code>, porque apesar da variável <code>myValue</code> estar definida no mesmo escopo da chamda da função, ela não está definida dentro da definição da função — o código real que está rodando quando as funções são chamadas. Para fazer isso funcionar, você deveria passar o valor dentro da função como um parâmetro, desta forma:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myBigFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> myValue <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">subFunction1</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">subFunction2</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">subFunction3</span><span class=\"token punctuation\">(</span>myValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">subFunction3</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},{"type":"prose","value":{"id":"conclusão","title":"Conclusão","isH3":false,"content":"<p>Este arquivo explorou os conceitos fundamentais por trás das funções, pavimentando o caminho para o próximo no qual nos tornamos práticos e o levamos através de passos para construir suas próprias funções personalizadas.</p>"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Functions\">Guia detalhado de funções</a> — cobre algumas características avançadas não includas aqui.</li>\n <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions\">Referências de funções</a></li>\n <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Parâmetros padrão</a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Funções de flexa</a> — referências de conceito avançado</li>\n</ul>\n\n<ul>\n</ul>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Looping_code\"> Anterior </a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks\"> Menu: Building blocks</a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\"> Próxima  </a></li>\n</ul><p></p>"}},{"type":"prose","value":{"id":"neste_módulo","title":"Neste módulo","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/conditionals\">Making decisions in your code — conditionals</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code\">Looping code</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Functions\">Functions — reusable blocks of code</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Build your own function</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Return_values\">Function return values</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li>\n <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Image gallery</a></li>\n</ul>"}}],"toc":[{"text":"Onde eu encontro funções?","id":"onde_eu_encontro_funções"},{"text":"Funções embutidas do navegador","id":"funções_embutidas_do_navegador"},{"text":"Funções versus métodos","id":"funções_versus_métodos"},{"text":"Funções personalizadas","id":"funções_personalizadas"},{"text":"Invocando funções","id":"invocando_funções"},{"text":"Funções anônimas","id":"funções_anônimas"},{"text":"Parâmetro de funções","id":"parâmetro_de_funções"},{"text":"Função escopo e conflitos","id":"função_escopo_e_conflitos"},{"text":"Conclusão","id":"conclusão"},{"text":"Veja também","id":"veja_também"},{"text":"Neste módulo","id":"neste_módulo"}],"summary":"Outro conceito essencial em código é função, que permitem que você armazene um pedaço de código que realiza uma simples tarefa dentro de um bloco, e então chama aquele código sempre que você precisar usá-lo com um curto comando — em vez de ter que escrever o mesmo código multiplas vezes. Neste artigo nós vamos explorar conceitos fundamentais por trás  das funções como sintaxe básica, como invocá-las e defini-las, escopo, e parâmetros.","popularity":0.0009,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Functions — reusable blocks of code","locale":"en-US","native":"English (US)"},{"title":"Fonctions — des blocs de code réutilisables","locale":"fr","native":"Français"},{"title":"関数 — 再利用可能なコードブロック","locale":"ja","native":"日本語"},{"title":"함수 — 코드 재사용","locale":"ko","native":"한국어"},{"title":"Функции — Переиспользуемые блоки кода","locale":"ru","native":"Русский"},{"title":"函数 - 可复用代码块","locale":"zh-CN","native":"中文 (简体)"},{"title":"函數 - 可重複使用的代碼塊","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"pt-br/learn/javascript/building_blocks/functions","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/learn/javascript/building_blocks/functions/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/pt-BR/docs/Learn","title":"Aprendendo desenvolvimento web"},{"uri":"/pt-BR/docs/Learn/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Learn/JavaScript/Building_blocks","title":"Elementos construtivos do Javascript"},{"uri":"/pt-BR/docs/Learn/JavaScript/Building_blocks/Functions","title":"Funções — blocos reutilizáveis de código"}],"pageTitle":"Funções — blocos reutilizáveis de código - Aprendendo desenvolvimento web | MDN","noIndexing":false}}