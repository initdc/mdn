{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Tutorial Django Parte 3: Usando models","mdn_url":"/pt-BR/docs/Learn/Server-side/Django/Models","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web\"><strong>Completos iniciantes, comecem por aqui!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Iniciando na Internet</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web\">Visão geral sobre Iniciando na Internet</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Instalação dos softwares básicos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">Como será seu site?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Lidando com arquivos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/HTML_basics\">O básico de HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/CSS_basics\">O básico de CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">O básico de JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Publicando seu site</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">Como a Internet funciona</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/HTML\"><strong>HTML — Estruturando a Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introdução ao HTML</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML\">Visão geral da Introdução ao HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Iniciando em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">O que está no \"head\"? Metadados em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">Fundamentos de Textos HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Criando hiperlinks</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Formatação avançada de textos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Estrutura de Documentos e Sites</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Depurando HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Avaliação: Marcando uma carta</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Avaliação: Estruturação de uma página de conteúdo</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Multimídia e incorporação</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding\">Visão geral sobre Multimídia e incorporação</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Imagens em HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Conteúdos em Vídeo e áudio</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">De objeto a iframe — outras tecnologias de incorporação</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adicionando vetores gráficos na Web</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Imagens responsivas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Avaliação: Página de abertura da Mozilla</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Tabelas HTML</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables\">Visão geral sobre tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Basics\">O básico sobre Tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Advanced\">Funcionalidades avançadas e acessibilidade de Tabelas HTML</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/HTML/Tables/Structuring_planet_data\">Avaliação: Estruturação dos dados do planenta</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/CSS\"><strong>CSS — Estilizando a Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS - primeiros passos</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps\">Visão geral das primeiras etapas com CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/What_is_CSS\">O que é CSS?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/Getting_started\">Iniciando com CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/How_CSS_is_structured\">como CSS é estruturado</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/How_CSS_works\">Como CSS funciona</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Usando seu novo Conhecimento</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Selectors\">seletores CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Tratamento de diferentes direções de texto</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Values_and_units\">Valores e unidades</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Dimensionando itens em CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Styling_tables\">Estilização de tabelas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Building_blocks/Organizing\">Organize seu CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Estilização de textos</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text\">Visão geral da Estilização de textos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamentos da estilização de textos e fontes</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Styling_lists\">Estilização de listas</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Styling_links\">Estilização de links</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Web_fonts\">Fontes Web</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Avaliação: Tipografia para a página inicial da escola pública local</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Esquemas CSS</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout\">Visão geral de esquemas CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Introduction\">Introdução a esquemas CSS</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Floats\">\"Floats\" - Flutuando elementos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Positioning\">Posicionamento</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/pt-BR/docs/Learn/JavaScript\"><strong>JavaScript — Uma linguagem de script dinâmica para aplicações cliente</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Primeiros passos com JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps\">Visão geral dos Primeiros passos com JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">O que é JavaScript?</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/A_first_splash\">Um primeiro olhar em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/What_went_wrong\">O que deu errado? Solução de problemas de JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Variables\">Guardando a informação que precisa — Variáveis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Math\">Básico de JavaScript — Números e operadores</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Strings\">Lidando com textos — Strings em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Métodos de String úteis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Arrays\">\"Arrays\" — Arranjos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Avaliação: Gerador de estórias bobas</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Programando em JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks\">Visão geral de Programando em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/conditionals\">Tomando decisões no seu código — Condicionais</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Looping_code\">Código de repetição</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Functions\">Funções — Blocos de códigos reutilizáveis</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Construa sua própria função</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Return_values\">Retorno de valores em funções</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Events\">Introdução a eventos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Avaliação: Galeria de imagens</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introdução Objetos em JavaScript</summary>\n          <ol>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects\">Visão geral de Objetos em JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Basics\">O básico de Objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object_prototypes\">\"Prototypes\" de objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/JSON\">Trabalhando com dados em JSON</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Object_building_practice\">Prática de construção de objetos</a></li>\n            <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Avaliação: Adicionando funcionalidades ao nosso aplicativo Bolas Saltitantes</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>APIs Web na aplicação Cliente</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs\">APIs Web na aplicação Cliente</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introdução a APIs Web</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulando documentos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Pegando dados do servidor</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">APIs de Terceiros</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Desenhando gráficos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">APIs de Vídeo e Áudio</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Armazenamento na aplicação cliente</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Accessibility\"><strong>Acessibilidade — Faça a Internet usável por qualquer pessoa</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Guias de acessibilidade</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility\">Visão geral sobre Acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/What_is_accessibility\">O que é acessibilidade?</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/HTML\">HTML: Uma boa base para acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/CSS_and_JavaScript\">Melhores práticas para acessibilidade em CSS e JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/WAI-ARIA_basics\">O básico de WAI-ARIA</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/Multimedia\">Multimídia acessível</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Accessibility/Mobile\">Acessibilidade em dispositivos móveis</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Avaliando a acessibilidade</summary>\n        <ol>\n            <li><a href=\"/pt-BR/docs/Learn/Accessibility/Accessibility_troubleshooting\">Avaliação: Solução de problemas de Acessibilidade</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing\"><strong>Ferramentas e teste</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Testes entre navegadores</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing\">Visão geral de testes entre navegadores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introdução a testes entre navegadores</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Estratégias para execução de testes</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Lidando com problemas comuns de HTML e CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Lidando com problemas comuns de JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Lidando com problemas comuns de acessibilidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementando detecção de funcionalidade</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introdução a testes automatizados</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Configurando seu próprio ambiente de testes automatizados</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/pt-BR/docs/Learn/Server-side\"><strong>Programação de servidores de Aplicação</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Primeiros passos</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps\">Visão geral para os primeiros passos</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Introduction\">Introdução ao Servidor de Aplicação</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Client-Server_overview\">Visão geral da arquitetura Cliente-Servidor</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Web_frameworks\">Frameworks Web para o Servidor de Aplicação</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/First_steps/Website_security\">Segurança de sites</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Framework Web Django (Python)</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django\">Visão geral do Framework Web Django (Python)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Introduction\">Introdução</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/development_environment\">Configurando um ambiente de desenvolvimento para aplicações Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial: Um site para a Biblioteca Local</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Parte 2: Criando o esqueleto de um site</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Models\">Tutorial Parte 3: Usando \"models\"</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Admin_site\">Tutorial Parte 4: Um site administrativo em Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Home_page\">Tutorial Parte 5: Criando nossa página inicial</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Generic_views\">Tutorial Parte 6: Páginas de lista genérica e detalhamento</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Sessions\">Tutorial Parte 7: Framework de sessões</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Authentication\">Tutorial Parte 8: Autenticação e permissões de usuário</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Forms\">Tutorial Part 9: Trabalhando com formulários</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Testing\">Tutorial Parte 10: Testando aplicações web em Django</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/Deployment\">Tutorial Parte 11: Implantando Django em produção</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/web_application_security\">Segurança de Aplicações Web</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Django/django_assessment_blog\">Avaliação: Faça você mesmo: Um blog pessoal</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Framework Web Express (Node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs\">Visão geral do Framework Web Express (Node.js/JavaScript)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Introduction\">Introdução a Express/Node</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/development_environment\">Configurando um ambiente de desenvolvimento Node (Express)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Tutorial Rápido: Um site para a Biblioteca Local</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Tutorial Rápido Parte 2: Criando o esqueleto de um site</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/mongoose\">Tutorial Rápido Parte 3: Usando um banco de dados (com Mongoose)</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/routes\">Tutorial Rápido Parte 4: Rotas e \"controllers\"</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Tutorial Rápido Parte 5: Mostrando os dados da Biblioteca</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/forms\">Tutorial Rápido Parte 6: Trabalhando com formulários</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Server-side/Express_Nodejs/deployment\">Tutorial Rápido Parte 7: Implantando em produção</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Mais recursos</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Questões gerais</summary>\n        <ol>\n          <li><a href=\"/pt-BR/docs/Learn/HTML/Howto\">Questões sobre HTML</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/CSS/Howto\">Questões sobre CSS</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/JavaScript/Howto\">Questões sobre JavaScript</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Web_mechanics\">Como a Internet funciona</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Tools_and_setup\">Ferramentas e configuração</a></li>\n          <li><a href=\"/pt-BR/docs/Learn/Common_questions#Design_and_accessibility\">Projeto e acessibilidade</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/Server-side/Django/skeleton_website\"> Anterior </a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/Server-side/Django\"> Menu: Django</a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/Server-side/Django/Admin_site\"> Próxima  </a></li>\n</ul></div>\n\n<p class=\"summary\">Este artigo mostra como definir os modelos para o website <a href=\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\">LocalLibrary</a>. Ele explica o que é um modelo, como ele é declarado e mostra algum dos principais tipos de campo. Ele também mostra brevemente algumas das principais formas pelas quais você pode acessar dados do modelo.</p>\n\n<table class=\"learn-box standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"row\">Pré-requisitos:</th>\n   <td><a href=\"/en-US/docs/Learn/Server-side/Django/skeleton_website\">Django Tutorial Part 2: Criar um esqueleto de um site</a>.</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Objetivo:</th>\n   <td>Ser capaz de projetar e criar seus próprios modelos, escolhendo os campos de forma apropriada.</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"visão_geral","title":"Visão Geral","isH3":false,"content":"<p>Aplicativos Django acessam e gerenciam dados através de objetos Python chamados de modelos (models). Modelos definem a <em>estrutura</em> dos dados armazenados, incluindo os tipos de campos e possivelmente também o seu tamanho máximo, valores default, opções de listas de seleção, texto de ajuda para documentação, texto de labels para formulários, etc. A definição do modelo é independente do banco de dados - você pode escolher um tipo de banco como parte das configurações do seu projeto. Uma vez que você tenha escolhido qual banco será utilizado você precisa conversar diretamente com ele - você somente escreve a estrutura do seu modelo e outros códigos, e o Django faz todo o trabalho sujo de comunicação com o banco para você.</p>\n\n<p>Este tutorial mostra como definir e acessar os modelos para o website <a href=\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\">LocalLibrary website</a>.</p>"}},{"type":"prose","value":{"id":"projetando_os_modelos_para_o_website_locallibrary","title":"Projetando os modelos para o website <a href=\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\">LocalLibrary</a>","isH3":false,"content":"<p>Antes de começarmos a criar nossos modelos, vale a pena perder alguns minutos pensando sobre os dados que iremos guardar e as relações entre os diferentes modelos que serão criados.</p>\n\n<p>Sabemos que precisamos armazenar informação sobre os livros (título, resumo, autor, idioma, gênero, ISBN) e também que existem várias cópias do mesmo livro na biblioteca (com um id único, status de disponibilidade, etc.). Talvez queiramos armazenar mais informações sobre o autor além de somente seu nome, até porque existem vários autores com o mesmo nome, ou com nomes parecidos. Queremos ordernar a busca dos livros por título, autor, idioma e gênero.</p>\n\n<p>Quando estamos projetando nossos modelos, faz sentido criar modelos separados para cada \"objeto\". Em nosso caso de estudo, os \"objetos\" são os livros (a informação de cada livro, não a cópia em si), as cópias dos livros (um livro pode ter mais de uma cópia) e os autores.</p>\n\n<p>Você pode também utilizar modelos para representar opções em uma lista de seleção (por exemplo numa lista suspensa), o que é melhor do que trabalhar com opções predefinidas — isso é recomendado quando nem todas as opções são conhecidas ou podem mudar de acordo com um filtro. Obviamente, para nosso tutorial, modelos candidatos para esse caso são o gênero e o idioma.</p>\n\n<p>Após decidirmos nossos modelos e campos, precisamos pensar no relacionamento dessas informações. Django permite que você defina relações que são um pra um (<code>OneToOneField</code>), um pra muitos (<code>ForeignKey</code>) e muitos pra muitos (<code>ManyToManyField</code>).</p>\n\n<p>Com isso em mente, os diagramas UML de associação, mostram abaixo os modelos que definiremos nesse caso (como caixas).</p>\n\n<p><img alt=\"LocalLibrary Model UML\" src=\"https://mdn.mozillademos.org/files/15646/local_library_model_uml.png\" loading=\"lazy\"></p>\n\n<p><span lang=\"pt\">Como acima, criamos modelos para <code>Book </code>(que contém os detalhes genéricos do livro),<br>\n <code>BookInstance</code> (contém os status das cópias físicas e específicas dos livros disponíveis no sistema) e <code>Author.</code> Também decidimos ter um modelo para o gênero (<code>Genre</code>), para que os valores possam ser criados/selecionados através da interface administrativa. Decidimos não ter um modelo para o <code>BookInstance: status</code> - pois, codificamos os valores em (<code>LOAN_STATUS</code>) porque não esperamos que isso mude. Dentro de cada uma das caixas você pode ver o nome do modelo, os campos nomes e tipos e também os métodos e seus tipos de retorno.</span></p>\n\n<p>O diagrama também mostra as relações entre os modelos, incluindo suas multiplicidades. As multiplicidades são os números no diagrama que mostram as quantidades (máxima e mínima) que cada modelo pode estar presente nos relacionamentos. Por exemplo, a linha que conecta as caixas mostra que <code>Book</code> e um <code>Genre</code> estão relacionados. Os números próximos ao modelo <code>Genre</code> mostram que um livro deve ter um ou mais gêneros (ou quantos você quiser), enquanto os números do outro lado da linha, ao lado do modelo <code>Book</code> mostram que um gênero pode ter zero ou muitos livros associados.</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Nota</strong>: A próxima seção fornece uma explicação básica sobre como os modelos são definidos e usados. Ao ler sobre isso, considere como vamos construir cada um dos modelos conforme o diagrama acima.</p>\n</div>","titleAsText":"Projetando os modelos para o website LocalLibrary"}},{"type":"prose","value":{"id":"model_primer","title":"Model primer","isH3":false,"content":"<p>Esta seção fornece uma breve visão sobre como um modelo é definido e alguns dos mais importantes campos e argumentos dos campos.</p>"}},{"type":"prose","value":{"id":"definição_do_modelo","title":"Definição do Modelo","isH3":true,"content":"<p>Modelos são geralmente definidos no arquivo <strong>models.py</strong> em uma aplicação. Eles são implementados como subclasse de <code>django.db.models.Model</code>, e podem incluir campos, métodos e metadados. O fragmento de código abaixo, mostra um modelo \"típico\", chamado <code>MyModelName</code>:</p>\n\n<pre class=\"notranslate\">from django.db import models\n\nclass MyModelName(models.Model):\n    \"\"\"Uma típica classe definindo um modelo, derivada da classe Model.\"\"\"\n\n    # Campos\n    my_field_name = models.CharField(max_length=20, help_text='Enter field documentation')\n    ...\n\n    # Metadados\n    class Meta:\n        ordering = ['-my_field_name']\n\n    # Métodos\n    def get_absolute_url(self):\n        \"\"\"Retorna a url para acessar uma instancia específica de MyModelName.\"\"\"\n        return reverse('model-detail-view', args=[str(self.id)])\n\n    def __str__(self):\n        \"\"\" String para representar o objeto MyModelName (no site Admin).\"\"\"\n        return self.my_field_name</pre>\n\n<p>Nas seções abaixa, exploraremos detalhadamente cada um dos recursos dentro do modelo:</p>\n\n<h4 id=\"campos_fields\">Campos (Fields)</h4>\n\n<p>Um modelo pode ter um número árbitrário de campos, de qualquer tipo -- cada um representa uma coluna de dados que queremos armazenar em uma de nossas tabelas de banco de dados. Cada registro do banco de dados (row - linha) consitirá em um valor de cada campo. Vamos ver o exemplo visto acima:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>my_field_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">CharField</span><span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> help_text<span class=\"token operator\">=</span><span class=\"token string\">'Enter field documentation'</span><span class=\"token punctuation\">)</span></code></pre></div>\n\n<div id=\"sect4\">Nosso exemplo acima tem um único campo chamado <code>my_field_name</code>, do tipo <code>models.CharField</code> - o que significa que este campo conterá strings de caracteres alfanuméricos. Os tipos de cada campo são atribuídos usando classes específicas, que determinam o tipo de registro usado para armazenar os dados no banco de dados, juntamente com os critérios de validação a serem usados ​​quando os valores são recebidos de um formulário HTML (ou seja, o que constitui um valor válido). Os tipos de cada campo também podem receber argumentos que especifiquem como o campo é armazenado ou pode ser usado. Neste caso, estamos dando ao nosso campo dois argumentos:</div>\n\n<ul>\n <li><code>max_length=20</code> — Afima que o valor máximo do comprimento desse campo é de 20 caracteres.</li>\n <li><code>help_text='Enter field documentation'</code> — fornece um rótulo de texto para exibir uma ajuda para os usuários saberem qual valor fornecer, quando esse valor é inserido por um usuário por meio de um formulário HTML.</li>\n</ul>\n\n<p>O nome do campo é usado para se referir a ele em consultas e modelos. Os campos também têm um rótulo, que é especificado como um argumento <code>(verbose_name)</code> ou inferido ao capitalizar a primeira letra do nome da variável do campo e substituindo quaisquer sublinhados por um espaço (por exemplo,<code> my_field_name</code> teria um rótulo padrão de <code>My field name</code>).</p>\n\n<p>A ordem em que os campos são declarados afetará sua ordem padrão, se um modelo for representado em um formulário (por exemplo, no site Admin), embora isso possa ser substituído.</p>\n\n<h5 id=\"argumentos_comuns_de_um_campo\">Argumentos comuns de um campo</h5>\n\n<p>Os seguintes argumentos são comuns e podem ser usados quando declaramos muitos ou a maioria dos diferentes tipos de campos:</p>\n\n<ul>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#help-text\" class=\"external\" rel=\" noopener\">help_text</a>: Fornece um rótulo de texto para formulários HTML (por exemplo, no site admin), conforme descrito acima.</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#verbose-name\" class=\"external\" rel=\" noopener\">verbose_name</a>: Um nome legível para o campo usado nos rótulos de campo. Se não for especificado, o Django irá inferir o nome detalhado do campo <code>name</code>.</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#default\" class=\"external\" rel=\" noopener\">default</a>: O valor padrão para o campo. Isso pode ser um valor ou um objeto que pode ser chamado. Cada vez que o objeto for chamado será criado um novo registro.</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#null\" class=\"external\" rel=\" noopener\">null</a>: Se for <code>True</code>, o Django armazenará valores em branco como <code>NULL</code> no banco de dados, para campos onde isso é apropriado (um <code>CharField </code>irá armazenar uma string vazia). O padrão é <code>False</code>.</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#blank\" class=\"external\" rel=\" noopener\">blank</a>:Se for <code>True</code>, o campo poderá ficar em branco nos seus formulários. O padrão é <code>False</code>, o que significa que a validação de formulário do Django forçará você a inserir um valor. Isso é frequentemente usado com <code>null = True</code>, porque se você permitir valores em branco, também desejará que o banco de dados possa representá-los adequadamente.</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#choices\" class=\"external\" rel=\" noopener\">choices</a>: Um grupo de escolhas para este campo. Se isso for fornecido, o padrão widget de formulário correspondente será uma caixa de seleção com essas opções, em vez do campo de texto padrão.</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#primary-key\" class=\"external\" rel=\" noopener\">primary_key</a>:Se <code>True,</code> define o campo atual como a chave primária do modelo (uma chave primária é uma coluna especial do banco de dados, designada para identificar exclusivamente as diferentes tabelas) . Se nenhum campo for especificado como a chave primária, o Django adicionará automaticamente um campo para essa finalidade.</li>\n</ul>\n\n<p>Existem muitas outras opções - você pode ver <a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#field-options\" class=\"external\" rel=\" noopener\">a lista completa de opções aqui</a>.</p>\n\n<h5 id=\"tipos_comuns_de_um_campo\">Tipos comuns de um campo</h5>\n\n<p>A lista a seguir descreve alguns dos tipos de campos mais usados.</p>\n\n<ul>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#django.db.models.CharField\" class=\"external\" rel=\" noopener\">CharField</a> é usado para definir um tamanho fixo (médio a curto) para a string. Você deve especificar o <code>max_length (tamanho máximo) para o dado que será armazenado.</code></li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#django.db.models.TextField\" class=\"external\" rel=\" noopener\">TextField</a> é usado para grandes strings de comprimento variado. Você pode especificar um <code>max_length</code> (tamanho máximo) para o campo, mas isso é usado somente quando o campo é exibido em formulários (forms) (ele não é imposto no nível do banco de dados).</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#django.db.models.IntegerField\" title=\"django.db.models.IntegerField\" class=\"external\" rel=\" noopener\">IntegerField</a> é um campo para armazenar números inteiros e para validar valores inseridos como números inteiros em formulários.</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#datefield\" class=\"external\" rel=\" noopener\">DateField</a> e <a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#datetimefield\" class=\"external\" rel=\" noopener\">DateTimeField</a> são usados para armazenar / representar datas e informações de data / hora (como os objetos Python <code>datetime.date</code> in e <code>datetime.datetime</code>, respectivamente). Esses campos também podem declarar os parâmetros (mutuamente exclusivos) <code>auto_now = True</code> (para definir o campo para a data atual toda vez que o modelo é salvo), <code>auto_now_add</code> (para definir a data em que o primeiro modelo foi criado) e <code>default</code> (para definir uma data padrão que pode ser substituída pelo usuário).</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#emailfield\" class=\"external\" rel=\" noopener\">EmailField</a> é usada para armazenara e validar em endereço de email.</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#filefield\" class=\"external\" rel=\" noopener\">FileField</a> e <a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#imagefield\" class=\"external\" rel=\" noopener\">ImageField</a> são usados para carregar arquivos e imagens respectivamente, (o <code>ImageField</code> simplesmente valida de forma adicional que o arquivo enviado é uma imagem). Eles têm parâmetros para definir como e onde os arquivos enviados são armazenados.</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#autofield\" class=\"external\" rel=\" noopener\">AutoField</a> é um tipo especial de <code>IntegerField</code> que é incrementada automaticamente. Uma chave primária desse tipo é adicionada de forma automatica ao seu modelo, se você não especificar explicitamente um.</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#foreignkey\" class=\"external\" rel=\" noopener\">ForeignKey</a> é usado para especificar um relacionamento um-para-muitos com outro modelo do banco de dados (por exemplo, um carro tem um fabricante, mas um fabricante pode fazer muitos carros). O lado \"um\" do relacionamento é o modelo que contém a \"chave\" (os modelos que contêm uma \"chave estrangeira\" referem-se a essa \"chave\" e estão no lado \"muitos\" de tal relacionamento).</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#manytomanyfield\" class=\"external\" rel=\" noopener\">ManyToManyField</a> é usado para especificar um relacionamento muitos-para-muitos (por exemplo, um livro pode ter vários gêneros e cada gênero pode conter vários livros). Em nosso aplicativo de biblioteca, usaremos isso de maneira muito semelhante às <code>ForeignKeys</code>, mas elas podem ser usadas de maneiras mais complicadas para descrever as relações entre os grupos. Eles têm o parâmetro <code>on_delete</code> para definir o que acontece quando o registro associado é excluído (por exemplo, um valor de <code>models.SET_NULL</code> simplesmente definiria o valor como <code>NULL</code>).</li>\n</ul>\n\n<p>Existem muitos outros tipos de campos, incluindo campos para diferentes tipos de números (big integers, small integers, floats), booleanos, URLs, slugs, unique ids e outras informações \"relacionadas ao tempo\" (duração, tempo, etc.) . Você pode ver a <a href=\"https://docs.djangoproject.com/en/2.1/ref/models/fields/#field-types\" class=\"external\" rel=\" noopener\">lista completa AQUI</a>.</p>\n\n<h4 id=\"metadados_metadada\">Metadados (metadada)</h4>\n\n<p>Você pode declarar o nível de modelo para os metadados declarando <code>class Meta</code>, como mostrado.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n    ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'-my_field_name'</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n\n<p>Um dos recursos mais úteis desses metadados é controlar a ordem padrão dos registros retornados, quando você consulta o tipo de modelo. Você faz isso especificando a ordem de correspondência em uma lista de nomes para ordenar (<code>ordering</code>) o atributo , conforme mostrado acima. A ordem dependerá do tipo de campo (os campos de caractere são classificados em ordem alfabética, enquanto os campos de data são classificados em ordem cronológica). Como mostrado acima, você pode prefixar o nome do campo com um símbolo de menos (-) para inverter a ordem de classificação.</p>\n\n<p>Então, como exemplo, se optássemos por ordenar livros como este por padrão:</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code>ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-pubdate'</span><span class=\"token punctuation\">]</span></code></pre></div>\n\n<p>Os livros seriam classificados em ordem alfabética por título, de A-Z e depois por data de publicação dentro de cada título, do mais recente ao mais antigo.</p>\n\n<p>Outro atributo comum é <code>verbose_name</code>, um nome detalhado para a classe no singular e plural:</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code>verbose_name <span class=\"token operator\">=</span> <span class=\"token string\">'BetterName'</span></code></pre></div>\n\n<p>Outros atributos úteis permitem que você crie e aplique novas \"permissões de acesso\" para o modelo (as permissões padrão são aplicadas automaticamente), permitem a ordenação com base em outro campo ou declarar que a classe é \"abstrata\" (uma classe base que você não pode criar registros, e em vez disso, serão derivadas para criar outros modelos).</p>\n\n<p>Muitas das outras opções de metadados controlam qual banco de dados deve ser usado para o modelo e como os dados são armazenados (eles são realmente úteis somente se você precisar mapear um modelo para um banco de dados existente).</p>\n\n<p>A lista completa de opções de metadados pode ser encontrada aqui: <a href=\"https://docs.djangoproject.com/en/2.1/ref/models/options/\" class=\"external\" rel=\" noopener\">Opções de modelos de metadados</a> (Django docs).</p>\n\n<h4 id=\"métodos\">Métodos</h4>\n\n<p>Um modelo também pode ter métodos.</p>\n\n<p><strong>Minimamente, em cada modelo você deve definir o método de classe padrão do Python <code>__str__()</code> para retornar uma string legível para cada objeto.</strong> Essa sequência é usada para representar registros individuais no site de administração (e em qualquer outro lugar que você precise se referir a uma instância de modelo). Muitas vezes isso retornará um campo de título ou nome do modelo.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>field_name</code></pre></div>\n\n<p>Outro método comum a incluir nos modelos do Django é o <code>get_absolute_url()</code>, que retorna uma URL para exibir registros de modelos individuais no site (se você definir esse método, o Django adicionará automaticamente um botão \"View on Site\" às ​​telas de edição de registros do modelo o site Admin). Um padrão típico para <code>get_absolute_url ()</code> é mostrado abaixo.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">get_absolute_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Retorna o URL para acessar uma instância específica do modelo.\"\"\"</span>\n    <span class=\"token keyword\">return</span> reverse<span class=\"token punctuation\">(</span><span class=\"token string\">'model-detail-view'</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p><strong>Nota: </strong>Supondo que você usará URLs como <code>/ myapplication / mymodelname / 2</code> para exibir registros individuais para seu modelo (onde \"2\" é o <code>id</code> para um registro específico), você precisará criar um mapeador de URL para passar a resposta e id para uma \"vista detalhada do modelo\" (que fará o trabalho necessário para exibir o registro). A função <code>reverse ()</code> acima é capaz de \"inverter\" seu mapeador de url (no caso acima chamado 'model-detail-view') para criar uma URL do formato correto.</p>\n\n<p>Claro que para fazer este trabalho você ainda tem que escrever o mapeamento de URL, visão e modelo!</p>\n</div>\n\n<p>Você também pode definir outros métodos que desejar e chamá-los de seu código ou modelos (desde que eles não utilizem nenhum parâmetro).</p>"}},{"type":"prose","value":{"id":"gestão_de_modelos","title":"Gestão de modelos","isH3":true,"content":"<p>Depois de definir suas classes de modelo, você pode usá-las para criar, atualizar ou excluir registros e executar consultas para obter todos os registros ou subconjuntos específicos de registros. Mostraremos como fazer isso no tutorial quando definirmos nossas visualizações, mas aqui está um breve resumo.</p>\n\n<h4 id=\"criando_e_modificando_registros\">Criando e modificando registros</h4>\n\n<p>Para criar um registro, você pode definir uma instância do modelo e, em seguida, chamar <code>save ()</code>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\"># Crie um novo registro usando o construtor do modelo.</span>\nrecord <span class=\"token operator\">=</span> MyModelName<span class=\"token punctuation\">(</span>my_field_name<span class=\"token operator\">=</span><span class=\"token string\">\"Instance #1\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Salve o objeto no banco de dados.</span>\nrecord<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n\n<div class=\"note notecard\" id=\"sect6\">\n<p><strong>Nota:</strong> Se você não tiver declarado qualquer campo como primary_key, o novo registro receberá um automaticamente, com o ID do nome do campo. Você poderia consultar este campo depois de salvar o registro acima e ele teria um valor de 1.</p>\n</div>\n\n<p>Você pode acessar os campos nesse novo registro usando a sintaxe de ponto e alterar os valores. Você precisa chamar <code>save ()</code> para armazenar valores modificados no banco de dados.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\"># Acessar valores de campo de modelo usando atributos do Python.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># should return 1 for the first record.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>my_field_name<span class=\"token punctuation\">)</span> <span class=\"token comment\"># should print 'Instance #1'</span>\n\n<span class=\"token comment\"># Altere o registro modificando os campos e, em seguida, chamando save ().</span>\nrecord<span class=\"token punctuation\">.</span>my_field_name <span class=\"token operator\">=</span> <span class=\"token string\">\"New Instance Name\"</span>\nrecord<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n\n<h4 id=\"procurando_por_registros\">Procurando por registros</h4>\n\n<p>Você pode procurar registros que correspondam a um determinado critério usando o atributo de objetos do modelo (fornecido pela classe base).</p>\n\n<div class=\"note notecard\" id=\"sect7\">\n<p><strong>Nota: </strong>Explicar como procurar registros usando nomes de campos e modelos \"abstratos\" pode ser um pouco confuso. Na discussão abaixo, vamos nos referir a um modelo de livro com campos de título e gênero, onde o gênero também é um modelo com um único <code>nome</code> de campo.</p>\n</div>\n\n<p>Podemos obter todos os registros para um modelo como um <code>QuerySet</code>, usando<code> objects.all ()</code>. O <code>QuerySet</code> é um objeto iterável, o que significa que ele contém um número de objetos que podemos iterar / percorrer.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code>all_books <span class=\"token operator\">=</span> Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n\n<p>O método <code>filter ()</code> do Django nos permite filtrar o <code>QuerySet</code> retornado para corresponder a um campo especificado de <strong>texto</strong> ou <strong>numérico</strong> em relação a um critério específico. Por exemplo, para filtrar por livros que contenham \"wild\" no título e, em seguida, contá-los, poderíamos fazer o seguinte.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code>wild_books <span class=\"token operator\">=</span> Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>title__contains<span class=\"token operator\">=</span><span class=\"token string\">'wild'</span><span class=\"token punctuation\">)</span>\nnumber_wild_books <span class=\"token operator\">=</span> Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>title__contains<span class=\"token operator\">=</span><span class=\"token string\">'wild'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n\n<p>Os campos a serem correspondidos e o tipo de correspondência são definidos no nome do parâmetro de filtro, usando o formato: field_name__match_type (observe o sublinhado duplo entre título e contém acima). Acima, estamos filtrando o título com uma correspondência de maiúsculas e minúsculas. Existem muitos outros tipos de correspondência que você pode fazer: icontains (insensitivo a maiúsculas e minúsculas), iexact (correspondência exata que não diferencia maiúsculas e minúsculas), exata (correspondência exata diferencia maiúsculas de minúsculas), gt (maior que), startswith, etc. é <a href=\"https://docs.djangoproject.com/en/2.1/ref/models/querysets/#field-lookups\" class=\"external\" rel=\" noopener\">aqui</a>.</p>\n\n<p>Em alguns casos, você precisará filtrar um campo que defina um relacionamento um-para-muitos com outro modelo (por exemplo, uma <code>ForeignKey</code>). Nesse caso, você pode \"indexar\" campos no modelo relacionado com sublinhados duplos adicionais. Por exemplo, para filtrar livros com um padrão de gênero específico, você terá que indexar o <code>nome</code> por meio do campo de <code>gênero</code>, conforme mostrado abaixo:</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\"># Combinará em: ficção, ficção científica, não-ficção etc.</span>\nbooks_containing_genre <span class=\"token operator\">=</span> Book<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>genre__name__icontains<span class=\"token operator\">=</span><span class=\"token string\">'fiction'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n\n<div class=\"note notecard\" id=\"sect8\">\n<p><strong>Nota:</strong> Você pode usar sublinhados (__) para navegar quantos níveis de relacionamentos (<code>ForeignKey / ManyToManyField</code>) desejar. Por exemplo, um <code>Livro</code> que tinha tipos diferentes, definidos usando um relacionamento \"cover\" adicional, pode ter um nome de parâmetro: <code>type__cover__name__exact = 'hard'</code>.</p>\n</div>\n\n<p>Há muito mais que você pode fazer com as consultas, incluindo pesquisas para trás de modelos relacionados, encadeando filtros, retornando um conjunto menor de valores, etc. Para obter mais informações, consulte <a href=\"https://docs.djangoproject.com/en/2.1/topics/db/queries/\" class=\"external\" rel=\" noopener\">Fazendo consultas</a> (Django Docs).</p>"}},{"type":"prose","value":{"id":"definindo_os_modelos_locallibrary","title":"Definindo os modelos LocalLibrary","isH3":false,"content":"<p>Nesta seção, começaremos a definir os modelos para a biblioteca. Abra models.py (em / locallibrary / catalog /). O código na parte superior da página importa o módulo de models, que contém os modelos da classe base do models. Modelo do qual nossos models herdarão.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n<span class=\"token comment\"># Create your models here.</span></code></pre></div>"}},{"type":"prose","value":{"id":"genre_model","title":"Genre model","isH3":true,"content":"<p>Copie o código do model <code>Genre</code> , que aparece a baixo, e cole no seu arquivo <code>models.py</code> , abaixo do código de importação.  Esse model  guarda informaçoes sobre a categoria do livro — por exemplo se é ficção ou não ficção, romance ou história, etc. Como mencionado acima, criamos o genero como um model em vez de um campo de texto ou um lista de seleção para que os possíveis generos criados possam ser gerenciados pelo banco de dados, em vez de serem codificados.</p>\n\n<pre class=\"syntaxbox notranslate\">class Genre(models.Model):\n    \"\"\"Model representing a book genre.\"\"\"\n    name = models.CharField(max_length=200, help_text='Enter a book genre (e.g. Science Fiction)')\n\n    def __str__(self):\n        \"\"\"String for representing the Model object.\"\"\"\n        return self.name</pre>\n\n<p>O model tem apenas um campo do tipo <code>CharField</code> (<code>name</code>), que é usado para descrever o genero (esse campo é limitado a 200 caracteres e tem um <code>help_text</code>). No final da classe Genre declaramos o metodo  <code>__str__()</code> que retorna o nome do genero definido por um registro especifico. Não foi definido um argumento <code>verbose_name</code> , assim o campo será referenciado como  <code>Name</code> nos forms.</p>"}},{"type":"prose","value":{"id":"book_model","title":"Book model","isH3":true,"content":"<p>Copie o model Book abaixo e cole novamente ao final do seu arquivo. O model Book representa todas as informações disponíveis sobre um livro de maneira geral, mas não incluí detalhes sobre o formato do encadernamento ou disponibilidade para empréstimo. O model usa um <code>CharField</code> para representar o  <code>title</code> (tílutlo) do livro e o <code>isbn</code> (veja que o <code>isbn</code> recebe um rótulo como \"ISBN\", usando o primeiro parâmetro não nomeado, porque, de outra forma, o rótulo ficaria \"Isbn\"). O model usa <code>TextField</code> para o campo <code>summary</code> porque ele precisa ser um tanto longo.</p>\n\n<pre class=\"notranslate\">from django.urls import reverse # Used to generate URLs by reversing the URL patterns\n\nclass Book(models.Model):\n    \"\"\"Model representing a book (but not a specific copy of a book).\"\"\"\n    title = models.CharField(max_length=200)\n\n    # Foreign Key used because book can only have one author, but authors can have multiple books\n    # Author as a string rather than object because it hasn't been declared yet in the file\n    author = models.ForeignKey('Author', on_delete=models.SET_NULL, null=True)\n\n    summary = models.TextField(max_length=1000, help_text='Enter a brief description of the book')\n    isbn = models.CharField('ISBN', max_length=13, help_text='13 Character &lt;a href=\"https://www.isbn-international.org/content/what-isbn\"&gt;ISBN number&lt;/a&gt;')\n\n    # ManyToManyField used because genre can contain many books. Books can cover many genres.\n    # Genre class has already been defined so we can specify the object above.\n    genre = models.ManyToManyField(Genre, help_text='Select a genre for this book')\n\n    def __str__(self):\n        \"\"\"String for representing the Model object.\"\"\"\n        return self.title\n\n    def get_absolute_url(self):\n        \"\"\"Returns the url to access a detail record for this book.\"\"\"\n        return reverse('book-detail', args=[str(self.id)])</pre>\n\n<p>Genre é um campo <code>ManyToManyField</code>, de forma que um livro pode ter múltiplos gêneros e um gênero pode ter muitos livros. O campor Author é declarado como um <code>ForeignKey</code>, logo, cada livro terá somente um autor, mas um autor por der muitos livros (na prática, um livro pode ter múltiplos autores, mas não nesta implementação!)</p>\n\n<p>Em ambos tipos de campo, a classe model relacionada é declarada como primeiro campo não nomeado usando a classe model ou contendo o nome do modelo relacionado. Você deve usar o nome do model como uma string se a classe associada ainda não tiver sido definida no arquivo, antes de referenciá-la. Outro parâmetro de interesse no campo <code>author</code> é <code>null=True</code>, o qual permite ao banco de dados armazer um valor <code>Null</code> se nenhum autor for selecionado, e, <code>on_delete=models.SET_NULL</code>, o qual definirá o valor <code>author</code> como <code>Null</code> se o registro do autor associado for excluído.</p>\n\n<p>O mode também defini <code>__str__()</code>, usando o <code>title</code> do livro para representar o registro do <code>Book</code>. O método final, <code>get_absolute_url()</code>, retorna a URL que pode ser usada para acessar o registro detalhado deste modelo (para que isto funcione, teremos que definir um mapa de URL com o nome <code>book-detail</code> e associá-la a uma view e a um template.).</p>"}},{"type":"prose","value":{"id":"bookinstance_model","title":"BookInstance model","isH3":true,"content":"<p>Em seguida, copie o modelo <code>BookInstance</code> (exibido a abaixo) depois dos outros modelos. O <code>BookInstance</code> representa um exemplar específico do livro que pode ser emprestado, indica se ela está disponível ou a data programada de restituição, \"imprint\" ou detalhes da versão, e, um id único do livro na biblioteca.</p>\n\n<p>Alguns dos campos e métodos serão familiares agora. O model usa</p>\n\n<ul>\n <li><code>ForeignKey</code> para identificar o <code>Book</code> associado (cada livro pode ter muitos exemplares, porém uma cópia pode ter sometne um <code>Book</code>).</li>\n <li><code>CharField</code> para representar o imprint (edição específica) do livro.</li>\n</ul>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">import</span> uuid <span class=\"token comment\"># Required for unique book instances</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BookInstance</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Model representing a specific copy of a book (i.e. that can be borrowed from the library).\"\"\"</span>\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>UUIDField<span class=\"token punctuation\">(</span>primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span>uuid<span class=\"token punctuation\">.</span>uuid4<span class=\"token punctuation\">,</span> help_text<span class=\"token operator\">=</span><span class=\"token string\">'Unique ID for this particular book across whole library'</span><span class=\"token punctuation\">)</span>\n    book <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'Book'</span><span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>SET_NULL<span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    imprint <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    due_back <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    LOAN_STATUS <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Maintenance'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'On loan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Available'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Reserved'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    status <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>\n        max_length<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        choices<span class=\"token operator\">=</span>LOAN_STATUS<span class=\"token punctuation\">,</span>\n        blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n        default<span class=\"token operator\">=</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span>\n        help_text<span class=\"token operator\">=</span><span class=\"token string\">'Book availability'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'due_back'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"String for representing the Model object.\"\"\"</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> (</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token string\">)'</span></span></code></pre></div>\n\n<p>Nós declaramos adicionalmente alguns tipos novos de campos:</p>\n\n<ul>\n <li><code>UUIDField</code> é usado no campo <code>id</code> para definí-lo como <code>primary_key</code> deste model. Este tipo de campo aloca um valor único global para cada instância (um para cada livro encontrado na biblioteca).</li>\n <li><code>DateField</code> é usado para a data <code>due_back</code> (na qual o livro deve retonar e ficar disponível após um empréstimo ou uma manutenção). O valor pode ser <code>blank</code> ou <code>null</code> (para quando o livro estiver disponível). O model metadata (<code>Class Meta</code>) usa este campo para ordenar os registros quando eles são retornados em uma query.</li>\n <li><code>status</code> é um <code>CharField</code> que define uma lista de opção/seleção. Como pode ser visto, nós definimos uma dupla contendo pares de valores-chave e a passamos no argumento da opção. O valor do par valor-chave é um valor que o usuário pode selecionar, enquanto que a chave é o valor que  realmetne será salvo se a opção for selecionada. Nós também definimos um valor default como \"m\" (maintenance), uma vez que os livros serão inicialmente criados como indisponíveis até que eles sejam disponibilizados nas prateleiras.</li>\n</ul>\n\n<p>O model <code>__str__()</code> representa o objeto <code>BookInstance</code> usando a combinação do seu id único e o título do <code>Book</code> associado.</p>\n\n<div class=\"note notecard\" id=\"sect9\">\n<p><strong>Nota</strong>: Um pouco sobre Python:</p>\n\n<ul>\n <li>Começando com Python 3.6, pode ser usada a sintaxe de interpolação  (também conhecida como f-strings): <code>f'{self.id} ({self.book.title})'</code>.</li>\n <li>Em versões anteriores deste tutorial, nós estávamos usando a sintaxe de  <a href=\"https://www.python.org/dev/peps/pep-3101/\" class=\"external\" rel=\" noopener\">formatted string</a>, a qual também é uma maneira válida de formatar  strings em Python (e.g. <code>'{0} ({1})'.format(self.id,self.book.title)</code>).</li>\n</ul>\n</div>"}},{"type":"prose","value":{"id":"author_model","title":"Author model","isH3":true,"content":"<p>Copie o model <code>Author</code> (exibido abaixo) na sequência do código existente em  <strong>models.py</strong>.</p>\n\n<p>Todos os campos/métodos já devem ser familiares agora. O model define um autor como tendo um nome, sobrenome, data de nascimento e data de morte (opcionalmente). Ele especifica que <code>__str__()</code> retorna por default sobrenome e nome, nesta ordem. O método <code>get_absolute_url()</code> reverte o mapaeamento da URL <code>author-detail</code> para obter a URL de display individual author.</p>\n\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Author</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Model representing an author.\"\"\"</span>\n    first_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    last_name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    date_of_birth <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span>null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    date_of_death <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>DateField<span class=\"token punctuation\">(</span><span class=\"token string\">'Died'</span><span class=\"token punctuation\">,</span> null<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        ordering <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'last_name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'first_name'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_absolute_url</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Returns the url to access a particular author instance.\"\"\"</span>\n        <span class=\"token keyword\">return</span> reverse<span class=\"token punctuation\">(</span><span class=\"token string\">'author-detail'</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"String for representing the Model object.\"\"\"</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>last_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>first_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n\n</code></pre></div>"}},{"type":"prose","value":{"id":"rode_novamente_a_migração_do_banco_de_dados","title":"Rode novamente a migração do banco de dados","isH3":false,"content":"<p>Todos os modelos foram criados. Agora rode a migração do banco de dados para adicioná-los ao seu banco de dados.</p>\n\n<pre class=\"notranslate\"><code>python3 manage.py makemigrations\npython3 manage.py migrate</code></pre>"}},{"type":"prose","value":{"id":"language_model_—_desafio","title":"Language model — desafio","isH3":false,"content":"<p>Considere que um benfeitor local doe uma quantidade de livros escritos em outro idioma (digamos, Farsi). O desafio é desenvolver como eles seriam melhor representados no website da nossa biblioteca, e, então, adicioná-lo no models.</p>\n\n<p>Algumas coisas a considerar:</p>\n\n<ul>\n <li>O idioma seria associado ao  <code>Book</code>, <code>BookInstance</code>, ou algum outro objeto?</li>\n <li>Os diferentes idiomas seriam representados usando model, como campo de texto livre ou codificado como uma lista de seleção?</li>\n</ul>\n\n<p>Depois de decidido, adicione o campo. Pode ser visto o que decidimos no Github <a href=\"https://github.com/mdn/django-locallibrary-tutorial/blob/master/catalog/models.py\" class=\"external\" rel=\" noopener\">aqui</a>.</p>\n\n<ul>\n</ul>\n\n<ul>\n</ul>"}},{"type":"prose","value":{"id":"resumo","title":"Resumo","isH3":false,"content":"<p>Neste artículo vimos como os  models são definidos, e, então, usamos esta informação para desenhar e implementar modelos apropriados para o website  <em>LocalLibrary</em>.</p>\n\n<p>Neste ponto faremos um rápido desvio da criação do site para ver o <em>Django Administration site</em>. Este site nos permitirá adicionar alguns dados à biblioteca, os quais podemos então exibir usando nossos próprios views e templates (ainda não criados).</p>"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/intro/tutorial02/\" class=\"external\" rel=\" noopener\">Escrevendo nossa primeira app Django, parte 2</a> (Django docs)</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/topics/db/queries/\" class=\"external\" rel=\" noopener\">Fazendo queries</a> (Django Docs)</li>\n <li><a href=\"https://docs.djangoproject.com/en/2.1/ref/models/querysets/\" class=\"external\" rel=\" noopener\">Referência a QuerySet API</a> (Django Docs)</li>\n</ul>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/Server-side/Django/skeleton_website\"> Anterior </a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/Server-side/Django\"> Menu: Django</a></li>\n    <li><a class=\"button minimal\" href=\"/pt-BR/docs/Learn/Server-side/Django/Admin_site\"> Próxima  </a></li>\n</ul><p></p>"}},{"type":"prose","value":{"id":"neste_módulo","title":"Neste módulo","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Introduction\">Introdução ao Django</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/development_environment\">Configurando um ambiente de desenvolvimento Django</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial Django: Website de uma biblioteca local</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Django Parte 2: Criando o escopo do website</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial </a><a href=\"/en-US/docs/Learn/Server-side/Django/Models\">Django Parte 3: Utilizando models</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial </a><a href=\"/en-US/docs/Learn/Server-side/Django/Admin_site\">Django Parte 4: Django admin site</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial </a><a href=\"/en-US/docs/Learn/Server-side/Django/Home_page\">Django Parte 5: Criando nossa página principal</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial </a><a href=\"/en-US/docs/Learn/Server-side/Django/Generic_views\">Django Parte 6: Lista genérica e detail views</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial </a><a href=\"/en-US/docs/Learn/Server-side/Django/Sessions\">Django Parte 7: Framework de Sessões</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial </a><a href=\"/en-US/docs/Learn/Server-side/Django/Authentication\">Django Parte 8: Autenticação de Usuário e permissões</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial </a><a href=\"/en-US/docs/Learn/Server-side/Django/Forms\">Django Parte 9: Trabalhando com formulários</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial </a><a href=\"/en-US/docs/Learn/Server-side/Django/Testing\">Django Parte 10: Testando uma aplicação web Django</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial Django Parte 11: Implantando Django em produção</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/web_application_security\">Segurança de aplicações Django</a></li>\n <li><a href=\"/en-US/docs/Learn/Server-side/Django/django_assessment_blog\">DIY Django mini blog</a></li>\n</ul>"}}],"toc":[{"text":"Visão Geral","id":"visão_geral"},{"text":"Projetando os modelos para o website <a href=\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\">LocalLibrary</a>","id":"projetando_os_modelos_para_o_website_locallibrary"},{"text":"Model primer","id":"model_primer"},{"text":"Definindo os modelos LocalLibrary","id":"definindo_os_modelos_locallibrary"},{"text":"Rode novamente a migração do banco de dados","id":"rode_novamente_a_migração_do_banco_de_dados"},{"text":"Language model — desafio","id":"language_model_—_desafio"},{"text":"Resumo","id":"resumo"},{"text":"Veja também","id":"veja_também"},{"text":"Neste módulo","id":"neste_módulo"}],"summary":"Este artigo mostra como definir os modelos para o website LocalLibrary. Ele explica o que é um modelo, como ele é declarado e mostra algum dos principais tipos de campo. Ele também mostra brevemente algumas das principais formas pelas quais você pode acessar dados do modelo.","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Django Tutorial Part 3: Using models","locale":"en-US","native":"English (US)"},{"title":"Tutorial Django Parte 3: Uso de modelos","locale":"es","native":"Español"},{"title":"Django didactique Section 3: Utilisation des modèles de données","locale":"fr","native":"Français"},{"title":"Django チュートリアル Part 3: モデルの使用","locale":"ja","native":"日本語"},{"title":"Django Tutorial Part 3: Using models","locale":"ko","native":"한국어"},{"title":"Django учебник Часть 3: Использование моделей","locale":"ru","native":"Русский"},{"title":"Django Tutorial Part 3: 使用模型","locale":"zh-CN","native":"中文 (简体)"},{"title":"Django Tutorial Part 3: Using models","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"pt-br/learn/server-side/django/models","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/learn/server-side/django/models/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/pt-BR/docs/Learn","title":"Aprendendo desenvolvimento web"},{"uri":"/pt-BR/docs/Learn/Server-side","title":"Programação de site do lado do servidor"},{"uri":"/pt-BR/docs/Learn/Server-side/Django","title":"Django Web Framework (Python)"},{"uri":"/pt-BR/docs/Learn/Server-side/Django/Models","title":"Tutorial Django Parte 3: Usando models"}],"pageTitle":"Tutorial Django Parte 3: Usando models - Aprendendo desenvolvimento web | MDN","noIndexing":false}}