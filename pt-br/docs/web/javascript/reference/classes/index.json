{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Classes","mdn_url":"/pt-BR/docs/Web/JavaScript/Reference/Classes","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"\n <ol>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Tutorials\"><strong>Tutoriais:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Completos iniciantes</summary>\n      <ol>\n        <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">O básico de JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps\">Primeiros passos com JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks\">Blocos de construção de JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects\">Introdução a objetos JavaScript</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Guia de JavaScript</summary>\n      <ol>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Introduction\">Introdução</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Grammar_and_Types\">Gramática e tipos</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Controle de fluxo e tratamento de erros</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Loops_and_iteration\">Repetição e iteração</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Functions\">Funções</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Expressões e operadores</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Numbers_and_dates\">Números e datas</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Text_formatting\">Formatação de texto</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Regular_Expressions\">Expressões Regulares</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Indexed_collections\">Coleções indexadas</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Keyed_collections\">Coleções com chave (chave-valor)</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Working_with_Objects\">Trabalhando com objetos</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Detalhes do modelo de objetos</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Using_promises\">Usando \"promises\"</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Iterators_and_generators\">Iteradores e geradores</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Meta_programming\">Metaprogramação</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Intermediário</summary>\n      <ol>\n        <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs\">APIs Web para aplicações Cliente</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">Uma reintrodução a JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Data_structures\">Estruturas de dados de JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Comparadores de igualdade e semelhança</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Closures\">Closures</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Avançado</summary>\n      <ol>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Herança e a cadeia de \"prototype\"</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode - Modo estrito</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Typed_arrays\">Arranjos tipados em JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Memory_Management\">Gerenciamento de memória</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/EventLoop\">Modelo de concorrência e Loop de Eventos</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference\">Referências:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Objetos pré-definidos</summary>\n        <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Expressões e operadores</summary>\n      <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Afirmações e declarações</summary>\n      <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Funções</summary>\n      <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Classes</summary>\n      <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Erros</summary>\n      <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Mais conteúdo</summary>\n      <ol>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/JavaScript_technologies_overview\">Visão geral das Tecnologias JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Lexical_grammar\">Gramática léxica</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Data_structures\">Estruturas de dados de JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Enumerabilidade e domínio de propriedades</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Iteration_protocols\">Protocolos de iteração</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode - Modo estrito</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Migrando para o \"strict mode\"</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Template_literals\">Template literals</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Funcionalidades depreciadas</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Classes em JavaScript são introduzidas no ECMAScript 2015 e são simplificações da linguagem para as heranças baseadas nos protótipos. A sintaxe para classes <strong>não</strong> introduz um novo modelo de herança de orientação a objetos em JavaScript. Classes em JavaScript provêm uma maneira mais simples e clara de criar objetos e lidar com herança.</p>"}},{"type":"prose","value":{"id":"definindo_classes","title":"Definindo classes","isH3":false,"content":"<p>As Classes são, de fato, \"funções especiais\", e, assim como você pode definir <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/function\">\"function expressions\"</a> e <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/function\">\"function declarations\"</a>, a sintaxe de uma classe possui dois componentes: <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/class\">\"class expressions</a>\" e <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/class\">\"class declarations\"</a>.</p>"}},{"type":"prose","value":{"id":"declarando_classes","title":"Declarando classes","isH3":true,"content":"<p>Uma maneira de definir uma classe é usando uma declaração de classe. Para declarar uma classe, você deve usar a palavra-chave <code>class</code> seguida pelo nome da classe (aqui \"Retangulo\").</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Retangulo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">altura<span class=\"token punctuation\">,</span> largura</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>altura <span class=\"token operator\">=</span> altura<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>largura <span class=\"token operator\">=</span> largura<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"uso_antes_da_declaração_hoisting_-_tradução_literal_lançamento\">Uso antes da declaração (Hoisting - Tradução Literal: Lançamento)</h4>\n<p>Uma diferença importante entre <strong>declarações de funções</strong> das <strong>declarações de classes</strong>, é que declararações de funções são <a href=\"/pt-BR/docs/Glossary/Hoisting\">hoisted</a> e declarações de classes não são. Primeiramente deve declarar sua classe para só então acessá-la, pois do contrário o código a seguir irá lançar uma exceção: <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\"><code>ReferenceError</code></a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Retangulo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Erro de referência (ReferenceError)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Retangulo</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"expressões_de_classes","title":"Expressões de Classes","isH3":true,"content":"<p>Uma <strong>Expressão de Classe</strong> (class expression) é outra forma para definir classes. Expressões de Classes podem possuir nomes ou não (anônimas). O nome dado para uma expressão de classe é local ao corpo da classe.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// sem nome</span>\n<span class=\"token keyword\">let</span> Retangulo <span class=\"token operator\">=</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">altura<span class=\"token punctuation\">,</span> largura</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>altura <span class=\"token operator\">=</span> altura<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>largura <span class=\"token operator\">=</span> largura<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// nomeada</span>\n<span class=\"token keyword\">let</span> Retangulo <span class=\"token operator\">=</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Retangulo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">altura<span class=\"token punctuation\">,</span> largura</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>altura <span class=\"token operator\">=</span> altura<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>largura <span class=\"token operator\">=</span> largura<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><strong>Nota:</strong> As <strong>expressões de classe</strong> também sofrem com o mesmo problema de <a href=\"/pt-BR/docs/Glossary/Hoisting\">hoisted</a> mencionados em <strong>declarações</strong> de classe.</p>"}},{"type":"prose","value":{"id":"corpo_de_uma_classe_e_definições_de_métodos","title":"Corpo de uma classe e definições de métodos","isH3":false,"content":"<p>O corpo de uma classe é a parte que está entre chaves <code>{}</code>. É aí onde você define os membros da classe, como os métodos, ou os construtores.</p>"}},{"type":"prose","value":{"id":"modo_estrito_strict_mode","title":"Modo Estrito (strict mode)","isH3":true,"content":"<p>Os corpos das Declarações de Classes e das Expressões de Classes são executados em <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Strict_mode\">modo estrito</a>.</p>"}},{"type":"prose","value":{"id":"construtor","title":"Construtor","isH3":true,"content":"<p>O método <a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/constructor\"><code>constructor</code></a> é um tipo especial de método para criar e iniciar um objeto criado pela classe. Só pode existir um método especial com o nome \"constructor\" dentro da classe. Um erro de sintaxe <a class=\"page-not-created\" title=\"A documentação sobre isto ainda não foi escrita; por favor considere contribuir!\"><code>SyntaxError</code></a> será lançado se a classe possui mais do que uma ocorrência do método <code>constructor</code>.</p>\n<p>Um construtor pode usar a palavra-chave <code>super</code> para chamar o construtor de uma classe pai.</p>"}},{"type":"prose","value":{"id":"métodos_protótipos","title":"Métodos Protótipos","isH3":true,"content":"<p>Veja também <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/Method_definitions\">definições de métodos (method definitions)</a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Retangulo</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">altura<span class=\"token punctuation\">,</span> largura</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>altura <span class=\"token operator\">=</span> altura<span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>largura <span class=\"token operator\">=</span> largura<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">//Getter</span>\n    <span class=\"token keyword\">get</span> <span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculaArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">calculaArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>altura <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>largura<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> quadrado <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Retangulo</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>quadrado<span class=\"token punctuation\">.</span>area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"métodos_estáticos","title":"Métodos estáticos","isH3":true,"content":"<p>A palavra-chave <a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/static\"><code>static</code></a> define um método estático de uma classe. Métodos estáticos são chamados sem a instanciação da sua classe e não podem ser chamados quando a classe é instanciada. Métodos estáticos são geralmente usados para criar funções de utilidades por uma aplicação.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ponto</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token function\">distancia</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> dx <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> dy <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">hypot</span><span class=\"token punctuation\">(</span>dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> p1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ponto</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> p2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ponto</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\np1<span class=\"token punctuation\">.</span>distancia<span class=\"token punctuation\">;</span> <span class=\"token comment\">//undefined</span>\np2<span class=\"token punctuation\">.</span>distancia<span class=\"token punctuation\">;</span> <span class=\"token comment\">//undefined</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Ponto<span class=\"token punctuation\">.</span><span class=\"token function\">distancia</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span> p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"empacotando_com_protótipos_e_métodos_estáticos","title":"Empacotando com protótipos e métodos estáticos","isH3":true,"content":"<p>Quando um método estático ou protótipo é chamado sem um objeto \"this\" configurado (ou com \"this\" como boolean, string, number, undefined ou null), então o valor \"this\" será <strong><code>undefined</code></strong> dentro da função chamada. Autoboxing não vai acontecer. O comportamento será o mesmo se escrevemos o código no modo não-estrito.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">comer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Animal {}</span>\n<span class=\"token keyword\">let</span> falar <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>falar<span class=\"token punctuation\">;</span>\n<span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n\nAnimal<span class=\"token punctuation\">.</span><span class=\"token function\">comer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// class Animal</span>\n<span class=\"token keyword\">let</span> comer <span class=\"token operator\">=</span> Animal<span class=\"token punctuation\">.</span>comer<span class=\"token punctuation\">;</span>\n<span class=\"token function\">comer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n</code></pre></div>\n<p>Se escrevemos o código acima usando classes baseadas em função tradicional, então o autoboxing acontecerá com base no valor de \"this\" para o qual a função foi chamada.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Animal</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">falar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nAnimal<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">comer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> falar <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>falar<span class=\"token punctuation\">;</span>\n<span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// objeto global</span>\n\n<span class=\"token keyword\">let</span> comer <span class=\"token operator\">=</span> Animal<span class=\"token punctuation\">.</span>comer<span class=\"token punctuation\">;</span>\n<span class=\"token function\">comer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// objeto global</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"propriedades_de_instância","title":"Propriedades de instância","isH3":true,"content":"<p>Propriedades de instâncias devem ser definidas dentro dos métodos da classe:</p>\n<pre class=\"notranslate\">class Retangulo {\n  constructor(altura, largura) {\n    this.altura = altura;\n    this.largura = largura;\n  }\n}\n</pre>\n<p>Propriedades de dados estáticos e propriedades de dados prototipados (prototype) devem ser definidos fora da declaração do corpo da classe.</p>\n<pre class=\"notranslate\">Retangulo.larguraEstatico = 20;\nRetangulo.prototype.larguraPrototipagem = 25;\n</pre>"}},{"type":"prose","value":{"id":"sub_classes_com_o_extends","title":"Sub classes com o <code>extends</code>","isH3":false,"content":"<p>A palavra-chave <a href=\"/en-US/docs/Web/JavaScript/Reference/Classes/extends\"><code>extends</code></a> é usada em uma <em>declaração de classe</em>, ou em uma <em>expressão de classe</em> para criar uma classe como filha de uma outra classe.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nome</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">=</span> nome<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">+</span> <span class=\"token string\">' emite um barulho.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Cachorro</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">+</span> <span class=\"token string\">' latidos.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> cachorro <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cachorro</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mat'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncachorro<span class=\"token punctuation\">.</span><span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Se existir um contrutor nas subclasses, é necessário primeiro chamar super() antes de usar a keyword \"this\".</p>\n<p>Também é possivel ampliar (extends) \"classes\" baseadas em funções tradicionais.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Animal</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">nome</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">=</span> nome<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Animal</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">falar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">+</span> <span class=\"token string\">' faça barulho.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Cachorro</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">+</span> <span class=\"token string\">' lati.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> cachorro <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cachorro</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mitzie'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncachorro<span class=\"token punctuation\">.</span><span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Mitzie lati.</span>\n</code></pre></div>\n<p>Note que classes não extendem objetos normais (não construíveis). Se você quer herdar de um objeto, é necessário utilizar <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> Animal <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">+</span> <span class=\"token string\">' faça barulho.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Cachorro</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nome</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">=</span> nome<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Cachorro</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> Animal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> cachorro <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cachorro</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mitzie'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncachorro<span class=\"token punctuation\">.</span><span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Mitzie faça barulho.</span>\n</code></pre></div>","titleAsText":"Sub classes com o extends"}},{"type":"prose","value":{"id":"species","title":"Species","isH3":false,"content":"<p>Você pode querer retornar um objeto <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> na sua classe <code>MinhaArray</code> derivada de array. O padrão Species permite a sobrescrita do construtor padrão.</p>\n<p>Por exemplo, quando utilizando um método como <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>map()</code></a> que retorna o construtor padrão, você pode querer que esse método retorne um objeto <code>Array</code> ao invés do objeto <code>MinhaArray</code>. O <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/species\"><code>Symbol.species</code></a> te permite fazer isso:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">MinhaArray</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Array</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// Sobrescreve species para o construtor da classe pai Array</span>\n   <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>species<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> Array<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MinhaArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> mapped <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> x <span class=\"token operator\">*</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mapped <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">MyArray</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mapped <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"chamada_da_classe_pai_com_super","title":"Chamada da classe pai com <code>super</code>","isH3":false,"content":"<p>A palavra-chave (keyword) <code>super</code> é utilizada para chamar funções que pertencem ao pai do objeto.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gato</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nome</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">=</span> nome<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">+</span> <span class=\"token string\">' faça barulho.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Leao</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Gato</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">+</span> <span class=\"token string\">' roars.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> leao <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Leao</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Fuzzy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nleao<span class=\"token punctuation\">.</span><span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Fuzzy faça barulho.</span>\n<span class=\"token comment\">// Fuzzy roars.</span>\n</code></pre></div>","titleAsText":"Chamada da classe pai com super"}},{"type":"prose","value":{"id":"mix-ins","title":"Mix-ins","isH3":false,"content":"<p>Subclasses abstratas ou <em>mix-ins</em> são templates para classes. Uma classe do ECMAScript pode apenas ter uma classe pai, assim sendo, não é possível a classe ter herança múltipla.</p>\n<p>Para se ter um comportamento similar ao de herança múltipla no ECMAScript usa-se mix-ins, uma forma de implementar mix-ins é usar um template de subclasse que é uma função que instancia uma classe base e retorna uma subclasse extendida desta classe base:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Humano</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nome</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome <span class=\"token operator\">=</span> nome<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">andar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome<span class=\"token operator\">+</span><span class=\"token string\">' andou um passo'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">HumanoFalante</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">Base</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> Base <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome<span class=\"token operator\">+</span><span class=\"token string\">' diz: olá mundo!'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">HumanoFalanteMixado</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">Base</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> Base <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> HumanoFinal <span class=\"token operator\">=</span> <span class=\"token function\">HumanoFalanteMixado</span><span class=\"token punctuation\">(</span><span class=\"token function\">HumanoFalante</span><span class=\"token punctuation\">(</span>Humano<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> humano <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HumanoFinal</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bill Gates'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>humano<span class=\"token punctuation\">.</span><span class=\"token function\">andar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>humano<span class=\"token punctuation\">.</span><span class=\"token function\">falar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"especificações","title":"Especificações","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Especificação</th>\n      <th>Status</th>\n      <th>Comentário</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-class-definitions\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"pt-BR\">The definition of 'Class definitions' in that specification.</small></a></td>\n      <td><span class=\"spec-standard\">Padrão</span></td>\n      <td>Definição inicial.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores","isH3":false,"query":"javascript.classes","dataURL":"/pt-BR/docs/Web/JavaScript/Reference/Classes/bcd.json"}},{"type":"prose","value":{"id":"rodando_com_scratchpad","title":"Rodando com Scratchpad","isH3":false,"content":"<p>Uma classe não pode ser redefinida. Se você estiver rodando código com Scratchpad (Menu do Firefox Ferramentas &gt; Web Developer &gt; Scratchpad) e você acionar 'Run' a uma definição de uma classe com o mesmo nome duas vezes, você verá um confuso SyntaxError: redeclaration of let &lt;class-name&gt; (Erro de Sintaxe: redeclaração de let &lt;nome-da-classe&gt;).</p>\n<p>\n  Para reacionar (re-run) uma definição, use o menu do Scratchpad em Execute &gt; Reload and Run (Executar &gt; Atualizar e Rodar).\n  Por favor, vote no bug <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1428672\" class=\"external\" rel=\" noopener\">#1428672</a>.\n</p>"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions\">Funções</a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/class\">Declaração de <code>classes</code> (class declaration</a>)</li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/class\">Expressão de <code>classes</code> (class expression</a>)</li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/super\"><code>super</code></a></li>\n  <li><a href=\"https://hacks.mozilla.org/2015/07/es6-in-depth-classes/\" class=\"external\" rel=\" noopener\">Blog post: \"ES6 In Depth: Classes\"</a></li>\n</ul>"}}],"toc":[{"text":"Definindo classes","id":"definindo_classes"},{"text":"Corpo de uma classe e definições de métodos","id":"corpo_de_uma_classe_e_definições_de_métodos"},{"text":"Sub classes com o <code>extends</code>","id":"sub_classes_com_o_extends"},{"text":"Species","id":"species"},{"text":"Chamada da classe pai com <code>super</code>","id":"chamada_da_classe_pai_com_super"},{"text":"Mix-ins","id":"mix-ins"},{"text":"Especificações","id":"especificações"},{"text":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores"},{"text":"Rodando com Scratchpad","id":"rodando_com_scratchpad"},{"text":"Veja também","id":"veja_também"}],"summary":"Classes em JavaScript são introduzidas no ECMAScript 2015 e são simplificações da linguagem para as heranças baseadas nos protótipos. A sintaxe para classes não introduz um novo modelo de herança de orientação a objetos em JavaScript. Classes em JavaScript provêm uma maneira mais simples e clara de criar objetos e lidar com herança.","popularity":0.0043,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Classes","locale":"en-US","native":"English (US)"},{"title":"Clases","locale":"es","native":"Español"},{"title":"Classes","locale":"fr","native":"Français"},{"title":"クラス","locale":"ja","native":"日本語"},{"title":"Classes","locale":"ko","native":"한국어"},{"title":"Классы","locale":"ru","native":"Русский"},{"title":"类","locale":"zh-CN","native":"中文 (简体)"},{"title":"Classes","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"pt-br/web/javascript/reference/classes","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/javascript/reference/classes/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference","title":"Referência JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Classes","title":"Classes"}],"pageTitle":"Classes - JavaScript | MDN","noIndexing":false}}