{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Function.prototype.call()","mdn_url":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/call","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"<ol><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriedades</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Métodos</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><em><code>Function.prototype.call()</code></em></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong>Herança:</strong></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriedades</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Métodos</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":"introdução","title":"Introdução","isH3":false,"content":"<p>O método <strong><code>call()</code></strong> invoca uma função com um dado valor <code>this</code> e argumentos passados individualmente.</p>\n<blockquote>\n  <p><strong>Nota:</strong> Apesar de a sintaxe desta função ser quase idêntica à de <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>apply()</code></a>, a principal diferença é que <code>call()</code> aceita uma <strong>lista de argumentos</strong>, enquanto <code>apply()</code> aceita <strong>um único array de argumentos.</strong></p>\n</blockquote>"}},{"type":"prose","value":{"id":"sintaxe","title":"Sintaxe","isH3":false,"content":"<pre class=\"notranslate\">fun.call(thisArg[, arg1[, arg2[, ...]]])\n</pre>"}},{"type":"prose","value":{"id":"parâmetros","title":"Parâmetros","isH3":true,"content":"<dl>\n  <dt id=\"thisarg\"><code>thisArg</code></dt>\n  <dd>\n    <p>O valor de <code>this</code> proveu a chamada para <em><code>fun</code></em>. Note que <code>this</code> pode não ser o valor atual visto pelo método: se esse método é uma função em <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Strict_mode\">non-strict mode <small>(en-US)</small></a> code, <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> e <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> serão reescritos com o objeto global, e valores primitivos serão encaixados.</p>\n  </dd>\n  <dt id=\"arg1_arg2_\"><code>arg1, arg2, ...</code></dt>\n  <dd>\n    <p>Argumentos para o objeto.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"descrição","title":"Descrição","isH3":false,"content":"<p>Você pode atribuir um objeto <code>this</code> diferente quando executar uma função existente. <code>this</code> refere-se ao objeto atual, o objeto em execução. Com <code>call</code>, você pode escrever um método uma vez e então herdá-lo em outro objeto, sem ter que reescrever o método para o novo objeto.</p>"}},{"type":"prose","value":{"id":"exemplos","title":"Exemplos","isH3":false,"content":""}},{"type":"prose","value":{"id":"exemplo_usando_call_para_encadear_construtores_para_um_objeto","title":"Exemplo: Usando <code>call</code> para encadear construtores para um objeto","isH3":true,"content":"<p>Você pode usar <code>call</code> para encadear construtores para um objeto, similar ao Java. No seguinte exemplo, o construtor do objeto <code>Product</code> é definido com dois parâmetros, <code>name</code> e <code>price</code>. Outras duas funções <code>Food</code> e <code>Toy</code> executam <code>Product</code> passando <code>this,</code> <code>name</code> e <code>price</code>. O Produto inicializa as propriedades <code>name</code> e <code>price</code>, ambos definem o <code>category</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Product</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> price</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>price <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token function\">RangeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cannot create product '</span> <span class=\"token operator\">+</span>\n                      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">' with a negative price'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Food</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> price</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">Product</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>category <span class=\"token operator\">=</span> <span class=\"token string\">'food'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Food</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Toy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> price</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">Product</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>category <span class=\"token operator\">=</span> <span class=\"token string\">'toy'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Toy</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> cheese <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Food</span><span class=\"token punctuation\">(</span><span class=\"token string\">'feta'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> fun <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Toy</span><span class=\"token punctuation\">(</span><span class=\"token string\">'robot'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Exemplo: Usando call para encadear construtores para um objeto"}},{"type":"prose","value":{"id":"exemplo_usando_o_call_para_chamar_funções_anônimas","title":"Exemplo: Usando o <code>call</code> para chamar funções anônimas","isH3":true,"content":"<p>Neste exemplo, criamos uma função anônima que usa o <code>call</code> para executá-lo em todos os objetos em um array(vetor). O principal propósito da função anônima aqui é adicionar uma função print para todo o objeto, que está disponível para imprimir o índice correto do objeto no array. Não foi necessário passar o valor do objeto como <code>this</code> , mas isso foi feito apenas para explicação.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> animais <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">especie</span><span class=\"token operator\">:</span> <span class=\"token string\">'Lion'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">nome</span><span class=\"token operator\">:</span> <span class=\"token string\">'King'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">especie</span><span class=\"token operator\">:</span> <span class=\"token string\">'Whale'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">nome</span><span class=\"token operator\">:</span> <span class=\"token string\">'Fail'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> animais<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">print</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>especie\n                  <span class=\"token operator\">+</span> <span class=\"token string\">': '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>animais<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","titleAsText":"Exemplo: Usando o call para chamar funções anônimas"}},{"type":"prose","value":{"id":"usando_call_para_chamar_a_função_e_especificar_o_contexto_de_this","title":"Usando <code>call</code> para chamar a função e especificar o contexto de 'this'","isH3":true,"content":"<p>No exemplo abaixo, quando vamos chamar a apresentação, o valor de this será associado ao objeto i.</p>\n<pre class=\"notranslate\">function apresentacao() {\n  var resposta = [this.pessoa, 'é um excelente', this.funcao].join(' ');\n  console.log(resposta);\n}\n\nvar i = {\n  pessoa: 'Douglas Crockford', funcao: 'Desenvolvedor Javascript'\n};\n\napresentacao.call(i); // Douglas Crockford é um excelente Desenvolvedor Javascript\n</pre>","titleAsText":"Usando call para chamar a função e especificar o contexto de 'this'"}},{"type":"prose","value":{"id":"especificações","title":"Especificações","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Especificações</th>\n      <th>Status</th>\n      <th>Comentário</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%201st%20edition,%20June%201997.pdf\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"The 'ECMAScript 1st Edition (ECMA-262)' specification\" rel=\" noopener\">ECMAScript 1st Edition (ECMA-262)</a></td>\n      <td><span class=\"spec-standard\">Padrão</span></td>\n      <td>Definição inicial. Implementado no JavaScript 1.3.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/5.1/#sec-15.3.4.4\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 5.1 (ECMA-262)<br><small lang=\"pt-BR\">The definition of 'Function.prototype.call' in that specification.</small></a></td>\n      <td><span class=\"spec-standard\">Padrão</span></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.call\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"pt-BR\">The definition of 'Function.prototype.call' in that specification.</small></a></td>\n      <td><span class=\"spec-standard\">Padrão</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores","isH3":false,"query":"javascript.builtins.Function.call","dataURL":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/call/bcd.json"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li>\n  <li><a href=\"/en-US/docs/Learn/JavaScript/Objects\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Introdução à JavaScript Orientado à Objetos (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"Introdução","id":"introdução"},{"text":"Sintaxe","id":"sintaxe"},{"text":"Descrição","id":"descrição"},{"text":"Exemplos","id":"exemplos"},{"text":"Especificações","id":"especificações"},{"text":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores"},{"text":"Veja também","id":"veja_também"}],"summary":"O método call() invoca uma função com um dado valor this e argumentos passados individualmente.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Function.prototype.call()","locale":"en-US","native":"English (US)"},{"title":"Function.prototype.call()","locale":"es","native":"Español"},{"title":"Function.prototype.call()","locale":"fr","native":"Français"},{"title":"Function.prototype.call()","locale":"ja","native":"日本語"},{"title":"Function.prototype.call()","locale":"ko","native":"한국어"},{"title":"Function.prototype.call()","locale":"ru","native":"Русский"},{"title":"Function.prototype.call()","locale":"zh-CN","native":"中文 (简体)"},{"title":"Function.prototype.call","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"pt-br/web/javascript/reference/global_objects/function/call","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/javascript/reference/global_objects/function/call/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference","title":"Referência JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects","title":"Objetos Globais"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function","title":"Function"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/call","title":"Function.prototype.call()"}],"pageTitle":"Function.prototype.call() - JavaScript | MDN","noIndexing":false}}