{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Símbolo","mdn_url":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"<ol><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol\"><code>Symbol</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriedades</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator\"><code>Symbol.asyncIterator</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/description\"><code>Symbol.prototype.description</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/hasInstance\"><code>Symbol.hasInstance</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/isConcatSpreadable\"><code>Symbol.isConcatSpreadable</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator\"><code>Symbol.iterator</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/match\"><code>Symbol.match</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/matchAll\"><code>Symbol.matchAll</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/replace\"><code>Symbol.replace</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/search\"><code>Symbol.search</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/species\"><code>Symbol.species</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/split\"><code>Symbol.split</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive\"><code>Symbol.toPrimitive</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag\"><code>Symbol.toStringTag</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/unscopables\"><code>Symbol.unscopables</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Métodos</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/@@toPrimitive\"><code>Symbol.prototype[@@toPrimitive]</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for\"><code>Symbol.for()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/keyFor\"><code>Symbol.keyFor()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toString\"><code>Symbol.prototype.toString()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/valueOf\"><code>Symbol.prototype.valueOf()</code> <small>(en-US)</small></a></li></ol></li><li><strong>Herança:</strong></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Propriedades</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li><a href=\"#\"><strong>Métodos</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriedades</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Métodos</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":"sumário","title":"Sumário","isH3":false,"content":"<p>A função <code>Symbol()</code> retorna um valor do tipo <strong>símbolo (symbol)</strong>, tem propriedades estáticas que expõem vários membros dos objetos nativos, possuem métodos estáticos que expõem o registro de símbolos globais e se parecem com uma classe de objeto nativo, mas estão incompletos como construtor porque não suportam a sintaxe \"<code>new Symbol()</code>\".</p>\n<p>Cada valor símbolo retornado de <code>Symbol()</code> é único. Um símbolo pode ser usado como o identificador para propriedades de objetos; esse é o único propósito do tipo de dado. Algumas explicações sobre propósito e uso podem ser encontradas <a href=\"/pt-BR/docs/conflicting/Web/JavaScript/Reference/Global_Objects/Symbol\">no verbete do glossário para Symbol</a>.</p>\n<p>O tipo de dado <strong>símbolo</strong> é um <a href=\"/pt-BR/docs/Glossary/Primitive\">tipo de dado primitivo</a>.</p>"}},{"type":"prose","value":{"id":"sintaxe","title":"Sintaxe","isH3":false,"content":"<pre class=\"notranslate\">Symbol([descrição])\n</pre>"}},{"type":"prose","value":{"id":"parâmetros","title":"Parâmetros","isH3":true,"content":"<dl>\n  <dt id=\"descrição\"><code>descrição</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>String opcional. Uma descrição de símbolo no qual pode ser usado para debugar, mas não para acessar o próprio símbolo.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"descrição_2","title":"Descrição","isH3":false,"content":"<p>Para criar um novo símbolo primitivo, simplesmente escreva <code>Symbol()</code> com uma string opcional para sua descrição:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> sym1 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> sym2 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> sym3 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>O código acima cria três símbolos novos. Note que a função <strong><em>Symbol(\"foo\")</em></strong> não faz a string <strong><em>\"foo\"</em></strong> ser um símbolo. Ela cria um novo símbolo a cada vez que é chamada:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre></div>\n<p>A sintaxe a seguir com o operador <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a> vai resultar em um <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> sym <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError</span>\n</code></pre></div>\n<p>Isso evita que os autores criem um objeto empacotador explícito de <code>Symbol</code> em vez de um novo valor de símbolo. O que pode surpreender, pois, geralmente é possível criar objetos empacotadores explícitos em torno de tipos de dados primitivos (por exemplo, <code>new Boolean</code>, <code>new String</code> e <code>new Number</code>).</p>\n<p>Se você realmente quiser criar um objeto empacotador de <code>Symbol</code>, você pode usar a função <code>Object()</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> sym <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> sym<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// \"symbol\"</span>\n<span class=\"token keyword\">var</span> symObj <span class=\"token operator\">=</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>sym<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> symObj<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"object\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"símbolos_compartilhados_no_registro_global_de_símbolo","title":"Símbolos compartilhados no registro global de símbolo","isH3":true,"content":"<p>A sintaxe acima usando a função <code>Symbol()</code> não criará um símbolo global que estará disponível em todo o seu código. Para criar símbolos disponíveis em vários arquivos em um escopo como se fosse global, use os métodos <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for\"><code>Symbol.for()</code> <small>(en-US)</small></a> e <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/keyFor\"><code>Symbol.keyFor()</code> <small>(en-US)</small></a> para definir e configurar símbolos no registro global de símbolo.</p>"}},{"type":"prose","value":{"id":"encontrando_propriedades_de_símbolos_em_objetos","title":"Encontrando propriedades de símbolos em objetos","isH3":true,"content":"<p>O método <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a> retorna um array de símbolos e permite que você encontre propriedades de símbolos em um determinado objeto. Observe que cada objeto é inicializado sem suas próprias propriedades de símbolo, de modo que este array estará vazio, a menos que você estabeleça propriedades de símbolo no objeto.</p>"}},{"type":"prose","value":{"id":"propriedades","title":"Propriedades","isH3":false,"content":"<dl>\n  <dt id=\"symbol.length\"><code>Symbol.length</code></dt>\n  <dd>\n    <p>Propriedade de tamanho cujo valor é 1.</p>\n  </dd>\n  <dt id=\"symbol.prototype_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\"><code>Symbol.prototype</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Representa o protótipo do <code>Symbol</code> construtor.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"símbolos_conhecidos","title":"Símbolos conhecidos","isH3":true,"content":"<p>Em adição para seus próprios símbolos, JavaScript possui alguns símbolos built-in que representa os comportamentos internos da linguagem que não foram revelados para os desenvolvedores no ECMAScript 5 e anterior. Esses símbolos podem ser acessados usando as seguintes propriedades:</p>\n<dl>\n  <dt id=\"symbol.hasinstance\">Symbol.hasInstance</dt>\n  <dd>\n    <p>Especificado como @@hasInstance. Um método que determina se um construtor de um objeto é reconhecido como a instância de um objeto. Usado por <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/instanceof\"><code>instanceof</code></a>.</p>\n  </dd>\n  <dt id=\"symbol.isconcatspreadable\">Symbol.isConcatSpreadable</dt>\n  <dd>\n    <p>Especificado como @@isConcatSpreadable. Um valor Booleano indicando se um objeto deve ser adicionado como elemento de uma array. Usado por <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"><code>Array.prototype.concat()</code></a>.</p>\n  </dd>\n  <dt id=\"symbol.isregexp\">Symbol.isRegExp</dt>\n  <dd>\n    <p>Especificado como @@isRegExp. Um valor Booleano indicando se um objeto pode ser usado como uma expressão regular.</p>\n  </dd>\n  <dt id=\"symbol.iterator\">Symbol.iterator</dt>\n  <dd>\n    <p>Especificado como @@iterator. Um método retornando o iterador padrão para um objeto. Usado por <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a>.</p>\n  </dd>\n  <dt id=\"symbol.toprimitive\">Symbol.toPrimitive</dt>\n  <dd>\n    <p>Especificado como @@toPrimitive. Um método convertendo um objeto para um valor primitivo.</p>\n  </dd>\n  <dt id=\"symbol.tostringtag\">Symbol.toStringTag</dt>\n  <dd>\n    <p>Especificado como @@toStringTag. Um valor string usado para descrição padrão de um objeto. Usado por <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></p>\n  </dd>\n  <dt id=\"symbol.unscopables\">Symbol.unscopables</dt>\n  <dd>\n    <p>Especificado como @@unscopables. Uma Array com valores string que são valores propriedade. Esses são excluídos das ligações com o objeto associado.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"métodos","title":"Métodos","isH3":false,"content":"<dl>\n  <dt id=\"symbol.forkey_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for\"><code>Symbol.for(key)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Procura por símbolos existentes com as chaves dada e retorna as chaves se forem encontradas. Caso contrário um novo símbolo será criado no registro de símbolo global com essa chave.</p>\n  </dd>\n  <dt id=\"symbol.keyforsym_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/keyFor\"><code>Symbol.keyFor(sym)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Retorna um símbolo compartilhado do registro global de símbolo para o símbolo dado.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"symbol_protótipo","title":"<code>Symbol</code> protótipo","isH3":false,"content":"<p>Todos os símbolos herdados de <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\"><code>Symbol.prototype</code> <small>(en-US)</small></a>.</p>","titleAsText":"Symbol protótipo"}},{"type":"prose","value":{"id":"propriedades_2","title":"Propriedades","isH3":true,"content":"{{page('en-US/Web/JavaScript/Reference/Global_Objects/Symbol/prototype','Properties')}}"}},{"type":"prose","value":{"id":"métodos_2","title":"Métodos","isH3":true,"content":"{{page('en-US/Web/JavaScript/Reference/Global_Objects/Symbol/prototype','Methods')}}"}},{"type":"prose","value":{"id":"exemplos","title":"Exemplos","isH3":false,"content":""}},{"type":"prose","value":{"id":"usando_o_operador_typeof_com_símbolos","title":"Usando o operador <code>typeof</code> com símbolos","isH3":true,"content":"<p>O operador <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/typeof\"><code>typeof</code></a> pode ajudar a identificar os símbolos.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">typeof</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'symbol'</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'symbol'</span>\n<span class=\"token keyword\">typeof</span> Symbol<span class=\"token punctuation\">.</span>iterator <span class=\"token operator\">===</span> <span class=\"token string\">'symbol'</span>\n</code></pre></div>","titleAsText":"Usando o operador typeof com símbolos"}},{"type":"prose","value":{"id":"conversões_de_tipos_de_símbolos","title":"Conversões de tipos de símbolos","isH3":true,"content":"<p>Algumas anotações quando trabalhando com conversão de tipo de símbolos.</p>\n<ul>\n  <li>\n    Quando estiver tentando converter um símbolo para um número, um <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> será retornado.\n    (e.g. <code>+sym</code> or <code>sym | 0</code>).\n  </li>\n  <li>Quando usando operador de igualdade, <code>Object(sym) == sym</code> retorna <code>true</code>.</li>\n  <li><code>Symbol(\"foo\") + \"bar\"</code> lança um <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> (não pode converter um símbolo para string). Isso previne você de silenciosamente criar um novo nome de propriedade string a partir de um símbolo, por exemplo.</li>\n  <li>A <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String#string_conversion\">\"safer\" <code>String(sym)</code> conversion</a> funciona como uma chamada para <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toString\"><code>Symbol.prototype.toString()</code> <small>(en-US)</small></a> com símbolos, mas note que uma <code>new String(sym)</code> será lançada.</li>\n</ul>"}},{"type":"prose","value":{"id":"símbolos_e_for...in_iteração","title":"Símbolos e <code>for...in</code> iteração","isH3":true,"content":"<p>Símbolos não são visíveis em <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a> iterações. Além de, <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a> não retornará propriedades do objeto símbolo, entretanto, você pode fazer uso do <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a> para conseguir esses resultados.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nobj<span class=\"token punctuation\">[</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">[</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// logs \"c\" and \"d\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","titleAsText":"Símbolos e for...in iteração"}},{"type":"prose","value":{"id":"símbolos_e_json.stringify","title":"Símbolos e <code>JSON.stringify()</code>","isH3":true,"content":"<p>Propriedade com chave de símbolo vão ser completamente ignoradas quando usando <code>JSON.stringify()</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{}'</span>\n</code></pre></div>\n<p>Para mais detalhes, veja <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a>.</p>","titleAsText":"Símbolos e JSON.stringify()"}},{"type":"prose","value":{"id":"objeto_wrapper_de_símbolo_como_chave_de_propriedade","title":"Objeto wrapper de símbolo como chave de propriedade","isH3":true,"content":"<p>Quando um objeto wrapper de um símbolo é usado como uma chave de propriedade, esse objeto será coerced para o seu símbolo wrapper:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> sym <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>sym<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">[</span>sym<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 1</span>\nobj<span class=\"token punctuation\">[</span><span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>sym<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// still 1</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"especificações","title":"Especificações","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Specification</th>\n      <th>Status</th>\n      <th>Comment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-symbol-objects\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"pt-BR\">The definition of 'Symbol' in that specification.</small></a></td>\n      <td><span class=\"spec-standard\">Padrão</span></td>\n      <td>Definição inicial.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores","isH3":false,"query":"javascript.builtins.Symbol","dataURL":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol/bcd.json"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n  <li><a href=\"/pt-BR/docs/conflicting/Web/JavaScript/Reference/Global_Objects/Symbol\">Glossary: Symbol data type</a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/typeof\"><code>typeof</code></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Data_structures\">Data types and data structures</a></li>\n</ul>"}}],"toc":[{"text":"Sumário","id":"sumário"},{"text":"Sintaxe","id":"sintaxe"},{"text":"Descrição","id":"descrição_2"},{"text":"Propriedades","id":"propriedades"},{"text":"Métodos","id":"métodos"},{"text":"<code>Symbol</code> protótipo","id":"symbol_protótipo"},{"text":"Exemplos","id":"exemplos"},{"text":"Especificações","id":"especificações"},{"text":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores"},{"text":"Veja também","id":"veja_também"}],"summary":"A função Symbol() retorna um valor do tipo símbolo (symbol), tem propriedades estáticas que expõem vários membros dos objetos nativos, possuem métodos estáticos que expõem o registro de símbolos globais e se parecem com uma classe de objeto nativo, mas estão incompletos como construtor porque não suportam a sintaxe \"new Symbol()\".","popularity":0.0021,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Symbol","locale":"en-US","native":"English (US)"},{"title":"Symbol","locale":"es","native":"Español"},{"title":"Symbol","locale":"fr","native":"Français"},{"title":"Symbol (シンボル)","locale":"ja","native":"日本語"},{"title":"Symbol","locale":"ko","native":"한국어"},{"title":"Symbol","locale":"ru","native":"Русский"},{"title":"Symbol","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"pt-br/web/javascript/reference/global_objects/symbol","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/javascript/reference/global_objects/symbol/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference","title":"Referência JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects","title":"Objetos Globais"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol","title":"Símbolo"}],"pageTitle":"Símbolo - JavaScript | MDN","noIndexing":false}}