{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Object.prototype.toString()","mdn_url":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toString","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"<ol><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriedades</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Métodos</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\"><code>Object.freeze()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"><code>Object.fromEntries()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\"><code>Object.getOwnPropertyDescriptors()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn\"><code>Object.hasOwn()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\"><code>Object.isFrozen()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\"><code>Object.isSealed()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\"><code>Object.seal()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><em><code>Object.prototype.toString()</code></em></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/values\"><code>Object.values()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":"sumário","title":"Sumário","isH3":false,"content":"<p>O método <code>toString()</code> retorna uma string representando o objeto.</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/object-prototype-tostring.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"sintaxe","title":"Sintaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>obj<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"descrição","title":"Descrição","isH3":false,"content":"<p>Todo objeto possui um método <code>toString()</code> que é chamado automaticamente quando o objeto precisa ser representado como um valor em texto ou quando o objeto é referenciado de uma maneira que requeira uma string. Por padrão, o método <code>toString()</code> é herdado de todo objeto descendente de <code>Object</code>. Se e o método não é sobrescrito em um objeto personalizado, <code>toString()</code> retorna \"[object <em>type</em>]\", onde <code>type</code> é o tipo do objeto. O código a seguir ilustra isso:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\no<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// retorna [object Object]</span>\n</code></pre></div>\n<blockquote>\n  <p><strong>Nota:</strong> Starting in JavaScript 1.8.5 <code>toString()</code> called on <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> returns <code>[object Null]</code>, and <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> returns <code>[object Undefined]</code>, as defined in the 5th Edition of ECMAScript and a subsequent Errata. See <a href=\"#example:_using_tostring_to_detect_object_type\">Using toString to detect object type</a>.</p>\n</blockquote>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"exemplo_sobrepondo_o_método_inicial_tostring","title":"Exemplo: Sobrepondo o método inicial <code>toString</code>","isH3":true,"content":"<p>Você pode criar uma função para ser chamada no lugar do método <code>toString()</code>. O método <code>toString()</code> não requer parâmetros e deve retornar uma string. O método <code>toString()</code> criado por você pode ter o valor que quiser, mas será mais útil se usar informações do objeto.</p>\n<p>O código abaixo define o objeto <code>Dog</code> e cria <code>theDog</code>, um objeto do tipo <code>Dog</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> breed<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> sex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>breed <span class=\"token operator\">=</span> breed<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ntheDog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Gabby'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'chocolate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Se você chamar o método <code>toString()</code> neste objeto, ele retornará o valor original herdado de <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>theDog<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns [object Object]</span>\n</code></pre></div>\n<p>O código abaixo cria e faz com que <code>dogToString()</code> sobrescreva o <code>toString()</code> original. Esta função gera uma string contendo <strong>name, breed, color, and sex</strong> do objeto, na forma de \"<code>propriedade = valor;</code>\".</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">toString</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">dogToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ret <span class=\"token operator\">=</span> <span class=\"token string\">'Dog '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">' is a '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>breed<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Usando este código, toda vez que <code>theDog</code> for usado em um texto (string), JavaScript automaticamente chamará a função <code>dogToString()</code>, a qual retornará:</p>\n<pre class=\"notranslate\">Dog Gabby is a female chocolate Lab\n</pre>","titleAsText":"Exemplo: Sobrepondo o método inicial toString"}},{"type":"prose","value":{"id":"exemplo_usando_tostring_para_detectar_a_classe_do_objeto","title":"Exemplo: Usando <code>toString()</code> para detectar a classe do objeto","isH3":true,"content":"<p><code>toString()</code> pode ser usado com qualquer objeto e permite que você determine sua classe. Para usar <code>Object.prototype.toString()</code> com qualquer objeto, deverá chamar <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a> ou <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a> nele, passando o objeto que quer inspecionar como o primeiro parâmetro, chamado <code>thisArg</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> toString <span class=\"token operator\">=</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// [object Date]</span>\n<span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// [object String]</span>\n<span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// [object Math]</span>\n\n<span class=\"token comment\">// Since JavaScript 1.8.5</span>\n<span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// [object Undefined]</span>\n<span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// [object Null]</span>\n</code></pre></div>","titleAsText":"Exemplo: Usando toString() para detectar a classe do objeto"}},{"type":"specifications","value":{"title":"Especificações","id":"especificações","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.prototype.tostring","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Object.toString"}},{"type":"browser_compatibility","value":{"title":"Compatibilidade","id":"compatibilidade","isH3":false,"query":"javascript.builtins.Object.toString","dataURL":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toString/bcd.json"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n  <li><a href=\"/pt-BR/docs/conflicting/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toSource()</code></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li>\n</ul>"}}],"toc":[{"text":"Sumário","id":"sumário"},{"text":"Sintaxe","id":"sintaxe"},{"text":"Descrição","id":"descrição"},{"text":"Examples","id":"examples"},{"text":"Especificações","id":"especificações"},{"text":"Compatibilidade","id":"compatibilidade"},{"text":"Veja também","id":"veja_também"}],"summary":"O método toString() retorna uma string representando o objeto.","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Object.prototype.toString()","locale":"en-US","native":"English (US)"},{"title":"Object.prototype.toString()","locale":"es","native":"Español"},{"title":"Object.prototype.toString()","locale":"fr","native":"Français"},{"title":"Object.prototype.toString()","locale":"ja","native":"日本語"},{"title":"Object.prototype.toString()","locale":"ko","native":"한국어"},{"title":"Object.prototype.toString()","locale":"ru","native":"Русский"},{"title":"Object.prototype.toString()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"pt-br/web/javascript/reference/global_objects/object/tostring","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/javascript/reference/global_objects/object/tostring/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference","title":"Referência JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects","title":"Objetos Globais"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object","title":"Object"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toString","title":"Object.prototype.toString()"}],"pageTitle":"Object.prototype.toString() - JavaScript | MDN","noIndexing":false}}