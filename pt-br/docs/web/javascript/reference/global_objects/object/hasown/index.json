{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Object.hasOwn()","mdn_url":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"<ol><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriedades</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Métodos</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\"><code>Object.freeze()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"><code>Object.fromEntries()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\"><code>Object.getOwnPropertyDescriptors()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a></li><li><em><code>Object.hasOwn()</code></em></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\"><code>Object.isFrozen()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\"><code>Object.isSealed()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\"><code>Object.seal()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/values\"><code>Object.values()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>O método estático <strong><code>Object.hasOwn()</code></strong> retorna <code>true</code> se o objeto específicado tem a propriedade indicada como sua propriedade <em>own</em>. Se a propriedade é herdada, ou não existe, o método retorna <code>false</code>.</p>\n<blockquote>\n  <p><strong>Nota:</strong> <code>Object.hasOwn()</code> Tem a intenção de substituir <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.hasOwnProperty()</code></a>.</p>\n</blockquote><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/object-hasown.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"sintaxe","title":"Sintaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parâmetros","title":"Parâmetros","isH3":true,"content":"<dl>\n  <dt id=\"instance\"><code>instance</code></dt>\n  <dd>\n    <p>A instância do objeto javascript para o teste.</p>\n  </dd>\n  <dt id=\"prop\"><code>prop</code></dt>\n  <dd>\n    <p>O nome <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> ou <a href=\"/pt-BR/docs/conflicting/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a> da propriedade para teste.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"retorna_valor","title":"Retorna valor","isH3":true,"content":"<p><code>true</code> se o objeto especificado definiu diretamente a propriedade especificada. Por outro lado <code>false</code>.</p>"}},{"type":"prose","value":{"id":"descrição","title":"Descrição","isH3":false,"content":"<p>O método <strong><code>Object.hasOwn()</code></strong> retorna <code>true</code> se a propriedade especificada é uma propriedade direta do objeto - mesmo se o valor da propriedade é <code>null</code> ou <code>undefined</code>.</p>\n<p>O método retorna <code>false</code> se a propriedade é herdada, ou não foi declarada. Diferente do operador <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/in\"><code>in</code></a>, este método não verifica pela propriedade específica na cadeia do objeto.</p>\n<p>Ele é mais recomendado do que <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.hasOwnProperty()</code></a> porque ele funciona para objetos criados utilizando <code>Object.create(null)</code> e com objetos que sobescreveram o método herdado <code>hasOwnProperty()</code>. É possível contornar esse problema chamando o <code>Object.prototype.hasOwnProperty()</code> em um objeto externo,<code>Object.hasOwn()</code> é mais intuítivo.</p>"}},{"type":"prose","value":{"id":"exemplos","title":"Exemplos","isH3":false,"content":""}},{"type":"prose","value":{"id":"utilizando_hasown_para_o_teste_de_propriedades_existentes","title":"Utilizando hasOwn para o teste de propriedades existentes","isH3":true,"content":"<p>O seguinte código mostra como determinar se o seguinte objeto <code>example</code> contém a propriedade <code>prop</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> example <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">,</span> <span class=\"token string\">\"prop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false = 'prop' ela não foi definida</span>\n\nexample<span class=\"token punctuation\">.</span>prop <span class=\"token operator\">=</span> <span class=\"token string\">\"exists\"</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">,</span> <span class=\"token string\">\"prop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true - 'prop' ela foi definida</span>\n\nexample<span class=\"token punctuation\">.</span>prop <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">,</span> <span class=\"token string\">\"prop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true - a propriedade existe com o valor null</span>\n\nexample<span class=\"token punctuation\">.</span>prop <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">,</span> <span class=\"token string\">\"prop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true - a propriedade existe com o valor undefined</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"propriedaedes_direta_vs._herdada","title":"Propriedaedes direta vs. herdada","isH3":true,"content":"<p>O seguinte exemplo diferencia entre propriedade direta e proprietade errada através do prototype chain:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> example <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nexample<span class=\"token punctuation\">.</span>prop <span class=\"token operator\">=</span> <span class=\"token string\">\"exists\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// `hasOwn` Só retornará true para propriedades diretas will:</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">,</span> <span class=\"token string\">\"prop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns true</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">,</span> <span class=\"token string\">\"toString\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns false</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">,</span> <span class=\"token string\">\"hasOwnProperty\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns false</span>\n\n<span class=\"token comment\">// O operador `in` só retornara tru para propriedades diretas ou herdadas:</span>\n<span class=\"token string\">\"prop\"</span> <span class=\"token keyword\">in</span> example<span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns true</span>\n<span class=\"token string\">\"toString\"</span> <span class=\"token keyword\">in</span> example<span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns true</span>\n<span class=\"token string\">\"hasOwnProperty\"</span> <span class=\"token keyword\">in</span> example<span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns true</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"iterando_sobre_as_propriedades_de_um_objeto","title":"Iterando sobre as propriedades de um objeto","isH3":true,"content":"<p>Para itererar sobre inúmeras propriedades de um objeto, você deve usar:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> example <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">bar</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> name <span class=\"token keyword\">of</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// …</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Mas se você precisa utilizar <code>for...in</code>, você pode utilziar <code>Object.hasOwn()</code> para pular as propriedades herdadas.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> example <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">bar</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> name <span class=\"token keyword\">in</span> example<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// …</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"verificando_se_um_index_existe_em_um_array","title":"Verificando se um index existe em um array","isH3":true,"content":"<p>Os elementos de um <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> são definidos como propriedades diretas, você pode utilizar o método <code>hasOwn()</code> para verificar se existe um index específico:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Watermelon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Orange\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true ('Orange')</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false - not defined</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"casos_problematicos_para_hasownproperty","title":"Casos problematicos para hasOwnProperty","isH3":true,"content":"<p>Essa seção demonstra <code>hasOwn()</code> é imune aos problemas que afetam <code>hasOwnProperty</code>. Primeiramente, ele pode ser uasdos em objetos que foram reimplementados <code>hasOwnProperty()</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> foo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">bar</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The dragons be out of office\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true - reimplementação do hasOwnProperty() não afetara o objeto</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Ele pode ser usado para testar objetos criados utilizando <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create(null)</code></a>. Esses não são herdados de <code>Object.prototype</code>, e assim o <code>hasOwnProperty()</code> é inacessível</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> foo <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfoo<span class=\"token punctuation\">.</span>prop <span class=\"token operator\">=</span> <span class=\"token string\">\"exists\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwn</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"prop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">.</span>prop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true - Funciona independente de como o objeto é criado.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Especificações","id":"especificações","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/proposal-accessible-object-hasownproperty/#sec-object.hasown","title":"Accessible Object.hasOwnProperty"}],"query":"javascript.builtins.Object.hasOwn"}},{"type":"browser_compatibility","value":{"title":"Compabitiblidade de navegadores","id":"compabitiblidade_de_navegadores","isH3":false,"query":"javascript.builtins.Object.hasOwn","dataURL":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn/bcd.json"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-object\" class=\"external\" rel=\" noopener\">Polyfill of <code>Object.hasOwn</code> in <code>core-js</code></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.hasOwnProperty()</code></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Enumerability and ownership of properties</a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/in\"><code>in</code></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">JavaScript Guide: Inheritance revisited</a></li>\n</ul>"}}],"toc":[{"text":"Sintaxe","id":"sintaxe"},{"text":"Descrição","id":"descrição"},{"text":"Exemplos","id":"exemplos"},{"text":"Especificações","id":"especificações"},{"text":"Compabitiblidade de navegadores","id":"compabitiblidade_de_navegadores"},{"text":"Veja também","id":"veja_também"}],"summary":"O método estático Object.hasOwn() retorna true se o objeto específicado tem a propriedade indicada como sua propriedade own. Se a propriedade é herdada, ou não existe, o método retorna false.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Object.hasOwn()","locale":"en-US","native":"English (US)"},{"title":"Object.hasOwn()","locale":"fr","native":"Français"},{"title":"Object.hasOwn()","locale":"ja","native":"日本語"},{"title":"Object.hasOwn()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"pt-br/web/javascript/reference/global_objects/object/hasown","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/javascript/reference/global_objects/object/hasown/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference","title":"Referência JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects","title":"Objetos Globais"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object","title":"Object"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn","title":"Object.hasOwn()"}],"pageTitle":"Object.hasOwn() - JavaScript | MDN","noIndexing":false}}