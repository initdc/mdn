{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Map","mdn_url":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"<ol><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map\"><code>Map</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriedades</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/@@species\"><code>get Map[@@species]</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/@@toStringTag\"><code>Map.prototype[@@toStringTag]</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/size\"><code>Map.prototype.size</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Métodos</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\"><code>Map.prototype[@@iterator]()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\"><code>Map.prototype.clear()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\"><code>Map.prototype.delete()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\"><code>Map.prototype.entries()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\"><code>Map.prototype.forEach()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/get\"><code>Map.prototype.get()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/has\"><code>Map.prototype.has()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\"><code>Map.prototype.keys()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/set\"><code>Map.prototype.set()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/values\"><code>Map.prototype.values()</code></a></li></ol></li><li><strong>Herança:</strong></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Propriedades</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype.prototype</code> <small>(en-US)</small></a></li></ol></li><li><a href=\"#\"><strong>Métodos</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriedades</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Métodos</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>O objeto <strong><code>Map</code></strong> contém pares de chave-valor e lembra a ordem original da inserção das chaves. Qualquer valor (objetos e <a href=\"/pt-BR/docs/Glossary/Primitive\">valores primitivos</a>) podem ser usados como chave ou valor.</p><iframe class=\"interactive\" height=\"692\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/map.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"descrição","title":"Descrição","isH3":false,"content":"<p>Um objeto <code>Map</code> itera seus elementos na order da inserção - um loop <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a> retorna um array de <code>[key, value]</code> para cada iteração</p>"}},{"type":"prose","value":{"id":"igualdade_de_chaves","title":"Igualdade de chaves","isH3":true,"content":"<ul>\n  <li>A igualdade de chaves é baseada no algoritimo <a href=\"/pt-BR/docs/Web/JavaScript/Equality_comparisons_and_sameness#same-value-zero_equality\"><code>sameValueZero</code></a>.</li>\n  <li>O <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> é considerado o mesmo que o <code>NaN</code> (apesar de <code>NaN !== NaN</code>) e todos os outros valores são considerados de acordo com a semântica do operador <code>===</code>.</li>\n  <li>Na especificação atual do ECMAScript, <code>-0</code> e <code>+0</code> são considerados iguais, embora não tenha sido nos esboços anteriores. Veja <em>\"Equivalência de valor entre -0 e 0\"</em> em <a href=\"#browser_compatibility\">Compatibilidade com navegadores</a> para mais detalhes;</li>\n</ul>"}},{"type":"prose","value":{"id":"objetos_vs._maps","title":"Objetos vs. Maps","isH3":true,"content":"<p>Um <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> é similar o <code>Map</code> - ambos permitem que valores sejam definidos a chaves, retornar esses valores, remover as chaves, e detectar se algo está armazenado na chave. Por esta razão (e porque não existem outras alternativas construídas), o <code>Objeto</code> tem sido usado como <code>Map</code> historicamente.</p>\n<p>Porém, existem diferenças importantes que fazem o <code>Map</code> ser preferido em alguns casos:</p>\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"row\"></th>\n      <th scope=\"col\">Map</th>\n      <th scope=\"col\">Objeto</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Chaves acidentais</th>\n      <td>O <code>Map</code> não contém nenhuma chave por padrão. Ele só contém o que é definido explicitamente nele.</td>\n      <td>\n        <p>Um <code>Objeto</code> tem um prototype, então ele contém por padrão algumas chaves que podem conflitar com suas próprias chaves se você não for cuidadoso.</p>\n        <div class=\"notecard note\" id=\"sect1\">\n          <p><strong>Note:</strong> Apartir do ES5, isso pode ser ignorado com o <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create(null)</code></a>, mas isso raramente é feito.</p>\n        </div>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Tipos das chaves</th>\n      <td>As chaves do <code>Map</code> podem ser qualquer valor (incluindo funções, objetos, ou qualquer outro tipo primitivo).</td>\n      <td>A chave de um <code>Objeto</code> deve ser uma <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> ou um <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol\"><code>Symbol</code></a>.</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Ordem das chaves</th>\n      <td>\n        <p>As chaves dentro do <code>Map</code> são ordenadas de forma simples, de maneira direta: O objeto <code>Map</code> itera suas entradas, chaves, e valor na ordem em que foram inseridas.</p>\n      </td>\n      <td>\n        <p>Embora as chaves de um <code>Objeto</code> comum hoje sejam ordenadas, nem sempre esse foi o caso, e a ordem é complexa. Como resultado é melhor não confiar na ordem das propriedades.</p>\n        <p>\n          A ordem foi definida primeiramente para suas próprias propriedades apenas no ECMAScript 2015; no ECMAScript 2020 a ordem definida é por propriedades herdadas também.\n          Veja o\n          <a href=\"https://tc39.es/ecma262/#sec-ordinaryownpropertykeys\" class=\"external\" rel=\" noopener\">OrdinaryOwnPropertyKeys</a>\n          e\n          <a href=\"https://tc39.es/ecma262/#sec-enumerate-object-properties\" class=\"external\" rel=\" noopener\">numerateObjectProperties\n</a>operações de especificações abstraídas. Mas note que nenhum mecanismo itera <strong>todas</strong> as propriedades do objeto; cada um dos vários mecanismos incluem diferentes subconjuntos de propriedades.\n          (<a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for-in</code></a>\n          incluí apenas propriedades enumeráveis com chaves do tipo string\n          <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys</code></a> inclui apenas chaves próprias e enumeráveis do tipo string;\n          <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames</code></a> incluí o próprio, e propriedades com chaves do tipo string, mesmo que não enumeráveis\n          <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols</code></a> faz o mesmo só que para\n          propriedades <code>Símbolos</code> como chave, etc.)\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">\n        <p>Tamanho</p>\n      </th>\n      <td>\n        O número de items dentro de um <code>Map</code>\n        é facilmente retornado pela propriedade <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/size\"><code>size</code></a>\n      </td>\n      <td>O número de items dentro de um <code>Objeto</code> deve ser determinado manualmente</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Iteração</th>\n      <td>Um <code>Map</code> é <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterável</code></a>, então ele pode ser diretamente iterável</td>\n      <td>\n        <p>O <code>Objeto</code> não implementa o <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\">protocolo de iteração</a>, e os objetos não podem ser iterados diretamente usando o <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a> (por padrão).</p>\n        <div class=\"notecard note\" id=\"sect2\">\n          <p><strong>Nota:</strong></p>\n          <ul>\n            <li>Um objeto pode implementar o protocolo de iteração, ou pode ser iterado usando o <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys</code></a>ou<a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries</code></a>.</li>\n            <li>\n              A declaração <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a>\n              permite que você itere pela propriedades enumeráveis de um objeto.\n            </li>\n          </ul>\n        </div>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Performance</th>\n      <td>\n        <p>Perfoma melhor em cenários envolvendo adições e remoções frequentes em pares chave-valor.</p>\n      </td>\n      <td>\n        <p>Não é otimizado para adições e remoções frequentes de pares chave-valor.</p>\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Serialização e análise sintática</th>\n      <td>\n        <p>Não há suporte nativo para a serialização ou análise sintática.</p>\n        <p>\n          (Mas você pode construir sua própria serialização e conversão para o <code>Map</code> usando o\n          <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a> como o argumento <em>replacer</em>,\n          e usando o <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> com o argumento <em>reviver</em>.\n          Veja a questão no Stack Overflow <a href=\"https://stackoverflow.com/q/29085197/\" class=\"external\" rel=\" noopener\">How do you JSON.stringify an ES6 Map?</a>).\n        </p>\n      </td>\n      <td>\n        <p>Suporte nativo para serialização de <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Objeto</code></a> para JSON, usando <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a>.</p>\n        <p>Suporte nativo para conversão de JSON para <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Objeto</code></a> usando <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a>.</p>\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"definindo_propriedades_no_objeto","title":"Definindo propriedades no objeto","isH3":true,"content":"<p>Definir propriedades no objeto também funciona em objetos <code>Map</code>, e pode causar um confusão considerável.</p>\n<p>Portanto, isso aparenta funcionar de certa forma:</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">const</span> wrongMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nwrongMap<span class=\"token punctuation\">[</span><span class=\"token string\">'bla'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'blaa'</span>\nwrongMap<span class=\"token punctuation\">[</span><span class=\"token string\">'bla2'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'blaaa2'</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>wrongMap<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Map { bla: 'blaa', bla2: 'blaaa2' }</span>\n</code></pre></div>\n<p>Mas esse jeito de definir propriedades não interage com a estrura de dados do <code>Map</code>. Dessa forma é usada a implementação genérica do objeto. O valor 'bla' não é armazenado no <code>Map</code> para queries. Outras operaçãoes nos dados irão falhar.</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code>wrongMap<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bla'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// false</span>\nwrongMap<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bla'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>wrongMap<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Map { bla: 'blaa', bla2: 'blaaa2' }</span>\n</code></pre></div>\n<p>A maneira correta para armazenar dados dentro do <code>Map</code> é através do <code>set(key,value)</code></p>\n<div class=\"code-example\"><pre class=\"brush: js example-good notranslate\"><code><span class=\"token keyword\">const</span> contacts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncontacts<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Jessie'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">phone</span><span class=\"token operator\">:</span> <span class=\"token string\">\"213-555-1234\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">\"123 N 1st Ave\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ncontacts<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Jessie'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\ncontacts<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hilary'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span>\ncontacts<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hilary'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">phone</span><span class=\"token operator\">:</span> <span class=\"token string\">\"617-555-4321\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">address</span><span class=\"token operator\">:</span> <span class=\"token string\">\"321 S 2nd St\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ncontacts<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Jessie'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {phone: \"213-555-1234\", address: \"123 N 1st Ave\"}</span>\ncontacts<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Raymond'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\ncontacts<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Jessie'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>contacts<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"construtor","title":"Construtor","isH3":false,"content":"<dl>\n  <dt id=\"map\"><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/Map\"><code>Map()</code></a></dt>\n  <dd>\n    <p>Cria um novo objeto <code>Map</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"propriedades_estáticas","title":"propriedades estáticas","isH3":false,"content":"<dl>\n  <dt id=\"get_mapspecies\"><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/@@species\"><code>get Map[@@species]</code></a></dt>\n  <dd>\n    <p>A função do construtor que é usada para criar apartir de objetos.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"propriedades_da_instância","title":"propriedades da instância","isH3":false,"content":"<dl>\n  <dt id=\"map.prototype.size\"><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/size\"><code>Map.prototype.size</code></a></dt>\n  <dd>\n    <p>Retorna o número de pares chave/valor no objeto <code>Map</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"métodos_da_instância","title":"Métodos da instância","isH3":false,"content":"<ul>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\"><code>Map.prototype.clear()</code></a>\n    <ul>\n      <li>: Remove todos os pares chave/valor do objeto <code>Map</code>.</li>\n    </ul>\n  </li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\"><code>Map.prototype.delete(<var>key</var>)</code></a>\n    <ul>\n      <li>: Retorna <code>true</code> se o elemento no objeto <code>Map</code> existia e tenha sido removido, ou <code>false</code></li>\n    </ul>se o elemento não existia. <code>Map.prototype.has(key)</code> irá retornar <code>false</code> após isso.\n  </li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/get\"><code>Map.prototype.get(<var>key</var>)</code></a>\n    <ul>\n      <li>: Retorna o valor associado à chave, ou <code>undefined</code> se não há nada.</li>\n    </ul>\n  </li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/has\"><code>Map.prototype.has(<var>key</var>)</code></a>\n    <ul>\n      <li>: Retorna uma asserção booleana se o valor tenha sido associado à chave no objeto <code>Map</code> ou não.</li>\n    </ul>\n  </li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/set\"><code>Map.prototype.set(<var>key</var>, <var>value</var>)</code></a>\n    <ul>\n      <li>: Define o <code>valor</code> para a <code>chave</code> no objeto <code>Map</code>. Retorna o objeto <code>Map</code></li>\n    </ul>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"métodos_iterativos","title":"Métodos iterativos","isH3":true,"content":"<dl>\n  <dt id=\"map.prototypeiterator\"><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\"><code>Map.prototype[@@iterator]()</code></a></dt>\n  <dd>\n    <p>Retorna um novo objeto iterador que contèm <strong>um array de <code>[chave, valor]</code></strong> para cada elemento do objeto <code>Map</code> na ordem em que foram inseridos.</p>\n  </dd>\n  <dt id=\"map.prototype.keys\"><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\"><code>Map.prototype.keys()</code></a></dt>\n  <dd>\n    <p>Retorna um novo objeto iterador que contèm as <strong>chaves</strong> de cada elemento do objeto <code>Map</code> na ordem em que foram inseridos.</p>\n  </dd>\n  <dt id=\"map.prototype.values\"><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/values\"><code>Map.prototype.values()</code></a></dt>\n  <dd>\n    <p>Retorna um novo objeto iterador que contém os <strong>valores</strong> para cada elemento do objeto <code>Map</code> na ordem em que foram inseridos.</p>\n  </dd>\n  <dt id=\"map.prototype.entries\"><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\"><code>Map.prototype.entries()</code></a></dt>\n  <dd>\n    <p>\n      Retorna um novo objeto iterador que contèm <strong>um array de <code>[chave, valor]</code></strong>\n      para cada elemento no objeto <code>Map</code> na ordem em que foram inseridos.\n    </p>\n  </dd>\n  <dt id=\"map.prototype.foreachcallbackfn_thisarg\"><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\"><code>Map.prototype.forEach(<var>callbackFn</var>[,\n    <var>thisArg</var>])</code></a></dt>\n  <dd>\n    <p>Invoca o <code>callbackFn</code> uma vez para cada par chave-valor presente no objeto <code>Map</code>, na ordem em que foram inseridos. Se um parâmetro <code>thisArg</code> é provido para o <code>forEach</code>, será usado o valor de <code>this</code> para cada callback.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemplos","title":"Exemplos","isH3":false,"content":""}},{"type":"prose","value":{"id":"usando_o_objeto_map","title":"Usando o objeto Map","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> keyString <span class=\"token operator\">=</span> <span class=\"token string\">'a string'</span>\n<span class=\"token keyword\">const</span> keyObj    <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">keyFunc</span>   <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// setting the values</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>keyString<span class=\"token punctuation\">,</span> <span class=\"token string\">\"value associated with 'a string'\"</span><span class=\"token punctuation\">)</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>keyObj<span class=\"token punctuation\">,</span> <span class=\"token string\">'value associated with keyObj'</span><span class=\"token punctuation\">)</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>keyFunc<span class=\"token punctuation\">,</span> <span class=\"token string\">'value associated with keyFunc'</span><span class=\"token punctuation\">)</span>\n\nmyMap<span class=\"token punctuation\">.</span>size              <span class=\"token comment\">// 3</span>\n\n<span class=\"token comment\">// getting the values</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>keyString<span class=\"token punctuation\">)</span>    <span class=\"token comment\">// \"valor associado a 'a string'\"</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>keyObj<span class=\"token punctuation\">)</span>       <span class=\"token comment\">// \"valor associado a keyObj\"</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>keyFunc<span class=\"token punctuation\">)</span>      <span class=\"token comment\">// \"valor associado a keyFunc\"</span>\n\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a string'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// \"valor associado a 'a string'\"</span>\n                         <span class=\"token comment\">// porque keyString === 'a string'</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>            <span class=\"token comment\">// undefined, porque keyObj !== {}</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined, porque keyFunc !== function () {}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"usando_nan_como_chaves_de_map","title":"Usando NaN como chaves de Map","isH3":true,"content":"<p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> também pode ser usado como chave. Apesar de todo o <code>NaN</code> não ser igual a ele mesmo (<code>NaN !== NaN</code>), o exemplo a seguir funciona porque não é possível distinguir um <code>NaN</code> de outros.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'not a number'</span><span class=\"token punctuation\">)</span>\n\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// \"not a number\"</span>\n\n<span class=\"token keyword\">const</span> otherNaN <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>otherNaN<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// \"not a number\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"iterando_o_map_com_for..of","title":"Iterando o Map com for..of","isH3":true,"content":"<p><code>Maps</code> podem ser iterados usando um loop <code>for..of</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zero'</span><span class=\"token punctuation\">)</span>\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> myMap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">+</span> <span class=\"token string\">' = '</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 0 = zero</span>\n<span class=\"token comment\">// 1 = um</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> key <span class=\"token keyword\">of</span> myMap<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 0</span>\n<span class=\"token comment\">// 1</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> value <span class=\"token keyword\">of</span> myMap<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// zero</span>\n<span class=\"token comment\">// one</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> myMap<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">+</span> <span class=\"token string\">' = '</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 0 = zero</span>\n<span class=\"token comment\">// 1 = one</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"iterando_o_map_com_foreach","title":"Iterando o Map com forEach()","isH3":true,"content":"<p>\n  <code>Maps</code> podem ser iterados usando o\n  método <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\"><code>forEach()</code></a>:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myMap<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">+</span> <span class=\"token string\">' = '</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 0 = zero</span>\n<span class=\"token comment\">// 1 = um</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"relação_com_arrays","title":"Relação com Arrays","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> kvArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'key1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'key2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// Use o construtor padrão do Map para transformar um array 2D chave-valor em um map</span>\n<span class=\"token keyword\">const</span> myMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span>kvArray<span class=\"token punctuation\">)</span>\n\nmyMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key1'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// retorna \"value1\"</span>\n\n<span class=\"token comment\">// Use o Array.from() para transformar um map em um Array bidimensional de chaves e valores</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Irá exibir para você o mesmo Array como um Array chave-valor</span>\n\n<span class=\"token comment\">// Uma forma sucinta de fazer o mesmo, utilizando a sintaxe spread</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>myMap<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Ou use os iteradores keys() ou values(), e os converta para um array</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>myMap<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// [\"key1\", \"key2\"]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"clonando_e_mesclando_maps","title":"Clonando e mesclando Maps","isH3":true,"content":"<p>Assim como <code>Arrays</code>, o map também pode ser clonado:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> original <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'um'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> clone <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span>original<span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\">// um</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>original <span class=\"token operator\">===</span> clone<span class=\"token punctuation\">)</span> <span class=\"token comment\">// false (Útil para comparações superficiais)</span>\n</code></pre></div>\n<blockquote>\n  <p><strong>Nota:</strong> Tenha em mente que <em>o dado em si</em> não é clonado.</p>\n</blockquote>\n<p>Maps podem ser mesclados, mantendo as chaves únicas:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> second <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'uno'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dos'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Mescla dois maps. A última chave a se repetir vence.</span>\n<span class=\"token comment\">// O operador spread essenciamente converte um Map para um Array</span>\n<span class=\"token keyword\">const</span> merged <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>first<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>second<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>merged<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// uno</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>merged<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// dos</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>merged<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// three</span>\n</code></pre></div>\n<p>Maps podem ser mesclados com array também:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> second <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'uno'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dos'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Mescla maps com um array. A última chave a se repetir vence.</span>\n<span class=\"token keyword\">const</span> merged <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>first<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>second<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eins'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>merged<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// eins</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>merged<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// dos</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>merged<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// three</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Especificações","id":"especificações","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Map"}},{"type":"browser_compatibility","value":{"title":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores","isH3":false,"query":"javascript.builtins.Map","dataURL":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map/bcd.json"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n  <li>\n    Um polyfill do <code>Map</code> está disponível em\n    <a href=\"https://github.com/zloirock/core-js#map\" class=\"external\" rel=\" noopener\"><code>core-js</code></a>\n  </li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Set\"><code>Set</code></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\"><code>WeakMap</code></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\"><code>WeakSet</code></a></li>\n</ul>"}}],"toc":[{"text":"Descrição","id":"descrição"},{"text":"Construtor","id":"construtor"},{"text":"propriedades estáticas","id":"propriedades_estáticas"},{"text":"propriedades da instância","id":"propriedades_da_instância"},{"text":"Métodos da instância","id":"métodos_da_instância"},{"text":"Exemplos","id":"exemplos"},{"text":"Especificações","id":"especificações"},{"text":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores"},{"text":"Veja também","id":"veja_também"}],"summary":"O objeto Map contém pares de chave-valor e lembra a ordem original da inserção das chaves. Qualquer valor (objetos e valores primitivos) podem ser usados como chave ou valor.","popularity":0.0025,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Map","locale":"en-US","native":"English (US)"},{"title":"Map","locale":"fr","native":"Français"},{"title":"Map","locale":"ja","native":"日本語"},{"title":"Map","locale":"zh-CN","native":"中文 (简体)"},{"title":"Map","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"pt-br/web/javascript/reference/global_objects/map","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/javascript/reference/global_objects/map/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference","title":"Referência JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects","title":"Objetos Globais"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map","title":"Map"}],"pageTitle":"Map - JavaScript | MDN","noIndexing":false}}