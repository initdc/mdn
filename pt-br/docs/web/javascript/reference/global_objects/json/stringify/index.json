{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"JSON.stringify()","mdn_url":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"<ol><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Métodos</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a></li><li><em><code>JSON.stringify()</code></em></li></ol></li><li><strong>Herança:</strong></li><li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriedades</strong></a><ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Métodos</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":"resumo","title":"Resumo","isH3":false,"content":"<p>O método <strong><code>JSON.stringify()</code></strong> converte valores em javascript para uma String JSON. Esses valores podem ser substituidos especificando a função <em>replacer</em>, ou incluindo somente as propriedades específicas, quando o array do replacer for especificado.</p>"}},{"type":"prose","value":{"id":"sintaxe","title":"Sintaxe","isH3":false,"content":"<pre class=\"notranslate\">JSON.stringify(valor[, replacer[, espaço]])\n</pre>"}},{"type":"prose","value":{"id":"parâmetros","title":"Parâmetros","isH3":true,"content":"<dl>\n  <dt id=\"valor\"><code>valor</code></dt>\n  <dd>\n    <p>O valor a ser convertido para uma string JSON.</p>\n  </dd>\n  <dt id=\"replacer\"><code>replacer</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Uma função que altera o comportamento do processo de transformação em string, ou um array de objetos <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> e <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> que servem como uma lista branca para selecionar as propriedades do objeto valor a ser incluído na string JSON. Se este valor for nulo ou não fornecido, todas as propriedades do objeto são incluídas na string JSON resultante.</p>\n  </dd>\n  <dt id=\"espaço\"><code>espaço</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Um objeto <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> ou <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> que é usado para inserir espaço em branco na saída da string JSON para propósito de legibilidade. Se isto for um <code>Number</code>, indica o número de caracteres espaço para usar como espaço em branco; este número é limitado em 10 se for maior que isso. Valores menores que 1 indicam que nenhum espaço deve ser usado. Se isto for uma <code>String</code>, a string (ou os primeiros 10 caracteres da string, se for maior que isso) é usado como espaço em branco. Se esse parâmetro não for fornecido (ou for null), nenhum espaço em branco é usado.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"descrição","title":"Descrição","isH3":false,"content":"<p><code>JSON.stringify()</code> converte um valor para uma notação JSON que o representa:</p>\n<ul>\n  <li>Se o valor tiver um método <code>toJSON()</code>, é responsável por definir quais dados serão serializados.</li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>, <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>, and <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> os objetos são convertidos para os valores primitivos correspondentes durante a stringificação, de acordo com a semântica de conversão.</li>\n  <li>Se <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>, uma função, ou um symbol é encontrado durante a conversão é omitido (quando é encontrado em um objeto) ou censurado para <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> (quando é encontrado em um Array). <code>JSON.stringify</code> pode também somente retornar <code>undefined</code> ao passar valores puros como <code>JSON.stringify(function(){})</code> ou <code>JSON.stringify(undefined)</code>.</li>\n  <li>Todas as propriedades com chave de símbolo serão completamente ignoradas, mesmo quando usar a função <code>replacer</code>.</li>\n  <li>Propriedades não enumeráveis serão ignoradas.</li>\n</ul>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// '{}'</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 'true'</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// '\"foo\"'</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'false'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '[1,\"false\",false]'</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// '{\"x\":5}'</span>\n\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{\"x\":5,\"y\":6}' or '{\"y\":6,\"x\":5}'</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">'false'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '[1,\"false\",false]'</span>\n\n<span class=\"token comment\">// Symbols:</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> Object<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">z</span><span class=\"token operator\">:</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{}'</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{}'</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{}'</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">k<span class=\"token punctuation\">,</span> v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> k <span class=\"token operator\">===</span> <span class=\"token string\">'symbol'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'a symbol'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{}'</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"o_parâmetro_replacer_parameter","title":"O parâmetro <code>replacer</code> parameter","isH3":true,"content":"<p>O parâmetro <kbd>replacer</kbd> pode ser uma função ou uma matriz. Como função, são necessários dois parâmetros, a <kbd>chave</kbd> e os valores que estão sendo especificados. O objeto no qual a <kbd>chave</kbd> foi encontrada é fornecido como substituto desse parâmetro. Inicialmente, ele é chamado com uma chave vazia que representa o objeto que está sendo codificado e, em seguida, é chamado para cada propriedade no <kbd>objeto</kbd> ou matriz que está sendo codificada. Ele deve retornar o valor que deve ser adicionado à cadeia JSON, da seguinte maneira:</p>\n<ul>\n  <li>Se você retornar um <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>, a string correspondente a esse número é usada como o valor da propriedade quando adicionada à sequência JSON.</li>\n  <li>If you return a <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>, that string is used as the property's value when adding it to the JSON string.</li>\n  <li>If you return a <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>, \"true\" or \"false\" is used as the property's value, as appropriate, when adding it to the JSON string.</li>\n  <li>If you return any other object, the object is recursively stringified into the JSON string, calling the <code>replacer</code> function on each property, unless the object is a function, in which case nothing is added to the JSON string.</li>\n  <li>If you return <code>undefined</code>, the property is not included in the output JSON string.</li>\n</ul>\n<blockquote>\n  <p>**Nota:**Você não pode usar a função <code>replacer</code> para remover valoeres em uma <code>array</code>. Se você retornar <code>undefined</code>, <code>null</code> será usado no lugar.</p>\n</blockquote>\n<h4 id=\"exemplo_de_uma_função\">Exemplo de uma função</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">replacer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">fundação</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mozilla\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">modelo</span><span class=\"token operator\">:</span> <span class=\"token string\">\"caixa\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">semana</span><span class=\"token operator\">:</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">transporte</span><span class=\"token operator\">:</span> <span class=\"token string\">\"carro\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">mês</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> jsonString <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> replacer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>O resultado do JSON é: <code>{\"semana\":45,\"mês\":7}</code>.</p>\n<h4 id=\"exemplo_em_uma_array\">Exemplo em uma array</h4>\n<p>Se <code>replacer</code> é usado em uma array, os valores da array indicam os nomes das propriedades no objeto, que devem ser incluídas na sequência JSON resultante.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'semana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mês'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{\"semana\":45,\"mês\":7}', apenas mantém as propriedades \"semana\" e \"mês\"</span>\n</code></pre></div>","titleAsText":"O parâmetro replacer parameter"}},{"type":"prose","value":{"id":"o_argumento_space","title":"O argumento <code>space</code>","isH3":true,"content":"<p>O argumento <code>space</code> O argumento pode ser usado para controlar o espaçamento na sequência final. Se for um número, os níveis sucessivos na stringficação serão recuados por esse número de caracteres de espaço (até 10). Se for uma sequência, os níveis sucessivos serão recuados por essa sequência (ou pelos dez primeiros caracteres).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{</span>\n<span class=\"token comment\">//  \"a\": 2</span>\n<span class=\"token comment\">// }'</span>\n</code></pre></div>\n<p>O uso de um caractere de tabulação imita a aparência padrão de impressão pretty-print.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">um</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">dois</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// r:</span>\n<span class=\"token comment\">// '{</span>\n<span class=\"token comment\">//     \"um\": 1,</span>\n<span class=\"token comment\">//     \"dois\": 2</span>\n<span class=\"token comment\">// }'</span>\n</code></pre></div>","titleAsText":"O argumento space"}},{"type":"prose","value":{"id":"comportamento_de_tojson","title":"Comportamento de <code>toJSON()</code>","isH3":true,"content":"<p>Se um objeto sendo stringificado tiver uma propriedade denominada toJSON() cujo valor é uma função, o método <code>toJSON()</code> personaliza o comportamento da stringificação JSON, em vez de o objeto ser serializado, o valor retornado pelo método <code>toJSON()</code> quando chamado será serializado. Por exemplo:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">toJSON</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// '\"bar\"'</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> obj <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '{\"x\":\"bar\"}'</span>\n</code></pre></div>","titleAsText":"Comportamento de toJSON()"}},{"type":"prose","value":{"id":"exemplo_de_uso_de_json.stringify_com_localstorage","title":"Exemplo de uso de <code>JSON.stringify()</code> com <code>localStorage</code>","isH3":true,"content":"<p>No caso em que você deseja armazenar um objeto criado por seu usuário e permitir que ele seja restaurado mesmo após o fechamento do navegador, o exemplo a seguir é um modelo para a aplicabilidade de <code>JSON.stringify()</code>:</p>\n<blockquote>\n  <p><strong>Aviso:</strong> As funções não são um tipo de dados JSON válido, portanto, elas não funcionarão. Também alguns objetos como <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> será uma string depois <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a>.</p>\n</blockquote>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Criando um exemplo em JSON</span>\n<span class=\"token keyword\">var</span> seção <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">'telas'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">'estado'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nsession<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'nome'</span><span class=\"token operator\">:</span> <span class=\"token string\">'telaA'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'largura'</span><span class=\"token operator\">:</span> <span class=\"token number\">450</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'altura'</span><span class=\"token operator\">:</span> <span class=\"token number\">250</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsession<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'nome'</span><span class=\"token operator\">:</span> <span class=\"token string\">'telaB'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'largura'</span><span class=\"token operator\">:</span> <span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'altura'</span><span class=\"token operator\">:</span> <span class=\"token number\">350</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsession<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'nome'</span><span class=\"token operator\">:</span> <span class=\"token string\">'telaC'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'largura'</span><span class=\"token operator\">:</span> <span class=\"token number\">750</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'altura'</span><span class=\"token operator\">:</span> <span class=\"token number\">120</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsession<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'nome'</span><span class=\"token operator\">:</span> <span class=\"token string\">'telaD'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'largura'</span><span class=\"token operator\">:</span> <span class=\"token number\">250</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'altura'</span><span class=\"token operator\">:</span> <span class=\"token number\">60</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsession<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'nome'</span><span class=\"token operator\">:</span> <span class=\"token string\">'telaE'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'largura'</span><span class=\"token operator\">:</span> <span class=\"token number\">390</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'altura'</span><span class=\"token operator\">:</span> <span class=\"token number\">120</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsession<span class=\"token punctuation\">.</span>screens<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'nome'</span><span class=\"token operator\">:</span> <span class=\"token string\">'telaF'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'largura'</span><span class=\"token operator\">:</span> <span class=\"token number\">1240</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'altura'</span><span class=\"token operator\">:</span> <span class=\"token number\">650</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Convertendo a string JSON em JSON.stringify()</span>\n<span class=\"token comment\">// Salvando com localStorage no nome da sessão</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'seção'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>seção<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Exemplo de como transformar a String gerada por meio de:</span>\n<span class=\"token comment\">// JSON.stringify() e salva em localStorage no objeto JSON novamente</span>\n<span class=\"token keyword\">var</span> seçãoRestaurada <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'seção'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Agora, a variável seçãoRestaurada contém o objeto que foi salvo</span>\n<span class=\"token comment\">// no localStorage</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>seçãoRestaurada<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Exemplo de uso de JSON.stringify() com localStorage"}},{"type":"prose","value":{"id":"especificações","title":"Especificações","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Especificação</th>\n      <th>Status</th>\n      <th>Comentário</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/5.1/#sec-15.12.3\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 5.1 (ECMA-262)<br><small lang=\"pt-BR\">The definition of 'JSON.stringify' in that specification.</small></a></td>\n      <td><span class=\"spec-standard\">Padrão</span></td>\n      <td>Definição inicial. Implementado em JavaScript 1.7.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-json.stringify\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"pt-BR\">The definition of 'JSON.stringify' in that specification.</small></a></td>\n      <td><span class=\"spec-standard\">Padrão</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidade em navegadores","id":"compatibilidade_em_navegadores","isH3":false,"query":"javascript.builtins.JSON.stringify","dataURL":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify/bcd.json"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a></li>\n</ul>"}}],"toc":[{"text":"Resumo","id":"resumo"},{"text":"Sintaxe","id":"sintaxe"},{"text":"Descrição","id":"descrição"},{"text":"Especificações","id":"especificações"},{"text":"Compatibilidade em navegadores","id":"compatibilidade_em_navegadores"},{"text":"Veja também","id":"veja_também"}],"summary":"O método JSON.stringify() converte valores em javascript para uma String JSON. Esses valores podem ser substituidos especificando a função replacer, ou incluindo somente as propriedades específicas, quando o array do replacer for especificado.","popularity":0.0042,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"JSON.stringify()","locale":"en-US","native":"English (US)"},{"title":"JSON.stringify()","locale":"es","native":"Español"},{"title":"JSON.stringify()","locale":"fr","native":"Français"},{"title":"JSON.stringify()","locale":"ja","native":"日本語"},{"title":"JSON.stringify()","locale":"ko","native":"한국어"},{"title":"JSON.stringify()","locale":"ru","native":"Русский"},{"title":"JSON.stringify()","locale":"zh-CN","native":"中文 (简体)"},{"title":"JSON.stringify()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"pt-br/web/javascript/reference/global_objects/json/stringify","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/javascript/reference/global_objects/json/stringify/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference","title":"Referência JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects","title":"Objetos Globais"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON","title":"JSON"},{"uri":"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify","title":"JSON.stringify()"}],"pageTitle":"JSON.stringify() - JavaScript | MDN","noIndexing":false}}