{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Comparações de igualdade e uniformidade","mdn_url":"/pt-BR/docs/Web/JavaScript/Equality_comparisons_and_sameness","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"\n <ol>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/pt-BR/docs/Web/JavaScript/Tutorials\"><strong>Tutoriais:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Completos iniciantes</summary>\n      <ol>\n        <li><a href=\"/pt-BR/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">O básico de JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Learn/JavaScript/First_steps\">Primeiros passos com JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Learn/JavaScript/Building_blocks\">Blocos de construção de JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Learn/JavaScript/Objects\">Introdução a objetos JavaScript</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Guia de JavaScript</summary>\n      <ol>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Introduction\">Introdução</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Grammar_and_Types\">Gramática e tipos</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Controle de fluxo e tratamento de erros</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Loops_and_iteration\">Repetição e iteração</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Functions\">Funções</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Expressões e operadores</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Numbers_and_dates\">Números e datas</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Text_formatting\">Formatação de texto</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Regular_Expressions\">Expressões Regulares</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Indexed_collections\">Coleções indexadas</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Keyed_collections\">Coleções com chave (chave-valor)</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Working_with_Objects\">Trabalhando com objetos</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Detalhes do modelo de objetos</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Using_promises\">Usando \"promises\"</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Iterators_and_generators\">Iteradores e geradores</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Meta_programming\">Metaprogramação</a></li>\n          <li><a href=\"/pt-BR/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Intermediário</summary>\n      <ol>\n        <li><a href=\"/pt-BR/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs\">APIs Web para aplicações Cliente</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">Uma reintrodução a JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Data_structures\">Estruturas de dados de JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Comparadores de igualdade e semelhança</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Closures\">Closures</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Avançado</summary>\n      <ol>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Herança e a cadeia de \"prototype\"</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode - Modo estrito</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Typed_arrays\">Arranjos tipados em JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Memory_Management\">Gerenciamento de memória</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/EventLoop\">Modelo de concorrência e Loop de Eventos</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/pt-BR/docs/Web/JavaScript/Reference\">Referências:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Objetos pré-definidos</summary>\n        <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Expressões e operadores</summary>\n      <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Afirmações e declarações</summary>\n      <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Funções</summary>\n      <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Classes</summary>\n      <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Erros</summary>\n      <ol><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Mais conteúdo</summary>\n      <ol>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/JavaScript_technologies_overview\">Visão geral das Tecnologias JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Lexical_grammar\">Gramática léxica</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Data_structures\">Estruturas de dados de JavaScript</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Enumerabilidade e domínio de propriedades</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Iteration_protocols\">Protocolos de iteração</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode - Modo estrito</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Migrando para o \"strict mode\"</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Template_literals\">Template literals</a></li>\n        <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Funcionalidades depreciadas</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>JavaScript fornece três diferentes operações de comparação de valores:</p>\n<ul>\n  <li>igualdade estrita (ou \"três iguais\" ou \"identidade\") usando <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#identity\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">=== (en-US)</a>,</li>\n  <li>igualdade ampla (\"dois iguais\") usando <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#equality\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">== (en-US)</a>,</li>\n  <li>e <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a> (novo no ECMAScript 6).</li>\n</ul>\n<p>A escolha de qual operação usar depende da ordem de comparação que você está procurando executar.</p>\n<p>Em resumo, dois iguais irá realizar uma conversão de tipo ao comparar duas coisas; três iguais irá fazer a mesma comparação, sem conversão de tipo (simplesmente retornando false se os tipos forem diferentes); e <code>Object.is</code> irá se comportar da mesma forma que três iguais, mas com tratamento especial para <code>NaN</code> e <code>-0</code> e <code>+0</code> de modo que os dois últimos não são referidos como sendo o mesmo, enquanto <code>Object.is(NaN, NaN)</code> será <code>true</code>. (Comparando <code>NaN</code> com <code>NaN</code> ordinariamente - ou seja, usando tanto iguais duplo ou iguais triplo - avalia como <code>false</code>, porque IEEE 754 diz isso.) Note que a distinção entre todos eles têm a ver com seu manuseio dos primitivos; nenhum deles compara se os parâmetros são conceitualmente semelhante em estrutura. Para qualquer objetos não-primitivo x e y que têm a mesma estrutura, mas são objetos distintos entre si, todas as formas acima será avaliada como falsa.</p>"}},{"type":"prose","value":{"id":"igualdade_estrita_usando_","title":"Igualdade estrita usando <code>===</code>","isH3":false,"content":"<p>Igualdade estrita compara dois valores para a igualdade. Nenhum valor é convertido implicitamente para algum outro valor antes de serem comparados. Se os valores tem tipos diferentes, os valores são considerados não-iguais. Caso contrário, se os valores têm o mesmo tipo e não são números, eles são considerados iguais, se tiverem o mesmo valor. Finalmente, se ambos os valores são números, eles são considerados iguais se ambos não são <code>NaN</code> e são do mesmo valor, ou se um é <code>+0</code> e outro é <code>-0</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">===</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">===</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">===</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">===</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre></div>\n<p>Igualdade estrita é quase sempre a operação de comparação correta a se usar. Para todos os valores, exceto os números, ele usa a semântica óbvia: um valor é apenas igual a ele mesmo. Para os números que ele usa uma semântica ligeiramente diferente para encobrir dois casos extremamente diferentes. A primeira é que o zero de ponto flutuante é positiva ou negativamente assinada. Isso é útil em representar certas soluções matemáticas, mas como a maioria das situações não se preocupam com a diferença entre <code>+0</code> e <code>-0</code>, igualdade estrita trata-os como o mesmo valor. A segunda é que ponto flutuante inclui o conceito de um valor não-numérico, <code>NaN</code>, para representar a solução para certos problemas matemáticos mal definidos: infinito negativo adicionado ao infinito positivo, por exemplo. Igualdade estrita trata <code>NaN</code> como desigual a qualquer outro valor - incluindo o próprio. (O único caso em que <code>(x! == X)</code> é <code>true</code> é quando <code>x</code> é <code>NaN</code>.)</p>","titleAsText":"Igualdade estrita usando ==="}},{"type":"prose","value":{"id":"igualdade_ampla_usando_","title":"Igualdade ampla usando ==","isH3":false,"content":"<p>Igualdade ampla compara dois valores para a igualdade, <em>após</em> converter ambos os valores para um tipo comum. Após as conversões (um ou ambos os lados podem sofrer conversões), a comparação de igualdade final é realizada exatamente como <code>===</code> executa. Igualdade ampla é <em>simétrica</em>: <code>A == B</code> sempre tem semântica idêntica à <code>B == A</code> para quaisquer valores de <code>A</code> e <code>B</code>.</p>\n<p>A comparação de igualdade é realizado da seguinte forma para os operandos dos vários tipos:</p>\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"row\"><code></code></th>\n      <th colspan=\"7\" scope=\"col\" style=\"text-align: center\"><code>Operand B</code></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\"><code></code></th>\n      <td><code></code></td>\n      <td style=\"text-align: center\">Undefined</td>\n      <td style=\"text-align: center\">Null</td>\n      <td style=\"text-align: center\">Number</td>\n      <td style=\"text-align: center\">String</td>\n      <td style=\"text-align: center\">Boolean</td>\n      <td style=\"text-align: center\">Object</td>\n    </tr>\n    <tr>\n      <th colspan=\"1\" rowspan=\"6\" scope=\"row\">Operand A</th>\n      <td>Undefined</td>\n      <td style=\"text-align: center\"><code>true</code></td>\n      <td style=\"text-align: center\"><code>true</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>IsFalsy(B)</code></td>\n    </tr>\n    <tr>\n      <td>Null</td>\n      <td style=\"text-align: center\"><code>true</code></td>\n      <td style=\"text-align: center\"><code>true</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>IsFalsy(B)</code></td>\n    </tr>\n    <tr>\n      <td>Number</td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>A === B</code></td>\n      <td style=\"text-align: center\"><code>A === ToNumber(B)</code></td>\n      <td style=\"text-align: center\"><code>ToNumber(B) === A</code></td>\n      <td style=\"text-align: center\"><code>ToPrimitive(B) == A</code></td>\n    </tr>\n    <tr>\n      <td>String</td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>B === ToNumber(A)</code></td>\n      <td style=\"text-align: center\"><code>A === B</code></td>\n      <td style=\"text-align: center\"><code>ToNumber(A) === ToNumber(B)</code></td>\n      <td style=\"text-align: center\"><code>ToPrimitive(B) == A</code></td>\n    </tr>\n    <tr>\n      <td>Boolean</td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\"><code>ToNumber(A) === B</code></td>\n      <td style=\"text-align: center\"><code>ToNumber(A) === ToNumber(B)</code></td>\n      <td style=\"text-align: center\"><code>A === B</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n    </tr>\n    <tr>\n      <td>Object</td>\n      <td style=\"text-align: center\"><code>IsFalsy(A)</code></td>\n      <td style=\"text-align: center\"><code>IsFalsy(A)</code></td>\n      <td style=\"text-align: center\"><code>ToPrimitive(A) == B</code></td>\n      <td style=\"text-align: center\"><code>ToPrimitive(A) == B</code></td>\n      <td style=\"text-align: center\"><code>false</code></td>\n      <td style=\"text-align: center\">\n        <p><code>A === B</code></p>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<p>Na tabela acima, <code>ToNumber(A)</code> tenta converter seu argumento para um número antes de comparação. Seu comportamento é equivalente a <code>+A</code> (o operador + unário). <code>ToPrimitive(A)</code> tenta converter seu argumento de objeto para um valor primitivo, tentando invocar sequências diferentes de <code>A.toString</code> e <code>A.valueOf</code> métodos em <code>A</code>.</p>\n<p>Tradicionalmente, e de acordo com ECMAScript, todos os objetos são amplamente desiguais a <code>undefined</code> e <code>null</code>. Mas a maioria dos navegadores permitem uma classe muito limitada de objetos (especificamente, o objeto <code>document.all</code> para qualquer página), em alguns contextos, para agir como se eles <em>emulassem</em> o valor <code>undefined</code>. Igualdade ampla é um desses contexto. Portanto, o método <code>IsFalsy(A)</code> é avaliada como verdadeira se, e somente se, A for um objeto que <em>emula</em> <code>undefined</code>. Em todos os outros casos, um objeto não é amplamente igual a <code>undefined</code> ou <code>null</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">==</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// both false, except in rare cases</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Alguns desenvolvedores consideram que nunca é uma boa idéia, praticamente, usar a igualdade ampla. O resultado de uma comparação usando a igualdade estrita é mais fácil de prever, e como nenhum tipo de coerção ocorre, a avaliação pode ser mais rápida.</p>"}},{"type":"prose","value":{"id":"igualdade_de_mesmo_valor","title":"Igualdade de mesmo valor","isH3":false,"content":"<p>Igualdade de mesmo valor aborda um caso de uso final: determinar se dois valores são <em>funcionalmente idêntico</em> em todos os contextos. (Este caso de uso demonstra uma instância de <a href=\"http://en.wikipedia.org/wiki/Liskov_substitution_principle\" class=\"external\" rel=\" noopener\">Liskove substitution principle</a>. Princípio de substituição de Liskove.) Uma instância ocorre quando é feita uma tentativa de transformar uma propriedade imutável:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Add an immutable NEGATIVE_ZERO property to the Number constructor.</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">,</span> <span class=\"token string\">\"NEGATIVE_ZERO\"</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">writable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">attemptMutation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">,</span> <span class=\"token string\">\"NEGATIVE_ZERO\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> v <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>Object.defineProperty</code> irá disparar uma exceção ao tentar alterar uma propriedade imutável que realmente iria alterá-lo, mas ele não faz nada se nenhuma mudança real for solicitada. Se <code>v</code> for <code>-0</code>, nenhuma mudança foi solicitada, e nenhum erro será disparado. Mas se <code>v</code> for <code>+0</code>, <code>Number.NEGATIVE_ZERO</code> não teria mais o seu valor imutável. Internamente, quando uma propriedade imutável é redefinida, o valor recém-especificado é comparado com o valor atual usando a igualdade de mesmo valor.</p>\n<p>Igualdade de mesmo valor é fornecida pelo método <code>Object.is.</code></p>"}},{"type":"prose","value":{"id":"igualdade_abstrata_igualdade_estrita_e_de_mesmo_valor_na_especificação","title":"Igualdade abstrata, igualdade estrita, e de mesmo valor na especificação","isH3":false,"content":"<p>No ES5, a comparação efetuada por <code>==</code> é descrita em <a href=\"https://ecma-international.org/ecma-262/5.1/#sec-11.9.3\" class=\"external\" rel=\" noopener\">Seção 11.9.3, O Algoritmo da Igualdade Abstrata</a>. A comparação <code>===</code> está em <a href=\"https://ecma-international.org/ecma-262/5.1/#sec-11.9.6\" class=\"external\" rel=\" noopener\">11.9.6, O Algoritmo de Igualdade Estrita</a>. (Veja estes. Eles são breve e legível. Dica: leia o algoritmo de igualdade estrita primeiro.) ES5 também descreve, em <a href=\"https://ecma-international.org/ecma-262/5.1/#sec-9.12\" class=\"external\" rel=\" noopener\">Seção 9.12, o Algoritmo de Mesmo Valor</a> para uso internamente pelo motor de JS. É em grande parte o mesmo que o Algoritmo de Igualdade Estrita, exceto que 11.9.6.4 e 9.12.4 diferem em manipulação do <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>. ES6 simplesmente se propõe a expor este algoritmo através de <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a>.</p>\n<p>Podemos ver que com iguais duplos e triplos, com exceção de fazer uma verificação de tipo inicial 11.9.6.1, o Algoritmo de Igualdade Estrita é um subconjunto do Algoritmo Igualdade Abstrata, porque 11.9.6.2-7 correspondem a 11.9.3.1.a -f.</p>"}},{"type":"prose","value":{"id":"um_modelo_para_a_compreensão_comparações_de_igualdade","title":"Um modelo para a compreensão comparações de igualdade?","isH3":false,"content":"<p>Antes do ES6, você poderia dizer, de iguais duplos e iguais triplos, que um é uma versão \"melhorada\" do outro. Por exemplo, alguém poderia dizer que dois iguais é uma versão estendida de três iguais, porque o anterior faz tudo o que este último faz, mas com conversão de tipo nos seus operandos. Por exemplo, 6 == \"6\". (Alternativamente, alguém poderia dizer que dois iguais é a linha de base, e três iguais são uma versão melhorada, porque requer dois operandos para ser do mesmo tipo, por isso adiciona uma restrição extra. Qual deles é o melhor modelo para compreensão depende como você optar por ver as coisas.)</p>\n<p>No entanto, esta forma de pensar sobre os operadores de igualdade embutida não é um modelo que pode ser esticado para permitir um lugar para <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> de ES6 neste \"espectro\". <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> não é simplesmente \"mais frouxo\" que dois iguais ou \"mais rigorosa\" do que três iguais, nem se encaixa em algum lugar entre eles (ex: sendo tanto mais rigorosas que dois iguais, mas mais flexível do que três iguais). Podemos ver a partir da tabela de comparações de igualdade abaixo que isto é devido à forma que <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> manipula <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a>. Observe que, se Object.is(NaN, NaN) avalia como false, nós <em>poderiamos</em> dizer que ele se encaixa no espectro amplo/estrito como um forma ainda mais rigorosa das três iguais, um que distingue entre -0 e +0. A manipulação do <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a> significa que este é não-verdadeiro, entretanto. Infelizmente, <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> simplesmente tem que ser pensado em termos de suas características específicas, ao invés de sua amplitude ou rigorosidade no que diz respeito aos operadores de igualdade.</p>\n<table>\n  <thead>\n    <tr>\n      <th>x</th>\n      <th>y</th>\n      <th>==</th>\n      <th>===</th>\n      <th>Object.is</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>undefined</code></td>\n      <td><code>undefined</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n    </tr>\n    <tr>\n      <td><code>null</code></td>\n      <td><code>null</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n    </tr>\n    <tr>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n    </tr>\n    <tr>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n    </tr>\n    <tr>\n      <td><code>\"foo\"</code></td>\n      <td><code>\"foo\"</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n    </tr>\n    <tr>\n      <td><code>{ foo: \"bar\" }</code></td>\n      <td><code>x</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n    </tr>\n    <tr>\n      <td><code>0</code></td>\n      <td><code>0</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n    </tr>\n    <tr>\n      <td><code>+0</code></td>\n      <td><code>-0</code></td>\n      <td><code>true</code></td>\n      <td><code>true</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>0</code></td>\n      <td><code>false</code></td>\n      <td><code>true</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>\"\"</code></td>\n      <td><code>false</code></td>\n      <td><code>true</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>\"\"</code></td>\n      <td><code>0</code></td>\n      <td><code>true</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>\"0\"</code></td>\n      <td><code>0</code></td>\n      <td><code>true</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>\"17\"</code></td>\n      <td><code>17</code></td>\n      <td><code>true</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>[1,2]</code></td>\n      <td><code>\"1,2\"</code></td>\n      <td><code>true</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>new String(\"foo\")</code></td>\n      <td><code>\"foo\"</code></td>\n      <td><code>true</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>null</code></td>\n      <td><code>undefined</code></td>\n      <td><code>true</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>null</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>undefined</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>{ foo: \"bar\" }</code></td>\n      <td><code>{ foo: \"bar\" }</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>new String(\"foo\")</code></td>\n      <td><code>new String(\"foo\")</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>0</code></td>\n      <td><code>null</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>0</code></td>\n      <td><code>NaN</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>\"foo\"</code></td>\n      <td><code>NaN</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>NaN</code></td>\n      <td><code>NaN</code></td>\n      <td><code>false</code></td>\n      <td><code>false</code></td>\n      <td><code>true</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"quando_usar_object.is_ao_invés_de_três_iguais","title":"Quando usar <code>Object.is</code> ao invés de três iguais","isH3":false,"content":"<p>Além da forma como trata <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>, geralmente, a única vez que o comportamento especial do <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> em direção a zeros é provável que seja interessante é na busca de determinados regimes de meta-programação, especialmente em relação a descritores de propriedade quando é desejável para o seu trabalho para espelhar algumas das características de <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">Object.defineProperty</a>. Se o seu caso de uso não exige isso, sugere-se a evitar <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\">Object.is</a> e usar <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">=== (en-US)</a> em vez disso. Mesmo se suas exigências envolvem comparações entre dois valores <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a> avaliarem para true, geralmente é mais fácil para caso especial o <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a> checar (usando o <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN</a> método disponível a partir de versões anteriores do ECMAScript) do que descobrir como cálculos circundantes podem afetar o sinal de todos os zeros que você encontra em sua comparação.</p>\n<p>Aqui está uma lista exaustiva de métodos e operadores integrados que pode causar uma distinção entre -0 e +0 a manifestar-se em seu código:</p>\n<dl>\n  <dt id=\"-_negação_unário\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#-_.28unary_negation.29\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">- (negação unário) (en-US)</a></dt>\n  <dd>\n    <p>É óbvio que negando 0 produz -0. Mas a abstração de uma expressão pode causar -0 a fluência em quanto você não percebe isso. Por exemplo, considere:</p>\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> stoppingForce <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>mass <span class=\"token operator\">*</span> <span class=\"token operator\">-</span>obj<span class=\"token punctuation\">.</span>velocity\n</code></pre></div>\n    <p>If obj.velocity is 0 (ou calcula para 0), um -0 é introduzido naquele lugar e propaga-se em stoppingForce.</p>\n  </dd>\n  <dt id=\"sect1\">\n    <p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2\"><code>Math.atan2</code></a></p>\n    <p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\"><code>Math.ceil</code></a></p>\n    <p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\"><code>Math.pow</code></a></p>\n    <p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"><code>Math.round</code></a></p>\n  </dt>\n  <dd>\n    <p>É possível que um -0 para ser introduzido em uma expressão como um valor de retorno desses métodos, em alguns casos, mesmo quando nenhum -0 exista como um dos parâmetros. Por exemplo, usando <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\">Math.pow</a> para levantar -<a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a> a potência de qualquer número, expoente ímpar negativo avaliada como -0. Consulte a documentação para os métodos individuais.</p>\n  </dd>\n  <dt id=\"sect2\">\n    <p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\"><code>Math.floor</code></a></p>\n    <p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/max\"><code>Math.max</code></a></p>\n    <p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/min\"><code>Math.min</code></a></p>\n    <p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\"><code>Math.sin</code></a></p>\n    <p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\"><code>Math.sqrt</code></a></p>\n    <p><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\"><code>Math.tan</code></a></p>\n  </dt>\n  <dd>\n    <p>É possível obter um -0 valor de retorno para fora destes métodos em alguns casos em que um -0 existe como um dos parâmetros. Por exemplo, <code>Math.min(-0, +0)</code> resulte em -0. Consulte a documentação para os métodos individuais.</p>\n  </dd>\n  <dt id=\"sect3\">\n    <p><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">~ (en-US)</a></p>\n    <p><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">&lt;&lt; (en-US)</a></p>\n    <p><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">&gt;&gt; (en-US)</a></p>\n  </dt>\n  <dd>\n    <p>Cada um destes operadores usa o algoritmo ToInt32 internamente. Uma vez que existe apenas uma representação para 0 no tipo integer de 32 bits interno, -0 não vai sobreviver a uma ida e volta após uma operação inversa. Por exemplo, tanto <code>Object.is(~~(-0), -0)</code> e <code>Object.is(-0 &lt;&lt; 2 &gt;&gt; 2, -0)</code> avaliar como <code>false</code>.</p>\n  </dd>\n</dl>\n<p>Baseando-se em <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a> quando a sinalização de zeros não é levado em conta podem ser perigosos. Claro que, quando a intenção é fazer a distinção entre <code>-0</code> e <code>+0</code>, isso faz exatamente o que é desejado.</p>","titleAsText":"Quando usar Object.is ao invés de três iguais"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n  <li><a href=\"http://dorey.github.io/JavaScript-Equality-Table/\" class=\"external\" rel=\" noopener\">Tabela de Comparação JS</a></li>\n</ul>"}}],"toc":[{"text":"Igualdade estrita usando <code>===</code>","id":"igualdade_estrita_usando_"},{"text":"Igualdade ampla usando ==","id":"igualdade_ampla_usando_"},{"text":"Igualdade de mesmo valor","id":"igualdade_de_mesmo_valor"},{"text":"Igualdade abstrata, igualdade estrita, e de mesmo valor na especificação","id":"igualdade_abstrata_igualdade_estrita_e_de_mesmo_valor_na_especificação"},{"text":"Um modelo para a compreensão comparações de igualdade?","id":"um_modelo_para_a_compreensão_comparações_de_igualdade"},{"text":"Quando usar <code>Object.is</code> ao invés de três iguais","id":"quando_usar_object.is_ao_invés_de_três_iguais"},{"text":"Veja também","id":"veja_também"}],"summary":"JavaScript fornece três diferentes operações de comparação de valores:","popularity":0.0017,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Equality comparisons and sameness","locale":"en-US","native":"English (US)"},{"title":"Comparadores de igualdad e identidad","locale":"es","native":"Español"},{"title":"Utiliser les différents tests d'égalité","locale":"fr","native":"Français"},{"title":"等価性の比較と同一性","locale":"ja","native":"日本語"},{"title":"동치 비교 및 동일성","locale":"ko","native":"한국어"},{"title":"Операторы сравнения","locale":"ru","native":"Русский"},{"title":"JavaScript 中的相等性判断","locale":"zh-CN","native":"中文 (简体)"},{"title":"相等比較","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"pt-br/web/javascript/equality_comparisons_and_sameness","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/javascript/equality_comparisons_and_sameness/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/pt-BR/docs/Web/JavaScript/Equality_comparisons_and_sameness","title":"Comparações de igualdade e uniformidade"}],"pageTitle":"Comparações de igualdade e uniformidade - JavaScript | MDN","noIndexing":false}}