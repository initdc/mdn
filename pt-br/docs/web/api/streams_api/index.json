{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Streams API","mdn_url":"/pt-BR/docs/Web/API/Streams_API","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"<ol><li><strong><a href=\"/pt-BR/docs/Web/API/Streams_API\">Streams API</a></strong></li><li><strong><a href=\"/pt-BR/docs/Web/API/Streams_API\"><code>Streams_API</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Páginas relacionadas a Streams</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/body\"><code>Response.body</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code> <small>(en-US)</small></a></li><li><a href=\"/pt-BR/docs/Web/API/fetch\"><code>fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>Esta é uma <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">tecnologia experimental (en-US)</a></strong><br>Verifique a <a href=\"#browser_compatibility\">tabela de compatibilidade entre Navegadores</a> cuidadosamente antes de usar essa funcionalidade em produção.</p></div>A API Streams permite que o JavaScript acesse programaticamente fluxos de dados recebidos pela rede e os processe conforme desejado pelo desenvolvedor.<p></p>"}},{"type":"prose","value":{"id":"conceitos_e_uso","title":"Conceitos e Uso","isH3":false,"content":"<p>O streaming envolve a divisão de um recurso que você deseja receber pela rede em pequenos blocos e, em seguida, processa esses blocos aos poucos. Isso é algo que os navegadores fazem de qualquer maneira ao receber recursos para serem exibidos em páginas da web — o buffer de vídeos e mais está gradualmente disponível para reprodução, e às vezes você verá imagens sendo exibidas gradualmente conforme mais é carregado.</p>\n<p>Mas isto nunca esteve disponível para JavaScript antes. Anteriormente, se quiséssemos processar um recurso de algum tipo (seja ele um vídeo, ou um arquivo de texto, etc.), Teríamos que baixar o arquivo inteiro, espera até que seja desserializado em um formato adequado, então processa todo o lote após ser totalmente recebido.</p>\n<p>Com o Streams disponível para JavaScript, tudo isso muda - agora você pode começar a processar dados brutos com JavaScript bit a bit assim que estiverem disponíveis no lado do cliente, sem a necessidade de gerar um buffer, string ou blob.</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/15817/Concept.png\" alt=\"\" loading=\"lazy\">\n</p>\n<p>Também há mais vantagens - você pode detectar quando os fluxos começam ou terminam, encadeia os fluxos juntos, trata os erros e cancela os fluxos quando necessário e reage à velocidade em que o fluxo está sendo lido.</p>\n<p>O uso básico de Streams gira em torno de tornar as respostas disponíveis como streams. Por exemplo, a resposta <a class=\"page-not-created\" title=\"A documentação sobre isto ainda não foi escrita; por favor considere contribuir!\"><code>Body</code></a> retornada com sucesso de uma <a href=\"/pt-BR/docs/Web/API/fetch\">fetch request</a> pode ser exposta como um <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a>, e você pode lê-lo usando um leitor criado com <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/getReader\"><code>ReadableStream.getReader()</code> <small>(en-US)</small></a>, cancela-lo com <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/cancel\"><code>ReadableStream.cancel()</code> <small>(en-US)</small></a>, etc.</p>\n<p>Usos mais complicados envolvem a criação de seu próprio fluxo usando o contrutor <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/ReadableStream\"><code>ReadableStream()</code> <small>(en-US)</small></a>, por exemplo para processar dados dentro de um <a href=\"/pt-BR/docs/Web/API/Service_Worker_API\">service worker</a>.</p>\n<p>Você também pode gravar dados em streams usando <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code> <small>(en-US)</small></a>.</p>\n<blockquote>\n  <p><strong>Nota:</strong> Você pode encontrar muito mais detalhes sobre a teoria e prática de streams em nossos artigos — <a href=\"/pt-BR/docs/Web/API/Streams_API/Concepts\">Streams API concepts</a>, <a href=\"/en-US/docs/Web/API/Streams_API/Using_readable_streams\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using readable streams (en-US)</a>, e <a href=\"/en-US/docs/Web/API/Streams_API/Using_writable_streams\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using writable streams (en-US)</a>.</p>\n</blockquote>"}},{"type":"prose","value":{"id":"stream_interfaces","title":"Stream interfaces","isH3":false,"content":""}},{"type":"prose","value":{"id":"readable_streams","title":"Readable streams","isH3":true,"content":"<dl>\n  <dt id=\"readablestream_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents a readable stream of data. It can be used to handle response streams of the <a href=\"/pt-BR/docs/Web/API/Fetch_API\">Fetch API</a>, or developer-defined streams (e.g. a custom <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/ReadableStream\"><code>ReadableStream()</code> <small>(en-US)</small></a> constructor).</p>\n  </dd>\n  <dt id=\"readablestreamdefaultreader_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents a default reader that can be used to read stream data supplied from a network (e.g. a fetch request).</p>\n  </dd>\n  <dt id=\"readablestreamdefaultcontroller_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents a controller allowing control of a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a>'s state and internal queue. Default controllers are for streams that are not byte streams.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"writable_streams","title":"Writable streams","isH3":true,"content":"<dl>\n  <dt id=\"writablestream_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing.</p>\n  </dd>\n  <dt id=\"writablestreamdefaultwriter_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents a default writable stream writer that can be used to write chunks of data to a writable stream.</p>\n  </dd>\n  <dt id=\"writablestreamdefaultcontroller_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents a controller allowing control of a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code> <small>(en-US)</small></a>'s state. When constructing a <code>WritableStream</code>, the underlying sink is given a corresponding <code>WritableStreamDefaultController</code> instance to manipulate.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"related_stream_apis_and_operations","title":"Related stream APIs and operations","isH3":true,"content":"<dl>\n  <dt id=\"bytelengthqueuingstrategy_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Provides a built-in byte length queuing strategy that can be used when constructing streams.</p>\n  </dd>\n  <dt id=\"countqueuingstrategy_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Provides a built-in chunk counting queuing strategy that can be used when constructing streams.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"extensions_to_other_apis","title":"Extensions to other APIs","isH3":true,"content":"<dl>\n  <dt id=\"request\"><a href=\"/pt-BR/docs/Web/API/Request\"><code>Request</code></a></dt>\n  <dd>\n    <p>When a new <code>Request</code> object is constructed, you can pass it a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a> in the <code>body</code> property of its <code>RequestInit</code> dictionary. This <code>Request</code> could then be passed to a <a href=\"/pt-BR/docs/Web/API/fetch\"><code>WindowOrWorkerGlobalScope.fetch()</code></a> to commence fetching the stream.</p>\n  </dd>\n  <dt id=\"body\"><a class=\"page-not-created\" title=\"A documentação sobre isto ainda não foi escrita; por favor considere contribuir!\"><code>Body</code></a></dt>\n  <dd>\n    <p>The response <a class=\"page-not-created\" title=\"A documentação sobre isto ainda não foi escrita; por favor considere contribuir!\"><code>Body</code></a> returned by a successful <a href=\"/pt-BR/docs/Web/API/fetch\">fetch request</a> is exposed by default as a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a>, and can have a reader attached to it, etc.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"bytestream-related_interfaces","title":"ByteStream-related interfaces","isH3":true,"content":"<blockquote>\n  <p><strong>Aviso:</strong> <strong>Important</strong>: these are not implemented anywhere as yet, and questions have been raised as to whether the spec details are in a finished enough state for them to be implemented. This may change over time.</p>\n</blockquote>\n<dl>\n  <dt id=\"readablestreambyobreader_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents a BYOB (\"bring your own buffer\") reader that can be used to read stream data supplied by the developer (e.g. a custom <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream/ReadableStream\"><code>ReadableStream()</code> <small>(en-US)</small></a> constructor).</p>\n  </dd>\n  <dt id=\"readablebytestreamcontroller_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents a controller allowing control of a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a>'s state and internal queue. Byte stream controllers are for byte streams.</p>\n  </dd>\n  <dt id=\"readablestreambyobrequest_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Represents a pull into request in a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code> <small>(en-US)</small></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>We have created a directory of examples to go along with the Streams API documentation — see <a href=\"https://github.com/mdn/dom-examples/tree/master/streams\" class=\"external\" rel=\" noopener\">mdn/dom-examples/streams</a>. The examples are as follows:</p>\n<ul>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-pump/\" class=\"external\" rel=\" noopener\">Simple stream pump</a>: This example shows how to consume a ReadableStream and pass its data to another.</li>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/grayscale-png/\" class=\"external\" rel=\" noopener\">Grayscale a PNG</a>: This example shows how a ReadableStream of a PNG can be turned into grayscale.</li>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-random-stream/\" class=\"external\" rel=\" noopener\">Simple random stream</a>: This example shows how to use a custom stream to generate random strings, enqueue them as chunks, and then read them back out again.</li>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-tee-example/\" class=\"external\" rel=\" noopener\">Simple tee example</a>: This example extends the Simple random stream example, showing how a stream can be teed and both resulting streams can be read independently.</li>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/simple-writer/\" class=\"external\" rel=\" noopener\">Simple writer</a>: This example shows how to to write to a writable stream, then decode the stream and write the contents to the UI.</li>\n  <li><a href=\"https://mdn.github.io/dom-examples/streams/png-transform-stream/\" class=\"external\" rel=\" noopener\">Unpack chunks of a PNG</a>: This example shows how <a href=\"/en-US/docs/Web/API/ReadableStream/pipeThrough\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">pipeThrough() (en-US)</a> can be used to transform a ReadableStream into a stream of other data types by transforming a data of a PNG file into a stream of PNG chunks.</li>\n</ul>\n<p>Examples from other developers:</p>\n<ul>\n  <li><a href=\"https://fetch-progress.anthum.com/\" class=\"external\" rel=\" noopener\">Progress Indicators with Streams, Service Workers, &amp; Fetch</a>.</li>\n</ul>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Specification</th>\n      <th>Status</th>\n      <th>Comment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://streams.spec.whatwg.org/\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"The 'Streams' specification\" rel=\" noopener\">Streams</a></td>\n      <td><span class=\"spec-living\">Padrão em tempo real</span></td>\n      <td>Initial definition.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"compatibilidade_com_navegadores","title":"Compatibilidade com navegadores","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"WritableStream","id":"writablestream","isH3":true,"query":"api.WritableStream","dataURL":"/pt-BR/docs/Web/API/Streams_API/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/pt-BR/docs/Web/API/Streams_API/Concepts\">Streams API concepts</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Streams_API/Using_readable_streams\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using readable streams (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Streams_API/Using_writable_streams\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using writable streams (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"Conceitos e Uso","id":"conceitos_e_uso"},{"text":"Stream interfaces","id":"stream_interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores"},{"text":"See also","id":"see_also"}],"summary":"O streaming envolve a divisão de um recurso que você deseja receber pela rede em pequenos blocos e, em seguida, processa esses blocos aos poucos. Isso é algo que os navegadores fazem de qualquer maneira ao receber recursos para serem exibidos em páginas da web — o buffer de vídeos e mais está gradualmente disponível para reprodução, e às vezes você verá imagens sendo exibidas gradualmente conforme mais é carregado.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Streams API","locale":"en-US","native":"English (US)"},{"title":"Streams API","locale":"fr","native":"Français"},{"title":"Streams API","locale":"ja","native":"日本語"},{"title":"Streams API","locale":"ko","native":"한국어"},{"title":"Streams API","locale":"ru","native":"Русский"},{"title":"Stream API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"pt-br/web/api/streams_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/api/streams_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/API","title":"APIs da Web"},{"uri":"/pt-BR/docs/Web/API/Streams_API","title":"Streams API"}],"pageTitle":"Streams API - APIs da Web | MDN","noIndexing":false}}