{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"SharedWorker","mdn_url":"/pt-BR/docs/Web/API/SharedWorker","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"<ol><li><strong><a href=\"/pt-BR/docs/Web/API/Web_Workers_API\">Web Workers API</a></strong></li><li><strong><a href=\"/pt-BR/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Construtor</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/SharedWorker\"><code>SharedWorker()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Propriedades</summary><ol><li><a href=\"/pt-BR/docs/Web/API/SharedWorker/port\"><code>port</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/error_event\"><code>SharedWorker: error event</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Herança:</summary><ol><li><a href=\"/pt-BR/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Páginas relacionadas a Web Workers API</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a href=\"/pt-BR/docs/Web/API/Worker\"><code>Worker</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>SharedWorker</code></strong> interface represents a specific kind of worker that can be <em>accessed</em> from several browsing contexts, such as several windows, iframes or even workers. They implement an interface different than dedicated workers and have a different global scope, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code> <small>(en-US)</small></a>.</p>\n<blockquote>\n  <p><strong>Nota:</strong> If SharedWorker can be accessed from several browsing contexts, all those browsing contexts must share the exact same origin (same protocol, host and port).</p>\n</blockquote>\n<blockquote>\n  <p><strong>Nota:</strong> In Firefox, shared workers cannot be shared between private (i.e. browsing in a private window) and non-private documents (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1177621\" class=\"external\" rel=\" noopener\">bug&nbsp;1177621</a>.)</p>\n</blockquote>"}},{"type":"prose","value":{"id":"constructors","title":"Constructors","isH3":false,"content":"<dl>\n  <dt id=\"sharedworker_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/SharedWorker\"><code>SharedWorker()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Creates a shared web worker that executes the script at the specified URL.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em>Inherits properties from its parent, <a href=\"/pt-BR/docs/Web/API/EventTarget\"><code>EventTarget</code></a>, and implements properties from <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker\"><code>AbstractWorker</code> <small>(en-US)</small></a>.</em></p>\n<dl>\n  <dt id=\"abstractworker.onerror_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker/error_event\"><code>AbstractWorker.onerror</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Is an <a href=\"/pt-BR/docs/conflicting/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> that is called whenever an <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ErrorEvent\"><code>ErrorEvent</code> <small>(en-US)</small></a> of type <code>error</code> bubbles through the worker.</p>\n  </dd>\n  <dt id=\"sharedworker.port\"><a href=\"/pt-BR/docs/Web/API/SharedWorker/port\"><code>SharedWorker.port</code></a> <span title=\"Este valor não pode ser alterado.\" class=\"badge inline readonly\">Somente leitura </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/pt-BR/docs/Web/API/MessagePort\"><code>MessagePort</code></a> object used to communicate and control the shared worker.</p>\n  </dd>\n</dl><!---->"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>Inherits methods from its parent, <a href=\"/pt-BR/docs/Web/API/EventTarget\"><code>EventTarget</code></a>, and implements methods from <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Worker\"><code>AbstractWorker</code> <small>(en-US)</small></a>.</em></p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>In our <a href=\"https://github.com/mdn/simple-shared-worker\" class=\"external\" rel=\" noopener\">Basic shared worker example</a> (<a href=\"https://mdn.github.io/simple-shared-worker/\" class=\"external\" rel=\" noopener\">run shared worker</a>), we have two HTML pages, each of which uses some JavaScript to perform a simple calculation. The different scripts are using the same worker file to perform the calculation — they can both access it, even if their pages are running inside different windows.</p>\n<p>The following code snippet shows creation of a <code>SharedWorker</code> object using the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorker/SharedWorker\"><code>SharedWorker()</code> <small>(en-US)</small></a> constructor. Both scripts contain this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myWorker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedWorker</span><span class=\"token punctuation\">(</span><span class=\"token string\">'worker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Both scripts then access the worker through a <a href=\"/pt-BR/docs/Web/API/MessagePort\"><code>MessagePort</code></a> object created using the <a href=\"/pt-BR/docs/Web/API/SharedWorker/port\"><code>SharedWorker.port</code></a> property. If the onmessage event is attached using addEventListener, the port is manually started using its <code>start()</code> method:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>When the port is started, both scripts post messages to the worker and handle messages sent from it using <code>port.postMessage()</code> and <code>port.onmessage</code>, respectively:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>first<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>second<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message posted to worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nsecond<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>second<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message posted to worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmyWorker<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  result1<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Message received from worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Inside the worker we use the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SharedWorkerGlobalScope/connect_event\"><code>SharedWorkerGlobalScope.onconnect</code> <small>(en-US)</small></a> handler to connect to the same port discussed above. The ports associated with that worker are accessible in the <code><a href=\"/pt-BR/docs/Web/Reference/Events/connect\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">connect</a></code> event's <code>ports</code> property — we then use <a href=\"/pt-BR/docs/Web/API/MessagePort\"><code>MessagePort</code></a> <code>start()</code> method to start the port, and the <code>onmessage</code> handler to deal with messages sent from the main threads.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function-variable function\">onconnect</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>ports<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  port<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> workerResult <span class=\"token operator\">=</span> <span class=\"token string\">'Result: '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>workerResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  port<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Required when using addEventListener. Otherwise called implicitly by onmessage setter.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Specification</th>\n      <th>Status</th>\n      <th>Comment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://html.spec.whatwg.org/multipage/#sharedworker\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">HTML Living Standard<br><small lang=\"pt-BR\">The definition of 'SharedWorker' in that specification.</small></a></td>\n      <td><span class=\"spec-living\">Padrão em tempo real</span></td>\n      <td>No change from <a href=\"about:unknown\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"The 'Unknown' specification\">Unknown</a>.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores","isH3":false,"query":"api.SharedWorker","dataURL":"/pt-BR/docs/Web/API/SharedWorker/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/pt-BR/docs/Web/API/Worker\"><code>Worker</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using web workers (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"Constructors","id":"constructors"},{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores"},{"text":"See also","id":"see_also"}],"summary":"The SharedWorker interface represents a specific kind of worker that can be accessed from several browsing contexts, such as several windows, iframes or even workers. They implement an interface different than dedicated workers and have a different global scope, SharedWorkerGlobalScope (en-US).","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"SharedWorker","locale":"en-US","native":"English (US)"},{"title":"SharedWorker","locale":"fr","native":"Français"},{"title":"SharedWorker","locale":"ja","native":"日本語"},{"title":"SharedWorker","locale":"ko","native":"한국어"},{"title":"SharedWorker","locale":"ru","native":"Русский"},{"title":"SharedWorker","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"pt-br/web/api/sharedworker","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/api/sharedworker/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/API","title":"APIs da Web"},{"uri":"/pt-BR/docs/Web/API/SharedWorker","title":"SharedWorker"}],"pageTitle":"SharedWorker - APIs da Web | MDN","noIndexing":false}}