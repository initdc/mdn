{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"fetch()","mdn_url":"/pt-BR/docs/Web/API/fetch","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"<ol><li><strong><a href=\"/pt-BR/docs/Web/API/Fetch_API\">Fetch API</a></strong></li><li><strong><a href=\"/pt-BR/docs/Web/API/fetch\"><code>Fetch</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Páginas relacionadas a Fetch API</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code> <small>(en-US)</small></a></li><li><a href=\"/pt-BR/docs/Web/API/Request\"><code>Request</code></a></li><li><a href=\"/pt-BR/docs/Web/API/Response\"><code>Response</code></a></li><li><a href=\"/pt-BR/docs/Web/API/fetch\"><code>fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>O método global <strong><code>fetch()</code></strong> inicia o processo de busca de um recurso da rede, retornando uma promessa que é cumprida assim que a resposta estiver disponível.</p>\n<p>A promessa é resolvida para o objeto <a href=\"/pt-BR/docs/Web/API/Response\"><code>Response</code></a> que representa a resposta à sua solicitação. A promessa <em>não</em> rejeita erros de HTTP - apenas rejeita erros de rede. Você deve usar os manipuladores <code>then</code> para chechar erros de HTTP.</p>\n<p>\n  <code>WindowOrWorkerGlobalScope</code> é implementado por <a href=\"/pt-BR/docs/Web/API/Window\"><code>Window</code></a> e\n  <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code> <small>(en-US)</small></a>, o que significa que o método <code>fetch()</code> está disponível em praticamente qualquer contexto no qual você queira buscar recursos.\n</p>\n<p>\n  Uma promessa <a href=\"/pt-BR/docs/Web/API/fetch\" aria-current=\"page\"><code>fetch()</code></a> só é rejeitada quando um erro de rede é encontrado (que é geralmente quando há um problema de permissão ou\n  similar). Uma promessa <a href=\"/pt-BR/docs/Web/API/fetch\" aria-current=\"page\"><code>fetch()</code></a> <em>não</em> rejeita erros HTTP (<code>404</code>, etc.). Em vez disso, um manipulador\n  <code>then()</code> deve checar as propriedades <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/ok\"><code>Response.ok</code> <small>(en-US)</small></a> e/ou\n  <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/status\"><code>Response.status</code> <small>(en-US)</small></a>.\n</p>\n<p>O método <code>fetch()</code> é controlado pela diretiva <code>connect-src</code> da <a href=\"/pt-BR/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> em vez da diretiva dos recursos que está recuperando.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> Os parâmetros do método <code>fetch()</code> são idênticos\n    aos do construtor <a href=\"/pt-BR/docs/Web/API/Request/Request\" title=\"Request()\"><code>Request()</code></a>.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"sintaxe","title":"Sintaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> fetchResponsePromise <span class=\"token operator\">=</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>resource <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parâmetros","title":"Parâmetros","isH3":true,"content":"<dl>\n  <dt id=\"resource\"><code>resource</code></dt>\n  <dd>\n    <p>Isto define o recurso que você deseja buscar. Isto pode ser:</p>\n    <ul>\n      <li>String ou qualquer outro objeto com um <a href=\"/en-US/docs/MDN/Writing_guidelines/Howto/Write_an_API_reference/Information_contained_in_a_WebIDL_file#stringifiers\">stringifier</a> — incluindo um objeto <a href=\"/pt-BR/docs/Web/API/URL\"><code>URL</code></a> — que fornece a URL do recurso que você deseja buscar.</li>\n      <li>Um objeto <a href=\"/pt-BR/docs/Web/API/Request\"><code>Request</code></a>.</li>\n    </ul>\n  </dd>\n  <dt id=\"init\"><code>init</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Um objeto contendo quaisquer configurações customizadas que você deseja aplicar à solicitação. As opções possíveis são:</p>\n    <dl>\n      <dt id=\"method\"><code>method</code></dt>\n      <dd>\n        <p>\n          O método da requisição, por exemplo <code>GET</code>, <code>POST</code>. Observe que o cabeçalho\n          <a href=\"/pt-BR/docs/Web/HTTP/Headers/Origin\"><code>Origin</code></a> não é definido em requisições Fetch com um método de\n          <a href=\"/pt-BR/docs/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a> ou <a href=\"/pt-BR/docs/Web/HTTP/Methods/GET\"><code>GET</code></a>.\n          (Este comportamento foi corrigido no Firefox 65 — consulte <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1508661\" class=\"external\" rel=\" noopener\">bug&nbsp;1508661</a>).\n        </p>\n      </dd>\n      <dt id=\"headers\"><code>headers</code></dt>\n      <dd>\n        <p>\n          Qualquer cabeçalho que você queira adicionar à sua requisição, contido dentro de um objeto\n          <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code> <small>(en-US)</small></a> ou um objeto literal com valores <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>. Observe que <a href=\"/en-US/docs/Glossary/Forbidden_header_name\">alguns nomes são proibidos</a>.\n        </p>\n      </dd>\n      <dt id=\"body\"><code>body</code></dt>\n      <dd>\n        <p>\n          Qualquer corpo que você queira adicionar à sua requisição: podendo ser um\n          <a href=\"/pt-BR/docs/Web/API/Blob\"><code>Blob</code></a>, <a class=\"page-not-created\" title=\"A documentação sobre isto ainda não foi escrita; por favor considere contribuir!\"><code>BufferSource</code></a>, <a href=\"/pt-BR/docs/Web/API/FormData\"><code>FormData</code></a>,\n          <a href=\"/pt-BR/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code> <small>(en-US)</small></a>, ou um objeto\n          <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code> <small>(en-US)</small></a>. Note que uma requisição usando os métodos\n          <code>GET</code> or <code>HEAD</code> não pode ter um corpo.\n        </p>\n      </dd>\n      <dt id=\"mode\"><code>mode</code></dt>\n      <dd>\n        <p>\n          O modo que deseja usar para a requisição, por exemplo, <code>cors</code>,\n          <code>no-cors</code>, ou <code>same-origin</code>.\n        </p>\n      </dd>\n      <dt id=\"credentials\"><code>credentials</code></dt>\n      <dd>\n        <p>Controla o que os navegadores fazem com as credenciais (<a href=\"/pt-BR/docs/Web/HTTP/Cookies\">cookies</a>, entradas de <a href=\"/pt-BR/docs/Web/HTTP/Authentication\">Autenticação HTTP</a>, e certificados de cliente TLS). Deve ser uma das seguintes strings:</p>\n        <dl>\n          <dt id=\"omit\"><code>omit</code></dt>\n          <dd>\n            <p>Diz aos navegadores para excluir credenciais da requisição, e ignorar quaisquer credenciais enviadas de volta na resposta (por exemplo, qualquer cabeçalho <a href=\"/pt-BR/docs/Web/HTTP/Headers/Set-Cookie\"><code>Set-Cookie</code></a>).</p>\n          </dd>\n          <dt id=\"same-origin\"><code>same-origin</code></dt>\n          <dd>\n            <p>Diz aos navegadores para incluir credenciais com requisições para URLs da mesma origem, e usar quaisquer credenciais enviadas de volta nas respostas de URLs da mesma origem.</p>\n          </dd>\n          <dt id=\"include\"><code>include</code></dt>\n          <dd>\n            <p>Diz aos navegadores para incluir credenciais em ambas requisições <code>same-origin</code> e <code>cross-origin</code>, e sempre use as credenciais enviadas de volta nas respostas.</p>\n            <div class=\"notecard note\" id=\"sect2\">\n              <p><strong>Note:</strong> As credenciais podem ser incluídas em requisições cross-origin simples e \"finais\", mas não devem ser incluídas em <a href=\"/en-US/docs/Web/HTTP/CORS#preflight_requests_and_credentials\">requisições de comprovação de CORS</a>.</p>\n            </div>\n          </dd>\n        </dl>\n      </dd>\n      <dt id=\"cache\"><code>cache</code></dt>\n      <dd>\n        <p>Uma string indicando como a requisição vai interagir com o <a href=\"/pt-BR/docs/Web/HTTP/Caching\">cache HTTP</a> do navegador. Os valores possíveis, <code>default</code>, <code>no-store</code>, <code>reload</code>, <code>no-cache</code>, <code>force-cache</code>, e <code>only-if-cached</code>, estão documentados no artigo para a propriedade <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Request/cache\"><code>cache</code> <small>(en-US)</small></a> do objeto <a href=\"/pt-BR/docs/Web/API/Request\"><code>Request</code></a>.</p>\n      </dd>\n      <dt id=\"redirect\"><code>redirect</code></dt>\n      <dd>\n        <p>Como lidar com uma resposta <code>redirect</code>:</p>\n        <ul>\n          <li><code>follow</code>: Segue os redirecionamentos automaticamente. A menos que esteja definido de outra forma, o redirecionamento é definido, por padrão, como <code>follow</code>.</li>\n          <li><code>error</code>: Aborta com um erro se o redirecionamento ocorrer.</li>\n          <li>\n            <code>manual</code>: O autor da chamada pretende processar a resposta em outro contexto.\n            Veja <a href=\"https://fetch.spec.whatwg.org/#requests\" class=\"external\" rel=\" noopener\">WHATWG fetch standard</a> para mais informações.\n          </li>\n        </ul>\n      </dd>\n      <dt id=\"referrer\"><code>referrer</code></dt>\n      <dd>\n        <p>\n          Uma <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code> <small>(en-US)</small></a> especificando o referenciador da requisição. Isso pode ser uma URL\n          same-origin, <code>about:client</code>, ou uma string vazia.\n        </p>\n      </dd>\n      <dt id=\"referrerpolicy\"><code>referrerPolicy</code></dt>\n      <dd>\n        <p>\n          Especifica a <a href=\"https://w3c.github.io/webappsec-referrer-policy/#referrer-policies\" class=\"external\" rel=\" noopener\">referrer\npolicy</a> para usar para a requisição. Pode ser <code>no-referrer</code>,\n          <code>no-referrer-when-downgrade</code>, <code>same-origin</code>,\n          <code>origin</code>, <code>strict-origin</code>,\n          <code>origin-when-cross-origin</code>,\n          <code>strict-origin-when-cross-origin</code> ou <code>unsafe-url</code>.\n        </p>\n      </dd>\n      <dt id=\"integrity\"><code>integrity</code></dt>\n      <dd>\n        <p>\n          Contém o valor <a href=\"/en-US/docs/Web/Security/Subresource_Integrity\">subresource integrity</a>\n          da requisição (por exemplo,\n          <code>sha256-BpfBw7ivV8q2jLiT13fxDYAe2tJllusRSZ273h2nFSE=</code>).\n        </p>\n      </dd>\n      <dt id=\"keepalive\"><code>keepalive</code></dt>\n      <dd>\n        <p>\n          A opção <code>keepalive</code> pode ser usada para permitir que a requisição sobreviva à página. A busca com a flag <code>keepalive</code> é uma substituição para a API\n          <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Navigator/sendBeacon\"><code>Navigator.sendBeacon()</code> <small>(en-US)</small></a>.\n        </p>\n      </dd>\n      <dt id=\"signal\"><code>signal</code></dt>\n      <dd>\n        <p>Uma instância de objeto <a href=\"/pt-BR/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a>; permite comunicar com uma requisição fetch e abortá-la, se desejado, por meio de um <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code> <small>(en-US)</small></a>.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"valor_de_retorno","title":"Valor de retorno","isH3":true,"content":"<p>Uma <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> que resolve para um objeto <a href=\"/pt-BR/docs/Web/API/Response\"><code>Response</code></a>.</p>"}},{"type":"prose","value":{"id":"exceções","title":"Exceções","isH3":true,"content":"<dl>\n  <dt id=\"aborterror\"><code>AbortError</code></dt>\n  <dd>\n    <p>\n      A requisição foi abortada devido a uma chamada ao <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code> <small>(en-US)</small></a> ou ao método\n      <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbortController/abort\"><code>abort()</code> <small>(en-US)</small></a>.\n    </p>\n  </dd>\n  <dt id=\"typeerror\"><code>TypeError</code></dt>\n  <dd>\n    <p>Pode ocorrer pelos seguintes motivos:</p>\n  </dd>\n</dl>\n<table>\n  <thead>\n    <tr>\n      <th scope=\"col\">Motivo</th>\n      <th scope=\"col\">Exemplos de falha</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Nome do cabeçalho inválido</td>\n      <td>\n        <pre class=\"notranslate\">// space in \"C ontent-Type\"\nconst headers = {\n    \"C ontent-Type\": \"text/xml\",\n    \"Breaking-Bad\": \"&lt;3\"\n};\nfetch('https://example.com/', { headers });\n        </pre>\n      </td>\n    </tr>\n    <tr>\n      <td>Valor do cabeçalho inválido. O objeto header deve conter exatamente dois elementos.</td>\n      <td>\n        <pre class=\"notranslate\">const headers = [\n    [\"Content-Type\", \"text/html\", \"extra\"],\n    [\"Accept\"],\n];\nfetch('https://example.com/', { headers });\n        </pre>\n      </td>\n    </tr>\n    <tr>\n      <td>URL inválida ou esquema, ou está usando um esquema que fetch não suporta, ou está usando um esquema que não é suportado por um modo de requisição específico.</td>\n      <td>\n        <pre class=\"notranslate\">fetch('blob://example.com/', { mode: 'cors' })\n        </pre>\n      </td>\n    </tr>\n    <tr>\n      <td>URL que inclui credenciais</td>\n      <td>\n        <pre class=\"notranslate\">fetch('https://user:password@example.com/')\n        </pre>\n      </td>\n    </tr>\n    <tr>\n      <td>URL de referência inválida</td>\n      <td>\n        <pre class=\"notranslate\">fetch('https://example.com/', {\n  referrer: './abc\\u0000df'\n})\n        </pre>\n      </td>\n    </tr>\n    <tr>\n      <td>Modos inválidos (<code>navigate</code> and <code>websocket</code>)</td>\n      <td>\n        <pre class=\"notranslate\">fetch('https://example.com/', { mode: 'navigate' })\n        </pre>\n      </td>\n    </tr>\n    <tr>\n      <td>Se o modo de cache da requisição é \"only-if-cached\" e o modo da requisição é diferente de \"same-origin\".</td>\n      <td>\n        <pre class=\"notranslate\">fetch('https://example.com/', {\n  cache: 'only-if-cached',\n  mode: 'no-cors'\n})\n        </pre>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        Se o método da requisição for um token de nome inválido ou um dos cabeçalhos proibidos:\n        CONNECT, TRACE or TRACK\n      </td>\n      <td>\n        <pre class=\"notranslate\">fetch('https://example.com/', { method: 'CONNECT' })\n        </pre>\n      </td>\n    </tr>\n    <tr>\n      <td>Se o modo da requisição é \"no-cors\" e o método da requisição não é um método CORS-safe-listed (GET, HEAD ou POST)</td>\n      <td>\n        <pre class=\"notranslate\">fetch('https://example.com/', {\n  method: 'CONNECT',\n  mode: 'no-cors'\n})\n        </pre>\n      </td>\n    </tr>\n    <tr>\n      <td>Se o método da requisição é GET ou HEAD e o corpo não for nulo(null) ou undefined.</td>\n      <td>\n        <pre class=\"notranslate\">fetch('https://example.com/', {\n  method: 'GET',\n  body: new FormData()\n})\n        </pre>\n      </td>\n    </tr>\n    <tr>\n      <td>Se fetch gera um erro de rede.</td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"exemplos","title":"Exemplos","isH3":false,"content":"<p>\n  No nosso exemplo de <a href=\"https://github.com/mdn/fetch-examples/tree/master/fetch-request\" class=\"external\" rel=\" noopener\">requisição Fetch</a> (veja <a href=\"https://mdn.github.io/fetch-examples/fetch-request/\" class=\"external\" rel=\" noopener\">Fetch Request live</a>) nós criamos um novo objeto <a href=\"/pt-BR/docs/Web/API/Request\"><code>Request</code></a> usando um constructor relevante, depois buscamos isso usando uma chamada ao <code>fetch()</code>. Uma vez que estamos buscando uma imagem, executamos\n  <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/blob\"><code>Response.blob()</code> <small>(en-US)</small></a> na resposta para dar a ela o tipo MIME adequado para que lidemos adequadamente\n  handled properly, então criamos um Objeto URL disso e exibimos isso em um elemento\n  <a href=\"/pt-BR/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">HTTP error! status: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>response<span class=\"token punctuation\">.</span>status<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> objectURL <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  myImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> objectURL<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  No exemplo <a href=\"https://github.com/mdn/fetch-examples/blob/master/fetch-with-init-then-request/index.html\" class=\"external\" rel=\" noopener\">Fetch\nwith init then Request</a> (veja <a href=\"https://mdn.github.io/fetch-examples/fetch-with-init-then-request/\" class=\"external\" rel=\" noopener\">Fetch\nRequest init live</a>), nós fazemos a mesma coisa exceto que passamos em um objeto\n  <code>init</code> quando invocamos o <code>fetch()</code>:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> myHeaders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyHeaders<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Accept'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myInit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> myHeaders<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token string\">'default'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">,</span> myInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Você também poderia passar o objeto <code>init</code> com o constructor\n  <code>Request</code> para obter o mesmo efeito:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">,</span> myInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Você também pode usar um object literal como <code>headers</code> em\n  <code>init</code>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myInit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'Accept'</span><span class=\"token operator\">:</span> <span class=\"token string\">'image/jpeg'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token string\">'default'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">,</span> myInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Especificações","id":"especificações","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#fetch-method","title":"Fetch Standard"}],"query":"api.fetch"}},{"type":"browser_compatibility","value":{"title":"Compatibilidade nos navegadores","id":"compatibilidade_nos_navegadores","isH3":false,"query":"api.fetch","dataURL":"/pt-BR/docs/Web/API/fetch/bcd.json"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n  <li><a href=\"/pt-BR/docs/Web/API/Fetch_API\">Fetch API</a></li>\n  <li><a href=\"/pt-BR/docs/Web/API/Service_Worker_API\">ServiceWorker API</a></li>\n  <li><a href=\"/pt-BR/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/pt-BR/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"Sintaxe","id":"sintaxe"},{"text":"Exemplos","id":"exemplos"},{"text":"Especificações","id":"especificações"},{"text":"Compatibilidade nos navegadores","id":"compatibilidade_nos_navegadores"},{"text":"Veja também","id":"veja_também"}],"summary":"O método global fetch() inicia o processo de busca de um recurso da rede, retornando uma promessa que é cumprida assim que a resposta estiver disponível.","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"fetch()","locale":"en-US","native":"English (US)"},{"title":"WindowOrWorkerGlobalScope.fetch()","locale":"es","native":"Español"},{"title":"GlobalFetch.fetch()","locale":"fr","native":"Français"},{"title":"WindowOrWorkerGlobalScope.fetch()","locale":"ja","native":"日本語"},{"title":"WindowOrWorkerGlobalScope.fetch()","locale":"ru","native":"Русский"},{"title":"fetch()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"pt-br/web/api/fetch","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/api/fetch/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/API","title":"APIs da Web"},{"uri":"/pt-BR/docs/Web/API/fetch","title":"fetch()"}],"pageTitle":"fetch() - APIs da Web | MDN","noIndexing":false}}