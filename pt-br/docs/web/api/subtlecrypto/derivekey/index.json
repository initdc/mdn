{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"SubtleCrypto.deriveKey()","mdn_url":"/pt-BR/docs/Web/API/SubtleCrypto/deriveKey","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"<ol><li><strong><a href=\"/pt-BR/docs/Web/API/Web_Crypto_API\">Web Crypto API</a></strong></li><li><strong><a href=\"/pt-BR/docs/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Métodos</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/decrypt\"><code>decrypt()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/deriveBits\"><code>deriveBits()</code> <small>(en-US)</small></a></li><li><em><code>deriveKey()</code></em></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/digest\"><code>digest()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/encrypt\"><code>encrypt()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/exportKey\"><code>exportKey()</code> <small>(en-US)</small></a></li><li><a href=\"/pt-BR/docs/Web/API/SubtleCrypto/GenerateKey\"><code>generateKey()</code></a></li><li><a href=\"/pt-BR/docs/Web/API/SubtleCrypto/importKey\"><code>importKey()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/sign\"><code>sign()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/unwrapKey\"><code>unwrapKey()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/verify\"><code>verify()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/wrapKey\"><code>wrapKey()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Páginas relacionadas a Web Crypto API</summary><ol><li><a href=\"/pt-BR/docs/Web/API/Crypto\"><code>Crypto</code></a></li><li><a href=\"/pt-BR/docs/Web/API/CryptoKey\"><code>CryptoKey</code></a></li><li><a href=\"/pt-BR/docs/Web/API/crypto_property\"><code>crypto_property</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>O método <strong><code>SubtleCrypto.deriveKey()</code></strong> retorna como <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> de um recentemente gerado <a href=\"/pt-BR/docs/Web/API/CryptoKey\"><code>CryptoKey</code></a> derivada de uma master key e um algoritmo específico dados como parâmetro.</p>"}},{"type":"prose","value":{"id":"sintaxe","title":"Sintaxe","isH3":false,"content":"<pre class=\"notranslate\">var result = crypto.subtle.deriveKey(algorithm, masterKey, derivedKeyAlgorithm, extractable, keyUsages);\n</pre>"}},{"type":"prose","value":{"id":"parâmetros","title":"Parâmetros","isH3":true,"content":"<ul>\n  <li><code>algorithm</code> é um objeto definindo o algoritmo de derivação a se usar. Os valores suportados são:\n    <ul>\n      <li><code>{\"name\": \"ECDH\", \"public\": publicKey}</code></li>\n      <li><code>{\"name\": \"DH\", \"public\": publicKey}</code></li>\n      <li><code>{\"name\": \"PBKDF2\", salt, iterations, hash}</code> where <em><code>salt</code></em> is an <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> ou um <a class=\"page-not-created\" title=\"A documentação sobre isto ainda não foi escrita; por favor considere contribuir!\"><code>ArrayBufferView</code></a>, <em><code>iterations</code></em> é o número de interações e <em><code>hash</code></em> é um <a href=\"/pt-BR/docs/conflicting/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> identificando o algoritmo hashing para uso.</li>\n      <li><code>{\"name\": \"HKDF-CTR\", hash, label, context}</code></li>\n    </ul>\n  </li>\n  <li><em><code>masterKey</code></em> é uma <a href=\"/pt-BR/docs/Web/API/CryptoKey\"><code>CryptoKey</code></a> representando a master key para ser utilizada por um algoritmo de derivação de key.</li>\n  <li><code>derivedKeyAlgorithm</code> é um objeto que define o algoritmo, a key derivada será utilizada para <a href=\"/pt-BR/docs/conflicting/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> como um atalho para <code>{\"name\": derivedKeyAlgo}</code>. Para AES uma propriedade <code>length</code> também é requerida, e os valores possíveis são 128, 192 ou 256 bits.</li>\n  <li><code>extractable</code> é um <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicando se a key pode ser extraída de um objeto <a href=\"/pt-BR/docs/Web/API/CryptoKey\"><code>CryptoKey</code></a> em um estágio mais tardio.</li>\n  <li><code>keyUsages</code> é um <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> indicando o que pode ser feito com a chave derivada. Os valores possíveis do array são:\n    <ul>\n      <li><code>\"encrypt\"</code>, permitindo que a key seja utilizada para <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Encryption\">encrypting <small>(en-US)</small></a> mensagens.</li>\n      <li><code>\"decrypt\"</code>, permitindo que a key seja utilizada para <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Decryption\">decrypting <small>(en-US)</small></a> mensagens.</li>\n      <li><code>\"sign\"</code>, permitindo que a key seja utilizada para <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Glossary/Signature\">signing <small>(en-US)</small></a> mensagens.</li>\n      <li><code>\"verify\"</code>, permitindo que a key seja utilizada para <a class=\"page-not-created\" title=\"A documentação sobre isto ainda não foi escrita; por favor considere contribuir!\">verifying the signature</a> de mensagens.</li>\n      <li><code>\"deriveKey\"</code>, permitindo que a key seja utilizada como key base na derivação de uma nova key.</li>\n      <li><code>\"deriveBits\"</code>, permitindo que a key seja utilizada como key base na derivação de bits de informação para uso em criptografias primitivas.</li>\n      <li><code>\"wrapKey\"</code>, permitindo que a key envolva uma key simétrica (transferência, armazenamento) em ambientes não seguros.</li>\n      <li><code>\"unwrapKey\"</code>, permitindo que a key se desvincule de uma key simétrica para uso (transfererência, armazenamento) em ambientes não seguros.</li>\n    </ul>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"valor_de_retorno","title":"Valor de retorno","isH3":true,"content":"<ul>\n  <li><code>result</code> é uma <a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> que retorna a key derivada como uma <a href=\"/pt-BR/docs/Web/API/CryptoKey\"><code>CryptoKey</code></a> ou uma <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CryptoKeyPair\"><code>CryptoKeyPair</code> <small>(en-US)</small></a>.</li>\n</ul>"}},{"type":"prose","value":{"id":"exceções","title":"Exceções","isH3":true,"content":"<p>A promise é rejeitada quando uma das seguintes exceções é encontrada:</p>\n<ul>\n  <li><code>InvalidAccessError</code> quando a master key não é uma key para o algoritmo de derivação requisitado ou se o valor desta chave, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CryptoKey\"><code>CryptoKey.usages</code> <small>(en-US)</small></a>, não contém <code>\"deriveKey\"</code>.</li>\n  <li><code>NotSupported</code> quando tentando usar um algoritmo que não é nem desconhecido e nem se encaixa para a derivação, ou se, o algoritmo requisitado da key derivada não define o comprimento da key.</li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">SyntaxError (en-US)</a> quando <em><code>keyUsages</code></em> está vazio mas a key desvinculada é do tipo <code>\"secret\"</code> ou <code>\"private\"</code>.</li>\n</ul>"}},{"type":"prose","value":{"id":"exemplo","title":"Exemplo","isH3":false,"content":"<p>Aqui está um exemplo de como usar <strong>deriveKey()</strong> para criar uma <strong>Secure Remote Password</strong> (também nomeado de <strong>Proof of Secret</strong>) da password de um usuário.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// salt deve ser Uint8Array ou ArrayBuffer</span>\n<span class=\"token keyword\">var</span> saltBuffer <span class=\"token operator\">=</span> Unibabel<span class=\"token punctuation\">.</span><span class=\"token function\">hexToBuffer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'e85c53e7f119d41fd7895cdc9d7bb9dd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// não use métodos naïve para conversão de texto, senão caracteres</span>\n<span class=\"token comment\">// internacionais não terão a sequência correta de byte. Use o TextEncoder quando</span>\n<span class=\"token comment\">// possível ou então use polyfills relevantes</span>\n<span class=\"token keyword\">var</span> passphraseKey <span class=\"token operator\">=</span> Unibabel<span class=\"token punctuation\">.</span><span class=\"token function\">utf8ToBuffer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I hëart årt and £$¢!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Você deve primeiramente importar sua passphrase Uint8array em uma CryptoKey</span>\nwindow<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span>subtle<span class=\"token punctuation\">.</span><span class=\"token function\">importKey</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'raw'</span><span class=\"token punctuation\">,</span>\n  passphraseKey<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'PBKDF2'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'deriveBits'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'deriveKey'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> window<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span>subtle<span class=\"token punctuation\">.</span><span class=\"token function\">deriveKey</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">'PBKDF2'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"salt\"</span><span class=\"token operator\">:</span> saltBuffer<span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// não seja muito ambicioso, ou pelo menos tenha em mente</span>\n      <span class=\"token comment\">// que celulares com baixo poder de processamento vão acessar o seu app</span>\n      <span class=\"token string-property property\">\"iterations\"</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">'SHA-256'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    key<span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// Nota: para essa demo nós não vamos precisar de uma cipher suite,</span>\n    <span class=\"token comment\">// mas a API exige que a mesma seja especificada.</span>\n\n    <span class=\"token comment\">// Para AES o comprimento requerido é de 128 ou 256 bits (não bytes)</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">'AES-CBC'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"length\"</span><span class=\"token operator\">:</span> <span class=\"token number\">256</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// Independente da resposta a key é extraível (menos seguro) ou não extraível (mais seguro),</span>\n    <span class=\"token comment\">// quando falso, a key pode ser entregue apenas como um objeto crypto web, não inspecionado</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// esse objeto crypto web será permitido para apenas essas funções:</span>\n    <span class=\"token punctuation\">[</span> <span class=\"token string\">\"encrypt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"decrypt\"</span> <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">webKey</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> crypto<span class=\"token punctuation\">.</span>subtle<span class=\"token punctuation\">.</span><span class=\"token function\">exportKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"raw\"</span><span class=\"token punctuation\">,</span> webKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">buffer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> proofOfSecret <span class=\"token operator\">=</span> Unibabel<span class=\"token punctuation\">.</span><span class=\"token function\">bufferToHex</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// esta proof-of-secret / password remota-segura</span>\n    <span class=\"token comment\">// pode agora ser enviada no lugar da password do usuário</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Nota: Por conta de não haver ferramentas nativas que convertam entre Uint8Array, Unicode, hex, e base64, você provavelmente vai querer utilizar algo como o <a href=\"https://github.com/coolaj86/unibabel-js\" class=\"external\" rel=\" noopener\">Unibabel</a> ou <a href=\"https://github.com/feross/buffer\" class=\"external\" rel=\" noopener\">Buffer</a> para converter entre eles.</p>"}},{"type":"prose","value":{"id":"especificações","title":"Especificações","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Especificação</th>\n      <th>Status</th>\n      <th>Comentário</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.w3.org/TR/WebCryptoAPI/#dfn-SubtleCrypto-method-deriveKey\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Web Cryptography API<br><small lang=\"pt-BR\">The definition of 'SubtleCrypto.deriveKey()' in that specification.</small></a></td>\n      <td><span class=\"spec-rec\">Recomendação</span></td>\n      <td>Definição inicial.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores","isH3":false,"query":"api.SubtleCrypto.deriveKey","dataURL":"/pt-BR/docs/Web/API/SubtleCrypto/deriveKey/bcd.json"}},{"type":"prose","value":{"id":"veja_também","title":"Veja também","isH3":false,"content":"<ul>\n  <li><a href=\"/pt-BR/docs/Web/API/Crypto\"><code>Crypto</code></a> e <a href=\"/pt-BR/docs/Web/API/Crypto/subtle\"><code>Crypto.subtle</code></a>.</li>\n  <li><a href=\"/pt-BR/docs/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a>, a interface a qual ele pertence.</li>\n</ul>"}},{"type":"prose","value":{"id":"dicionário","title":"Dicionário:","isH3":true,"content":"<p>\"Key\" = \"Chave\"</p>\n<p>\"Master key\" = \"Chave mestre\"</p>\n<p>\"Proof-of-secret\" = \"Prova de segredo ou Atestado de sigilo\"</p>\n<p>\"Password\" = \"Palavra passe ou Senha\"</p>"}}],"toc":[{"text":"Sintaxe","id":"sintaxe"},{"text":"Exemplo","id":"exemplo"},{"text":"Especificações","id":"especificações"},{"text":"Compatibilidade com navegadores","id":"compatibilidade_com_navegadores"},{"text":"Veja também","id":"veja_também"}],"summary":"O método SubtleCrypto.deriveKey() retorna como Promise de um recentemente gerado CryptoKey derivada de uma master key e um algoritmo específico dados como parâmetro.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"SubtleCrypto.deriveKey()","locale":"en-US","native":"English (US)"}],"source":{"folder":"pt-br/web/api/subtlecrypto/derivekey","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/web/api/subtlecrypto/derivekey/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Web","title":"Tecnologia Web para desenvolvedores"},{"uri":"/pt-BR/docs/Web/API","title":"APIs da Web"},{"uri":"/pt-BR/docs/Web/API/SubtleCrypto","title":"SubtleCrypto"},{"uri":"/pt-BR/docs/Web/API/SubtleCrypto/deriveKey","title":"SubtleCrypto.deriveKey()"}],"pageTitle":"SubtleCrypto.deriveKey() - APIs da Web | MDN","noIndexing":false}}