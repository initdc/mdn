{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Detecção de Colisão 2D","mdn_url":"/pt-BR/docs/Games/Techniques/2D_collision_detection","locale":"pt-BR","native":"Português (do Brasil)","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introdução</summary>\n            <ol>\n              <li><a href=\"/pt-BR/docs/Games/Introduction\">Introdução</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Anatomy\">Anatomia de um video game</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Examples\">Exemplos</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs para desenvolvimento de jogos</summary>\n            <ol>\n              <li><a href=\"/pt-BR/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/pt-BR/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/pt-BR/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/pt-BR/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/pt-BR/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Técnicas</summary>\n            <ol>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/Async_scripts\">Usando async scripts para&amp;nbsp;asm.js</a></li>\n              <li><a href=\"/pt-BR/docs/Web/Apps/Developing/Optimizing_startup_performance\">Otimizando a performance de startup</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/WebRTC_data_channels\">Usando canais de dados WebRTC peer-to-peer</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/Efficient_animation_for_web_games\">Animação eficiente para jogos web</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/Audio_for_Web_Games\">Audio para Jogos Web</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/2D_collision_detection\">Detecção de colisão 2D</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/Tilemaps\">Visão geral de Tiles e tilemaps</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Visão geral de jogos 3D na Web</summary>\n            <ol>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/3D_on_the_web\">Visão geral de jogos 3D na Web</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explicando teoria básica 3D</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Desenvolvendo um demo básico com A-Frame</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Desenvolvendo um demo básico com Babylon.js</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Desenvolvendo um demo básico com PlayCanvas</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Desenvolvendo um demo básico com Three.js</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/3D_collision_detection\">Detecção de colisão 3D</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">BDetecção da quantidade de&amp;nbsp;choque de colisão com THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementando mecanismos de controle de jogo</summary>\n            <ol>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/Control_mechanisms\">Visão geral de mecanismos de controle de jogo</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Controles de toque Mobile</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Controles de rato e teclado em Desktop</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Controle de gamepad em Desktop</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutoriais</summary>\n            <ol>\n              <li><a href=\"/pt-BR/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">Jogo 2D usando JavaScript puro</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Tutorials/2D_breakout_game_Phaser\">Jogo 2D usando Phaser</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">Jogo labirinto 2D com device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">Plataforma de jogo 2D usando Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publicando jogos</summary>\n            <ol>\n              <li><a href=\"/pt-BR/docs/Games/Publishing_games\">Visão geral sobre publicação de jogos</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Publishing_games/Game_distribution\">Distribuição de Jogos</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Publishing_games/Game_promotion\">Promoção de Jogos</a></li>\n              <li><a href=\"/pt-BR/docs/Games/Publishing_games/Game_monetization\">Monetização de Jogos</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Algoritmos para detectar colisões em jogos 2D dependem do tipo de formas que podem colidir (por exemplo, retângulo para retângulo, retângulo para círculo, círculo para círculo). Geralmente, você terá uma forma genérica simples que abrange a entidade conhecida como \"hitbox\", portanto, mesmo que a colisão não seja perfeita, ela terá boa aparência e terá bom desempenho em várias entidades. Este artigo fornece uma revisão das técnicas mais comuns usadas para fornecer detecção de colisão em jogos 2D.</p>"}},{"type":"prose","value":{"id":"caixa_delimitadora_alinhada_por_eixo","title":"Caixa delimitadora alinhada por eixo","isH3":false,"content":"<p>Uma das formas mais simples de detecção de colisão é entre dois retângulos alinhados no eixo — ou seja, sem rotação. O algoritmo funciona garantindo que não haja nenhum espaço entre os 4 lados dos retângulos. Qualquer lacuna significa que uma colisão não existe.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> rect1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> rect2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rect1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;</span> rect2<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> rect2<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span>\n   rect1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> rect1<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&gt;</span> rect2<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span>\n   rect1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&lt;</span> rect2<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> rect2<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&amp;&amp;</span>\n   rect1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> rect1<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&gt;</span> rect2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// collision detected!</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// filling in the values =&gt;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token number\">55</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">20</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token number\">55</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// collision detected!</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cr-stage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Mova o retângulo com as setas do teclado. Verde significa colisão, azul significa não-colisão.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/crafty/0.5.4/crafty-min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code>Crafty<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> dim1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">w</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">h</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> dim2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">w</span><span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">h</span><span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> rect1 <span class=\"token operator\">=</span> Crafty<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2D, Canvas, Color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>dim1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> rect2 <span class=\"token operator\">=</span> Crafty<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2D, Canvas, Color, Keyboard, Fourway\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fourway</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>dim2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">rect2</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EnterFrame\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rect1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;</span> rect2<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> rect2<span class=\"token punctuation\">.</span>w <span class=\"token operator\">&amp;&amp;</span>\n        rect1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> rect1<span class=\"token punctuation\">.</span>w <span class=\"token operator\">&gt;</span> rect2<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span>\n        rect1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&lt;</span> rect2<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> rect2<span class=\"token punctuation\">.</span>h <span class=\"token operator\">&amp;&amp;</span>\n        rect1<span class=\"token punctuation\">.</span>h <span class=\"token operator\">+</span> rect1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&gt;</span> rect2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// collision detected!</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"green\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// no collision</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">color</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"Caixa delimitadora alinhada por eixo\" id=\"frame_rect_code\" width=\"700\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/pt-BR/docs/Games/Techniques/2D_collision_detection/_sample_.rect_code.html\" loading=\"lazy\"></iframe>\n<blockquote>\n  <p><strong>Nota:</strong> <a href=\"https://jsfiddle.net/jlr7245/217jrozd/3/\" class=\"external\" rel=\" noopener\">Outro exemplo sem o Canvas ou bibliotecas externas.</a></p>\n</blockquote>"}},{"type":"prose","value":{"id":"colisão_circular","title":"Colisão Circular","isH3":false,"content":"<p>Outra forma simples para detecção de colisão é entre dois círculos. Esse algoritmo funciona tomando os pontos centrais dos dois círculos e garantindo que a distância entre os pontos centrais seja menor que os dois raios somados.</p>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cr-stage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Move the circle with arrow keys. Green means collision, blue means no collision.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/crafty/0.5.4/crafty-min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: css hidden notranslate\"><code><span class=\"token selector\">#cr-stage</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> static <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code>Crafty<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> dim1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> dim2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span>\n\nCrafty<span class=\"token punctuation\">.</span><span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Circle\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function-variable function\">circle</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">radius<span class=\"token punctuation\">,</span> color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> radius<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>h <span class=\"token operator\">=</span> radius <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color <span class=\"token operator\">||</span> <span class=\"token string\">\"#000000\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Move\"</span><span class=\"token punctuation\">,</span> Crafty<span class=\"token punctuation\">.</span>DrawManager<span class=\"token punctuation\">.</span>drawAll<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n   <span class=\"token function-variable function\">draw</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> Crafty<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n       ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n       ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>\n           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span>\n           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span>\n           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">,</span>\n           <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n           Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n       <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> circle1 <span class=\"token operator\">=</span> Crafty<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2D, Canvas, Circle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>dim1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">circle</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> circle2 <span class=\"token operator\">=</span> Crafty<span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2D, Canvas, Circle, Fourway\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fourway</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>dim2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">circle</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">circle2</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EnterFrame\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> dx <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>circle1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> circle1<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>circle2<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> circle2<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> dy <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>circle1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> circle1<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>circle2<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> circle2<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> distance <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>dx <span class=\"token operator\">*</span> dx <span class=\"token operator\">+</span> dy <span class=\"token operator\">*</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">&lt;</span> circle1<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">+</span> circle2<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// collision detected!</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"green\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// no collision</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> circle1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">radius</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> circle2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">radius</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> dx <span class=\"token operator\">=</span> circle1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> circle2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> dy <span class=\"token operator\">=</span> circle1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> circle2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> distance <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>dx <span class=\"token operator\">*</span> dx <span class=\"token operator\">+</span> dy <span class=\"token operator\">*</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">&lt;</span> circle1<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">+</span> circle2<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// collision detected!</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"Colisão Circular\" id=\"frame_playable_code\" width=\"700\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/pt-BR/docs/Games/Techniques/2D_collision_detection/_sample_.playable_code.html\" loading=\"lazy\"></iframe>\n<blockquote>\n  <p><strong>Nota:</strong> <a href=\"https://jsfiddle.net/jlr7245/teb4znk0/20/\" class=\"external\" rel=\" noopener\">Aqui é outro exemplo sem o Canvas ou bibliotecas externas.</a></p>\n</blockquote>"}},{"type":"prose","value":{"id":"teorema_do_eixo_de_separação","title":"Teorema do eixo de separação","isH3":false,"content":"<p>Este é um algoritmo de colisão que pode detectar uma colisão entre quaisquer dois polígonos *convexos*. É mais complicado implementar do que os métodos acima, mas é mais poderoso. A complexidade de um algoritmo como esse significa que precisaremos considerar a otimização de desempenho, abordada na próxima seção.</p>\n<p>A implementação do SAT está fora do escopo desta página, portanto, veja os tutoriais recomendados abaixo:</p>\n<ol>\n  <li><a href=\"http://www.sevenson.com.au/actionscript/sat/\" class=\"external\" rel=\" noopener\">Separating Axis Theorem (SAT) explanation</a></li>\n  <li><a href=\"http://www.metanetsoftware.com/technique/tutorialA.html\" class=\"external\" rel=\" noopener\">Collision detection and response</a></li>\n  <li><a href=\"http://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\" class=\"external\" rel=\" noopener\">Collision detection Using the Separating Axis Theorem</a></li>\n  <li><a href=\"http://www.codezealot.org/archives/55\" class=\"external\" rel=\" noopener\">SAT (Separating Axis Theorem)</a></li>\n  <li><a href=\"http://rocketmandevelopment.com/blog/separation-of-axis-theorem-for-collision-detection/\" class=\"external\" rel=\" noopener\">Separation of Axis Theorem (SAT) for Collision DDetection</a></li>\n</ol>"}},{"type":"prose","value":{"id":"performance_de_colisão","title":"Performance de Colisão","isH3":false,"content":"<p>Embora alguns desses algoritmos para detecção de colisão sejam simples o suficiente para serem calculados, pode ser um desperdício de ciclos testar todas as entidades com todas as outras entidades. Normalmente os jogos dividem a colisão em duas fases, ampla e estreita.</p>"}},{"type":"prose","value":{"id":"fase_larga","title":"Fase Larga","isH3":true,"content":"<p>A fase ampla deve fornecer uma lista de entidades que *podem* estar colidindo. Isso pode ser implementado com uma estrutura de dados espacial que lhe dará uma ideia aproximada de onde a entidade existe e o que existe em torno dela. Alguns exemplos de estruturas de dados espaciais são Quad Trees, R-Trees ou um Spash Hashmap.</p>"}},{"type":"prose","value":{"id":"fase_estreita","title":"Fase estreita","isH3":true,"content":"<p>Quando você tem uma pequena lista de entidades para verificar, você vai querer usar um algoritmo de fase estreita (como os listados acima) para fornecer uma resposta certa sobre se há uma colisão ou não.</p>"}}],"toc":[{"text":"Caixa delimitadora alinhada por eixo","id":"caixa_delimitadora_alinhada_por_eixo"},{"text":"Colisão Circular","id":"colisão_circular"},{"text":"Teorema do eixo de separação","id":"teorema_do_eixo_de_separação"},{"text":"Performance de Colisão","id":"performance_de_colisão"}],"summary":"Algoritmos para detectar colisões em jogos 2D dependem do tipo de formas que podem colidir (por exemplo, retângulo para retângulo, retângulo para círculo, círculo para círculo). Geralmente, você terá uma forma genérica simples que abrange a entidade conhecida como \"hitbox\", portanto, mesmo que a colisão não seja perfeita, ela terá boa aparência e terá bom desempenho em várias entidades. Este artigo fornece uma revisão das técnicas mais comuns usadas para fornecer detecção de colisão em jogos 2D.","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"2D collision detection","locale":"en-US","native":"English (US)"},{"title":"Detección de colisiones 2D","locale":"es","native":"Español"},{"title":"Détection de collisions en 2D","locale":"fr","native":"Français"},{"title":"二次元の衝突検出","locale":"ja","native":"日本語"},{"title":"2D collision detection","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"pt-br/games/techniques/2d_collision_detection","github_url":"https://github.com/mdn/translated-content/blob/main/files/pt-br/games/techniques/2d_collision_detection/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/pt-BR/docs/Games","title":"Desenvolvimento de jogos"},{"uri":"/pt-BR/docs/Games/Techniques","title":"Técnicas para desenvolvimento de jogos"},{"uri":"/pt-BR/docs/Games/Techniques/2D_collision_detection","title":"Detecção de Colisão 2D"}],"pageTitle":"Detecção de Colisão 2D - Desenvolvimento de jogos | MDN","noIndexing":false}}