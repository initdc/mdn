{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"JavaScript orientado a objetos para principiantes","mdn_url":"/es/docs/conflicting/Learn/JavaScript/Objects/Classes_in_JavaScript","locale":"es","native":"Español","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/es/docs/Learn/Getting_started_with_the_web\"><strong>Complete beginners start here!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Getting started with the Web</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/Getting_started_with_the_web\">Getting started with the Web overview</a></li>\n            <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Installing basic software</a></li>\n            <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">What will your website look like?</a></li>\n            <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Dealing with files</a></li>\n            <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML basics</a></li>\n            <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS basics</a></li>\n            <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li>\n            <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Publishing your website</a></li>\n            <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">How the Web works</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/es/docs/Learn/HTML\"><strong>HTML — Structuring the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introduction to HTML</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/HTML/Introduction_to_HTML\">Introduction to HTML overview</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Getting started with HTML</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">What's in the head? Metadata in HTML</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML text fundamentals</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Creating hyperlinks</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Advanced text formatting</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Document and website structure</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Debugging HTML</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Assessment: Marking up a letter</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Assessment: Structuring a page of content</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Multimedia and embedding</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/HTML/Multimedia_and_embedding\">Multimedia and embedding overview</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Images in HTML</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Video and audio content</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">From object to iframe — other embedding technologies</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adding vector graphics to the Web</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Responsive images</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Assessment: Mozilla splash page</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML tables</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/HTML/Tables\">HTML tables overview</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/es/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/es/docs/Learn/CSS\"><strong>CSS — Styling the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS first steps</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Styling text</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/CSS/Styling_text\">Styling text overview</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamental text and font styling</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Styling_text/Styling_lists\">Styling lists</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Styling_text/Styling_links\">Styling links</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Styling_text/Web_fonts\">Web fonts</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Assessment: Typesetting a community school homepage</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS layout</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout\">CSS layout overview</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Floats\">Floats</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Positioning\">Positioning</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/es/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/es/docs/Learn/JavaScript\"><strong>JavaScript — Dynamic client-side scripting</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript first steps</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/JavaScript/First_steps\">JavaScript first steps overview</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">What is JavaScript?</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/First_steps/A_first_splash\">A first splash into JavaScript</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/First_steps/What_went_wrong\">What went wrong? Troubleshooting JavaScript</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/First_steps/Variables\">Storing the information you need — Variables</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/First_steps/Math\">Basic math in JavaScript — Numbers and operators</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/First_steps/Strings\">Handling text — Strings in JavaScript</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Useful string methods</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/First_steps/Arrays\">Arrays</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Assessment: Silly story generator</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript building blocks</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks overview</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks/conditionals\">Making decisions in your code — Conditionals</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks/Looping_code\">Looping code</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks/Functions\">Functions — Reusable blocks of code</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Build your own function</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks/Return_values\">Function return values</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Assessment: Image gallery</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>Introducing JavaScript objects</summary>\n          <ol>\n            <li><a href=\"/es/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects overview</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Objects/Basics\">Object basics</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Objects/Object_prototypes\">Object prototypes</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Objects/JSON\">Working with JSON data</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Objects/Object_building_practice\">Object building practice</a></li>\n            <li><a href=\"/es/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Assessment: Adding features to our bouncing balls demo</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web APIs</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/es/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/es/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/es/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility guides</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Accessibility\">Accessibility overview</a></li>\n          <li><a href=\"/es/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n          <li><a href=\"/es/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/es/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/es/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n          <li><a href=\"/es/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/es/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility assessment</summary>\n        <ol>\n            <li><a href=\"/es/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/es/docs/Learn/Tools_and_testing\"><strong>Tools and testing</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Cross browser testing</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Cross_browser_testing\">Cross browser testing overview</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introduction to cross browser testing</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Strategies for carrying out testing</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Handling common HTML and CSS problems</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Handling common JavaScript problems</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Handling common accessibility problems</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementing feature detection</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introduction to automated testing</a></li>\n          <li><a href=\"/es/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Setting up your own test automation environment</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/es/docs/Learn/Server-side\"><strong>Server-side website programming</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>First steps</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Server-side/First_steps\">First steps overview</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/First_steps/Introduction\">Introduction to the server-side</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/First_steps/Client-Server_overview\">Client-Server overview</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/First_steps/Web_frameworks\">Server-side web frameworks</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/First_steps/Website_security\">Website security</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django web framework (Python)</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Server-side/Django\">Django web framework (Python) overview</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Introduction\">Introduction</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/development_environment\">Setting up a development environment</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial: The Local Library website</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Models\">Tutorial Part 3: Using models</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Admin_site\">Tutorial Part 4: Django admin site</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Home_page\">Tutorial Part 5: Creating our home page</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Generic_views\">Tutorial Part 6: Generic list and detail views</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Sessions\">Tutorial Part 7: Sessions framework</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Authentication\">Tutorial Part 8: User authentication and permissions</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Forms\">Tutorial Part 9: Working with forms</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Testing\">Tutorial Part 10: Testing a Django web application</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/Deployment\">Tutorial Part 11: Deploying Django to production</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/web_application_security\">Web application security</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Django/django_assessment_blog\">Assessment: DIY mini blog</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript) overview</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node (Express) development environment</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express tutorial: The Local Library website</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li>\n          <li><a href=\"/es/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Further resources</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Common questions</summary>\n        <ol>\n          <li><a href=\"/es/docs/Learn/HTML/Howto\">HTML questions</a></li>\n          <li><a href=\"/es/docs/Learn/CSS/Howto\">CSS questions</a></li>\n          <li><a href=\"/es/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/es/docs/Learn/Common_questions#Web_mechanics\">Web mechanics</a></li>\n          <li><a href=\"/es/docs/Learn/Common_questions#Tools_and_setup\">Tools and setup</a></li>\n          <li><a href=\"/es/docs/Learn/Common_questions#Design_and_accessibility\">Design and accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div id=\"sect2\"><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/es/docs/Learn/JavaScript/Objects/Basics\"> Anterior </a></li>\n    <li><a class=\"button minimal\" href=\"/es/docs/Learn/JavaScript/Objects\"> Overview: Objects</a></li>\n    <li><a class=\"button minimal\" href=\"/es/docs/Learn/JavaScript/Objects/Object_prototypes\"> Siguiente  </a></li>\n</ul></div>\n\n<p class=\"summary\">Con lo básico fuera del camino, nos enfocaremos en Javascript Orientado a Objetos (JSOO) — este artículo presenta una descripción básica de la teoría de la Programación Orientada a Objetos (POO), luego explora cómo Javascript emula classes de objetos via funciones constructoras, y cómo crea instancias de objetos.</p>\n\n<table class=\"learn-box standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"row\">Prerequisitos:</th>\n   <td>Conocimientos básicos de computación, entendimiento básico de HTML y CSS, familiaridad con las bases de Javascript (ver <a href=\"/es/docs/Learn/JavaScript/First_steps\">Primeros pasos con JavaScript</a> y <a href=\"/es/docs/Learn/JavaScript/Building_blocks\">Bloques de construcción JavaScript</a>) y las bases de JSOO (ver <a href=\"/es/docs/Learn/JavaScript/Objects/Basics\">Introducción a objetos</a>).</td>\n  </tr>\n  <tr>\n   <th scope=\"row\">Objetivo:</th>\n   <td>\n    <p>Entender la teoría base de la programación orientada a objetos, como se relaciona esta con JavaScript (\"todo es un objeto\"), y como crear constructores e instacias de objetos.</p>\n   </td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"programacion_orientada_a_objetos—_lo_básico","title":"Programacion Orientada a Objetos— lo básico","isH3":false,"content":"<p>Para empezar, daremos una descripción simple y de alto nivel acerca de lo que es la Programación Orientada a Objetos (POO). Decimos simple, porque la POO puede volverse complicada rápidamente, y darte un tratamiento completo ahora, probablemente podría confundirte más que ayudar. La idea básica de la POO es que usamos objetos para modelar cosas del mundo real que queremos representar en nuestros programas, y/o proveemos una simple manera para acceder a la funcionalidad que, de otra manera, sería difícil o imposible de usar.</p>\n\n<p>Los objetos pueden contener información y código relacionados, los cuales representan información acerca de lo que estás tratando de modelar, y la funcionalidad o comportamiento que deseas que tenga.  Los datos de un Objeto (y frecuentemente, también las funciones) se pueden almacenar ordenadamente (la palabra oficial es <strong>encapsular</strong>) dentro del paquete de un objeto (al que se puede asignar un nombre específico, llamado a veces <strong>espacio de nombres</strong>), haciéndolo fácil de estructurar y acceder; los objetos también se usan comúnmente como almacenes de datos que se pueden enviar fácilmente a través de la red.</p>"}},{"type":"prose","value":{"id":"definiendo_una_plantilla_de_objeto","title":"Definiendo una plantilla de objeto","isH3":true,"content":"<p>Vamos a considerar un sencillo programa que muestra información sobre estudiantes y profesores en una escuela. Aquí daremos un vistazo a la POO (Programación Orientada a Objetos) en general, no en el contexto de algún lenguaje de programación específico.</p>\n\n<p>Para empezar, podríamos volver a ver al objeto <code>Persona</code> de nuestro <a href=\"/es/docs/Learn/JavaScript/Objects/Basics\">artículo de primeros objetos</a>, que define los datos generales y funcionalidades de una persona. Hay muchas cosas que podrías saber acerca de una persona (su dirección, estatura, tamaño de calzado, perfil de ADN, número de pasaporte, rasgos significativos de su personalidad...), pero, en este caso, solo estamos interesados en mostrar su nombre, edad, género e intereses, además de una pequeña introducción sobre este individuo basada en los datos anteriores. También queremos que sea capaz de saludar. </p>\n\n<p>Esto es conocido como <strong>abstracción</strong> —  crear un modelo simple de algo complejo que represente sus aspectos más importantes y que sea fácil de manipular para el propósito de nuestro programa.</p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/13889/person-diagram.png\" style=\"display: block; margin: 0px auto;\" loading=\"lazy\"></p>\n\n<p>En algunos lenguajes de POO, esta definición de tipo de objeto se la llama <strong>class </strong>(JavaScript utiliza diferentes mecanismos y terminologías, como verás a continuación) — esto no es en realidad un objeto, en vez de esto es un modelo que define las características que un objeto debería tener.</p>"}},{"type":"prose","value":{"id":"creando_objetos","title":"Creando objetos","isH3":true,"content":"<p>Partiendo de nuestra clase, podemos crear <strong>instancias de objetos</strong> — objetos que contienen los datos y funcionalidades definidas en la clase original. Teniendo a nuestra clase <code>Persona</code>, ahora podemos crear gente con características más específicas: </p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/15163/MDN-Graphics-instantiation-2-fixed.png\" style=\"display: block; margin: 0px auto;\" loading=\"lazy\"></p>\n\n<p>Cuando una instancia del objeto es creada a partir de una clase, se ejecuta <strong>la función constructora </strong>(constructor en inglés) de la clase para crearla. El proceso de crear una instancia del objeto desde una clase se llama <strong>instanciación</strong>.</p>"}},{"type":"prose","value":{"id":"clases_especializadas","title":"Clases especializadas","isH3":true,"content":"<p>En este caso nosotros no queremos personas genericas — queremos docentes y estudiantes, que son los dos tipos más específicos de personas. En POO, podemos crear nuevas clases basadas en otras clases, estas nuevas <strong>clases secundarias</strong> se pueden hacer para  <strong>heredar</strong> los datos y código de su <strong>clase primaria</strong>, de modo que pueden reutilizar la funcionalidad común a todos los tipos de objetos en lugar de tener que duplicarla. Cuando la funcionalidad difiere entre clases, puedes definir funciones especializadas directamente en ellas según sea necesario.</p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/13881/MDN-Graphics-inherited-3.png\" style=\"display: block; margin: 0px auto;\" loading=\"lazy\"></p>\n\n<p>Esto es realmente útil, los profesores y los estudiantes comparten muchas características comunes como el nombre, el género y la edad, por lo que es conveniente tener que definir esas características solo una vez. También puedes definir la misma característica por separado en diferentes clases, ya que cada definición de esa característica estará en un espacio de nombres diferente. Por ejemplo, el saludo de un estudiante puede tener la forma \"Yo, soy [Nombre]\" (por ejemplo, Yo, soy Sam), mientras que un profesor puede usar algo más formal, como \"Hola, mi nombre es [Prefix] [lastName], y enseño [Asunto] \". (Por ejemplo, Hola, mi nombre es Sr. Griffiths, y yo enseño Química).</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Nota:  </strong>la palabra elegante para la capacidad de múltiples tipos de objetos de implementar la misma funcionalidad es <strong>polimorfismo. </strong>Por si acaso te preguntabas.</p>\n</div>\n\n<p>Ahora puedes crear instancias de objetos de las clases \"hijo\". Por ejemplo:</p>\n\n<p><img alt=\"\" src=\"https://mdn.mozillademos.org/files/13885/MDN-Graphics-instantiation-teacher-3.png\" style=\"display: block; margin: 0px auto;\" loading=\"lazy\"></p>\n\n<p>En el resto del articulo, comenzaremos a ver como podemos practicar la teoría de POO en JavaScript.</p>"}},{"type":"prose","value":{"id":"constructores_e_instancias_de_objetos","title":"Constructores e instancias de objetos","isH3":false,"content":"<p>Algunas personas sostienen que JavaScript no es un verdadero lenguaje orientado a objetos — por ejemplo, su enunciado <code><a href=\"/es/docs/Web/JavaScript/Reference/Statements/class\">class</a></code> es sólo azúcar sintáctica sobre la herencia prototípica existente y no es una <code>class</code> en el sentido tradicional. JavaScript, utiliza funciones especiales llamadas funciones constructoras para definir objetos y sus características. Son útiles porque a menudo te encontrarás con situaciones en las que no sabes cuántos objetos crearás; los constructores proporcionan los medios para crear tantos objetos como necesites de una manera efectiva, adjuntando datos y funciones a ellos según sea necesario.</p>\n\n<p>Cuando se crea una nueva instancia del objeto a partir de una función constructora, su funcionalidad central (tal como se define en su prototipo, que exploraremos en el <a href=\"/es/docs/Learn/JavaScript/Objects/Object_prototypes\">artículo Prototipos</a> de objetos) no se copia en el nuevo objeto como lenguajes OO \"clásicos\", sino que la funcionalidad está vinculada a través de una cadena de referencia llamada cadena prototipo. Así que esto no es una verdadera instanciación, estrictamente hablando, JavaScript usa un mecanismo diferente para compartir funcionalidad entre objetos.</p>\n\n<div class=\"note notecard\" id=\"sect4\">\n<p><strong>Nota: </strong>no ser \"POO clásica\" no es necesariamente algo malo; Como se mencionó anteriormente, la POO puede ser muy compleja muy rápidamente, y JavaScript tiene algunas agradables formas de aprovechar las características de la OO sin tener que profundizar demasiado en ello.</p>\n</div>\n\n<p>Exploremos la creación de clases a través de constructores y la creación de instancias de objetos a partir de ellas en JavaScript. En primer lugar, nos gustaría que hicieras una nueva copia local del archivo <code>oojs.html</code> que vimos en nuestro primer artículo de Objetos.</p>"}},{"type":"prose","value":{"id":"un_ejemplo_simple","title":"Un ejemplo simple","isH3":true,"content":"<ol>\n <li>Comencemos por ver cómo puedes definir una persona con una funcion normal. Agrega esta funcion dentro del elemento <code>script</code>:\n\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">createNewPerson</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  obj<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  obj<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">greeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n </li>\n <li>Ahora puedes crear una nueva persona llamando a esta funcion — prueba con las siguientes lineas en la consola Javascript de tu navegador:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> salva <span class=\"token operator\">=</span> <span class=\"token function\">createNewPerson</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Salva'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsalva<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\nsalva<span class=\"token punctuation\">.</span><span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n  Esto funciona bastante bien, pero es un poco largo; si sabemos que queremos crear un objeto, ¿por qué necesitamos crear explícitamente un nuevo objeto vacío y devolverlo? Afortunadamente, JavaScript nos proporciona un práctico acceso directo, en forma de funciones constructoras — ¡hagamos una ahora!</li>\n <li>Reemplaza tu función anterior por la siguiente:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">greeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n </li>\n</ol>\n\n<p>La función constructora es la versión de JavaScript de una clase. Notarás que tiene todas las características que esperas en una función, aunque no devuelve nada o crea explícitamente un objeto — básicamente sólo define propiedades y métodos. Verás que la palabra clave <code>this</code> se está usando aquí también — es básicamente decir que cuando se crea una de estas instancias de objeto, la propiedad <code>name</code> del objeto será igual al valor del nombre pasado a la llamada del constructor, y el método <code>greeting()</code> usará también el valor del nombre pasado a la llamada del constructor.</p>\n\n<div class=\"note notecard\" id=\"sect5\">\n<p><strong>Nota</strong>: Un nombre de función constructora generalmente comienza con una letra mayúscula — esta convención se utiliza para hacer que las funciones constructoras sean más fáciles de reconocer en el código.</p>\n</div>\n\n<p>Entonces, ¿cómo llamamos a un constructor para crear algunos objetos?</p>\n\n<ol>\n <li>Agrega las siguientes líneas debajo de tu código anterior:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bob'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> person2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sarah'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n <li>Guarda el código y vuelve a cargarlo en el navegador, e intenta ingresar las siguientes líneas en la consola Javascript :\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person1<span class=\"token punctuation\">.</span>name\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nperson2<span class=\"token punctuation\">.</span>name\nperson2<span class=\"token punctuation\">.</span><span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n </li>\n</ol>\n\n<p>¡Guaw! Ahora veras que tenemos dos nuevos objetos, cada uno de los cuales está almacenado en un espacio de nombres diferente: para acceder a sus propiedades y métodos, debes llamarlos como <code>person1</code> o  <code>person2</code>; están cuidadosamente empaquetados para que no entren en conflicto con otras funciones. Sin embargo, tienen disponible la misma propiedad name y el método <code>greeting()</code>. Ten en cuenta que están utilizando su propio <code>name</code> que se les asignó cuando se crearon; esta es una razón por la cual es muy importante usar <code>this</code>, para que usen sus propios valores, y no algún otro valor.</p>\n\n<p>Veamos nuevamente las llamadas del constructor:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bob'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> person2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sarah'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>En cada caso, la  palabra clave <code>new</code> se usa para indicarle al navegador que queremos crear una nueva instancia del objeto, seguida del nombre de la función con sus parámetros requeridos entre paréntesis, y el resultado se almacena en una variable — muy similar a cómo se llama a una función estándar. Cada instancia se crea de acuerdo con esta definición:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">greeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Una vez creados los nuevos objetos, las variables <code>person1</code> y <code>person2</code> contienen los siguientes objetos:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Sarah'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Ten en cuenta que cuando llamamos a nuestra función constructora, estamos definiendo <code>greeting()</code> cada vez, lo cual no es lo ideal. Para evitar esto, podemos definir funciones en el prototipo, que veremos más adelante.</p>"}},{"type":"prose","value":{"id":"creando_nuestro_constructor_final","title":"Creando nuestro constructor final","isH3":true,"content":"<p>El ejercicio que vimos anteriormente fue solo un ejemplo simple para comenzar. Ahora crearemos nuestra función <code>constructor Person()</code> final.</p>\n\n<ol>\n <li>Elimina el código que insertaste hasta ahora y agrega este constructor de reemplazo; este es exactamente el mismo que el ejemplo simple del principio, con un poco más de complejidad:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">first<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> gender<span class=\"token punctuation\">,</span> interests</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'first'</span><span class=\"token operator\">:</span> first<span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'last'</span> <span class=\"token operator\">:</span> last\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> gender<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>interests <span class=\"token operator\">=</span> interests<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">bio</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>last <span class=\"token operator\">+</span> <span class=\"token string\">' is '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">+</span> <span class=\"token string\">' years old. He likes '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>interests<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">' and '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>interests<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">greeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>first <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n </li>\n <li>Ahora, agrega la siguiente línea para crear una instancia del objeto:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Smith'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'music'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'skiing'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n</ol>\n\n<p>Ahora verás que puedes acceder a las propiedades y métodos justo como lo hiciste anteriormente — intenta esto en tu consola JS:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person1<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span>\nperson1<span class=\"token punctuation\">.</span>interests<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function\">bio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// etc.</span></code></pre></div>\n\n<div class=\"note notecard\" id=\"sect6\">\n<p><strong>Nota</strong>: Si tienes problemas para lograr que funcione, puedes comparar tu código con nuestra versión — ve <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/oojs/introduction/oojs-class-finished.html\" class=\"external\" rel=\" noopener\">oojs-class-finished.html</a> (también lo puedes ver <a href=\"https://mdn.github.io/learning-area/javascript/oojs/introduction/oojs-class-finished.html\" class=\"external\" rel=\" noopener\">corriendo en vivo</a>).</p>\n</div>"}},{"type":"prose","value":{"id":"ejercicios_adicionales","title":"Ejercicios adicionales","isH3":true,"content":"<p>Para empezar, intenta añadir un par de líneas de creación de objetos propias, y trata de obtener y asignar valores a los miembros de las instancias del objeto.</p>\n\n<p>Además, hay un par de problemas con nuestro método <code>bio()</code> — la salida siempre incluye el pronombre \"He\", incluso para personas de otros géneros. Y <code>bio</code> solamente incluye dos intereses, sin importar la cantidad que hay en el arreglo <code>interests</code>. ¿Podrías corregir esto en la definición de la clase (constructor)? Puedes poner cualquier código dentro de un constructor (probablemente necesites algunos condicionales y un bucle). Piensa como se deben estructurar las declaraciones dependiendo del género, y de la cantidad de intereses.</p>\n\n<div class=\"note notecard\" id=\"sect7\">\n<p><strong>Note</strong>: Si estás atascado, hay una <a href=\"https://github.com/mdn/learning-area/blob/master/javascript/oojs/introduction/oojs-class-further-exercises.html\" class=\"external\" rel=\" noopener\">respuesta en nuestro repositorio de GitHub</a> (<a href=\"https://mdn.github.io/learning-area/javascript/oojs/introduction/oojs-class-further-exercises.html\" class=\"external\" rel=\" noopener\">see it live</a>) — igualmente ¡intentea resolverla primero!</p>\n</div>"}},{"type":"prose","value":{"id":"otras_formas_de_crear_instancias_de_objetos","title":"Otras formas de crear instancias de objetos","isH3":false,"content":"<p>Hasta ahora hemos visto dos diferentes formas de crear una instancia de objeto — <a href=\"/es/docs/Learn/JavaScript/Objects/Basics#object_basics\">declarando un objeto literal</a>, y usando una función constructora (ver arriba).</p>\n\n<p>Esto tiene sentido, pero hay otras formas — se muestran aquí para que te vayas familiarizando en caso de encontrarte con ellas.</p>"}},{"type":"prose","value":{"id":"el_constructor_object","title":"El constructor Object()","isH3":true,"content":"<p>Antes que nada, puedes usar el constructor <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object()</a></code> para crear un nuevo objeto. Si, incluso objetos genéricos tienen un constructor que genera un objeto vacío.</p>\n\n<ol>\n <li>Intenta ingresar este código en la consola JavaScript de tu navegador:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n <li>Esto guarda un objeto vacío en la variable <code>person1</code>. Luego pueded agregar propiedades y métodos a este objeto usando la notación de punto (.) o de corchetes (['']); prueba estos ejemplos en tu consola:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person1<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Chris'</span><span class=\"token punctuation\">;</span>\nperson1<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">38</span><span class=\"token punctuation\">;</span>\nperson1<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">greeting</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n <li>También puedes pasar un objeto literal como parámetro al constructor <code>Object()</code>, para precargarlo con propiedades/métodos. Prueba esto en tu consola:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Chris'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi! I\\'m '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n</ol>"}},{"type":"prose","value":{"id":"usando_el_método_create","title":"Usando el método create()","isH3":true,"content":"<p>Los constructores te pueden ayudar a ordenar tu código — puedes crear constructores en un lugar, y luego crear instancias cuando sean necesarias.</p>\n\n<p>Sin embargo, algunas personas prefieren crear instancias de objetos sin crear antes constructores, especialmente si van a crear solamente pocas instancias de un objeto.</p>\n\n<p>JavaScript tiene un método llamado <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\">create()</a></code> que permite hacer esto. Con este método puedes crear un nuevo objeto basado en cualquier otro objeto existente.</p>\n\n<ol>\n <li>Con tu ejercicio de la sección anterior cargado en el navegador, prueba esto en tu consola JavaScript\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> person2 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>person1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n </li>\n <li>Y ahora prueba esto:\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>person2<span class=\"token punctuation\">.</span>name\nperson2<span class=\"token punctuation\">.</span><span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n </li>\n</ol>\n\n<p>Verás que <code>person2</code> fue creado basado en <code>person1 </code>— tiene las mismas propiedades y métodos.</p>\n\n<p>Una limitación del método <code>create()</code> es que no está soportado por el navegador IE8. Por lo que los constructores serán más efectivos sin necesitas soportar navegadores antiguos.</p>\n\n<p>Más tarde, exploraremos en detalle los efectos de <code>create()</code>.</p>"}},{"type":"prose","value":{"id":"resumen","title":"Resumen","isH3":false,"content":"<p>Este artículo provee una visión simplificada de la teoría de la orientación a objetos — esta no es toda la historia, pero te da una idea de con que estamos lidiando aquí. Adicionalmente, empezamos a ver como JavaScript está relacionado y difiere de la orientación a objetos \"clásica\", cómo usamos funciones constructoras para implementar clases en JavaScript, y diferentes formas de generar instancias de objetos.</p>\n\n<p>En el próximo artículo, exploraremos los prototipos de objeto JavaScript.</p>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/es/docs/Learn/JavaScript/Objects/Basics\"> Anterior </a></li>\n    <li><a class=\"button minimal\" href=\"/es/docs/Learn/JavaScript/Objects\"> Overview: Objects</a></li>\n    <li><a class=\"button minimal\" href=\"/es/docs/Learn/JavaScript/Objects/Object_prototypes\"> Siguiente  </a></li>\n</ul><p></p>"}},{"type":"prose","value":{"id":"en_este_modulo","title":"En este modulo","isH3":false,"content":"<ul>\n <li><a href=\"/es/docs/Learn/JavaScript/Objects/Basics\">Objetos básicos</a></li>\n <li><a href=\"/es/docs/conflicting/Learn/JavaScript/Objects/Classes_in_JavaScript\">JavaScript orientedo a objetos para principiantes</a></li>\n <li><a href=\"/es/docs/Learn/JavaScript/Objects/Object_prototypes\">Prototipos de Objetos</a></li>\n <li><a href=\"/es/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Herencia en JavaScript</a></li>\n <li><a href=\"/es/docs/Learn/JavaScript/Objects/JSON\">Trabajando con datos JSON</a></li>\n <li><a href=\"/es/docs/Learn/JavaScript/Objects/Object_building_practice\">Práctica de construcción de objetos</a></li>\n <li><a href=\"/es/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Agregar funciones a nuestro demo de pelotas que rebotan</a></li>\n</ul>"}}],"toc":[{"text":"Programacion Orientada a Objetos— lo básico","id":"programacion_orientada_a_objetos—_lo_básico"},{"text":"Constructores e instancias de objetos","id":"constructores_e_instancias_de_objetos"},{"text":"Otras formas de crear instancias de objetos","id":"otras_formas_de_crear_instancias_de_objetos"},{"text":"Resumen","id":"resumen"},{"text":"En este modulo","id":"en_este_modulo"}],"summary":"Con lo básico fuera del camino, nos enfocaremos en Javascript Orientado a Objetos (JSOO) — este artículo presenta una descripción básica de la teoría de la Programación Orientada a Objetos (POO), luego explora cómo Javascript emula classes de objetos via funciones constructoras, y cómo crea instancias de objetos.","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"初心者のためのオブジェクト指向 JavaScript","locale":"ja","native":"日本語"},{"title":"JavaScript orientado a objetos para iniciantes","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Объектно-ориентированный JavaScript для начинающих","locale":"ru","native":"Русский"}],"source":{"folder":"es/conflicting/learn/javascript/objects/classes_in_javascript","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/conflicting/learn/javascript/objects/classes_in_javascript/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"pageTitle":"JavaScript orientado a objetos para principiantes | MDN","noIndexing":true}}