{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"EventListener","mdn_url":"/es/docs/conflicting/Web/API/EventTarget/addEventListener","locale":"es","native":"Español","sidebarHTML":"<ol><li><strong><a href=\"/es/docs/Web/API/EventTarget\"><code>EventTarget</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventTarget/EventTarget\"><code>EventTarget()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Métodos</summary><ol><li><em><code>addEventListener()</code></em></li><li><a href=\"/es/docs/Web/API/EventTarget/dispatchEvent\"><code>dispatchEvent()</code></a></li><li><a href=\"/es/docs/Web/API/EventTarget/removeEventListener\"><code>removeEventListener()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":"información_general_del_método","title":"Información General del Método","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th><code>void handleEvent(in Event event);</code></th>\n    </tr>\n  </thead>\n</table>"}},{"type":"prose","value":{"id":"metodos","title":"Metodos","isH3":false,"content":""}},{"type":"prose","value":{"id":"handleevent","title":"handleEvent()","isH3":true,"content":"<p>Este metodo es llamado cuando un evento ocurre del tipo para el cual la interfaz <code>EventListener</code> fue registrada.</p>\n<pre class=\"notranslate\">void handleEvent(\n  in Event event\n);\n</pre>\n<h5 id=\"parametros\">Parametros</h5>\n<dl>\n  <dt id=\"event\"><code>event</code></dt>\n  <dd>\n    <p>El DOM <a href=\"/es/docs/Web/API/Event\"><code>Event</code></a> a registrar.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"observaciones","title":"Observaciones","isH3":true,"content":"<p>Como la interfaz es marcada con la bandera [function], todas los objetos <a href=\"/en-US/JavaScript/Reference/Global_Objects/Function\">Function</a> de javascript automaticamente implementan esta interfaz. Llamando el método <a href=\"#handleevent\">handleEvent</a> en tales implementaciones automaticamente invocan la funcion.</p>"}},{"type":"prose","value":{"id":"mira_también","title":"Mira también","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventListener\" class=\"external\" rel=\" noopener\">Document Object Model Events: EventListener</a><span title=\"Recommendation\" style=\"color:#fff;background:#309c40;display:inline-block; font-size:x-small; margin-left:6px; white-space:nowrap; padding:2px 5px;\">REC</span></li>\n</ul>"}}],"toc":[{"text":"Información General del Método","id":"información_general_del_método"},{"text":"Metodos","id":"metodos"},{"text":"Mira también","id":"mira_también"}],"summary":"Este metodo es llamado cuando un evento ocurre del tipo para el cual la interfaz EventListener fue registrada.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"EventListener.handleEvent()","locale":"ja","native":"日本語"},{"title":"EventListener","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"EventListener","locale":"ru","native":"Русский"}],"source":{"folder":"es/conflicting/web/api/eventtarget/addeventlistener","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/conflicting/web/api/eventtarget/addeventlistener/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"pageTitle":"EventListener | MDN","noIndexing":true}}