{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Función","mdn_url":"/es/docs/Glossary/Function","locale":"es","native":"Español","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Una <strong>función</strong> es un fragmento de código que puede ser llamado por otro código o por sí mismo, o por una <a href=\"/es/docs/Glossary/Variable\">variable</a> que haga referencia a la función. Cuando se llama a una función, los <a href=\"/es/docs/Glossary/Argument\">argumentos</a> se pasan a la función como entrada, y la función puede devolver opcionalmente una salida. Una función en <a href=\"/es/docs/Glossary/JavaScript\">JavaScript</a> es también un <a href=\"/es/docs/Glossary/Object\">objeto</a>.</p>\n<p>El nombre de la función es un <a href=\"/es/docs/Glossary/Identifier\">identificador</a> declarado como parte de una declaración de función o expresión de función. El <a href=\"/es/docs/Glossary/Scope\">ámbito</a> de la función depende de si el nombre de la función es una declaración o una expresión.</p>"}},{"type":"prose","value":{"id":"diferentes_tipos_de_funciones","title":"Diferentes tipos de funciones","isH3":true,"content":"<p>Una <strong>función anónima</strong> es una función que no tiene nombre:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// o se puede usar la anotación con flecha ECMAScript 2015</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Una <strong>función nombrada</strong> es una función con nombre:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// o se puede usar la anotación con flecha ECMAScript 2015</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">foo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Una <strong>función interna</strong> es una función que está dentro de otra función (<code>cuadrado</code> en este caso). Una <strong>función externa</strong> es una función que contiene a otra función (<code>sumarCuadrados</code> en este caso):</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">sumarCuadradors</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">function</span> <span class=\"token function\">cuadrado</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> x<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">cuadrado</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">cuadrado</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//Usando la anotación de flecha ECMAScript 2015</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sumarCuadrados</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">cuadrado</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> x<span class=\"token operator\">*</span>x<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">cuadrado</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">cuadrado</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Una <strong>función recursiva</strong> es una función que se llama a sí misma. Mira <a href=\"/es/docs/Glossary/Recursion\">recursión</a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">bucle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">bucle</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//Usando la anotación de flecha ECMAScript 2015</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">bucle</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">bucle</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Una <strong>expresión de una función que se invoca inmediatamente</strong> (<a href=\"/es/docs/Glossary/IIFE\">IIFE</a>, por sus siglas en inglés) es una función que se llama directamente después de que la función se haya cargado en el compilador del navegador. La forma de identificar un IIFE es ubicando el paréntesis izquierdo y derecho adicional al final de la declaración de la función.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Error (https://en.wikipedia.org/wiki/Immediately-invoked_function_expression)</span>\n<span class=\"token comment\">/*\n​function foo() {\n    console.log('Hello Foo');\n}();\n*/</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">food</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Food\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Si desea obtener más información sobre las IIFE, consulte la siguiente página en Wikipedia: <a href=\"https://en.wikipedia.org/wiki/Immediately-invoked_function_expression\" class=\"external\" rel=\" noopener\">Immediately Invoked Function Expression</a></p>"}},{"type":"prose","value":{"id":"saber_más","title":"Saber más","isH3":false,"content":""}},{"type":"prose","value":{"id":"referencias_técnicas","title":"Referencias técnicas","isH3":true,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Guide/Functions\">Funciones</a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Funciones de flecha</a></li>\n</ul>"}}],"toc":[{"text":"Saber más","id":"saber_más"}],"summary":"Una función es un fragmento de código que puede ser llamado por otro código o por sí mismo, o por una variable que haga referencia a la función. Cuando se llama a una función, los argumentos se pasan a la función como entrada, y la función puede devolver opcionalmente una salida. Una función en JavaScript es también un objeto.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Function","locale":"en-US","native":"English (US)"},{"title":"Fonction","locale":"fr","native":"Français"},{"title":"Function (関数)","locale":"ja","native":"日本語"},{"title":"함수","locale":"ko","native":"한국어"},{"title":"Função","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Функция","locale":"ru","native":"Русский"},{"title":"Function（函数）","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"es/glossary/function","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/glossary/function/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/es/docs/Glossary","title":"Glosario"},{"uri":"/es/docs/Glossary/Function","title":"Función"}],"pageTitle":"Función - Glosario | MDN","noIndexing":false}}