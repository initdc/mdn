{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Detección de colisiones","mdn_url":"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection","locale":"es","native":"Español","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introducción para desarrollo de juegos para la Web</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Introduction\">Introducción para desarrollo de juegos para la Web</a></li>\n              <li><a href=\"/es/docs/Games/Anatomy\">Anatomía de un videojuego</a></li>\n              <li><a href=\"/es/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/es/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/es/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/es/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/es/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/es/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/es/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/es/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/es/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/es/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/es/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/es/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/es/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/es/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/es/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/es/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Técnicas</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Techniques/Async_scripts\">asm.js</a></li>\n              <li><a href=\"/es/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizar rendimiento de inicio</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/WebRTC_data_channels\">persona-a-persona</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Efficient_animation_for_web_games\">Animaciones eficientes</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/es/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/es/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/es/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/es/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/es/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field\">« Anterior</a></li>\n    <li><a class=\"button minimal\" href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Track_the_score_and_win\">Siguiente  »</a></li>\n</ul>\n<p>Este es el <strong>séptimo</strong> paso de los 10 del juego <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">\"Gamedev Canvas tutorial\" (en-US)</a>. Puedes encontrar el código como deberá quedar después de completar la leción en <a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson07.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson7.html</a>.</p>\n<p>Ya tenemos los ladrillos en la pantalla pero el juego todavía no es muy interesante, porque la bola los atraviesa. Tenemos que pensar una manera de detectar colisiones para que la bola pueda rebotar en los ladrillos y romperlos.</p>\n<p>Nosotros decidimos cómo implementar esto, por supuesto, pero puede ser complicado calcular si la bola está tocando el rectángulo o no, porque no hay funciones del &lt;canvas&gt; que sirvan para saberlo. En este tutorial vamos a hacerlo de la manera más fácil que existe: comprobaremos si el centro de la bola está tocando (colisionando) con cualquiera de los ladrillos. No siempre funcionará a la perfección y hay formas de detectar colisiones más sofisticadas que funcionan mejor, pero no nos interesa verlas porque estamos aprendiendo y tenemos que hacer las cosas fáciles.</p>"}},{"type":"prose","value":{"id":"una_función_para_detectar_colisiones","title":"Una función para detectar colisiones","isH3":false,"content":"<p>Para lograr nuestro objetivo vamos a definir una función que, con un bucle, recorrerá todos los ladrillos y comparará la posición de cada uno con la posición de la bola, cada vez que se dibuje un fotograma. Para que el código sea más legible definiremos la variable \"b\" que almacenará el objeto ladrillo en cada vuelta de bucle:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">collisionDetection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// calculations</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Si el centro de la bola está dentro de las coordenadas de uno de nuestros ladrillos, cambiaremos la dirección de la bola. Se cumplirá que el centro de la bola está dentro de ladrillo si se cumplen al mismo tiempo estas cuatro condiciones:</p>\n<ul>\n  <li>La posición \"x\" de la bola es mayor que la posición \"x\" del ladrillo</li>\n  <li>La posición \"x\" de la bola es menor que la posición del ladrillo más el ancho del ladrillo</li>\n  <li>La posición \"y\" de la bola es mayor que la posición \"y\" del ladrillo.</li>\n  <li>La posición \"y\" de la bola es menor que la posición del ladrillo más su altura.</li>\n</ul>\n<p>Traducimos esto a JavaScript:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">collisionDetection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>brickWidth <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>brickHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Añade lo anterior a tu código, debajo de la función <code>keyUpHandler()</code>.</p>"}},{"type":"prose","value":{"id":"hacer_que_los_ladrillos_desaparezcan_cuando_reciben_un_golpe","title":"Hacer que los ladrillos desaparezcan cuando reciben un golpe","isH3":false,"content":"<p>El código anterior funcionará correctamente y la bola cambiará de dirección. El problema es que los ladrillos siguen donde están. Tenemos que imaginar una forma de ocuparnos de los que ya hemos golpeado con la bola. Podemos hacerlo añadiendo un parámetro extra para indicar si queremos pintar cada ladrillo en la pantalla o no. En la parte del código donde inicializamos los ladrillos, añadiremos una propiedad <code>status</code> a cada ladrillo. Cambia tu código fijándote en la línea que está resaltada:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> bricks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>A continuación consultaremos el \"status\" de cada ladrillo para saber si lo tenemos que dibujar o no. Si \"status\" vale 1, lo dibujaremos. Si vale 0, no lo dibujaremos porque habrá sido golpeado por la bola. Actualiza tu función <code>drawBricks()</code> para que quede así:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">var</span> brickX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickWidth<span class=\"token operator\">+</span>brickPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickOffsetLeft<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">var</span> brickY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickHeight<span class=\"token operator\">+</span>brickPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickOffsetTop<span class=\"token punctuation\">;</span>\n                bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> brickX<span class=\"token punctuation\">;</span>\n                bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> brickY<span class=\"token punctuation\">;</span>\n                ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>brickX<span class=\"token punctuation\">,</span> brickY<span class=\"token punctuation\">,</span> brickWidth<span class=\"token punctuation\">,</span> brickHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n                ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"actualizar_el_status_en_la_función_de_detección_de_colisiones","title":"Actualizar el \"status\" en la función de detección de colisiones","isH3":false,"content":"<p>Ahora tenemos que ocuparnos del valor de \"status\" en la función <code>collisionDetection()</code>: si el ladrillo está activo (status 1) comprobaremos si hay colisión. Si hay colisión, pondremos el \"status\" de ese ladrillo a 0 para no volver a pintarlo. Actualiza <code>collisionDetection()</code> así:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">collisionDetection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>brickWidth <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>brickHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n                    b<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"activar_la_función_de_detección_de_colisiones","title":"Activar la función de detección de colisiones","isH3":false,"content":"<p>Ya sólo falta llamar a la función <code>collisionDetection()</code> desde la función <code>draw()</code>. Añade la línea siguiente dentro de <code>draw()</code> function, justo después de la llamada a <code>drawPaddle()</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">collisionDetection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"compara_tu_código","title":"Compara tu código","isH3":false,"content":"<p>Ahora se comprueban las colisiones cada vez que se dibuja un fotograma. Concretamente, miramos si la bola colisiona con cada ladrillo. ¡Ahora ya podemos romper ladrillos! :-</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"320\" src=\"https://jsfiddle.net/kundan333/myd4vbwg/5/embedded/\" loading=\"lazy\"></iframe></p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Nota:</strong> cambia el color de la bola cada vez que choque con un ladrillo.</p>\n</div>"}},{"type":"prose","value":{"id":"pasos_siguientes","title":"Pasos siguientes","isH3":false,"content":"<p>Definitivamente, lo estamos consiguiendo. ¡Adelanteeee! En el capítulo octavo nos ocuparemos de la <a href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Track_the_score_and_win\">Puntuación y fin del juego ganando</a>.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field\">« Anterior</a></li>\n    <li><a class=\"button minimal\" href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Track_the_score_and_win\">Siguiente  »</a></li>\n</ul>"}}],"toc":[{"text":"Una función para detectar colisiones","id":"una_función_para_detectar_colisiones"},{"text":"Hacer que los ladrillos desaparezcan cuando reciben un golpe","id":"hacer_que_los_ladrillos_desaparezcan_cuando_reciben_un_golpe"},{"text":"Actualizar el \"status\" en la función de detección de colisiones","id":"actualizar_el_status_en_la_función_de_detección_de_colisiones"},{"text":"Activar la función de detección de colisiones","id":"activar_la_función_de_detección_de_colisiones"},{"text":"Compara tu código","id":"compara_tu_código"},{"text":"Pasos siguientes","id":"pasos_siguientes"}],"summary":"Este es el séptimo paso de los 10 del juego \"Gamedev Canvas tutorial\" (en-US). Puedes encontrar el código como deberá quedar después de completar la leción en Gamedev-Canvas-workshop/lesson7.html.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Collision detection","locale":"en-US","native":"English (US)"},{"title":"Détection de collisions","locale":"fr","native":"Français"},{"title":"衝突検出","locale":"ja","native":"日本語"},{"title":"충돌 감지","locale":"ko","native":"한국어"},{"title":"Обнаружение столкновений","locale":"ru","native":"Русский"},{"title":"撞击处理","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"es/games/tutorials/2d_breakout_game_pure_javascript/collision_detection","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/games/tutorials/2d_breakout_game_pure_javascript/collision_detection/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/es/docs/Games","title":"Desarrollo de Videojuegos"},{"uri":"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"Famoso juego 2D usando JavaScript puro"},{"uri":"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection","title":"Detección de colisiones"}],"pageTitle":"Detección de colisiones - Desarrollo de Videojuegos | MDN","noIndexing":false}}