{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Rebota en las paredes","mdn_url":"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Bounce_off_the_walls","locale":"es","native":"Español","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introducción para desarrollo de juegos para la Web</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Introduction\">Introducción para desarrollo de juegos para la Web</a></li>\n              <li><a href=\"/es/docs/Games/Anatomy\">Anatomía de un videojuego</a></li>\n              <li><a href=\"/es/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/es/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/es/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/es/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/es/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/es/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/es/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/es/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/es/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/es/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/es/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/es/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/es/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/es/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/es/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/es/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Técnicas</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Techniques/Async_scripts\">asm.js</a></li>\n              <li><a href=\"/es/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizar rendimiento de inicio</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/WebRTC_data_channels\">persona-a-persona</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Efficient_animation_for_web_games\">Animaciones eficientes</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/es/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/es/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/es/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/es/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/es/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/es/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/es/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Move_the_ball\">« Anterior</a></li>\n    <li><a class=\"button minimal\" href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls\">Siguiente  »</a></li>\n</ul>\n<p>Este es el <strong>tercer</strong> paso de 10 del <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">tutorial Canvas para el desarrollo de juegos (en-US)</a>. Puedes encontrar el código fuente y pegarle un vistazo después de completar esta lección <a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson03.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson3.html</a>.</p>\n<p>Es agradable ver nuestra bola moviéndose, pero desaparece rápidamente de la pantalla, limitando la diversión que podemos tener con ella. Para superar esto, implementaremos una detección de colisión muy simple (que se explicará <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">más adelante (en-US)</a> con más detalle) para hacer que la pelota rebote en los cuatro bordes del Canvas.</p>"}},{"type":"prose","value":{"id":"detección_de_colisión_simple","title":"Detección de colisión simple","isH3":false,"content":"<p>Para detectar la colisión verificamos si la bola está tocando (chocando con) la pared y si es así, cambiaremos la dirección de su movimiento en consecuencia.</p>\n<p>Para facilitar los cálculos, definamos una variable llamada <code>ballRadius</code> que mantendrá el radio del círculo dibujado y se utilizará para los cálculos. Añade esto a tu código, en algún lugar por debajo de las declaraciones de variables existentes:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> ballRadius <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Ahora actualice la línea que dibuja la bola dentro de la funcion drawBall() a esto:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> ballRadius<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"rebotando_arriba_y_abajo","title":"Rebotando arriba y abajo","isH3":true,"content":"<p>Hay cuatro paredes para rebotar la pelota - vamos a centrarnos en la de arriba en primer lugar. Tendremos que comprobar, en cada fotograma, si la pelota está tocando el borde superior del Canvas - si es así, invertiremos el movimiento de la bola para que empiece a moverse en la dirección opuesta y se mantenga dentro de los límites visibles. Recordando que el sistema de coordenadas comienza desde la parte superior izquierda, podemos llegar a algo como esto:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Si el valor de y de la posición de la bola es menor que cero, cambie la dirección del movimiento en el eje y, estableciéndolo igual a sí mismo, invertido. Si la pelota se movía hacia arriba con una velocidad de 2 píxeles por fotograma, ahora se moverá \"arriba\" con una velocidad de -2 píxeles, lo que en realidad equivale a bajar a una velocidad de 2 píxeles por fotograma.</p>\n<p>El código anterior se ocuparía de que la pelota rebote desde el borde superior, así que ahora vamos a pensar en el borde inferior:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Si la posición y de la pelota es mayor que la altura del canvas (recuerde que contamos los valores y desde la parte superior izquierda, de modo que el borde superior empieza en 0 y el borde inferior está en 480 píxeles, la altura del canvas), entonces rebota del borde inferior invirtiendo el movimiento del eje y como antes.</p>\n<p>Podríamos fusionar esas dos sentencias en una para ahorrar código:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">||</span> y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Si cualquiera de las dos afirmaciones es verdadera, invierte el movimiento de la pelota.</p>"}},{"type":"prose","value":{"id":"rebotando_en_la_izquierda_y_derecha","title":"Rebotando en la izquierda y derecha","isH3":true,"content":"<p>Tenemos el borde superior e inferior cubiertos, así que pensemos en los de izquierda y derecha. Es muy similar en realidad, todo lo que tienes que hacer es repetir las declaraciones de x en lugar de y:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">||</span> x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dx<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">||</span> y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>En este punto, debe insertar el bloque de código anterior en la función draw(), justo antes de la llave de cierre.</p>"}},{"type":"prose","value":{"id":"¡la_pelota_sigue_desapareciendo_en_la_pared!","title":"¡La pelota sigue desapareciendo en la pared!","isH3":true,"content":"<p>Prueba tu código en este punto, y te quedarás impresionado - ¡ahora tenemos una pelota que rebotó en los cuatro bordes del canvas! Pero tenemos otro problema sin embargo - cuando la bola golpea cada pared se hunde en ella levemente antes de cambiar la dirección:</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/10432/ball-in-wall.png\" alt=\"\" loading=\"lazy\">\n</p>\n<p>Esto es porque estamos calculando el punto de colisión de la pared y el centro de la bola, mientras que deberíamos hacerlo por su circunferencia. La bola debe rebotar justo después de que toca la pared, no cuando ya está a medio camino en la pared, así que vamos a ajustar nuestras declaraciones un poco para incluir eso. Actualice el último código que agregó, a esto:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token operator\">-</span>ballRadius <span class=\"token operator\">||</span> x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dx<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span>ballRadius <span class=\"token operator\">||</span> y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Cuando la distancia entre el centro de la bola y el borde de la pared es exactamente igual que el radio de la pelota, cambiará la dirección del movimiento. Restando el radio de un ancho del eje y añadiéndolo al otro nos da la impresión de una adecuada detección de colisiones - la pelota rebota de las paredes como debería hacerlo.</p>"}},{"type":"prose","value":{"id":"compara_tu_código","title":"Compara tu código","isH3":false,"content":"<p>Chequea el código acabado para esta parte con el tuyo, y juega:</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"370\" src=\"https://jsfiddle.net/end3r/redj37dc/embedded/\" loading=\"lazy\"></iframe></p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Nota:</strong> cambia el color de la bola a un color al azar, cada vez que golpea una pared.</p>\n</div>"}},{"type":"prose","value":{"id":"siguientes_pasos","title":"Siguientes pasos","isH3":false,"content":"<p>Ahora hemos llegado al punto donde nuestra pelota se mueve y permanece en el tablero de juego. En el capítulo cuarto, veremos la implementación del control de una pala - vea <a href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls\">Control de Pala y teclado</a>.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Move_the_ball\">« Anterior</a></li>\n    <li><a class=\"button minimal\" href=\"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls\">Siguiente  »</a></li>\n</ul>"}}],"toc":[{"text":"Detección de colisión simple","id":"detección_de_colisión_simple"},{"text":"Compara tu código","id":"compara_tu_código"},{"text":"Siguientes pasos","id":"siguientes_pasos"}],"summary":"Este es el tercer paso de 10 del tutorial Canvas para el desarrollo de juegos (en-US). Puedes encontrar el código fuente y pegarle un vistazo después de completar esta lección Gamedev-Canvas-workshop/lesson3.html.","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Bounce off the walls","locale":"en-US","native":"English (US)"},{"title":"Faire rebondir la balle sur les murs","locale":"fr","native":"Français"},{"title":"ボールを壁で跳ね返させる","locale":"ja","native":"日本語"},{"title":"공을 벽에 튕기기","locale":"ko","native":"한국어"},{"title":"Отскок от стен","locale":"ru","native":"Русский"},{"title":"反弹的墙壁","locale":"zh-CN","native":"中文 (简体)"},{"title":"讓球碰到牆壁後反彈","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"es/games/tutorials/2d_breakout_game_pure_javascript/bounce_off_the_walls","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/games/tutorials/2d_breakout_game_pure_javascript/bounce_off_the_walls/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/es/docs/Games","title":"Desarrollo de Videojuegos"},{"uri":"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"Famoso juego 2D usando JavaScript puro"},{"uri":"/es/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Bounce_off_the_walls","title":"Rebota en las paredes"}],"pageTitle":"Rebota en las paredes - Desarrollo de Videojuegos | MDN","noIndexing":false}}