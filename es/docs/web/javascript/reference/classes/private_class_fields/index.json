{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Private class fields","mdn_url":"/es/docs/Web/JavaScript/Reference/Classes/Private_class_fields","locale":"es","native":"Español","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Las propiedades de la clase son públicas de forma predeterminada y se pueden examinar o modificar fuera de la clase. Sin embargo, existe <a href=\"https://translate.googleusercontent.com/translate_c?depth=1&amp;pto=aue&amp;rurl=translate.google.com&amp;sl=en&amp;sp=nmt4&amp;tl=es&amp;u=https://github.com/tc39/proposal-class-fields&amp;usg=ALkJrhgmG5nvuZjYd2YQRSuRJHti_gdXeQ\" class=\"external\" rel=\" noopener\">una propuesta experimental</a> para permitir la definición de campos de clase privados utilizando un <code>#</code>prefijo hash .</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassWithPrivateField</span> <span class=\"token punctuation\">{</span>\n  #privateField\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassWithPrivateMethod</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">#privateMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'hello world'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassWithPrivateStaticField</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> #<span class=\"token constant\">PRIVATE_STATIC_FIELD</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"campos_estáticos_privados","title":"Campos estáticos privados","isH3":true,"content":"<p>Los campos privados son accesibles en el constructor de clases desde dentro de la propia declaración de clases.</p>\n<p>La limitación de las variables estáticas que se llaman solo por métodos estáticos aún se mantiene</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassWithPrivateStaticField</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> #<span class=\"token constant\">PRIVATE_STATIC_FIELD</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token function\">publicStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ClassWithPrivateStaticField<span class=\"token punctuation\">.</span>#<span class=\"token constant\">PRIVATE_STATIC_FIELD</span> <span class=\"token operator\">=</span> <span class=\"token number\">42</span>\n    <span class=\"token keyword\">return</span> ClassWithPrivateStaticField<span class=\"token punctuation\">.</span>#<span class=\"token constant\">PRIVATE_STATIC_FIELD</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>ClassWithPrivateStaticField<span class=\"token punctuation\">.</span><span class=\"token function\">publicStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Los campos estáticos privados se agregan al constructor de la clase en el momento de la evaluación de la clase.</p>\n<p>Existe una restricción de procedencia en los campos estáticos privados. Solo la clase que define el campo estático privado puede acceder al campo.</p>\n<p>Esto puede conducir a un comportamiento inesperado al usar <strong><code>this</code></strong>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseClassWithPrivateStaticField</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> #<span class=\"token constant\">PRIVATE_STATIC_FIELD</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token function\">basePublicStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#<span class=\"token constant\">PRIVATE_STATIC_FIELD</span> <span class=\"token operator\">=</span> <span class=\"token number\">42</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#<span class=\"token constant\">PRIVATE_STATIC_FIELD</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SubClass</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseClassWithPrivateStaticField</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> error <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  SubClass<span class=\"token punctuation\">.</span><span class=\"token function\">basePublicStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> error <span class=\"token operator\">=</span> e<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>error <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"campos_de_instancia_privados","title":"Campos de instancia privados","isH3":true,"content":"<p>Los campos de instancia privados se declaran con <strong># nombres</strong> (pronunciados \" <em>nombres hash</em> \"), que son identificadores con el prefijo <code>#</code>. El <code>#</code>es una parte del nombre propio. También se utiliza para la declaración y el acceso.</p>\n<p>La encapsulación es impuesta por el lenguaje. Es un error de sintaxis referirse a <code>#</code>nombres que están fuera del alcance.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassWithPrivateField</span> <span class=\"token punctuation\">{</span>\n  #privateField\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#privateField <span class=\"token operator\">=</span> <span class=\"token number\">42</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#randomField <span class=\"token operator\">=</span> <span class=\"token number\">666</span> <span class=\"token comment\">// Syntax error</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassWithPrivateField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ninstance<span class=\"token punctuation\">.</span>#privateField <span class=\"token operator\">===</span> <span class=\"token number\">42</span> <span class=\"token comment\">// Syntax error</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"métodos_privados","title":"Métodos privados","isH3":true,"content":"<h4 id=\"métodos_estáticos_privados\">Métodos estáticos privados</h4>\n<p>Al igual que su equivalente público, los métodos estáticos privados se invocan en la propia clase, no en instancias de la clase. Al igual que los campos estáticos privados, solo se puede acceder a ellos desde dentro de la declaración de clase.</p>\n<p>Los métodos estáticos privados pueden ser funciones generadoras, asíncronas y asíncronas.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassWithPrivateStaticMethod</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token function\">#privateStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">42</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token function\">publicStaticMethod1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> ClassWithPrivateStaticMethod<span class=\"token punctuation\">.</span><span class=\"token function\">#privateStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token function\">publicStaticMethod2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">#privateStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>ClassWithPrivateStaticMethod<span class=\"token punctuation\">.</span><span class=\"token function\">publicStaticMethod1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>ClassWithPrivateStaticMethod<span class=\"token punctuation\">.</span><span class=\"token function\">publicStaticMethod2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Esto puede conducir a un comportamiento inesperado al usar <strong><code>this</code></strong>. En el siguiente ejemplo se <code>this</code>hace referencia a la <code>Derived</code>clase (no a la <code>Base</code>clase) cuando intentamos llamar <code>Derived.publicStaticMethod2()</code>, y por lo tanto exhibe la misma \"restricción de procedencia\" que se mencionó anteriormente:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Base</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token function\">#privateStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">static</span> <span class=\"token function\">publicStaticMethod1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> Base<span class=\"token punctuation\">.</span><span class=\"token function\">#privateStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">static</span> <span class=\"token function\">publicStaticMethod2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">#privateStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Derived</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Base</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Derived<span class=\"token punctuation\">.</span><span class=\"token function\">publicStaticMethod1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Derived<span class=\"token punctuation\">.</span><span class=\"token function\">publicStaticMethod2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError</span>\n</code></pre></div>\n<h4 id=\"métodos_de_instancia_privada\">Métodos de instancia privada</h4>\n<p>Los métodos de instancia privada son métodos disponibles en instancias de clase cuyo acceso está restringido de la misma manera que los campos de instancia privada.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassWithPrivateMethod</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">#privateMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'hello world'</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getPrivateMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">#privateMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassWithPrivateMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">.</span><span class=\"token function\">getPrivateMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// expected output: \"hello worl​d\"</span>\n</code></pre></div>\n<p>Los métodos de instancia privada pueden ser funciones generadoras, asíncronas o asíncronas. Los getters y setters privados también son posibles:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassWithPrivateAccessor</span> <span class=\"token punctuation\">{</span>\n  #message\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">#decoratedMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">✨</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">✨</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">#decoratedMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#message <span class=\"token operator\">=</span> msg\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#decoratedMessage <span class=\"token operator\">=</span> <span class=\"token string\">'hello world'</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#decoratedMessage<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassWithPrivateAccessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// expected output: \"✨hello worl​d✨\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Specification</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://tc39.es/proposal-class-fields/#prod-FieldDefinition\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Public and private instance fields<br><small lang=\"es\">La definición de 'FieldDefinition' en esta especificación.</small></a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.classes.private_class_fields","dataURL":"/es/docs/Web/JavaScript/Reference/Classes/Private_class_fields/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li>\n  <li><a href=\"https://rfrn.org/~shu/2018/05/02/the-semantics-of-all-js-class-elements.html\" class=\"external\" rel=\" noopener\">The Semantics of All JS Class Elements</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"Las propiedades de la clase son públicas de forma predeterminada y se pueden examinar o modificar fuera de la clase. Sin embargo, existe una propuesta experimental para permitir la definición de campos de clase privados utilizando un #prefijo hash .","popularity":0.0008,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Private class features","locale":"en-US","native":"English (US)"},{"title":"Variables de classe privés","locale":"fr","native":"Français"},{"title":"プライベートクラス機能","locale":"ja","native":"日本語"},{"title":"Private class fields","locale":"ko","native":"한국어"},{"title":"Приватные поля класса","locale":"ru","native":"Русский"},{"title":"类私有域","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"es/web/javascript/reference/classes/private_class_fields","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/javascript/reference/classes/private_class_fields/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/es/docs/Web","title":"Tecnología para desarrolladores web"},{"uri":"/es/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/es/docs/Web/JavaScript/Reference","title":"Referencia de JavaScript"},{"uri":"/es/docs/Web/JavaScript/Reference/Classes","title":"Clases"},{"uri":"/es/docs/Web/JavaScript/Reference/Classes/Private_class_fields","title":"Private class fields"}],"pageTitle":"Private class fields - JavaScript | MDN","noIndexing":false}}