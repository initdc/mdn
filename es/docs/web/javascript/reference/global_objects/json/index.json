{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"JSON","mdn_url":"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON","locale":"es","native":"Español","sidebarHTML":"<ol><li><strong><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Métodos</strong></a><ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a></li></ol></li><li><strong>Herencia</strong></li><li><strong><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propiedades</strong></a><ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Métodos</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":"resumen","title":"Resumen","isH3":false,"content":"<p>El objeto JSON contiene métodos para analizar <a href=\"http://json.org/\" class=\"external\" rel=\" noopener\">JavaScript Object Notation</a> (JSON) y convertir valores a JSON. No puede ser llamado o construído, y aparte de estas dos propiedades, no tiene funcionalidad interesante por sí mismo.</p>"}},{"type":"prose","value":{"id":"descripción","title":"Descripción","isH3":false,"content":""}},{"type":"prose","value":{"id":"javascript_object_notation","title":"JavaScript Object Notation","isH3":true,"content":"<p>JSON es una sintaxis para serializar objetos, arreglos, números, cadenas, booleanos y nulos. Está basado sobre sintaxis JavaScript pero es diferente a ella: algo JavaScript no es JSON, y algo JSON no es JavaScript. Mira también: <a href=\"http://timelessrepo.com/json-isnt-a-javascript-subset\" class=\"external\" rel=\" noopener\">JSON: The JavaScript subset that isn't</a>.</p>\n<table>\n  <thead>\n    <tr>\n      <th>Tipo JavaScript</th>\n      <th>Diferencia JSON</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Objetos y arreglos</td>\n      <td>Los nombres de las propiedades deben tener doble comilla; las comas finales están prohibidas.</td>\n    </tr>\n    <tr>\n      <td>Números</td>\n      <td>Los ceros a la izquierda están prohibidos; un punto decimal debe ser seguido al menos por un dígito.</td>\n    </tr>\n    <tr>\n      <td>Cadenas</td>\n      <td>Solo un limitado conjunto de caracteres pueden ser de escape; ciertos caracteres de control estan prohibidos; los caracteres de separador de linea Unicode (U+2028) y el separador de parrafo (U+2029) son permitidos; las cadenas deben estar entre comillas dobles. Mira el siguiente ejemplo donde <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse</code></a> funciona bien y un<a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> es generado cuando se evalua el codigo como JavaScript:\n        <pre lang=\"js\" class=\"notranslate\">var code = '\"\\u2028\\u2029\"';<br>JSON.parse(code); // works fine<br>eval(code); // fails</pre>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<p>La sintaxis JSON completa es la siguiente:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">JSON</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n    or <span class=\"token boolean\">true</span> or <span class=\"token boolean\">false</span>\n    or JSONNumber\n    or JSONString\n    or JSONObject\n    or JSONArray\n\nJSONNumber <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> PositiveNumber\n          or PositiveNumber\nPositiveNumber <span class=\"token operator\">=</span> DecimalNumber\n              or DecimalNumber <span class=\"token punctuation\">.</span> Digits\n              or DecimalNumber <span class=\"token punctuation\">.</span> Digits ExponentPart\n              or DecimalNumber ExponentPart\nDecimalNumber <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n              or OneToNine Digits\nExponentPart <span class=\"token operator\">=</span> e Exponent\n            or <span class=\"token constant\">E</span> Exponent\nExponent <span class=\"token operator\">=</span> Digits\n        or <span class=\"token operator\">+</span> Digits\n        or <span class=\"token operator\">-</span> Digits\nDigits <span class=\"token operator\">=</span> Digit\n      or Digits Digit\nDigit <span class=\"token operator\">=</span> <span class=\"token number\">0</span> through <span class=\"token number\">9</span>\nOneToNine <span class=\"token operator\">=</span> <span class=\"token number\">1</span> through <span class=\"token number\">9</span>\n\nJSONString <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n          or <span class=\"token string\">\" StringCharacters \"</span>\nStringCharacters <span class=\"token operator\">=</span> StringCharacter\n                or StringCharacters StringCharacter\nStringCharacter <span class=\"token operator\">=</span> any character\n                  except \" or \\ or <span class=\"token constant\">U</span><span class=\"token operator\">+</span><span class=\"token number\">0000</span> through <span class=\"token constant\">U</span><span class=\"token operator\">+</span>001F\n                or EscapeSequence\nEscapeSequence <span class=\"token operator\">=</span> \\\" or \\<span class=\"token operator\">/</span> or \\\\ or \\b or \\f or \\n or \\r or \\t\n              or \\u HexDigit HexDigit HexDigit HexDigit\nHexDigit <span class=\"token operator\">=</span> <span class=\"token number\">0</span> through <span class=\"token number\">9</span>\n        or <span class=\"token constant\">A</span> through <span class=\"token constant\">F</span>\n        or a through f\n\nJSONObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n          or <span class=\"token punctuation\">{</span> Members <span class=\"token punctuation\">}</span>\nMembers <span class=\"token operator\">=</span> JSONString <span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span>\n        or Members <span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">JSONString</span> <span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span>\n\nJSONArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span>\n          or <span class=\"token punctuation\">[</span> ArrayElements <span class=\"token punctuation\">]</span>\nArrayElements <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span>\n              or ArrayElements <span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span>\n\nEspacios en blanco insignificantes pueden estar presentes en cualquier lugar excepto en un <span class=\"token function\">_JSONNumber_</span> <span class=\"token punctuation\">(</span>los números no deben contener ningún espacio<span class=\"token punctuation\">)</span> o en una <span class=\"token function\">_JSONString_</span> <span class=\"token punctuation\">(</span>donde es interpretado como el caracter correspondiente en la cadena<span class=\"token punctuation\">,</span> o podría causar un error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> Los caracteres de <span class=\"token function\">Tabulación</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">U</span><span class=\"token operator\">+</span><span class=\"token number\">0009</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> de retorno de <span class=\"token function\">carro</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">U</span><span class=\"token operator\">+</span>000D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> de nueva <span class=\"token function\">línea</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">U</span><span class=\"token operator\">+</span>000A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y de <span class=\"token function\">espacio</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">U</span><span class=\"token operator\">+</span><span class=\"token number\">0020</span><span class=\"token punctuation\">)</span> son los únicos caracteres de espacios en blanco válidos<span class=\"token punctuation\">.</span>\n\n## <span class=\"token constant\">M</span>étodos\n\n<span class=\"token operator\">*</span>   <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">*</span>   <span class=\"token operator\">:</span> Analiza una cadena de texto <span class=\"token constant\">JSON</span><span class=\"token punctuation\">,</span> opcionalmente transformando el valor producido y sus propiedades<span class=\"token punctuation\">,</span> retornando el valor<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">*</span>   <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">*</span>   <span class=\"token operator\">:</span> Devuelve un string <span class=\"token constant\">JSON</span> correspondiente al valor especificado<span class=\"token punctuation\">,</span> incluyendo opcionalmente ciertas propiedades o reemplazando valores de propiedades de la manera definida por el usuario<span class=\"token punctuation\">.</span>\n\n## Polyfill\n\nEl objeto <span class=\"token constant\">JSON</span> no es soportado por navegadores antiguos<span class=\"token punctuation\">.</span> Se puede solucionar esto insertando el siguiente código al inicio del script<span class=\"token punctuation\">,</span> permitiendo usar el objeto <span class=\"token constant\">JSON</span> en navegadores que no soportan su implementación de forma <span class=\"token function\">nativa</span> <span class=\"token punctuation\">(</span>por ejemplo en Internet Explorer <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\nEl siguiente algoritmo es una imitación del objeto <span class=\"token constant\">JSON</span> <span class=\"token literal-property property\">nativo</span><span class=\"token operator\">:</span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`js\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token constant\">JSON</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">parse</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sJSON</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> sJSON <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">stringify</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">vContent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vContent <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> sOutput <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vContent<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">===</span> Array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> nId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> nId <span class=\"token operator\">&lt;</span> vContent<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> sOutput <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>vContent<span class=\"token punctuation\">[</span>nId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> nId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"[\"</span> <span class=\"token operator\">+</span> sOutput<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sOutput<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vContent<span class=\"token punctuation\">.</span>toString <span class=\"token operator\">!==</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token string\">\"\\\"\"</span> <span class=\"token operator\">+</span> vContent<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\\\$&amp;\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> sProp <span class=\"token keyword\">in</span> vContent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          sOutput <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\\"\"</span> <span class=\"token operator\">+</span> sProp<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\\\$&amp;\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\":\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>vContent<span class=\"token punctuation\">[</span>sProp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"{\"</span> <span class=\"token operator\">+</span> sOutput<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sOutput<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"}\"</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n     <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> vContent <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"\\\"\"</span> <span class=\"token operator\">+</span> vContent<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\"</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\\\$&amp;\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span> <span class=\"token operator\">:</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>vContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Los objectos <a href=\"https://github.com/douglascrockford/JSON-js\" class=\"external\" rel=\" noopener\">JSON2</a> y <a href=\"http://bestiejs.github.com/json3\" class=\"external\" rel=\" noopener\">JSON3</a> son mas complejos que el objeto JSON ya que manejan <a href=\"http://remysharp.com/2010/10/08/what-is-a-polyfill/\" class=\"external\" rel=\" noopener\">polyfills</a>.</p>"}},{"type":"prose","value":{"id":"especificaciones","title":"Especificaciones","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Especificación</th>\n      <th>Estado</th>\n      <th>Comentario</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/5.1/#sec-15.12\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 5.1 (ECMA-262)<br><small lang=\"es\">La definición de 'JSON' en esta especificación.</small></a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-json-object\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"es\">La definición de 'JSON' en esta especificación.</small></a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidad con navegadores","id":"compatibilidad_con_navegadores","isH3":false,"query":"javascript.builtins.JSON","dataURL":"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON/bcd.json"}},{"type":"prose","value":{"id":"vea_también","title":"Vea también","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Using native JSON (en-US)</a></li>\n  <li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\"><code>Date.prototype.toJSON()</code></a></li>\n</ul>"}}],"toc":[{"text":"Resumen","id":"resumen"},{"text":"Descripción","id":"descripción"},{"text":"Especificaciones","id":"especificaciones"},{"text":"Compatibilidad con navegadores","id":"compatibilidad_con_navegadores"},{"text":"Vea también","id":"vea_también"}],"summary":"El objeto JSON contiene métodos para analizar JavaScript Object Notation (JSON) y convertir valores a JSON. No puede ser llamado o construído, y aparte de estas dos propiedades, no tiene funcionalidad interesante por sí mismo.","popularity":0.0022,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"JSON","locale":"en-US","native":"English (US)"},{"title":"JSON","locale":"fr","native":"Français"},{"title":"JSON","locale":"ja","native":"日本語"},{"title":"JSON","locale":"ko","native":"한국어"},{"title":"JSON","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"JSON","locale":"ru","native":"Русский"},{"title":"JSON","locale":"zh-CN","native":"中文 (简体)"},{"title":"JSON","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"es/web/javascript/reference/global_objects/json","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/javascript/reference/global_objects/json/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/es/docs/Web","title":"Tecnología para desarrolladores web"},{"uri":"/es/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/es/docs/Web/JavaScript/Reference","title":"Referencia de JavaScript"},{"uri":"/es/docs/Web/JavaScript/Reference/Global_Objects","title":"Objetos globales"},{"uri":"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON","title":"JSON"}],"pageTitle":"JSON - JavaScript | MDN","noIndexing":false}}