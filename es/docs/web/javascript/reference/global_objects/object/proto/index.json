{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Object.prototype.__proto__","mdn_url":"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/proto","locale":"es","native":"Español","sidebarHTML":"<ol><li><strong><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propiedades</strong></a><ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><em><code>Object.prototype.__proto__</code></em></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Métodos</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\"><code>Object.freeze()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"><code>Object.fromEntries()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\"><code>Object.getOwnPropertyDescriptors()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn\"><code>Object.hasOwn()</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\"><code>Object.isFrozen()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\"><code>Object.isSealed()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\"><code>Object.seal()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/values\"><code>Object.values()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>Advertencia:</strong> Cambiar la propiedad <code>[[Prototype]]</code> de un objeto es, por como los navegadores modernos optimizan las propiedades de acceso, una operación muy lenta en <strong><em>todos</em></strong> los navegadores y motores JavaScript. Los efectos en el rendimiento de alterar la herencia son muchos y delicados, y no se limita simplemente al tiempo que necesita la asignación <code>obj.__proto__ = ...</code> sentencia, sin embargo afecta a <strong><em>cualquier</em></strong> código que tiene acceso a <strong><em>cualquier</em></strong> objeto cuya propiedad <code>[[Prototype]]</code> ha sido alterada, por lo que se debe de tener mucho cuidado.Si el rendimiento en tu aplicación es necesario, deberías evitar modificar la propiedad <code>[[Prototype]]</code> de un objeto. En su lugar, crea un objecto nuevo con la propiedad <code>[[Prototype]]</code> deseada usando <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a>.</p>\n</div>\n<div class=\"notecard warning\" id=\"sect2\">\n  <p><strong>Advertencia:</strong> Mientras <code>Object.prototype.__proto__</code> es soportado hoy día por la mayoría de navegadores, su existencia y comportamiento exacto solo ha sido estandarizado en la especificación ECMAScript 6 como una característica de legado y para asegurar la compatibilidad entre los navegadores web. Para tener un mejor soporte, es recomendable que se utilice <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a> para obtener el prototipo de un objeto.</p>\n</div>\n<p>La propiedad <code>__proto__</code> de <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a> es una propiedad llamada de acceso (una función getter y también función setter) que provee acceso al interior de <code>[[Prototype]]</code> (ya sea un objeto o <a href=\"/es/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>) del objeto a través del cual se accede a ella.</p>\n<p>El uso de la propiedad <code>__proto__</code> es polémico actualmente, y está rechazado. Originalmente, nunca fué incluído en la especificación de EcmaScript, pero los navegadores modernos decidieron implementarla de todas maneras. Sólo actualmente, <code>la propiedad __proto__</code> ha sido estandarizada en la especificación del lenguaje ECMAScript 6, para asegurar la compatibilidad entre navegadores, por lo tanto, esta será soportada en el futuro. Actualmente está obsoleta en favor de <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf</code></a>/<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf\"><code>Reflect.getPrototypeOf</code> <small>(en-US)</small></a> y <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf</code></a>/<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf</code> <small>(en-US)</small></a> (aunque todavía establecer el <code>[[Prototype]]</code> de un objeto es una operación muy lenta, por lo que si nos preocupa el rendimiento, debemos de evitarlo).</p>\n<p>La propiedad <code>__proto__</code> puede ser usada también en un objeto definido de forma literal, para establecer el <code>[[Prototype]]</code> en la creación de este, como alternativa a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a>. Ver: <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">object initializer / literal syntax (en-US)</a>.</p>"}},{"type":"prose","value":{"id":"síntaxis","title":"Síntaxis","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> circle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Establecer el objeto prototype.</span>\n<span class=\"token comment\">// OBSOLETO. Esto es solo un ejemplo. NO HACER ESTO en código real.</span>\nshape<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> circle<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Obtener el objeto prototype</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> circle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n</code></pre></div>\n<p>Nota: esto es, dos guiones bajos, seguidos de cinco carácteres \"proto\", seguido de dos guiones bajos mas.</p>"}},{"type":"prose","value":{"id":"descripción","title":"Descripción","isH3":false,"content":"<p>La función getter <code>__proto__</code>el valor interno del <code>[[Prototype]]</code> de un objeto. Para objetos creados usando un objeto literal, el valor es <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a>. Para objetos creados usando literales de array, este valor es <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>Array.prototype</code></a>. Para funciones, este valor <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\"><code>Function.prototype</code> <small>(en-US)</small></a>. Para objetos creados utilizando el operador new fun, donde <strong>fun</strong> es una función constructora incluída en JavaScript (<a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>, etcétera—incluyendo nuevos contrusctores conforme JavaScript evoluciona), este valor es <code>fun.prototype</code>. (Esto es, si el constructor no devuelve un objeto de forma explícita, o el <code>fun.prototype</code> ha sido reasignado desde que la instancia fué creada).</p>\n<p>El <code>__proto__</code> setter la mutación del objeto <code>[[Prototype]]</code> de un objeto. El objeto debe ser extensible según <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a>: si no, un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> es lanzado. El valor proveído debe ser un objeto o <a href=\"/es/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>. Provetendo otro tipo de valor no hará nada.</p>\n<p>Para entender como los prototipos son usados para herencia, ver el artículo <a href=\"/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Inheritance and the prototype chain (en-US)</a>.</p>\n<p>La propiedad <code>__proto__</code> es una simple propiedad de acceso a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a> que consiste en una función getter y setter. Un acceso a la propiedad <code>__proto__</code> que eventualmente consulta <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a> encontrará esta propiedad, pero un acceso que no consulta <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a> no lo encontrará. Si alguna otra propiedad <code>__proto__</code> es encontrada antes <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a> es consultada, esta propiedad sera ocultada por la encontrada en <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a>.</p>"}},{"type":"prose","value":{"id":"especificaciones","title":"Especificaciones","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Especificaciones</th>\n      <th>Estado</th>\n      <th>Comentario</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-additional-properties-of-the-object.prototype-object\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"es\">La definición de 'Object.prototype.__proto__' en esta especificación.</small></a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td>Incluída en el anexo (normativa) para características de legado ECMAScript para navegadores web (observar que la especificación de codificación es lo que ya está en las implementaciones).</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidad de navegadores","id":"compatibilidad_de_navegadores","isH3":false,"query":"javascript.builtins.Object.proto","dataURL":"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/proto/bcd.json"}},{"type":"prose","value":{"id":"notas_de_compatibilidad","title":"Notas de compatibilidad","isH3":false,"content":"<p>Mientras la especificación ECMAScript 2015 (ES6) dicta que el soporte para <code>__proto__</code> es requerido <em>solo</em> para navegadores web (a pesar de ser normativo), otros medios pueden soportarlo por uso de legado.</p>"}},{"type":"prose","value":{"id":"ver_también","title":"Ver también","isH3":false,"content":"<ul>\n  <li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li>\n  <li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a></li>\n  <li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li>\n</ul>"}}],"toc":[{"text":"Síntaxis","id":"síntaxis"},{"text":"Descripción","id":"descripción"},{"text":"Especificaciones","id":"especificaciones"},{"text":"Compatibilidad de navegadores","id":"compatibilidad_de_navegadores"},{"text":"Notas de compatibilidad","id":"notas_de_compatibilidad"},{"text":"Ver también","id":"ver_también"}],"summary":"La propiedad __proto__ de Object.prototype (en-US) es una propiedad llamada de acceso (una función getter y también función setter) que provee acceso al interior de [[Prototype]] (ya sea un objeto o null) del objeto a través del cual se accede a ella.","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Object.prototype.__proto__","locale":"en-US","native":"English (US)"},{"title":"Object.prototype.__proto__","locale":"fr","native":"Français"},{"title":"Object.prototype.__proto__","locale":"ja","native":"日本語"},{"title":"Object.prototype.__proto__","locale":"ko","native":"한국어"},{"title":"Object.prototype.__proto__","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Object.prototype.__proto__","locale":"ru","native":"Русский"},{"title":"Object.prototype.__proto__","locale":"zh-CN","native":"中文 (简体)"},{"title":"Object.prototype.__proto__","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"es/web/javascript/reference/global_objects/object/proto","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/javascript/reference/global_objects/object/proto/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/es/docs/Web","title":"Tecnología para desarrolladores web"},{"uri":"/es/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/es/docs/Web/JavaScript/Reference","title":"Referencia de JavaScript"},{"uri":"/es/docs/Web/JavaScript/Reference/Global_Objects","title":"Objetos globales"},{"uri":"/es/docs/Web/JavaScript/Reference/Global_Objects/Object","title":"Object"},{"uri":"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/proto","title":"Object.prototype.__proto__"}],"pageTitle":"Object.prototype.__proto__ - JavaScript | MDN","noIndexing":false}}