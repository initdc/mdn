{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Comparadores de igualdad e identidad","mdn_url":"/es/docs/Web/JavaScript/Equality_comparisons_and_sameness","locale":"es","native":"Espa√±ol","sidebarHTML":"\n <ol>\n  <li><a href=\"/es/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/es/docs/Web/JavaScript/Tutorials\"><strong>Tutorials:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Complete beginners</summary>\n      <ol>\n        <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/First_steps\">JavaScript first steps</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>JavaScript Guide</summary>\n      <ol>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Introduction\">Introduction</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Grammar_and_Types\">Grammar and types</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Control flow and error handling</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Loops_and_iteration\">Loops and iteration</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Functions\">Functions</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Expressions and operators</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Numbers_and_dates\">Numbers and dates</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Text_formatting\">Text formatting</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Regular_Expressions\">Regular expressions</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Indexed_collections\">Indexed collections</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Keyed_collections\">Keyed collections</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Working_with_Objects\">Working with objects</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Details of the object model</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Using_promises\">Using promises</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Iterators_and_generators\">Iterators and generators</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Meta_programming\">Meta programming</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Intermediate</summary>\n      <ol>\n        <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">A re-introduction to JavaScript</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Equality comparisons and sameness</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Closures\">Closures</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Advanced</summary>\n      <ol>\n        <li><a href=\"/es/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Inheritance and the prototype chain</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Typed_arrays\">JavaScript typed arrays</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Memory_Management\">Memory Management</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/EventLoop\">Concurrency model and Event Loop</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/es/docs/Web/JavaScript/Reference\">References:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Built-in objects</summary>\n        <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Expressions &amp; operators</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Statements &amp; declarations</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Functions</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Classes</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Misc</summary>\n      <ol>\n        <li><a href=\"/es/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript technologies overview</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Lexical_grammar\">Lexical grammar</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Enumerability and ownership of properties</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Iteration_protocols\">Iteration protocols</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Transitioning to strict mode</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Template_literals\">Template literals</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Deprecated features</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"></div>\n\n<div class=\"summary\" id=\"sect2\">\n<p>Existen cuatro algoritmos de igualdad en ES2015:</p>\n\n<ul>\n <li>Comparaci√≥n de Igualdad Abstracta (<code>==</code>)</li>\n <li>Comparaci√≥n de Igualdad Estricta (<code>===</code>): utilizada por <code>Array.prototype.indexOf</code>, <code>Array.prototype.lastIndexOf</code>, y  <code>case</code>-matching</li>\n <li>SameValueZero: utilizado por los constructores de <code>%TypedArray%</code> y <code>ArrayBuffer</code>, as√≠ como por las operaciones <code>Map</code> y <code>Set</code>, y tambi√©n por <code>String.prototype.includes</code> y <code>Array.prototype.includes</code> desde ES2016</li>\n <li>SameValue: utilizado en el resto de los casos</li>\n</ul>\n\n<p>JavaScript proporciona tres operaciones distintas para comparar la igualdad de dos elementos:</p>\n\n<ul>\n <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#identity\">===</a> - Igualdad estricta  (o \"triple igual\" o \"identidad\")</li>\n <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#equality\">==</a> - igualdad d√©bil o relajada  (\"doble igual\")</li>\n <li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a> proporciona SameValue (nuevo en ES2015).</li>\n</ul>\n\n<p>Elegir una u otra operaci√≥n depende del tipo de comparaci√≥n que se est√© buscando realizar.</p>\n</div>\n\n<p>Explic√°ndolo de manera concisa, un doble igual lleva a cabo una conversi√≥n de tipo (cast) cuando se comparan dos cosas; el triple igual hace lo mismo pero sin realizar ninguna conversi√≥n de tipo (cast) (simplemente devuelve falso si los tipos de los elementos a comparar son diferentes); Y Object.is funciona de la misma manera que el triple igual pero hace una gesti√≥n especial de NaN, -0 y +0 de tal manera que los dos √∫ltimos no son  iguales mientras que Object.is(NaN, NaN) nos devolver√° <code>true</code>. (Si comparamos NaN con NaN de manera ordinaria , por ejemplo usando el doble igual o el triple igual, nos devolver√° <code>false</code>, ya que la especificaci√≥n IEEE 754 as√≠ lo dice). Hay que darse cuenta de que la distinci√≥n entre todas estas posibilidades  tiene que ver con como se manejan los tipos primitivos; ninguna de ellas compara si los par√°metros son similares en relaci√≥n a su estructura. Para comparar dos objectos no primitivos , x e y, que tengan la misma estructura pero que sean objetos diferentes entre ellos, todos los casos anteriormente descritos devolver√°n false.</p>"}},{"type":"prose","value":{"id":"igualdad_estricta_usando","title":"Igualdad Estricta usando  <code>===</code>","isH3":false,"content":"<p>El operador igualdad estricta compara la igualdad de dos valores. Ninguno de estos valores se convierte de manera impl√≠cita antes de ser comparado.  Si los valores tienen tipos diferentes son considerados diferentes. Por el contrario, si los valores tienen el mismo tipo y no son n√∫meros, son considerados iguales si tienen el mismo valor. Finalmente, si ambos valores son n√∫meros, son considerados iguales si ambos no son NaN y tienen el mismo valor, o si uno es +0 y otro -0.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">===</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">===</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">===</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">===</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre></div>\n\n\n\n<p>La igualdad estricta es casi siempre el operador igualdad m√°s adecuado. Para todos los valores, excepto para los n√∫meros, utiliza la sem√°ntica obvia: un valor s√≥lo es igual as√≠ mismo. Para n√∫mero usa una sem√°ntica ligeramente diferente para  paliar dos casos l√≠mites diferentes. El primero es que usando n√∫mero en coma flotante el cero puede ser positivo o negativo. Esto es √∫til para representar ciertas soluciones matem√°ticas, pero en la mayor√≠a de las situaciones no nos importa esa diferencia entre +0 y -0. La igualdad estricta los trata como un √∫nicomvalor. El segundo caso tiene que ver con que los n√∫mero en coma flotante incluyen el concepto NaN (Not a Number) como un posible valor para representar la soluci√≥n a ciertos problemas matem√°ticos mal definidos, por ejemplo la adici√≥n de un infinito negativo a un infinito positivo. La igualdad estricta trata NaN como desigual con cualquier otro valore -- incluyendo a s√≠ mismo. (El √∫nico caso en el que x !== x es verdades en cuando x is NaN).</p>","titleAsText":"Igualdad Estricta usando  ==="}},{"type":"prose","value":{"id":"igualdad_d√©bil_usando","title":"Igualdad d√©bil usando  ==","isH3":false,"content":"<p>El operador igualdad d√©bil compara la igualdad de dos valores despu√©s de convertir ambos valores a un tipo de datos com√∫n. Tras la conversi√≥n  , la comparaci√≥n que se lleva a cabo funciona exactamente como ===. La igual d√©bil es una igualdad sim√©trica: A == B tiene una sem√°tica id√©ntica a B == A para cualquier valor que tengan A y B ( excepto por el orden de las .conversiones de tipo aplicadas)</p>\n\n\n\n<p>Para los operandos de varios tipos funciona de la siguiente manera:</p>\n\n\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"row\"></th>\n   <th colspan=\"7\" scope=\"col\" style=\"text-align: center;\">Operando B</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <th scope=\"row\"></th>\n   <td></td>\n   <td style=\"text-align: center;\">Undefined</td>\n   <td style=\"text-align: center;\">Null</td>\n   <td style=\"text-align: center;\">Number</td>\n   <td style=\"text-align: center;\">String</td>\n   <td style=\"text-align: center;\">Boolean</td>\n   <td style=\"text-align: center;\">Object</td>\n  </tr>\n  <tr>\n   <th colspan=\"1\" rowspan=\"6\" scope=\"row\">Operando A</th>\n   <td>Undefined</td>\n   <td style=\"text-align: center;\"><code>true</code></td>\n   <td style=\"text-align: center;\"><code>true</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td>Null</td>\n   <td style=\"text-align: center;\"><code>true</code></td>\n   <td style=\"text-align: center;\"><code>true</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td>Number</td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>A === B</code></td>\n   <td style=\"text-align: center;\"><code>A === ToNumber(B)</code></td>\n   <td style=\"text-align: center;\"><code>A === ToNumber(B)</code></td>\n   <td style=\"text-align: center;\"><code>A == ToPrimitive(B)</code></td>\n  </tr>\n  <tr>\n   <td>String</td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>ToNumber(A) === B</code></td>\n   <td style=\"text-align: center;\"><code>A === B</code></td>\n   <td style=\"text-align: center;\"><code>ToNumber(A) === ToNumber(B)</code></td>\n   <td style=\"text-align: center;\"><code>A == ToPrimitive(B)</code></td>\n  </tr>\n  <tr>\n   <td>Boolean</td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>ToNumber(A) === B</code></td>\n   <td style=\"text-align: center;\"><code>ToNumber(A) === ToNumber(B)</code></td>\n   <td style=\"text-align: center;\"><code>A === B</code></td>\n   <td style=\"text-align: center;\"><code>ToNumber(A) == ToPrimitive(B)</code></td>\n  </tr>\n  <tr>\n   <td>Object</td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>false</code></td>\n   <td style=\"text-align: center;\"><code>ToPrimitive(A) == B</code></td>\n   <td style=\"text-align: center;\"><code>ToPrimitive(A) == B</code></td>\n   <td style=\"text-align: center;\"><code>ToPrimitive(A) == ToNumber(B)</code></td>\n   <td style=\"text-align: center;\"><code>A === B</code></td>\n  </tr>\n </tbody>\n</table>\n\n<p>En la tabla previa, <code>ToNumber(A)</code> intenta convertir su argumento a n√∫mero antes de realizar la compraci√≥n.  Su comportamiento es equivalente a <code>+A</code> (el operador unario +).  <code>ToPrimitive(A)</code> intenta convertir su objeto argumento a un valor de tipo primitivo realizando varias secuencias de invocaciones <code>A.toString</code> y <code>A.valueOf</code> en <code>A</code>.</p>\n\n<p>Tradicionalmente, y de acuerdo con la especificaci√≥n ECMAScript, todos los objetos son d√©bilmente desiguales compar√°ndolos con <code>undefined</code> y<code> null</code>. Pero algunos nevegadores permiten que una cantidad muy limitada  de <code>clases</code> de objetos  (especif√≠camente , el objeto <code>documento.all</code> para todas las p√°ginas), en algunos contextos, puedan actuar como si <em>emularan</em> el valor <code>undefined</code>. En ese contexto se eval√∫a como verdadero las igualdades d√©biles null == A y undefined == A, s√≠ y s√≥lo s√≠, A es un objecto que emula <code>undefined</code>. En cualquier otro caso la igual d√©bil no ser√° verdadera con <code>undefined</code> o <code>null</code>.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">==</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// both false, except in rare cases</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n\n\n<p>Algunos desarrolladores consideran que nunca es una buena idea usar este tipo de igualdad, la igualdad d√©bil. El resultado cuando se usa la igualdad estricta es m√°s f√°cil de predecir y , como no hay coerci√≥n de tipos durante la evaluaci√≥n, es con casi total seguridad m√°s r√°pida.</p>"}},{"type":"prose","value":{"id":"igualdad_same-value","title":"Igualdad Same-value","isH3":false,"content":"<p>La igualdad Same-value se encarga de un √∫ltimo caso de uso: determinar si dos valores son <em>funcionalmente id√©nticos</em> en todos los contextos. (Este caso de uso es un caso de ejemplo del <a href=\"http://en.wikipedia.org/wiki/Liskov_substitution_principle\" class=\"external\" rel=\" noopener\">Liskov substitution principle</a>.) Un ejemplo de esto ocurre cuando se intenta hacer mutable una propiedad inmutable.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Add an immutable NEGATIVE_ZERO property to the Number constructor.</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">,</span> <span class=\"token string\">\"NEGATIVE_ZERO\"</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">writable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">attemptMutation</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">,</span> <span class=\"token string\">\"NEGATIVE_ZERO\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> v <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n\n\n<p><code>Object.defineProperty</code> que lanzar√° una excepci√≥n cuando se intente cambiar una propiedad inmutable la cambiar√°, pero no har√° nada si al solicitar el cambio actual . Si v es -0, no ha sido solicitado ning√∫n cambio y no se lanzar√° ning√∫n error. Pero si v es +0, <code>Number</code> . NEGATIVE_ZERO no tendr√° m√°s su valor inmutalbe. Internamente, al redefinir una propiedad inmutbale, el nuevo valor se compara con el valor actual usando la igualdad same-value.</p>\n\n\n\n<p>El m√©todo <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a> nos proporciona la igualdad same-value.</p>"}},{"type":"prose","value":{"id":"igualdad_same-value-zero","title":"Igualdad Same-value-zero","isH3":false,"content":"<p>Similar a la igualdad same-value, pero +0 y -0 son considerados iguales.</p>"}},{"type":"prose","value":{"id":"igualdad_abstracta_igualdad_estricta_e_igualdad_same_value_en_la_especificaci√≥n.","title":"Igualdad abstracta, igualdad estricta e igualdad same value en la especificaci√≥n.","isH3":false,"content":"<p>En la especificaci√≥n ES5, la comparaci√≥n<code> </code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\"><code>== </code></a><code>queda descrita en</code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\"><code> </code></a><a href=\"https://ecma-international.org/ecma-262/5.1/#sec-11.9.3\" title=\"http://ecma-international.org/ecma-262/5.1/#sec-11.9.3\" class=\"external\" rel=\" noopener\">Section 11.9.3, The Abstract Equality Algorithm</a>. La comparaci√≥n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\"><code>=== </code></a>en <a href=\"https://ecma-international.org/ecma-262/5.1/#sec-11.9.6\" title=\"http://ecma-international.org/ecma-262/5.1/#sec-11.9.6\" class=\"external\" rel=\" noopener\">11.9.6, The Strict Equality Algorithm</a>. (B√∫scala y leela, son breves y f√°ciles de leer. Nota: lee el algoritmo de la igualdad estricta primero.) ES5 tambi√©n describe, en <a href=\"https://ecma-international.org/ecma-262/5.1/#sec-9.12\" class=\"external\" rel=\" noopener\">Section 9.12, The SameValue Algorithm  </a>para uso interno del motor JS. Es, en su mayor√≠a igual que el algoritmo de igualdad estricto, excepto porque 11.9..6.4 y 9.12.4 difieren en c√≥mo tratar los <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Numbers. </code></a><code>ES2015 simplemente propone exponer este algoritmo mediante el uso de </code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a>.</p>\n\n<p>Podemos ver con el igual doble y el triple que, con la excepci√≥n de hacer con antelaci√≥n una comprobaci√≥n de tipo en 11.9.6.1, el algorimto de igualdad estricta es un subconjunto del algorimot de igualdad abstracta porque 11.9.6.2-7 se corresponde con 11.9.3.1a-f.</p>"}},{"type":"prose","value":{"id":"¬ø_un_modelo_para_comprender_las_comparacions_de_igualdad","title":"¬ø Un modelo para comprender las comparacions de igualdad?","isH3":false,"content":"<p>Antes de ES2015, pod√≠amos haber dicho sobre el igual doble y el igual triple que uno es una versi√≥n mejoradad del otro. Por ejemplo, alguien podr√≠a decir que el igual doble es una versi√≥n extendida del igual triple ya que el primero hace todo lo que hace el segundo pero a√±adiendo la conversi√≥n de operadores. Por ejemplo 6 == \"6\". (De manera alternativa alguien podr√≠a decir que el igual doble es la base y que el igual triple es una versi√≥n mejorada, ya que requiere que los dos operadores sean del mismo tipo y, por lo tanto, a√±ade una restricci√≥n adicional. Qu√© afirmaci√≥n es mejor para entender el modelo depende en tu punto de vista).</p>\n\n<p>Sin embargo. esta manera de pensar sobre los operadores de igualdad proporcionados de manera nativa no es un modelo en el que podamos encuadrar la versi√≥n  ES2015<code> de </code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is. Object.is </code></a>no es simplemente m√°s d√©bil que el doble igual o m√°s estricto que el triple igual, ni tampoco ocupa un lugar intermedio (por ejemplo siendo a la vez m√°s estricto que el igual doble y m√°s d√©bil que el igual triple). Podemos ver en la tabla inferior que esto se debe a la manera en la que <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is </code></a>maneja <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>. F√≠jate que si <code>Object.is(Nan, Nan)</code> evaluara a falso podr√≠amos decir que que se encuadra dentro de la escala d√©bil /estricta como algo m√°s estricto que el triple igual, como un operador que distigue entre +0 y -0. Sin embargo en el manejo de <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN </code></a>esto no es cierto. Simplemente debemos considerar <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is </code></a>en t√©rminos de sus caracter√≠sticas espec√≠ficas y no en relaci√≥n a su debilidad o rigidez dentro del especto de los operadores de igualdad.</p>\n\n\n\n<table class=\"standard-table\">\n <caption>Comparadores de Igualdad</caption>\n <thead>\n  <tr>\n   <th scope=\"col\" style=\"text-align: center;\">x</th>\n   <th scope=\"col\" style=\"text-align: center;\">y</th>\n   <th scope=\"col\" style=\"width: 10em; text-align: center;\"><code>==</code></th>\n   <th scope=\"col\" style=\"width: 10em; text-align: center;\"><code>===</code></th>\n   <th scope=\"col\" style=\"width: 10em; text-align: center;\"><code>Object.is</code></th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code>undefined</code></td>\n   <td><code>undefined</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>null</code></td>\n   <td><code>null</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>true</code></td>\n   <td><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>false</code></td>\n   <td><code>false</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>\"foo\"</code></td>\n   <td><code>\"foo\"</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>{ foo: \"bar\" }</code></td>\n   <td><code>x</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>0</code></td>\n   <td><code>0</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n  <tr>\n   <td><code>+0</code></td>\n   <td><code>-0</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>0</code></td>\n   <td><code>false</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>\"\"</code></td>\n   <td><code>false</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>\"\"</code></td>\n   <td><code>0</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>\"0\"</code></td>\n   <td><code>0</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>\"17\"</code></td>\n   <td><code>17</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>[1,2]</code></td>\n   <td><code>\"1,2\"</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>new String(\"foo\")</code></td>\n   <td><code>\"foo\"</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>null</code></td>\n   <td><code>undefined</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>null</code></td>\n   <td><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>undefined</code></td>\n   <td><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>{ foo: \"bar\" }</code></td>\n   <td><code>{ foo: \"bar\" }</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>new String(\"foo\")</code></td>\n   <td><code>new String(\"foo\")</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>0</code></td>\n   <td><code>null</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>0</code></td>\n   <td><code>NaN</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>\"foo\"</code></td>\n   <td><code>NaN</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n  </tr>\n  <tr>\n   <td><code>NaN</code></td>\n   <td><code>NaN</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(255, 144, 144); text-align: center;\"><code>false</code></td>\n   <td style=\"background-color: rgb(144, 255, 144); text-align: center;\"><code>true</code></td>\n  </tr>\n </tbody>\n</table>"}},{"type":"prose","value":{"id":"cuando_usar_object.is_o_el_igual_triple","title":"Cuando usar <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a> o el igual triple","isH3":false,"content":"<p>Adem√°s de como trata <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>, generalmente, la √∫nica vez en la que <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a> posee un comportamiento especial hacia los ceros puede resultar de inter√©s para usar ciertos esquemas de meta-programaci√≥n, sobre todo en relaci√≥n a los descriptores de porpiedades cuando es deseable que nuestro trabajo replique algunas de las caracter√≠sticas de <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty</code></a>. Si en tu situaci√≥n no requiere de esto, lo mejor es evitar <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is </code></a>y usar <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators\"><code>===. </code></a>Incluso si entre tus requisitos est√° poseer que la  comparaci√≥n entre dos valores <code><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></code>sea verdadera, generalmente es m√°s f√°cil hacer un caso especial para ello (usando el m√©todo <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>isNaN </code></a>que est√° disponible en versiones previas de ECMAScript) que calcular c√≥mo la operaciones van afectar a los posibles signos de los valores cero en tu comparaci√≥n.</p>\n\n\n\n<p>Aqu√≠ podemos ver una lista exhaustiva de los m√©todo y operadores nativos que pueden distinguir entre -0 y +0 en tu c√≥digo:</p>\n\n\n\n<dl>\n <dt id=\"-_unary_negation\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#-_.28unary_negation.29\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators\"><code>- (unary negation)</code></a></dt>\n</dl>\n\n<dl>\n <dd>\n <p>Obviamente negar 0 genera -0. <code>Pero al abstracci√≥n de una expresi√≥n puede causar que un valor -0 se cuele sin darte cuenta</code> Consideremos el siguiente ejemplo:</p>\n\n <div class=\"code-example\"><pre class=\"brush:js notranslate\"><code><span class=\"token keyword\">let</span> stoppingForce <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>mass <span class=\"token operator\">*</span> <span class=\"token operator\">-</span>obj<span class=\"token punctuation\">.</span>velocity</code></pre></div>\n\n <p>Si o<code>bj.velocity</code> is <code>0</code> (o se calcula como <code>0</code>), se inserta<code>-0 </code>en ese lugar y este valor se propaga a<code> </code><code>stoppingForce</code>.</p>\n </dd>\n</dl>\n\n<dl>\n <dt id=\"math.atan2\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2\"><code>Math.atan2</code></a></dt>\n <dt id=\"math.ceil\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\"><code>Math.ceil</code></a></dt>\n <dt id=\"math.pow\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\"><code>Math.pow</code></a></dt>\n <dt id=\"math.round\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"><code>Math.round</code></a></dt>\n</dl>\n\n<dl>\n <dd>Se puede introducir un -0 dentro de una expresi√≥n como valor de retorno  en estos m√©todo, incluso cuando -0 no sea uno de los par√°metros. Por ejemplo usando <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\"><code>Math.pow</code></a> para elevar <code>-<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></code> a cualquier potencia negativa, los exponentes impares se evaluar√°n como -0. Consulta la documentaci√≥n para m√°s detalles sobre cada uno de los m√©todos.</dd>\n</dl>\n\n<dl>\n <dt id=\"math.floor\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\"><code>Math.floor</code></a></dt>\n <dt id=\"math.max\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max\"><code>Math.max</code></a></dt>\n <dt id=\"math.min\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min\"><code>Math.min</code></a></dt>\n <dt id=\"math.sin\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\"><code>Math.sin</code></a></dt>\n <dt id=\"math.sqrt\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\"><code>Math.sqrt</code></a></dt>\n <dt id=\"math.tan\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\"><code>Math.tan</code></a></dt>\n</dl>\n\n<dl>\n <dd><code>Es posible obtener, en algunos casos, -0 como valor de retorno de estos m√©todos cuando -0 sea uno de los par√°metros Por ejemplo </code>Math.min(-0,+0) devuelve -0. Consulta la documentaci√≥n para m√°s detalles sobre cada uno de los m√©todos.</dd>\n</dl>\n\n<dl>\n <dt id=\"sect3\"><code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\">~</a></code></dt>\n <dt id=\"sect4\"><code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\">&lt;&lt;</a></code></dt>\n <dt id=\"sect5\"><code><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators\" title=\"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\">&gt;&gt;</a></code></dt>\n <dd>Cada uno de estos operadores usa el algoritmo ToInt32 de manera interna. Como s√≥lo hay un representacion de 0 para el intero de 32-bit interno. -0 no sobrevivir√° a la operaci√≥n inversa. Por ejemplo Object.is(~~(-0), -0) y Object.is(-0 &lt;&lt; 2 &gt;&gt; 2, -0) devolver√°n false.</dd>\n</dl>\n\n<p>Confiar en <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a> cuando no hay que tener en cuenta el signo de los ceros puede ser peligroso. Por supuesto para el caso contrario har√° exactamente lo deseado.</p>","titleAsText":"Cuando usar Object.is o el igual triple"}},{"type":"prose","value":{"id":"ver_adem√°s","title":"Ver adem√°s","isH3":false,"content":"<ul>\n <li><a href=\"http://dorey.github.io/JavaScript-Equality-Table/\" class=\"external\" rel=\" noopener\">JS Comparison Table</a></li>\n</ul>"}}],"toc":[{"text":"Igualdad Estricta usando  <code>===</code>","id":"igualdad_estricta_usando"},{"text":"Igualdad d√©bil usando  ==","id":"igualdad_d√©bil_usando"},{"text":"Igualdad Same-value","id":"igualdad_same-value"},{"text":"Igualdad Same-value-zero","id":"igualdad_same-value-zero"},{"text":"Igualdad abstracta, igualdad estricta e igualdad same value en la especificaci√≥n.","id":"igualdad_abstracta_igualdad_estricta_e_igualdad_same_value_en_la_especificaci√≥n."},{"text":"¬ø Un modelo para comprender las comparacions de igualdad?","id":"¬ø_un_modelo_para_comprender_las_comparacions_de_igualdad"},{"text":"Cuando usar <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" title=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is</code></a> o el igual triple","id":"cuando_usar_object.is_o_el_igual_triple"},{"text":"Ver adem√°s","id":"ver_adem√°s"}],"summary":"\nExisten cuatro algoritmos de igualdad en ES2015:\n\n\n Comparaci√≥n de Igualdad Abstracta (==)\n Comparaci√≥n de Igualdad Estricta (===): utilizada por Array.prototype.indexOf, Array.prototype.lastIndexOf, y  case-matching\n SameValueZero: utilizado por los constructores de %TypedArray% y ArrayBuffer, as√≠ como por las operaciones Map y Set, y tambi√©n por String.prototype.includes y Array.prototype.includes desde ES2016\n SameValue: utilizado en el resto de los casos\n\n\nJavaScript proporciona tres operaciones distintas para comparar la igualdad de dos elementos:\n\n\n === - Igualdad estricta  (o \"triple igual\" o \"identidad\")\n == - igualdad d√©bil o relajada  (\"doble igual\")\n Object.is proporciona SameValue (nuevo en ES2015).\n\n\nElegir una u otra operaci√≥n depende del tipo de comparaci√≥n que se est√© buscando realizar.\n","popularity":0.0021,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Equality comparisons and sameness","locale":"en-US","native":"English (US)"},{"title":"Utiliser les diff√©rents tests d'√©galit√©","locale":"fr","native":"Fran√ßais"},{"title":"Á≠â‰æ°ÊÄß„ÅÆÊØîËºÉ„Å®Âêå‰∏ÄÊÄß","locale":"ja","native":"Êó•Êú¨Ë™û"},{"title":"ÎèôÏπò ÎπÑÍµê Î∞è ÎèôÏùºÏÑ±","locale":"ko","native":"ÌïúÍµ≠Ïñ¥"},{"title":"Compara√ß√µes de igualdade e uniformidade","locale":"pt-BR","native":"Portugu√™s (do¬†Brasil)"},{"title":"–û–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è","locale":"ru","native":"–†—É—Å—Å–∫–∏–π"},{"title":"JavaScript ‰∏≠ÁöÑÁõ∏Á≠âÊÄßÂà§Êñ≠","locale":"zh-CN","native":"‰∏≠Êñá (ÁÆÄ‰Ωì)"},{"title":"Áõ∏Á≠âÊØîËºÉ","locale":"zh-TW","native":"Ê≠£È´î‰∏≠Êñá (ÁπÅÈ´î)"}],"source":{"folder":"es/web/javascript/equality_comparisons_and_sameness","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/javascript/equality_comparisons_and_sameness/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/es/docs/Web","title":"Tecnolog√≠a para desarrolladores web"},{"uri":"/es/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/es/docs/Web/JavaScript/Equality_comparisons_and_sameness","title":"Comparadores de igualdad e identidad"}],"pageTitle":"Comparadores de igualdad e identidad - JavaScript | MDN","noIndexing":false}}