{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Números y fechas","mdn_url":"/es/docs/Web/JavaScript/Guide/Numbers_and_dates","locale":"es","native":"Español","sidebarHTML":"\n <ol>\n  <li><a href=\"/es/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/es/docs/Web/JavaScript/Tutorials\"><strong>Tutorials:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Complete beginners</summary>\n      <ol>\n        <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/First_steps\">JavaScript first steps</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>JavaScript Guide</summary>\n      <ol>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Introduction\">Introduction</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Grammar_and_Types\">Grammar and types</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Control flow and error handling</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Loops_and_iteration\">Loops and iteration</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Functions\">Functions</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Expressions and operators</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Numbers_and_dates\">Numbers and dates</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Text_formatting\">Text formatting</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Regular_Expressions\">Regular expressions</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Indexed_collections\">Indexed collections</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Keyed_collections\">Keyed collections</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Working_with_Objects\">Working with objects</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Details of the object model</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Using_promises\">Using promises</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Iterators_and_generators\">Iterators and generators</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Meta_programming\">Meta programming</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Intermediate</summary>\n      <ol>\n        <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">A re-introduction to JavaScript</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Equality comparisons and sameness</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Closures\">Closures</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Advanced</summary>\n      <ol>\n        <li><a href=\"/es/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Inheritance and the prototype chain</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Typed_arrays\">JavaScript typed arrays</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Memory_Management\">Memory Management</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/EventLoop\">Concurrency model and Event Loop</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/es/docs/Web/JavaScript/Reference\">References:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Built-in objects</summary>\n        <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Expressions &amp; operators</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Statements &amp; declarations</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Functions</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Classes</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Misc</summary>\n      <ol>\n        <li><a href=\"/es/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript technologies overview</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Lexical_grammar\">Lexical grammar</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Enumerability and ownership of properties</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Iteration_protocols\">Iteration protocols</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Transitioning to strict mode</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Template_literals\">Template literals</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Deprecated features</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/es/docs/Web/JavaScript/Guide/Expressions_and_Operators\">« Anterior</a></li>\n    <li><a class=\"button minimal\" href=\"/es/docs/Web/JavaScript/Guide/Text_formatting\">Siguiente  »</a></li>\n</ul>\n<p>Este capítulo presenta los conceptos, objetos y funciones que se utilizan para trabajar y realizar cálculos utilizando números y fechas en JavaScript. Esto incluye el uso de números escritos en varias bases, incluyendo decimal, binario y hexadecimal, así como el uso del objeto global <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a> para realizar una amplia variedad de operaciones matemáticas con números.</p>"}},{"type":"prose","value":{"id":"números","title":"Números","isH3":false,"content":"<p>En JavaScript, los números se implementan en <a title=\"Formato en coma flotante de doble precisión\" href=\"https://es.wikipedia.org/wiki/Formato_en_coma_flotante_de_doble_precisión\" class=\"external\" rel=\" noopener\">Formato en coma flotante de doble precisión</a> de 64 bits IEEE 754 (es decir, un número entre ±2−1022 y ±2+1023, o aproximadamente ±10−308 a ±10+308, con una precisión numérica de 53 bits). Los valores enteros hasta ±253 - 1 se pueden representar con exactitud.</p>\n<p>Además de poder representar números de punto flotante, el tipo <code>number</code> tiene tres valores simbólicos: <code>+</code><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a>, <code>-</code><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a> y <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> (<em>Not-a-Number</em>, no es un número).</p>\n<p>Una adición más reciente a JavaScript es el <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>BigInt</code></a> que te permite representar números enteros que pueden ser muy grandes. Sin embargo, existen advertencias para usar <code>BigInt</code>; por ejemplo, no puedes mezclar y hacer coincidir los valores <code>BigInt</code> y <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> en la misma operación, y no puedes usar el objeto <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a> con valores <code>BigInt</code>.</p>\n<p>Consulta también <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>estructuras y tipos de datos JavaScript</code></a> para conocer el contexto con otros tipos primitivos en JavaScript.</p>\n<p>Puedes utilizar cuatro tipos de literales numéricos: decimal, binario, octal y hexadecimal.</p>"}},{"type":"prose","value":{"id":"números_decimales","title":"Números decimales","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">1234567890</span>\n<span class=\"token number\">42</span>\n\n<span class=\"token comment\">// Precaución al usar ceros a la izquierda:</span>\n\n<span class=\"token number\">0888</span> <span class=\"token comment\">// 888 procesado como decimal</span>\n<span class=\"token number\">0777</span> <span class=\"token comment\">// procesado como octal en modo no estricto (511 en decimal)</span>\n</code></pre></div>\n<p>Ten en cuenta que los decimales literales pueden comenzar con un cero (<code>0</code>) seguido de otro dígito decimal, pero si cada dígito después del <code>0</code> inicial es menor que 8, el número se procesa como un número octal.</p>"}},{"type":"prose","value":{"id":"números_binarios","title":"Números binarios","isH3":true,"content":"<p>La sintaxis de números binarios utiliza un cero inicial seguido de una letra \"B\" latina en minúscula o mayúscula (<code>0b</code> o <code>0B</code>). Si los dígitos después del <code>0b</code> no son 0 o 1, el siguiente <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>SyntaxError</code></a> se lanza un: \"Faltan dígitos binarios después de 0b\".</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token constant\">FLT_SIGNBIT</span>  <span class=\"token operator\">=</span> <span class=\"token number\">0b10000000000000000000000000000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2147483648</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">FLT_EXPONENT</span> <span class=\"token operator\">=</span> <span class=\"token number\">0b01111111100000000000000000000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2139095040</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">FLT_MANTISSA</span> <span class=\"token operator\">=</span> <span class=\"token number\">0B00000000011111111111111111111111</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8388607</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"números_octales","title":"Números octales","isH3":true,"content":"<p>La sintaxis de números octales utiliza un cero a la izquierda. Si los dígitos después del <code>0</code> están fuera del rango de 0 a 7, el número se interpretará como un número decimal.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0755</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 493</span>\n<span class=\"token keyword\">var</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0644</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 420</span>\n</code></pre></div>\n<p>El modo estricto en ECMAScript 5 prohíbe la sintaxis octal. La notación octal no es parte de ECMAScript 5, pero la admiten todos los navegadores al poner como prefijo un cero al número: <code>0644 == 420</code> y <code>\"\\045\" === \"%\"</code>. En ECMAScript 2015, los números octales son compatibles si tienen el prefijo <code>0o</code>, por ejemplo:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0o10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ES2015: 8</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"números_hexadecimales","title":"Números hexadecimales","isH3":true,"content":"<p>La sintaxis de números hexadecimales utiliza un cero inicial seguido de una letra \"X\" latina en minúscula o mayúscula (<code>0x</code> o <code>0X</code>). Si los dígitos después de <code>0x</code> están fuera del rango (0123456789ABCDEF), el siguiente <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>SyntaxError</code></a> se lanza: \"El identificador comienza inmediatamente después del literal numérico\".</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">0xFFFFFFFFFFFFFFFFF</span> <span class=\"token comment\">// 295147905179352830000</span>\n<span class=\"token number\">0x123456789ABCDEF</span>   <span class=\"token comment\">// 81985529216486900</span>\n<span class=\"token number\">0XA</span>                 <span class=\"token comment\">// 10</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"exponenciación","title":"Exponenciación","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">1E3</span>   <span class=\"token comment\">// 1000</span>\n<span class=\"token number\">2e6</span>   <span class=\"token comment\">// 2000000</span>\n<span class=\"token number\">0.1e2</span> <span class=\"token comment\">// 10</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"el_objeto_number","title":"El objeto <code>Number</code>","isH3":false,"content":"<p>El objeto integrado <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> tiene propiedades para constantes numéricas, como valor máximo, <code>NaN</code> (no un número) e <code>infinity</code>. No puedes cambiar los valores de estas propiedades y las debes usar de la siguiente manera:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> biggestNum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> smallestNum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MIN_VALUE</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> infiniteNum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">POSITIVE_INFINITY</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> negInfiniteNum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">NEGATIVE_INFINITY</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> notANum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Siempre haces referencia a una propiedad del objeto <code>Number</code> predefinido como se muestra arriba, y no como una propiedad de un objeto <code>Number</code> que creas tú mismo.</p>\n<p>La siguiente tabla resume las propiedades del objeto <code>Number</code>.</p>\n<table>\n  <thead>\n    <tr>\n      <th>Propiedad</th>\n      <th>Descripción</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a></td>\n      <td>El número representable más grande (<code>±1.7976931348623157e+308</code>)</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a></td>\n      <td>El número representable más pequeño (<code>±5e-324</code>)</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN\"><code>Number.NaN</code></a></td>\n      <td>Valor especial <code>not a number</code> (\"no es un número\")</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY\"><code>Number.NEGATIVE_INFINITY</code></a></td>\n      <td>Valor infinito negativo especial; devuelto por desbordamiento</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY\"><code>Number.POSITIVE_INFINITY</code></a></td>\n      <td>Valor infinito positivo especial; devuelto por desbordamiento</td>\n    </tr>\n    <tr>\n      <td><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\"><code>Number.EPSILON</code> <small>(en-US)</small></a></td>\n      <td>Diferencia entre <code>1</code> y el valor más pequeño mayor que <code>1</code> que se puede representar como un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> (<code>2.220446049250313e-16</code>)</td>\n    </tr>\n    <tr>\n      <td><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code> <small>(en-US)</small></a></td>\n      <td>Número entero seguro mínimo en JavaScript (−253 + 1 o <code>−9007199254740991</code>)</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a></td>\n      <td>Máximo número entero seguro en JavaScript (+253 - 1 o <code>+9007199254740991</code>)</td>\n    </tr>\n  </tbody>\n</table>\n<table>\n  <thead>\n    <tr>\n      <th>Método</th>\n      <th>Descripción</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\"><code>Number.parseFloat()</code></a></td>\n      <td>Analiza un argumento de cadena y devuelve un número de punto flotante. Igual que la función <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\"><code>parseFloat()</code></a> global.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\"><code>Number.parseInt()</code></a></td>\n      <td>Analiza un argumento de cadena y devuelve un número entero de la base o raíz especificada. Igual que la función <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt()</code></a> global.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\"><code>Number.isFinite()</code></a></td>\n      <td>Determina si el valor pasado es un número finito.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\"><code>Number.isInteger()</code></a></td>\n      <td>Determina si el valor pasado es un número entero.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>Number.isNaN()</code></a></td>\n      <td>Determina si el valor pasado es <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>NaN</code></a>. Versión más robusta del <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>isNaN()</code></a> global original.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a></td>\n      <td>Determina si el valor proporcionado es un número que es un <em>entero seguro</em>.</td>\n    </tr>\n  </tbody>\n</table>\n<p>El prototipo <code>Number</code> proporciona métodos para recuperar información de objetos <code>Number</code> en varios formatos. La siguiente tabla resume los métodos de <code>Number.prototype</code>.</p>\n<table>\n  <thead>\n    <tr>\n      <th>Método</th>\n      <th>Descripción</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\"><code>toExponential()</code> <small>(en-US)</small></a></td>\n      <td>Devuelve una cadena que representa el número en notación exponencial.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\"><code>toFixed()</code></a></td>\n      <td>Devuelve una cadena que representa el número en notación de punto fijo.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\"><code>toPrecision()</code></a></td>\n      <td>Devuelve una cadena que representa el número con una precisión especificada en notación de punto fijo.</td>\n    </tr>\n  </tbody>\n</table>","titleAsText":"El objeto Number"}},{"type":"prose","value":{"id":"el_objeto_math","title":"El objeto <code>Math</code>","isH3":false,"content":"<p>El objeto integrado <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a> tiene propiedades y métodos para constantes y funciones matemáticas. Por ejemplo, la propiedad <code>PI</code> del objeto <code>Math</code> tiene el valor de <code>pi</code> (3.141...), que usarías en una aplicación como:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span>\n</code></pre></div>\n<p>De manera similar, las funciones matemáticas estándar son métodos de <code>Math</code>. Estas incluyen funciones trigonométricas, logarítmicas, exponenciales y otras. Por ejemplo, si deseas utilizar la función trigonométrica «seno», debes escribir</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.56</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Ten en cuenta que todos los métodos trigonométricos de <code>Math</code> toman argumentos en radianes.</p>\n<p>La siguiente tabla resume los métodos del objeto <code>Math</code>.</p>\n<table>\n  <thead>\n    <tr>\n      <th>Método</th>\n      <th>Descripción</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/abs\"><code>abs()</code></a></td>\n      <td>Valor absoluto</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\"><code>sin()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/cos\"><code>cos()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\"><code>tan()</code></a></td>\n      <td>Funciones trigonométricas estándar; con el argumento en radianes.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/asin\"><code>asin()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/acos\"><code>acos()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/atan\"><code>atan()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2\"><code>atan2()</code></a></td>\n      <td>Funciones trigonométricas inversas; devuelven valores en radianes.</td>\n    </tr>\n    <tr>\n      <td><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh\"><code>sinh()</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh\"><code>cosh()</code> <small>(en-US)</small></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh\"><code>tanh()</code></a></td>\n      <td>Funciones hiperbólicas; argumento en ángulo hiperbólico.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh\"><code>asinh()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh\"><code>acosh()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh\"><code>atanh()</code></a></td>\n      <td>Funciones hiperbólicas inversas; devuelven valores en ángulo hiperbólico.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\"><code>pow()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/exp\"><code>exp()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/expm1\"><code>expm1()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/log10\"><code>log10()</code></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p\"><code>log1p()</code> <small>(en-US)</small></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/log2\"><code>log2()</code></a></td>\n      <td>Funciones exponenciales y logarítmicas.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\"><code>floor()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\"><code>ceil()</code></a></td>\n      <td>Devuelve el entero más grande/más pequeño menor/mayor o igual que un argumento.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/min\"><code>min()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/max\"><code>max()</code></a></td>\n      <td>Devuelven el valor mínimo o máximo (respectivamente) de una lista de números separados por comas como argumentos.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/random\"><code>random()</code></a></td>\n      <td>Devuelve un número aleatorio entre 0 y 1.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"><code>round()</code></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\"><code>fround()</code> <small>(en-US)</small></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\"><code>trunc()</code></a>,</td>\n      <td>Funciones de redondeo y truncamiento.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\"><code>sqrt()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\"><code>cbrt()</code></a>, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/hypot\"><code>hypot()</code></a></td>\n      <td>Raíz cuadrada, raíz cúbica, raíz cuadrada de la suma de argumentos cuadrados.</td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\"><code>sign()</code></a></td>\n      <td>El signo de un número, que indica si el número es positivo, negativo o cero.</td>\n    </tr>\n    <tr>\n      <td><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\"><code>clz32()</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\"><code>imul()</code> <small>(en-US)</small></a></td>\n      <td>Número de bits cero iniciales en la representación binaria de 32 bits. El resultado de la multiplicación de 32 bits similar a C de los dos argumentos.</td>\n    </tr>\n  </tbody>\n</table>\n<p>A diferencia de muchos otros objetos, nunca creas un objeto <code>Math</code> propio. Siempre usas el objeto <code>Math</code> incorporado.</p>","titleAsText":"El objeto Math"}},{"type":"prose","value":{"id":"el_objeto_date","title":"El objeto <code>Date</code>","isH3":false,"content":"<p>JavaScript no tiene un tipo de dato para fechas. Sin embargo, puedes utilizar el objeto <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> y sus métodos para trabajar con fechas y horas en tus aplicaciones. El objeto <code>Date</code> tiene una gran cantidad de métodos para establecer, obtener y manipular fechas. Pero no tiene propiedades.</p>\n<p>JavaScript maneja las fechas de manera similar a Java. Los dos lenguajes tienen muchos de los mismos métodos de fecha, y ambos lenguajes almacenan fechas como el número de milisegundos desde el 1 de enero de 1970, 00:00:00, con una marca de tiempo Unix que es el número de segundos desde el 1 de enero de 1970, 00: 00:00.</p>\n<p>El rango del objeto <code>Date</code> es de -100,000,000 de días a 100,000,000 de días en relación con el 1 de enero de 1970 UTC.</p>\n<p>Para crear un objeto <code>Date</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> dateObjectName <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>parameters<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>donde <code>dateObjectName</code> es el nombre del objeto <code>Date</code> que se está creando; puede ser un objeto nuevo o una propiedad de un objeto existente.</p>\n<p>Llamar a <code>Date</code> sin la palabra clave <code>new</code> devuelve una cadena que representa la fecha y hora actuales.</p>\n<p>Los parámetros de la sintaxis anterior pueden ser cualquiera de los siguientes:</p>\n<ul>\n  <li>Nada: crea la fecha y hora de hoy. Por ejemplo, <code>today = new Date();</code>.</li>\n  <li>Una cadena que representa una fecha en la siguiente forma: \"Mes día, año horas:minutos:segundos.\" Por ejemplo, <code>var Xmas95 = new Date(\"December 25, 1995 13:30:00\")</code>. Si omites horas, minutos o segundos, el valor se establecerá en cero.</li>\n  <li>Un conjunto de valores enteros para año, mes y día. Por ejemplo, <code>var Xmas95 = new Date(1995, 11, 25)</code>.</li>\n  <li>Un conjunto de valores enteros para año, mes, día, hora, minuto y segundos. Por ejemplo, <code>var Xmas95 = new Date(1995, 11, 25, 9, 30, 0)</code>.</li>\n</ul>","titleAsText":"El objeto Date"}},{"type":"prose","value":{"id":"métodos_del_objeto_date","title":"Métodos del objeto <code>Date</code>","isH3":true,"content":"<p>Los métodos del objeto <code>Date</code> para manejar fechas y horas se incluyen en estas categorías generales:</p>\n<ul>\n  <li>métodos establecedores (\"<code>set</code>\"), para configurar valores de fecha y hora en objetos <code>Date</code>.</li>\n  <li>Métodos captadores (\"<code>get</code>\"), para obtener valores de fecha y hora de objetos <code>Date</code>.</li>\n  <li>métodos conversores (\"<code>to</code>\"), para devolver valores de cadena de objetos <code>Date</code>.</li>\n  <li>métodos <code>parse</code> y <code>UTC</code>, para analizar cadenas de <code>Date</code>.</li>\n</ul>\n<p>Con los métodos \"<code>get</code>\" y \"<code>set</code>\" puedes obtener y establecer segundos, minutos, horas, día del mes, día de la semana, meses y años por separado. Existe un método <code>getDay</code> que devuelve el día de la semana, pero no existe el método <code>setDay</code> correspondiente, porque el día de la semana se establece automáticamente. Estos métodos utilizan números enteros para representar estos valores de la siguiente manera:</p>\n<ul>\n  <li>Segundos y minutos: 0 a 59</li>\n  <li>Horas: 0 a 23</li>\n  <li>Día: 0 (Domingo) a 6 (Sábado)</li>\n  <li>Fecha: 1 al 31 (día del mes)</li>\n  <li>Meses: 0 (Enero) a 11 (Diciembre)</li>\n  <li>Año: años desde 1900</li>\n</ul>\n<p>Por ejemplo, supongamos que defines la siguiente fecha:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> Xmas95 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'December 25, 1995'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Entonces, <code>Xmas95.getMonth()</code> devuelve 11 y <code>Xmas95.getFullYear()</code> devuelve 1995.</p>\n<p>Los métodos <code>getTime</code> y <code>setTime</code> son útiles para comparar fechas. El método <code>getTime</code> devuelve el número de milisegundos desde el 1 de enero de 1970, 00:00:00 para un objeto <code>Date</code>.</p>\n<p>Por ejemplo, el siguiente código muestra el número de días que quedan en el año actual:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> today <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> endYear <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">1995</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Establece día y mes</span>\nendYear<span class=\"token punctuation\">.</span><span class=\"token function\">setFullYear</span><span class=\"token punctuation\">(</span>today<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Establece año a este año</span>\n<span class=\"token keyword\">var</span> msPerDay <span class=\"token operator\">=</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Número de milisegundos por día</span>\n<span class=\"token keyword\">var</span> daysLeft <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>endYear<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> today<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> msPerDay<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> daysLeft <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>daysLeft<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// devuelve los días que quedan en el año</span>\n</code></pre></div>\n<p>Este ejemplo crea un objeto <code>Date</code> llamado <code>today</code> que contiene la fecha de hoy. Luego crea un objeto <code>Date</code> llamado <code>endYear</code> y establece el año en el año actual. Luego, usando la cantidad de milisegundos por día, calcula la cantidad de días entre <code>today</code> y <code>endYear</code>, usando <code>getTime</code> y redondeando a un número entero de días.</p>\n<p>El método <code>parse</code> es útil para asignar valores de cadenas de fecha a objetos <code>Date</code> existentes. Por ejemplo, el siguiente código usa <code>parse</code> y <code>setTime</code> para asignar un valor de fecha al objeto <code>IPOdate</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> IPOdate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nIPOdate<span class=\"token punctuation\">.</span><span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Aug 9, 1995'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Métodos del objeto Date"}},{"type":"prose","value":{"id":"ejemplo","title":"Ejemplo","isH3":true,"content":"<p>En el siguiente ejemplo, la función <code>JSClock()</code> devuelve la hora en el formato de un reloj digital.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">JSClock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> time <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> hour <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> minute <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">getMinutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> second <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">getSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> <span class=\"token string\">''</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>hour <span class=\"token operator\">&gt;</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> hour <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">:</span> hour<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hour <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    temp <span class=\"token operator\">=</span> <span class=\"token string\">'12'</span><span class=\"token punctuation\">;</span>\n  temp <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>minute <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">':0'</span> <span class=\"token operator\">:</span> <span class=\"token string\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> minute<span class=\"token punctuation\">;</span>\n  temp <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>second <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">':0'</span> <span class=\"token operator\">:</span> <span class=\"token string\">':'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> second<span class=\"token punctuation\">;</span>\n  temp <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>hour <span class=\"token operator\">&gt;=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">' P.M.'</span> <span class=\"token operator\">:</span> <span class=\"token string\">' A.M.'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>La función <code>JSClock</code> primero crea un nuevo objeto <code>Date</code> llamado <code>time</code>; dado que no se dan argumentos, la hora se crea con la fecha y hora actuales. Luego, las llamadas a los métodos <code>getHours</code>, <code>getMinutes</code> y <code>getSeconds</code> asignan el valor de la hora, minuto y segundo actuales a <code>hour</code>, <code>minute</code> y <code>second</code>.</p>\n<p>Las siguientes cuatro declaraciones crean un valor de cadena basado en el tiempo. La primera declaración crea una variable <code>temp</code>, asignándole un valor mediante una expresión condicional; si <code>hour</code> es mayor que 12, (<code>hour - 12</code>), de lo contrario, simplemente hora, a menos que la hora sea 0, en cuyo caso se convierte en 12.</p>\n<p>La siguiente declaración agrega un valor de <code>minute</code> a <code>temp</code>. Si el valor de <code>minute</code> es menor que 10, la expresión condicional agrega una cadena con un cero precedente; de lo contrario, agrega una cadena con dos puntos de demarcación. Luego, una declaración agrega un valor de segundos a <code>temp</code> de la misma manera.</p>\n<p>Finalmente, una expresión condicional agrega \"P.M.\" a <code>temp</code> si <code>hour</code> es 12 o mayor; de lo contrario, agrega \"A.M.\" a <code>temp</code>.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/es/docs/Web/JavaScript/Guide/Expressions_and_Operators\">« Anterior</a></li>\n    <li><a class=\"button minimal\" href=\"/es/docs/Web/JavaScript/Guide/Text_formatting\">Siguiente  »</a></li>\n</ul>"}}],"toc":[{"text":"Números","id":"números"},{"text":"El objeto <code>Number</code>","id":"el_objeto_number"},{"text":"El objeto <code>Math</code>","id":"el_objeto_math"},{"text":"El objeto <code>Date</code>","id":"el_objeto_date"}],"summary":"Este capítulo presenta los conceptos, objetos y funciones que se utilizan para trabajar y realizar cálculos utilizando números y fechas en JavaScript. Esto incluye el uso de números escritos en varias bases, incluyendo decimal, binario y hexadecimal, así como el uso del objeto global Math para realizar una amplia variedad de operaciones matemáticas con números.","popularity":0.0015,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Numbers and dates","locale":"en-US","native":"English (US)"},{"title":"Nombres et dates","locale":"fr","native":"Français"},{"title":"数値と日付","locale":"ja","native":"日本語"},{"title":"숫자와 날짜","locale":"ko","native":"한국어"},{"title":"Números e datas","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Числа и даты","locale":"ru","native":"Русский"},{"title":"数字和日期","locale":"zh-CN","native":"中文 (简体)"},{"title":"數字與日期","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"es/web/javascript/guide/numbers_and_dates","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/javascript/guide/numbers_and_dates/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/es/docs/Web","title":"Tecnología para desarrolladores web"},{"uri":"/es/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/es/docs/Web/JavaScript/Guide","title":"Guía de JavaScript"},{"uri":"/es/docs/Web/JavaScript/Guide/Numbers_and_dates","title":"Números y fechas"}],"pageTitle":"Números y fechas - JavaScript | MDN","noIndexing":false}}