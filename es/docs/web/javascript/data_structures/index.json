{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Tipos de datos y estructuras en JavaScript","mdn_url":"/es/docs/Web/JavaScript/Data_structures","locale":"es","native":"Espa√±ol","sidebarHTML":"\n <ol>\n  <li><a href=\"/es/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/es/docs/Web/JavaScript/Tutorials\"><strong>Tutorials:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Complete beginners</summary>\n      <ol>\n        <li><a href=\"/es/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/First_steps\">JavaScript first steps</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>JavaScript Guide</summary>\n      <ol>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Introduction\">Introduction</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Grammar_and_Types\">Grammar and types</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Control flow and error handling</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Loops_and_iteration\">Loops and iteration</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Functions\">Functions</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Expressions and operators</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Numbers_and_dates\">Numbers and dates</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Text_formatting\">Text formatting</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Regular_Expressions\">Regular expressions</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Indexed_collections\">Indexed collections</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Keyed_collections\">Keyed collections</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Working_with_Objects\">Working with objects</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Details of the object model</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Using_promises\">Using promises</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Iterators_and_generators\">Iterators and generators</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Meta_programming\">Meta programming</a></li>\n          <li><a href=\"/es/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Intermediate</summary>\n      <ol>\n        <li><a href=\"/es/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/es/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">A re-introduction to JavaScript</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Equality comparisons and sameness</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Closures\">Closures</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Advanced</summary>\n      <ol>\n        <li><a href=\"/es/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Inheritance and the prototype chain</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Typed_arrays\">JavaScript typed arrays</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Memory_Management\">Memory Management</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/EventLoop\">Concurrency model and Event Loop</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/es/docs/Web/JavaScript/Reference\">References:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Built-in objects</summary>\n        <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Expressions &amp; operators</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Statements &amp; declarations</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/es/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Functions</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Classes</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/es/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Misc</summary>\n      <ol>\n        <li><a href=\"/es/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript technologies overview</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Lexical_grammar\">Lexical grammar</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Data_structures\">JavaScript data structures</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Enumerability and ownership of properties</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Iteration_protocols\">Iteration protocols</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Strict_mode\">Strict mode</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Transitioning to strict mode</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Template_literals\">Template literals</a></li>\n        <li><a href=\"/es/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Deprecated features</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Todos los lenguajes de programaci√≥n tienen estructuras de datos integradas, pero estas a menudo difieren de un lenguaje a otro. Este art√≠culo intenta enumerar las estructuras de datos integradas disponibles en JavaScript y las propiedades que tienen. Estas se pueden utilizar para construir otras estructuras de datos. Siempre que es posible, se hacen comparaciones con otros lenguajes.</p>"}},{"type":"prose","value":{"id":"tipado_din√°mico","title":"Tipado din√°mico","isH3":false,"content":"<p>JavaScript es un lenguaje <em>d√©bilmente tipado</em> y <em>din√°mico</em>. Las variables en JavaScript no est√°n asociadas directamente con ning√∫n tipo de valor en particular, y a cualquier variable se le puede asignar (y reasignar) valores de todos los tipos:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// foo ahora es un n√∫mero</span>\nfoo     <span class=\"token operator\">=</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// foo ahora es un string</span>\nfoo     <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// foo ahora es un booleano</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"estructuras_y_tipos_de_datos","title":"Estructuras y tipos de datos","isH3":false,"content":"<p>El √∫ltimo est√°ndar ECMAScript define nueve tipos:</p>\n<ul>\n  <li>Seis <strong>tipos de datos</strong> <a href=\"/es/docs/Glossary/Primitive\">primitivos</a>, controlados por el <a href=\"/es/docs/Web/JavaScript/Reference/Operators/typeof\"><code>operador typeof</code></a>\n    <ul>\n      <li><a href=\"/es/docs/Glossary/undefined\">Undefined</a>: <code>typeof instance === \"undefined\"</code></li>\n      <li><a href=\"/es/docs/Glossary/Boolean\">Boolean</a>: <code>typeof instance === \"boolean\"</code></li>\n      <li><a href=\"/es/docs/Glossary/Number\">Number</a>: <code>typeof instance === \"number\"</code></li>\n      <li><a href=\"/es/docs/Glossary/String\">String</a>: <code>typeof instance === \"string\"</code></li>\n      <li><a href=\"/es/docs/Glossary/BigInt\">BigInt</a>: <code>typeof instance === \"bigint\"</code></li>\n      <li><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a>: <code>typeof instance === \"symbol\"</code></li>\n    </ul>\n  </li>\n  <li><a href=\"/es/docs/Glossary/Null\">Null</a>: <code>typeof instance === \"object\"</code>. Tipo <a href=\"/es/docs/Glossary/Primitive\">primitivo</a> especial que tiene un uso adicional para su valor: si el objeto no se hereda, se muestra <code>null</code>;</li>\n  <li><a href=\"/es/docs/Glossary/Object\">Object</a>: <code>typeof instance === \"object\"</code>. Tipo estructural especial que no es de datos pero para cualquier instancia de objeto <a href=\"/es/docs/Learn/JavaScript/Objects#the_constructor\">construido</a> que tambi√©n se utiliza como estructuras de datos: new <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>, new <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>, new <a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>Map</code></a>, new <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Set\"><code>Set</code></a>, new <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\"><code>WeakMap</code></a>, new <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\"><code>WeakSet</code></a>, new <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> y casi todo lo hecho con la <a href=\"/es/docs/Web/JavaScript/Reference/Operators/new\">palabra clave <code>new</code></a>;</li>\n  <li><a href=\"/es/docs/Glossary/Function\">Function</a>: una estructura sin datos, aunque tambi√©n responde al operador <code>typeof</code>: <code>typeof instance === \"function\"</code>. Esta simplemente es una forma abreviada para funciones, aunque cada constructor de funciones se deriva del constructor <code>Object</code>.</li>\n</ul>\n<p>Ten en cuenta que el √∫nico prop√≥sito valioso del uso del operador <code>typeof</code> es verificar el tipo de dato. Si deseamos verificar cualquier Tipo Estructural derivado de <code>Object</code>, no tiene sentido usar <code>typeof</code> para eso, ya que siempre recibiremos \"<code>object</code>\". La forma correcta de comprobar qu√© tipo de Objeto estamos usando es la palabra clave <a href=\"/es/docs/Web/JavaScript/Reference/Operators/instanceof\"><code>instanceof</code></a>. Pero incluso en ese caso, puede haber conceptos err√≥neos.</p>"}},{"type":"prose","value":{"id":"valores_primitivos","title":"Valores primitivos","isH3":false,"content":"<p>Todos los tipos, excepto los objetos, definen valores inmutables (es decir, valores que no se pueden cambiar). Por ejemplo (y a diferencia de C), las cadenas son inmutables. Nos referimos a los valores de estos tipos como \"<em>valores primitivos</em>\".</p>"}},{"type":"prose","value":{"id":"tipo_boolean","title":"Tipo <code>Boolean</code>","isH3":true,"content":"<p><code>Boolean</code> representa una entidad l√≥gica y puede tener dos valores: <code>true</code> y <code>false</code>. Consulta <a href=\"/es/docs/Glossary/Boolean\">Boolean</a> y <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> para obtener m√°s detalles.</p>","titleAsText":"Tipo Boolean"}},{"type":"prose","value":{"id":"tipo_null","title":"Tipo <code>Null</code>","isH3":true,"content":"<p>El tipo <code>Null</code> tiene exactamente un valor: <code>null</code>. Consulta <a href=\"/es/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> y <a href=\"/es/docs/Glossary/Null\">Null</a> para obtener m√°s detalles.</p>","titleAsText":"Tipo Null"}},{"type":"prose","value":{"id":"tipo_undefined","title":"Tipo <code>Undefined</code>","isH3":true,"content":"<p>Una variable a la que no se le ha asignado un valor tiene el valor <code>undefined</code>. Consulta <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> y <a href=\"/es/docs/Glossary/undefined\">Undefined</a> para obtener m√°s detalles.</p>","titleAsText":"Tipo Undefined"}},{"type":"prose","value":{"id":"tipo_number","title":"Tipo <code>Number</code>","isH3":true,"content":"<p>ECMAScript tiene dos tipos num√©ricos integrados: <strong><code>Number</code></strong> y <strong><code>BigInt</code></strong> (ve m√°s abajo).</p>\n<p>El tipo <code>Number</code> es un <a href=\"https://es.wikipedia.org/wiki/Formato_en_coma_flotante_de_doble_precisi%C3%B3n\" class=\"external\" rel=\" noopener\">valor en formato binario de 64 bits de doble precisi√≥n IEEE 754</a> (n√∫meros entre -(253 - 1) y 253 - 1). Adem√°s de representar n√∫meros de punto flotante, el tipo <code>Number</code> tiene tres valores simb√≥licos: <code>+Infinity</code>, <code>-Infinity</code> y <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> (\"<strong>N</strong>ot a <strong>N</strong>umber\" o No es un n√∫mero).</p>\n<p>Para verificar el valor disponible m√°s grande o el valor m√°s peque√±o disponible dentro de <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>¬±Infinity</code></a>, puedes usar las constantes <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a> o <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a>.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Nota:</strong> <strong>A partir de ECMAScript 2015</strong>, tambi√©n puedes comprobar si un n√∫mero est√° en el rango de n√∫meros de punto flotante de doble precisi√≥n mediante <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a> as√≠ como <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a> y <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code> <small>(en-US)</small></a>.M√°s all√° de este rango, los enteros en JavaScript ya no son seguros y ser√°n una aproximaci√≥n de punto flotante de doble precisi√≥n del valor.</p>\n</div>\n<p>El tipo <code>number</code> solo tiene un entero con dos representaciones: <code>0</code> se representa como <code>-0</code> y <code>+0</code>. (<code>0</code> es un alias de <code>+0</code>).</p>\n<p>En la praxis, esto casi no tiene impacto. Por ejemplo, <code>+0 === -0</code> es <code>true</code>. Sin embargo, puedes notar esto cuando divides entre cero:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&gt;</span> <span class=\"token number\">42</span> <span class=\"token operator\">/</span> <span class=\"token operator\">+</span><span class=\"token number\">0</span>\n<span class=\"token number\">Infinity</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">42</span> <span class=\"token operator\">/</span> <span class=\"token operator\">-</span><span class=\"token number\">0</span>\n<span class=\"token operator\">-</span><span class=\"token number\">Infinity</span>\n</code></pre></div>\n<p>Aunque un <code>number</code> a menudo representa solo su valor, JavaScript proporciona <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Operators\"><code>operadores binarios (bitwise)</code> <small>(en-US)</small></a>.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Nota:</strong> <strong>Precauci√≥n</strong>: Aunque los operadores bit a bit se <em>pueden</em> usar para representar m√∫ltiples valores Booleanos dentro de un solo n√∫mero usando el <a href=\"https://es.wikipedia.org/wiki/M%C3%A1scara_(inform%C3%A1tica)\" class=\"external\" rel=\" noopener\">enmascaramiento de bits</a>, esto generalmente se considera una mala pr√°ctica. JavaScript ofrece otros medios para representar un conjunto de valores booleanos (como un arreglo de valores booleanos o un objeto con valores booleanos asignados a propiedades con nombre). El enmascaramiento de bits tambi√©n tiende a hacer que el c√≥digo sea m√°s dif√≠cil de leer, comprender y mantener.</p>\n</div>\n<p>Posiblemente sea necesario utilizar estas t√©cnicas en entornos muy restringidos, como cuando se intenta hacer frente a las limitaciones del almacenamiento local, o en casos extremos (como cuando cada bit de la red cuenta). Esta t√©cnica solo se debe considerar cuando sea la √∫ltima medida que se pueda tomar para optimizar el tama√±o.</p>","titleAsText":"Tipo Number"}},{"type":"prose","value":{"id":"tipo_bigint","title":"Tipo <code>BigInt</code>","isH3":true,"content":"<p>El tipo <a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>BigInt</code></a> es un primitivo num√©rico en JavaScript que puede representar n√∫meros enteros con precisi√≥n arbitraria. Con <code>BigInt</code>s, puedes almacenar y operar de forma segura en n√∫meros enteros grandes incluso m√°s all√° del l√≠mite seguro de enteros para <code>Number</code>s.</p>\n<p>Un <code>BigInt</code> se crea agregando <code>n</code> al final de un n√∫mero entero o llamando al constructor.</p>\n<p>Puedes obtener el valor m√°s seguro que se puede incrementar con <code>Number</code>s utilizando la constante <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a>. Con la introducci√≥n de <code>BigInt</code>s, puedes operar con n√∫meros m√°s all√° de <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a>.</p>\n<p>Este ejemplo demuestra, d√≥nde, incrementando el <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a> devuelve el resultado esperado:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token number\">2n</span> <span class=\"token operator\">**</span> <span class=\"token number\">53n</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">9007199254740992n</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1n</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">9007199254740993n</span>\n</code></pre></div>\n<p>Puedes utilizar los operadores <code>+</code>, <code>*</code>, <code>-</code>, <code>**</code> y <code>%</code> con <code>BigInt</code>s, igual que con <code>Number</code>s. Un <code>BigInt</code> no es estrictamente igual a un <code>Number</code>, pero lo es en t√©rminos generales.</p>\n<p>Un <code>BigInt</code> se comporta como un <code>Number</code> en los casos en que se convierte a <code>Boolean</code>: <code>if</code>, <code>||</code>, <code>&amp;&amp;</code>, <code>Boolean</code>, <code>!</code>.</p>\n<p>Los <code>BigInt</code> no se pueden utilizar indistintamente con los <code>Number</code>. En su lugar, se lanzar√° un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>.</p>","titleAsText":"Tipo BigInt"}},{"type":"prose","value":{"id":"tipo_string","title":"Tipo <code>String</code>","isH3":true,"content":"<p>El tipo <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> de JavaScript se utiliza para representar datos textuales. Es un conjunto de \"elementos\" de valores enteros sin signo de 16 bits. Cada elemento del <code>String</code> ocupa una posici√≥n en la cadena. El primer elemento est√° en el √≠ndice <code>0</code>, el siguiente en el √≠ndice <code>1</code>, y as√≠ sucesivamente. La longitud de una cadena es el n√∫mero de elementos que contiene.</p>\n<p>A diferencia de algunos lenguajes de programaci√≥n (tal como C), las cadenas de JavaScript son inmutables. Esto significa que una vez que se crea una cadena, no es posible modificarla.</p>\n<p>Sin embargo, todav√≠a es posible crear otra cadena basada en una operaci√≥n en la cadena original. Por ejemplo:</p>\n<ul>\n  <li>Una subcadena de la original seleccionando letras individuales o usando <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/String/substr\"><code>String.substr()</code></a>.</li>\n  <li>Una concatenaci√≥n de dos cadenas usando el operador de concatenaci√≥n (<code>+</code>) o <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/String/concat\"><code>String.concat()</code></a>.</li>\n</ul>\n<h4 id=\"¬°ten_cuidado_de_no_convertir_a_cadenas_tu_c√≥digo!\">¬°Ten cuidado de no \"convertir a cadenas\" tu c√≥digo!</h4>\n<p>Puede resultar tentador utilizar cadenas para representar datos complejos. Hacer esto viene con beneficios a corto plazo:</p>\n<ul>\n  <li>Es f√°cil construir cadenas complejas con concatenaci√≥n.</li>\n  <li>Las cadenas son f√°ciles de depurar (lo que ves impreso siempre es lo que est√° en la cadena).</li>\n  <li>Las cadenas son el denominador com√∫n de muchas APIs (<a href=\"/es/docs/Web/API/HTMLInputElement\">campos de entrada ‚Äî<code>input</code>s‚Äî</a>, <a href=\"/es/docs/Storage\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">valores de almacenamiento local</a>, respuestas <a href=\"/es/docs/Web/API/XMLHttpRequest\" title=\"Usa objetos XMLHttpRequest (XHR) para interactuar con servidores. Puedes recuperar datos de una URL sin tener que actualizar la p√°gina completa. Esto permite que una p√°gina web actualice solo parte de su contenido sin interrumpir lo que el usuario est√° haciendo.\"><code>XMLHttpRequest</code></a> cuando se usa <code>responseText</code>, etc.) y puede resultar tentador trabajar solo con cadenas.</li>\n</ul>\n<p>Con las convenciones, es posible representar cualquier estructura de datos en una cadena. Esto no la convierte en una buena idea. Por ejemplo, con un separador, se podr√≠a emular una lista (mientras que un arreglo de JavaScript ser√≠a m√°s adecuado). Desafortunadamente, cuando el separador se usa en uno de los elementos de la \"lista\", la lista se rompe. Se puede elegir un caracter de escape, etc. Todo esto requiere convenciones y crea una innecesaria carga de mantenimiento.</p>\n<p>Utiliza cadenas para datos textuales. Cuando quieras representar datos complejos, <em>procesa</em> las cadenas y usa la abstracci√≥n adecuada.</p>","titleAsText":"Tipo String"}},{"type":"prose","value":{"id":"tipo_symbol","title":"Tipo <code>Symbol</code>","isH3":true,"content":"<p>Un s√≠mbolo es un valor primitivo <strong>√∫nico</strong> e <strong>inmutable</strong> y se puede utilizar como clave de una propiedad de objeto (ve m√°s abajo). En algunos lenguajes de programaci√≥n, los s√≠mbolos se denominan \"√°tomos\".</p>\n<p>Para obtener m√°s detalles, consulta <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a> y el contenedor de objetos <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Symbol\"><code>Symbol</code></a> en JavaScript.</p>","titleAsText":"Tipo Symbol"}},{"type":"prose","value":{"id":"objetos","title":"Objetos","isH3":false,"content":"<p>En ciencias de la computaci√≥n, un objeto es un valor en la memoria al que posiblemente hace referencia un <a href=\"/es/docs/Glossary/Identifier\">identificador</a>.</p>"}},{"type":"prose","value":{"id":"propiedades","title":"Propiedades","isH3":true,"content":"<p>En JavaScript, los objetos se pueden ver como una colecci√≥n de propiedades. Con la <a href=\"/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#object_literals\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">sintaxis de objeto literal (en-US)</a>, se inicia un conjunto limitado de propiedades; luego se pueden agregar y eliminar propiedades. Los valores de propiedad pueden ser valores de cualquier tipo, incluidos otros objetos, lo que permite construir estructuras de datos complejas. Las propiedades se identifican mediante valores <em>clave</em>. Un valor <em>clave</em> es un valor de cadena o un s√≠mbolo.</p>\n<p>Hay dos tipos de propiedades de objeto que tienen ciertos atributos: la propiedad <em>data</em> y la propiedad <em>accessor</em>.</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Nota:</strong> <strong>Nota</strong>: Cada propiedad tiene <em>atributos correspondientes</em>. Los atributos, internamente los utiliza el motor JavaScript, por lo que no puedes acceder a ellos directamente. Es por eso que los atributos se enumeran entre corchetes dobles, en lugar de simples.Consulta <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a> para obtener m√°s informaci√≥n.</p>\n</div>\n<h4 id=\"propiedad_data\">Propiedad <code>Data</code></h4>\n<p>Asocia una clave con un valor y tiene los siguientes atributos:</p>\n<p><strong>Atributos de una propiedad <code>data</code></strong></p>\n<table>\n  <thead>\n    <tr>\n      <th>Atributo</th>\n      <th>Tipo</th>\n      <th>Descripci√≥n</th>\n      <th>Valor predeterminado</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>[[Value]]</td>\n      <td>Cualquier tipo de JavaScript</td>\n      <td>El valor recuperado por un captador de acceso <code>get</code> a la propiedad.</td>\n      <td><code>undefined</code></td>\n    </tr>\n    <tr>\n      <td>[[Writable]]</td>\n      <td><code>Boolean</code></td>\n      <td>Si es <code>false</code>, el [[Value]] de la propiedad no se puede cambiar.</td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td>[[Enumerable]]</td>\n      <td><code>Boolean</code></td>\n      <td>Si es <code>true</code>, la propiedad se enumerar√° en bucles <a href=\"/es/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a>. Consulta tambi√©n <a href=\"/es/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Enumerabilidad y posesi√≥n de propiedades</a>.</td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td>[[Configurable]]</td>\n      <td><code>Boolean</code></td>\n      <td>Si es <code>false</code>, la propiedad no se puede eliminar, no se puede cambiar a una propiedad de acceso descriptor y los atributos que no sean [[Value]] y [[Writable]] no se pueden cambiar.</td>\n      <td><code>false</code></td>\n    </tr>\n  </tbody>\n</table>\n<p><strong>Atributos obsoletos (a partir de ECMAScript 3, renombrado en ECMAScript 5)</strong></p>\n<table>\n  <thead>\n    <tr>\n      <th>Atributo</th>\n      <th>Tipo</th>\n      <th>Descripci√≥n</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>Read-only</code></td>\n      <td><code>Boolean</code></td>\n      <td>Estado inverso del atributo ES5 [[Writable]].</td>\n    </tr>\n    <tr>\n      <td><code>DontEnum</code></td>\n      <td><code>Boolean</code></td>\n      <td>Estado inverso del atributo ES5 [[Enumerable]].</td>\n    </tr>\n    <tr>\n      <td><code>DontDelete</code></td>\n      <td><code>Boolean</code></td>\n      <td>Estado inverso del atributo ES5 [[Configurable]].</td>\n    </tr>\n  </tbody>\n</table>\n<h4 id=\"propiedad_accessor\">Propiedad <code>Accessor</code></h4>\n<p>Asocia una clave con una de las dos funciones de acceso (<code>get</code> y <code>set</code>) para recuperar o almacenar un valor y tiene los siguientes atributos:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Atributo</th>\n      <th>Tipo</th>\n      <th>Descripci√≥n</th>\n      <th>Valor predeterminado</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>[[Get]]</td>\n      <td>Objeto <code>Function</code> o <code>undefined</code></td>\n      <td>La funci√≥n se llama con una lista de argumentos vac√≠a y recupera el valor de la propiedad cada vez que se realiza un acceso al valor. Consulta tambi√©n <a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/get\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">get (en-US)</a>.</td>\n      <td><code>undefined</code></td>\n    </tr>\n    <tr>\n      <td>[[Set]]</td>\n      <td>Objeto <code>Function</code> o <code>undefined</code></td>\n      <td>La funci√≥n se llama con un argumento que contiene el valor asignado y se ejecuta siempre que se intenta cambiar una propiedad espec√≠fica. Consulta tambi√©n <a href=\"/en-US/docs/Web/JavaScript/Reference/Functions/set\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">set (en-US)</a>.</td>\n      <td><code>undefined</code></td>\n    </tr>\n    <tr>\n      <td>[[Enumerable]]</td>\n      <td><code>Boolean</code></td>\n      <td>Si es <code>true</code>, la propiedad se enumerar√° en bucles <a href=\"/es/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a>.</td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td>[[Configurable]]</td>\n      <td><code>Boolean</code></td>\n      <td>Si es <code>false</code>, la propiedad no se puede eliminar y no se puede cambiar a una propiedad de datos.</td>\n      <td><code>false</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"objetos_y_funciones_normales","title":"Objetos y funciones \"normales\"","isH3":true,"content":"<p>Un objeto JavaScript es una asociaci√≥n entre <em>claves</em> y <em>valores</em>. Las claves son cadenas (o <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Symbol\"><code>Symbol</code></a>s), y los <em>valores</em> pueden ser cualquier cosa. Esto hace que los objetos se ajusten naturalmente a <a href=\"http://en.wikipedia.org/wiki/Hash_table\" class=\"external\" rel=\" noopener\"><code>hashmaps</code></a>.</p>\n<p>Las funciones son objetos regulares con la capacidad adicional de ser <em>invocables</em>.</p>"}},{"type":"prose","value":{"id":"fechas","title":"Fechas","isH3":true,"content":"<p>Al representar fechas, la mejor opci√≥n es utilizar la utilidad <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code> incorporada</a> en JavaScript.</p>"}},{"type":"prose","value":{"id":"colecciones_indexadas_arreglos_y_arreglos_tipados","title":"Colecciones indexadas: arreglos y arreglos tipados","isH3":true,"content":"<p><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Los arreglos (en-US)</a> son objetos regulares para los que existe una relaci√≥n particular entre las propiedades de clave entera y la Propiedad <code>length</code>.</p>\n<p>Adem√°s, los arreglos heredan de <code>Array.prototype</code>, que les proporciona un pu√±ado de convenientes m√©todos para manipular arreglos. Por ejemplo, <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>indexOf</code></a> (buscando un valor en el arreglo) o <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>push</code></a> (agrega un elemento al arreglo), y as√≠ sucesivamente. Esto hace que el <code>Array</code> sea un candidato perfecto para representar listas o conjuntos.</p>\n<p>Los <a href=\"/es/docs/Web/JavaScript/Typed_arrays\">Arreglos tipados</a> son nuevos en JavaScript con ECMAScript 2015 y presentan una vista similar a un arreglo de un b√∫fer de datos binarios subyacente. La siguiente tabla ayuda a determinar los tipos de datos equivalentes en C:</p>\n<table>\n  <thead>\n    <tr>\n      <th>Tipo</th>\n      <th>Intervalo de valores</th>\n      <th>Tama√±o en bytes</th>\n      <th>Descripci√≥n</th>\n      <th>Tipo de IDL web</th>\n      <th>Tipo C equivalente</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>Int8Array</code></a></td>\n      <td><code>-128</code> a <code>127</code></td>\n      <td>1</td>\n      <td>Dos enteros complementarios de 8 bits con signo</td>\n      <td><code>byte</code></td>\n      <td><code>int8_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a></td>\n      <td><code>0</code> a <code>255</code></td>\n      <td>1</td>\n      <td>Entero de 8-bit sin signo</td>\n      <td><code>octet</code></td>\n      <td><code>uint8_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>Uint8ClampedArray</code></a></td>\n      <td><code>0</code> a <code>255</code></td>\n      <td>1</td>\n      <td>Entero de 8 bits sin signo (sujeto)</td>\n      <td><code>octet</code></td>\n      <td><code>uint8_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>Int16Array</code></a></td>\n      <td><code>-32768</code> a <code>32767</code></td>\n      <td>2</td>\n      <td>Dos enteros complementarios de 16 bits con signo</td>\n      <td><code>short</code></td>\n      <td><code>int16_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>Uint16Array</code></a></td>\n      <td><code>0</code> a <code>65535</code></td>\n      <td>2</td>\n      <td>Entero de 16 bits sin signo</td>\n      <td><code>Short sin signo</code></td>\n      <td><code>uint16_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>Int32Array</code></a></td>\n      <td><code>-2147483648</code> a <code>2147483647</code></td>\n      <td>4</td>\n      <td>dos enteros complementarios de 32 bits con signo</td>\n      <td><code>long</code></td>\n      <td><code>int32_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>Uint32Array</code></a></td>\n      <td><code>0</code> a <code>4294967295</code></td>\n      <td>4</td>\n      <td>Enteros de 32 bits sin signo</td>\n      <td><code>long sin signo</code></td>\n      <td><code>uint32_t</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>Float32Array</code></a></td>\n      <td><code>1.2</code>√ó<code>10-38</code> a <code>3.4</code>√ó<code>1038</code></td>\n      <td>4</td>\n      <td>N√∫mero de coma flotante IEEE de 32 bits (7 d√≠gitos significativos, p. ej., <code>1.1234567</code>)</td>\n      <td><code>float sin restricciones</code></td>\n      <td><code>float</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>Float64Array</code></a></td>\n      <td><code>5.0</code>√ó<code>10-324</code> a <code>1.8</code>√ó<code>10308</code></td>\n      <td>8</td>\n      <td>N√∫mero de coma flotante IEEE de 64 bits (16 d√≠gitos significativos, p. ej., <code>1.123...15</code>)</td>\n      <td><code>doble sin restricciones</code></td>\n      <td><code>double</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>BigInt64Array</code></a></td>\n      <td><code>-263</code> a <code>263-1</code></td>\n      <td>8</td>\n      <td>Dos enteros complementarios de 64 bits con signo</td>\n      <td><code>bigint</code></td>\n      <td><code>int64_t (long long con signo)</code></td>\n    </tr>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>BigUint64Array</code></a></td>\n      <td><code>0</code> a <code>264-1</code></td>\n      <td>8</td>\n      <td>Entero de 64 bits sin signo</td>\n      <td><code>bigint</code></td>\n      <td><code>uint64_t (long long sin signo)</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"colecciones_con_clave_mapas_conjuntos_weakmaps_weaksets","title":"Colecciones con clave: mapas, conjuntos, <code>WeakMaps</code>, <code>WeakSets</code>","isH3":true,"content":"<p>Estas estructuras de datos, introducidas en ECMAScript Edition 6, toman referencias a objetos como claves. <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Set\"><code>Set</code></a> y <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\"><code>WeakSet</code></a> representan un conjunto de objetos, mientras que <a class=\"page-not-created\" title=\"La documentaci√≥n acerca de este tema no ha sido escrita todav√≠a . ¬°Por favor  considera contribuir !\"><code>Map</code></a> y <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\"><code>WeakMap</code></a> se asocian un valor a un objeto.</p>\n<p>La diferencia entre <code>Map</code>s y <code>WeakMap</code>s es que en el primero, las claves de objeto se pueden enumerar. Esto permite la optimizaci√≥n de la recolecci√≥n de basura en el √∫ltimo caso.</p>\n<p>Se podr√≠an implementar <code>Map</code>s y <code>Set</code>s en ECMAScript 5 puro. Sin embargo, dado que los objetos no se pueden comparar (en el sentido de <code>&lt;</code> \"menor que\", por ejemplo), el rendimiento de b√∫squeda ser√≠a necesariamente lineal. Las implementaciones nativas de ellos (incluidos los <code>WeakMap</code>s) pueden tener un rendimiento de b√∫squeda que es aproximadamente logar√≠tmico al tiempo constante.</p>\n<p>Por lo general, para vincular datos a un nodo DOM, se pueden establecer propiedades directamente en el objeto o usar atributos <code>data-*</code>. Esto tiene la desventaja de que los datos est√°n disponibles para cualquier script que se ejecute en el mismo contexto. Los <code>Map</code>s y <code>WeakMap</code>s facilitan la vinculaci√≥n <em>privada</em> de datos a un objeto.</p>","titleAsText":"Colecciones con clave: mapas, conjuntos, WeakMaps, WeakSets"}},{"type":"prose","value":{"id":"datos_estructurados_json","title":"Datos estructurados: JSON","isH3":true,"content":"<p>JSON (<strong>J</strong>ava <strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation) es un formato ligero de intercambio de datos, derivado de JavaScript, pero utilizado por muchos lenguajes de programaci√≥n. JSON crea estructuras de datos universales.</p>\n<p>Consulta <a href=\"/es/docs/Glossary/JSON\">JSON</a> y <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a> para obtener m√°s detalles.</p>"}},{"type":"prose","value":{"id":"m√°s_objetos_en_la_biblioteca_est√°ndar","title":"M√°s objetos en la biblioteca est√°ndar","isH3":true,"content":"<p>JavaScript tiene una biblioteca est√°ndar de objetos integrados.</p>\n<p>√âchale un vistazo a la <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects\">referencia</a> para conocer m√°s objetos.</p>"}},{"type":"prose","value":{"id":"determinaci√≥n_de_tipos_usando_el_operador_typeof","title":"Determinaci√≥n de tipos usando el operador <code>typeof</code>","isH3":false,"content":"<p>El operador <code>typeof</code> te puede ayudar a encontrar el tipo de tu variable.</p>\n<p>Lee la <a href=\"/es/docs/Web/JavaScript/Reference/Operators/typeof\">p√°gina de referencia</a> para obtener m√°s detalles y casos extremos.</p>","titleAsText":"Determinaci√≥n de tipos usando el operador typeof"}},{"type":"prose","value":{"id":"especificaciones","title":"Especificaciones","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Especificaci√≥n</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma262/#sec-ecmascript-data-types-and-values\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript (ECMA-262)<br><small lang=\"es\">La definici√≥n de 'Tipos Data y Values ECMAScript' en esta especificaci√≥n.</small></a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"ve_tambi√©n","title":"Ve tambi√©n","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/nzakas/computer-science-in-javascript/\" class=\"external\" rel=\" noopener\">Colecci√≥n de estructura de datos com√∫n y algoritmos comunes en JavaScript de Nicholas Zakas.</a></li>\n  <li><a href=\"https://github.com/monmohan/DataStructures_In_Javascript\" class=\"external\" rel=\" noopener\">Estructuras de datos implementadas en JavaScript</a></li>\n</ul>"}}],"toc":[{"text":"Tipado din√°mico","id":"tipado_din√°mico"},{"text":"Estructuras y tipos de datos","id":"estructuras_y_tipos_de_datos"},{"text":"Valores primitivos","id":"valores_primitivos"},{"text":"Objetos","id":"objetos"},{"text":"Determinaci√≥n de tipos usando el operador <code>typeof</code>","id":"determinaci√≥n_de_tipos_usando_el_operador_typeof"},{"text":"Especificaciones","id":"especificaciones"},{"text":"Ve tambi√©n","id":"ve_tambi√©n"}],"summary":"Todos los lenguajes de programaci√≥n tienen estructuras de datos integradas, pero estas a menudo difieren de un lenguaje a otro. Este art√≠culo intenta enumerar las estructuras de datos integradas disponibles en JavaScript y las propiedades que tienen. Estas se pueden utilizar para construir otras estructuras de datos. Siempre que es posible, se hacen comparaciones con otros lenguajes.","popularity":0.0044,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"JavaScript data types and data structures","locale":"en-US","native":"English (US)"},{"title":"Types et structures de donn√©es JavaScript","locale":"fr","native":"Fran√ßais"},{"title":"JavaScript „ÅÆ„Éá„Éº„ÇøÂûã„Å®„Éá„Éº„ÇøÊßãÈÄ†","locale":"ja","native":"Êó•Êú¨Ë™û"},{"title":"JavaScriptÏùò ÌÉÄÏûÖÍ≥º ÏûêÎ£åÍµ¨Ï°∞","locale":"ko","native":"ÌïúÍµ≠Ïñ¥"},{"title":"Estrutura de dados do Javascript","locale":"pt-BR","native":"Portugu√™s (do¬†Brasil)"},{"title":"–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö JavaScript –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö","locale":"ru","native":"–†—É—Å—Å–∫–∏–π"},{"title":"JavaScript Êï∞ÊçÆÁ±ªÂûãÂíåÊï∞ÊçÆÁªìÊûÑ","locale":"zh-CN","native":"‰∏≠Êñá (ÁÆÄ‰Ωì)"},{"title":"JavaScript ÁöÑË≥áÊñôÂûãÂà•ËàáË≥áÊñôÁµêÊßã","locale":"zh-TW","native":"Ê≠£È´î‰∏≠Êñá (ÁπÅÈ´î)"}],"source":{"folder":"es/web/javascript/data_structures","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/javascript/data_structures/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/es/docs/Web","title":"Tecnolog√≠a para desarrolladores web"},{"uri":"/es/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/es/docs/Web/JavaScript/Data_structures","title":"Tipos de datos y estructuras en JavaScript"}],"pageTitle":"Tipos de datos y estructuras en JavaScript - JavaScript | MDN","noIndexing":false}}