{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"CacheStorage","mdn_url":"/es/docs/Web/API/CacheStorage","locale":"es","native":"Español","sidebarHTML":"<ol><li><strong><a href=\"/es/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/es/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Métodos</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage/delete\"><code>delete()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage/has\"><code>has()</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/API/CacheStorage/keys\"><code>keys()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage/match\"><code>match()</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/API/CacheStorage/open\"><code>open()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Páginas relacionadas a Service Workers API</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Client\"><code>Client</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Clients\"><code>Clients</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WindowClient\"><code>WindowClient</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p>The <strong><code>CacheStorage</code></strong> interface represents the storage for <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> objects.</p>\n\n<p>The interface:</p>\n\n<ul>\n <li>Provides a master directory of all the named caches that can be accessed by a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code> <small>(en-US)</small></a> or other type of worker or <a href=\"/es/docs/Web/API/Window\"><code>window</code></a> scope (you’re not limited to only using it with service workers, even though the <a href=\"https://w3c.github.io/ServiceWorker/\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"La especificación 'Service Workers'\" rel=\" noopener\">Service Workers</a> spec defines it).\n  <div class=\"note notecard\" id=\"sect1\"><strong>Note</strong>: <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1026063\" class=\"external\" rel=\" noopener\">Chrome and Safari only expose `CacheStorage` to the windowed context over HTTPS</a>. <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/caches\"><code>window.caches</code> <small>(en-US)</small></a> will be undefined unless an SSL certificate is configured.</div>\n </li>\n <li>Maintains a mapping of string names to corresponding <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> objects.</li>\n</ul>\n\n<p>Use <a href=\"/es/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open()</code></a> to obtain a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> instance.</p>\n\n<p>Use <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code> <small>(en-US)</small></a> to check if a given <a href=\"/es/docs/Web/API/Request\"><code>Request</code></a> is a key in any of the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> objects that the <code>CacheStorage</code> object tracks.</p>\n\n<p>You can access <code>CacheStorage</code> through the global <a href=\"/es/docs/Web/API/caches\" title=\"caches\"><code>caches</code></a> property.</p>\n\n<div class=\"note notecard\" id=\"sect2\"><strong>Note</strong>: CacheStorage always rejects with a <code>SecurityError</code> on untrusted origins (i.e. those that aren't using HTTPS, although this definition will likely become more complex in the future.) When testing, you can get around this by checking the \"Enable Service Workers over HTTP (when toolbox is open)\" option in the Firefox Devtools options/gear menu.</div>\n\n<div class=\"note notecard\" id=\"sect3\"><strong>Note</strong>: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code> <small>(en-US)</small></a> is a convenience method. Equivalent functionality to match a cache entry can be implemented by returning an array of cache names from <a href=\"/es/docs/Web/API/CacheStorage/keys\"><code>CacheStorage.keys()</code></a>, opening each cache with <a href=\"/es/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open()</code></a>, and matching the one you want with <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/match\"><code>Cache.match()</code> <small>(en-US)</small></a>.</div>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n <dt id=\"cachestorage.match_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code> <small>(en-US)</small></a></dt>\n <dd>Checks if a given <a href=\"/es/docs/Web/API/Request\"><code>Request</code></a> is a key in any of the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> objects that the <a href=\"/es/docs/Web/API/CacheStorage\" aria-current=\"page\"><code>CacheStorage</code></a> object tracks, and returns a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to that match.</dd>\n <dt id=\"cachestorage.has_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage/has\"><code>CacheStorage.has()</code> <small>(en-US)</small></a></dt>\n <dd>Returns a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to <code>true</code> if a <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> object matching the <code>cacheName</code> exists.</dd>\n <dt id=\"cachestorage.open\"><a href=\"/es/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open()</code></a></dt>\n <dd>Returns a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> object matching the <code>cacheName</code> (a new cache is created if it doesn't already exist.)</dd>\n <dt id=\"cachestorage.delete_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CacheStorage/delete\"><code>CacheStorage.delete()</code> <small>(en-US)</small></a></dt>\n <dd>Finds the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> object matching the <code>cacheName</code>, and if found, deletes the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> object and returns a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to <code>true</code>. If no <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> object is found, it resolves to <code>false</code>.</dd>\n <dt id=\"cachestorage.keys\"><a href=\"/es/docs/Web/API/CacheStorage/keys\"><code>CacheStorage.keys()</code></a></dt>\n <dd>Returns a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that will resolve with an array containing strings corresponding to all of the named <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> objects tracked by the <a href=\"/es/docs/Web/API/CacheStorage\" aria-current=\"page\"><code>CacheStorage</code></a>. Use this method to iterate over a list of all the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a> objects.</dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>This code snippet is from the MDN <a href=\"https://github.com/mdn/sw-test/\" class=\"external\" rel=\" noopener\">sw-test example</a> (see <a href=\"https://mdn.github.io/sw-test/\" class=\"external\" rel=\" noopener\">sw-test running live</a>.) This service worker script waits for an <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a> to fire, then runs <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ExtendableEvent/waitUntil\"><code>waitUntil</code> <small>(en-US)</small></a> to handle the install process for the app. This consists of calling <a href=\"/es/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open</code></a> to create a new cache, then using <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code> <small>(en-US)</small></a> to add a series of assets to it.</p>\n\n<p>In the second code block, we wait for a <a href=\"/es/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> to fire. We construct a custom response like so:</p>\n\n<ol>\n <li>Check whether a match for the request is found in the CacheStorage. If so, serve that.</li>\n <li>If not, fetch the request from the network, then also open the cache created in the first block and add a clone of the request to it using <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache/put\"><code>Cache.put</code> <small>(en-US)</small></a> (<code>cache.put(event.request, response.clone())</code>.)</li>\n <li>If this fails (e.g. because the network is down), return a fallback response.</li>\n</ol>\n\n<p>Finally, return whatever the custom response ended up being equal to, using <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FetchEvent/respondWith\"><code>FetchEvent.respondWith</code> <small>(en-US)</small></a>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>self<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'install'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'/sw-test/'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/index.html'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/style.css'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/app.js'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/image-list.js'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/star-wars-logo.jpg'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/gallery/bountyHunters.jpg'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/gallery/snowTroopers.jpg'</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span>caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// caches.match() always resolves</span>\n    <span class=\"token comment\">// but in case of success response will have value</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// response may be used only once</span>\n        <span class=\"token comment\">// we need to save clone to put one copy in cache</span>\n        <span class=\"token comment\">// and serve second one</span>\n        <span class=\"token keyword\">let</span> responseClone <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> responseClone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>This snippet shows how the API can be used outside of a service worker context, and uses the <code>await</code> operator for much more readable code.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Try to get data from the cache, but fall back to fetching it live.</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> cacheVersion <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> cacheName    <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">myapp-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> cacheVersion <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> url          <span class=\"token operator\">=</span> <span class=\"token string\">'https://jsonplaceholder.typicode.com/todos/1'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">let</span> cachedData     <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getCachedData</span><span class=\"token punctuation\">(</span> cacheName<span class=\"token punctuation\">,</span> url <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> cachedData <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'Retrieved cached data'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> cachedData<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'Fetching fresh data'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">const</span> cacheStorage <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span> cacheName <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">await</span> cacheStorage<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span> url <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   cachedData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getCachedData</span><span class=\"token punctuation\">(</span> cacheName<span class=\"token punctuation\">,</span> url <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">await</span> <span class=\"token function\">deleteOldCaches</span><span class=\"token punctuation\">(</span> cacheName <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">return</span> cachedData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Get data from the cache.</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getCachedData</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">cacheName<span class=\"token punctuation\">,</span> url</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> cacheStorage   <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span> cacheName <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> cachedResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> cacheStorage<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span> url <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span> cachedResponse <span class=\"token operator\">||</span> <span class=\"token operator\">!</span> cachedResponse<span class=\"token punctuation\">.</span>ok <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> cachedResponse<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Delete any old caches to respect user's disk space.</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">deleteOldCaches</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">currentCache</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> keys <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> key <span class=\"token keyword\">of</span> keys <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> isOurCache <span class=\"token operator\">=</span> <span class=\"token string\">'myapp-'</span> <span class=\"token operator\">===</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> currentCache <span class=\"token operator\">===</span> key <span class=\"token operator\">||</span> <span class=\"token operator\">!</span> isOurCache <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      caches<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span> key <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span> error <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> error <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Specification</th>\n   <th scope=\"col\">Status</th>\n   <th scope=\"col\">Comment</th>\n  </tr>\n  <tr>\n   <td><a href=\"https://w3c.github.io/ServiceWorker/#cachestorage\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"es\">La definición de 'CacheStorage' en esta especificación.</small></a></td>\n   <td><span class=\"spec-wd\">Working Draft</span></td>\n   <td>Initial definition.</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CacheStorage","dataURL":"/es/docs/Web/API/CacheStorage/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n <li><a href=\"/en-US/docs/Web/API/ServiceWorker_API/Using_Service_Workers\">Using Service Workers</a></li>\n <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code> <small>(en-US)</small></a></li>\n <li><a href=\"/es/docs/Web/API/caches\"><code>WindowOrWorkerGlobalScope.caches</code></a></li>\n</ul>"}}],"toc":[{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The CacheStorage interface represents the storage for Cache (en-US) objects.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CacheStorage","locale":"en-US","native":"English (US)"},{"title":"CacheStorage","locale":"fr","native":"Français"},{"title":"CacheStorage","locale":"ja","native":"日本語"},{"title":"CacheStorage","locale":"ru","native":"Русский"},{"title":"CacheStorage","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"es/web/api/cachestorage","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/api/cachestorage/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/es/docs/Web","title":"Tecnología para desarrolladores web"},{"uri":"/es/docs/Web/API","title":"Referencia de la API Web"},{"uri":"/es/docs/Web/API/CacheStorage","title":"CacheStorage"}],"pageTitle":"CacheStorage - Referencia de la API Web | MDN","noIndexing":false}}