{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"Pixel manipulation with canvas","mdn_url":"/es/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas","locale":"es","native":"Español","sidebarHTML":"\n <ol>\n  <li><a href=\"/es/docs/Web/API/Canvas_API\"><strong>Canvas API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Canvas tutorial</summary>\n      <ol>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">Basic usage</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">Drawing shapes</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">Applying styles and colors</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Drawing_text\">Drawing text</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Using_images\">Using images</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Transformations\">Transformations</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Compositing\">Compositing and clipping</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">Basic animations</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">Advanced animations</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">Pixel manipulation</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">Optimizing the canvas</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Tutorial/Finale\">Finale</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Examples</summary>\n      <ol>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/A_basic_ray-caster\">A basic raycaster</a></li>\n        <li><a href=\"/es/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Manipulating video using canvas</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Interfaces</summary>\n      <ol>\n        <li><a href=\"/es/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n        <li><a href=\"/es/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/es/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code> <small>(en-US)</small></a></li>\n        <li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/es/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Contribute</summary>\n      <ol>\n        <li><a href=\"/es/docs/MDN\">The MDN project</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"> <ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/es/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">« Anterior</a></li>\n    <li><a class=\"button minimal page-not-created\" href=\"/es/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" title=\"This is a link to an unwritten page\">Siguiente  »</a></li>\n</ul></div>\n\n<div class=\"summary\" id=\"sect2\">\n<p>Hasta ahora, no habíamos mirado los píxeles reales de nuestro <em>canvas</em>. Con el objeto <code>ImageData</code>, puedes leer y escribir directamente un <em>array</em> de datos para manipular píxeles.</p>\n\n<p>También veremos cómo se puede controlar el suavizado de la imagen (antialiasing) y cómo guardar imágenes de tu <em>canvas</em>.</p>\n</div>"}},{"type":"prose","value":{"id":"el_objeto_imagedata","title":"El objeto <code>ImageData</code>","isH3":false,"content":"<p>El objeto <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code> <small>(en-US)</small></a> representa los datos pixelados subyacentes de un área de un objeto lienzo. Contiene los siguientes atributos de sólo lectura:</p>\n\n<dl>\n <dt id=\"width\"><code>width</code></dt>\n <dd>El ancho de la imagen en píxeles.</dd>\n <dt id=\"height\"><code>height</code></dt>\n <dd>La altura de la imagen en píxeles.</dd>\n <dt id=\"data\"><code>data</code></dt>\n <dd>Un objeto <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>Uint8ClampedArray</code></a> que representa un array unidimensional, contiene información en formato RGBA, con valores desde <code>0</code> hasta <code>255</code> (incluído).</dd>\n</dl>\n\n<p>La propiedad <code>data</code> devuelve un  <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>Uint8ClampedArray</code></a>, al que se puede acceder para ver los datos originales del pixel; cada pixel está representado por cuatro valores (rojo, verde, azul, y alfa, en ese orden; esto es, formato \"RGBA\"). Cada componente de color se representa con un valor entero entre 0 y 255. Dentro del array, cada componente ocupa un índice consecutivo, comenzando con 0 desde el punto superior izquierdo, continuando de izquierda a derecha y de arriba hacia abajo, a través del array.</p>\n\n<p>El <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>Uint8ClampedArray</code></a> contiene <code>alto</code> × <code>ancho</code> × 4 bytes de datos, con valores de índice en el rango entre 0 y (<code>alto</code>×<code>ancho</code>×4)-1.</p>\n\n<p>Por ejemplo, para leer el valor del componente azul del pixel en la columna 200, fila 50 de una imagen, deberías hacer lo siguiente:</p>\n\n<p>blueComponent = imageData.data[((50 * (imageData.width * 4)) + (200 * 4)) + 2];</p>\n\n<p>Si se le da un conjunto de coordenadas (X e Y), puede que termine haciendo algo así:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> xCoord <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> yCoord <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> canvasWidth <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getColorIndicesForCoord</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> red <span class=\"token operator\">=</span> y <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> x <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>red<span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> colorIndices <span class=\"token operator\">=</span> <span class=\"token function\">getColorIndicesForCoord</span><span class=\"token punctuation\">(</span>xCoord<span class=\"token punctuation\">,</span> yCoord<span class=\"token punctuation\">,</span> canvasWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> redIndex <span class=\"token operator\">=</span> colorIndices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> greenIndex <span class=\"token operator\">=</span> colorIndices<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> blueIndex <span class=\"token operator\">=</span> colorIndices<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> alphaIndex <span class=\"token operator\">=</span> colorIndices<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> redForCoord <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>redIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> greenForCoord <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>greenIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> blueForCoord <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>blueIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> alphaForCoord <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>alphaIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>O, en ES6 sería algo así:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> xCoord <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> yCoord <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> canvasWidth <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getColorIndicesForCoord</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> red <span class=\"token operator\">=</span> y <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> x <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>red<span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> colorIndices <span class=\"token operator\">=</span> <span class=\"token function\">getColorIndicesForCoord</span><span class=\"token punctuation\">(</span>xCoord<span class=\"token punctuation\">,</span> yCoord<span class=\"token punctuation\">,</span> canvasWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>redIndex<span class=\"token punctuation\">,</span> greenIndex<span class=\"token punctuation\">,</span> blueIndex<span class=\"token punctuation\">,</span> alphaIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> colorIndices<span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>You may also access the size of the pixel array in bytes by reading the <code>Uint8ClampedArray.length</code> attribute:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> numBytes <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"El objeto ImageData"}},{"type":"prose","value":{"id":"creando_un_objeto_imagedata","title":"Creando un objeto <code>ImageData</code>","isH3":false,"content":"<p>Para crear un objeto nuevo y vacío tipo <code>ImageData</code>, debes usar el método  <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createImageData\"><code>createImageData()</code> <small>(en-US)</small></a>. Hay dos versiones del método <code>createImageData()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createImageData</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Esto crea un nuevo objeto <code>ImageData</code> con las dimensiones especificadas. Todos los pixels tienen valor correspondiente a negro - transparente (0,0,0,0).</p>\n\n<p>También puedes crear un nuevo objeto <code>ImageData</code> con las mismas dimensiones que otro objeto, especificado por <code>anotherImageData</code>. Los píxels del nuevo objeto tienen valor negro - transparente. <strong>¡Esto no es una copia de los datos de la imagen!</strong></p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createImageData</span><span class=\"token punctuation\">(</span>anotherImageData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","titleAsText":"Creando un objeto ImageData"}},{"type":"prose","value":{"id":"getting_the_pixel_data_for_a_context","title":"Getting the pixel data for a context","isH3":false,"content":"<p>To obtain an <code>ImageData</code> object containing a copy of the pixel data for a canvas context, you can use the <code>getImageData()</code> method:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>This method returns an <code>ImageData</code> object representing the pixel data for the area of the canvas whose corners are represented by the points (<code>left</code>,<code>top</code>), (<code>left+width</code>, <code>top</code>), (<code>left</code>, <code>top+height</code>), and (<code>left+width</code>, <code>top+height</code>). The coordinates are specified in canvas coordinate space units.</p>\n\n<div class=\"note notecard\" id=\"sect3\">\n<p><strong>Note</strong>: Any pixels outside the canvas are returned as transparent black in the resulting <code>ImageData</code> object.</p>\n</div>\n\n<p>This method is also demonstrated in the article <a href=\"/en-US/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Manipulating video using canvas</a>.</p>"}},{"type":"prose","value":{"id":"a_color_picker","title":"A color picker","isH3":true,"content":"<p>In this example we are using the <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\">getImageData() </a>method to display the color under the mouse cursor. For this, we need the current position of the mouse with <code>layerX</code> and <code>layerY</code>, then we look up the pixel data on that position in the pixel array that <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\">getImageData()</a> provides us. Finally, we use the array data to set a background color and a text in the <code>&lt;div&gt;</code> to display the color.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js; notranslate\"><code><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'https://mdn.mozillademos.org/files/5397/rhino.jpg'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerX<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerY<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> pixel <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> pixel<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> rgba <span class=\"token operator\">=</span> <span class=\"token string\">'rgba('</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span>\n             <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">;</span>\n  color<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span>  rgba<span class=\"token punctuation\">;</span>\n  color<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> rgba<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> pick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p><iframe class=\"sample-code-frame\" title=\"A color picker sample\" id=\"frame_a_color_picker\" width=\"610\" height=\"240\" src=\"https://yari-demos.prod.mdn.mozit.cloud/es/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas/_sample_.a_color_picker.html\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"painting_pixel_data_into_a_context","title":"Painting pixel data into a context","isH3":false,"content":"<p>You can use the<a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData\"> putImageData() </a>method to paint pixel data into a context:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>myImageData<span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n\n<p>The <code>dx</code> and <code>dy</code> parameters indicate the device coordinates within the context at which to paint the top left corner of the pixel data you wish to draw.</p>\n\n<p>For example, to paint the entire image represented by <code>myImageData</code> to the top left corner of the context, you can simply do the following:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>myImageData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"grayscaling_and_inverting_colors","title":"Grayscaling and inverting colors","isH3":true,"content":"<p>In this example we iterate over all pixels to change their values, then we put the modified pixel array back to the canvas using <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData\">putImageData()</a>. The invert function simply subtracts each color from the max value 255. The grayscale function simply uses the average of red, green and blue. You can also use a weighted average, given by the formula <code>x = 0.299r + 0.587g + 0.114b</code>, for example. See <a href=\"http://en.wikipedia.org/wiki/Grayscale\" class=\"external\" rel=\" noopener\">Grayscale</a> on Wikipedia for more information.</p>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'https://mdn.mozillademos.org/files/5397/rhino.jpg'</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> imageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">invert</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>     <span class=\"token operator\">=</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// red</span>\n      data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// green</span>\n      data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// blue</span>\n    <span class=\"token punctuation\">}</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">grayscale</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> avg <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n      data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>     <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span> <span class=\"token comment\">// red</span>\n      data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span> <span class=\"token comment\">// green</span>\n      data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span> <span class=\"token comment\">// blue</span>\n    <span class=\"token punctuation\">}</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> invertbtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'invertbtn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  invertbtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> invert<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> grayscalebtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'grayscalebtn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  grayscalebtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> grayscale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n\n<p><iframe class=\"sample-code-frame\" title=\"Grayscaling and inverting colors sample\" id=\"frame_grayscaling_and_inverting_colors\" width=\"330\" height=\"270\" src=\"https://yari-demos.prod.mdn.mozit.cloud/es/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas/_sample_.grayscaling_and_inverting_colors.html\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"zooming_and_anti-aliasing","title":"Zooming and anti-aliasing","isH3":false,"content":"<p>With the help of the <a href=\"/es/docs/Web/API/CanvasRenderingContext2D/drawImage\" title=\"drawImage()\"><code>drawImage()</code></a> method, a second canvas and the <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\"><code>imageSmoothingEnabled</code> <small>(en-US)</small></a> property, we are able to zoom into our picture and see the details.</p>\n\n<p>We get the position of the mouse and crop an image of 5 pixels left and above to 5 pixels right and below. Then we copy that one over to another canvas and resize the image to the size we want it to. In the zoom canvas we resize a 10×10 pixel crop of the original canvas to 200×200.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>zoomctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span>\n                  Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Because anti-aliasing is enabled by default, we might want to disable the smoothing to see clear pixels. You can toggle the checkbox to see the effect of the <code>imageSmoothingEnabled</code> property (which needs prefixes for different browsers).</p>\n\n<h6 class=\"hidden\" id=\"zoom_example\">Zoom example</h6>\n\n\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'https://mdn.mozillademos.org/files/5397/rhino.jpg'</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> zoomctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zoom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> smoothbtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'smoothbtn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">toggleSmoothing</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    zoomctx<span class=\"token punctuation\">.</span>imageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">;</span>\n    zoomctx<span class=\"token punctuation\">.</span>mozImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">;</span>\n    zoomctx<span class=\"token punctuation\">.</span>webkitImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">;</span>\n    zoomctx<span class=\"token punctuation\">.</span>msImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  smoothbtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> toggleSmoothing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">zoom</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerX<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerY<span class=\"token punctuation\">;</span>\n    zoomctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span>\n                      Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  canvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p><iframe class=\"sample-code-frame\" title=\"Zoom example sample\" id=\"frame_zoom_example\" width=\"620\" height=\"490\" src=\"https://yari-demos.prod.mdn.mozit.cloud/es/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas/_sample_.zoom_example.html\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"guardando_las_imágenes","title":"Guardando las imágenes","isH3":false,"content":"<p>The <a href=\"/es/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> provides a <code>toDataURL()</code> method, which is useful when saving images. It returns a <a href=\"/en-US/docs/Web/HTTP/data_URIs\">data URI</a> containing a representation of the image in the format specified by the <code>type</code> parameter (defaults to <a class=\"external external-icon\" href=\"https://en.wikipedia.org/wiki/Portable_Network_Graphics\" rel=\" noopener\">PNG</a>). The returned image is in a resolution of 96 dpi.</p>\n\n<dl>\n <dt id=\"canvas.todataurlimagepng\"><a href=\"/es/docs/Web/API/HTMLCanvasElement/toDataURL\" title=\"canvas.toDataURL('image/png')\"><code>canvas.toDataURL('image/png')</code></a></dt>\n <dd>Default setting. Creates a PNG image.</dd>\n <dt id=\"canvas.todataurlimagejpeg_quality\"><a href=\"/es/docs/Web/API/HTMLCanvasElement/toDataURL\" title=\"canvas.toDataURL('image/jpeg', quality)\"><code>canvas.toDataURL('image/jpeg', quality)</code></a></dt>\n <dd>Creates a JPG image. Optionally, you can provide a quality in the range from 0 to 1, with one being the best quality and with 0 almost not recognizable but small in file size.</dd>\n</dl>\n\n<p>Once you have generated a data URI from you canvas, you are able to use it as the source of any <a href=\"/es/docs/Web/HTML/Element/image\"><code>&lt;image&gt;</code></a> or put it into a hyper link with a <a href=\"/en-US/docs/Web/HTML/Element/a#attr-download\">download attribute</a> to save it to disc, for example.</p>\n\n<p>You can also create a <a href=\"/es/docs/Web/API/Blob\"><code>Blob</code></a> from the canvas.</p>\n\n<dl>\n <dt id=\"canvas.toblobcallback_type_encoderoptions_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLCanvasElement/toBlob\"><code>canvas.toBlob(callback, type, encoderOptions)</code> <small>(en-US)</small></a></dt>\n <dd>Creates a <code>Blob</code> object representing the image contained in the canvas.</dd>\n</dl>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code> <small>(en-US)</small></a></li>\n <li><a href=\"/en-US/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Manipulating video using canvas</a></li>\n <li><a href=\"https://codepo8.github.io/canvas-images-and-pixels/\" class=\"external\" rel=\" noopener\">Canvas, images and pixels – by Christian Heilmann</a></li>\n</ul>\n\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/es/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">« Anterior</a></li>\n    <li><a class=\"button minimal page-not-created\" href=\"/es/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility\" title=\"This is a link to an unwritten page\">Siguiente  »</a></li>\n</ul><p></p>"}}],"toc":[{"text":"El objeto <code>ImageData</code>","id":"el_objeto_imagedata"},{"text":"Creando un objeto <code>ImageData</code>","id":"creando_un_objeto_imagedata"},{"text":"Getting the pixel data for a context","id":"getting_the_pixel_data_for_a_context"},{"text":"Painting pixel data into a context","id":"painting_pixel_data_into_a_context"},{"text":"Zooming and anti-aliasing","id":"zooming_and_anti-aliasing"},{"text":"Guardando las imágenes","id":"guardando_las_imágenes"},{"text":"See also","id":"see_also"}],"summary":"\nHasta ahora, no habíamos mirado los píxeles reales de nuestro canvas. Con el objeto ImageData, puedes leer y escribir directamente un array de datos para manipular píxeles.\n\nTambién veremos cómo se puede controlar el suavizado de la imagen (antialiasing) y cómo guardar imágenes de tu canvas.\n","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Pixel manipulation with canvas","locale":"en-US","native":"English (US)"},{"title":"Manipulation de pixels avec canvas","locale":"fr","native":"Français"},{"title":"キャンバスとピクセル操作","locale":"ja","native":"日本語"},{"title":"Пиксельная манипуляция с холстом","locale":"ru","native":"Русский"},{"title":"像素操作","locale":"zh-CN","native":"中文 (简体)"},{"title":"Pixel manipulation with canvas","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"es/web/api/canvas_api/tutorial/pixel_manipulation_with_canvas","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/api/canvas_api/tutorial/pixel_manipulation_with_canvas/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/es/docs/Web","title":"Tecnología para desarrolladores web"},{"uri":"/es/docs/Web/API","title":"Referencia de la API Web"},{"uri":"/es/docs/Web/API/Canvas_API","title":"API Canvas"},{"uri":"/es/docs/Web/API/Canvas_API/Tutorial","title":"Tutorial Canvas"},{"uri":"/es/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas","title":"Pixel manipulation with canvas"}],"pageTitle":"Pixel manipulation with canvas - Referencia de la API Web | MDN","noIndexing":false}}