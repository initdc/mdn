{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"KeyboardEvent","mdn_url":"/es/docs/Web/API/KeyboardEvent","locale":"es","native":"Español","sidebarHTML":"<ol><li><strong><a href=\"/es/docs/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Propiedades</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/altKey\"><code>altKey</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/charCode\"><code>charCode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/code\"><code>code</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/ctrlKey\"><code>ctrlKey</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/isComposing\"><code>isComposing</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/key\"><code>key</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/keyCode\"><code>keyCode</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/keyIdentifier\"><code>keyIdentifier</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/location\"><code>location</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/API/KeyboardEvent/metaKey\"><code>metaKey</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/repeat\"><code>repeat</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/shiftKey\"><code>shiftKey</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Métodos</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/getModifierState\"><code>getModifierState()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>initKeyboardEvent()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>initKeyEvent()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Herencia</summary><ol><li><a href=\"/es/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/es/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p>Los objetos <strong><code>KeyboardEvent</code></strong> describen una interacción del usuario con el teclado. Cada evento describe una tecla; el tipo de evento(<code>keydown</code>, <code>keypress</code>, o <code>keyup</code>) identifica el tipo de acción realizada.</p>\n\n<div class=\"note notecard\" id=\"sect1\"><strong>Nota:</strong> El <code>KeyboardEvent</code> solo indica qué está pasando en una tecla. Cuando necesite manejar la entrada de texto, use el evento <code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" rel=\"custom\">input</a></code> de HTML5 en su lugar. Por ejemplo, si el usuario introduce texto desde un sistema de tipo manuscrito como una tableta, los eventos para teclas no podrán ser lanzados.</div>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n <dt id=\"keyboardevent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code> <small>(en-US)</small></a></dt>\n <dd>Crea un objeto <code>KeyboardEvent</code>.</dd>\n</dl>"}},{"type":"prose","value":{"id":"métodos","title":"Métodos","isH3":false,"content":"<p><em>Esta interfaz también hereda métodos de sus padres, <a href=\"/es/docs/Web/API/UIEvent\"><code>UIEvent</code></a> and <a href=\"/es/docs/Web/API/Event\"><code>Event</code></a>.</em></p>\n\n<dl>\n <dt id=\"keyboardevent.getmodifierstate_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/getModifierState\"><code>KeyboardEvent.getModifierState()</code> <small>(en-US)</small></a></dt>\n <dd>Devuelve un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> indicando si una tecla modificadora, como <kbd>Alt</kbd>, <kbd>Shift</kbd>, <kbd>Ctrl</kbd>, o <kbd>Meta</kbd>, fue pulsada cuando el evento fue creado.</dd>\n <dt id=\"keyboardevent.initkeyevent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>KeyboardEvent.initKeyEvent()</code> <small>(en-US)</small></a><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n <dd>Inicializa un objeto <code>KeyboardEvent</code>. Este método solo ha sido implementado por Gecko (otros usados <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>KeyboardEvent.initKeyboardEvent()</code> <small>(en-US)</small></a>) y nunca más será usado. El modo estándar moderno es usar el constructor <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code> <small>(en-US)</small></a>.</dd>\n <dt id=\"keyboardevent.initkeyboardevent_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>KeyboardEvent.initKeyboardEvent()</code> <small>(en-US)</small></a><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n <dd>Inicializa un objeto <code>KeyboardEvent</code>. Este método nunca fue implementado por Gecko (quien usa <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>KeyboardEvent.initKeyEvent()</code> <small>(en-US)</small></a>) y no debe ser utilizado más. El modo estándar moderno es usar el constructor <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code> <small>(en-US)</small></a>.</dd>\n</dl>"}},{"type":"prose","value":{"id":"propiedades","title":"Propiedades","isH3":false,"content":"<p><em>Esta interfaz también hereda propiedades de sus padres <a href=\"/es/docs/Web/API/UIEvent\"><code>UIEvent</code></a> y <a href=\"/es/docs/Web/API/Event\"><code>Event</code></a>.</em></p>\n\n<dl>\n <dt id=\"keyboardevent.altkey_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/altKey\"><code>KeyboardEvent.altKey</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Devuelve un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> que será <code>true</code> si la tecla <kbd>Alt</kbd> ( <kbd>Option</kbd> or <kbd>⌥</kbd> on OS X) fue activada cuando el evento fue generado.</dd>\n <dt id=\"keyboardevent.char\"><a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>KeyboardEvent.char</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Devuelve un <a href=\"/es/docs/conflicting/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> representando el valor del carácter de la tecla. Si la tecla corresponde con un carácter imprimible, este valor es una cadena Unicode no vacía que contiene este carácter. Si la tecla no tiene una representación imprimible, esta es una cadena vacía.</dd>\n <dd>\n <div class=\"note notecard\" id=\"sect2\"><strong>Nota:</strong> Si la tecla es usada como una macro que inserta múltiples caracteres, If the key is used as a macro that inserts multiple characters, el valor de este atributo es la cadena completa, no solo el primer carácter.</div>\n\n <div class=\"warning notecard\" id=\"sect3\"><strong>Advertencia:</strong> Esta propiedad ha sido eliminada de los eventos del DOM de nivel 3. Esta es únicamente soportada en IE.</div>\n </dd>\n <dt id=\"keyboardevent.charcode_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/charCode\"><code>KeyboardEvent.charCode</code> <small>(en-US)</small></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns an <code>unsigned<code> </code>long</code> representing the Unicode reference number of the key; this attribute is used only by the <code>keypress</code> event. For keys whose <code>char</code> attribute contains multiple characters, this is the Unicode value of the first character in that attribute. In Firefox 26 this returns codes for printable characters.\n <div class=\"warning notecard\" id=\"sect4\"><strong>Warning:</strong> This attribute is deprecated; you should use <code>key</code> instead, if available.</div>\n </dd>\n <dt id=\"keyboardevent.code_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/code\"><code>KeyboardEvent.code</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns a <a href=\"/es/docs/conflicting/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> with the code value of the key represented by the event.</dd>\n <dt id=\"keyboardevent.ctrlkey_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/ctrlKey\"><code>KeyboardEvent.ctrlKey</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that is <code>true</code> if the <kbd>Ctrl</kbd> key was active when the key event was generated.</dd>\n <dt id=\"keyboardevent.iscomposing_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/isComposing\"><code>KeyboardEvent.isComposing</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that is <code>true</code> if the event is fired between after <code>compositionstart</code> and before <code>compositionend</code>.</dd>\n <dt id=\"keyboardevent.key_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns a <a href=\"/es/docs/conflicting/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> representing the key value of the key represented by the event.</dd>\n <dt id=\"keyboardevent.keycode_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/keyCode\"><code>KeyboardEvent.keyCode</code> <small>(en-US)</small></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns an <code>unsigned long</code> representing a system and implementation dependent numerical code identifying the unmodified value of the pressed key.\n <div class=\"warning notecard\" id=\"sect5\"><strong>Warning:</strong> This attribute is deprecated; you should use <code>key</code> instead, if available.</div>\n </dd>\n <dt id=\"keyboardevent.locale\"><a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>KeyboardEvent.locale</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns a <a href=\"/es/docs/conflicting/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> representing a locale string indicating the locale the keyboard is configured for. This may be the empty string if the browser or device doesn't know the keyboard's locale.\n <div class=\"note notecard\" id=\"sect6\"><strong>Note:</strong> This does not describe the locale of the data being entered. A user may be using one keyboard layout while typing text in a different language.</div>\n </dd>\n <dt id=\"keyboardevent.location_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/location\"><code>KeyboardEvent.location</code> <small>(en-US)</small></a><a name=\"Attributes_location\"> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></a></dt>\n <dd>Returns an <code>unsigned long</code> representing the location of the key on the keyboard or other input device.</dd>\n <dt id=\"keyboardevent.metakey\"><a href=\"/es/docs/Web/API/KeyboardEvent/metaKey\"><code>KeyboardEvent.metaKey</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that is <code>true</code> if the <kbd>Meta</kbd> (or <kbd>Command</kbd> on OS X) key was active when the key event was generated.</dd>\n <dt id=\"keyboardevent.repeat_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/repeat\"><code>KeyboardEvent.repeat</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that is <code>true</code> if the key is being held down such that it is automatically repeating.</dd>\n <dt id=\"keyboardevent.shiftkey_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/shiftKey\"><code>KeyboardEvent.shiftKey</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns a <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> that is <code>true</code> if the <kbd>Shift</kbd> key was active when the key event was generated.</dd>\n <dt id=\"keyboardevent.which\"><a href=\"/es/docs/Web/API/UIEvent/which\"><code>KeyboardEvent.which</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n <dd>Returns an <code>unsigned long</code> representing a system and implementation dependent numeric code identifying the unmodified value of the pressed key; this is usually the same as <code>keyCode</code>.\n <div class=\"warning notecard\" id=\"sect7\"><strong>Warning:</strong> This attribute is deprecated; you should use <code>key</code> instead, if available.</div>\n </dd>\n</dl>"}},{"type":"prose","value":{"id":"notes","title":"Notes","isH3":false,"content":"<p>There are <code>keydown</code>, <code>keypress</code>, and <code>keyup</code> events. For most keys, Gecko dispatches a sequence of key events like this:</p>\n\n<ol>\n <li>When the key is first depressed, the <code>keydown</code> event is sent.</li>\n <li>If the key is not a modifier key, the <code>keypress</code> event is sent.</li>\n <li>When the user releases the key, the <code>keyup</code> event is sent.</li>\n</ol>"}},{"type":"prose","value":{"id":"special_cases","title":"Special cases","isH3":true,"content":"<p>Certain keys toggle the state of an LED indicator, such as Caps Lock, Num Lock, and Scroll Lock. On Windows and Linux, these keys dispatch only the <code>keydown</code> and <code>keyup</code> events. Note that on Linux, Firefox 12 and earlier also dispatched the <code>keypress</code> event for these keys.</p>\n\n<p>On Mac, however, Caps Lock dispatches only the <code>keydown</code> event due to a platform event model limitation. Num Lock had been supported on old MacBook (2007 model and older) but Mac hasn't supported Num Lock feature even on external keyboards in these days. On the old MacBook which has Num Lock key, Num Lock doesn't cause any key events. And Gecko supports Scroll Lock key if an external keyboard which has F14 is connected. However, it generates <code>keypress</code> event. This inconsistent behavior is a bug; see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=602812\" class=\"external\" rel=\" noopener\">error&nbsp;602812</a>.</p>"}},{"type":"prose","value":{"id":"auto-repeat_handling","title":"Auto-repeat handling","isH3":true,"content":"<p>When a key is pressed and held down, it begins to auto-repeat. This results in a sequence of events similar to the following being dispatched:</p>\n\n<ol>\n <li><code>keydown</code></li>\n <li><code>keypress</code></li>\n <li><code>keydown</code></li>\n <li><code>keypress</code></li>\n <li>&lt;&lt;repeating until the user releases the key&gt;&gt;</li>\n <li><code>keyup</code></li>\n</ol>\n\n<p>This is what the DOM Level 3 specification says should happen. There are some caveats, however, as described below.</p>\n\n<h4 id=\"auto-repeat_on_some_gtk_environments_such_as_ubuntu_9.4\">Auto-repeat on some GTK environments such as Ubuntu 9.4</h4>\n\n<p>In some GTK-based environments, auto-repeat dispatches a native key-up event automatically during auto-repeat, and there's no way for Gecko to know the difference between a repeated series of keypresses and an auto-repeat. On those platforms, then, an auto-repeat key will generate the following sequence of events:</p>\n\n<ol>\n <li><code>keydown</code></li>\n <li><code>keypress</code></li>\n <li><code>keyup</code></li>\n <li><code>keydown</code></li>\n <li><code>keypress</code></li>\n <li><code>keyup</code></li>\n <li>&lt;&lt;repeating until the user releases the key&gt;&gt;</li>\n <li><code>keyup</code></li>\n</ol>\n\n<p>In these environments, unfortunately, there's no way for web content to tell the difference between auto-repeating keys and keys that are just being pressed repeatedly.</p>\n\n<h4 id=\"auto-repeat_handling_prior_to_gecko_4.0\">Auto-repeat handling prior to Gecko 4.0</h4>\n\n<p>Before Gecko 4.0 , keyboard handling was less consistent across platforms.</p>\n\n<dl>\n <dt id=\"windows\">Windows</dt>\n <dd>Auto-repeat behavior is the same as in Gecko 4.0 and later.</dd>\n <dt id=\"mac\">Mac</dt>\n <dd>After the initial keydown event, only keypress events are sent until the keyup event occurs; the inter-spaced keydown events are not sent.</dd>\n <dt id=\"linux\">Linux</dt>\n <dd>The event behavior depends on the specific platform. It will either behave like Windows or Mac depending on what the native event model does.</dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">var</span> metaChar <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> exampleKey <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">keyEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> key <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">||</span> event<span class=\"token punctuation\">.</span>which<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> keychar <span class=\"token operator\">=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> exampleKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    metaChar <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">!=</span> exampleKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>metaChar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Combination of metaKey + \"</span> <span class=\"token operator\">+</span> keychar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      metaChar <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Key pressed \"</span> <span class=\"token operator\">+</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">metaKeyUp</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> key <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">||</span> event<span class=\"token punctuation\">.</span>which<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> exampleKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    metaChar <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>body onkeydown<span class=\"token operator\">=</span><span class=\"token string\">\"keyEvent(event)\"</span> onkeyup<span class=\"token operator\">=</span><span class=\"token string\">\"metaKeyUp(event)\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Specification</th>\n   <th scope=\"col\">Status</th>\n   <th scope=\"col\">Comment</th>\n  </tr>\n  <tr>\n   <td><a href=\"https://www.w3.org/TR/2014/WD-DOM-Level-3-Events-20140925/#interface-KeyboardEvent\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Document Object Model (DOM) Level 3 Events Specification<br><small lang=\"es\">La definición de 'KeyboardEvent' en esta especificación.</small></a></td>\n   <td><span class=\"spec-obsolete\">Obsolete</span></td>\n   <td>Initial definition.</td>\n  </tr>\n </tbody>\n</table>\n\n<p>The <code>KeyboardEvent</code> interface specification went through numerous draft versions, first under DOM Events Level 2 where it was dropped as no consensus arose, then under DOM Events Level 3. This led to the implementation of non-standard initialization methods, the early DOM Events Level 2 version, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>KeyboardEvent.initKeyEvent()</code> <small>(en-US)</small></a> by Gecko browsers and the early DOM Events Level 3 version, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>KeyboardEvent.initKeyboardEvent()</code> <small>(en-US)</small></a> by others. Both have been superseded by the modern usage of a constructor: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code> <small>(en-US)</small></a>.</p>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.KeyboardEvent","dataURL":"/es/docs/Web/API/KeyboardEvent/bcd.json"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Métodos","id":"métodos"},{"text":"Propiedades","id":"propiedades"},{"text":"Notes","id":"notes"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"Los objetos KeyboardEvent describen una interacción del usuario con el teclado. Cada evento describe una tecla; el tipo de evento(keydown, keypress, o keyup) identifica el tipo de acción realizada.","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"KeyboardEvent","locale":"en-US","native":"English (US)"},{"title":"KeyboardEvent","locale":"fr","native":"Français"},{"title":"KeyboardEvent","locale":"ja","native":"日本語"},{"title":"KeyboardEvent","locale":"ko","native":"한국어"},{"title":"KeyboardEvent","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"KeyboardEvent","locale":"ru","native":"Русский"},{"title":"KeyboardEvent","locale":"zh-CN","native":"中文 (简体)"},{"title":"KeyboardEvent","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"es/web/api/keyboardevent","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/api/keyboardevent/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/es/docs/Web","title":"Tecnología para desarrolladores web"},{"uri":"/es/docs/Web/API","title":"Referencia de la API Web"},{"uri":"/es/docs/Web/API/KeyboardEvent","title":"KeyboardEvent"}],"pageTitle":"KeyboardEvent - Referencia de la API Web | MDN","noIndexing":false}}