{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"EventTarget.removeEventListener()","mdn_url":"/es/docs/Web/API/EventTarget/removeEventListener","locale":"es","native":"Español","sidebarHTML":"<ol><li><strong><a href=\"/es/docs/Web/API/EventTarget\"><code>EventTarget</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventTarget/EventTarget\"><code>EventTarget()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Métodos</summary><ol><li><a href=\"/es/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a></li><li><a href=\"/es/docs/Web/API/EventTarget/dispatchEvent\"><code>dispatchEvent()</code></a></li><li><em><code>removeEventListener()</code></em></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p>El método <strong><code>EventTarget.removeEventListener()</code></strong> remueve del <a href=\"/es/docs/Web/API/EventTarget\"><code>EventTarget</code></a> un detector de evento previamente registrado con <a href=\"/es/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener</code></a>. El detector de evento a ser removido es identificado usando una combinación de tipos de eventos, la misma funcion del detector de eventos, y muchas opciones adicionales que pueden afectar</p>"}},{"type":"prose","value":{"id":"syntax","title":"Sintaxis","isH3":false,"content":"<pre class=\"syntaxbox notranslate\"><var>target</var>.removeEventListener(<var>type</var>, <var>listener</var>[, <var>options</var>]);\n<em>target</em>.removeEventListener(<em>tipo</em>, <em>listener</em>[, <em>useCapture</em>])</pre>"}},{"type":"prose","value":{"id":"parámetros","title":"Parámetros","isH3":true,"content":"<dl>\n <dt id=\"tipo\"><var>tipo</var></dt>\n <dd>Un string representando el tipo de evento del que se está removiendo un detector de evento.</dd>\n <dt id=\"detector_listener\"><var>detector (listener)</var></dt>\n <dd>La función <a href=\"/es/docs/conflicting/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> del manejador de evento a eliminar del objetivo del evento.</dd>\n <dt id=\"options\"><var>options</var> <span class=\"badge inline optional\">Opcional</span></dt>\n <dd>Un objeto que especifíca diversas características acerca del detector de eventos. Las opciones disponibles son:\n <ul>\n  <li><code>capture</code>: Un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> que indica que eventos de este tipo serán enviados al <code>listener</code> antes de ser enviado a cualquier <code>EventTarget</code> debado de éste en el DOM.</li>\n  <li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><code> mozSystemGroup</code>: Sólo disponible ejecutando XBL o Firefox' chrome, es un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> que define si el detector es añadido al grupo del sistema.</li>\n </ul>\n </dd>\n <dt id=\"usecapture\"><code>useCapture</code> <span class=\"badge inline optional\">Opcional</span></dt>\n <dd>Especifíca si el <a href=\"/es/docs/conflicting/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> que se está eliminando fue registrado como un detector de captura o no. Si no se indica, por defecto <code>useCapture</code> asumirá el valor <code>false</code>.</dd>\n <dd>Si un detector se registro dos veces, uno con captura y otro sin, cada uno debe ser eliminado por separado. La eliminación de un detector de captura no afecta a una versión de \"no-captura\" del mismo detector, y viceversa.</dd>\n</dl>"}},{"type":"prose","value":{"id":"valor_de_retorno","title":"Valor de retorno","isH3":true,"content":"<p><code>undefined</code>.</p>"}},{"type":"prose","value":{"id":"coincidiendo_disparadores_de_evento_para_su_eliminación","title":"Coincidiendo disparadores de evento para su eliminación","isH3":true,"content":"<p>Habiendose añadido detector de evento llamando <a href=\"/es/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, puede llegar un punto donde se requiera eliminar. Obviamente, se necesita especificar los mismos parámetros de <code>tipo</code> y <code>listener</code> a <code>removeEventListener()</code>, pero que hay acerca de los parámetros de <code>options</code> o de <code>useCapture</code>?</p>\n\n<p>Mientras <code>addEventListener()</code> permite añadir el mismo detector más de una vez para el mismo tipo, si la opción es diferente, la única opción que <code>removeEventListener()</code> revisará es la bandera de <code>capture</code>/<code>useCapture</code>. Su valor debe coincidir con <code>removeEventListener()</code> para coincidir, pero otros valores no necesitan corresponder.</p>\n\n<p>Por ejemplo, considerar la siguiente llamada a <code>addEventListener()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js line-numbers language-js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Ahora, considera  <code>removeEventListener()</code>:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js line-numbers language-js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Fallo</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// Éxito</span></code></pre></div>\n\n<p>La primera llamada falla porque el valor de <code>useCapture</code> no coincide. El segundo valor funciona, puesto que <code>useCapture</code> es igual a su valor cuando se añadió el detector.</p>\n\n<p>Ahora considera lo siguiente:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js line-numbers language-js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">passive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n\n<p>Aqui, especificamos un objeto <code>options</code> en el cual <code>passive</code> esta definido como <code>true</code>, mientras que otras opciones son dejados con su valor por defecto de <code>false</code>.</p>\n\n<p>Vea consecutivamente, cada una de las siguientes llamadas a  <code>removeEventListener()</code>. Cualquiera de éstas donde <code>capture</code> o <code>useCapture</code> es <code>true</code> falla; en todas las demás funciona. Solo la configuración <code>capture</code> importa a <code>removeEventListener()</code>.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js line-numbers language-js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">passive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Funciona</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capture</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Funciona</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capture</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Falla</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">passive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Funciona</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// Funciona</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// Falla</span></code></pre></div>\n\n<p>Vale la pena mencionar que algunos navegadores tienen un comportamiento inconsistente, y a menos que se tengan razones específicas, es probablemente una buena idea usar los mismos valores usados por la llamada a <code>addEventListener()</code> al momento de utilizar <code>removeEventListener()</code>.</p>"}},{"type":"prose","value":{"id":"notas","title":"Notas","isH3":false,"content":"<p>Si un <a href=\"/es/docs/conflicting/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> es removido de un <a href=\"/es/docs/Web/API/EventTarget\"><code>EventTarget</code></a> cuando aún se está procesando el evento, no será ejecutado. Después de ser removido, un <a href=\"/es/docs/conflicting/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> no será invocado por el evento al cual se registró, sin embargo se podrá adjuntar de nuevo a dicho evento.</p>\n\n<p>Llamar <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code><code>removeEventListener</code></code></a>  en algún <a href=\"/es/docs/Web/API/EventTarget\"><code>EventTarget</code></a> que no contenga el <a href=\"/es/docs/conflicting/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> especificado será un acción sin efecto, es decir, se podrá llamar <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code><code>removeEventListener</code></code></a> sin efectos negativos en los scripts.</p>"}},{"type":"prose","value":{"id":"ejemplo","title":"Ejemplo","isH3":false,"content":"<p>Este es un ejemplo en donde se agrega y después se elimina un <a href=\"/es/docs/conflicting/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> </p>\n\n<div class=\"code-example\"><pre class=\"brush: js line-numbers language-js notranslate\"><code><span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    clickTarget <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click-target'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    mouseOverTarget <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouse-over-target'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    toggle <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">makeBackgroundYellow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>toggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    toggle <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>toggle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nclickTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>\n    makeBackgroundYellow<span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmouseOverTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n    clickTarget<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>\n        makeBackgroundYellow<span class=\"token punctuation\">,</span>\n        <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"especificaciones","title":"Especificaciones","isH3":false,"content":"<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th>Especificación</th>\n   <th>Estado</th>\n   <th>Comentario</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><a href=\"https://dom.spec.whatwg.org/#dom-eventtarget-removeeventlistener\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">DOM<br><small lang=\"es\">La definición de 'EventTarget.removeEventListener()' en esta especificación.</small></a></td>\n   <td><span class=\"spec-living\">Living Standard</span></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"https://www.w3.org/TR/dom/#dom-eventtarget-removeeventlistener\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">DOM4<br><small lang=\"es\">La definición de 'EventTarget.removeEventListener()' en esta especificación.</small></a></td>\n   <td><span class=\"spec-obsolete\">Obsolete</span></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><a href=\"https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget-removeEventListener\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Document Object Model (DOM) Level 2 Events Specification<br><small lang=\"es\">La definición de 'EventTarget.removeEventListener()' en esta especificación.</small></a></td>\n   <td><span class=\"spec-obsolete\">Obsolete</span></td>\n   <td>Definición inicial</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidad de los navegadores","id":"browser_compatibility","isH3":false,"query":"api.EventTarget.removeEventListener","dataURL":"/es/docs/Web/API/EventTarget/removeEventListener/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<ul>\n</ul>"}},{"type":"prose","value":{"id":"polyfill_to_support_older_browsers","title":"Polyfill to support older browsers","isH3":false,"content":"<p><code>addEventListener()</code> and <code>removeEventListener()</code> are not present in older browsers. You can work around this by inserting the following code at the beginning of your scripts, allowing use of <code>addEventListener()</code> and <code>removeEventListener()</code> in implementations which do not natively support it. However, this method will not work on Internet Explorer 7 or earlier, since extending the Element.prototype was not supported until Internet Explorer 8.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>addEventListener<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> oListeners <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">runListeners</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">oEvent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>oEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> oEvent <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> iLstId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> iElId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> oEvtListeners <span class=\"token operator\">=</span> oListeners<span class=\"token punctuation\">[</span>oEvent<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> iElId <span class=\"token operator\">&lt;</span> oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iElId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">[</span>iElId<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>iLstId<span class=\"token punctuation\">;</span> iLstId <span class=\"token operator\">&lt;</span> oEvtListeners<span class=\"token punctuation\">.</span>aEvts<span class=\"token punctuation\">[</span>iElId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iLstId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> oEvtListeners<span class=\"token punctuation\">.</span>aEvts<span class=\"token punctuation\">[</span>iElId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>iLstId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> oEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addEventListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>sEventType<span class=\"token punctuation\">,</span> fListener <span class=\"token comment\">/*, useCapture (will be ignored!) */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oListeners<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>sEventType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> oEvtListeners <span class=\"token operator\">=</span> oListeners<span class=\"token punctuation\">[</span>sEventType<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> nElIdx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> iElId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> iElId <span class=\"token operator\">&lt;</span> oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iElId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">[</span>iElId<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> nElIdx <span class=\"token operator\">=</span> iElId<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nElIdx <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        oEvtListeners<span class=\"token punctuation\">.</span>aEvts<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>fListener<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"on\"</span> <span class=\"token operator\">+</span> sEventType<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> runListeners<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> aElListeners <span class=\"token operator\">=</span> oEvtListeners<span class=\"token punctuation\">.</span>aEvts<span class=\"token punctuation\">[</span>nElIdx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"on\"</span> <span class=\"token operator\">+</span> sEventType<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> runListeners<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          aElListeners<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"on\"</span> <span class=\"token operator\">+</span> sEventType<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> runListeners<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> iLstId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> iLstId <span class=\"token operator\">&lt;</span> aElListeners<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iLstId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aElListeners<span class=\"token punctuation\">[</span>iLstId<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> fListener<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        aElListeners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>fListener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      oListeners<span class=\"token punctuation\">[</span>sEventType<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">aEls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">aEvts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">[</span>fListener<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"on\"</span> <span class=\"token operator\">+</span> sEventType<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> runListeners<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">Element</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeEventListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>sEventType<span class=\"token punctuation\">,</span> fListener <span class=\"token comment\">/*, useCapture (will be ignored!) */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>oListeners<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>sEventType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> oEvtListeners <span class=\"token operator\">=</span> oListeners<span class=\"token punctuation\">[</span>sEventType<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> nElIdx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> iElId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> iElId <span class=\"token operator\">&lt;</span> oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iElId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oEvtListeners<span class=\"token punctuation\">.</span>aEls<span class=\"token punctuation\">[</span>iElId<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> nElIdx <span class=\"token operator\">=</span> iElId<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nElIdx <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> iLstId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> aElListeners <span class=\"token operator\">=</span> oEvtListeners<span class=\"token punctuation\">.</span>aEvts<span class=\"token punctuation\">[</span>nElIdx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> iLstId <span class=\"token operator\">&lt;</span> aElListeners<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> iLstId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aElListeners<span class=\"token punctuation\">[</span>iLstId<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> fListener<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> aElListeners<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>iLstId<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"example","title":"","isH3":false,"content":"<h3 id=\"example\" name=\"Example\"></h3>"}},{"type":"prose","value":{"id":"ver_también","title":"Ver también","isH3":false,"content":"<ul>\n <li><a href=\"/es/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a>.</li>\n <li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/EventTarget/removeEventListener\"><code>EventTarget.detachEvent()</code> <small>(en-US)</small></a>.</li>\n</ul>"}}],"toc":[{"text":"Sintaxis","id":"syntax"},{"text":"Notas","id":"notas"},{"text":"Ejemplo","id":"ejemplo"},{"text":"Especificaciones","id":"especificaciones"},{"text":"Compatibilidad de los navegadores","id":"browser_compatibility"},{"text":"Polyfill to support older browsers","id":"polyfill_to_support_older_browsers"},{"text":"Ver también","id":"ver_también"}],"summary":"El método EventTarget.removeEventListener() remueve del EventTarget un detector de evento previamente registrado con EventTarget.addEventListener. El detector de evento a ser removido es identificado usando una combinación de tipos de eventos, la misma funcion del detector de eventos, y muchas opciones adicionales que pueden afectar","popularity":0.0014,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"EventTarget.removeEventListener()","locale":"en-US","native":"English (US)"},{"title":"element.removeEventListener","locale":"fr","native":"Français"},{"title":"EventTarget.removeEventListener()","locale":"ja","native":"日本語"},{"title":"EventTarget.removeEventListener()","locale":"ko","native":"한국어"},{"title":"EventTarget.removeEventListener()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Метод EventTarget.removeEventListener()","locale":"ru","native":"Русский"},{"title":"EventTarget.removeEventListener()","locale":"zh-CN","native":"中文 (简体)"},{"title":"EventTarget.removeEventListener()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"es/web/api/eventtarget/removeeventlistener","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/api/eventtarget/removeeventlistener/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/es/docs/Web","title":"Tecnología para desarrolladores web"},{"uri":"/es/docs/Web/API","title":"Referencia de la API Web"},{"uri":"/es/docs/Web/API/EventTarget","title":"EventTarget"},{"uri":"/es/docs/Web/API/EventTarget/removeEventListener","title":"EventTarget.removeEventListener()"}],"pageTitle":"EventTarget.removeEventListener() - Referencia de la API Web | MDN","noIndexing":false}}