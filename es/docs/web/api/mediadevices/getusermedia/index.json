{"doc":{"isMarkdown":false,"isTranslated":true,"isActive":true,"flaws":{},"title":"MediaDevices.getUserMedia()","mdn_url":"/es/docs/Web/API/MediaDevices/getUserMedia","locale":"es","native":"Español","sidebarHTML":"<ol><li><strong><a href=\"/es/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/es/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Métodos</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaDevices/enumerateDevices\"><code>enumerateDevices()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\"><code>getDisplayMedia()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaDevices/getSupportedConstraints\"><code>getSupportedConstraints()</code> <small>(en-US)</small></a></li><li><em><code>getUserMedia()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaDevices/selectAudioOutput\"><code>selectAudioOutput()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Eventos</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaDevices/devicechange_event\"><code>devicechange</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Herencia</summary><ol><li><a href=\"/es/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Páginas relacionadas a WebRTC</summary><ol><li><a href=\"/es/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div id=\"sect1\"><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>Esta es una <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">tecnología experimental</a></strong><br>Comprueba la <a href=\"#browser_compatibility\">Tabla de compabilidad de navegadores</a> cuidadosamente antes de usarla en producción.</p></div></div>\n\n<p>El método <code><strong>MediaDevices.getUserMedia()</strong></code> solicita al usuario permisos para usar un dispositivo de entrada de vídeo y/o uno de audio como una cámara o compartir la pantalla y/o micrófono. Si el usuario proporciona los permisos, entonces le retornará un <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code> <small>(en-US)</small></a> que es resuelto por el resultado del objeto <code><a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API#localmediastream\">MediaStream</a></code>. Si el usuario niega el permiso, o si el recurso multimedia no es válido, entonces el promise es rechazado con <code>PermissionDeniedError</code> o <code>NotFoundError</code> respectivamente. Nótese que es posible que el promise retornado no sea ni resuelto ni rechazado, ya que no se requiere que el usuario tome una decisión.</p>"}},{"type":"prose","value":{"id":"sintaxis","title":"Sintaxis","isH3":false,"content":"<pre class=\"syntaxbox notranslate\">var <em>gumPromise</em> = <em>MediaDevices</em>.getUserMedia(<em>constraints</em>);</pre>\n\n<p>Generalmente, accederás al objeto singleton <a href=\"/es/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a> usando <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>navigator.mediaDevices</code> <small>(en-US)</small></a>, de esta forma:</p>\n\n<pre class=\"notranslate\"><code>navigator.mediaDevices.getUserMedia(myConstraints).then(function(mediaStream) {\n  /* usar el flujo de datos */\n}).catch(function(err) {\n  /* manejar el error */\n});</code></pre>"}},{"type":"prose","value":{"id":"parámetros","title":"Parámetros","isH3":true,"content":"<dl>\n <dt id=\"constraints\"><code>constraints</code></dt>\n <dd>\n <p>Es un objeto <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaStreamConstraints</code> <small>(en-US)</small></a> que especifica los tipos de recursos a solicitar, junto con cualquier requerimiento para cada tipo.</p>\n\n <p>El parámetro constraints es un objeto <code>MediaStreamConstaints</code> con dos miembros: <code>video</code> y <code>audio</code>, que describen los tipos de recurso solicitados. Debe especificarse uno o ambos. Si el navegador no puede encontrar todas las pistas de recursos con los tipos especificados que reúnan las restricciones dadas, entonces el promise retornado es rechazado con <code>NotFoundError</code>.</p>\n\n <p>Lo siguiente realiza la petición de tanto audio como vídeo sin requerimientos específicos:</p>\n\n <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span></code></pre></div>\n\n <p>Mientras que la información acerca de las cámaras y micrófonos de los usuarios se encuentran inaccesibles por razones de privacidad, una aplicación puede solicitar la cámara y las capacidades del micrófono que este requiera, usando restricciones adicionales. El siguiente código es para mosrtar una resolución de una cámara de 1280x720.</p>\n\n <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">1280</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">720</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n <p>El navegador tratará de respetar esto, pero puede devolver otras resoluciones si una coincidencia exacta no está disponible o si el usuario la reemplaza.</p>\n\n <p>Para <em>conseguir </em>otras resoluciones, puede utilizar las propiedaes <code>min</code>, <code>max</code>, or <code>exact</code> (también conocido como min == max). El siguiente ejemplo le muestra cómo solicitar una resolución mínima de 1280x720.</p>\n\n <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">1280</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">720</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n <p>Si no existe una cámara con una resolución mínima para trabajar, entonces la promesa devuelta será rechazada con NotFoundError, y no se le pedirá al usuario.</p>\n\n <p>La razón de esto es debido a que las propiedades <code>min</code>, <code>max</code>, y <code>exact </code>son inherentemente obligatorias, mientras que los valores planos y una propiedad llamada <em>ideal </em>no lo son. He aquí un ejemplo más completo:</p>\n\n <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">ideal</span><span class=\"token operator\">:</span> <span class=\"token number\">1280</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">max</span><span class=\"token operator\">:</span> <span class=\"token number\">1920</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">776</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">ideal</span><span class=\"token operator\">:</span> <span class=\"token number\">720</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">max</span><span class=\"token operator\">:</span> <span class=\"token number\">1080</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n <p>Un valor perteneciente a la propiedad <code>ideal, </code>cuando es usada, tiene gravedad, lo que significa que el navegador tratará de encontrar la configuración (una cámara, si tienes más de una), con la distancia de aptitud más pequeña (<a href=\"http://w3c.github.io/mediacapture-main/#methods-5\" class=\"external\" rel=\" noopener\">fitness distance</a>) de los valores ideales dados.</p>\n\n <p>Los valores planos son inherentemente ideales, lo que significa que de los ejemplos mostrados anteriormente, podrían haberse escrito de la siguiente manera:</p>\n\n <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ideal</span><span class=\"token operator\">:</span> <span class=\"token number\">1280</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ideal</span><span class=\"token operator\">:</span> <span class=\"token number\">720</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n <p>No todas las restricciones son números. Por ejemplo, en dispositivos móviles, los siguientes preferirán la cámara frontal (si está disponible) sobre la posterior:</p>\n\n <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">facingMode</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></code></pre></div>\n\n <p>Para <em>solicitar </em>la cámara frontal, use:</p>\n\n <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">facingMode</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">exact</span><span class=\"token operator\">:</span> <span class=\"token string\">\"environment\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></code></pre></div>\n </dd>\n</dl>"}},{"type":"prose","value":{"id":"valor_de_retorno","title":"Valor de retorno","isH3":true,"content":"<p>Un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> que resuelve a un objeto <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code> <small>(en-US)</small></a>.</p>"}},{"type":"prose","value":{"id":"errores","title":"Errores","isH3":true,"content":"<p>Los rechazos de la promesa devuelta se realizan con un objeto <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>MediaStreamError</code></a> que está modelado en <a href=\"/es/docs/Web/API/DomException\"><code>DOMException</code></a>. Los errores más relevantes son:</p>\n\n<dl>\n <dt id=\"securityerror\"><code>SecurityError</code></dt>\n <dd>Permiso para usar un dispositivo fue denegado por el usuario o por el sistema.</dd>\n <dt id=\"notfounderror\"><code>NotFoundError</code></dt>\n <dd>No se encontraron pistas multimedia del tipo especificado que satisfagan las restricciones especificadas.</dd>\n</dl>"}},{"type":"prose","value":{"id":"ejemplos","title":"<strong>Ejemplos</strong>","isH3":false,"content":"","titleAsText":"Ejemplos"}},{"type":"prose","value":{"id":"usando_la_promesa_(promise)","title":"Usando la Promesa (Promise)","isH3":true,"content":"<p>Este ejemplo asigna el objeto <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code> <small>(en-US)</small></a> al elemento apropiado.</p>\n\n<pre class=\"notranslate\">var p = navigator.mediaDevices.getUserMedia({ audio: true, video: true });\n\np.then(function(mediaStream) {\n  var video = document.querySelector('video');\n  video.src = window.URL.createObjectURL(mediaStream);\n  video.onloadedmetadata = function(e) {\n    // Do something with the video here.\n  };\n});\n\np.catch(function(err) { console.log(err.name); }); // always check for errors at the end.</pre>"}},{"type":"prose","value":{"id":"ancho_y_alto","title":"Ancho y alto","isH3":true,"content":"<p>He aquí un ejemplo del uso de <code>mediaDevices.getUserMedia(), </code>incluyendo un polyfill para hacer frente a los navegadores más antiguos.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">promisifiedOldGUM</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">constraints<span class=\"token punctuation\">,</span> successCallback<span class=\"token punctuation\">,</span> errorCallback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// First get ahold of getUserMedia, if present</span>\n  <span class=\"token keyword\">var</span> getUserMedia <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>getUserMedia <span class=\"token operator\">||</span>\n      navigator<span class=\"token punctuation\">.</span>webkitGetUserMedia <span class=\"token operator\">||</span>\n      navigator<span class=\"token punctuation\">.</span>mozGetUserMedia<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Some browsers just don't implement it - return a rejected promise with an error</span>\n  <span class=\"token comment\">// to keep a consistent interface</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>getUserMedia<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getUserMedia is not implemented in this browser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">successCallback<span class=\"token punctuation\">,</span> errorCallback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">,</span> constraints<span class=\"token punctuation\">,</span> successCallback<span class=\"token punctuation\">,</span> errorCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Older browsers might not implement mediaDevices at all, so we set an empty object first</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>mediaDevices <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  navigator<span class=\"token punctuation\">.</span>mediaDevices <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Some browsers partially implement mediaDevices. We can't just assign an object</span>\n<span class=\"token comment\">// with getUserMedia as it would overwrite existing properties.</span>\n<span class=\"token comment\">// Here, we will just add the getUserMedia property if it's missing.</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span>getUserMedia <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span>getUserMedia <span class=\"token operator\">=</span> promisifiedOldGUM<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// Prefer camera resolution nearest to 1280x720.</span>\n<span class=\"token keyword\">var</span> constraints <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">1280</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">720</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nnavigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span>constraints<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  video<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  video<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onloadedmetadata</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    video<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"cuadros_por_segundo","title":"Cuadros por segundo","isH3":true,"content":"<p>Pocos frame-rates ó cuadros por segundo pueden ser deseables  en algunos casos, como transmisiones  WebRTC con restricciones de ancho de banda.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> constraints <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">frameRate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ideal</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">max</span><span class=\"token operator\">:</span> <span class=\"token number\">15</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"camara_frontal_y_camara_trasera","title":"Camara frontal y camara trasera","isH3":true,"content":"<p>En telefonos moviles.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> front <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flip-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> front <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>front<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> constraints <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">facingMode</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>front<span class=\"token operator\">?</span> <span class=\"token string\">\"user\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"environment\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"permisos","title":"Permisos","isH3":false,"content":"<p>Para usar <code>getUserMedia()</code> en una app instalable (por ejemplo, una <a href=\"/en-US/docs/Web/Apps/Build/Building_apps_for_Firefox_OS/Firefox_OS_app_beginners_tutorial\">Firefox OS app</a>), necesitas especificar uno o ambos de los siguientes campos dentro de tu archivo manifest:</p>\n\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string-property property\">\"permissions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"audio-capture\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Required to capture audio using getUserMedia()\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"video-capture\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Required to capture video using getUserMedia()\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n\n<p>Ver <a href=\"/en-US/docs/Web/Apps/Developing/App_permissions#audio-capture\">permission: audio-capture</a> y  <a href=\"/en-US/docs/Web/Apps/Developing/App_permissions#video-capture\">permission: video-capture</a> para más información.</p>"}},{"type":"prose","value":{"id":"especificaciones","title":"Especificaciones","isH3":false,"content":"<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Specification</th>\n   <th scope=\"col\">Status</th>\n   <th scope=\"col\">Comment</th>\n  </tr>\n  <tr>\n   <td><a href=\"https://w3c.github.io/mediacapture-main/#dom-mediadevices-getusermedia\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Media Capture and Streams<br><small lang=\"es\">La definición de 'MediaDevices.getUserMedia()' en esta especificación.</small></a></td>\n   <td><span class=\"spec-cr\">Candidate Recommendation</span></td>\n   <td>Initial definition</td>\n  </tr>\n </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidad con navegadores","id":"compatibilidad_con_navegadores","isH3":false,"query":"api.MediaDevices.getUserMedia","dataURL":"/es/docs/Web/API/MediaDevices/getUserMedia/bcd.json"}},{"type":"prose","value":{"id":"ver_también","title":"Ver También","isH3":false,"content":"<ul>\n <li>The older <a href=\"/en-US/docs/Web/API/Navigator/getUserMedia\">navigator.getUserMedia</a> legacy API.</li>\n <li><a href=\"/en-US/docs/Web/API/MediaDevices/enumerateDevices\">navigator.enumerateDevices</a> - learn the types and number of devices the user has available.</li>\n <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC</a> - the introductory page to the API</li>\n <li><a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API\">MediaStream API</a> - the API for the media stream objects</li>\n <li><a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API/Taking_still_photos\">Taking webcam photos</a> - a tutorial on using <code>getUserMedia() for taking photos rather than video.</code></li>\n</ul>"}}],"toc":[{"text":"Sintaxis","id":"sintaxis"},{"text":"<strong>Ejemplos</strong>","id":"ejemplos"},{"text":"Permisos","id":"permisos"},{"text":"Especificaciones","id":"especificaciones"},{"text":"Compatibilidad con navegadores","id":"compatibilidad_con_navegadores"},{"text":"Ver También","id":"ver_también"}],"summary":"El método MediaDevices.getUserMedia() solicita al usuario permisos para usar un dispositivo de entrada de vídeo y/o uno de audio como una cámara o compartir la pantalla y/o micrófono. Si el usuario proporciona los permisos, entonces le retornará un Promise (en-US) que es resuelto por el resultado del objeto MediaStream. Si el usuario niega el permiso, o si el recurso multimedia no es válido, entonces el promise es rechazado con PermissionDeniedError o NotFoundError respectivamente. Nótese que es posible que el promise retornado no sea ni resuelto ni rechazado, ya que no se requiere que el usuario tome una decisión.","popularity":0.0008,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MediaDevices.getUserMedia()","locale":"en-US","native":"English (US)"},{"title":"MediaDevices.getUserMedia()","locale":"fr","native":"Français"},{"title":"MediaDevices.getUserMedia()","locale":"ja","native":"日本語"},{"title":"MediaDevices.getUserMedia()","locale":"ko","native":"한국어"},{"title":"MediaDevices.getUserMedia()","locale":"ru","native":"Русский"},{"title":"MediaDevices.getUserMedia()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"es/web/api/mediadevices/getusermedia","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/api/mediadevices/getusermedia/index.html","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.html"},"parents":[{"uri":"/es/docs/Web","title":"Tecnología para desarrolladores web"},{"uri":"/es/docs/Web/API","title":"Referencia de la API Web"},{"uri":"/es/docs/Web/API/MediaDevices","title":"MediaDevices"},{"uri":"/es/docs/Web/API/MediaDevices/getUserMedia","title":"MediaDevices.getUserMedia()"}],"pageTitle":"MediaDevices.getUserMedia() - Referencia de la API Web | MDN","noIndexing":false}}