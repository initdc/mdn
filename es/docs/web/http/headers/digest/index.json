{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"SubtleCrypto.digest()","mdn_url":"/es/docs/Web/HTTP/Headers/Digest","locale":"es","native":"Español","sidebarHTML":"<ol><li><strong><a href=\"/es/docs/Web/API/Web_Crypto_API\">Web Crypto API</a></strong></li><li><strong><a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>Web</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Páginas relacionadas a Web Crypto API</summary><ol><li><a href=\"/es/docs/Web/API/Crypto\"><code>Crypto</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CryptoKey\"><code>CryptoKey</code> <small>(en-US)</small></a></li><li><a href=\"/es/docs/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a></li><li><a href=\"/es/docs/Web/API/crypto_property\"><code>crypto_property</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>El método <strong><code>digest()</code></strong> de la interfaz <a href=\"/es/docs/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> genera un digest de los datos proveidos. Un <a class=\"page-not-created\" title=\"La documentación acerca de este tema no ha sido escrita todavía . ¡Por favor  considera contribuir !\"><code>digest</code></a> es un valor corto de longitud fija derivado de alguna entrada de longitud variable. Los digest criptográficos deben mostrar resistencia a colisiones, lo que significa que es difícil encontrar dos entradas diferentes que tengan el mismo valor de digest.</p>\n<p>Toma como argumento un identificador para el algoritmo digest a utilizar y los datos a codificar. Devuelve un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a> que se completará con el digest.</p>"}},{"type":"prose","value":{"id":"sintaxis","title":"Sintaxis","isH3":false,"content":"<pre class=\"notranslate\">const digest = crypto.subtle.digest(algorithm, data);\n</pre>"}},{"type":"prose","value":{"id":"parámetros","title":"Parámetros","isH3":true,"content":"<ul>\n  <li><em><code>algorithm</code></em> es un <a href=\"/es/docs/conflicting/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> definiendo la función hash a utilizar. Los valores admitidos son:\n    <ul>\n      <li><code>SHA-1</code> (pero no debe utilizarse en aplicaciones criptográficas)</li>\n      <li><code>SHA-256</code></li>\n      <li><code>SHA-384</code></li>\n      <li><code>SHA-512</code></li>\n    </ul>\n  </li>\n  <li><em><code>data</code></em> es un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> o <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>ArrayBufferView</code> <small>(en-US)</small></a> que contiene los datos a ser digitalizados.</li>\n</ul>"}},{"type":"prose","value":{"id":"valor_de_retorno","title":"Valor de retorno","isH3":true,"content":"<ul>\n  <li><code>digest</code> es un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/Promise\" title=\"The Promise object represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.\"><code>Promise</code></a> que se completa con un <a href=\"/es/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> conteniendo el digest.</li>\n</ul>"}},{"type":"prose","value":{"id":"algoritmos_soportados","title":"Algoritmos soportados","isH3":false,"content":"<p>Los argoritmos digest, también conocidos como <a href=\"/en-US/docs/Glossary/Cryptographic_hash_function\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">funciones criptográficas hash (en-US)</a>, transforman un bloque de datos arbitrariamente grande en una salida de tamaño fijo, normalmente mucho más corta que la entrada. Tienen una variedad de aplicaciones en criptografía.</p>"}},{"type":"prose","value":{"id":"sha-1","title":"SHA-1","isH3":true,"content":"<p>Este algoritmo se especifica en <a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\" class=\"external\" rel=\" noopener\">FIPS 180-4</a>, sección 6.1, y produce una salida de 160 bits de largo.</p>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>Advertencia:</strong> Este algoritmo se considera ahora vulnerable y no debe utilizarse para aplicaciones criptográficas.</p>\n</div>"}},{"type":"prose","value":{"id":"sha-256","title":"SHA-256","isH3":true,"content":"<p>Este algoritmo se especifica en <a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\" class=\"external\" rel=\" noopener\">FIPS 180-4</a>, sección 6.2, y produce una salida de 256 bits de largo.</p>"}},{"type":"prose","value":{"id":"sha-384","title":"SHA-384","isH3":true,"content":"<p>Este algoritmo se especifica en <a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\" class=\"external\" rel=\" noopener\">FIPS 180-4</a>, sección 6.5, y produce una salida de 384 bits de largo.</p>"}},{"type":"prose","value":{"id":"sha-512","title":"SHA-512","isH3":true,"content":"<p>Este algoritmo se especifica en <a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\" class=\"external\" rel=\" noopener\">FIPS 180-4</a>, sección 6.4, y produce una salida de 512 bits de largo.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Nota:</strong> Sugerencia: Si estás buscando aquí cómo crear un código de autenticación de mensajes \"keyed-hash\" (<a href=\"/en-US/docs/Glossary/HMAC\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">HMAC (en-US)</a>), necesitas usar <a href=\"/en-US/docs/Web/API/SubtleCrypto/sign\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">SubtleCrypto.sign() (en-US)</a> en su lugar.</p>\n</div>"}},{"type":"prose","value":{"id":"ejemplos","title":"Ejemplos","isH3":false,"content":""}},{"type":"prose","value":{"id":"ejemplo_básico","title":"Ejemplo básico","isH3":true,"content":"<p>Este ejemplo codifica un mensaje, luego calcula su digest SHA-256 y muestra la longitud del mismo:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token string\">'An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth.'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">digestMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> hash <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> crypto<span class=\"token punctuation\">.</span>subtle<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SHA-256'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> hash<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> digestBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">digestMessage</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>digestBuffer<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"convirtiendo_un_digest_a_una_cadena_hexadecimal","title":"Convirtiendo un digest a una cadena hexadecimal","isH3":true,"content":"<p>El resumen se devuelve como un <code>ArrayBuffer</code>, pero para la comparación y visualización los digests se representan a menudo como cadenas hexadecimales. Este ejemplo calcula un digest, y luego convierte el <code>ArrayBuffer</code> a un string hexadecimal:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token string\">'An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth.'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">digestMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> msgUint8 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\">// encode as (utf-8) Uint8Array</span>\n  <span class=\"token keyword\">const</span> hashBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> crypto<span class=\"token punctuation\">.</span>subtle<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SHA-256'</span><span class=\"token punctuation\">,</span> msgUint8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// hash the message</span>\n  <span class=\"token keyword\">const</span> hashArray <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>hashBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// convert buffer to byte array</span>\n  <span class=\"token keyword\">const</span> hashHex <span class=\"token operator\">=</span> hashArray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span> <span class=\"token operator\">=&gt;</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// convert bytes to hex string</span>\n  <span class=\"token keyword\">return</span> hashHex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> digestHex <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">digestMessage</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>digestHex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"especificaciones","title":"Especificaciones","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Especificación</th>\n      <th>Estado</th>\n      <th>Comentario</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.w3.org/TR/WebCryptoAPI/#dfn-SubtleCrypto-method-digest\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Web Cryptography API<br><small lang=\"es\">La definición de 'SubtleCrypto.digest()' en esta especificación.</small></a></td>\n      <td><span class=\"spec-rec\">Recommendation</span></td>\n      <td>Definición inicial.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilidad del navegador","id":"compatibilidad_del_navegador","isH3":false,"query":"api.SubtleCrypto.digest","dataURL":"/es/docs/Web/HTTP/Headers/Digest/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Nota:</strong> En Chrome 60, se añadió una característica que deshabilita crypto.subtle para conexiones no TLS.</p>\n</div>"}},{"type":"prose","value":{"id":"ver_también","title":"Ver también","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\" class=\"external\" rel=\" noopener\">Chromium especificación de origines seguro</a></li>\n  <li><a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\" class=\"external\" rel=\" noopener\">FIPS 180-4</a> especifica la familia de algoritmos de digest SHA.</li>\n</ul>"}}],"toc":[{"text":"Sintaxis","id":"sintaxis"},{"text":"Algoritmos soportados","id":"algoritmos_soportados"},{"text":"Ejemplos","id":"ejemplos"},{"text":"Especificaciones","id":"especificaciones"},{"text":"Compatibilidad del navegador","id":"compatibilidad_del_navegador"},{"text":"Ver también","id":"ver_también"}],"summary":"El método digest() de la interfaz SubtleCrypto genera un digest de los datos proveidos. Un digest es un valor corto de longitud fija derivado de alguna entrada de longitud variable. Los digest criptográficos deben mostrar resistencia a colisiones, lo que significa que es difícil encontrar dos entradas diferentes que tengan el mismo valor de digest.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Digest","locale":"en-US","native":"English (US)"},{"title":"Digest","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Digest","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"es/web/http/headers/digest","github_url":"https://github.com/mdn/translated-content/blob/main/files/es/web/http/headers/digest/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/es/docs/Web","title":"Tecnología para desarrolladores web"},{"uri":"/es/docs/Web/HTTP","title":"HTTP"},{"uri":"/es/docs/Web/HTTP/Headers","title":"HTTP headers"},{"uri":"/es/docs/Web/HTTP/Headers/Digest","title":"SubtleCrypto.digest()"}],"pageTitle":"SubtleCrypto.digest() - HTTP | MDN","noIndexing":false}}