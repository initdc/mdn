{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Suivre le score et gagner","mdn_url":"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Track_the_score_and_win","locale":"fr","native":"Français","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/fr/docs/Games/Anatomy\">Anatomie d'un jeu vidéo</a></li>\n              <li><a href=\"/fr/docs/Games/Examples\">Exemples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>API pour le développement de jeux</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/fr/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/fr/docs/Web/API/Fullscreen_API\">Full Screen (plein écran)</a></li>\n              <li><a href=\"/fr/docs/Web/API/Gamepad_API\">Gamepad (manette)</a></li>\n              <li><a href=\"/fr/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/fr/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/fr/docs/Web/API/Pointer_Lock_API\">Pointer Lock (verrou de pointeur)</a></li>\n              <li><a href=\"/fr/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays (tableaux typés)</a></li>\n              <li><a href=\"/fr/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebVR_API\">WebVR (réalité virtuelle)</a></li>\n              <li><a href=\"/fr/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/fr/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Techniques/Async_scripts\">Utiliser des scripts asynchrones pour asm.js</a></li>\n              <li><a href=\"/fr/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimiser les performances de démarrage</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/WebRTC_data_channels\">Utiliser WebRTC - canaux de données pair-à-pair</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Efficient_animation_for_web_games\">Animation efficace pour un jeu internet</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Audio_for_Web_Games\">Audio pour les jeux web</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/2D_collision_detection\">Détection de collision 2D</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Tilemaps\">Carreaux et carrelages</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Jeux 3D sur le Web</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web\">Aperçu des jeux 3D sur le Web</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Théorie de base sur la 3D</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Construire une démo avec A-Frame</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Construire une démo avec Babylon.js</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Construire une démo avec PlayCanvas</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Construire une démo avec Three.js</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR (réalité virtuelle)</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_collision_detection\">Détection de collision en 3D</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Détection de collision de volumes avec THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Mise en place des contrôle du jeu</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms\">Aperçu des mécanismes de contrôle du jeu</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Commandes tactiles mobiles</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Commandes à la souris et au clavier</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Commandes à la manette</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Other\">Contrôles non conventionnels</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutoriels</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">Jeu de casse-briques 2D avec du pur JavaScript</a></li>\n              <li><a href=\"/fr/docs/Games/Tutorials/2D_breakout_game_Phaser\">Jeu de casse-tête 2D avec Phaser</a></li>\n              <li><a href=\"/fr/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">Jeu de labyrinthe 2D avec orientation du périphérique</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">Jeu de plateforme 2D avec Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publication de jeux</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Publishing_games\">Aperçu des outils de publication des jeux</a></li>\n              <li><a href=\"/fr/docs/Games/Publishing_games/Game_distribution\">Distribution des jeux</a></li>\n              <li><a href=\"/fr/docs/Games/Publishing_games/Game_promotion\">Promotion des jeux</a></li>\n              <li><a href=\"/fr/docs/Games/Publishing_games/Game_monetization\">Monétisation des jeux</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\">« Précédent</a></li>\n    <li><a class=\"button minimal\" href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Mouse_controls\">Suivant  »</a></li>\n</ul>\n<p>Ceci est la <strong>8<sup>e</sup></strong> étape de ce <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">tutoriel Gamedev Canvas (en-US)</a>. Vous pouvez trouver le code source tel qu'il devrait être après avoir terminé cette leçon à : <a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson08.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson8.html</a>.</p>\n<p>Détruire les briques est vraiment cool, mais pour être encore meilleur le jeu pourrait attribuer des points pour chaque brique touchée et compter le score total.</p>"}},{"type":"prose","value":{"id":"calculer_le_score","title":"Calculer le score","isH3":false,"content":"<p>Si vous pouvez voir votre score durant le jeu, vous pourrez impressioner vos amis. Vous avez besoin d'une variable pour stocker le score. Ajoutez ce qui suit dans votre JavaScript après le reste de vos variables :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> score <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Vous avez aussi besoin d'une fonction <code>drawScore()</code>, pour créer et mettre à jour l'affichage du score. Ajoutez ce qui suit après la fonction de détection de collision <code>collisionDetection()</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> <span class=\"token string\">\"16px Arial\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Score: \"</span><span class=\"token operator\">+</span>score<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Dessiner du texte sur un canvas revient à dessiner une forme. La définition de la police est identique à celle en CSS — vous pouvez définir la taille et le type avec la méthode <a href=\"/fr/docs/Web/API/CanvasRenderingContext2D/font\" title=\"font()\"><code>font()</code></a>. Puis utilisez <a href=\"/fr/docs/Web/API/CanvasRenderingContext2D/fillStyle\" title=\"fillStyle()\"><code>fillStyle()</code></a> pour définir la couleur de la police et <a href=\"/fr/docs/Web/API/CanvasRenderingContext2D/fillText\" title=\"fillText()\"><code>fillText()</code></a> pour définir la position du texte sur le canevas. Le premier paramètre est le texte lui-même — le code ci-dessus indique le nombre actuel de points — et les deux derniers paramètres sont les coordonnées où le texte est placé sur le canevas.</p>\n<p>Pour attribuer le score à chaque collision avec une brique, ajoutez une ligne à la fonction <code>collisionDetection()</code> afin d'incrémenter la valeur de la variable score à chaque détection d'une collision. Ajoutez à votre code la ligne mise en évidence ci-dessous :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">collisionDetection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>brickWidth <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>brickHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n                    b<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    score<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Appelez la fonction <code>drawScore()</code> dans la fonction <code>draw()</code> pour garder le score à jour à chaque nouvelle frame — ajoutez la ligne suivante dans la fonction <code>draw()</code>, en dessous de l'appel à <code>drawPaddle()</code>&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">drawScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ajoutez_un_message_de_victoire_lorsque_toutes_les_briques_ont_été_détruites","title":"Ajoutez un message de victoire lorsque toutes les briques ont été détruites","isH3":false,"content":"<p>Le comptage des points fonctionne bien, mais vous ne les compterez pas indéfiniment. Alors qu'en est-il du score lorsque toutes les briques ont été détruites ? Après tout c'est l'objectif principal du jeu. Vous devez donc afficher un message de victoire si toutes les briques ont été détruites. Ajoutez la section mise en évidence dans votre fonction <code>collisionDetection()</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">collisionDetection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>brickWidth <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>brickHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n                    b<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    score<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>score <span class=\"token operator\">==</span> brickRowCount<span class=\"token operator\">*</span>brickColumnCount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C'est gagné, Bravo!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        document<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Needed for Chrome to end game</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Grâce à ça, les utilisateurs peuvent réellement gagner le jeu. La fonction <code>document.location.reload()</code> recharge la page et redémarre le jeu au clic sur le bouton d'alerte.</p>"}},{"type":"prose","value":{"id":"comparez_votre_code","title":"Comparez votre code","isH3":false,"content":"<p>Le code réalisé fonctionne et ressemble à cela, au cas où vous voudriez le comparer avec le vôtre :</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"395\" src=\"https://jsfiddle.net/raymondjplante/b3z2Lpu9/embedded/\" loading=\"lazy\"></iframe></p>\n<p><strong>Exercice</strong>: Ajoutez plus de points par brique touchée et indiquez le nombre de points gagnés dans la boîte d'alerte de fin de partie.</p>"}},{"type":"prose","value":{"id":"prochaine_étape","title":"Prochaine étape","isH3":false,"content":"<p>Le jeu est plutôt réussi à ce stade. Dans la prochaine leçon, vous le rendrez plus attraynt en ajoutant le <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Mouse_controls\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">contrôle à la souris (en-US)</a>.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\">« Précédent</a></li>\n    <li><a class=\"button minimal\" href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Mouse_controls\">Suivant  »</a></li>\n</ul>"}}],"toc":[{"text":"Calculer le score","id":"calculer_le_score"},{"text":"Ajoutez un message de victoire lorsque toutes les briques ont été détruites","id":"ajoutez_un_message_de_victoire_lorsque_toutes_les_briques_ont_été_détruites"},{"text":"Comparez votre code","id":"comparez_votre_code"},{"text":"Prochaine étape","id":"prochaine_étape"}],"summary":"Ceci est la 8e étape de ce tutoriel Gamedev Canvas (en-US). Vous pouvez trouver le code source tel qu'il devrait être après avoir terminé cette leçon à : Gamedev-Canvas-workshop/lesson8.html.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Track the score and win","locale":"en-US","native":"English (US)"},{"title":"Poner un contador y terminar ganando","locale":"es","native":"Español"},{"title":"スコアと勝ち負けを記録する","locale":"ja","native":"日本語"},{"title":"점수 추가와 승패 판정 방법","locale":"ko","native":"한국어"},{"title":"Счёт и выигрыш","locale":"ru","native":"Русский"},{"title":"跟踪得分和获胜","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/games/tutorials/2d_breakout_game_pure_javascript/track_the_score_and_win","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/games/tutorials/2d_breakout_game_pure_javascript/track_the_score_and_win/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Games","title":"Développement de jeux vidéo"},{"uri":"/fr/docs/Games/Tutorials","title":"Workflows for different game types"},{"uri":"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"Jeu de casse-briques 2D en pur JavaScript"},{"uri":"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Track_the_score_and_win","title":"Suivre le score et gagner"}],"pageTitle":"Suivre le score et gagner - Développement de jeux vidéo | MDN","noIndexing":false}}