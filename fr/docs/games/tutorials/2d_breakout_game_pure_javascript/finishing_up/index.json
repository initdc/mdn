{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Finitions","mdn_url":"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Finishing_up","locale":"fr","native":"Français","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/fr/docs/Games/Anatomy\">Anatomie d'un jeu vidéo</a></li>\n              <li><a href=\"/fr/docs/Games/Examples\">Exemples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>API pour le développement de jeux</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/fr/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/fr/docs/Web/API/Fullscreen_API\">Full Screen (plein écran)</a></li>\n              <li><a href=\"/fr/docs/Web/API/Gamepad_API\">Gamepad (manette)</a></li>\n              <li><a href=\"/fr/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/fr/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/fr/docs/Web/API/Pointer_Lock_API\">Pointer Lock (verrou de pointeur)</a></li>\n              <li><a href=\"/fr/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays (tableaux typés)</a></li>\n              <li><a href=\"/fr/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebVR_API\">WebVR (réalité virtuelle)</a></li>\n              <li><a href=\"/fr/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/fr/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Techniques/Async_scripts\">Utiliser des scripts asynchrones pour asm.js</a></li>\n              <li><a href=\"/fr/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimiser les performances de démarrage</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/WebRTC_data_channels\">Utiliser WebRTC - canaux de données pair-à-pair</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Efficient_animation_for_web_games\">Animation efficace pour un jeu internet</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Audio_for_Web_Games\">Audio pour les jeux web</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/2D_collision_detection\">Détection de collision 2D</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Tilemaps\">Carreaux et carrelages</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Jeux 3D sur le Web</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web\">Aperçu des jeux 3D sur le Web</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Théorie de base sur la 3D</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Construire une démo avec A-Frame</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Construire une démo avec Babylon.js</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Construire une démo avec PlayCanvas</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Construire une démo avec Three.js</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR (réalité virtuelle)</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_collision_detection\">Détection de collision en 3D</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Détection de collision de volumes avec THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Mise en place des contrôle du jeu</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms\">Aperçu des mécanismes de contrôle du jeu</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Commandes tactiles mobiles</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Commandes à la souris et au clavier</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Commandes à la manette</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Other\">Contrôles non conventionnels</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutoriels</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">Jeu de casse-briques 2D avec du pur JavaScript</a></li>\n              <li><a href=\"/fr/docs/Games/Tutorials/2D_breakout_game_Phaser\">Jeu de casse-tête 2D avec Phaser</a></li>\n              <li><a href=\"/fr/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">Jeu de labyrinthe 2D avec orientation du périphérique</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">Jeu de plateforme 2D avec Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publication de jeux</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Publishing_games\">Aperçu des outils de publication des jeux</a></li>\n              <li><a href=\"/fr/docs/Games/Publishing_games/Game_distribution\">Distribution des jeux</a></li>\n              <li><a href=\"/fr/docs/Games/Publishing_games/Game_promotion\">Promotion des jeux</a></li>\n              <li><a href=\"/fr/docs/Games/Publishing_games/Game_monetization\">Monétisation des jeux</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Mouse_controls\">« Précédent</a></li>\n    \n</ul>\n<p>C'est la dernière étape de ce <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">tutoriel Gamedev Canvas (en-US)</a>. Vous pouvez trouver le code source tel qu'il devrait être après avoir terminé cette leçon à l'adresse <a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson10.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson10.html</a>.</p>\n<p>Il y a toujours des améliorations possibles pour tous les jeux que nous créons. Par exemple, nous pouvons offrir plus d'une vie au joueur. Il peut faire une ou deux erreurs et être encore capable de terminer le jeu. Nous pourrions également améliorer le rendu visuel du jeu.</p>"}},{"type":"prose","value":{"id":"donner_des_vies_au_joueur","title":"Donner des vies au joueur","isH3":false,"content":"<p>Mettre en œuvre des vies est assez simple. Ajoutons d'abord une variable pour stocker le nombre de vies à l'endroit où nous avons déclaré nos autres variables :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> lives <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>L'affichage du compteur de vie est similaire à celui du compteur de points — ajoutez la fonction suivante à votre code, sous la fonction <code>drawScore()</code> :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawLives</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> <span class=\"token string\">\"16px Arial\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lives: \"</span><span class=\"token operator\">+</span>lives<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token operator\">-</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Au lieu de mettre immédiatement fin au jeu, nous allons réduire le nombre de vies jusqu'à ce qu'il n'y en ait plus. Nous pouvons également réinitialiser les positions du ballon et de la raquette lorsque le joueur commence sa prochaine vie. Ainsi, dans la fonction <code>draw()</code>, remplacez les trois lignes suivantes :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GAME OVER\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Needed for Chrome to end game</span>\n</code></pre></div>\n<p>Nous pouvons ainsi y ajouter une logique un peu plus complexe, comme indiqué ci-dessous :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>lives<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>lives<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GAME OVER\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Needed for Chrome to end game</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    x <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n    dx <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    paddleX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token operator\">-</span>paddleWidth<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Maintenant, quand la balle frappe le bord inférieur de l'écran, nous soustrayons une vie de la variable <code>lives</code>. S'il n'y a plus de vies, la partie est perdue ; s'il reste encore des vies, alors la position de la balle et la raquette sont remises à zéro, ainsi que le mouvement de la balle.</p>"}},{"type":"prose","value":{"id":"afficher_le_compteur_de_vies","title":"Afficher le compteur de vies","isH3":true,"content":"<p>Maintenant, vous devez ajouter un appel à <code>drawLives()</code> dans la fonction <code>draw()</code> et l'ajouter sous l'appel <code>drawScore()</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">drawLives</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"améliorer_le_rendu_avec_requestanimationframe","title":"Améliorer le rendu avec requestAnimationFrame()","isH3":false,"content":"<p>Maintenant, travaillons sur quelque chose qui n'est pas lié à la mécanique du jeu, mais à la façon dont il est rendu. <a href=\"/fr/docs/Web/API/Window/requestAnimationFrame\" title=\"requestAnimationFrame\"><code>requestAnimationFrame</code></a> aide le navigateur à rendre le jeu mieux que la cadence fixe que nous avons actuellement mise en place en utilisant <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/setInterval\"><code>setInterval()</code> <small>(en-US)</small></a>. Remplacez la ligne suivante :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> interval <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>avec simplement :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>et supprimez chaque occurence de :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Needed for Chrome to end game</span>\n</code></pre></div>\n<p>Ensuite, tout en bas de la fonction <code>draw()</code> (juste avant l'accolade de fermeture), ajoutez la ligne suivante, ce qui fait que la fonction <code>draw()</code> s'appelle encore et encore :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>La fonction <code>draw()</code> est maintenant exécutée indéfiniment dans une boucle <code>requestAnimationFrame()</code>, mais au lieu de la cadence fixe de 10 millisecondes, nous redonnons le contrôle de la cadence au navigateur. Il synchronisera la cadence en conséquence et ne n'acutalisera l'affichage que lorsque cela sera nécessaire. Cela permet d'obtenir une boucle d'animation plus efficace et plus fluide que l'ancienne méthode <code>setInterval()</code>.</p>"}},{"type":"prose","value":{"id":"comparez_votre_code_your_code","title":"Comparez votre code your code","isH3":false,"content":"<p>C'est tout — la version finale du jeu est prête et prête à être lancée !</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"395\" src=\"https://jsfiddle.net/raymondjplante/dfh2tpu1/embedded/\" loading=\"lazy\"></iframe></p>\n<p><strong>Exercice</strong>: changer le nombre de vies et l'angle de rebond de la balle sur la raquette.</p>"}},{"type":"prose","value":{"id":"game_over_-_pour_linstant_!","title":"Game over - pour l'instant !","isH3":false,"content":"<p>Vous avez terminé toutes les leçons - félicitations ! À ce stade, vous devriez maintenant connaître les bases de la manipulation des Canevas et la logique des jeux simples en 2D. C'est maintenant le bon moment pour apprendre quelques frameworks et continuer le développement du jeu. Vous pouvez découvrir le pendant de cette série, le <a href=\"/fr/docs/Games/Tutorials/2D_breakout_game_Phaser\">casse-brique 2D utilisant Phaser</a> ou le <a href=\"/fr/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">tutoriel Cyber Orb</a> construit avec Phaser. Vous pouvez également consulter la section <a href=\"/fr/docs/Games\">Jeux sur MDN</a> pour vous inspirer et approfondir vos connaissances.</p>\n<p>Vous pouvez également revenir à la <a href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">page d'accueil</a> de cette série de tutoriels. Amusez-vous bien à coder !</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Mouse_controls\">« Précédent</a></li>\n    \n</ul>"}}],"toc":[{"text":"Donner des vies au joueur","id":"donner_des_vies_au_joueur"},{"text":"Améliorer le rendu avec requestAnimationFrame()","id":"améliorer_le_rendu_avec_requestanimationframe"},{"text":"Comparez votre code your code","id":"comparez_votre_code_your_code"},{"text":"Game over - pour l'instant !","id":"game_over_-_pour_linstant_!"}],"summary":"C'est la dernière étape de ce tutoriel Gamedev Canvas (en-US). Vous pouvez trouver le code source tel qu'il devrait être après avoir terminé cette leçon à l'adresse Gamedev-Canvas-workshop/lesson10.html.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Finishing up","locale":"en-US","native":"English (US)"},{"title":"Terminando","locale":"es","native":"Español"},{"title":"仕上げ","locale":"ja","native":"日本語"},{"title":"개발 마무리","locale":"ko","native":"한국어"},{"title":"Заключение","locale":"ru","native":"Русский"},{"title":"收尾工作","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/games/tutorials/2d_breakout_game_pure_javascript/finishing_up","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/games/tutorials/2d_breakout_game_pure_javascript/finishing_up/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Games","title":"Développement de jeux vidéo"},{"uri":"/fr/docs/Games/Tutorials","title":"Workflows for different game types"},{"uri":"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"Jeu de casse-briques 2D en pur JavaScript"},{"uri":"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Finishing_up","title":"Finitions"}],"pageTitle":"Finitions - Développement de jeux vidéo | MDN","noIndexing":false}}