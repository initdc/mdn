{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Créer les briques","mdn_url":"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field","locale":"fr","native":"Français","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/fr/docs/Games/Anatomy\">Anatomie d'un jeu vidéo</a></li>\n              <li><a href=\"/fr/docs/Games/Examples\">Exemples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>API pour le développement de jeux</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/fr/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/fr/docs/Web/API/Fullscreen_API\">Full Screen (plein écran)</a></li>\n              <li><a href=\"/fr/docs/Web/API/Gamepad_API\">Gamepad (manette)</a></li>\n              <li><a href=\"/fr/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/fr/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/fr/docs/Web/API/Pointer_Lock_API\">Pointer Lock (verrou de pointeur)</a></li>\n              <li><a href=\"/fr/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays (tableaux typés)</a></li>\n              <li><a href=\"/fr/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/fr/docs/Web/API/WebVR_API\">WebVR (réalité virtuelle)</a></li>\n              <li><a href=\"/fr/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/fr/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Techniques/Async_scripts\">Utiliser des scripts asynchrones pour asm.js</a></li>\n              <li><a href=\"/fr/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimiser les performances de démarrage</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/WebRTC_data_channels\">Utiliser WebRTC - canaux de données pair-à-pair</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Efficient_animation_for_web_games\">Animation efficace pour un jeu internet</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Audio_for_Web_Games\">Audio pour les jeux web</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/2D_collision_detection\">Détection de collision 2D</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Tilemaps\">Carreaux et carrelages</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Jeux 3D sur le Web</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web\">Aperçu des jeux 3D sur le Web</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Théorie de base sur la 3D</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Construire une démo avec A-Frame</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Construire une démo avec Babylon.js</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Construire une démo avec PlayCanvas</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Construire une démo avec Three.js</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR (réalité virtuelle)</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_collision_detection\">Détection de collision en 3D</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Détection de collision de volumes avec THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Mise en place des contrôle du jeu</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms\">Aperçu des mécanismes de contrôle du jeu</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Commandes tactiles mobiles</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Commandes à la souris et au clavier</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Commandes à la manette</a></li>\n              <li><a href=\"/fr/docs/Games/Techniques/Control_mechanisms/Other\">Contrôles non conventionnels</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutoriels</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">Jeu de casse-briques 2D avec du pur JavaScript</a></li>\n              <li><a href=\"/fr/docs/Games/Tutorials/2D_breakout_game_Phaser\">Jeu de casse-tête 2D avec Phaser</a></li>\n              <li><a href=\"/fr/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">Jeu de labyrinthe 2D avec orientation du périphérique</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">Jeu de plateforme 2D avec Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publication de jeux</summary>\n            <ol>\n              <li><a href=\"/fr/docs/Games/Publishing_games\">Aperçu des outils de publication des jeux</a></li>\n              <li><a href=\"/fr/docs/Games/Publishing_games/Game_distribution\">Distribution des jeux</a></li>\n              <li><a href=\"/fr/docs/Games/Publishing_games/Game_promotion\">Promotion des jeux</a></li>\n              <li><a href=\"/fr/docs/Games/Publishing_games/Game_monetization\">Monétisation des jeux</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over\">« Précédent</a></li>\n    <li><a class=\"button minimal\" href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\">Suivant  »</a></li>\n</ul>\n<p>Il s'agit de la <strong>6ème étape</strong> sur 10 du <a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Gamedev Canvas tutorial (en-US)</a>. Vous pouvez trouver le code source après avoir complété cette leçon à : <a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson06.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson6.html</a>.</p>\n<p>Après avoir modifié la mécanique du Gameplay, nous sommes maintenant en mesure de perdre. Et ça c'est top car on a enfin l'impression de jouer à un vrai jeu. Cependant, ça devient vite ennuyeux si la balle ne fait que rebondir sur la raquette. Ce dont a vraiment besoin un jeu de casse-brique c'est des briques à détruire avec la balle. Et c'est ce que nous allons faire maintenant.</p>"}},{"type":"prose","value":{"id":"mettre_en_place_les_variables_brique","title":"Mettre en place les variables \"Brique\"","isH3":false,"content":"<p>Le principal objectif de cette leçon est d'avoir quelques lignes de code pour afficher les briques, en utilisant une boucle imbriquée qui va parcourir un tableau à deux dimensions. Cependant nous avons besoin de définir quelques variables pour stocker des informations décrivant les briques, telles que leur largeur, leur hauteur, les colonnes et les lignes, etc. Ajoutez les lignes suivantes dans votre code, sous les variables préalablement déclarées.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> brickRowCount <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickColumnCount <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickWidth <span class=\"token operator\">=</span> <span class=\"token number\">75</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickHeight <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickPadding <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickOffsetTop <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickOffsetLeft <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Ici nous avons défini dans l'ordre le nombre de lignes et de colonnes de briques, mais également une hauteur, une largeur et un espacement (<em>padding</em>) entre les briques pour qu'elles ne se touchent pas entre elles et qu'elles ne commencent pas a être tracées sur le bord du canevas.</p>\n<p>\n  Nous allons placer nos briques dans un tableau à deux dimensions. Il contiendra les colonnes de briques (c), qui à leur tour contiendront les lignes de briques (r) qui chacune contiendront un objet défini par une position <code>x</code> et <code>y</code> pour afficher chaque brique sur l'écran.\n  Ajoutez le code suivant juste en-dessous des variables :\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> bricks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Le code ci-dessus va parcourir les lignes et les colonnes et créer de nouvelles briques. REMARQUE : les objets briques seront également utilisés plus tard afin de détecter les collisions.</p>"}},{"type":"prose","value":{"id":"logique_de_dessin_des_briques","title":"Logique de dessin des briques","isH3":false,"content":"<p>Maintenant créons une fonction pour parcourir toutes les briques dans le tableau et les dessiner sur l'écran. Notre code pourrait ressembler à ça :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> brickWidth<span class=\"token punctuation\">,</span> brickHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Une nouvelle fois, nous parcourons les colonnes et les lignes pour attribuer une position <code>x</code> et <code>y</code> à chaque brique, et nous dessinons les briques — de taille&nbsp;: <code>brickWidth</code> x <code>brickHeight</code> — sur le canevas, pour chaque itération de la boucle. Le problème est que nous les affichons toutes au même endroit, aux coordonnées <code>(0,0)</code>. Ce dont nous avons besoin d'inclure ce sont quelques calculs qui vont définir la position <code>x</code> et <code>y</code> de chaque brique à chaque passage dans la boucle&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> brickX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickWidth<span class=\"token operator\">+</span>brickPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickOffsetLeft<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> brickY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickHeight<span class=\"token operator\">+</span>brickPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickOffsetTop<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Chaque position <code>brickX</code> est déterminée par <code>brickWidth</code> + <code>brickPadding</code>, multiplié par le nombre de colonnes, <code>c</code>, plus <code>brickOffsetLeft</code>; la logique pour <code>brickY</code> est identique excepté qu'on utilise pour les ligne les valeurs <code>r</code>,<code>brickHeight</code> et <code>brickOffsetTop</code>. Maintenant chaque brique peut être dessinée à la bonne place - en lignes et colonnes, avec un espacement entre les briques, avec un espace par rapport à la gauche et au haut du contour du canvas.</p>\n<p>La version finale de la fonction <code>drawBricks()</code>, après avoir assigné les valeurs <code>brickX</code> et <code>brickY</code> comme coordonnées, plutot que <code>(0,0)</code> à chaque fois, va ressembler à ceci — ajouter la fonction ci-dessous après <code>drawPaddle()</code>&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">drawBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> c<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> c<span class=\"token operator\">&lt;</span>brickColumnCount<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> r<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> r<span class=\"token operator\">&lt;</span>brickRowCount<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> brickX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickWidth<span class=\"token operator\">+</span>brickPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickOffsetLeft<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> brickY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>brickHeight<span class=\"token operator\">+</span>brickPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>brickOffsetTop<span class=\"token punctuation\">;</span>\n            bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> brickX<span class=\"token punctuation\">;</span>\n            bricks<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> brickY<span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>brickX<span class=\"token punctuation\">,</span> brickY<span class=\"token punctuation\">,</span> brickWidth<span class=\"token punctuation\">,</span> brickHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#0095DD\"</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"afficher_les_briques","title":"Afficher les briques","isH3":false,"content":"<p>La dernière chose à faire dans cette leçon est d'ajouter un appel à <code>drawBricks()</code> quelque part dans la fonction <code>draw()</code>, préférablement au début, entre le nettoyage du canevas et le dessin de la balle. Ajoutez la ligne suivante juste en dessous de <code>drawBall()</code>&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">drawBricks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"comparez_votre_code","title":"Comparez votre code","isH3":false,"content":"<p>À ce stade, le jeu a gagné un peu en intérêt :</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"395\" src=\"https://jsfiddle.net/yumetodo/t1zqmzLp/embedded/\" loading=\"lazy\"></iframe></p>\n<p>Exercice : essayez de changer le nombre de briques dans une colonne ou dans une ligne ou bien leur position.</p>"}},{"type":"prose","value":{"id":"prochaines_étapes","title":"Prochaines étapes","isH3":false,"content":"<p>\n  Nous avons donc maintenant des briques !\n  Mais la balle n'a toujours aucune interaction avec elles. Nous allons donc changer ça dans le chapitre sept : <a href=\"/fr/docs/Web\">Détection des collisions</a>\n</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over\">« Précédent</a></li>\n    <li><a class=\"button minimal\" href=\"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Collision_detection\">Suivant  »</a></li>\n</ul>"}}],"toc":[{"text":"Mettre en place les variables \"Brique\"","id":"mettre_en_place_les_variables_brique"},{"text":"Logique de dessin des briques","id":"logique_de_dessin_des_briques"},{"text":"Afficher les briques","id":"afficher_les_briques"},{"text":"Comparez votre code","id":"comparez_votre_code"},{"text":"Prochaines étapes","id":"prochaines_étapes"}],"summary":"Il s'agit de la 6ème étape sur 10 du Gamedev Canvas tutorial (en-US). Vous pouvez trouver le code source après avoir complété cette leçon à : Gamedev-Canvas-workshop/lesson6.html.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Build the brick field","locale":"en-US","native":"English (US)"},{"title":"Construye el muro de ladrillos","locale":"es","native":"Español"},{"title":"ブロックのかたまりを作る","locale":"ja","native":"日本語"},{"title":"벽돌 만들기","locale":"ko","native":"한국어"},{"title":"Создаём зону кирпичей","locale":"ru","native":"Русский"},{"title":"Build the brick field","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/games/tutorials/2d_breakout_game_pure_javascript/build_the_brick_field","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/games/tutorials/2d_breakout_game_pure_javascript/build_the_brick_field/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Games","title":"Développement de jeux vidéo"},{"uri":"/fr/docs/Games/Tutorials","title":"Workflows for different game types"},{"uri":"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"Jeu de casse-briques 2D en pur JavaScript"},{"uri":"/fr/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field","title":"Créer les briques"}],"pageTitle":"Créer les briques - Développement de jeux vidéo | MDN","noIndexing":false}}