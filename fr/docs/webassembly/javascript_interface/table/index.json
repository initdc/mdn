{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebAssembly.Table()","mdn_url":"/fr/docs/WebAssembly/JavaScript_interface/Table","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects\">Objets standards</a></strong></li><li><strong><a href=\"/fr/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/WebAssembly/JavaScript_interface/compile\"><code>WebAssembly.compile()</code></a></li><li><a href=\"/fr/docs/WebAssembly/JavaScript_interface/compileStreaming\"><code>WebAssembly.compileStreaming()</code></a></li><li><a href=\"/fr/docs/WebAssembly/JavaScript_interface/instantiate\"><code>WebAssembly.instantiate()</code></a></li><li><a href=\"/fr/docs/WebAssembly/JavaScript_interface/instantiateStreaming\"><code>WebAssembly.instantiateStreaming()</code></a></li><li><a href=\"/fr/docs/WebAssembly/JavaScript_interface/validate\"><code>WebAssembly.validate()</code></a></li></ol></li><li><strong>Pages similaires&nbsp;:</strong></li><li><strong><a href=\"/fr/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></strong></li><li><strong><a href=\"/fr/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></strong></li><li><strong><a href=\"/fr/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></strong></li><li><strong><a href=\"/fr/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></strong></li><li><strong><a href=\"/fr/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></strong></li><li><strong><a href=\"/fr/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></strong></li><li><strong><a href=\"/fr/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code></a></strong></li><li><strong><a href=\"/fr/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></strong></li><li><strong>Héritage&nbsp;:</strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Le constructeur <strong><code>WebAssembly.Table()</code></strong> permet de créer un nouvel objet <code>Table</code>.</p>\n<p>Cet objet est une enveloppe JavaScript qui représente un tableau WebAssembly et qui contient des références à des fonctions. Un tableau créé en JavaScript ou dans du code WebAssembly sera accessible et modifiable depuis du code JavaScript et depuis du code WebAssembly.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note :</strong> Actuellement, les tableaux WebAssembly peuvent uniquement stocker des références à des fonctions. Cette fonctionnalité sera vraisemblablement étendue par la suite.</p>\n</div>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> monTableau <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Table</span><span class=\"token punctuation\">(</span>descripteurTableau<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":true,"content":"<dl>\n  <dt id=\"descripteurtableau\"><code>descripteurTableau</code></dt>\n  <dd>\n    <p>Un objet composé des propriétés qui suivent :</p>\n    <dl>\n      <dt id=\"element\"><code>element</code></dt>\n      <dd>\n        <p>Une chaîne de caractères qui représente le type de référence enregistrée dans le tableau. Actuellement, la seule valeur possible est <code>\"anyfunc\"</code> (pour indiquer des fonctions).</p>\n      </dd>\n      <dt id=\"initial\"><code>initial</code></dt>\n      <dd>\n        <p>La longueur initiale du tableau WebAssembly. Cela correspond au nombre d'éléments contenus dans le tableau.</p>\n      </dd>\n      <dt id=\"maximum_facultatif\"><code>maximum <span class=\"badge inline optional\">Facultatif</span></code></dt>\n      <dd>\n        <p>La taille maximale que pourra avoir tableau WebAssembly s'il est étendu.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<ul>\n  <li>Si <code>tableDescriptor</code> n'est pas un objet, une exception <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> sera levée.</li>\n  <li>Si <code>maximum</code> est défini et est inférieur à <code>initial</code>, une exception <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/RangeError\"><code>RangeError</code></a> sera levée.</li>\n</ul>"}},{"type":"prose","value":{"id":"instances_de_table","title":"Instances de <code>Table</code>","isH3":false,"content":"<p>Toutes les instances <code>Table</code> héritent des propriétés <a href=\"/fr/docs/WebAssembly/JavaScript_interface/Table\">du prototype du constructeur</a> <code>Table()</code>. Ce dernier peut être utilisé afin de modifier l'ensemble des instances <code>Table</code>.</p>","titleAsText":"Instances de Table"}},{"type":"prose","value":{"id":"propriétés","title":"Propriétés","isH3":true,"content":"<dl>\n  <dt id=\"table.prototype.constructor\"><code>Table.prototype.constructor</code></dt>\n  <dd>\n    <p>Renvoie la fonction qui a créé l'instance. Par défaut, c'est le constructeur <a href=\"/fr/docs/WebAssembly/JavaScript_interface/Table\" aria-current=\"page\"><code>WebAssembly.Table()</code></a>.</p>\n  </dd>\n  <dt id=\"table.prototype.length\"><a href=\"/fr/docs/WebAssembly/JavaScript_interface/Table/length\"><code>Table.prototype.length</code></a></dt>\n  <dd>\n    <p>Renvoie la longueur du tableau, c'est-à-dire le nombre de références qui sont enregistrées dans le tableau.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"méthodes","title":"Méthodes","isH3":true,"content":"<dl>\n  <dt id=\"table.prototype.get\"><a href=\"/fr/docs/WebAssembly/JavaScript_interface/Table/get\"><code>Table.prototype.get()</code></a></dt>\n  <dd>\n    <p>Une fonction d'accès qui permet d'obtenir l'élément du tableau situé à une position donnée.</p>\n  </dd>\n  <dt id=\"table.prototype.grow\"><a href=\"/fr/docs/WebAssembly/JavaScript_interface/Table/grow\"><code>Table.prototype.grow()</code></a></dt>\n  <dd>\n    <p>Cette méthode permet d'augmenter la taille du tableau <code>Tabl``e</code> d'un incrément donné.</p>\n  </dd>\n  <dt id=\"table.prototype.set\"><a href=\"/fr/docs/WebAssembly/JavaScript_interface/Table/set\"><code>Table.prototype.set()</code></a></dt>\n  <dd>\n    <p>Cette méthode permet de modifier un élément du tableau situé à une position donnée.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":"<p>Dans l'exemple qui suit (tiré du fichier <a href=\"https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html\" class=\"external\" rel=\" noopener\">table2.html</a> et qui dispose <a href=\"https://mdn.github.io/webassembly-examples/js-api-examples/table2.html\" class=\"external\" rel=\" noopener\">d'une démonstration</a>), on crée une nouvelle instance d'un tableau WebAssembly avec une taille initiale permettant de stocker 2 références. Ensuite, on imprime la longueur du tableau et le contenu des deux éléments (obtenus grâce à la méthode <a href=\"/fr/docs/WebAssembly/JavaScript_interface/Table/get\"><code>Table.prototype.get()</code></a> afin de montrer que la longueur vaut 2 et que le tableau ne contient encore aucune référence de fonction (pour les deux positions, on a la valeur <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> tbl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Table</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">initial</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span><span class=\"token string\">\"anyfunc\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Ensuite, on crée un objet d'import qui contient une référence au tableau :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> importObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">js</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">tbl</span><span class=\"token operator\">:</span>tbl\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Enfin, on charge et on instancie un module WebAssembly (table2.wasm) grâce à la fonction <a href=\"/fr/docs/WebAssembly/JavaScript_interface/instantiateStreaming\"><code>WebAssembly.instantiateStreaming()</code></a>. Le module <code>table2.wasm</code> a ajouté deux références de fonctions (cf. <a href=\"https://github.com/mdn/webassembly-examples/blob/0991effbbf2e2cce38a7dbadebd2f3495e3f4e07/js-api-examples/table2.wat\" class=\"external\" rel=\" noopener\">sa représentation textuelle</a>). Chacune de ces fonctions fournit une valeur simple :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiateStreaming</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'table2.wasm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> importObject<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// \"2\"</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"42\"</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"83\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>On voit ici qu'il faut d'abord récupérer la fonction puis effectuer une invocation pour obtenir la valeur correspondante à partir de l'accesseur (autrement dit, on écrit <code>get(0)()</code> plutôt que <code>get(0)</code> pour obtenir le résultat de la fonction) .</p>\n<p>Dans cet exemple, on voit comment créer et manipuler le tableau depuis du code JavaScript mais ce même tableau est également accessible depuis l'instance WebAssembly.</p>"}},{"type":"prose","value":{"id":"spécifications","title":"Spécifications","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Spécification</th>\n      <th>État</th>\n      <th>Commentaires</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://webassembly.github.io/spec/js-api/#webassemblytable-objects\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">WebAssembly JavaScript Interface<br><small lang=\"fr\">La définition de 'Table' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-wd\">Version de travail</span></td>\n      <td>Brouillon de définition initial pour WebAssembly.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"javascript.builtins.WebAssembly.Table","dataURL":"/fr/docs/WebAssembly/JavaScript_interface/Table/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/WebAssembly\">Le portail WebAssembly</a></li>\n  <li><a href=\"/fr/docs/WebAssembly/Concepts\">Les concepts relatifs à WebAssembly</a></li>\n  <li><a href=\"/fr/docs/WebAssembly/Using_the_JavaScript_API\">Utiliser l'API JavaScript WebAssembly</a></li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Instances de <code>Table</code>","id":"instances_de_table"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"Le constructeur WebAssembly.Table() permet de créer un nouvel objet Table.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"WebAssembly.Table","locale":"en-US","native":"English (US)"},{"title":"WebAssembly.Table","locale":"ja","native":"日本語"},{"title":"WebAssembly.Table()","locale":"ko","native":"한국어"},{"title":"WebAssembly.Table","locale":"ru","native":"Русский"},{"title":"WebAssembly.Table()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/webassembly/javascript_interface/table","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/webassembly/javascript_interface/table/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/WebAssembly","title":"WebAssembly"},{"uri":"/fr/docs/WebAssembly/JavaScript_interface","title":"WebAssembly"},{"uri":"/fr/docs/WebAssembly/JavaScript_interface/Table","title":"WebAssembly.Table()"}],"pageTitle":"WebAssembly.Table() - WebAssembly | MDN","noIndexing":false}}