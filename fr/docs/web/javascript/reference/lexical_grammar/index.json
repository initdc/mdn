{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Grammaire lexicale","mdn_url":"/fr/docs/Web/JavaScript/Reference/Lexical_grammar","locale":"fr","native":"Français","sidebarHTML":"\n <ol>\n  <li><a href=\"/fr/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Tutorials\"><strong>Tutoriel&nbsp;:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Débutant</summary>\n      <ol>\n        <li><a href=\"/fr/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">Les bases en JavaScript</a></li>\n        <li><a href=\"/fr/docs/Learn/JavaScript/First_steps\">Premiers pas en JavaScript</a></li>\n        <li><a href=\"/fr/docs/Learn/JavaScript/Building_blocks\">Les briques JavaScript</a></li>\n        <li><a href=\"/fr/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Guide JavaScript</summary>\n      <ol>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Introduction\">Introduction</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Grammar_and_Types\">Types et grammaire</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">Contrôle du flux et gestion des erreurs</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Loops_and_iteration\">Boucles et itération</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Functions\">Fonctions</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Expressions_and_Operators\">Expressions et opérateurs</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Numbers_and_dates\">Nombres et dates</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Text_formatting\">Formatage du texte</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Regular_Expressions\">Expressions rationnelles</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Indexed_collections\">Collections indexées</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Keyed_collections\">Collections avec clés</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Working_with_Objects\">Manipuler les objets</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">Détails du modèle objet</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Using_promises\">Using promises</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Iterators_and_generators\">Itérateurs et générateurs</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Meta_programming\">Meta-programmation</a></li>\n          <li><a href=\"/fr/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Intermédiaire</summary>\n      <ol>\n        <li><a href=\"/fr/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">Client-side JavaScript frameworks</a></li>\n        <li><a href=\"/fr/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">Réintroduction à JavaScript</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Data_structures\">Structures de données en JavaScript</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Equality_comparisons_and_sameness\">Différents tests d'égalité</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Closures\">Closures</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Avancé</summary>\n      <ol>\n        <li><a href=\"/fr/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">Héritage et la chaîne de prototypes</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Reference/Strict_mode\">Mode strict</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Typed_arrays\">Tableaux typés en JavaScript</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Memory_Management\">Gestion de la mémoire</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/EventLoop\">Concurrence et boucle des événements</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/fr/docs/Web/JavaScript/Reference\">Références&nbsp;:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>Objets natifs</summary>\n        <ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Expressions &amp; opérateurs</summary>\n      <ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Instructions &amp; déclarations</summary>\n      <ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Fonctions</summary>\n      <ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Classes</summary>\n      <ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Plus</summary>\n      <ol>\n        <li><a href=\"/fr/docs/Web/JavaScript/JavaScript_technologies_overview\">Aperçu des technologies JavaScript</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Reference/Lexical_grammar\">Grammaire lexicale</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Data_structures\">Structures de données en JavaScript</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">Rattachement des propriétés</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Reference/Iteration_protocols\">Protocoles d'itération</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Reference/Strict_mode\">Mode strict</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">Passer au mode strict</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Reference/Template_literals\">Gabarit de chaîne de caractère</a></li>\n        <li><a href=\"/fr/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">Fonctionnalités dépréciées</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Cette page décrit la grammaire lexicale de JavaScript. Le code source d'un script ECMAScript est analysé de gauche à droite et est converti en une série d'éléments qui sont : des jetons, des caractères de contrôle, des terminateurs de lignes, des commentaires ou des blancs. ECMAScript définit également certains mots-clés et littéraux. ECMAScript possède également des règles pour insérer automatiquement des points-virgules à la fin des instructions.</p>"}},{"type":"prose","value":{"id":"caractères_de_contrôle","title":"Caractères de contrôle","isH3":false,"content":"<p>Les caractères de contrôle n'ont aucune représentation visuelle mais sont utilisés pour contrôler l'interprétation du texte.</p>\n<table>\n  <thead>\n    <tr>\n      <th>Point de code</th>\n      <th>Nom</th>\n      <th>Abréviation</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>U+200C</code></td>\n      <td>Antiliant sans chasse (<em>zero width non-joiner</em> en anglais)</td>\n      <td>&lt;ZWNJ&gt;</td>\n      <td>Placé entre des caractères pour empêcher qu'ils soient connectés par une ligature dans certaines langues (<a href=\"https://fr.wikipedia.org/wiki/Antiliant_sans_chasse\" class=\"external\" rel=\" noopener\">Wikipédia</a>).</td>\n    </tr>\n    <tr>\n      <td><code>U+200D</code></td>\n      <td>Liant sans chasse (<em>zero width joiner</em> en anglais)</td>\n      <td>&lt;ZWJ&gt;</td>\n      <td>Placé entre des caractères qui ne seraient normalement pas connectés pour les afficher comme connectés dans certaines langues (<a href=\"https://fr.wikipedia.org/wiki/Liant_sans_chasse\" class=\"external\" rel=\" noopener\">Wikipédia</a>).</td>\n    </tr>\n    <tr>\n      <td><code>U+FEFF</code></td>\n      <td>Indicateur d'ordre des octets (<em>byte order mark</em> en anglais)</td>\n      <td>&lt;BOM&gt;</td>\n      <td>Utilisé au début d'un script pour indiquer qu'il est en Unicode et quel est l'ordre des octets (<a href=\"https://fr.wikipedia.org/wiki/Indicateur_d%27ordre_des_octets\" class=\"external\" rel=\" noopener\">Wikipedia</a>).</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"blancs","title":"Blancs","isH3":false,"content":"<p>Les caractères d'espacement (blancs) sont utilisés pour des raisons de lisibilité et permetttent de séparer les différents fragments entre eux. Ces caractères sont généralement inutiles au code. Les outils de <a href=\"https://en.wikipedia.org/wiki/Minification_%28programming%29\" class=\"external\" rel=\" noopener\">minification</a> sont souvent utilisés pour retirer les blancs afin de réduire le volume de données à transférer.</p>\n<table>\n  <thead>\n    <tr>\n      <th>Point de code</th>\n      <th>Nom</th>\n      <th>Abréviation</th>\n      <th>Description</th>\n      <th>Séquence d'échappement</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>U+0009</td>\n      <td>Tabulation (horizontale)</td>\n      <td>&lt;HT&gt;</td>\n      <td>Tabulation horizontale</td>\n      <td>\\t</td>\n    </tr>\n    <tr>\n      <td>U+000B</td>\n      <td>Tabulation verticale</td>\n      <td>&lt;VT&gt;</td>\n      <td>Tabulation verticale</td>\n      <td>\\v</td>\n    </tr>\n    <tr>\n      <td>U+000C</td>\n      <td>Caractère de saut de page (<em>form feed</em> en anglais)</td>\n      <td>&lt;FF&gt;</td>\n      <td>Caractère de contrôle pour le saut de page (<a href=\"http://en.wikipedia.org/wiki/Page_break#Form_feed\" class=\"external\" rel=\" noopener\">Wikipédia</a>).</td>\n      <td>\\f</td>\n    </tr>\n    <tr>\n      <td>U+0020</td>\n      <td>Espace sécable (<em>space</em> en anglais)</td>\n      <td>&lt;SP&gt;</td>\n      <td>Espace sécable</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>U+00A0</td>\n      <td>Espace insécable (<em>no-break space</em> en anglais)</td>\n      <td>&lt;NBSP&gt;</td>\n      <td>Espace insécable</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>Autres</td>\n      <td>Autres caractères d'espaces Unicode</td>\n      <td>&lt;USP&gt;</td>\n      <td><a href=\"http://en.wikipedia.org/wiki/Space_%28punctuation%29#Spaces_in_Unicode\" class=\"external\" rel=\" noopener\">Espaces Unicode sur Wikipédia</a></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"terminateurs_de_lignes","title":"Terminateurs de lignes","isH3":false,"content":"<p>En plus des blancs, les caractères de fin de ligne (terminateurs de lignes) sont utilisés pour améliorer la lisibilité du texte. Cependant, dans certains cas, les terminateurs de lignes peuvent influencer l'exécution du code JavaScript là où ils sont interdits. Les terminateurs de lignes affectent également le processus d'<a href=\"#automatic_semicolon_insertion\">insertion automatique des points-virgules</a>. Les terminateurs de lignes correspondent à la classe <strong>\\s</strong> <a href=\"/fr/docs/Web/JavaScript/Guide/Regular_Expressions\">des expressions rationnelles</a>.</p>\n<p>Seuls les points de code Unicode qui suivent sont traités comme des fins de lignes en ECMAScript, les autres caractères sont traités comme des blancs (par exemple : <em>Next Line</em> (nouvelle ligne) : NEL, U+0085 est considéré comme un blanc).</p>\n<table>\n  <thead>\n    <tr>\n      <th>Point de code</th>\n      <th>Nom</th>\n      <th>Abréviation</th>\n      <th>Description</th>\n      <th>Séquence d'échappement</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>U+000A</td>\n      <td>Nouvelle ligne</td>\n      <td>&lt;LF&gt;</td>\n      <td>Caractère de nouvelle ligne pour les systèmes UNIX.</td>\n      <td>\\n</td>\n    </tr>\n    <tr>\n      <td>U+000D</td>\n      <td>Retour chariot</td>\n      <td>&lt;CR&gt;</td>\n      <td>Caractère de nouvelle ligne pour les systèmes Commodore et les premiers Mac.</td>\n      <td>\\r</td>\n    </tr>\n    <tr>\n      <td>U+2028</td>\n      <td>Séparateur de ligne</td>\n      <td>&lt;LS&gt;</td>\n      <td><a href=\"https://fr.wikipedia.org/wiki/Fin_de_ligne\" class=\"external\" rel=\" noopener\">Wikipédia</a></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>U+2029</td>\n      <td>Séparateur de paragraphe</td>\n      <td>&lt;PS&gt;</td>\n      <td><a href=\"https://fr.wikipedia.org/wiki/Fin_de_ligne\" class=\"external\" rel=\" noopener\">Wikipédia</a></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"commentaires","title":"Commentaires","isH3":false,"content":"<p>Les commentaires sont utilisés pour fournir des notes, des suggestions, des indications ou des avertissements sur le code JavaScript. Cela peut en faciliter la lecture et la compréhension. Ils peuvent également être utilisés pour empêcher l'exécution d'un certain code ; cela peut être pratique lors du débogage.</p>\n<p>En JavaScript, Il existe actuellement deux façons de former des commentaires (cf. ci-après pour une troisième méthode en cours de discussion).</p>"}},{"type":"prose","value":{"id":"commentaire_sur_une_ligne","title":"Commentaire sur une ligne","isH3":true,"content":"<p>La première façon est d'utiliser <code>//</code> (double barre oblique), pour commenter tout le texte qui suit (sur la même ligne). Par exemple :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Voici un commentaire d'une ligne en JavaScript</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"commentaire_sur_plusieurs_lignes","title":"Commentaire sur plusieurs lignes","isH3":true,"content":"<p>La seconde façon est d'utiliser <code>/* */</code>, qui est plus flexible.</p>\n<p>Il est possible d'utiliser cette forme sur une seule ligne :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* Voici un commentaire d'une ligne en JavaScript */</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Mais également sur plusieurs lignes, comme ceci :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">/* Ce commentaire s'étend sur plusieurs lignes. Il n'y a\n    pas besoin de clore le commentaire avant d'avoir\n     fini. */</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Il est également possible d'utiliser un commentaire au milieu d'une ligne. En revanche, cela rend le code plus difficile à lire et devrait être utilisé avec attention :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello \"</span> <span class=\"token operator\">+</span> x <span class=\"token comment\">/* insérer la valeur de x */</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>On peut également encadrer du code pour l'empêcher d'être exécuté. Par exemple :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* console.log(\"Hello world !\"); */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Ici, l'appel <code>console.log()</code> n'a jamais lieu car il fait partie d'un commentaire. On peut ainsi désactiver plusieurs lignes de code d'un coup.</p>"}},{"type":"prose","value":{"id":"commentaire_denvironnement_hashbang","title":"Commentaire d'environnement (<em>hashbang</em>)","isH3":true,"content":"<p>Une troisième syntaxe, en cours de standardisation par ECMAScript, permet d'indiquer l'environnement dans lequel est exécuté le script via <a href=\"https://github.com/tc39/proposal-hashbang\" class=\"external\" rel=\" noopener\">un commentaire <em>hashbang</em></a>. Un tel commentaire commence par <code>#!</code> et est <strong>uniquement valide au tout début du script ou du module</strong> (aucun espace/blanc n'est autorisé avant <code>#!</code>). Un tel commentaire ne tient que sur une seule ligne et il ne peut y avoir qu'un seul commentaire de ce type.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token hashbang comment\">#!/usr/bin/env node</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Coucou le monde\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Les commentaires d'environnements sont conçus pour fonctionner comme <a href=\"https://en.wikipedia.org/wiki/Shebang_(Unix)\" class=\"external\" rel=\" noopener\">les <em>shebangs</em> qu'on peut trouver sous Unix</a> et indiquent l'interpréteur à utiliser pour exécuter le script ou le module.</p>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>Attention :</strong> Bien qu'utiliser un <a href=\"https://fr.wikipedia.org/wiki/Indicateur_d%27ordre_des_octets\" class=\"external\" rel=\" noopener\">BOM</a> avant le <em>hashbang</em> fonctionne dans un navigateur, cela n'est pas conseillé. En effet, un BOM empêchera le bon fonctionnement sous Unix/Linux. Utilisez un encodage UTF-8 sans BOM si vous souhaitez exécuter vos scripts depuis une invite de commande.</p>\n</div>\n<p>Si vous souhaitez placer un commentaire en début de fichier sans indiquer d'environnement d'exécution spécifique, on pourra utiliser le commentaire classique avec <code>//</code>.</p>","titleAsText":"Commentaire d'environnement (hashbang)"}},{"type":"prose","value":{"id":"mots-clés","title":"Mots-clés","isH3":false,"content":""}},{"type":"prose","value":{"id":"mots-clés_réservés_selon_ecmascript_2015","title":"Mots-clés réservés selon ECMAScript 2015","isH3":true,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/break\"><code>break</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/switch\"><code>case</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/class\"><code>class</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/try...catch\"><code>catch</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/const\"><code>const</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/continue\"><code>continue</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/debugger\"><code>debugger</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/switch\"><code>default</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/delete\"><code>delete</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/while\"><code>do</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/if...else\"><code>else</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/export\"><code>export</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Classes/extends\"><code>extends</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/try...catch\"><code>finally</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/for\"><code>for</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/function\"><code>function</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/if...else\"><code>if</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/import\"><code>import</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/for...in\"><code>in</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/instanceof\"><code>instanceof</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/return\"><code>return</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/super\"><code>super</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/switch\"><code>switch</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/this\"><code>this</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/throw\"><code>throw</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/try...catch\"><code>try</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/typeof\"><code>typeof</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/var\"><code>var</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/void\"><code>void</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/while\"><code>while</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/with\"><code>with</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/yield\"><code>yield</code></a></li>\n</ul>"}},{"type":"prose","value":{"id":"mots-clés_réservés_pour_le_futur","title":"Mots-clés réservés pour le futur","isH3":true,"content":"<p>Les mots-clés qui suivent ont été réservés pour une utilisation future dans la spécification ECMAScript. Ils n'ont actuellement aucune utilité mais pourrait être utilisés par la suite. Ils ne peuvent donc pas être utilisés comme identifiants. Ces mots-clés ne peuvent être utilisés ni en mode strict ni en mode non strict.</p>\n<ul>\n  <li><code>enum</code></li>\n  <li><code>await</code> (lorsqu'il est utilisé dans le contexte d'un module)</li>\n</ul>\n<p>Les mots-clés suivants sont réservés dans du code en mode strict :</p>\n<ul>\n  <li><code>implements</code></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Statements/let\"><code>let</code></a></li>\n  <li><code>package</code></li>\n  <li><code>protected</code></li>\n  <li><code>static</code></li>\n  <li><code>interface</code></li>\n  <li><code>private</code></li>\n  <li><code>public</code></li>\n</ul>\n<h4 id=\"mots-clés_réservés_pour_un_usage_future_dans_les_anciens_standards\">Mots-clés réservés pour un usage future dans les anciens standards</h4>\n<p>Les mots-clés suivants sont réservés dans les anciennes spécifications ECMAScript (ECMAScript 1 à 3).</p>\n<ul>\n  <li><code>abstract</code></li>\n  <li><code>boolean</code></li>\n  <li><code>byte</code></li>\n  <li><code>char</code></li>\n  <li><code>double</code></li>\n  <li><code>final</code></li>\n  <li><code>float</code></li>\n  <li><code>goto</code></li>\n  <li><code>int</code></li>\n  <li><code>long</code></li>\n  <li><code>native</code></li>\n  <li><code>short</code></li>\n  <li><code>synchronized</code></li>\n  <li><code>throws</code></li>\n  <li><code>transient</code></li>\n  <li><code>volatile</code></li>\n</ul>\n<p>Par ailleurs, les littéraux <code>null</code>, <code>true</code>, et <code>false</code> sont réservés dans ECMAScript pour leur usage normal.</p>"}},{"type":"prose","value":{"id":"utilisation_des_mots-clés_réservés","title":"Utilisation des mots-clés réservés","isH3":true,"content":"<p>Les mots-clés réservés ne le sont que pour les identifiants (et non pour les <code>IdentifierNames</code>) . Comme décrit dans <a href=\"http://es5.github.com/#A.1\" class=\"external\" rel=\" noopener\">es5.github.com/#A.1</a>, dans l'exemple qui suit, on a, légalement, des <code>IdentifierNames</code> qui utilisent des <code>ReservedWords</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>a<span class=\"token punctuation\">.</span>import\na<span class=\"token punctuation\">[</span><span class=\"token string\">\"import\"</span><span class=\"token punctuation\">]</span>\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">import</span><span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>En revanche, dans ce qui suit, c'est illégal car c'est un identifiant. Un identifiant peut être un <code>IdentifierName</code> mais pas un mot-clé réservé. Les identifiants sont utilisés pour les <code>FunctionDeclaration</code> (déclarations de fonction), les <code>FunctionExpression</code> (expressions de fonction), les <code>VariableDeclaration</code> (déclarations de variable)<code>.</code></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// Illégal.</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"littéraux","title":"Littéraux","isH3":false,"content":""}},{"type":"prose","value":{"id":"littéral_null","title":"Littéral <code>null</code>","isH3":true,"content":"<p>Voir aussi la page <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> pour plus d'informations.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">null</span>\n</code></pre></div>","titleAsText":"Littéral null"}},{"type":"prose","value":{"id":"littéraux_booléens","title":"Littéraux booléens","isH3":true,"content":"<p>Voir aussi la page <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> pour plus d'informations.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token boolean\">true</span>\n<span class=\"token boolean\">false</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"littéraux_numériques","title":"Littéraux numériques","isH3":true,"content":"<h4 id=\"décimaux\">Décimaux</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">1234567890</span>\n<span class=\"token number\">42</span>\n\n<span class=\"token comment\">// Attention à l'utilisation de zéros en début :</span>\n\n<span class=\"token number\">0888</span> <span class=\"token comment\">// 888 est compris comme décimal</span>\n<span class=\"token number\">0777</span> <span class=\"token comment\">// est compris comme octal et égale 511 en décimal</span>\n</code></pre></div>\n<p>Les littéraux décimaux peuvent commencer par un zéro (<code>0</code>) suivi d'un autre chiffre. Mais si tous les chiffres après le 0 sont (strictement) inférieurs à 8, le nombre sera analysé comme un nombre octal. Cela n'entraînera pas d'erreur JavaScript, voir <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=957513\" class=\"external\" rel=\" noopener\">bug&nbsp;957513</a>. Voir aussi la page sur <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt()</code></a>.</p>\n<h4 id=\"binaires\">Binaires</h4>\n<p>La représentation binaire des nombres peut être utilisée avec une syntaxe qui comporte un zéro (0) suivi par le caractère latin \"B\" (minuscule ou majuscule) (<code>0b</code> ou <code>0B</code>). Cette syntaxe est apparue avec ECMAScript 2015 et il faut donc faire attention au tableau de compatibilité pour cette fonctionnalité. Si les chiffres qui composent le nombre ne sont pas 0 ou 1, cela entraînera une erreur <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> : \"Missing binary digits after 0b\".</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token constant\">FLT_SIGNBIT</span>  <span class=\"token operator\">=</span> <span class=\"token number\">0b10000000000000000000000000000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2147483648</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">FLT_EXPONENT</span> <span class=\"token operator\">=</span> <span class=\"token number\">0b01111111100000000000000000000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2139095040</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">FLT_MANTISSA</span> <span class=\"token operator\">=</span> <span class=\"token number\">0B00000000011111111111111111111111</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8388607</span>\n</code></pre></div>\n<h4 id=\"octaux\">Octaux</h4>\n<p>La syntaxe pour représenter des nombres sous forme octale est : un zéro (0), suivi par la lettre latine \"O\" (minuscule ou majuscule) (ce qui donne <code>0o</code> ou <code>0O)</code>. Cette syntaxe est apparue avec ECMAScript 2015 et il faut donc faire attention au tableau de compatibilité pour cette fonctionnalité. Si les chiffres qui composent le nombre ne sont pas compris entre 0 et 7, cela entraînera une erreur <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> : \"Missing octal digits after 0o\".</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0O755</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 493</span>\n<span class=\"token keyword\">var</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0o644</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 420</span>\n\n<span class=\"token comment\">// Aussi possible en utilisant des zéros en début du nombre (voir la note ci-avant)</span>\n<span class=\"token number\">0755</span>\n<span class=\"token number\">0644</span>\n</code></pre></div>\n<h4 id=\"hexadécimaux\">Hexadécimaux</h4>\n<p>Les littéraux hexadécimaux ont pour syntaxe : un zéro (0), suivi par la lettre latine \"X\" (minuscule ou majuscule) (ce qui donne <code>0x</code> ou <code>0X)</code>. Si les chiffres qui composent le nombre sont en dehors des unités hexadécimales (0123456789ABCDEF), cela entraînera une erreur <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> : \"Identifier starts immediately after numeric literal\".</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">0xFFFFFFFFFFFFFFFFF</span> <span class=\"token comment\">// 295147905179352830000</span>\n<span class=\"token number\">0x123456789ABCDEF</span>   <span class=\"token comment\">// 81985529216486900</span>\n<span class=\"token number\">0XA</span>                 <span class=\"token comment\">// 10</span>\n</code></pre></div>\n<h4 id=\"littéraux_bigint\">Littéraux <code>BigInt</code></h4>\n<p>Le type <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a> est un type numérique primitif de JavaScript qui permet de représenter des entiers avec une précision arbitraire. De tels littéraux s'écrivent en ajoutant un <code>n</code> à la fin d'un entier.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">123456789123456789</span><span class=\"token function\">n</span> <span class=\"token punctuation\">(</span>nombre décimal<span class=\"token punctuation\">,</span> en base <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span><span class=\"token function\">o7777777777777777n</span> <span class=\"token punctuation\">(</span>nombre octal<span class=\"token punctuation\">,</span> en base <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span><span class=\"token function\">x123456789ABCDEF1n</span> <span class=\"token punctuation\">(</span>nombre hexadécimal<span class=\"token punctuation\">,</span> en base <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span><span class=\"token function\">b0101010101110101n</span> <span class=\"token punctuation\">(</span>nombre binaire<span class=\"token punctuation\">,</span> en base <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Voir aussi <a href=\"/fr/docs/Web/JavaScript/Data_structures#le_type_bigint\">le paragraphe sur les grands entiers/BigInt sur les structures de données en JavaScript</a>.</p>"}},{"type":"prose","value":{"id":"littéraux_objets","title":"Littéraux objets","isH3":true,"content":"<p>Voir aussi les pages <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> et <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Initialisateur d'objet</a> pour plus d'informations.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">\"toto\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token string\">\"truc\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// notation raccourcie depuis ES6</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"toto\"</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token string\">\"truc\"</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// plutôt que</span>\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> a<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> b<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> c <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"littéraux_de_tableaux","title":"Littéraux de tableaux","isH3":true,"content":"<p>Voir aussi la page <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> pour plus d'informations.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">[</span><span class=\"token number\">1954</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1974</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1990</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2014</span><span class=\"token punctuation\">]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"littéraux_de_chaînes_de_caractères","title":"Littéraux de chaînes de caractères","isH3":true,"content":"<p>Un littéral de chaîne de caractères correspond à zéro ou plusieurs codets Unicode entourés de simples ou de doubles quotes. Les codets Unicode peuvent également être représentés avec des séquences d'échappements. Tous les codets peuvent apparaître dans un littéral de chaîne de caractères à l'exception de ces trois codets :</p>\n<ul>\n  <li>U+005C \\ (barre oblique inverse)</li>\n  <li>U+000D (retour chariot, <em>carriage return</em>, <em>CR</em>)</li>\n  <li>U+000A (saut de ligne, <em>line feed</em>, <em>LF</em>)</li>\n</ul>\n<p>Avant la proposition consistant à rendre les chaînes JSON valides selon ECMA-262, les caractères U+2028 et U+2029 étaient également interdits.</p>\n<p>Tous les codets peuvent être écrits sous la forme d'une séquence d'échappement. Les littéraux de chaînes de caractères sont évalués comme des valeurs <code>String</code> ECMAScript. Lorsque ces valeurs <code>String</code> sont générées, les codets Unicode sont encodés en UTF-16.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'toto'</span>\n<span class=\"token string\">\"truc\"</span>\n</code></pre></div>\n<h4 id=\"séquence_déchappement_hexadécimale\">Séquence d'échappement hexadécimale</h4>\n<p>Une séquence d'échappement hexadécimale consiste en la succession de <code>\\x</code> et de deux chiffres hexadécimaux représentant un codet sur l'intervalle 0x0000 à 0x00FF.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'\\xA9'</span> <span class=\"token comment\">// \"©\"</span>\n</code></pre></div>\n<h4 id=\"séquence_déchappement_unicode\">Séquence d'échappement Unicode</h4>\n<p>La séquence d'échappement Unicode est composée de <code>\\u</code> suivi de quatre chiffres hexadécimaux. Chacun de ces chiffres définit un caractères sur deux octets selon l'encodage UTF-16. Pour les codes situés entre <code>U+0000</code> et <code>U+FFFF</code>, les chiffres à utiliser sont identiques au code. Pour les codes supérieurs, il faudra utiliser deux séquences d'échappement dont chacune représentera un demi-codet de la paire de <em>surrogates</em>.</p>\n<p>Voir aussi <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode\"><code>String.fromCharCode()</code></a> et <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\"><code>String.prototype.charCodeAt()</code></a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'\\u00A9'</span> <span class=\"token comment\">// \"©\" (U+A9)</span>\n</code></pre></div>\n<h4 id=\"échappement_de_points_de_code_unicode\">Échappement de points de code Unicode</h4>\n<p>Apparu avec ECMAScript 2015, l'échappement de points de code Unicode permet d'échapper n'importe quel caractère en utilisant une notation hexadécimale. Il est possible de le faire pour échapper les points de code Unicode dont la représentation va jusqu'à <code>0x10FFFF</code>. Avec la séquence « simple » d'échappement Unicode, il était nécessaire d'échapper respectivement les deux demi-codets d'une paire si on voulait échapper le caractère correspondant, avec cette nouvelle méthode, ce n'est plus nécessaire de faire la distinction.</p>\n<p>Voir également <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\"><code>String.fromCodePoint()</code></a> et <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt\"><code>String.prototype.codePointAt()</code></a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'\\u{2F804}'</span> <span class=\"token comment\">// CJK COMPATIBILITY IDEOGRAPH-2F804 (U+2F804)</span>\n\n<span class=\"token comment\">// avec l'ancienne méthode d'échappement, cela aurait été écrit</span>\n<span class=\"token comment\">// avec une paire de surrogates</span>\n<span class=\"token string\">'\\uD87E\\uDC04'</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"littéraux_dexpressions_rationnelles","title":"Littéraux d'expressions rationnelles","isH3":true,"content":"<p>Voir la page <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a> pour plus d'informations.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">ab+c</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span>\n\n<span class=\"token comment\">// Un littéral pour une expression rationnelle</span>\n<span class=\"token comment\">// vide. Le groupe non-capturant est utilisé pour</span>\n<span class=\"token comment\">// lever l'ambigüité avec les commentaires</span>\n<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"littéraux_modèles_gabarits_ou_templates","title":"Littéraux modèles (gabarits ou <em>templates</em>)","isH3":true,"content":"<p>Voir également la page sur <a href=\"/fr/docs/Web/JavaScript/Reference/Template_literals\">les gabarits de chaînes de caractères</a> pour plus d'informations.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">chaîne de caractères</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">chaîne de caractères ligne 1\n chaîne de caractères ligne 2</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">chaîne1 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>expression<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> chaîne2</span><span class=\"token template-punctuation string\">`</span></span>\n\ntag <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">chaîne1 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>expression<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> chaîne2</span><span class=\"token template-punctuation string\">`</span></span>\n</code></pre></div>","titleAsText":"Littéraux modèles (gabarits ou templates)"}},{"type":"prose","value":{"id":"insertion_automatique_de_points-virgules","title":"Insertion automatique de points-virgules","isH3":false,"content":"<p>Certaines <a href=\"/fr/docs/Web/JavaScript/Reference/Statements\">instructions JavaScript</a> doivent finir par un point-virgule et sont donc concernées par l'insertion automatique de points-virgules (ASI pour <em>automatic semicolon insertion</em> en anglais) :</p>\n<ul>\n  <li>Instruction vide</li>\n  <li>instruction de variable, <code>let</code>, <code>const</code></li>\n  <li><code>import</code>, <code>export</code>, déclaration de module</li>\n  <li>Instruction d'expression</li>\n  <li><code>debugger</code></li>\n  <li><code>continue</code>, <code>break</code>, <code>throw</code></li>\n  <li><code>return</code></li>\n</ul>\n<p>La spécification ECMAScript mentionne <a href=\"https://tc39.github.io/ecma262/#sec-rules-of-automatic-semicolon-insertion\" class=\"external\" rel=\" noopener\">trois règles quant à l'insertion de points-virgules</a> :</p>\n<p>1. Un point-vrigule est inséré avant un <a href=\"#line_terminators\">terminateur de ligne</a> ou une accolade (\"}\") quand celui ou celle-ci n'est pas autorisé par la grammaire</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span> <span class=\"token number\">3</span>\n<span class=\"token comment\">// est donc transformé, après ASI, en :</span>\n<span class=\"token punctuation\">{</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>2. Un point-virgule est inséré à la fin lorsqu'on détecte la fin d'une série de jetons en flux d'entrée et que le parseur est incapable d'analyser le flux d'entrée comme un programme complet.</p>\n<p>Ici <code>++</code> n'est pas traité comme <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#increment\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">opérateur postfixe (en-US)</a> s'appliquant à la variable <code>b</code> car il y a un terminateur de ligne entre <code>b</code> et <code>++</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>a <span class=\"token operator\">=</span> b\n<span class=\"token operator\">++</span>c\n\n<span class=\"token comment\">// devient, après ASI :</span>\n\na <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">++</span>c<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>3. Un point-virgule est inséré à la fin, lorsqu'une instruction, à production limitée pour la grammaire, est suivie par un terminateur de ligne. Les instructions concernées par cette règle sont :</p>\n<ul>\n  <li>Expressions postfixes (<code>++</code> et <code>--</code>)</li>\n  <li><code>continue</code></li>\n  <li><code>break</code></li>\n  <li><code>return</code></li>\n  <li><code>yield</code>, <code>yield*</code></li>\n  <li><code>module</code></li>\n</ul>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">return</span>\na <span class=\"token operator\">+</span> b\n\n<span class=\"token comment\">// est transformé, après ASI, en :</span>\n\n<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"spécifications","title":"Spécifications","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Spécification</th>\n      <th>État</th>\n      <th>Commentaires</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%201st%20edition,%20June%201997.pdf\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"La spécificaction 'ECMAScript 1st Edition (ECMA-262)'\" rel=\" noopener\">ECMAScript 1st Edition (ECMA-262)</a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td>Définition initiale.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/5.1/#sec-7\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 5.1 (ECMA-262)<br><small lang=\"fr\">La définition de 'Lexical Conventions' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-lexical-grammar\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"fr\">La définition de 'Lexical Grammar' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td>Ajout : littéraux binaires et octaux, échappements de points de code Unicode, modèles</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma262/#sec-ecmascript-language-lexical-grammar\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript (ECMA-262)<br><small lang=\"fr\">La définition de 'Lexical Grammar' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-living\">Standard évolutif</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"javascript.grammar","dataURL":"/fr/docs/Web/JavaScript/Reference/Lexical_grammar/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"https://whereswalden.com/2013/08/12/micro-feature-from-es6-now-in-firefox-aurora-and-nightly-binary-and-octal-numbers/\" class=\"external\" rel=\" noopener\">Jeff Walden : Nombres binaires et forme octale (en anglais)</a></li>\n  <li><a href=\"https://mathiasbynens.be/notes/javascript-escapes\" class=\"external\" rel=\" noopener\">Mathias Bynens : Séquences d'échappements de caractères (en anglais)</a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a></li>\n</ul>"}}],"toc":[{"text":"Caractères de contrôle","id":"caractères_de_contrôle"},{"text":"Blancs","id":"blancs"},{"text":"Terminateurs de lignes","id":"terminateurs_de_lignes"},{"text":"Commentaires","id":"commentaires"},{"text":"Mots-clés","id":"mots-clés"},{"text":"Littéraux","id":"littéraux"},{"text":"Insertion automatique de points-virgules","id":"insertion_automatique_de_points-virgules"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"Cette page décrit la grammaire lexicale de JavaScript. Le code source d'un script ECMAScript est analysé de gauche à droite et est converti en une série d'éléments qui sont : des jetons, des caractères de contrôle, des terminateurs de lignes, des commentaires ou des blancs. ECMAScript définit également certains mots-clés et littéraux. ECMAScript possède également des règles pour insérer automatiquement des points-virgules à la fin des instructions.","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Lexical grammar","locale":"en-US","native":"English (US)"},{"title":"Gramática léxica","locale":"es","native":"Español"},{"title":"字句文法","locale":"ja","native":"日本語"},{"title":"어휘 문법","locale":"ko","native":"한국어"},{"title":"Gramática léxica","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Лексический синтаксис","locale":"ru","native":"Русский"},{"title":"词法文法","locale":"zh-CN","native":"中文 (简体)"},{"title":"Lexical grammar","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"fr/web/javascript/reference/lexical_grammar","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/javascript/reference/lexical_grammar/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference","title":"Référence JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference/Lexical_grammar","title":"Grammaire lexicale"}],"pageTitle":"Grammaire lexicale - JavaScript | MDN","noIndexing":false}}