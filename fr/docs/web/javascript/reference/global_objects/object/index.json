{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Object","mdn_url":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects\">Objets standards</a></strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Méthodes</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\"><code>Object.freeze()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"><code>Object.fromEntries()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\"><code>Object.getOwnPropertyDescriptors()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn\"><code>Object.hasOwn()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\"><code>Object.isFrozen()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\"><code>Object.isSealed()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\"><code>Object.seal()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/values\"><code>Object.values()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Le type <strong><code>Object</code></strong> est l'un <a href=\"/fr/docs/Web/JavaScript/Data_structures\">des types de données JavaScript</a>. Il est utilisé pour stocker des ensembles de clés/valeurs et des entités plus complexes. Les objets peuvent être créés avec le constructeur <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/Object\"><code>Object()</code></a> ou avec <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Object_initializer\">la syntaxe d'initialisation d'objet littérale</a>.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>La quasi-totalité des objets en JavaScript sont des instances d'<code>Object</code>. En général, un objet hérite de propriétés (dont des méthodes) de <code>Object.prototype</code>, bien que ces propriétés puissent être surchargées. Il sera toutefois possible de créer un <code>Object</code> qui n'obéit pas à ces règles (par exemple en utilisant <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create(null)</code></a> ou de modifier un objet après sa construction afin que ces hypothèses ne soient plus vérifiées (par exemple avec <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a>).</p>\n<p>Les modifications apportées à l'objet prototype de <code>Object</code> seront captées par <strong>tous</strong> les objets à travers le chaînage des prototypes, à moins que ces propriétés soient surchargées plus bas sur la chaîne des prototypes. C'est donc un moyen puissant mais également dangereux permettant de modifier le comportement des objets.</p>\n<p>Le constructeur <code>Object</code> crée une enveloppe objet de la valeur passée en argument.</p>\n<ul>\n  <li>Si la valeur est <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> ou <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>, il créera et renverra un objet vide.</li>\n  <li>Si la valeur est déjà un objet, il renverra la valeur.</li>\n  <li>Sinon, il renverra un objet dont le type objet correspond au type primitif de la valeur fournie.</li>\n</ul>\n<p>Lorsqu'il n'est pas appelé dans un contexte constructeur (c'est-à-dire sans le mot-clé <code>new</code>), <code>Object</code> se comporte de façon identique à <code>new Object()</code>.</p>\n<p>Voir aussi <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Object_initializer\">initialisateur d'objet / syntaxe de littéral</a>.</p>"}},{"type":"prose","value":{"id":"supprimer_une_propriété_dun_objet","title":"Supprimer une propriété d'un objet","isH3":true,"content":"<p>Il n'existe pas de méthode pour <code>Object</code> qui permette de supprimer une propriété propre (à l'instar de <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\"><code>Map.prototype.delete()</code></a>). Pour ce faire, il faut utiliser <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/delete\">l'opérateur <code>delete</code></a>.</p>"}},{"type":"prose","value":{"id":"constructeur","title":"Constructeur","isH3":false,"content":"<dl>\n  <dt id=\"object\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/Object\"><code>Object()</code></a></dt>\n  <dd>\n    <p>Crée un nouvel objet <code>Object</code> à partir de la valeur fournie.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"méthodes_du_constructeur_object","title":"Méthodes du constructeur <code>Object</code>","isH3":false,"content":"<dl>\n  <dt id=\"object.assign\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a></dt>\n  <dd>\n    <p>Copie les valeurs de toutes les propriétés propres énumérables depuis un ou plusieurs objets source dans un objet cible.</p>\n  </dd>\n  <dt id=\"object.create\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a></dt>\n  <dd>\n    <p>Crée un nouvel objet avec le prototype d'objet et les propriétés indiqués.</p>\n  </dd>\n  <dt id=\"object.defineproperty\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a></dt>\n  <dd>\n    <p>Ajoute à un objet la propriété nommée décrite par le descripteur donné.</p>\n  </dd>\n  <dt id=\"object.defineproperties\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties()</code></a></dt>\n  <dd>\n    <p>Ajoute à un objet les propriétés nommées décrites par les descripteurs donnés.</p>\n  </dd>\n  <dt id=\"object.entries\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries()</code></a></dt>\n  <dd>\n    <p>Retourne un tableau contenant les paires <code>[clé, valeur]</code> des propriétés énumérables propres (c'est-à-dire directement rattachées à l'objet) de l'objet donné et dont les clés sont des chaînes de caractères.</p>\n  </dd>\n  <dt id=\"object.freeze\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\"><code>Object.freeze()</code></a></dt>\n  <dd>\n    <p>Gèle un objet&nbsp;: un autre code ne peut ni détruire ni changer aucune propriété.</p>\n  </dd>\n  <dt id=\"object.fromentries\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"><code>Object.fromEntries()</code></a></dt>\n  <dd>\n    <p>Renvoie un nouvel objet à partir d'un itérable contenant des paires de clés-valeurs (l'opération duale de <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries()</code></a>).</p>\n  </dd>\n  <dt id=\"object.getownpropertydescriptor\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a></dt>\n  <dd>\n    <p>Retourne un descripteur de propriété pour une propriété nommée d'un objet.</p>\n  </dd>\n  <dt id=\"object.getownpropertydescriptors\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\"><code>Object.getOwnPropertyDescriptors()</code></a></dt>\n  <dd>\n    <p>Retourne un objet contenant tous les descripteurs des propriétés propres d'un objet.</p>\n  </dd>\n  <dt id=\"object.getownpropertynames\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a></dt>\n  <dd>\n    <p>Retourne un tableau contenant les noms de toutes les propriétés énumérables et non énumérables <strong>propres</strong> de l'objet donné.</p>\n  </dd>\n  <dt id=\"object.getownpropertysymbols\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a></dt>\n  <dd>\n    <p>Retourne un tableau de toutes les propriétés symboles trouvées directement dans un objet donné.</p>\n  </dd>\n  <dt id=\"object.getprototypeof\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a></dt>\n  <dd>\n    <p>Retourne le prototype de l'objet indiqué.</p>\n  </dd>\n  <dt id=\"object.is\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is()</code></a></dt>\n  <dd>\n    <p>Détermine si deux valeurs sont la même valeur. Considère comme égales toutes les valeurs NaN (ce qui diffère à la fois de la <em>comparaison d'égalité abstraite</em> et de la <em>comparaison d'égalité stricte</em>).</p>\n  </dd>\n  <dt id=\"object.isextensible\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a></dt>\n  <dd>\n    <p>Détermine si l'extension d'un objet est permise.</p>\n  </dd>\n  <dt id=\"object.isfrozen\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\"><code>Object.isFrozen()</code></a></dt>\n  <dd>\n    <p>Détermine si un objet a été gelé.</p>\n  </dd>\n  <dt id=\"object.issealed\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\"><code>Object.isSealed()</code></a></dt>\n  <dd>\n    <p>Détermine si un objet est scellé.</p>\n  </dd>\n  <dt id=\"object.keys\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a></dt>\n  <dd>\n    <p>Retourne un tableau contenant les noms de toutes les propriétés énumérables <strong>propres</strong> de l'objet donné.</p>\n  </dd>\n  <dt id=\"object.preventextensions\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a></dt>\n  <dd>\n    <p>Empêche toute extension de l'objet.</p>\n  </dd>\n  <dt id=\"object.seal\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\"><code>Object.seal()</code></a></dt>\n  <dd>\n    <p>Empêche un autre code de détruire les propriétés d'un objet.</p>\n  </dd>\n  <dt id=\"object.setprototypeof\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></dt>\n  <dd>\n    <p>Définit le prototype d'un objet (c'est-à-dire, la propriété interne <code>[[Prototype]]</code>).</p>\n  </dd>\n  <dt id=\"object.values\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/values\"><code>Object.values()</code></a></dt>\n  <dd>\n    <p>Retourne le tableau des valeurs énumérables propres de l'objet donné dont les clés sont des chaînes de caractères.</p>\n  </dd>\n</dl>","titleAsText":"Méthodes du constructeur Object"}},{"type":"prose","value":{"id":"propriétés_des_instances","title":"Propriétés des instances","isH3":false,"content":"<dl>\n  <dt id=\"object.prototype.constructor\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></dt>\n  <dd>\n    <p>Définit la fonction qui crée le prototype d'un objet.</p>\n  </dd>\n  <dt id=\"object.prototype.__proto__\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></dt>\n  <dd>\n    <p>Pointe vers l'objet ayant été utilisé comme prototype à l'instanciation de l'objet.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"méthodes_des_instances","title":"Méthodes des instances","isH3":false,"content":"<dl>\n  <dt id=\"object.prototype.__definegetter__\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></dt>\n  <dd>\n    <p>Associe une fonction à une propriété, lorsqu'on accède à cette dernière, la fonction est exécutée et la valeur de retour est renvoyée.</p>\n  </dd>\n  <dt id=\"object.prototype.__definesetter__\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></dt>\n  <dd>\n    <p>Associe une fonction à une propriété, lorsqu'on modifie cette dernière, la fonction est exécutée pour modifier la propriété.</p>\n  </dd>\n  <dt id=\"object.prototype.__lookupgetter__\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></dt>\n  <dd>\n    <p>Renvoie la fonction qui a été associée à la propriété indiquée avec la méthode <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>__defineGetter__()</code></a>.</p>\n  </dd>\n  <dt id=\"object.prototype.__lookupsetter__\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></dt>\n  <dd>\n    <p>Renvoie la fonction qui a été associée à la propriété indiquée avec la méthode <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>__defineSetter__()</code></a>.</p>\n  </dd>\n  <dt id=\"object.prototype.hasownproperty\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></dt>\n  <dd>\n    <p>Renvoie un booléen indiquant si un objet contient la propriété indiquée comme une propriété propre (directement rattachée à l'objet, pas héritée avec sa chaîne de prototypes).</p>\n  </dd>\n  <dt id=\"object.prototype.isprototypeof\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></dt>\n  <dd>\n    <p>Renvoie un booléen indiquant si l'objet courant (pour lequel est appelé cette méthode) fait partie de la chaîne de prototypes de l'objet passé en argument.</p>\n  </dd>\n  <dt id=\"object.prototype.propertyisenumerable\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></dt>\n  <dd>\n    <p>Renvoie un booléen indiquant si <a href=\"/fr/docs/Web/JavaScript/Data_structures#propri%C3%A9t%C3%A9s\">l'attribut interne ECMAScript <code>[[Enumerable]]</code></a> est fixé.</p>\n  </dd>\n  <dt id=\"object.prototype.tolocalestring\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></dt>\n  <dd>\n    <p>Appelle la méthode <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>toString()</code></a>.</p>\n  </dd>\n  <dt id=\"object.prototype.tostring\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></dt>\n  <dd>\n    <p>Renvoie une chaîne de caractères qui représente l'objet.</p>\n  </dd>\n  <dt id=\"object.prototype.valueof\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></dt>\n  <dd>\n    <p>Renvoie la valeur primitive de l'objet indiqué.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":""}},{"type":"prose","value":{"id":"utilisation_dobject_avec_les_types_undefined_et_null","title":"Utilisation d'<code>Object</code> avec les types <code>undefined</code> et <code>null</code>","isH3":true,"content":"<p>Les exemples suivants stockent un <code>Object</code> vide dans <code>o</code>&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Utilisation d'Object avec les types undefined et null"}},{"type":"prose","value":{"id":"utilisation_dobject_pour_créer_des_objets_boolean","title":"Utilisation d'<code>Object</code> pour créer des objets <code>Boolean</code>","isH3":true,"content":"<p>Les exemples suivants stockent des objets <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> dans <code>o</code>&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Équivalent à : o = new Boolean(true);</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Équivalent à : o = new Boolean(false);</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Utilisation d'Object pour créer des objets Boolean"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Object"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"javascript.builtins.Object","dataURL":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Initialisateur d'objet</a></li>\n</ul>"}}],"toc":[{"text":"Description","id":"description"},{"text":"Constructeur","id":"constructeur"},{"text":"Méthodes du constructeur <code>Object</code>","id":"méthodes_du_constructeur_object"},{"text":"Propriétés des instances","id":"propriétés_des_instances"},{"text":"Méthodes des instances","id":"méthodes_des_instances"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"Le type Object est l'un des types de données JavaScript. Il est utilisé pour stocker des ensembles de clés/valeurs et des entités plus complexes. Les objets peuvent être créés avec le constructeur Object() ou avec la syntaxe d'initialisation d'objet littérale.","popularity":0.0029,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Object","locale":"en-US","native":"English (US)"},{"title":"Object","locale":"es","native":"Español"},{"title":"Object","locale":"ja","native":"日本語"},{"title":"Object","locale":"ko","native":"한국어"},{"title":"Object","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Object","locale":"ru","native":"Русский"},{"title":"Object","locale":"zh-CN","native":"中文 (简体)"},{"title":"Object","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"fr/web/javascript/reference/global_objects/object","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/javascript/reference/global_objects/object/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference","title":"Référence JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects","title":"Objets globaux"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object","title":"Object"}],"pageTitle":"Object - JavaScript | MDN","noIndexing":false}}