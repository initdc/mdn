{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Object.prototype.__proto__","mdn_url":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects\">Objets standards</a></strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><em><code>Object.prototype.__proto__</code></em></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Méthodes</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\"><code>Object.defineProperties()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\"><code>Object.entries()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\"><code>Object.freeze()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\"><code>Object.fromEntries()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\"><code>Object.getOwnPropertyDescriptors()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\"><code>Object.getOwnPropertyNames()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\"><code>Object.getOwnPropertySymbols()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwn\"><code>Object.hasOwn()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/is\"><code>Object.is()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\"><code>Object.isFrozen()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\"><code>Object.isSealed()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\"><code>Object.keys()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\"><code>Object.seal()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/values\"><code>Object.values()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard deprecated\" id=\"sect1\"><p><strong>Obsolète:</strong> Cette fonctionnalité a été supprimée des standards du Web. Bien que quelques navigateurs puissent encore la supporter, elle est en cours d'éradication. Ne l'utilisez ni dans d'anciens projets, ni dans de nouveaux. Les pages et applications Web l'utilisant peuvent cesser de fonctionner à tout moment.</p></div>\n<div class=\"notecard warning\" id=\"sect2\">\n  <p><strong>Attention :</strong> Étant donnée la façon dont la plupart des moteurs JavaScript optimisent les performances, modifier le <code>[[Prototype]]</code> d'un objet est une opération lente pour chaque navigateur et moteur JavaScript. Les impacts liés aux performances sur ce point sont vastes et subtiles : ils concernent pas uniquement le temps passé à effectuer <code>obj.__proto__ = ...</code>, mais peuvent concerner n'importe quel code pour n'importe quel objet dont <code>[[Prototype]]</code> a été modifié. Si vous souhaitez obtenir des performances optimales, évitez de modifier le <code>[[Prototype]]</code> d'un objet. À la place, il est conseillé de créer un objet avec le prototype voulu en utilisant <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a>.</p>\n</div>\n<div class=\"notecard warning\" id=\"sect3\">\n  <p><strong>Attention :</strong> Bien que la propriété <code>Object.prototype.__proto__</code> soit déjà supportée dans la plupart des navigateurs à l'heure actuelle, son comportement n'a été standardisé que récemment avec la spécification ECMAScript 2015. Si vous avez besoin d'utiliser cette propriété dans des environnements antérieurs à ES2015, il est recommandé d'utiliser <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a>.</p>\n</div>\n<p>La propriété <code>__proto__</code> de <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a> est une propriété accesseur (un couple de fonction avec un accesseur (<em>getter</em>) et un mutateur (<em>setter</em>)) qui expose le <code>[[Prototype]]</code> interne (qui est soit un objet, soit <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>) de l'objet courant.</p>\n<p>L'utilisation de <code>__proto__</code> est sujet à controverse. Elle a été déconseillée par plusieurs personnes et n'avait jamais été incluse dans la spécification ECMAScript. Cependant, de nombreux navigateurs ont décidé de l'implémenter. À l'heure actuelle, la propriété <code>__proto__</code> a été standardisée avec la spécification ECMAScript 2015 et sera officiellement supportée à l'avenir. Une alternative à cette propriété peut être l'utilisation des méthodes <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf</code></a>/<a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf\"><code>Reflect.getPrototypeOf</code></a> et <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf</code></a>/<a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf</code></a>. Cependant, modifier le <code>[[Prototype]]</code> d'un objet est toujours une opération lente qui doit être évitée le plus possible pour des raisons de performances.</p>\n<p>La propriété <code>__proto__</code> peut également être utilisée avec un littéral objet afin de définir le <code>[[Prototype]]</code> lors de la construction (ce qui en fait une alternative à <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a>. Voir la page sur <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/Object_initializer\">les initialisateurs d'objet</a>.</p>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> proto <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note :</strong> le nom de la propriété est composé de deux tirets bas, suivis de « proto », suivis par deux tirets bas (<em>underscores</em>)</p>\n</div>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>L'accesseur <code>__proto__</code> expose la valeur du <code>[[Prototype]]</code> interne d'un objet.</p>\n<ul>\n  <li>Pour les objets créés via un littéral objet, cette valeur est <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a>.</li>\n  <li>Pour les objet créés via un littéral de tableau, cette valeur est <a class=\"page-not-created\" title=\"Cette documentation n'a pas encore été rédigée, vous pouvez aider en contribuant&nbsp;!\"><code>Array.prototype</code></a>.</li>\n  <li>Pour les fonctions, cette valeur est <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype</code></a>.</li>\n  <li>Pour les objets créés en utilisant <code>new fun</code>, avec <code>fun</code> un des constructeurs natif de fonctions, fournis par JavaScript (<a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>, <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>, <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a>, <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>, <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>, <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>, etc.), cette valeur est <code>fun.prototype</code>.</li>\n  <li>Pour les objets créés en utilisant <code>new fun</code>, avec <code>fun</code> une function definie dans un script, cette valeur est la valeur de <code>fun.prototype</code> au moment où <code>new fun</code> est évaluée. (Ainsi, si on affecte une nouvelle valeur à <code>fun.prototype</code>, les instances crées précédemment conserveront leur <code>[[Prototype]]</code>, les objets créés par la suite bénéficieront de la nouvelle valeur pour leur <code>[[Prototype]]</code>.)</li>\n</ul>\n<p>Le mutateur <code>__proto__</code> permet de changer le <code>[[Prototype]]</code> d'un objet. Cet objet doit être extensible selon <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible</code></a>, si ce n'est pas le cas, une exception <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> sera renvoyée. La valeur fournie pour le nouveau prototype doit être un objet ou <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>. Toute autre valeur entraînera un échec silencieux.</p>\n<p>Pour plus d'éléments sur le fonctionnement de l'héritage et des prototypes, voir la page sur <a href=\"/fr/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">l'héritage et les chaînes de prototypes</a>.</p>\n<p>Le propriété <code>__proto__</code> n'est qu'une propriété accesseur (composée d'une fonction accesseur (<em>getter</em>) et d'une fonction mutateur (<em>setter</em>)) pour <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a>. Si l'accès à <code>__proto__</code> consulte <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a>, on trouvera la propriété. Un accesseur qui ne consulte pas <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a> ne pourra pas trouver le prototype. Si une propriété <code>__proto__</code> est trouvée avant que <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a> ne soit consulté, cette propriété « cachera » <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> aucunProto <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> aucunProto<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>aucunProto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// null</span>\n\naucunProto<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>aucunProto<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 17</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>aucunProto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// null</span>\n\n<span class=\"token keyword\">var</span> protoCaché <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>protoCaché<span class=\"token punctuation\">,</span> <span class=\"token string\">\"__proto__\"</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">writable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>protoCaché<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>protoCaché<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":"<p>Dans ce qui suit, on crée un nouvelle instance d'<code>Employé</code> et on teste si <code>__proto__</code> est bien le même objet que le prototype de son constructeur.</p>\n<div class=\"notecard warning\" id=\"sect5\">\n  <p><strong>Attention :</strong> Les remarques données plus haut sur les atteintes à la performance restent valables pour ces exemples. Ces exemples permettent uniquement d'illustrer le fonctionnement de <code>__proto__</code>, ils ne font pas office de recommandations.</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// On déclare une fonction à utiliser comme constructeur</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Employé</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* on initialise l'instance */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// On crée une nouvelle instance d'Employé</span>\n<span class=\"token keyword\">var</span> fred <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Employ</span><span class=\"token function\">é</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// On teste l'équivalence</span>\nfred<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Employé</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n</code></pre></div>\n<p>À cet instant, <code>fred</code> hérite de <code>Employé</code>. On peut toutefois changer ça en assignant un nouvel objet à <code>fred.__proto__</code> :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Assigner un nouvel objet à __proto__</span>\nfred<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>fred</code> n'hérite plus de <code>Employé.prototype</code>, mais de <code>Object.prototype</code>. Il perd donc les propriétés héritées de <code>Employé.prototype</code>.</p>\n<p>Cela n'est possible que pour les objets <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\">extensibles</a>. La propriété <code>__proto__</code> d'un objet non-extensible ne peut pas être changée :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">preventExtensions</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobj<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// renvoie une exception TypeError</span>\n</code></pre></div>\n<p>On notera que même la propriété <code>__proto__</code> de <code>Object.prototype</code> peut être redéfinie tant que la chaîne de prototypes se termine par <code>null</code> :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//[[Prototype]]</span>\n                  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">salut</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">value</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'salut'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nb<span class=\"token punctuation\">.</span><span class=\"token function\">salut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Si la propriété <code>__proto__</code> de <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object.prototype</code> <small>(en-US)</small></a> ne permet pas d'aboutir à <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> via la chaîne de prototypes, on a une chaîne cyclique et on doit avoir une exception <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> \"cyclic __proto__ value\".</p>"}},{"type":"prose","value":{"id":"spécifications","title":"Spécifications","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Spécification</th>\n      <th>État</th>\n      <th>Commentaires</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-object.prototype.__proto__\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"fr\">La définition de 'Object.prototype.__proto__' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td>Incluse dans l'annexe (normative) pour le fonctionnalités additionneles d'ECMAScript pour les navigateurs web (note : la spécification codifie ce qui est déjà présent dans les implémentations).</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma262/#sec-additional-properties-of-the-object.prototype-object\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript (ECMA-262)<br><small lang=\"fr\">La définition de 'Object.prototype.__proto__' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-living\">Standard évolutif</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"javascript.builtins.Object.proto","dataURL":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto/bcd.json"}},{"type":"prose","value":{"id":"notes_de_compatibilité","title":"Notes de compatibilité","isH3":false,"content":"<p>Bien que la spécification ES2015 rende le support de <code>__proto__</code> nécessaire pour les navigateurs web, elle n'est pas obligatoire pour les autres environnements (bien que ce soit conseillé vu le caractère normatif de l'annexe). Si votre code doit être compatible avec un environnement qui n'est pas un navigateur web, il est recommandé d'utiliser <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a> et <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a> à la place.</p>"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Description","id":"description"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Notes de compatibilité","id":"notes_de_compatibilité"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"La propriété __proto__ de Object.prototype (en-US) est une propriété accesseur (un couple de fonction avec un accesseur (getter) et un mutateur (setter)) qui expose le [[Prototype]] interne (qui est soit un objet, soit null) de l'objet courant.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Object.prototype.__proto__","locale":"en-US","native":"English (US)"},{"title":"Object.prototype.__proto__","locale":"es","native":"Español"},{"title":"Object.prototype.__proto__","locale":"ja","native":"日本語"},{"title":"Object.prototype.__proto__","locale":"ko","native":"한국어"},{"title":"Object.prototype.__proto__","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Object.prototype.__proto__","locale":"ru","native":"Русский"},{"title":"Object.prototype.__proto__","locale":"zh-CN","native":"中文 (简体)"},{"title":"Object.prototype.__proto__","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"fr/web/javascript/reference/global_objects/object/proto","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/javascript/reference/global_objects/object/proto/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference","title":"Référence JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects","title":"Objets globaux"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object","title":"Object"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto","title":"Object.prototype.__proto__"}],"pageTitle":"Object.prototype.__proto__ - JavaScript | MDN","noIndexing":false}}