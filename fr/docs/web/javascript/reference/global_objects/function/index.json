{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Function","mdn_url":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects\">Objets standards</a></strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriétés</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong>Héritage&nbsp;:</strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Chaque fonction JavaScript est en réalité un objet <code>Function</code> (ce qu'on peut vérifier avec l'expression <code>(function(){}).constructor === Function</code> qui donne <code>true</code>).</p>"}},{"type":"prose","value":{"id":"constructeur","title":"Constructeur","isH3":false,"content":"<dl>\n  <dt id=\"function\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/Function\"><code>Function()</code></a></dt>\n  <dd>\n    <p>Crée un nouvel objet <code>Function</code>. Appeler le constructeur directement permet de créer des fonctions dynamiquement, mais ouvre la porte à des problèmes de sécurité et de performances (à l'instar de la fonction <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a>). Toutefois, à la différence de <code>eval()</code>, l'impact est bien moindre, car le constructeur <code>Function</code> crée des fonctions qui s'exécutent uniquement dans la portée globale.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"propriétés_des_instances","title":"Propriétés des instances","isH3":false,"content":"<dl>\n  <dt id=\"function.prototype.arguments\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>Un tableau contenant les arguments passés à la fonction. Cette propriété de <code>Function</code> est dépréciée, il faudra à la place utiliser l'objet <a href=\"/fr/docs/Web/JavaScript/Reference/Functions/arguments\"><code>arguments</code></a> qui est disponible à l'intérieur de la fonction.</p>\n  </dd>\n  <dt id=\"function.prototype.caller\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>Indique la fonction qui a appelé la fonction courante qui s'exécute. Cette propriété est dépréciée et ne fonctionne que pour les fonctions non-strictes.</p>\n  </dd>\n  <dt id=\"function.prototype.displayname\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></dt>\n  <dd>\n    <p>Le nom d'affichage de la fonction.</p>\n  </dd>\n  <dt id=\"function.prototype.length\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></dt>\n  <dd>\n    <p>Indique le nombre d'arguments attendus par la fonction.</p>\n  </dd>\n  <dt id=\"function.prototype.name\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></dt>\n  <dd>\n    <p>Le nom de la fonction.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"méthodes_des_instances","title":"Méthodes des instances","isH3":false,"content":"<dl>\n  <dt id=\"function.prototype.applyvarthisargvar_varargsarrayvar\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply(&lt;var&gt;thisArg&lt;/var&gt; [, &lt;var&gt;argsArray&lt;/var&gt;])</code></a></dt>\n  <dd>\n    <p>Appelle une fonction et définit sa valeur <code>this</code> avec l'argument <code>thisArg</code> fourni. Les arguments peuvent être passés via un <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Array\">tableau</a>.</p>\n  </dd>\n  <dt id=\"function.prototype.bindvarthisargvar_vararg1var_vararg2var_...varargnvar\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind(&lt;var&gt;thisArg&lt;/var&gt;[, &lt;var&gt;arg1&lt;/var&gt;[, &lt;var&gt;arg2&lt;/var&gt;[, ...&lt;var&gt;argN&lt;/var&gt;]]])</code></a></dt>\n  <dd>\n    <p>Crée une nouvelle fonction qui, lorsqu'elle est appelée, a sa valeur <code>this</code> fixée avec l'argument <code>thisArg</code> fourni. Une suite d'arguments peut également être fournie afin qu'ils soient passés parmi les premiers arguments de la nouvelle fonction ainsi créée lorsqu'elle est appelée.</p>\n  </dd>\n  <dt id=\"function.prototype.callvarthisargvar_vararg1var_vararg2var_...varargnvar\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call(&lt;var&gt;thisArg&lt;/var&gt;[, &lt;var&gt;arg1&lt;/var&gt;, &lt;var&gt;arg2&lt;/var&gt;, ...&lt;var&gt;argN&lt;/var&gt;])</code></a></dt>\n  <dd>\n    <p>Appelle une fonction en fixant sa valeur <code>this</code> avec la valeur fournie. Les arguments sont passés tels quels.</p>\n  </dd>\n  <dt id=\"function.prototype.tostring\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></dt>\n  <dd>\n    <p>Renvoie une chaîne de caractères qui représente le code source de la fonction. Il s'agit d'une surcharge de la méthode <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":""}},{"type":"prose","value":{"id":"différence_entre_lutilisation_du_constructeur_function_et_les_déclarations_de_fonction","title":"Différence entre l'utilisation du constructeur <code>Function()</code> et les déclarations de fonction","isH3":true,"content":"<p>Les fonctions créées avec le constructeur <code>Function()</code> ne créent pas de fermetures contenant leur contexte de création&nbsp;; elles sont toujours créées dans la portée globale. Lors de leur exécution, elles ne pourront accéder qu'à leurs propres variables locales et aux variables globales, elles ne pourront pas accéder aux variables de la portée dans laquelle le constructeur <code>Function()</code> a été appelé. Il s'agit d'un comportement différent que celui obtenu en utilisant <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a> avec une expression de fonction.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">creerFonction1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'return x;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ce x fait référence à la variable globale x</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">creerFonction2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span> \n        <span class=\"token comment\">// ce x fait référence à la variable locale x juste avant</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> f1 <span class=\"token operator\">=</span> <span class=\"token function\">creerFonction1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 10</span>\n<span class=\"token keyword\">var</span> f2 <span class=\"token operator\">=</span> <span class=\"token function\">creerFonction2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 20</span>\n</code></pre></div>\n<p>Bien que ce code fonctionne dans les navigateurs web, <code>f1()</code> déclenchera une erreur <code>ReferenceError</code> avec Node.js, car <code>x</code> ne sera pas trouvé. En effet, la portée de plus haut niveau de Node n'est pas la portée globale et <code>x</code> sera local au module.</p>","titleAsText":"Différence entre l'utilisation du constructeur Function() et les déclarations de fonction"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-function-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Function"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"javascript.builtins.Function","dataURL":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Functions\">Fonctions et portées</a></li>\n  <li>L'instruction <a href=\"/fr/docs/Web/JavaScript/Reference/Statements/function\"><code>function</code></a></li>\n  <li>L'expression <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/function\"><code>function</code></a></li>\n  <li>L'instruction <a href=\"/fr/docs/Web/JavaScript/Reference/Statements/function*\"><code>function*</code></a></li>\n  <li>L'expression <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/function*\"><code>function*</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\"><code>AsyncFunction</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\"><code>GeneratorFunction</code></a></li>\n</ul>"}}],"toc":[{"text":"Constructeur","id":"constructeur"},{"text":"Propriétés des instances","id":"propriétés_des_instances"},{"text":"Méthodes des instances","id":"méthodes_des_instances"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"Chaque fonction JavaScript est en réalité un objet Function (ce qu'on peut vérifier avec l'expression (function(){}).constructor === Function qui donne true).","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Function","locale":"en-US","native":"English (US)"},{"title":"Function","locale":"es","native":"Español"},{"title":"Function","locale":"ja","native":"日本語"},{"title":"Function","locale":"ko","native":"한국어"},{"title":"Function","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Function","locale":"ru","native":"Русский"},{"title":"Function","locale":"zh-CN","native":"中文 (简体)"},{"title":"Function","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"fr/web/javascript/reference/global_objects/function","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/javascript/reference/global_objects/function/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference","title":"Référence JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects","title":"Objets globaux"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function","title":"Function"}],"pageTitle":"Function - JavaScript | MDN","noIndexing":false}}