{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Number","mdn_url":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects\">Objets standards</a></strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\"><code>Number.EPSILON</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN\"><code>Number.NaN</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY\"><code>Number.NEGATIVE_INFINITY</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY\"><code>Number.POSITIVE_INFINITY</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\"><code>Number.isFinite()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\"><code>Number.isInteger()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>Number.isNaN()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\"><code>Number.parseFloat()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\"><code>Number.parseInt()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\"><code>Number.prototype.toExponential()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\"><code>Number.prototype.toFixed()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\"><code>Number.prototype.toLocaleString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\"><code>Number.prototype.toPrecision()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>Number.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/valueOf\"><code>Number.prototype.valueOf()</code></a></li></ol></li><li><strong>Héritage&nbsp;:</strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>L'objet <strong><code>Number</code></strong> est une enveloppe objet (<em>wrapper</em>) autour du <a href=\"/fr/docs/Web/JavaScript/Data_structures#le_type_nombre\">type primitif numérique</a>. Autrement dit, il est utilisé pour manipuler les nombres comme des objets. Pour créer un objet <code>Number</code>, on utilise le constructeur <code>Number()</code>.</p>\n<p>Le type JavaScript <code>Number</code> utilise <a href=\"https://fr.wikipedia.org/wiki/IEEE_754\" class=\"external\" rel=\" noopener\">une représentation binaire à précision double sur 64 bits telle que décrite par le standard IEEE 754</a>. Les implémentations plus récentes offrent un nouveau type : <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a> qui permet de représenter des entiers avec une précision arbitraire.</p>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span>valeur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// a === 123 donnera false</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// b === 123 donnera true</span>\na <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// donnera true</span>\nb <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// donnera false</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":true,"content":"<dl>\n  <dt id=\"valeur\"><code>valeur</code></dt>\n  <dd>\n    <p>La valeur numérique pour l'objet qu'on souhaite créer.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>L'objet <code>Number</code> est principalement utilisé dans les cas de figure suivants :</p>\n<ul>\n  <li>Si l'argument ne peut pas être converti en un nombre, il renverra <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>.</li>\n  <li>Dans un contexte de fonction simple (quand il n'est pas utilisé comme un constructeur avec l'opérateur <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>), <code>Number</code> peut être utilisé afin d'effectuer des conversions.</li>\n</ul>"}},{"type":"prose","value":{"id":"propriétés","title":"Propriétés","isH3":false,"content":"<dl>\n  <dt id=\"number.epsilon\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\"><code>Number.EPSILON</code></a></dt>\n  <dd>\n    <p>Le plus petit intervalle entre deux valeurs qu'il est possible de représenter en JavaScript.</p>\n  </dd>\n  <dt id=\"number.max_safe_integer\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a></dt>\n  <dd>\n    <p>La valeur entière maximale qu'on peut représenter en JavaScript (<code>2^53 - 1</code>).</p>\n  </dd>\n  <dt id=\"number.max_value\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a></dt>\n  <dd>\n    <p>La valeur numérique maximale qu'on peut représenter en JavaScript.</p>\n  </dd>\n  <dt id=\"number.min_safe_integer\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code></a></dt>\n  <dd>\n    <p>La valeur entière minimale qu'on peut représenter en JavaScript (<code>-(2^53 - 1)</code>).</p>\n  </dd>\n  <dt id=\"number.min_value\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a></dt>\n  <dd>\n    <p>La plus petite valeur qu'on peut représenter en JavaScript, c'est-à-dire le plus petit nombre positif (le nombre le plus près de zéro qui n'est pas égal à zéro et qu'on peut représenter en JavaScript).</p>\n  </dd>\n  <dt id=\"number.nan\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN\"><code>Number.NaN</code></a></dt>\n  <dd>\n    <p>Une valeur spéciale pour représenter les valeurs non-numériques (<strong>NaN</strong> correspond à «&nbsp;<i lang=\"en\"><strong>N</strong>ot <strong>a</strong> <strong>N</strong>umber</i>&nbsp;» en anglais, qui signifie «&nbsp;n'est pas un nombre&nbsp;»).</p>\n  </dd>\n  <dt id=\"number.negative_infinity\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY\"><code>Number.NEGATIVE_INFINITY</code></a></dt>\n  <dd>\n    <p>Une valeur spéciale pour représenter l'infini négatif.</p>\n  </dd>\n  <dt id=\"number.positive_infinity\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY\"><code>Number.POSITIVE_INFINITY</code></a></dt>\n  <dd>\n    <p>Une valeur spéciale pour représenter l'infini (positif).</p>\n  </dd>\n  <dt id=\"number.prototype_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number.prototype</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Cet objet permet d'ajouter des propriétés aux instances de <code>Number</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"méthodes","title":"Méthodes","isH3":false,"content":"<dl>\n  <dt id=\"number.isnan\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>Number.isNaN()</code></a></dt>\n  <dd>\n    <p>Cette méthode permet de déterminer si la valeur passée en argument vaut <code>NaN</code>.</p>\n  </dd>\n  <dt id=\"number.isfinite\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\"><code>Number.isFinite()</code></a></dt>\n  <dd>\n    <p>Cette méthode permet de déterminer si la valeur numérique passée en argument est un nombre fini.</p>\n  </dd>\n  <dt id=\"number.isinteger\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\"><code>Number.isInteger()</code></a></dt>\n  <dd>\n    <p>Cette méthode permet de déterminer si la valeur passée en argument est un entier.</p>\n  </dd>\n  <dt id=\"number.issafeinteger\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a></dt>\n  <dd>\n    <p>Cette méthode permet de déterminer si la valeur passée en argument peut correctement être représentée comme un entier en JavaScript (savoir si elle est comprise entre <code>-(2^53 - 1)</code> et <code>2^53 - 1</code>).</p>\n  </dd>\n  <dt id=\"number.tointeger\"><a class=\"page-not-created\" title=\"Cette documentation n'a pas encore été rédigée, vous pouvez aider en contribuant&nbsp;!\"><code>Number.toInteger()</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>Cette méthode est utilisée afin d'évaluer et de convertir la valeur passée en argument en entier (ou en l'<a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">infini</a>). Cette méthode a été supprimée.</p>\n  </dd>\n  <dt id=\"number.parsefloatstring\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\"><code>Number.parseFloat(<var>string</var>)</code></a></dt>\n  <dd>\n    <p>Cette méthode correspond à la méthode <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\"><code>parseFloat()</code></a> de l'objet global.</p>\n  </dd>\n  <dt id=\"number.parseintstring_radix\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\"><code>Number.parseInt(<var>string</var>, [<var>radix</var>])</code></a></dt>\n  <dd>\n    <p>Cette méthode correspond à la méthode <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt()</code></a> de l'objet global.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"les_instances_de_number","title":"Les instances de <code>Number</code>","isH3":false,"content":"<p>Toutes les instances de <code>Number</code> héritent de <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number.prototype</code> <small>(en-US)</small></a>. Il est possible de modifier le prototype du constructeur <code>Number</code> pour affecter toutes les instances de <code>Number</code>.</p>","titleAsText":"Les instances de Number"}},{"type":"prose","value":{"id":"méthodes_2","title":"Méthodes","isH3":true,"content":"<dl>\n  <dt id=\"number.prototype.toexponentialfractiondigits\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\"><code>Number.prototype.toExponential(<var>fractionDigits</var>)</code></a></dt>\n  <dd>\n    <p>Retourne une chaîne représentant le nombre en notation exponentielle.</p>\n  </dd>\n  <dt id=\"number.prototype.tofixeddigits\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\"><code>Number.prototype.toFixed(<var>digits</var>)</code></a></dt>\n  <dd>\n    <p>Retourne une chaîne représentant le nombre avec la notation virgule fixe.</p>\n  </dd>\n  <dt id=\"number.prototype.tolocalestringlocales_options\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\"><code>Number.prototype.toLocaleString([<var>locales</var> [, <var>options</var>]])</code></a></dt>\n  <dd>\n    <p>Retourne une chaîne avec une représentation sensible à la langue de ce nombre. Surcharge la méthode <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a>.</p>\n  </dd>\n  <dt id=\"number.prototype.toprecisionprecision\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\"><code>Number.prototype.toPrecision(<var>precision</var>)</code></a></dt>\n  <dd>\n    <p>Retourne une chaîne représentant le nombre avec une précision donnée en notation virgule fixe ou exponentielle.</p>\n  </dd>\n  <dt id=\"number.prototype.tostringradix\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>Number.prototype.toString([<var>radix</var>])</code></a></dt>\n  <dd>\n    <p>Retourne une chaîne représentant le nombre dans une base numérique (radix) donnée. Surcharge la méthode <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a>.</p>\n  </dd>\n  <dt id=\"number.prototype.valueof\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/valueOf\"><code>Number.prototype.valueOf()</code></a></dt>\n  <dd>\n    <p>Retourne la valeur primitive de l'objet spécifié. Surcharge la méthode <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":""}},{"type":"prose","value":{"id":"utiliser_lobjet_number_pour_affecter_des_valeurs_numériques_à_des_variables","title":"Utiliser l'objet <code>Number</code> pour affecter des valeurs numériques à des variables","isH3":true,"content":"<p>Dans l'exemple suivant, on utilise les propriétés de l'objet <code>Number</code> pour affecter des valeurs à des variables numériques :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> plusGrandNombre <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> plusPetitNombre <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MIN_VALUE</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> infini <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">POSITIVE_INFINITY</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> infiniNégatif <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">NEGATIVE_INFINITY</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> nonNumérique <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Utiliser l'objet Number pour affecter des valeurs numériques à des variables"}},{"type":"prose","value":{"id":"intervalle_entier_pour_number","title":"Intervalle entier pour <code>Number</code>","isH3":true,"content":"<p>Dans l'exemple suivant, on illustre les valeurs numériques maximales et minimales (exclues) qu'on peut représenter avec un nombre en JavaScript (pour plus de détails, <a href=\"https://tc39.github.io/ecma262/#sec-ecmascript-language-types-number-type\" class=\"external\" rel=\" noopener\">voir le chapitre 6.1.6 du standard ECMAScript</a>) :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> biggestInt <span class=\"token operator\">=</span> <span class=\"token number\">9007199254740992</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Number.MAX_SAFE_INTEGER+1 (2^53-1)</span>\n<span class=\"token keyword\">var</span> smallestInt <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">9007199254740992</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Number.MIN_SAFE_INTEGER-1 -(2^53-1)</span>\n</code></pre></div>\n<p>Lorsqu'on analyse et convertit des données JSON, les valeurs en dehors de cet intervalle peuvent entraîner des erreurs ou des corruptions de valeurs lors de leurs conversions. Selon les objets qu'on souhaite représenter, on peut utiliser <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> dans certains cas pour représenter certaines valeurs.</p>","titleAsText":"Intervalle entier pour Number"}},{"type":"prose","value":{"id":"utiliser_number_pour_convertir_un_objet_date","title":"Utiliser <code>Number</code> pour convertir un objet <code>Date</code>","isH3":true,"content":"<p>Dans l'exemple suivant, on convertit un objet <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> en une valeur numérique grâce à la fonction <code>Number</code> :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'December 17, 1995 03:24:00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Ceci affichera \"819167040000\".</p>","titleAsText":"Utiliser Number pour convertir un objet Date"}},{"type":"prose","value":{"id":"convertir_une_chaîne_représentant_une_valeur_numérique_en_un_nombre","title":"Convertir une chaîne représentant une valeur numérique en un nombre","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 123</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"12.3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 12.3</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"12.00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 12</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123e-1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 12.3</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 0</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x11\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 17</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0b11\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 3</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0o11\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 9</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"100a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-Infinity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -Infinity</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note :</strong> On pourra également convertir <code>null</code> en <code>0</code> grâce à <code>Number</code> : <code>Number(null)</code> donnera <code>0</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"spécifications","title":"Spécifications","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Spécification</th>\n      <th>État</th>\n      <th>Commentaires</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%201st%20edition,%20June%201997.pdf\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"La spécificaction 'ECMAScript 1st Edition (ECMA-262)'\" rel=\" noopener\">ECMAScript 1st Edition (ECMA-262)</a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td>Définition initiale. Implémentée avec JavaScript 1.1.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/5.1/#sec-15.7\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 5.1 (ECMA-262)<br><small lang=\"fr\">La définition de 'Number' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-number-objects\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"fr\">La définition de 'Number' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td>Ajout des méthodes et propriétés suivantes : (<a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\"><code>EPSILON</code></a>, <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\"><code>isFinite</code></a>, <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\"><code>isInteger</code></a>, <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>isNaN</code></a>, <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\"><code>parseFloat</code></a>, <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\"><code>parseInt</code></a>)</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma262/#sec-number-objects\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript (ECMA-262)<br><small lang=\"fr\">La définition de 'Number' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-living\">Standard évolutif</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"javascript.builtins.Number","dataURL":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a></li>\n  <li>L'objet global <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Data_structures#le_type_nombre\">Les types de données en JavaScript</a></li>\n  <li><a href=\"https://medium.com/@maximus.koretskyi/javascripts-number-type-8d59199db1b6#.9whwe88tz\" class=\"external\" rel=\" noopener\">Un billet sur le type <code>Number</code> (en anglais)</a></li>\n  <li>Représenter de grands entiers avec une précision arbitraire : <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Description","id":"description"},{"text":"Propriétés","id":"propriétés"},{"text":"Méthodes","id":"méthodes"},{"text":"Les instances de <code>Number</code>","id":"les_instances_de_number"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"L'objet Number est une enveloppe objet (wrapper) autour du type primitif numérique. Autrement dit, il est utilisé pour manipuler les nombres comme des objets. Pour créer un objet Number, on utilise le constructeur Number().","popularity":0.0016,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Number","locale":"en-US","native":"English (US)"},{"title":"Number","locale":"es","native":"Español"},{"title":"Number","locale":"ja","native":"日本語"},{"title":"Number","locale":"ko","native":"한국어"},{"title":"Número","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Number","locale":"ru","native":"Русский"},{"title":"Number","locale":"zh-CN","native":"中文 (简体)"},{"title":"Number","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"fr/web/javascript/reference/global_objects/number","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/javascript/reference/global_objects/number/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference","title":"Référence JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects","title":"Objets globaux"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number","title":"Number"}],"pageTitle":"Number - JavaScript | MDN","noIndexing":false}}