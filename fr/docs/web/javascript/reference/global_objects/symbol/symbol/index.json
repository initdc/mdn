{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Constructeur Symbol()","mdn_url":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/Symbol","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects\">Objets standards</a></strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol\"><code>Symbol</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator\"><code>Symbol.asyncIterator</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/description\"><code>Symbol.prototype.description</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/hasInstance\"><code>Symbol.hasInstance</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/isConcatSpreadable\"><code>Symbol.isConcatSpreadable</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator\"><code>Symbol.iterator</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/match\"><code>Symbol.match</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/matchAll\"><code>Symbol.matchAll</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/replace\"><code>Symbol.replace</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/search\"><code>Symbol.search</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/species\"><code>Symbol.species</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/split\"><code>Symbol.split</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive\"><code>Symbol.toPrimitive</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag\"><code>Symbol.toStringTag</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/unscopables\"><code>Symbol.unscopables</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/@@toPrimitive\"><code>Symbol.prototype[@@toPrimitive]</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for\"><code>Symbol.for()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/keyFor\"><code>Symbol.keyFor()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toString\"><code>Symbol.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/valueOf\"><code>Symbol.prototype.valueOf()</code></a></li></ol></li><li><strong>Héritage&nbsp;:</strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Le constructeur <code>Symbol()</code> renvoie une valeur de type <strong><code>symbol</code></strong>. Ce n'est pas à proprement parler un constructeur, car il n'accepte pas la syntaxe <code>new Symbol()</code> et qu'il n'est pas prévu pour créer des sous-classes. On pourra l'utiliser comme valeur pour la clause <a href=\"/fr/docs/Web/JavaScript/Reference/Classes/extends\"><code>extends</code></a> d'une définition de classe, mais on ne pourra pas l'utiliser avec un appel <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/super\"><code>super</code></a>, cela entraînera une exception.</p><iframe class=\"interactive\" height=\"692\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/symbol-constructor.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span>description<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":true,"content":"<dl>\n  <dt id=\"description\"><code>description</code> <span class=\"badge inline optional\">Facultatif</span></dt>\n  <dd>\n    <p>Une chaîne de caractères qui décrit le symbole. Elle peut être utilisée pour le débogage mais ne permet pas d'accéder au symbole lui-même.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":""}},{"type":"prose","value":{"id":"créer_des_symboles","title":"Créer des symboles","isH3":true,"content":"<p>Pour créer un nouveau symbole primitif, on écrit <code>Symbol()</code> en fournissant éventuellement une chaîne de caractères comme description&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> sym1 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sym2 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> sym3 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Dans le code précédent, on crée trois nouveaux symboles. On notera que <code>Symbol(\"toto\")</code> ne convertit pas la chaîne de caractères <code>\"toto\"</code> en un symbole. C'est bien un nouveau symbole qui est créé chaque fois&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toto'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// false</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"new_symbol…","title":"<code>new Symbol(…)</code>","isH3":true,"content":"<p>La syntaxe qui suit, utilisant l'opérateur <a href=\"/fr/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a>, déclenchera une exception <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a>&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> sym <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// TypeError</span>\n</code></pre></div>\n<p>Cela permet d'éviter aux développeuses et développeurs de créer un objet enveloppant une valeur symbole primitive plutôt qu'un nouveau symbole. Ce comportement se distingue des autres types de données primitifs pour lesquels c'est possible (par exemple <code>new Boolean()</code>, <code>new String()</code> et <code>new Number()</code>).</p>\n<p>Si on souhaite vraiment envelopper un symbole dans une valeur objet, il faudra utiliser la fonction <code>Object()</code>&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> sym    <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> symObj <span class=\"token operator\">=</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>sym<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> sym<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// =&gt; \"symbol\"</span>\n<span class=\"token keyword\">typeof</span> symObj<span class=\"token punctuation\">;</span> <span class=\"token comment\">// =&gt; \"object\"</span>\n</code></pre></div>","titleAsText":"new Symbol(…)"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-symbol-constructor","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Symbol.Symbol"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"javascript.builtins.Symbol.Symbol","dataURL":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/Symbol/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-symbol\" class=\"external\" rel=\" noopener\">Prothèse d'émulation pour <code>Symbol</code> avec la bibliothèque d'émulation <code>core-js</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">La page du glossaire sur le type de données symbole</a></li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"Le constructeur Symbol() renvoie une valeur de type symbol. Ce n'est pas à proprement parler un constructeur, car il n'accepte pas la syntaxe new Symbol() et qu'il n'est pas prévu pour créer des sous-classes. On pourra l'utiliser comme valeur pour la clause extends d'une définition de classe, mais on ne pourra pas l'utiliser avec un appel super, cela entraînera une exception.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Symbol() constructor","locale":"en-US","native":"English (US)"},{"title":"Symbol() constructor","locale":"es","native":"Español"},{"title":"Symbol() コンストラクター","locale":"ja","native":"日本語"}],"source":{"folder":"fr/web/javascript/reference/global_objects/symbol/symbol","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/javascript/reference/global_objects/symbol/symbol/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference","title":"Référence JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects","title":"Objets globaux"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol","title":"Symbol"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Symbol/Symbol","title":"Constructeur Symbol()"}],"pageTitle":"Constructeur Symbol() - JavaScript | MDN","noIndexing":false}}