{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"DataView","mdn_url":"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects\">Objets standards</a></strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/buffer\"><code>DataView.prototype.buffer</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/byteLength\"><code>DataView.prototype.byteLength</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/byteOffset\"><code>DataView.prototype.byteOffset</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getBigInt64\"><code>DataView.prototype.getBigInt64()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getBigUint64\"><code>DataView.prototype.getBigUint64()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getFloat32\"><code>DataView.prototype.getFloat32()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getFloat64\"><code>DataView.prototype.getFloat64()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt16\"><code>DataView.prototype.getInt16()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt32\"><code>DataView.prototype.getInt32()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt8\"><code>DataView.prototype.getInt8()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint16\"><code>DataView.prototype.getUint16()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint32\"><code>DataView.prototype.getUint32()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint8\"><code>DataView.prototype.getUint8()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setBigInt64\"><code>DataView.prototype.setBigInt64()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setBigUint64\"><code>DataView.prototype.setBigUint64()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setFloat32\"><code>DataView.prototype.setFloat32()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setFloat64\"><code>DataView.prototype.setFloat64()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt16\"><code>DataView.prototype.setInt16()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt32\"><code>DataView.prototype.setInt32()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt8\"><code>DataView.prototype.setInt8()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint16\"><code>DataView.prototype.setUint16()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint32\"><code>DataView.prototype.setUint32()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint8\"><code>DataView.prototype.setUint8()</code></a></li></ol></li><li><strong>Héritage&nbsp;:</strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>La vue <strong><code>DataView</code></strong> fournit une interface de bas niveau pour lire et écrire des données de différents types numériques dans un objet <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>, quel que soit le <a href=\"https://fr.wikipedia.org/wiki/Boutisme\" class=\"external\" rel=\" noopener\">«&nbsp;boutisme&nbsp;» (<i lang=\"en\">endianness</i>)</a> de la plateforme.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":""}},{"type":"prose","value":{"id":"le_boutisme_endianness","title":"Le boutisme (<i lang=\"en\">endianness</i>)","isH3":true,"content":"<p>Les formats numériques sur plusieurs octets sont représentés différemment en mémoire selon l'architecture de la machine (voir <a href=\"/fr/docs/Glossary/Endianness\">la page du glossaire sur le boutisme</a> pour plus d'explications). Les accesseurs <code>DataView</code> permettent de contrôler explicitement la façon dont se fait l'accès aux données, quel que soit le boutisme de l'ordinateur.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> littleEndian <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setInt16</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">/* littleEndian */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Int16Array utilise le boutisme de la plateforme</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int16Array</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>littleEndian<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true ou false</span>\n</code></pre></div>","titleAsText":"Le boutisme (endianness)"}},{"type":"prose","value":{"id":"gestion_des_valeurs_entières_sur_64_bits","title":"Gestion des valeurs entières sur 64 bits","isH3":true,"content":"<p>Certains navigateurs ne prennent pas en charge <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setBigInt64\"><code>DataView.prototype.setBigInt64()</code></a> et <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setBigUint64\"><code>DataView.prototype.setBigUint64()</code></a>. Pour que les opérations sur 64 bits fonctionnent pour ces navigateurs, il est possible d'implémenter une fonction <code>getUint64()</code> qui permet d'obtenir des valeurs avec une précision correcte jusqu'à <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a>, ce qui peut être suffisant selon le cas d'usage.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">getUint64</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataview<span class=\"token punctuation\">,</span> byteOffset<span class=\"token punctuation\">,</span> littleEndian</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// on décompose la valeur 64 sur bits en deux nombres 32 bits</span>\n  <span class=\"token keyword\">const</span> gauche <span class=\"token operator\">=</span> dataview<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>byteOffset<span class=\"token punctuation\">,</span> littleEndian<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> droite <span class=\"token operator\">=</span> dataview<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>byteOffset <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> littleEndian<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// on combine les deux valeurs 32 bits</span>\n  <span class=\"token keyword\">const</span> combinaison <span class=\"token operator\">=</span> littleEndian <span class=\"token operator\">?</span> gauche <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>droite <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">32</span><span class=\"token operator\">*</span>gauche <span class=\"token operator\">+</span> droite<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isSafeInteger</span><span class=\"token punctuation\">(</span>combinaison<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>combinaison<span class=\"token punctuation\">,</span> <span class=\"token string\">\" dépasse MAX_SAFE_INTEGER : perte de précision !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> combinaison<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>On peut également créer un objet <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a> si on veut avoir accès à 64 bits. Sur le plan des performances, les grands entiers (<a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a> ont une taille variable, aussi leur manipulation sera nécessairement plus lente que celle des nombres stockés sur 32 bits. Ceci étant écrit, les valeurs natives <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a> seront plus performantes que les implémentations tierces (bibliothèques, etc.).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> BigInt <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>BigInt<span class=\"token punctuation\">,</span> bigThirtyTwo <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bigZero <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getUint64BigInt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dataview<span class=\"token punctuation\">,</span> byteOffset<span class=\"token punctuation\">,</span> littleEndian</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// on décompose la valeur 64 sur bits en deux nombres 32 bits (4 octets)</span>\n  <span class=\"token keyword\">const</span> gauche <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span>dataview<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span>byteOffset<span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>littleEndian<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> droite <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span>dataview<span class=\"token punctuation\">.</span><span class=\"token function\">getUint32</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>byteOffset<span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token operator\">|</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>littleEndian<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// on recombine les deux valeurs sur 32 bits et on la renvoie</span>\n  <span class=\"token keyword\">return</span> littleEndian <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>droite<span class=\"token operator\">&lt;&lt;</span>bigThirtyTwo<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span>gauche <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>gauche<span class=\"token operator\">&lt;&lt;</span>bigThirtyTwo<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span>droite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"constructeur","title":"Constructeur","isH3":false,"content":"<dl>\n  <dt id=\"dataview\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/DataView\"><code>DataView()</code></a></dt>\n  <dd>\n    <p>Crée un nouvel objet <code>DataView</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"propriétés_des_instances","title":"Propriétés des instances","isH3":false,"content":"<dl>\n  <dt id=\"dataview.prototype.buffer\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/buffer\"><code>DataView.prototype.buffer</code></a></dt>\n  <dd>\n    <p>L'objet <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> référencé par la vue courante. Cette propriété est déterminée au moment de la construction et est donc uniquement <strong>accessible en lecture seule</strong>.</p>\n  </dd>\n  <dt id=\"dataview.prototype.bytelength\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/byteLength\"><code>DataView.prototype.byteLength</code></a></dt>\n  <dd>\n    <p>La longueur, exprimée en octets, de cette vue, à partir du début de l'objet <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> correspondant. Cette propriété est déterminée au moment de la construction et est donc uniquement <strong>accessible en lecture seule</strong>.</p>\n  </dd>\n  <dt id=\"dataview.prototype.byteoffset\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/byteOffset\"><code>DataView.prototype.byteOffset</code></a></dt>\n  <dd>\n    <p>Le décalage, exprimé en octets, de cette vue, par rapport au début de l'objet <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> correspondant. Cette propriété est déterminée au moment de la construction et est donc uniquement <strong>accessible en lecture seule</strong>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"méthodes_des_instances","title":"Méthodes des instances","isH3":false,"content":"<dl>\n  <dt id=\"dataview.prototype.getint8\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt8\"><code>DataView.prototype.getInt8()</code></a></dt>\n  <dd>\n    <p>Obtient un entier signé sur 8 bits (équivalent au type <code>byte</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.getuint8\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint8\"><code>DataView.prototype.getUint8()</code></a></dt>\n  <dd>\n    <p>Obtient un entier non-signé sur 8 bits (équivalent au type <code>unsigned byte</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.getint16\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt16\"><code>DataView.prototype.getInt16()</code></a></dt>\n  <dd>\n    <p>Obtient un entier signé sur 16 bits (équivalent au type <code>short</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.getuint16\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint16\"><code>DataView.prototype.getUint16()</code></a></dt>\n  <dd>\n    <p>Obtient un entier non-signé sur 16 bits (équivalent au type <code>unsigned short</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.getint32\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt32\"><code>DataView.prototype.getInt32()</code></a></dt>\n  <dd>\n    <p>Obtient un entier signé sur 32 bits (équivalent au type <code>long</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.getuint32\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint32\"><code>DataView.prototype.getUint32()</code></a></dt>\n  <dd>\n    <p>Obtient un entier non-signé sur 32 bits (équivalent au type <code>unsigned long</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.getfloat32\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getFloat32\"><code>DataView.prototype.getFloat32()</code></a></dt>\n  <dd>\n    <p>Obtient un nombre flottant signé sur 32 bits (équivalent au type <code>float</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.getfloat64\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getFloat64\"><code>DataView.prototype.getFloat64()</code></a></dt>\n  <dd>\n    <p>Obtient un nombre flottant signé sur 64 bits (équivalent au type <code>double</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.getbigint64\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getBigInt64\"><code>DataView.prototype.getBigInt64()</code></a></dt>\n  <dd>\n    <p>Obtient un entier signé sur 64 bits (équivalent au type <code>long long</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.getbiguint64\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/getBigUint64\"><code>DataView.prototype.getBigUint64()</code></a></dt>\n  <dd>\n    <p>Obtient un entier non-signé sur 64 bits (équivalent au type <code>unsigned long long</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.setint8\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt8\"><code>DataView.prototype.setInt8()</code></a></dt>\n  <dd>\n    <p>Enregistre un entier signé sur 8 bits (équivalent au type <code>byte</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.setuint8\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint8\"><code>DataView.prototype.setUint8()</code></a></dt>\n  <dd>\n    <p>Enregistre un entier non-signé sur 8 bits (équivalent au type <code>unsigned byte</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.setint16\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt16\"><code>DataView.prototype.setInt16()</code></a></dt>\n  <dd>\n    <p>Enregistre un entier signé sur 16 bits (équivalent au type <code>short</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.setuint16\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint16\"><code>DataView.prototype.setUint16()</code></a></dt>\n  <dd>\n    <p>Enregistre un entier non-signé sur 16 bits (équivalent au type <code>unsigned short</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.setint32\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt32\"><code>DataView.prototype.setInt32()</code></a></dt>\n  <dd>\n    <p>Enregistre un entier signé sur 32 bits (équivalent au type <code>long</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.setuint32\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint32\"><code>DataView.prototype.setUint32()</code></a></dt>\n  <dd>\n    <p>Enregistre un entier non-signé sur 32 bits (équivalent au type <code>unsigned long</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.setfloat32\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setFloat32\"><code>DataView.prototype.setFloat32()</code></a></dt>\n  <dd>\n    <p>Enregistre un entier signé sur 32 bits (équivalent au type <code>float</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.setfloat64\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setFloat64\"><code>DataView.prototype.setFloat64()</code></a></dt>\n  <dd>\n    <p>Enregistre un entier signé sur 64 bits (équivalent au type <code>double</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.setbigint64\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setBigInt64\"><code>DataView.prototype.setBigInt64()</code></a></dt>\n  <dd>\n    <p>Enregistre un entier signé sur 64 bits (équivalent au type <code>long long</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n  <dt id=\"dataview.prototype.setbiguint64\"><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/setBigUint64\"><code>DataView.prototype.setBigUint64()</code></a></dt>\n  <dd>\n    <p>Enregistre un entier non-signé sur 64 bits (équivalent au type <code>unsigned long long</code>) situé à l'octet relatif au début de la vue.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":""}},{"type":"prose","value":{"id":"utiliser_dataview","title":"Utiliser <code>DataView</code>","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nview<span class=\"token punctuation\">.</span><span class=\"token function\">setInt16</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nview<span class=\"token punctuation\">.</span><span class=\"token function\">getInt16</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\n</code></pre></div>","titleAsText":"Utiliser DataView"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/structured-data.html#sec-dataview-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.DataView"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"javascript.builtins.DataView","dataURL":"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-typed-arrays\" class=\"external\" rel=\" noopener\">Prothèse d'émulation pour <code>DataView</code> dans <code>core-js</code></a></li>\n  <li><a href=\"https://github.com/jDataView/jDataView\" class=\"external\" rel=\" noopener\">jDataView</a>&nbsp;: une bibliothèque JavaScript qui ajoute des prothèses et des extensions à l'API <code>DataView</code> afin de pouvoir la manipuler au travers des différents navigateurs et de Node.js.</li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\"><code>SharedArrayBuffer</code></a></li>\n</ul>"}}],"toc":[{"text":"Description","id":"description"},{"text":"Constructeur","id":"constructeur"},{"text":"Propriétés des instances","id":"propriétés_des_instances"},{"text":"Méthodes des instances","id":"méthodes_des_instances"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"La vue DataView fournit une interface de bas niveau pour lire et écrire des données de différents types numériques dans un objet ArrayBuffer, quel que soit le « boutisme » (endianness) de la plateforme.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"DataView","locale":"en-US","native":"English (US)"},{"title":"DataView","locale":"ja","native":"日本語"},{"title":"DataView","locale":"ko","native":"한국어"},{"title":"DataView","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"DataView","locale":"ru","native":"Русский"},{"title":"DataView","locale":"zh-CN","native":"中文 (简体)"},{"title":"DataView","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"fr/web/javascript/reference/global_objects/dataview","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/javascript/reference/global_objects/dataview/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference","title":"Référence JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects","title":"Objets globaux"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/DataView","title":"DataView"}],"pageTitle":"DataView - JavaScript | MDN","noIndexing":false}}