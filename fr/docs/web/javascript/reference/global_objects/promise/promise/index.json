{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Constructeur Promise()","mdn_url":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/Promise","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects\">Objets standards</a></strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/@@species\"><code>get Promise[@@species]</code> <small>(en-US)</small></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\"><code>Promise.all()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled\"><code>Promise.allSettled()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/any\"><code>Promise.any()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\"><code>Promise.prototype.catch()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/finally\"><code>Promise.prototype.finally()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\"><code>Promise.race()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject\"><code>Promise.reject()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve\"><code>Promise.resolve()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\"><code>Promise.prototype.then()</code></a></li></ol></li><li><strong>Héritage&nbsp;:</strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Le constructeur <strong><code>Promise()</code></strong> est principalement utilisé afin d'envelopper des fonctions qui ne prennent pas en charge les promesses.</p><iframe class=\"interactive\" height=\"692\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/promise-constructor.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span>executeur<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":true,"content":"<dl>\n  <dt id=\"executeur\"><code>executeur</code></dt>\n  <dd>\n    <p>Une <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\">fonction</a> à exécuter par le constructeur lors de la construction du nouvel objet <code>Promise</code>. <code>executeur</code> contient du code spécifique qui relie le résultat d'une opération à une promesse. C'est le programme qui doit fournir ce code. Sa signature doit être&nbsp;:</p>\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fonctionResolution<span class=\"token punctuation\">,</span> fonctionRejet</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// généralement une opération asynchrone</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n    <p><code>fonctionResolution</code> et <code>fonctionRejet</code> sont également des fonctions, qu'on peut nommer librement. Ces deux fonctions prennent un seul paramètre, qui peut être de n'importe quel type.</p><!-- prettier-ignore -->\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">fonctionResolution</span><span class=\"token punctuation\">(</span>valeur<span class=\"token punctuation\">)</span> <span class=\"token comment\">// appelée lors de la résolution</span>\n<span class=\"token function\">fonctionRejet</span><span class=\"token punctuation\">(</span>raison<span class=\"token punctuation\">)</span>      <span class=\"token comment\">// appelée lors du rejet</span>\n</code></pre></div>\n    <p>Le paramètre <code>valeur</code> de <code>fonctionResolution</code> peut être une autre promesse, auquel cas la promesse est insérée dynamiquement dans <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise#encha%C3%AEnement_de_promesses\">la chaîne de promesses</a>.</p>\n    <p>Quant à <code>executeur</code>, il est important de comprendre&nbsp;:</p>\n    <ul>\n      <li>Que la valeur de retour de <code>executeur</code> est ignorée.</li>\n      <li>Que si une erreur est déclenchée pendant l'exécution de <code>executeur</code>, la promesse est rejetée.</li>\n    </ul>\n    <p>Ainsi, voici le mécanisme par lequel <code>executeur</code> produit un effet&nbsp;:</p>\n    <ul>\n      <li>Au moment où le constructeur génère le nouvel objet <code>Promise</code>, il génère également une paire de fonctions correspondantes <code>fonctionResolution</code> et <code>fonctionRejet</code> qui sont «&nbsp;reliées&nbsp;» à l'objet <code>Promise</code>.</li>\n      <li>Le code contenu dans <code>executeur</code> peut réaliser une opération et refléter le résultat de l'opération (si la valeur n'est pas un autre objet <code>Promise</code>) en object) comme étant «&nbsp;résolue&nbsp;» ou «&nbsp;rejetée&nbsp;» en appelant respectivement <code>fonctionResolution</code> ou <code>fonctionRejet</code>.</li>\n      <li>Autrement dit, le code contenu dans <code>executeur</code> communique par l'effet de bord fourni avec <code>fonctionResolution</code> ou <code>fonctionRejet</code>. De cette façon, la promesse devient «&nbsp;résolue&nbsp;» ou «&nbsp;rejetée&nbsp;».</li>\n    </ul>\n    <p>Pour résumer, voici les étapes généralement suivies&nbsp;:</p>\n    <ol>\n      <li>L'opération portée par <code>executeur</code> est asynchrone et fournit une fonction de rappel (<i lang=\"en\">callback</i>).</li>\n      <li>La fonction de rappel est définie au sein du code de <code>executeur</code>.</li>\n      <li>La fonction de rappel se termine en invoquant <code>fonctionResolution</code>.</li>\n      <li>L'invocation de <code>fonctionResolution</code> se fait avec un paramètre <code>valeur</code>.</li>\n      <li><code>valeur</code> est passée en retour à l'objet <code>Promise</code>.</li>\n      <li>L'objet <code>Promise</code> appelle, de façon asynchrone, toute fonction passée via <code>.then(gestionSucces)</code>.</li>\n      <li>La valeur reçue par <code>.then(gestionSucces)</code> est passée comme paramètre d'entrée à <code>gestionSucces</code> qui est appelée (voir <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise#encha%C3%AEnement_de_promesses\">l'enchaînement des promesses</a>).</li>\n    </ol>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"valeur_de_retour","title":"Valeur de retour","isH3":true,"content":"<p>Lorsqu'il est appelé avec l'opérateur <code>new</code>, le constructeur <code>Promise()</code> renvoie un objet <code>Promise</code>. Cette promesse sera résolue lorsque l'une des fonctions <code>fonctionResolution</code> ou <code>fonctionRejet</code> sera appelée. Si on passe une promesse comme argument à <code>fonctionResolution</code> ou <code>fonctionRejet</code>, on pourra dire que la promesse courante est résolue, mais pas que la chaîne de promesses est terminée.</p>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":""}},{"type":"prose","value":{"id":"créer_une_nouvelle_promesse","title":"Créer une nouvelle promesse","isH3":true,"content":"<p>On crée un objet <code>Promise</code> en utilisant le constructeur avec l'opérateur <code>new</code>. Ce constructeur prend une fonction en argument, et cette fonction prend à son tour deux fonctions en paramètres. La première de ces deux fonctions est appelée lorsque la tâche asynchrone se termine correctement, c'est alors le résultat de l'opération qui est passé comme paramètre. La seconde fonction est appelée lorsque la tâche échoue et c'est alors la raison de l'échec (généralement un objet d'erreur) qui est passée en argument.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> maPremierePromesse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolution<span class=\"token punctuation\">,</span> rejet</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// réaliser une opération asynchrone qui appellera :</span>\n  <span class=\"token comment\">//</span>\n  <span class=\"token comment\">//   resolution(uneValeur)    // réussite</span>\n  <span class=\"token comment\">// ou</span>\n  <span class=\"token comment\">//   rejet(\"raison d'échec\")  // échec</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"renvoyer_une_promesse_depuis_une_fonction","title":"Renvoyer une promesse depuis une fonction","isH3":true,"content":"<p>Pour qu'une fonction ait les fonctionnalités d'une promesse, on lui fera renvoyer une promesse&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">maFonctionAsync</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolution<span class=\"token punctuation\">,</span> rejet</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">resolution</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">rejet</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>statusText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    xhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-promise-constructor","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Promise.Promise"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"javascript.builtins.Promise.Promise","dataURL":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/Promise/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-promise\" class=\"external\" rel=\" noopener\">Une prothèse d'émulation de <code>Promise</code> avec la bibliothèque <code>core-js</code></a></li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Guide/Using_promises\">Utiliser les promesses</a></li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"Le constructeur Promise() est principalement utilisé afin d'envelopper des fonctions qui ne prennent pas en charge les promesses.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Promise() constructor","locale":"en-US","native":"English (US)"},{"title":"Promise() コンストラクター","locale":"ja","native":"日本語"},{"title":"Promise() 생성자","locale":"ko","native":"한국어"},{"title":"Promise() 构造器","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/javascript/reference/global_objects/promise/promise","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/javascript/reference/global_objects/promise/promise/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference","title":"Référence JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects","title":"Objets globaux"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise","title":"Promise"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/Promise","title":"Constructeur Promise()"}],"pageTitle":"Constructeur Promise() - JavaScript | MDN","noIndexing":false}}