{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Promise.resolve()","mdn_url":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects\">Objets standards</a></strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/@@species\"><code>get Promise[@@species]</code> <small>(en-US)</small></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\"><code>Promise.all()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled\"><code>Promise.allSettled()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/any\"><code>Promise.any()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\"><code>Promise.prototype.catch()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/finally\"><code>Promise.prototype.finally()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\"><code>Promise.race()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject\"><code>Promise.reject()</code></a></li><li><em><code>Promise.resolve()</code></em></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\"><code>Promise.prototype.then()</code></a></li></ol></li><li><strong>Héritage&nbsp;:</strong></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Propriétés</strong></a><ol><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Méthodes</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>La méthode <strong><code>Promise.resolve(valeur)</code></strong> renvoie un objet <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> qui est résolu avec la valeur donnée. Si cette valeur est une promesse, la promesse est renvoyée, si la valeur possède une méthode <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\"><code>then</code></a>, la promesse renvoyée « suivra » cette méthode et prendra son état ; sinon, la promesse renvoyée sera tenue avec la valeur.</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/promise-resolve.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>Attention :</strong> <code>Promise.resolve()</code> ne doit pas être appelée sur un objet <em>thenable</em> qui se résout en lui-même. Cela provoquera une récursion infinie et <code>resolve()</code> tentera d'aplatir ce qui ressemble à une promesse imbriquée à l'infini.</p>\n</div>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>valeur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>promesse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>suivant<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":true,"content":"<dl>\n  <dt id=\"valeur\"><code>valeur</code></dt>\n  <dd>\n    <p>L'argument qu'on souhaite résoudre avec cette promesse (<code>Promise</code>). Cet argument peut être un objet <code>Promise</code> ou un objet avec une méthode <code>then</code> à résoudre à la suite.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"valeur_de_retour","title":"Valeur de retour","isH3":true,"content":"<p>Une promesse (<a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>) qui est résolue avec la valeur indiquée en argument ou la promesse passée en argument si celui-ci est une promesse.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>La fonction statique <code>Promise.resolve</code> renvoie un objet <code>Promise</code> qui est résolu.</p>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":""}},{"type":"prose","value":{"id":"utilisation_de_la_méthode_statique_promise.resolve","title":"Utilisation de la méthode statique <code>Promise.resolve</code>","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Succès\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">valeur</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>valeur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Succès\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">valeur</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// n'est pas appelée</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Utilisation de la méthode statique Promise.resolve"}},{"type":"prose","value":{"id":"résoudre_un_tableau","title":"Résoudre un tableau","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"résoudre_une_autre_promise","title":"Résoudre une autre <code>Promise</code>","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> original <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cast <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>original<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncast<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value: \"</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"original === cast ? \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>original <span class=\"token operator\">===</span> cast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// affiche ceci dans la console (dans cet ordre) :</span>\n<span class=\"token comment\">// original === cast ? true</span>\n<span class=\"token comment\">// value: 33</span>\n</code></pre></div>\n<p>L'ordre des traces dans la console est dû au fait que les gestionnaires <code>then()</code> sont appelés de façon asynchrone (plus de détails sur <code>then</code> <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/then#valeur_de_retour\">dans cet article</a>).</p>","titleAsText":"Résoudre une autre Promise"}},{"type":"prose","value":{"id":"résoudre_des_objets_avec_then_et_renvoyer_des_erreurs","title":"Résoudre des objets avec <code>then</code> et renvoyer des erreurs","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Résoudre un objet avec then</span>\n<span class=\"token keyword\">var</span> p1 <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">then</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">onFulfill<span class=\"token punctuation\">,</span> onReject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">onFulfill</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tenue !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p1 <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true, l'objet est transformée en une Promise</span>\n\np1<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"tenue !\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// n'est pas appelée</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// L'objet avec then renvoie une erreur avant le callback</span>\n<span class=\"token comment\">// La promesse n'est pas tenue</span>\n<span class=\"token keyword\">var</span> thenable <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">then</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Renvoi d'erreur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Résolution \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> p2 <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>thenable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np2<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// n'est pas appelée</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError : Renvoi d'erreur</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// L'objet avec then renvoie une erreur après le callback</span>\n<span class=\"token comment\">// La promesse est tenue</span>\n<span class=\"token keyword\">var</span> thenable <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">then</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Résolue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Erreur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> p3 <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>thenable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np3<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Résolue\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// n'est pas appelée</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Résoudre des objets avec then et renvoyer des erreurs"}},{"type":"prose","value":{"id":"spécifications","title":"Spécifications","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Spécification</th>\n      <th>État</th>\n      <th>Commentaires</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.ecma-international.org/ecma-262/6.0/#sec-promise.reject\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript 2015 (6th Edition, ECMA-262)<br><small lang=\"fr\">La définition de 'Promise.reject' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-standard\">Standard</span></td>\n      <td>Définition initiale au sein d'un standard ECMA.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma262/#sec-promise.resolve\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript (ECMA-262)<br><small lang=\"fr\">La définition de 'Promise.resolve' dans cette spécification.</small></a></td>\n      <td><span class=\"spec-living\">Standard évolutif</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"javascript.builtins.Promise.resolve","dataURL":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Description","id":"description"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"La méthode Promise.resolve(valeur) renvoie un objet Promise qui est résolu avec la valeur donnée. Si cette valeur est une promesse, la promesse est renvoyée, si la valeur possède une méthode then, la promesse renvoyée « suivra » cette méthode et prendra son état ; sinon, la promesse renvoyée sera tenue avec la valeur.","popularity":0.0012,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Promise.resolve()","locale":"en-US","native":"English (US)"},{"title":"Promise.resolve()","locale":"es","native":"Español"},{"title":"Promise.resolve()","locale":"ja","native":"日本語"},{"title":"Promise.resolve()","locale":"ko","native":"한국어"},{"title":"Promise.resolve()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Promise.resolve()","locale":"ru","native":"Русский"},{"title":"Promise.resolve()","locale":"zh-CN","native":"中文 (简体)"},{"title":"Promise.resolve()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"fr/web/javascript/reference/global_objects/promise/resolve","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/javascript/reference/global_objects/promise/resolve/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference","title":"Référence JavaScript"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects","title":"Objets globaux"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise","title":"Promise"},{"uri":"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve","title":"Promise.resolve()"}],"pageTitle":"Promise.resolve() - JavaScript | MDN","noIndexing":false}}