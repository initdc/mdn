{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Mémoire tampon, position, et plages de temps","mdn_url":"/fr/docs/Web/Guide/Audio_and_video_delivery/buffering_seeking_time_ranges","locale":"fr","native":"Français","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Il est parfois utile de savoir combien d'<a href=\"/fr/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> ou <a href=\"/fr/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> a été téléchargé ou peut être joué sans délai — par exemple pour afficher la barre de progression du tampon dans un lecteur audio ou vidéo. Cet article explique comment construire une barre de progrès de mise en mémoire tampon en utilisant <a href=\"/fr/docs/Web/API/TimeRanges\">TimeRanges</a>, et d'autres fonctionnalités de l'API Media.</p>"}},{"type":"prose","value":{"id":"buffered","title":"Buffered","isH3":false,"content":"<p>L'attribut <code>buffered</code> indique quelles parties du média ont été téléchargées. Il retourne un objet <a href=\"/fr/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a>, qui indique tous les morceaux téléchargés. C'est généralement contigu, mais si l'utilisateur saute à une autre position pendant que le média est en cours de chargement, il peut alors y avoir des trous.</p>\n<p>Cela fonctionne avec <a href=\"/fr/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> et <a href=\"/fr/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a>; pour l'instant, considérons un simple exemple audio:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-audio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>music.mp3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>audio</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>On accède à cet attribut ainsi:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> bufferedTimeRanges <span class=\"token operator\">=</span> myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"objet_timeranges","title":"Objet TimeRanges","isH3":false,"content":"<p>TimeRanges est une série de plages de temps ne se chevauchant pas, avec un temps de début et de fin. (<a href=\"/fr/docs/Web/API/TimeRanges\">en savoir plus sur TimeRanges</a>).</p>\n<p>Un objet <a href=\"/fr/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a> contient les propriétés/méthodes suivantes:</p>\n<ul>\n  <li><code>length</code>: Le nombre de plages de temps contenus dans l'objet.</li>\n  <li><code>start(index)</code>: Permet de récupérer le temps du début, en seconde, d'une plage de temps.</li>\n  <li><code>end(index)</code>: Permet de récupérer le temps de la fin, en seconde, d'une plage de temps.</li>\n</ul>\n<p>Sans interraction utilisateur il y a généralement une seule plage de temps, mais si vous sautez dans le média alors plus d'une plage de temps peut apparaître, comme illustré dans la visualisation ci-dessous. Elle représente deux plages de temps en mémoire tampon — une qui s'étend de 0 à 5 secondes et la seconde qui s'étend de 15 à 19 secondes.</p>\n<pre class=\"notranslate\">------------------------------------------------------\n|=============|                    |===========|     |\n------------------------------------------------------\n0             5                    15          19    21\n</pre>\n<p>Pour cette instance audio, l'objet <a href=\"/fr/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a> associé aurait les propriétés suivantes:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// returns 2</span>\nmyAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns 0</span>\nmyAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// returns 5</span>\nmyAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns 15</span>\nmyAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// returns 19</span>\n</code></pre></div>\n<p>Pour essayer et visualiser les plages de temps en mémoire tampon, on peut écrire un peu d'HTML:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-audio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>music.mp3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audio/mpeg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>audio</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>Et un peu de JavaScript:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> myAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> myCanvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> context <span class=\"token operator\">=</span> myCanvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    context<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'lightgray'</span><span class=\"token punctuation\">;</span>\n    context<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> myCanvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> myCanvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    context<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>\n    context<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> inc <span class=\"token operator\">=</span> myCanvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> myAudio<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// afficher TimeRanges</span>\n\n    myAudio<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'seeked'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">var</span> startX <span class=\"token operator\">=</span> myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> inc<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> endX <span class=\"token operator\">=</span> myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> inc<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> width <span class=\"token operator\">=</span> endX <span class=\"token operator\">-</span> startX<span class=\"token punctuation\">;</span>\n\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>startX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> myCanvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>startX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> myCanvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Cela fonctionne mieux avec les morceaux audio ou vidéo un peu plus longs, mais appuyez sur play et cliquez sur la barre de progression du lecteur et vous devriez obtenir quelque chose comme ci-dessous. Chaque rectangle rouge remplissant le rectangle blanc représente une plage de temps.</p>\n<p>\n  <img src=\"/en-US/docs/Web/Guide/Audio_and_video_delivery/buffering_seeking_time_ranges/bufferedtimeranges.png\" alt=\"\" width=\"318\" height=\"89\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note :</strong> Vous pouvez voir <a href=\"http://jsbin.com/memazaro/1/edit\" class=\"external\" rel=\" noopener\">cet exemple en direct sur JS Bin</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"seekable","title":"Seekable","isH3":false,"content":"<p>L'attribut <code>seekable</code> retourne un objet <a href=\"/fr/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a> qui indique quelles parties du média peuvent être jouées sans chargement préalable. C'est indépendant du fait que la partie ait été téléchargée ou non: certaines parties peuvent être <em>seekable</em> mais non <em>buffered</em> si les requêtes de plage d'octets (byte-range requests) sont activées sur le serveur. Les requêtes de plage d'octets permettent aux parties du fichier média d'être délivrées du serveur et jouées presque immédiatement — et sont donc <em>seekable</em>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> seekableTimeRanges <span class=\"token operator\">=</span> myAudio<span class=\"token punctuation\">.</span>seekable<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"créer_notre_propre_barre_de_progrès","title":"Créer notre propre barre de progrès","isH3":false,"content":"<p>Si on voulait créer notre propre lecteur média, on pourrait vouloir afficher les parties du média prêtes à être jouées. Un bon moyen d'y arriver est d'utiliser l'attribut <code>seekable</code>.</p>\n<p>Bien qu'on ait vu que les parties ne sont pas nécessairement contigues, elles le sont généralement, et on peut utiliser une approximation de cette information pour donner à l'utilisateur une indication de la quantité de média qui peut être jouée directement. On peut trouver ce point en utilisant la ligne de code suivante:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> seekableEnd <span class=\"token operator\">=</span> myAudio<span class=\"token punctuation\">.</span>seekable<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>seekable<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note :</strong> <code>myAudio.seekable.end(myAudio.seekable.length - 1)</code> nous indique en fait le temps de fin de la dernière plage de temps disponible (et non toutes). En pratique, c'est suffisant, car le navigateur peut permettre ou non de requêter des plages d'octets. S'il ne le permet pas — <code>audio.seekable</code> sera l'équivalent de <code>audio.buffered</code> — on a une indication valide de la fin du média chargée. Sinon, alors cette valeur vaudra la durée du média presque instantannément.</p>\n</div>\n<p>Il est peut-être préférable de donner une indication de la quantité de média effectivement téléchargée — c'est ce que les lecteurs natifs du navigateur semblent indiquer.</p>\n<p>Alors, construisons cela. Le HTML de notre lecteur ressemble à ça:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code>&lt;audio id=<span class=\"token string\">\"my-audio\"</span> preload controls&gt;\n  &lt;source src=<span class=\"token string\">\"music.mp3\"</span> type=<span class=\"token string\">\"audio/mpeg\"</span>&gt;\n&lt;/audio&gt;\n&lt;div class=<span class=\"token string\">\"buffered\"</span>&gt;\n  &lt;span id=<span class=\"token string\">\"buffered-amount\"</span>&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;div class=<span class=\"token string\">\"progress\"</span>&gt;\n  &lt;span id=<span class=\"token string\">\"progress-amount\"</span>&gt;&lt;/span&gt;\n&lt;/div&gt;\n</code></pre></div>\n<p>Nous utiliserons le CSS suivant pour styliser l'affichage de la mémoire tampon:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.buffered</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #555<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#buffered-amount</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #777<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.progress</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> -20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#progress-amount</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #595<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Et le JavaScript suivant se charge notre fonctionnalité:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">var</span> myAudio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  myAudio<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'progress'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> duration <span class=\"token operator\">=</span>  myAudio<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>duration <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> myAudio<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"buffered-amount\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>buffered<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> duration<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  myAudio<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'timeupdate'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> duration <span class=\"token operator\">=</span>  myAudio<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>duration <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'progress-amount'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>myAudio<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">/</span> duration<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>L'événement <code>progress</code> est déclenché au fur et à mesure que les données sont téléchargées, cela nous permet de réagir pour afficher la progression du téléchargement ou de la mise en mémoire tampon.</p>\n<p>L'événement <code>timeupdate</code> est declénché 4 fois par seconde au fur et à mesure que le média est joué et c'est là qu'on incrémente notre barre de progrès.</p>\n<p>Cela devrait vous donner des résultats similaires à ce qui suit, où la barre gris clair représente la progression de la mise en mémoire tampon et la barre verte montre la progression de la lecture:</p>\n<p>\n  <img src=\"/en-US/docs/Web/Guide/Audio_and_video_delivery/buffering_seeking_time_ranges/bufferedprogress.png\" alt=\"\" width=\"311\" height=\"67\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note :</strong> Voir pouvez <a href=\"http://jsbin.com/badimipi/1/edit\" class=\"external\" rel=\" noopener\">voir l'exemple en direct sur JS Bin</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"un_petit_mot_sur_played","title":"Un petit mot sur Played","isH3":false,"content":"<p>Il vaut la peine de mentionner la propriété <code>played</code> — elle nous indique quelles plages de temps ont été jouées dans le média. Par exemple:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> played <span class=\"token operator\">=</span> audio<span class=\"token punctuation\">.</span>played<span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns a TimeRanges object</span>\n</code></pre></div>\n<p>Ce peut être utile pour récupérer les parties du média qui sont les plus écoutées ou regardées.</p>"}}],"toc":[{"text":"Buffered","id":"buffered"},{"text":"Objet TimeRanges","id":"objet_timeranges"},{"text":"Seekable","id":"seekable"},{"text":"Créer notre propre barre de progrès","id":"créer_notre_propre_barre_de_progrès"},{"text":"Un petit mot sur Played","id":"un_petit_mot_sur_played"}],"summary":"Il est parfois utile de savoir combien d'<audio> ou <video> a été téléchargé ou peut être joué sans délai — par exemple pour afficher la barre de progression du tampon dans un lecteur audio ou vidéo. Cet article explique comment construire une barre de progrès de mise en mémoire tampon en utilisant TimeRanges, et d'autres fonctionnalités de l'API Media.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Media buffering, seeking, and time ranges","locale":"en-US","native":"English (US)"},{"title":"Медиа-буферизация, поиск и временные диапазоны","locale":"ru","native":"Русский"},{"title":"Media buffering, seeking, and time ranges","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/guide/audio_and_video_delivery/buffering_seeking_time_ranges","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/guide/audio_and_video_delivery/buffering_seeking_time_ranges/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/Guide","title":"Guides pour les développeurs du Web"},{"uri":"/fr/docs/Web/Guide/Audio_and_video_delivery","title":"Intégration audio et vidéo"},{"uri":"/fr/docs/Web/Guide/Audio_and_video_delivery/buffering_seeking_time_ranges","title":"Mémoire tampon, position, et plages de temps"}],"pageTitle":"Mémoire tampon, position, et plages de temps - Guides pour les développeurs du Web | MDN","noIndexing":false}}