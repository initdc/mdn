{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AnalyserNode.getByteTimeDomainData()","mdn_url":"/fr/docs/Web/API/AnalyserNode/getByteTimeDomainData","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructeur</summary><ol><li><a href=\"/fr/docs/Web/API/AnalyserNode/AnalyserNode\"><code>AnalyserNode()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Propriétés</summary><ol><li><a href=\"/fr/docs/Web/API/AnalyserNode/fftSize\"><code>fftSize</code></a></li><li><a href=\"/fr/docs/Web/API/AnalyserNode/frequencyBinCount\"><code>frequencyBinCount</code></a></li><li><a href=\"/fr/docs/Web/API/AnalyserNode/maxDecibels\"><code>maxDecibels</code></a></li><li><a href=\"/fr/docs/Web/API/AnalyserNode/minDecibels\"><code>minDecibels</code></a></li><li><a href=\"/fr/docs/Web/API/AnalyserNode/smoothingTimeConstant\"><code>smoothingTimeConstant</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a href=\"/fr/docs/Web/API/AnalyserNode/getByteFrequencyData\"><code>getByteFrequencyData()</code></a></li><li><em><code>getByteTimeDomainData()</code></em></li><li><a href=\"/fr/docs/Web/API/AnalyserNode/getFloatFrequencyData\"><code>getFloatFrequencyData()</code></a></li><li><a href=\"/fr/docs/Web/API/AnalyserNode/getFloatTimeDomainData\"><code>getFloatTimeDomainData()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Héritage&nbsp;:</summary><ol><li><a href=\"/fr/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/fr/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>La méthode <strong><code>getByteTimeDomainData()</code></strong> de l'interface <a href=\"/fr/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a> copie les données de forme d'onde, ou du domaine temporel, dans un tableau <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code> <small>(en-US)</small></a> passé en paramètre.</p>\n<p>Si le tableau a moins d'éléments que la propriété <a href=\"/fr/docs/Web/API/AnalyserNode/fftSize\"><code>AnalyserNode.fftSize</code></a>, les données en excès sont supprimées. S'il a davantage d'éléments, les éléments non utilisés sont ignorés.</p>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> contexteAudio <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> analyseur <span class=\"token operator\">=</span> contexteAudio<span class=\"token punctuation\">.</span><span class=\"token function\">createAnalyser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// La taille du tableau Uint8Array doit correspondre à la valeur de la propriété fftSize</span>\n<span class=\"token keyword\">var</span> tableauDonnees <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>analyseur<span class=\"token punctuation\">.</span>fftSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// remplit le tableau Uint8Array avec les données renvoyées par la méthode getByteTimeDomainData()</span>\nanalyseur<span class=\"token punctuation\">.</span><span class=\"token function\">getByteTimeDomainData</span><span class=\"token punctuation\">(</span>tableauDonnees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"renvoie","title":"Renvoie","isH3":true,"content":"<p>Un tableau <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code> <small>(en-US)</small></a>.</p>"}},{"type":"prose","value":{"id":"exemple","title":"Exemple","isH3":false,"content":"<p>L'exemple suivant montre comment créer simplement un <code>AnalyserNode</code> avec <a href=\"/fr/docs/Web/API/AudioContext\"><code>AudioContext</code></a>, puis utiliser <a href=\"/fr/docs/Web/API/Window/requestAnimationFrame\" title=\"requestAnimationFrame\"><code>requestAnimationFrame</code></a> et <a href=\"/fr/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> pour collecter les données temporelles et dessiner un oscilloscope en sortie. Pour des exemples plus complets, voir notre démo <a href=\"https://mdn.github.io/voice-change-o-matic/\" class=\"external\" rel=\" noopener\">Voice-change-O-matic</a> (et en particulier <a href=\"https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205\" class=\"external\" rel=\" noopener\">app.js lignes 128–205</a>).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> analyser <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createAnalyser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">...</span>\n\nanalyser<span class=\"token punctuation\">.</span>fftSize <span class=\"token operator\">=</span> <span class=\"token number\">2048</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> bufferLength <span class=\"token operator\">=</span> analyser<span class=\"token punctuation\">.</span>fftSize<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dataArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>bufferLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nanalyser<span class=\"token punctuation\">.</span><span class=\"token function\">getByteTimeDomainData</span><span class=\"token punctuation\">(</span>dataArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// dessine un oscilloscope pour la source audio courante</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  drawVisual <span class=\"token operator\">=</span> <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  analyser<span class=\"token punctuation\">.</span><span class=\"token function\">getByteTimeDomainData</span><span class=\"token punctuation\">(</span>dataArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  canvasCtx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb(200, 200, 200)'</span><span class=\"token punctuation\">;</span>\n  canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">HEIGHT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  canvasCtx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  canvasCtx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb(0, 0, 0)'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> sliceWidth <span class=\"token operator\">=</span> <span class=\"token constant\">WIDTH</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> bufferLength<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> bufferLength<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> dataArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">128.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> v <span class=\"token operator\">*</span> <span class=\"token constant\">HEIGHT</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n      canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n      canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    x <span class=\"token operator\">+=</span> sliceWidth<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">HEIGHT</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  canvasCtx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":false,"content":"<dl>\n  <dt id=\"array\">array</dt>\n  <dd>\n    <p>Le tableau <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code> <small>(en-US)</small></a> dans lequel les données temporelles seront copiées.</p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-analysernode-getbytetimedomaindata","title":"Web Audio API"}],"query":"api.AnalyserNode.getByteTimeDomainData"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.AnalyserNode.getByteTimeDomainData","dataURL":"/fr/docs/Web/API/AnalyserNode/getByteTimeDomainData/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Utiliser la Web Audio API (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Exemple","id":"exemple"},{"text":"Paramètres","id":"paramètres"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"La méthode getByteTimeDomainData() de l'interface AnalyserNode copie les données de forme d'onde, ou du domaine temporel, dans un tableau Uint8Array (en-US) passé en paramètre.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AnalyserNode.getByteTimeDomainData()","locale":"en-US","native":"English (US)"},{"title":"AnalyserNode.getByteTimeDomainData()","locale":"ko","native":"한국어"},{"title":"AnalyserNode.getByteTimeDomainData()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/analysernode/getbytetimedomaindata","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/analysernode/getbytetimedomaindata/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/AnalyserNode","title":"AnalyserNode"},{"uri":"/fr/docs/Web/API/AnalyserNode/getByteTimeDomainData","title":"AnalyserNode.getByteTimeDomainData()"}],"pageTitle":"AnalyserNode.getByteTimeDomainData() - Référence Web API | MDN","noIndexing":false}}