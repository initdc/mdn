{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"TextEncoder","mdn_url":"/fr/docs/Web/API/TextEncoder","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/Encoding_API\">Encoding API</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructeur</summary><ol><li><a href=\"/fr/docs/Web/API/TextEncoder/TextEncoder\"><code>TextEncoder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Propriétés</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextEncoder/encoding\"><code>encoding</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextEncoder/encode\"><code>encode()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextEncoder/encodeInto\"><code>encodeInto()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à Encoding API</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextDecoderStream\"><code>TextDecoderStream</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextEncoderStream\"><code>TextEncoderStream</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>Cette fonction est expérimentale</strong><br>Puisque cette fonction est toujours en développement dans certains navigateurs, veuillez consulter le <a href=\"#browser_compatibility\">tableau de compatibilité</a> pour les préfixes à utiliser selon les navigateurs.<br>Il convient de noter qu'une fonctionnalité expérimentale peut voir sa syntaxe ou son comportement modifié dans le futur en fonction des évolutions de la spécification.</p></div>\n<p><strong><code>TextEncoder</code></strong> prend un flux de points de code en entrée et émet un flux d'octets. Pour une bibliothèque non native plus extensible, voir <a href=\"/fr/docs/Mozilla/Add-ons/Code_snippets/StringView\"><code>StringView</code> – une représentation des chaînes de caractères proche de celle de C basée sur les tableaux typés</a>.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note :</strong> Firefox, Chrome et Opera ont pour habitude de supporter les types d'encodage autres que <code>utf-8</code> (tels que <code>utf-16</code>, <code>iso-8859-2</code>, <code>koi8</code>, <code>cp1261</code>, et <code>gbk</code>). À partir de Firefox 48 (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1257877\" class=\"external\" rel=\" noopener\">bug&nbsp;1257877</a>), Chrome 54 (<a href=\"https://www.chromestatus.com/feature/5630760492990464\" class=\"external\" rel=\" noopener\">ticket</a>) et Opera 41, aucun type d'encodage autre que <code>utf-8</code> n'est disponible, de manière à être en accord avec la <a href=\"https://www.w3.org/TR/encoding/#dom-textencoder\" class=\"external\" rel=\" noopener\">spécification</a>. Dans tous les cas, passer un type d'encodage au constructeur sera ignoré et un TextEncoder utf-8 sera créé (le <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code> <small>(en-US)</small></a> permet toujours d'autres types pour le décodage).</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note :</strong> Il y a une prothèse d'émulation d'implantation pour supporter tous les encodages hérités dans <a href=\"https://github.com/inexorabletash/text-encoding\" class=\"external\" rel=\" noopener\">GitHub</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"constructeur","title":"Constructeur","isH3":false,"content":"<dl>\n  <dt id=\"textencoder\"><a href=\"/fr/docs/Web/API/TextEncoder/TextEncoder\" title=\"TextEncoder()\"><code>TextEncoder()</code></a></dt>\n  <dd>\n    <p>Retourne une nouvel objet <code>TextEncoder</code> qui génèrera un flux d'octets encodés en utf-8.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"propriétés","title":"Propriétés","isH3":false,"content":"<p><em>L'interface <code>TextEncoder</code> n'hérite d'aucune propriété.</em></p>\n<dl>\n  <dt id=\"textencoder.encoding_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextEncoder/encoding\"><code>TextEncoder.encoding</code> <small>(en-US)</small></a><span title=\"Cette valeur ne peut pas être changée.\" class=\"badge inline readonly\">Lecture seule </span></dt>\n  <dd>\n    <p><a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> contenant le nom de l'encodeur, qui est une chaîne de caractères décrivant la méthode que l'objet <code>TextEncoder</code> utilisera.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"méthodes","title":"Méthodes","isH3":false,"content":"<p><strong>L'interface <code>TextEncoder</code> n'hérite d'aucune propriété</strong>.</p>\n<dl>\n  <dt id=\"textencoder.encode_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextEncoder/encode\"><code>TextEncoder.encode()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Retourne un <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Uint8Array (en-US)</a> conternant un texte encodé en utf-8.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"prothèse_démulation","title":"Prothèse d'émulation","isH3":false,"content":"<p>La prothèse d'émulation ci-dessous va uniquement répondre aux spécifications données par le W3 (par d'autre type d'encodage que UTF-8 n'est supporté, malheureusement ☹). Elle est conçue pour fonctionner \"clé en main\" avec IE5. Toutefois, de IE5 à IE9, elle retournera un tableau normal plutôt qu'un tableau typé. Dans de telles circonstances et avec des navigateurs si lents, cette prothèse (ou tout autre ayant le même objectif) serait inutilisable pour de longues chaînes de caractères avec ces vieux navigateurs. Enfin, notez que vous devriez exécuter le code ci-dessous avec un minifieur (et plus particulièrement un compilateur ) to turn sequences like <code>0x1e &lt;&lt; 3</code> into <code>0xf0</code>. These sequences are not already precomputed because they serve to aesthetically illustrate how the polyfill works.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> TextEncoder <span class=\"token operator\">===</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">TextEncoder</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span> <span class=\"token function\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">encode</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> Len <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> resPos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// The Uint8Array's length must be at least 3x the length of the string because an invalid UTF-16</span>\n        <span class=\"token comment\">//  takes up the equivelent space of 3 UTF-8 characters to encode it properly. However, Array's</span>\n        <span class=\"token comment\">//  have an auto expanding length and 1.5x should be just the right balance for most uses.</span>\n        <span class=\"token keyword\">var</span> resArr <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> Uint8Array <span class=\"token operator\">===</span> <span class=\"token string\">\"undefined\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>Len <span class=\"token operator\">*</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>Len <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> point<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nextcode<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!==</span> Len<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            point <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>point <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0xD800</span> <span class=\"token operator\">&amp;&amp;</span> point <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0xDBFF</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">===</span> Len<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xef</span><span class=\"token comment\">/*0b11101111*/</span><span class=\"token punctuation\">;</span> resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xbf</span><span class=\"token comment\">/*0b10111111*/</span><span class=\"token punctuation\">;</span>\n                    resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xbd</span><span class=\"token comment\">/*0b10111101*/</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token comment\">// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae</span>\n                nextcode <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextcode <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0xDC00</span> <span class=\"token operator\">&amp;&amp;</span> nextcode <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0xDFFF</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    point <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>point <span class=\"token operator\">-</span> <span class=\"token number\">0xD800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x400</span> <span class=\"token operator\">+</span> nextcode <span class=\"token operator\">-</span> <span class=\"token number\">0xDC00</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10000</span><span class=\"token punctuation\">;</span>\n                    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>point <span class=\"token operator\">&gt;</span> <span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x1e</span><span class=\"token comment\">/*0b11110*/</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>point<span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x2</span><span class=\"token comment\">/*0b10*/</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>point<span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0x3f</span><span class=\"token comment\">/*0b00111111*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x2</span><span class=\"token comment\">/*0b10*/</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>point<span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0x3f</span><span class=\"token comment\">/*0b00111111*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x2</span><span class=\"token comment\">/*0b10*/</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>point<span class=\"token operator\">&amp;</span><span class=\"token number\">0x3f</span><span class=\"token comment\">/*0b00111111*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    e <span class=\"token punctuation\">{</span>\n                          resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xef</span><span class=\"token comment\">/*0b11101111*/</span><span class=\"token punctuation\">;</span> resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xbf</span><span class=\"token comment\">/*0b10111111*/</span><span class=\"token punctuation\">;</span>\n                    resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xbd</span><span class=\"token comment\">/*0b10111101*/</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>point <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x007f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x0</span><span class=\"token comment\">/*0b0*/</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> point<span class=\"token punctuation\">;</span>\n                se <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>point <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x07ff</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x6</span><span class=\"token comment\">/*0b110*/</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>point<span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                esArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x2</span><span class=\"token comment\">/*0b10*/</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>point<span class=\"token operator\">&amp;</span><span class=\"token number\">0x3f</span><span class=\"token comment\">/*0\n                    else {\n                      resArr[resPos += 1] = (0xe/*0b1110*/</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>point<span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x2</span><span class=\"token comment\">/*0b10*/</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>point<span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0x3f</span><span class=\"token comment\">/*0b00111111*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                resArr<span class=\"token punctuation\">[</span>resPos <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x2</span><span class=\"token comment\">/*0b10*/</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>point<span class=\"token operator\">&amp;</span><span class=\"token number\">0x3f</span><span class=\"token comment\">/*0b00111111*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> Uint8Array <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> resArr<span class=\"token punctuation\">.</span><span class=\"token function\">subarray</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> resPos <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// else // IE 6-9</span>\n        resArr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> resPos <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// trim off extra weight</span>\n        <span class=\"token keyword\">return</span> resArr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">toString</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"[object TextEncoder]\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Object.defineProperty only works on DOM prototypes in IE8</span>\n        Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span><span class=\"token string\">\"encoding\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">isPrototypeOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">;</span>\n                           <span class=\"token keyword\">else</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Illegal invocation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/*IE6-8 fallback*/</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> Symbol<span class=\"token operator\">!==</span><span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>toStringTag<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"TextEncoder\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://encoding.spec.whatwg.org/#interface-textencoder","title":"Encoding"}],"query":"api.TextEncoder"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.TextEncoder","dataURL":"/fr/docs/Web/API/TextEncoder/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li>The <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code> <small>(en-US)</small></a> interface describing the inverse operation.</li>\n  <li><a href=\"/fr/docs/Mozilla/Add-ons/Code_snippets/StringView\"><code>StringView</code></a> – a C-like representation of strings based on typed arrays</li>\n  <li>A <a href=\"https://github.com/inexorabletash/text-encoding\" class=\"external\" rel=\" noopener\">shim</a> allowing to use this interface in browsers that don't support it.</li>\n  <li><a href=\"/fr/docs/Components.utils.importGlobalProperties\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>Components.utils.importGlobalProperties</code></a></li>\n</ul>"}}],"toc":[{"text":"Constructeur","id":"constructeur"},{"text":"Propriétés","id":"propriétés"},{"text":"Méthodes","id":"méthodes"},{"text":"Prothèse d'émulation","id":"prothèse_démulation"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"TextEncoder prend un flux de points de code en entrée et émet un flux d'octets. Pour une bibliothèque non native plus extensible, voir StringView – une représentation des chaînes de caractères proche de celle de C basée sur les tableaux typés.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"TextEncoder","locale":"en-US","native":"English (US)"},{"title":"TextEncoder","locale":"ja","native":"日本語"},{"title":"TextEncoder","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/textencoder","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/textencoder/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/TextEncoder","title":"TextEncoder"}],"pageTitle":"TextEncoder - Référence Web API | MDN","noIndexing":false}}