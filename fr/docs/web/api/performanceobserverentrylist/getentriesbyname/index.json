{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"PerformanceObserverEntryList.getEntriesByName()","mdn_url":"/fr/docs/Web/API/PerformanceObserverEntryList/getEntriesByName","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/Performance_Timeline\">Performance Timeline</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a href=\"/fr/docs/Web/API/PerformanceObserverEntryList/getEntries\"><code>getEntries()</code></a></li><li><em><code>getEntriesByName()</code></em></li><li><a href=\"/fr/docs/Web/API/PerformanceObserverEntryList/getEntriesByType\"><code>getEntriesByType()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à Performance Timeline API</summary><ol><li><a href=\"/fr/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/performance_property\"><code>performance_property</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>La méthode <strong><code>getEntriesByName()</code></strong> de l'interface <a href=\"/fr/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a> retourne une liste d'objets <a href=\"/fr/docs/Web/API/PerformanceEntry\">d'entrée de performance</a> explicitement <em>observés</em> pour un <em><a href=\"/fr/docs/Web/API/PerformanceEntry/name\"><code>name</code></a></em> et <em><a href=\"/fr/docs/Web/API/PerformanceEntry/entryType\"><code>entryType</code></a></em> donnés. Les membres de la liste sont déterminés par l'ensemble des <a href=\"/fr/docs/Web/API/PerformanceEntry/entryType\">types d'entrées</a> spécifiés dans l'appel à la méthode <a href=\"/fr/docs/Web/API/PerformanceObserver/observe\"><code>observe()</code></a>. La liste est disponible dans la fonction de rappel de l'observateur (en tant que premier paramètre de la fonction de rappel).</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note :</strong> Cette interface est exposée à <a href=\"/fr/docs/Web/API/Window\"><code>Window</code></a> et <a href=\"/fr/docs/Web/API/Worker\"><code>Worker</code></a>.</p>\n</div>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> entries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":true,"content":"<dl>\n  <dt id=\"name\"><em><code>name</code></em></dt>\n  <dd>\n    <p>Une chaîne de caractères <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> représentant le nom de l'entrée à récupérer.</p>\n  </dd>\n  <dt id=\"type\"><em><code>type</code></em> <span class=\"badge inline optional\">Facultatif</span></dt>\n  <dd>\n    <p>Une chaîne de caractères <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>DOMString</code></a> représentant le type d'entrée à récupérer tel que « <code>mark</code> ». Les types d'entrée valides sont énumérés dans <a href=\"/fr/docs/Web/API/PerformanceEntry/entryType\"><code>PerformanceEntry.entryType</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"valeur_de_retour","title":"Valeur de retour","isH3":true,"content":"<p>Une liste d'objets <a href=\"/fr/docs/Web/API/PerformanceEntry\">d'entrée de performance</a> explicitement <em>observés</em> qui ont le <code>name</code> et le <code>type</code> spécifiés. Si l'argument <code>type</code> n'est pas spécifié, seul <code>name</code> sera utilisé pour déterminer les entrées à retourner. Les éléments seront triés dans l'ordre chronologique selon les <a href=\"/fr/docs/Web/API/PerformanceEntry/startTime\"><code>startTime</code></a> des entrées. Si aucun objet ne répond aux critères spécifiés, une liste vide est retournée.</p>"}},{"type":"prose","value":{"id":"exemple","title":"Exemple","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">print_perf_entry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pe</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name: \"</span> <span class=\"token operator\">+</span> pe<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span>\n              <span class=\"token string\">\"; entryType: \"</span> <span class=\"token operator\">+</span> pe<span class=\"token punctuation\">.</span>entryType <span class=\"token operator\">+</span>\n              <span class=\"token string\">\"; startTime: \"</span> <span class=\"token operator\">+</span> pe<span class=\"token punctuation\">.</span>startTime <span class=\"token operator\">+</span>\n              <span class=\"token string\">\"; duration: \"</span> <span class=\"token operator\">+</span> pe<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Crée un observateur pour tous les types d'événements de performance</span>\n<span class=\"token keyword\">const</span> observe_all <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> obs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> perfEntries<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Imprime toutes les entrées</span>\n  perfEntries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> perfEntries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print_perf_entry</span><span class=\"token punctuation\">(</span>perfEntries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Imprime les entrées nommées \"Begin\" avec le type \"mark\".</span>\n  perfEntries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Begin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> perfEntries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print_perf_entry</span><span class=\"token punctuation\">(</span>perfEntries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Imprime les entrées de type \"mark\".</span>\n  perfEntries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> perfEntries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print_perf_entry</span><span class=\"token punctuation\">(</span>perfEntries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// inscrire tous les types d'événements de performance</span>\nobserve_all<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'frame'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mark'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'measure'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'navigation'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'resource'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'server'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> observe_frame <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> obs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> perfEntries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Ne devrait avoir que des entrées \"frame\"</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> perfEntries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print_perf_entry</span><span class=\"token punctuation\">(</span>perfEntries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// inscrire à l'événement \"frame\" uniquement</span>\nobserve_frame<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'frame'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/performance-timeline/#dom-performanceobserverentrylist-getentriesbyname","title":"Performance Timeline"}],"query":"api.PerformanceObserverEntryList.getEntriesByName"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.PerformanceObserverEntryList.getEntriesByName","dataURL":"/fr/docs/Web/API/PerformanceObserverEntryList/getEntriesByName/bcd.json"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Exemple","id":"exemple"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"}],"summary":"La méthode getEntriesByName() de l'interface PerformanceObserverEntryList retourne une liste d'objets d'entrée de performance explicitement observés pour un name et entryType donnés. Les membres de la liste sont déterminés par l'ensemble des types d'entrées spécifiés dans l'appel à la méthode observe(). La liste est disponible dans la fonction de rappel de l'observateur (en tant que premier paramètre de la fonction de rappel).","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"PerformanceObserverEntryList.getEntriesByName()","locale":"en-US","native":"English (US)"}],"source":{"folder":"fr/web/api/performanceobserverentrylist/getentriesbyname","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/performanceobserverentrylist/getentriesbyname/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/PerformanceObserverEntryList","title":"PerformanceObserverEntryList"},{"uri":"/fr/docs/Web/API/PerformanceObserverEntryList/getEntriesByName","title":"PerformanceObserverEntryList.getEntriesByName()"}],"pageTitle":"PerformanceObserverEntryList.getEntriesByName() - Référence Web API | MDN","noIndexing":false}}