{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"BaseAudioContext.createBufferSource()","mdn_url":"/fr/docs/Web/API/BaseAudioContext/createBufferSource","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Propriétés</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/audioWorklet\"><code>audioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/currentTime\"><code>currentTime</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/destination\"><code>destination</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/listener\"><code>listener</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/sampleRate\"><code>sampleRate</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/state\"><code>state</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createAnalyser\"><code>createAnalyser()</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/BaseAudioContext/createBiquadFilter\"><code>createBiquadFilter()</code></a></li><li><a href=\"/fr/docs/Web/API/BaseAudioContext/createBuffer\"><code>createBuffer()</code></a></li><li><em><code>createBufferSource()</code></em></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createChannelMerger\"><code>createChannelMerger()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createChannelSplitter\"><code>createChannelSplitter()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createConstantSource\"><code>createConstantSource()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createConvolver\"><code>createConvolver()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createDelay\"><code>createDelay()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createDynamicsCompressor\"><code>createDynamicsCompressor()</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/BaseAudioContext/createGain\"><code>createGain()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createIIRFilter\"><code>createIIRFilter()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createOscillator\"><code>createOscillator()</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/BaseAudioContext/createPanner\"><code>createPanner()</code></a></li><li><a href=\"/fr/docs/Web/API/BaseAudioContext/createPeriodicWave\"><code>createPeriodicWave()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createScriptProcessor\"><code>createScriptProcessor()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createStereoPanner\"><code>createStereoPanner()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createWaveShaper\"><code>createWaveShaper()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>decodeAudioData()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Héritage&nbsp;:</summary><ol><li><a href=\"/fr/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à Web Audio API</summary><ol><li><a href=\"/fr/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/fr/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/fr/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/fr/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/fr/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>La méthode <code>createBufferSource()</code> de l’interface <a href=\"/fr/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a> est utilisée pour créer un nouveau <a href=\"/fr/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a>, qui peut être employé pour jouer des données audio contenues dans un objet <a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a>.</p>\n<p>Des <a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a> peuvent être créés en utilisant <a href=\"/fr/docs/Web/API/BaseAudioContext/createBuffer\"><code>BaseAudioContext.createBuffer</code></a>, ou sont retournés par la méthode <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>BaseAudioContext.decodeAudioData</code> <small>(en-US)</small></a> quand elle a terminé de décoder une piste audio avec succès.</p>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> baseAudioContext<span class=\"token punctuation\">.</span><span class=\"token function\">createBufferSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"retourne","title":"Retourne","isH3":true,"content":"<p>Un <a href=\"/fr/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a>.</p>"}},{"type":"prose","value":{"id":"exemple","title":"Exemple","isH3":false,"content":"<p>Dans cet exemple, on crée un tampon de deux secondes, on le remplit avec du bruit blanc, puis on le joue via un <a href=\"/fr/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a>. Les commentaires devraient expliquer clairement ce qui se passe.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note :</strong> Vous pouvez également <a href=\"https://mdn.github.io/webaudio-examples/audio-buffer/\" class=\"external\" rel=\" noopener\">exécuter le code en direct</a>, ou <a href=\"https://github.com/mdn/webaudio-examples/blob/master/audio-buffer/index.html\" class=\"external\" rel=\" noopener\">voir la source</a>.</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> pre <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myScript <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\npre<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> myScript<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Stéréo</span>\n<span class=\"token keyword\">var</span> channels <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Crée un tampon stéréo vide de deux secondes au</span>\n<span class=\"token comment\">// taux d’échantillonage de l’AudioContext</span>\n<span class=\"token keyword\">var</span> frameCount <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span>sampleRate <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> myArrayBuffer <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> frameCount<span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbutton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Remplit le tampon avec du bruit blanc ;</span>\n  <span class=\"token comment\">// simplement des valeurs aléatoires entre -1.0 et 1.0</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> channel <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> channel <span class=\"token operator\">&lt;</span> channels<span class=\"token punctuation\">;</span> channel<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// Ceci nous donne l’ArrayBuffer qui contient les données</span>\n   <span class=\"token keyword\">var</span> nowBuffering <span class=\"token operator\">=</span> myArrayBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getChannelData</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> frameCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// Math.random() est parmi [0; 1.0]</span>\n     <span class=\"token comment\">// audio doit être parmi [-1.0; 1.0]</span>\n     nowBuffering<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Obtient un AudioBufferSourceNode.</span>\n  <span class=\"token comment\">// C’est l’AudioNode à utiliser quand nous voulons jouer un AudioBuffer</span>\n  <span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createBufferSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// renseigne l’AudioBufferSourceNode avec notre tampon</span>\n  source<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> myArrayBuffer<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// connecte l’AudioBufferSourceNode à la</span>\n  <span class=\"token comment\">// destination afin qu’on puisse entendre le son</span>\n  source<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>audioCtx<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// commence la lecture de la source</span>\n  source<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createbuffersource","title":"Web Audio API"}],"query":"api.BaseAudioContext.createBufferSource"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.BaseAudioContext.createBufferSource","dataURL":"/fr/docs/Web/API/BaseAudioContext/createBufferSource/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Utiliser la Web Audio API</a></li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Exemple","id":"exemple"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"La méthode createBufferSource() de l’interface BaseAudioContext est utilisée pour créer un nouveau AudioBufferSourceNode, qui peut être employé pour jouer des données audio contenues dans un objet AudioBuffer.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BaseAudioContext.createBufferSource()","locale":"en-US","native":"English (US)"},{"title":"BaseAudioContext.createBufferSource()","locale":"ja","native":"日本語"},{"title":"AudioContext.createBufferSource()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/baseaudiocontext/createbuffersource","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/baseaudiocontext/createbuffersource/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/BaseAudioContext","title":"BaseAudioContext"},{"uri":"/fr/docs/Web/API/BaseAudioContext/createBufferSource","title":"BaseAudioContext.createBufferSource()"}],"pageTitle":"BaseAudioContext.createBufferSource() - Référence Web API | MDN","noIndexing":false}}