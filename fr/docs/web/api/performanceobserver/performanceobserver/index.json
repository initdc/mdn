{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"PerformanceObserver()","mdn_url":"/fr/docs/Web/API/PerformanceObserver/PerformanceObserver","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/Performance_Timeline\">Performance Timeline</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructeur</summary><ol><li><em><code>PerformanceObserver()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Propriétés</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PerformanceObserver/supportedEntryTypes\"><code>supportedEntryTypes</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a href=\"/fr/docs/Web/API/PerformanceObserver/disconnect\"><code>disconnect()</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceObserver/observe\"><code>observe()</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceObserver/takeRecords\"><code>takeRecords()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à Performance Timeline API</summary><ol><li><a href=\"/fr/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/performance_property\"><code>performance_property</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Le constructeur <strong><code>PerformanceObserver()</code></strong> crée un nouvel objet <a href=\"/fr/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> avec le <code>callback</code> d'observation donné. La fonction de rappel de l'observateur est invoquée lorsque des <a href=\"/fr/docs/Web/API/PerformanceEntry\">événements d'entrée de performance</a> sont répertoriés pour les <a href=\"/fr/docs/Web/API/PerformanceEntry/entryType\">types d'entrées</a> qui ont été enregistrés, via la méthode <a href=\"/fr/docs/Web/API/PerformanceObserver/observe\"><code>observe()</code></a>.</p>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":true,"content":"<dl>\n  <dt id=\"callback\"><code>callback</code></dt>\n  <dd>\n    <p>Une fonction de rappel qui sera invoquée lorsque des événements de performance <em>observés</em> sont enregistrés. Lorsque la fonction de rappel est invoquée, son premier paramètre est une <a href=\"/fr/docs/Web/API/PerformanceObserverEntryList\">liste des entrées de l'observateur de performance</a> et le second paramètre est l'objet <a href=\"/fr/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> courant.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"valeur_de_retour","title":"Valeur de retour","isH3":true,"content":"<p>Un nouvel objet <a href=\"/fr/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> qui appellera le <code>callback</code> spécifiée lorsque des événements de performance observés se produisent.</p>"}},{"type":"prose","value":{"id":"exemple","title":"Exemple","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> entries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> entries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Traiter les événements \"mark\" et \"frame\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"frame\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">perf_observer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Traiter l'événement \"measure\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> observer2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span>perf_observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver2<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"measure\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/performance-timeline/#dom-performanceobserver-constructor","title":"Performance Timeline"}],"query":"api.PerformanceObserver.PerformanceObserver"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.PerformanceObserver.PerformanceObserver","dataURL":"/fr/docs/Web/API/PerformanceObserver/PerformanceObserver/bcd.json"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Exemple","id":"exemple"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"}],"summary":"Le constructeur PerformanceObserver() crée un nouvel objet PerformanceObserver avec le callback d'observation donné. La fonction de rappel de l'observateur est invoquée lorsque des événements d'entrée de performance sont répertoriés pour les types d'entrées qui ont été enregistrés, via la méthode observe().","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"PerformanceObserver()","locale":"en-US","native":"English (US)"},{"title":"PerformanceObserver()","locale":"ja","native":"日本語"},{"title":"PerformanceObserver()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/performanceobserver/performanceobserver","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/performanceobserver/performanceobserver/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/PerformanceObserver","title":"PerformanceObserver"},{"uri":"/fr/docs/Web/API/PerformanceObserver/PerformanceObserver","title":"PerformanceObserver()"}],"pageTitle":"PerformanceObserver() - Référence Web API | MDN","noIndexing":false}}