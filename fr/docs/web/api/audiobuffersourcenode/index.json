{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AudioBufferSourceNode","mdn_url":"/fr/docs/Web/API/AudioBufferSourceNode","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructeur</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioBufferSourceNode/AudioBufferSourceNode\"><code>AudioBufferSourceNode()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Propriétés</summary><ol><li><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/buffer\"><code>buffer</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/detune\"><code>detune</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/loop\"><code>loop</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/loopEnd\"><code>loopEnd</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/loopStart\"><code>loopStart</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/playbackRate\"><code>playbackRate</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/start\"><code>start()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Héritage&nbsp;:</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/fr/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à Web Audio API</summary><ol><li><a href=\"/fr/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/fr/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/fr/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/fr/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/fr/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/fr/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>L'interface <strong>AudioBufferSourceNode</strong> est un <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code> <small>(en-US)</small></a> qui représente une source audio constituée de données audio en mémoire, stockées dans un <a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a>. Elle est particulièrement utile pour lire des sons qui requierrent des conditions de lecture particulières, comme la synchronisation sur un certain rythme, et peuvent être stockés en mémoire. Si ce type de son doit être lu depuis le disque ou le réseau, il conviendra d'utiliser un <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code> <small>(en-US)</small></a>.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/fr/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/fr/docs/Web/API/AudioNode\">\n    <rect x=\"118\" y=\"0\" width=\"75\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"155.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      AudioNode\n    </text>\n  </a>\n  <line x1=\"193\" y1=\"14\" x2=\"223\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"193,14 203,9 203,19 193,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">\n    \n    \n      AudioScheduledSourceNode\n    \n   (en-US)</a>\n  <line x1=\"415\" y1=\"14\" x2=\"445\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"415,14 425,9 425,19 415,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/fr/docs/Web/API/AudioBufferSourceNode\" aria-current=\"page\">\n    <rect x=\"445\" y=\"0\" width=\"168\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"529\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      AudioBufferSourceNode\n    </text>\n  </a></svg>\n<p>Un AudioBufferSourceNode n'a pas d'entrée et il comporte une unique sortie, dont le nombre de canaux est spécifié par la propriété <a href=\"/fr/docs/Web/API/AudioBufferSourceNode/buffer\" title=\"buffer\"><code>buffer</code></a>. Si aucun buffer n'est paramétré, c'est-à-dire si la valeur de l'attribut est NULL, la sortie contient un seul canal silencieux (chaque échantillon vaut 0).</p>\n<p>Un <a href=\"/fr/docs/Web/API/AudioBufferSourceNode\" aria-current=\"page\"><code>AudioBufferSourceNode</code></a> ne peut être joué qu'une seule fois; autrement dit un seul appel à la fonction <code>AudioBufferSourceNode.start()</code> est autorisé. Pour rejouer le son, il faut créer un nouvel <code>AudioBufferSourceNode</code>. Heureusement ces noeuds ne demandent pas beaucoup de ressource, et les véritables <code>AudioBuffer</code>s peuvent être réutilisés. On dit que les <code>AudioBufferSourceNode</code>s doivent être utilisés en mode \"one shot\": une fois que la lecture est lancée, toutes les références peuvent être supprimées, et elles seront collectées par le ramasse-miette automatiquement quand la lecture des sons sera terminée.</p>\n<p>Plusieurs appels à la fonction <code>AudioBufferSourceNode.stop()</code> sont autorisés. Le dernier appel remplace le précédent, à condition que le <code>AudioBufferSourceNode</code> n'ait pas déjà atteint la fin du buffer.</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/AudioBufferSourceNode/webaudioaudiobuffersourcenode.png\" alt=\"L'objet AudioBufferSourceNode prend le contenu d'un AudioBuffer et le convertit en audio\" width=\"365\" height=\"193\" loading=\"lazy\">\n</p>\n<table class=\"properties\">\n  <tbody>\n    <tr>\n      <th scope=\"row\"><dfn>Nombre d'entrées</dfn></th>\n      <td><code>0</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><dfn>Nombre de sorties</dfn></th>\n      <td><code>1</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><dfn>Nombre de canaux</dfn></th>\n      <td>défini par l'objet <a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a> associé</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"constructeur","title":"Constructeur","isH3":false,"content":"<dl>\n  <dt id=\"audiobuffersourcenode_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioBufferSourceNode/AudioBufferSourceNode\"><code>AudioBufferSourceNode()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Crée et retourne un nouvel objet <code>AudioBufferSourceNode</code>. Un <a href=\"/fr/docs/Web/API/AudioBufferSourceNode\" aria-current=\"page\"><code>AudioBufferSourceNode</code></a> peut être instancié à l'aide la méthode <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createBufferSource\"><code>AudioContext.createBufferSource()</code> <small>(en-US)</small></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"propriétés","title":"Propriétés","isH3":false,"content":"<p><em>Hérite des propriétés de son parent, <a href=\"/fr/docs/Web/API/AudioNode\"><code>AudioNode</code></a>.</em></p>\n<dl>\n  <dt id=\"audiobuffersourcenode.buffer\"><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/buffer\"><code>AudioBufferSourceNode.buffer</code></a></dt>\n  <dd>\n    <p><a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a> qui définit la ressource à jouer; lorsqu'il a la valeur NULL, définit un canal unique silencieux (dans lequel chaque échantillon vaut 0.0).</p>\n  </dd>\n  <dt id=\"audiobuffersourcenode.detune\"><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/detune\"><code>AudioBufferSourceNode.detune</code></a></dt>\n  <dd>\n    <p><a href=\"/fr/docs/Web/API/AudioParam\"><code>AudioParam</code></a> de type <a href=\"/en-US/docs/Web/API/AudioParam#k-rate\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">k-rate (en-US)</a> représentant le désaccordage de la fréquence exprimé en <a href=\"http://en.wikipedia.org/wiki/Cent_%28music%29\" class=\"external\" rel=\" noopener\">cents</a>. Cette valeur est composée à partir du <code>playbackRate</code> pour déterminer la vitesse à laquelle le son sera jouée. Sa valeur par défaut est <code>0</code> (qui correspond à aucun désaccordage), et son rang nominal va de -∞ à ∞.</p>\n  </dd>\n  <dt id=\"audiobuffersourcenode.loop\"><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/loop\"><code>AudioBufferSourceNode.loop</code></a></dt>\n  <dd>\n    <p>Attribut booléen indiquant si la ressource doit être lue de nouveau lorsque la fin de l'<a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a> est atteinte. Sa valeur par défaut est <code>false</code>.</p>\n  </dd>\n  <dt id=\"audiobuffersourcenode.loopstart\"><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/loopStart\"><code>AudioBufferSourceNode.loopStart</code></a> <span class=\"badge inline optional\">Facultatif</span></dt>\n  <dd>\n    <p>Nombre flottant à double précision indiquant, en secondes, à quel moment de l'<a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a> la lecture doit reprendre. Sa valeur par défaut est 0.</p>\n  </dd>\n  <dt id=\"audiobuffersourcenode.loopend\"><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/loopEnd\"><code>AudioBufferSourceNode.loopEnd</code></a> <span class=\"badge inline optional\">Facultatif</span></dt>\n  <dd>\n    <p>Nombre flottant à double précision indiquant, en secondes, à quel moment de l'<a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a> la relecture doit s'arrêter (et éventuellement boucler à nouveau). Sa valeur par défaut est 0.</p>\n  </dd>\n  <dt id=\"audiobuffersourcenode.playbackrate\"><a href=\"/fr/docs/Web/API/AudioBufferSourceNode/playbackRate\"><code>AudioBufferSourceNode.playbackRate</code></a></dt>\n  <dd>\n    <p><a href=\"/fr/docs/Web/API/AudioParam\"><code>AudioParam</code></a> de type <a href=\"/fr/docs/Web/API/AudioParam#a-rate\">a-rate</a> qui définit le facteur de vitesse à laquelle la ressource audio sera jouée. Comme aucune correction de pitch n'est appliquée sur la sortie, il peut être utilisé pour modifier le pitch de l'échantillon.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"gestionnaires_dévènement","title":"Gestionnaires d'évènement","isH3":true,"content":"<p><em>Hérite des gestionnaires d'évènement de son parent, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code> <small>(en-US)</small></a></em>.</p>"}},{"type":"prose","value":{"id":"méthodes","title":"Méthodes","isH3":false,"content":"<p><em>Hérite des méthodes de son parent, <a href=\"/fr/docs/Web/API/AudioNode\"><code>AudioNode</code></a>.</em></p>"}},{"type":"prose","value":{"id":"exemple","title":"Exemple","isH3":false,"content":"<p>Cet exemple crée un tampon de deux secondes, le remplit avec du bruit blanc et le joue par l'intermédiaire d'un <code>AudioBufferSourceNode</code>.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note :</strong> Vous pouvez aussi <a href=\"https://mdn.github.io/audio-buffer/\" class=\"external\" rel=\" noopener\">exécuter the code</a>, ou <a href=\"https://github.com/mdn/audio-buffer\" class=\"external\" rel=\" noopener\">regarder le code source</a>.</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> contexteAudio <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bouton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> pre <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pre'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> monScript <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\npre<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> monScript<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Stéréo</span>\n<span class=\"token keyword\">var</span> canaux <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Crée un tampon vide de deux secondes</span>\n<span class=\"token comment\">// au taux d'échantillonnage du AudioContext</span>\n<span class=\"token keyword\">var</span> compteurTrames <span class=\"token operator\">=</span> contexteAudio<span class=\"token punctuation\">.</span>sampleRate <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> myArrayBuffer <span class=\"token operator\">=</span> contexteAudio<span class=\"token punctuation\">.</span><span class=\"token function\">createBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> compteurTrames<span class=\"token punctuation\">,</span> contexteAudio<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbouton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// remplit le tampon avec du bruit blanc;</span>\n  <span class=\"token comment\">// valeurs aléatoires entre -1.0 et 1.0</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> canal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> canal <span class=\"token operator\">&lt;</span> canaux<span class=\"token punctuation\">;</span> canal<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// crée le ArrayBuffer qui contient les données</span>\n   <span class=\"token keyword\">var</span> nowBuffering <span class=\"token operator\">=</span> myArrayBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getChannelData</span><span class=\"token punctuation\">(</span>canal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> compteurTrames<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// Math.random() est compris entre [0; 1.0]</span>\n     <span class=\"token comment\">// audio doit être compris entre [-1.0; 1.0]</span>\n     nowBuffering<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// crée AudioBufferSourceNode.</span>\n  <span class=\"token comment\">// c'est AudioNode utilisé pour lire un AudioBuffer</span>\n  <span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> contexteAudio<span class=\"token punctuation\">.</span><span class=\"token function\">createBufferSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// initialise le tampon du AudioBufferSourceNode</span>\n  source<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> myArrayBuffer<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// connecte l'AudioBufferSourceNode avec la destination</span>\n  <span class=\"token comment\">// de façon à ce qu'on puisse entendre le son</span>\n  source<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>contexteAudio<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// lance la lecture de la source</span>\n  source<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note :</strong> Pour un exemple de <code>decodeAudioData</code>(), voir la page <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>AudioContext.decodeAudioData</code> <small>(en-US)</small></a>.</p>\n</div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#AudioBufferSourceNode","title":"Web Audio API"}],"query":"api.AudioBufferSourceNode"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.AudioBufferSourceNode","dataURL":"/fr/docs/Web/API/AudioBufferSourceNode/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Utiliser la Web Audio API</a></li>\n</ul>"}}],"toc":[{"text":"Constructeur","id":"constructeur"},{"text":"Propriétés","id":"propriétés"},{"text":"Méthodes","id":"méthodes"},{"text":"Exemple","id":"exemple"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"L'interface AudioBufferSourceNode est un AudioScheduledSourceNode (en-US) qui représente une source audio constituée de données audio en mémoire, stockées dans un AudioBuffer. Elle est particulièrement utile pour lire des sons qui requierrent des conditions de lecture particulières, comme la synchronisation sur un certain rythme, et peuvent être stockés en mémoire. Si ce type de son doit être lu depuis le disque ou le réseau, il conviendra d'utiliser un AudioWorkletNode (en-US).","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AudioBufferSourceNode","locale":"en-US","native":"English (US)"},{"title":"AudioBufferSourceNode","locale":"ja","native":"日本語"},{"title":"AudioBufferSourceNode","locale":"ko","native":"한국어"},{"title":"AudioBufferSourceNode","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/audiobuffersourcenode","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/audiobuffersourcenode/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/AudioBufferSourceNode","title":"AudioBufferSourceNode"}],"pageTitle":"AudioBufferSourceNode - Référence Web API | MDN","noIndexing":false}}