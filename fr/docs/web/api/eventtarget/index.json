{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"EventTarget","mdn_url":"/fr/docs/Web/API/EventTarget","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/EventTarget\"><code>EventTarget</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructeur</summary><ol><li><a href=\"/fr/docs/Web/API/EventTarget/EventTarget\"><code>EventTarget()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a href=\"/fr/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a></li><li><a href=\"/fr/docs/Web/API/EventTarget/dispatchEvent\"><code>dispatchEvent()</code></a></li><li><a href=\"/fr/docs/Web/API/EventTarget/removeEventListener\"><code>removeEventListener()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>EventTarget</code> est une interface DOM implémentée par des objets qui peuvent recevoir des événements et peuvent avoir des écouteurs pour eux.</p>\n<p><a href=\"/fr/docs/Web/API/Element\"><code>Element</code></a>, <a href=\"/fr/docs/Web/API/Document\"><code>Document</code></a> et <a href=\"/fr/docs/Web/API/Window\"><code>Window</code></a> sont les cibles d'événements les plus fréquentes, mais d'autres objets peuvent également être des cibles d'événements. Par exemple <a href=\"/fr/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a>, <a href=\"/fr/docs/Web/API/AudioNode\"><code>AudioNode</code></a>, <a href=\"/fr/docs/Web/API/AudioContext\"><code>AudioContext</code></a> et autres.</p>\n<p>De nombreuses cibles d'événements (y compris des éléments, des documents et des fenêtres) supporte également la définition de <a href=\"/en-US/docs/Web/Events/Event_handlers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">gestionnaires d'événements (en-US)</a> via les propriétés et attributs <code>onevent</code>.</p>"}},{"type":"prose","value":{"id":"constructeur","title":"Constructeur","isH3":false,"content":"<dl>\n  <dt id=\"eventtarget\"><a href=\"/fr/docs/Web/API/EventTarget/EventTarget\" title=\"EventTarget()\"><code>EventTarget()</code></a></dt>\n  <dd>\n    <p>Crée une nouvelle instance d'objet <code>EventTarget</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"méthodes","title":"Méthodes","isH3":false,"content":"<dl>\n  <dt id=\"eventtarget.addeventlistener\"><a href=\"/fr/docs/Web/API/EventTarget/addEventListener\" title=\"<var>EventTarget</var>.addEventListener()\"><code><var>EventTarget</var>.addEventListener()</code></a></dt>\n  <dd>\n    <p>Enregistre un gestionnaire d'événements d'un type d'événement spécifique sur <code>EventTarget</code>.</p>\n  </dd>\n  <dt id=\"eventtarget.removeeventlistener\"><a href=\"/fr/docs/Web/API/EventTarget/removeEventListener\" title=\"<var>EventTarget</var>.removeEventListener()\"><code><var>EventTarget</var>.removeEventListener()</code></a></dt>\n  <dd>\n    <p>Supprime un écouteur d'événement de <code>EventTarget</code>.</p>\n  </dd>\n  <dt id=\"eventtarget.dispatchevent\"><a href=\"/fr/docs/Web/API/EventTarget/dispatchEvent\" title=\"<var>EventTarget</var>.dispatchEvent()\"><code><var>EventTarget</var>.dispatchEvent()</code></a></dt>\n  <dd>\n    <p>Envoie un événement à cet <code>EventTarget</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"méthodes_supplémentaires_dans_la_base_de_code_chrome_de_mozilla","title":"Méthodes supplémentaires dans la base de code Chrome de Mozilla","isH3":true,"content":"<p>Mozilla inclut quelques extensions à utiliser par les cibles d'événements implémentées par JS pour implémenter les propriétés <code>onevent</code>.</p>\n<p>Voir aussi <a href=\"/fr/docs/Mozilla/WebIDL_bindings\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">liaisons WebIDL</a>.</p>\n<ul>\n  <li><code>void setEventHandler(DOMString type, EventHandler handler)</code> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></li>\n  <li><code>EventHandler getEventHandler(DOMString type)</code> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></li>\n</ul>"}},{"type":"prose","value":{"id":"exemple","title":"Exemple","isH3":false,"content":""}},{"type":"prose","value":{"id":"implémentation_simple_deventtarget","title":"Implémentation simple d'EventTarget","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">EventTarget</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listeners <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">EventTarget</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>listeners <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n<span class=\"token class-name\">EventTarget</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addEventListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">type<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>type <span class=\"token keyword\">in</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listeners<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listeners<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listeners<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">EventTarget</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeEventListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">type<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>type <span class=\"token keyword\">in</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listeners<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> stack <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listeners<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> callback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      stack<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">EventTarget</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">dispatchEvent</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>type <span class=\"token keyword\">in</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listeners<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> stack <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>listeners<span class=\"token punctuation\">[</span>event<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> l <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    stack<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>defaultPrevented\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#interface-eventtarget","title":"DOM Standard"}],"query":"api.EventTarget"}},{"type":"browser_compatibility","value":{"title":"Compatiblité des navigateurs","id":"compatiblité_des_navigateurs","isH3":false,"query":"api.EventTarget","dataURL":"/fr/docs/Web/API/EventTarget/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/Events\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Référence d'événement (en-US)</a> - les événements disponibles sur la plateforme.</li>\n  <li><a href=\"/fr/docs/Web/Events\">Guide du développeur d'événements</a></li>\n  <li><a href=\"/fr/docs/Web/API/Event\"><code>Event</code></a> interface</li>\n</ul>"}}],"toc":[{"text":"Constructeur","id":"constructeur"},{"text":"Méthodes","id":"méthodes"},{"text":"Exemple","id":"exemple"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatiblité des navigateurs","id":"compatiblité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"EventTarget est une interface DOM implémentée par des objets qui peuvent recevoir des événements et peuvent avoir des écouteurs pour eux.","popularity":0.001,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"EventTarget","locale":"en-US","native":"English (US)"},{"title":"EventTarget","locale":"es","native":"Español"},{"title":"EventTarget","locale":"ja","native":"日本語"},{"title":"EventTarget","locale":"ko","native":"한국어"},{"title":"EventTarget","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"EventTarget","locale":"ru","native":"Русский"},{"title":"EventTarget","locale":"zh-CN","native":"中文 (简体)"},{"title":"EventTarget","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"fr/web/api/eventtarget","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/eventtarget/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/EventTarget","title":"EventTarget"}],"pageTitle":"EventTarget - Référence Web API | MDN","noIndexing":false}}