{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"IDBObjectStore.add()","mdn_url":"/fr/docs/Web/API/IDBObjectStore/add","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Propriétés</summary><ol><li><a href=\"/fr/docs/Web/API/IDBObjectStore/autoIncrement\"><code>autoIncrement</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/indexNames\"><code>indexNames</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/keyPath\"><code>keyPath</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/name\"><code>name</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/transaction\"><code>transaction</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><em><code>add()</code></em></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/clear\"><code>clear()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/count\"><code>count()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/createIndex\"><code>createIndex()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/delete\"><code>delete()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/deleteIndex\"><code>deleteIndex()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/get\"><code>get()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/getAll\"><code>getAll()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/getAllKeys\"><code>getAllKeys()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/getKey\"><code>getKey()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/index\"><code>index()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/openCursor\"><code>openCursor()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/openKeyCursor\"><code>openKeyCursor()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/put\"><code>put()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à IndexedDB</summary><ol><li><a href=\"/fr/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/fr/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/fr/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/fr/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/fr/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/fr/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/fr/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>La méthode <strong><code>add()</code></strong>, rattachée à l'interface <a href=\"/fr/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>, renvoie un objet <a href=\"/fr/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> et, dans un <em>thread</em> séparé, crée un <a href=\"https://www.whatwg.org/specs/web-apps/current-work/multipage/common-dom-interfaces.html#structured-clone\" class=\"external\" rel=\" noopener\">clone structurel</a> de la valeur et stocke la valeur clonée dans le magasin d'objet. Cette méthode permet d'ajouter de nouveaux enregistrements dans un magasin d'objet.</p>\n<p>Afin de déterminer si l'opération <code>add</code> s'est effectuée correctement, on pourra écouter l'évènement <code>complete</code> de la transaction et l'évènement <code>success</code> de la requête <code>IDBObjectStore.add</code> car la transaction peut échouer après le déclenchement de l'évènement <code>success</code>. Autremnt dit, l'évènement <code>success</code> est uniquement déclenché au moment où la transaction a été mise dans la file.</p>\n<p>La méthode <code>add</code> ne permet que d'insérer des objets. Si un enregistrement existe déjà dans le magasin d'objet pour la clé fournie en argument, un évènement <code>ConstrainError</code> sera déclenché via l'objet <a href=\"/fr/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a>. Si on souhaite mettre à jour des enregistrements existants, on utilisera plutôt la méthode <a href=\"/fr/docs/Web/API/IDBObjectStore/put\"><code>IDBObjectStore.put</code></a>.</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Cette fonctionnalité est disponible via les <a href=\"/fr/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>valeur<span class=\"token punctuation\">,</span> clé<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":true,"content":"<dl>\n  <dt id=\"valeur\"><code>valeur</code></dt>\n  <dd>\n    <p>La valeur à ajouter au magasin.</p>\n  </dd>\n  <dt id=\"clé\"><code>clé</code></dt>\n  <dd>\n    <p>La clé qu'on souhaite utiliser pour identifier l'enregistrement. Si elle n'est pas indiquée, la valeur par défaut sera <code>null</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"valeur_de_retour","title":"Valeur de retour","isH3":true,"content":"<p>Un objet <a href=\"/fr/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> qui émettra les différents évènements relatifs à l'opération.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>Cette méthode peut lever une exception <a href=\"/fr/docs/Web/API/DOMException\"><code>DOMException</code></a> ayant l'un des types suivants :</p>\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Exception</th>\n      <th scope=\"col\">Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>ReadOnlyError</code></td>\n      <td>La transaction associée à cette opération est en lecture seule.</td>\n    </tr>\n    <tr>\n      <td><code>TransactionInactiveError</code></td>\n      <td>\n        La transaction pour cet objet <a href=\"/fr/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n        est inactive.\n      </td>\n    </tr>\n    <tr>\n      <td><code>DataError</code></td>\n      <td>\n        <p>Un des conditions suivantes est vérifiée :</p>\n        <ul>\n          <li>\n            Le magasin d'objet utilise des clés en ligne ou possède un\n            générateur de clés et une clé a été fournie dans la fonction.\n          </li>\n          <li>\n            Le magasin d'objet utilise des clés hors lignes et et n'a pas de\n            générateur de clés et aucune clé n'a été fournie dans la fonction.\n          </li>\n          <li>\n            Le magasin d'objet utilise des clés en ligne mais ne possède pas de\n            générateur de clés et le chemin de clé utilisé par le magasin ne\n            pointe pas vers une clé valide.\n          </li>\n          <li>\n            La clé a été fournie à la fonction mais ce paramètre n'est pas une\n            clé valide.\n          </li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td>\n        L'objet <a href=\"/fr/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> a été supprimé ou\n        déplacé.\n      </td>\n    </tr>\n    <tr>\n      <td><code>DataCloneError</code></td>\n      <td>\n        La donnée qui devait être enregistrée n'a pas pu être clonée par\n        l'algorithme de clonage interne.\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":"<p>Dans le fragment de code suivant, on ouvre une transaction en lecture/écriture vers la base de données et on ajoute des données au magasin d'objet grâce à la méthode <code>add()</code>. On notera également les fonctions rattachées à la transaction qui sont utilisées comme gestionnaires d'évènement et qui permettent de savoir si la transaction a réussi ou échoué.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// On ouvre la base de données</span>\n<span class=\"token keyword\">var</span> DBOpenRequest <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nDBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Database initialisée.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On enregistre le résultat dans la variable db</span>\n  <span class=\"token comment\">// afin de l'utiliser par la suite</span>\n  <span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> DBOpenRequest<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On utilise la fonction addData() afin d'ajouter</span>\n  <span class=\"token comment\">// des données dans la base de données</span>\n  <span class=\"token function\">addData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// On crée un nouvel objet qu'on insèrera ensuite</span>\n  <span class=\"token comment\">// dans la base de données</span>\n  <span class=\"token keyword\">var</span> newItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">taskTitle</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Walk dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">hours</span><span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">minutes</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">day</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">month</span><span class=\"token operator\">:</span> <span class=\"token string\">\"December\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">2013</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">notified</span><span class=\"token operator\">:</span> <span class=\"token string\">\"no\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On ouvre une transaction en lecture/écriture</span>\n  <span class=\"token comment\">// afin d'ajouter les données</span>\n  <span class=\"token keyword\">var</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On indique si la transaction s'est déroulées</span>\n  <span class=\"token comment\">// sans problème</span>\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncomplete</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction terminée : modification effectuée.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Ouverture de la transaction impossible : les objets dupliqués ne sont pas autorisés.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On crée un magasin d'objets pour la transaction</span>\n  <span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On ajoute l'objet newItem dans le magasin d'objets</span>\n  <span class=\"token keyword\">var</span> objectStoreRequest <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newItem<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  objectStoreRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// On indique la réussite de l'insertion</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Nouvel objet ajouté dans la base de données.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note :</strong> pour un exemple fonctionnel complet, voir notre <a href=\"https://github.com/mdn/to-do-notifications/\" class=\"external\" rel=\" noopener\">application To-do</a> (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">exemple</a>).</p>\n</div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/IndexedDB/#ref-for-dom-idbobjectstore-add①","title":"Indexed Database API 3.0"}],"query":"api.IDBObjectStore.add"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.IDBObjectStore.add","dataURL":"/fr/docs/Web/API/IDBObjectStore/add/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Utiliser IndexedDB</a></li>\n  <li>Initier une connexion : <a href=\"/fr/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li>\n  <li>Utiliser les transactions : <a href=\"/fr/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li>\n  <li>Définir un intervalle de clés : <a href=\"/fr/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li>\n  <li>Récupérer et modifier les données : <a href=\"/fr/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li>\n  <li>Utiliser les curseurs <a href=\"/fr/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li>\n  <li>Exemple de référence : <a href=\"https://github.com/mdn/to-do-notifications/tree/gh-pages\" class=\"external\" rel=\" noopener\">To-do Notifications</a> (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">exemple <em>live</em></a>).</li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"La méthode add(), rattachée à l'interface IDBObjectStore, renvoie un objet IDBRequest et, dans un thread séparé, crée un clone structurel de la valeur et stocke la valeur clonée dans le magasin d'objet. Cette méthode permet d'ajouter de nouveaux enregistrements dans un magasin d'objet.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"IDBObjectStore.add()","locale":"en-US","native":"English (US)"},{"title":"IDBObjectStore.add","locale":"es","native":"Español"},{"title":"IDBObjectStore.add()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/idbobjectstore/add","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/idbobjectstore/add/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/IDBObjectStore","title":"IDBObjectStore"},{"uri":"/fr/docs/Web/API/IDBObjectStore/add","title":"IDBObjectStore.add()"}],"pageTitle":"IDBObjectStore.add() - Référence Web API | MDN","noIndexing":false}}