{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"IDBObjectStore.delete()","mdn_url":"/fr/docs/Web/API/IDBObjectStore/delete","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Propriétés</summary><ol><li><a href=\"/fr/docs/Web/API/IDBObjectStore/autoIncrement\"><code>autoIncrement</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/indexNames\"><code>indexNames</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/keyPath\"><code>keyPath</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/name\"><code>name</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/transaction\"><code>transaction</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a href=\"/fr/docs/Web/API/IDBObjectStore/add\"><code>add()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/clear\"><code>clear()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/count\"><code>count()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/createIndex\"><code>createIndex()</code></a></li><li><em><code>delete()</code></em></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/deleteIndex\"><code>deleteIndex()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/get\"><code>get()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/getAll\"><code>getAll()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/getAllKeys\"><code>getAllKeys()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/getKey\"><code>getKey()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/index\"><code>index()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/openCursor\"><code>openCursor()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/openKeyCursor\"><code>openKeyCursor()</code></a></li><li><a href=\"/fr/docs/Web/API/IDBObjectStore/put\"><code>put()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à IndexedDB</summary><ol><li><a href=\"/fr/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/fr/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/fr/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/fr/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/fr/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/fr/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/fr/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>La méthode <strong><code>delete()</code></strong>, rattachée à l'interface <a href=\"/fr/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>, renvoie un objet <a href=\"/fr/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> et, dans un <em>thread</em> séparé, supprime le ou les enregistrements concernés.</p>\n<p>Cette méthode prend une clé ou un objet <a href=\"/fr/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> en argument ce qui permet de supprimer un ou plusieurs enregistrements. Si on souhaite supprimer l'ensemble des enregistrements d'un magasin de données, on utilisera plutôt la méthode <a href=\"/fr/docs/Web/API/IDBObjectStore/clear\"><code>IDBObjectStore.clear</code></a>.</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Cette fonctionnalité est disponible via les <a href=\"/fr/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>keyOrKeyRange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":true,"content":"<dl>\n  <dt id=\"keyorkeyrange\"><code>keyOrKeyRange</code></dt>\n  <dd>\n    <p>La clé de l'enregistrement qu'on souhaite supprimer ou un objet <a href=\"/fr/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a> qui indique l'intervalle de clés à supprimer.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"valeur_de_retour","title":"Valeur de retour","isH3":true,"content":"<p>Un objet <a href=\"/fr/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> qui recevra les évènements relatifs à cette opération. <code>request.result</code> vaut <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>Cette méthode peut lever une des exceptions suivantes :</p>\n<table>\n  <thead>\n    <tr>\n      <th>Exception</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>TransactionInactiveError</code></td>\n      <td>La transaction associée au curseur <code>IDBCursor</code> est inactive.</td>\n    </tr>\n    <tr>\n      <td><code>ReadOnlyError</code></td>\n      <td>La transaction est uniquement en lecture seule.</td>\n    </tr>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td>Le curseur créé avec <a href=\"/fr/docs/Web/API/IDBIndex/openKeyCursor\"><code>IDBindex.openKeyCursor</code></a>, est en train d'être parcouru ou a été parcouru après sa fin.</td>\n    </tr>\n    <tr>\n      <td><code>DataError</code></td>\n      <td>La clé ou l'intervalle de clés n'est pas valide.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":"<p>Dans l'exemple qui suit, on ouvre une transaction en lecture/écriture et on supprime un enregistrement donné grâce à <code>delete()</code>. Pour un exemple complet, voir l'application <a href=\"https://github.com/mdn/to-do-notifications/\" class=\"external\" rel=\" noopener\">Notifications To-do</a> (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">démonstration</a>).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// On ouvre l'accès à la base de données</span>\n<span class=\"token keyword\">var</span> DBOpenRequest <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nDBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Initialisation de la base&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On enregistre le résultat de l'ouverture</span>\n  <span class=\"token comment\">// dans la variable db.</span>\n  <span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> DBOpenRequest<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On utilise deleteData() pour supprimer</span>\n  <span class=\"token comment\">// un enregistrement</span>\n  <span class=\"token function\">deleteData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">deleteData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// On ouvre une transaction en lecture/écriture</span>\n  <span class=\"token comment\">// afin de supprimer la donnée</span>\n  <span class=\"token keyword\">var</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On indique le succès de la transaction</span>\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncomplete</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction terminée : modification de la base terminée.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction interrompue suite à l\\'erreur : '</span> <span class=\"token operator\">+</span> transaction<span class=\"token punctuation\">.</span>error <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On crée un magasin d'objets pour la transaction</span>\n  <span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On supprime l'enregistrement du magasin</span>\n  <span class=\"token keyword\">var</span> objectStoreRequest <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Walk dog\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  objectStoreRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// On indique le succès de l'opération</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Enregistremnt supprimé.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/IndexedDB/#ref-for-dom-idbobjectstore-delete①","title":"Indexed Database API 3.0"}],"query":"api.IDBObjectStore.delete"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.IDBObjectStore.delete","dataURL":"/fr/docs/Web/API/IDBObjectStore/delete/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Utiliser IndexedDB</a></li>\n  <li>Initier une connexion : <a href=\"/fr/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li>\n  <li>Utiliser les transactions : <a href=\"/fr/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li>\n  <li>Définir un intervalle de clés : <a href=\"/fr/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li>\n  <li>Récupérer et modifier les données : <a href=\"/fr/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li>\n  <li>Utiliser les curseurs <a href=\"/fr/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li>\n  <li>L'exemple de référence : <a href=\"https://github.com/mdn/to-do-notifications/tree/gh-pages\" class=\"external\" rel=\" noopener\">notifications de trucs à faire</a> (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">voir la démonstration</a>)</li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"La méthode delete(), rattachée à l'interface IDBObjectStore, renvoie un objet IDBRequest et, dans un thread séparé, supprime le ou les enregistrements concernés.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"IDBObjectStore.delete()","locale":"en-US","native":"English (US)"}],"source":{"folder":"fr/web/api/idbobjectstore/delete","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/idbobjectstore/delete/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/IDBObjectStore","title":"IDBObjectStore"},{"uri":"/fr/docs/Web/API/IDBObjectStore/delete","title":"IDBObjectStore.delete()"}],"pageTitle":"IDBObjectStore.delete() - Référence Web API | MDN","noIndexing":false}}