{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Appliquer une couleur à la souris","mdn_url":"/fr/docs/Web/API/WebGL_API/By_example/Clearing_by_clicking","locale":"fr","native":"Français","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/WebGL_API/By_example/Clearing_with_colors\">« Précédent</a></li>\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/WebGL_API/By_example/Simple_color_animation\">Suivant  »</a></li>\n</ul>\n<p>Dans cet article, on voit comment combiner les interactions de l'utilisateur et les opérations graphiques. Plus précisément, dans cet exemple, chaque clic de l'utilisateur déclenchera l'application d'une couleur aléatoire dans le contexte de rendu.</p><iframe class=\"sample-code-frame\" title=\"Appliquer des couleurs aléatoires dans le contexte de rendu sample\" id=\"frame_appliquer_des_couleurs_aléatoires_dans_le_contexte_de_rendu\" width=\"660\" height=\"410\" src=\"https://yari-demos.prod.mdn.mozit.cloud/fr/docs/Web/API/WebGL_API/By_example/Clearing_by_clicking/_sample_.appliquer_des_couleurs_al%C3%A9atoires_dans_le_contexte_de_rendu.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"appliquer_des_couleurs_aléatoires_dans_le_contexte_de_rendu","title":"Appliquer des couleurs aléatoires dans le contexte de rendu","isH3":true,"content":"<p>Cet exemple illustre simplement comment associer WebGL aux interactions utilisateur. Chaque fois que l'utilisateur cliquera sur le canevas ou sur le bouton, une couleur aléatoire sera appliquée sur le contexte de rendu.</p>\n<p>Ici, on montre comment on place les appels aux fonctions WebGL dans la fonction qui gère les événements :</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Un programme WebGL très simple qui affiche des couleurs\n    suite aux interactions utilisateur.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Vous pouvez cliquer sur le canevas ou sur le bouton pour\n    modifier la couleur.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas-view<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Il semblerait que votre navigateur\n    ne supporte pas l'élément canvas.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>color-switcher<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Cliquez ici pour changer la couleur<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-align</span> <span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span> <span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span> <span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span> <span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span> <span class=\"token punctuation\">:</span> 0.6em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">canvas</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span> <span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span> <span class=\"token punctuation\">:</span> 280px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span> <span class=\"token punctuation\">:</span> 210px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span> <span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span> <span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span> <span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span> <span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// On exécute tout dans le gestionnaire d'événement</span>\n<span class=\"token comment\">// correspondant au chargement de la fenêtre. De cette</span>\n<span class=\"token comment\">// façon, le DOM est complètement chargé et mis en forme</span>\n<span class=\"token comment\">// avant de le manipuler et d'encombrer la portée globale.</span>\n<span class=\"token comment\">// On donne un nom au gestionnaire (setupWebGL) afin de</span>\n<span class=\"token comment\">// pouvoir y faire référence par la suite.</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setupWebGL</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"use strict\"</span>\n\n  <span class=\"token comment\">// On fait le ménage : le gestionnaire se supprime lui-</span>\n  <span class=\"token comment\">// même car il n'a besoin d'être exécuté qu'une fois.</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span> setupWebGL<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On ajoute le même gestionnaire de clic sur le canevas</span>\n  <span class=\"token comment\">// et sur le bouton.</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#canvas-view\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#color-switcher\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  canvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> switchColor<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  button<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> switchColor<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// On crée une variable qui contiendra WebGLRenderingContext.</span>\n  <span class=\"token keyword\">var</span> gl<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// La déclaration du gestionnaire d'événement pour le clic.</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">switchColor</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// On utilise la variable gl définie en dehors.</span>\n    <span class=\"token comment\">// Si elle n'est pas définie, on récupère WebGLRenderingContext.</span>\n    <span class=\"token comment\">// Si cela échoue, on avertit l'utilisateur. Sinon, on</span>\n    <span class=\"token comment\">// initialise la zone de dessin (viewport)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>gl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">||</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"experimental-webgl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>gl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Échec de la récupération du \\n\"</span>\n          <span class=\"token operator\">+</span> <span class=\"token string\">\"contexte WebGL. Votre navigateur peut ne pas \\n\"</span>\n          <span class=\"token operator\">+</span> <span class=\"token string\">\" supporter WebGL.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      gl<span class=\"token punctuation\">.</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        gl<span class=\"token punctuation\">.</span>drawingBufferWidth<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>drawingBufferHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// On obtient une couleur aléatoire grâce</span>\n    <span class=\"token comment\">// à une fonction auxiliaire.</span>\n    <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token function\">getRandomColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// On choisit cette couleur comme couleur à appliquer.</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">clearColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// On applique la nouvelle couleur dans le contexte.</span>\n    <span class=\"token comment\">// C'est cette fonction qui effectue « réellement »</span>\n    <span class=\"token comment\">// le dessin sur la zone.</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">COLOR_BUFFER_BIT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Une fonction auxiliaire pour créer une couleur aléatoire.</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getRandomColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Le code source de cet exemple est également disponible sur <a href=\"https://github.com/idofilin/webgl-by-example/tree/master/clearing-by-clicking\" class=\"external\" rel=\" noopener\">GitHub</a>.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/WebGL_API/By_example/Clearing_with_colors\">« Précédent</a></li>\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/WebGL_API/By_example/Simple_color_animation\">Suivant  »</a></li>\n</ul>"}}],"toc":[],"summary":"Dans cet article, on voit comment combiner les interactions de l'utilisateur et les opérations graphiques. Plus précisément, dans cet exemple, chaque clic de l'utilisateur déclenchera l'application d'une couleur aléatoire dans le contexte de rendu.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Clearing by clicking","locale":"en-US","native":"English (US)"},{"title":"클릭을 통한 청소","locale":"ko","native":"한국어"},{"title":"Clearing by clicking","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/webgl_api/by_example/clearing_by_clicking","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/webgl_api/by_example/clearing_by_clicking/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/WebGL_API","title":"L'API WebGL : graphismes 2D et 3D pour le web"},{"uri":"/fr/docs/Web/API/WebGL_API/By_example","title":"WebGL par l'exemple"},{"uri":"/fr/docs/Web/API/WebGL_API/By_example/Clearing_by_clicking","title":"Appliquer une couleur à la souris"}],"pageTitle":"Appliquer une couleur à la souris - Référence Web API | MDN","noIndexing":false}}