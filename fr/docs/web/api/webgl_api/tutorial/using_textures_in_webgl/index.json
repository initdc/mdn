{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Utilisation des textures en WebGL","mdn_url":"/fr/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL","locale":"fr","native":"Français","sidebarHTML":"\n <ol>\n  <li><a href=\"/fr/docs/Web/API/WebGL_API\"><strong>WebGL API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebGL tutoriel</summary>\n      <ol>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL\">Commencer avec WebGL</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Adding_2D_content_to_a_WebGL_context\">Ajouter du contenu à WebGL</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\">Ajouter des couleurs avec les shaders</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL\">Animer des objets avec WebGL</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">Créer des objets 3D avec WebGL</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\">Utiliser les textures avec WebGL</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL\">Lighting in WebGL</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL\">Animating textures in WebGL</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Examples and articles</summary>\n      <ol>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Matrix_math_for_the_web\">Matrix math for the web</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/WebGL_model_view_projection\">WebGL model view projection</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/WebGL_best_practices\">WebGL best practices</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Using_Extensions\">Using WebGL extensions</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/Basic_2D_animation_example\">A basic 2D WebGL animation example</a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL_API/By_example\">WebGL by example</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Interfaces</summary>\n      <ol>\n        <li><a href=\"/fr/docs/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLContextEvent\"><code>WebGLContextEvent</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGLProgram\"><code>WebGLProgram</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLQuery\"><code>WebGLQuery</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLSampler\"><code>WebGLSampler</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGLShader\"><code>WebGLShader</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLShaderPrecisionFormat\"><code>WebGLShaderPrecisionFormat</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLSync\"><code>WebGLSync</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/fr/docs/Web/API/WebGLTexture\"><code>WebGLTexture</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n\n  <li><strong><a href=\"/fr/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Contribuer</summary>\n      <ol>\n        <li><a href=\"/fr/docs/MDN\">Le projet MDN</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">« Précédent</a></li>\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL\">Suivant  »</a></li>\n</ul>\n<p>Maintenant que notre programme peut faire tourner un cube 3D, appliquons lui une texture, au lieu d'avoir des couleurs unies pour ses faces.</p>"}},{"type":"prose","value":{"id":"chargement_des_textures","title":"Chargement des textures","isH3":false,"content":"<p>La première chose à faire est d'ajouter le code pour charger les textures. Dans notre cas, nous utiliserons une texture unique, appliquée à chacune des six faces de notre cube en rotation ; mais la même technique peut être utilisée un nombre quelconque de textures.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note :</strong> il est important de noter que le chargement des textures suit les <a href=\"/fr/docs/Web/HTTP/CORS\">règles inter-domaines</a>&nbsp;; donc vous pouvez seulement charger des textures depuis les sites pour lesquels votre contenu a l'approbation CORS. Voir les textures inter-domaines ci-dessous pour plus de détails.</p>\n</div>\n<p>Le code qui charge la texture ressemble à ce qui suit&nbsp;:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">//</span>\n<span class=\"token comment\">// Initialiser une texture et charger une image.</span>\n<span class=\"token comment\">// Quand le chargement d'une image est terminé, la copier dans la texture.</span>\n<span class=\"token comment\">//</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">loadTexture</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gl<span class=\"token punctuation\">,</span> url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> texture <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">createTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">bindTexture</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Du fait que les images doivent être téléchargées depuis l'internet,</span>\n  <span class=\"token comment\">// il peut s'écouler un certain temps avant qu'elles ne soient prêtes.</span>\n  <span class=\"token comment\">// Jusque là, mettre un seul pixel dans la texture, de sorte que nous puissions</span>\n  <span class=\"token comment\">// l'utiliser immédiatement. Quand le téléchargement de la page sera terminé,</span>\n  <span class=\"token comment\">// nous mettrons à jour la texture avec le contenu de l'image.</span>\n  <span class=\"token keyword\">const</span> level <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> internalFormat <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">RGBA</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> border <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> srcFormat <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">RGBA</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> srcType <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">UNSIGNED_BYTE</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> pixel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// bleu opaque</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">texImage2D</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> internalFormat<span class=\"token punctuation\">,</span>\n                width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> border<span class=\"token punctuation\">,</span> srcFormat<span class=\"token punctuation\">,</span> srcType<span class=\"token punctuation\">,</span>\n                pixel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> image <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  image<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">bindTexture</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">texImage2D</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> internalFormat<span class=\"token punctuation\">,</span>\n                  srcFormat<span class=\"token punctuation\">,</span> srcType<span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// WebGL1 a des spécifications différentes pour les images puissances de 2</span>\n    <span class=\"token comment\">// par rapport aux images non puissances de 2 ; aussi vérifier si l'image est une</span>\n    <span class=\"token comment\">// puissance de 2 sur chacune de ses dimensions.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPowerOf2</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isPowerOf2</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Oui, c'est une puissance de 2. Générer les mips.</span>\n        gl<span class=\"token punctuation\">.</span><span class=\"token function\">generateMipmap</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Non, ce n'est pas une puissance de 2. Désactiver les mips et définir l'habillage</span>\n        <span class=\"token comment\">// comme \"accrocher au bord\"</span>\n        gl<span class=\"token punctuation\">.</span><span class=\"token function\">texParameteri</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_WRAP_S</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">CLAMP_TO_EDGE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        gl<span class=\"token punctuation\">.</span><span class=\"token function\">texParameteri</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_WRAP_T</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">CLAMP_TO_EDGE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        gl<span class=\"token punctuation\">.</span><span class=\"token function\">texParameteri</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_MIN_FILTER</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">LINEAR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  image<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> texture<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">isPowerOf2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>La routine <code>loadTexture()</code> commence par créer un objet texture WebGL <code>texture</code> en appelant la fonction WebGL <a href=\"/fr/docs/Web/API/WebGLRenderingContext/createTexture\" title=\"createTexture()\"><code>createTexture()</code></a>. Il téléverse ensuite un seul pixel bleu en utilisant <a href=\"/fr/docs/Web/API/WebGLRenderingContext/texImage2D\" title=\"texImage2D()\"><code>texImage2D()</code></a>. Cela rend la texture immédiatement utilisable comme une couleur bleue unie, alors que cela peut prendre quelques instants pour télécharger notre image.</p>\n<p>Pour charger la texture à partir du fichier image, elle crée ensuite un objet Image et en affecte le src à l'URL de l'image que nous souhaitons utiliser comme texture. La fonction que nous affectons à <code>image.onload</code> sera appelée une fois terminé le téléchargement de l'image. À ce stade, nous appelons à nouveau <a href=\"/fr/docs/Web/API/WebGLRenderingContext/texImage2D\" title=\"texImage2D()\"><code>texImage2D()</code></a>, cette fois en utilisant l'image comme source pour la texture. Après cela, nous configurons le filtrage et l'habillage de la texture suivant que l'image que nous téléchargeons a ou non une puissance de 2 selon ses deux dimensions.</p>\n<p>WebGL1 ne peut utiliser que des textures non puissances de 2 avec d'un filtrage défini à NEAREST ou LINEAR, et il ne peut pas générer de mipmap pour elles. Leur mode d'habillage doit également être défini à CLAMP_TO_EDGE. Inversement, si la texture est une puissance de 2 dans les deux dimensions, alors WebGL peut faire un filtrage de meilleure qualité, il peut utiliser mipmap, et il peut définir le mode d'habillage à REPEAT ou MIRRORED_REPEAT.</p>\n<p>Un exemple de texture répétée est le pavage d'une image par quelques briques pour couvrir un mur de briques.</p>\n<p>Le mipmapping et la répétition UV peuvent être désactivés avec <a href=\"/fr/docs/Web/API/WebGLRenderingContext/texParameter\" title=\"texParameteri()\"><code>texParameteri()</code></a>. Cela permettra des textures non-puissances-de-deux (NPOT) au prix du mipmapping, de l'habillage UV, du pavage UV, et de votre contrôle sur la manière dont le périphérique gérera votre texture.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// gl.NEAREST est aussi permis, au lieu de gl.LINEAR, du fait qu'aucun ne fait de mipmap.</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">texParameteri</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_MIN_FILTER</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">LINEAR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Empêcher l'habillage selon la coordonnée s (répétition).</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">texParameteri</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_WRAP_S</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">CLAMP_TO_EDGE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Empêcher l'habillage selon la coordonnée t (répétition).</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">texParameteri</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_WRAP_T</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">CLAMP_TO_EDGE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>A nouveau, avec ces paramètres, les appareils WebGL compatibles accepteront automatiquement toute résolution pour cette texture (jusqu'à leurs dimensions maximum). A défaut de la configuration ci-dessus, WebGL requiert que tous les échantillons de textures NPOT échouent, en retournant du noir transparent : <code>rgba (0,0,0,0)</code>.</p>\n<p>Pour charger l'image, ajoutons un appel à notre fonction <code>loadTexture()</code> dans notre fonction <code>main()</code>. Cela peut être ajouté après l'appel <code>initBuffers(gl)</code>.</p>\n<pre class=\"notranslate\">// Charger la texture\nconst texture = loadTexture(gl, 'cubetexture.png');\n</pre>"}},{"type":"prose","value":{"id":"application_de_la_texture_sur_les_faces","title":"Application de la texture sur les faces","isH3":false,"content":"<p>À ce stade, la texture est chargée et prête à être utilisée. Mais avant de pouvoir l'utiliser, nous devons définir l'application des coordonnées de texture aux sommets des faces de notre cube. Cela remplace tout le code précédemment existant pour la configuration des couleurs pour chacune des faces du cube dans <code>initBuffers()</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> textureCoordBuffer <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">createBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">bindBuffer</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> textureCoordBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> textureCoordinates <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// Front</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Back</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Top</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Bottom</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Right</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Left</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">bufferData</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span>textureCoordinates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              gl<span class=\"token punctuation\">.</span><span class=\"token constant\">STATIC_DRAW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> positionBuffer<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">textureCoord</span><span class=\"token operator\">:</span> textureCoordBuffer<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">indices</span><span class=\"token operator\">:</span> indexBuffer<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Tout d'abord, ce code crée un tampon WebGL dans lequel nous stockerons les coordonnées de texture pour chaque face, puis nous lions ce tampon comme étant le tableau dans lequel nous allons écrire.</p>\n<p>Le tableau <code>textureCoordinates</code> définit les coordonnées de texture correspondant à chaque sommet de chaque face. Notez que les coordonnées de texture vont de 0,0 à 1,0 ; les dimensions des textures sont normalisées dans une plage de 0,0 à 1,0 quelque soit leur taille réelle, aux fins d'application de la texture.</p>\n<p>Une fois que nous avons mis en place le tableau d'application de la texture, nous l'envoyons dans le tampon, de sorte que WebGL ait ces données prêtes pour son utilisation.</p>"}},{"type":"prose","value":{"id":"mise_à_jour_des_shaders","title":"Mise à jour des shaders","isH3":false,"content":"<p>Le programme shader doit également être mis à jour pour utiliser des textures au lieu de couleurs unies.</p>"}},{"type":"prose","value":{"id":"le_shader_de_sommet","title":"Le shader de sommet","isH3":true,"content":"<p>Nous avons besoin de remplacer le shader de sommet de façon à ce qu'au lieu de récupérer des données de couleur, il récupère à la place des données de coordonnées de texture.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> vsSource <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    attribute vec4 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    varying highp vec2 vTextureCoord;\n\n    void main(void) {\n      gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n      vTextureCoord = aTextureCoord;\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Le changement clé est ici qu'au lieu d'aller chercher la couleur du sommet, nous récupérons les coordonnées de la texture, et nous les transmettons au shader de sommet ; ceci indiquera l'emplacement dans la texture correspondant au sommet.</p>"}},{"type":"prose","value":{"id":"le_shader_de_fragment","title":"Le shader de fragment","isH3":true,"content":"<p>Le shader de fragment doit également être mis à jour :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> fsSource <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    varying highp vec2 vTextureCoord;\n\n    uniform sampler2D uSampler;\n\n    void main(void) {\n      gl_FragColor = texture2D(uSampler, vTextureCoord);\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Au lieu d'attribuer une valeur de couleur à la couleur du fragment, la couleur du fragment est calculée en récupérant le <strong>texel</strong> (c'est-à-dire, le pixel dans la texture) sur la base de la valeur de <code>vTextureCoord</code>, qui est interpolée comme les sommets.</p>"}},{"type":"prose","value":{"id":"emplacements_des_attributs_et_des_uniformes","title":"Emplacements des attributs et des uniformes","isH3":true,"content":"<p>Du fait que nous avons changé un attribut et ajouté un uniforme, nous devons rechercher leurs emplacements :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> programInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">program</span><span class=\"token operator\">:</span> shaderProgram<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">attribLocations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">vertexPosition</span><span class=\"token operator\">:</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribLocation</span><span class=\"token punctuation\">(</span>shaderProgram<span class=\"token punctuation\">,</span> <span class=\"token string\">'aVertexPosition'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">textureCoord</span><span class=\"token operator\">:</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribLocation</span><span class=\"token punctuation\">(</span>shaderProgram<span class=\"token punctuation\">,</span> <span class=\"token string\">'aTextureCoord'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">uniformLocations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">projectionMatrix</span><span class=\"token operator\">:</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">getUniformLocation</span><span class=\"token punctuation\">(</span>shaderProgram<span class=\"token punctuation\">,</span> <span class=\"token string\">'uProjectionMatrix'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">modelViewMatrix</span><span class=\"token operator\">:</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">getUniformLocation</span><span class=\"token punctuation\">(</span>shaderProgram<span class=\"token punctuation\">,</span> <span class=\"token string\">'uModelViewMatrix'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">uSampler</span><span class=\"token operator\">:</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">getUniformLocation</span><span class=\"token punctuation\">(</span>shaderProgram<span class=\"token punctuation\">,</span> <span class=\"token string\">'uSampler'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"dessin_du_cube_texturé","title":"Dessin du cube texturé","isH3":false,"content":"<p>Les modifications apportées à la fonction <code>drawScene()</code> sont simples.</p>\n<p>Tout d'abord, le code pour spécifier le tampon de couleurs a disparu, remplacé par ce qui suit :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Indiquer à WebGL comment extraire les coordonnées de texture du tampon</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// chaque coordonnée est composée de 2 valeurs</span>\n  <span class=\"token keyword\">const</span> type <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">FLOAT</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// les données dans le tampon sont des flottants 32 bits</span>\n  <span class=\"token keyword\">const</span> normalize <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ne pas normaliser</span>\n  <span class=\"token keyword\">const</span> stride <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// combien d'octets à récupérer entre un jeu et le suivant</span>\n  <span class=\"token keyword\">const</span> offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// à combien d'octets du début faut-il commencer</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">bindBuffer</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> buffers<span class=\"token punctuation\">.</span>textureCoord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">vertexAttribPointer</span><span class=\"token punctuation\">(</span>programInfo<span class=\"token punctuation\">.</span>attributeLocations<span class=\"token punctuation\">.</span>textureCoord<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> normalize<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">enableVertexAttribArray</span><span class=\"token punctuation\">(</span>programInfo<span class=\"token punctuation\">.</span>attributeLocations<span class=\"token punctuation\">.</span>textureCoord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Ajoutez alors le code pour spécifier la texture à appliquer sur les faces, juste avant de dessiner :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Indiquer à WebGL que nous voulons affecter l'unité de texture 0</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">activeTexture</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Lier la texture à l'unité de texture 0</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">bindTexture</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_2D</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Indiquer au shader que nous avons lié la texture à l'unité de texture 0</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">uniform1i</span><span class=\"token punctuation\">(</span>programInfo<span class=\"token punctuation\">.</span>uniformLocations<span class=\"token punctuation\">.</span>uSampler<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>WebGL fournit un minimum de 8 unités de texture ; la première d'entre elles est <code>gl.TEXTURE0</code>. Nous indiquons à WebGL que nous voulons affecter l'unité 0. Nous appelons alors <a href=\"/fr/docs/Web/API/WebGLRenderingContext/bindTexture\" title=\"bindTexture()\"><code>bindTexture()</code></a>, qui lie la texture au point de liaison <code>TEXTURE_2D</code> de l'unité de texture 0. Nous indiquons alors au shader que pour l'<code>uSampler</code>, il faut utiliser l'unité de texture 0.</p>\n<p>Finalement, ajoutez <code>texture</code> comme paramètre de la fonction <code>drawScene()</code>, où elle est à la fois définie et appelée.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">drawScene</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> programInfo<span class=\"token punctuation\">,</span> buffers<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">drawScene</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gl<span class=\"token punctuation\">,</span> programInfo<span class=\"token punctuation\">,</span> buffers<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> deltaTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</code></pre></div>\n<p>Arrivés ce point, le cube en rotation devrait être prêt à fonctionner.</p><iframe width=\"670\" height=\"510\" src=\"https://mdn.github.io/webgl-examples/tutorial/sample6/index.html\" loading=\"lazy\"></iframe>\n<p><a href=\"https://github.com/mdn/webgl-examples/tree/gh-pages/tutorial/sample6\" class=\"external\" rel=\" noopener\">Voir le code complet</a> | <a href=\"https://mdn.github.io/webgl-examples/tutorial/sample6/\" class=\"external\" rel=\" noopener\">Ouvrir cette démo dans une nouvelle page</a></p>"}},{"type":"prose","value":{"id":"textures_inter-domaines","title":"Textures inter-domaines","isH3":false,"content":"<p>Le chargement des textures WebGL est soumis aux contrôles d'accès inter-domaines. Pour que votre contenu puisse charger une texture d'un autre domaine, une approbation CORS doit être obtenue. Voir le <a href=\"/fr/docs/Web/HTTP/CORS\">Contrôle d'accès HTTP</a> pour plus de détails sur CORS.</p>\n<p>Voir cet <a href=\"https://hacks.mozilla.org/2011/11/using-cors-to-load-webgl-textures-from-cross-domain-images/\" class=\"external\" rel=\" noopener\">article sur hacks.mozilla.org</a> pour une explication de l'utilisation des images approuvées CORS comme textures WebGL, avec <a href=\"https://people.mozilla.org/~bjacob/webgltexture-cors-js.html\" class=\"external\" rel=\" noopener\">un exemple complet</a>.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note :</strong> le support CORS pour les texture WebGL et l'attribut <code>crossOrigin</code> pour les éléments image est implémenté dans <span title=\"(Firefox 8.0 / Thunderbird 8.0 / SeaMonkey 2.5)\">Gecko&nbsp;8.0</span>.</p>\n</div>\n<p>Les canevas 2D dégradés (en écriture seule) ne peuvent pas être utilisés comme des textures WebGL. Un <a href=\"/fr/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 2D devient dégradé par exemple lorsqu'il est utilisé pour dessiner une image inter-domaine.</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note :</strong> le support CORS pour <code>drawImage</code> de Canvas 2D est implémenté dans <span title=\"(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)\">Gecko&nbsp;9.0</span>. Cela signifie que l'utilisation d'une image inter-domaine ayant l'approbation CORS ne dégrade plus le canevas 2D, de sorte que le canevas 2D reste utilisable comme source d'une texture WebGL.</p>\n</div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note :</strong> le support CORS pour les vidéos inter-domaines et l'attribut <code>crossorigin</code> pour les éléments <a href=\"/fr/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> est implémenté dans <span title=\"(Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9)\">Gecko&nbsp;12.0</span>.</p>\n</div><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">« Précédent</a></li>\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL\">Suivant  »</a></li>\n</ul>"}}],"toc":[{"text":"Chargement des textures","id":"chargement_des_textures"},{"text":"Application de la texture sur les faces","id":"application_de_la_texture_sur_les_faces"},{"text":"Mise à jour des shaders","id":"mise_à_jour_des_shaders"},{"text":"Dessin du cube texturé","id":"dessin_du_cube_texturé"},{"text":"Textures inter-domaines","id":"textures_inter-domaines"}],"summary":"Maintenant que notre programme peut faire tourner un cube 3D, appliquons lui une texture, au lieu d'avoir des couleurs unies pour ses faces.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using textures in WebGL","locale":"en-US","native":"English (US)"},{"title":"Utilizando texturas en WebGL","locale":"es","native":"Español"},{"title":"WebGL でのテクスチャの使用","locale":"ja","native":"日本語"},{"title":"WebGL에서 텍스쳐 사용하기","locale":"ko","native":"한국어"},{"title":"Using textures in WebGL","locale":"ru","native":"Русский"},{"title":"Using textures in WebGL","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/webgl_api/tutorial/using_textures_in_webgl","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/webgl_api/tutorial/using_textures_in_webgl/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/WebGL_API","title":"L'API WebGL : graphismes 2D et 3D pour le web"},{"uri":"/fr/docs/Web/API/WebGL_API/Tutorial","title":"Tutoriel WebGL"},{"uri":"/fr/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL","title":"Utilisation des textures en WebGL"}],"pageTitle":"Utilisation des textures en WebGL - Référence Web API | MDN","noIndexing":false}}