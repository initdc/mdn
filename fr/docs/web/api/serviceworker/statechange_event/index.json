{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ServiceWorker.onstatechange","mdn_url":"/fr/docs/Web/API/ServiceWorker/statechange_event","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Propriétés</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorker/scriptURL\"><code>scriptURL</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/ServiceWorker/state\"><code>state</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Événements</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorker/error_event\"><code>error</code> <small>(en-US)</small></a></li><li><em><code>statechange</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Héritage&nbsp;:</summary><ol><li><a href=\"/fr/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à Service Workers API</summary><ol><li><a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/fr/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/fr/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/fr/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/fr/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/fr/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/fr/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/fr/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/fr/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/fr/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>Cette fonction est expérimentale</strong><br>Puisque cette fonction est toujours en développement dans certains navigateurs, veuillez consulter le <a href=\"#browser_compatibility\">tableau de compatibilité</a> pour les préfixes à utiliser selon les navigateurs.<br>Il convient de noter qu'une fonctionnalité expérimentale peut voir sa syntaxe ou son comportement modifié dans le futur en fonction des évolutions de la spécification.</p></div>\n<p>Une propriété <a href=\"/fr/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a> appelée quand un évenement de type <code>statechange</code> est déclenché; c'est le cas dès que le <a href=\"/fr/docs/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a> change.</p>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ServiceWorker<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">statechangeevent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\nServiceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'statechange'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">statechangeevent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Ce fragment de code présente <a href=\"https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html\" class=\"external\" rel=\" noopener\">un exemple d'enregistrement d'évenements pour le service worker</a> (<a href=\"https://googlechrome.github.io/samples/service-worker/registration-events/\" class=\"external\" rel=\" noopener\">démo live</a>). Le code écoute pour tout changement du <a href=\"/fr/docs/Web/API/ServiceWorker/state\"><code>ServiceWorker.state</code></a> et retourne sa valeur.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> serviceWorker<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span>installing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  serviceWorker <span class=\"token operator\">=</span> registration<span class=\"token punctuation\">.</span>installing<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#kind'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'installé'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span>waiting<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  serviceWorker <span class=\"token operator\">=</span> registration<span class=\"token punctuation\">.</span>waiting<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#kind'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'en attente'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  serviceWorker <span class=\"token operator\">=</span> registration<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#kind'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'actif'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serviceWorker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logState</span><span class=\"token punctuation\">(</span>serviceWorker<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'statechange'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logState</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Notez que quand l'évenement <code>statechange</code> est déclenché, la référence du service worker peut avoir changée. Par exemple :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">swr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  swr<span class=\"token punctuation\">.</span>installing<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> <span class=\"token string\">\"installé\"</span>\n  swr<span class=\"token punctuation\">.</span>installing<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    swr<span class=\"token punctuation\">.</span>installing <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Ici, swr.waiting OU swr.active peuvent valoir true. Parce que l'évènement</span>\n    <span class=\"token comment\">// statechange est mis en queue, pendant que le worker sous jacent est peut être en</span>\n    <span class=\"token comment\">// état d'attente et sera immédiatement activé si possible.</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"query":"api.ServiceWorker.statechange_event","specifications":[]}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"data":null,"query":"api.ServiceWorker.statechange_event","browsers":null}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Examples","id":"examples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"}],"summary":"Une propriété EventListener appelée quand un évenement de type statechange est déclenché; c'est le cas dès que le ServiceWorker.state change.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ServiceWorker: statechange event","locale":"en-US","native":"English (US)"},{"title":"ServiceWorker.onstatechange","locale":"ko","native":"한국어"},{"title":"ServiceWorker.onstatechange","locale":"ru","native":"Русский"},{"title":"ServiceWorker.onstatechange","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/serviceworker/statechange_event","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/serviceworker/statechange_event/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/ServiceWorker","title":"ServiceWorker"},{"uri":"/fr/docs/Web/API/ServiceWorker/statechange_event","title":"ServiceWorker.onstatechange"}],"pageTitle":"ServiceWorker.onstatechange - Référence Web API | MDN","noIndexing":false}}