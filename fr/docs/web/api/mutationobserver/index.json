{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MutationObserver","mdn_url":"/fr/docs/Web/API/MutationObserver","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructeur</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/MutationObserver\"><code>MutationObserver()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/disconnect\"><code>disconnect()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/observe\"><code>observe()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationObserver/takeRecords\"><code>takeRecords()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à DOM</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/fr/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/fr/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/fr/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/fr/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/fr/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/fr/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/fr/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/fr/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/fr/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/fr/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/fr/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/fr/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/fr/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/fr/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/fr/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/fr/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/fr/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/fr/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/fr/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/fr/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/fr/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/fr/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/fr/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/fr/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/fr/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/fr/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/Text\"><code>Text</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/fr/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/fr/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/fr/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>MutationObserver</code> fournit un moyen d’intercepter les changements dans le <a href=\"/fr/docs/Web/API/Document_Object_Model\">DOM</a>. Il a été conçu pour remplacer les <a href=\"/fr/docs/DOM/Mutation_events\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Mutation Events</a> définis dans la spécification DOM3 Events.</p>"}},{"type":"prose","value":{"id":"constructeur","title":"Constructeur","isH3":false,"content":""}},{"type":"prose","value":{"id":"mutationobserver","title":"<code>MutationObserver()</code>","isH3":true,"content":"<p>Le constructeur permettant d’instancier un nouvel observateur de mutations DOM.</p>\n<pre class=\"notranslate\">new MutationObserver( function callback );\n</pre>\n<h4 id=\"paramètres\">Paramètres</h4>\n<dl>\n  <dt id=\"callback\"><code>callback</code></dt>\n  <dd>\n    <p>Une fonction qui sera appelée à chaque mutation du DOM. L’observateur appellera cette fonction avec deux arguments. Le premier est un tableau d’objets de type <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationRecord\"><code>MutationRecord</code> <small>(en-US)</small></a>&nbsp;; le second est l’instance de <code>MutationObserver</code>.</p>\n  </dd>\n</dl>","titleAsText":"MutationObserver()"}},{"type":"prose","value":{"id":"méthodes_d’instance","title":"Méthodes d’instance","isH3":false,"content":"<table class=\"standard-table\">\n  <tbody>\n    <tr>\n      <td><code>void <a href=\"#observe()\">observe</a>( <a href=\"/fr/docs/Web/API/Node\"><code>Node</code></a>\ntarget,\n<a href=\"#mutationobserverinit\">MutationObserverInit</a> options\n);</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#disconnect()\">disconnect</a>();</code></td>\n    </tr>\n    <tr>\n      <td><code>Array <a href=\"#takerecords()\">takeRecords</a>();</code></td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note :</strong> La cible <a href=\"/fr/docs/Web/API/Node\"><code>Node</code></a> ne doit pas être confondue avec celle de <a href=\"https://nodejs.org/en/\" class=\"external\" rel=\" noopener\">NodeJS</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"observe","title":"<code>observe()</code>","isH3":true,"content":"<p>Inscrit l’instance du <code>MutationObserver</code> afin d’être notifié des mutations DOM du nœud sélectionné.</p>\n<pre class=\"notranslate\">void observe( <a href=\"/fr/docs/Web/API/Node\"><code>Node</code></a> target, MutationObserverInit options );\n</pre>\n<h4 id=\"paramètres_2\">Paramètres</h4>\n<dl>\n  <dt id=\"target\"><code>target</code></dt>\n  <dd>\n    <p>Le <a href=\"/fr/docs/Web/API/Node\"><code>Node</code></a> (nœud) sur lequel doivent être observées les mutations DOM.</p>\n  </dd>\n  <dt id=\"options\"><code>options</code></dt>\n  <dd>\n    <p>Un objet du type <a href=\"#mutationobserverinit\"><code>MutationObserverInit</code></a>. Il spécifie quelles mutations DOM sont à rapporter.</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note :</strong> ajouter un observateur sur un élément revient à utiliser <code>addEventListener</code>. Si vous observez un élément plusieurs fois, cela n’a pas d’impact, dans le sens où, si vous observez un élément deux fois, la callback ne sera pas appelée deux fois, et vous n’aurez pas besoin d’appeler <code>disconnect()</code> deux fois. En d’autres termes, une fois qu’un élément est observé, l’observer à nouveau avec la même instance n’a pas d’effet. Cependant, si la callback est différente, un nouvel observateur sera ajouté.</p>\n</div>","titleAsText":"observe()"}},{"type":"prose","value":{"id":"disconnect","title":"<code>disconnect()</code>","isH3":true,"content":"<p>L’instance <code>MutationObserver</code> cesse de recevoir les notifications de mutations DOM. Jusqu’à ce que la méthode <a href=\"#observe()\"><code>observe()</code></a> soit appelée à nouveau, les callbacks de l’observateur ne seront pas invoquées.</p>\n<pre class=\"notranslate\">void disconnect();\n</pre>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note :</strong> Selon la <a href=\"https://dom.spec.whatwg.org/#garbage-collection\" class=\"external\" rel=\" noopener\">spécification</a>, un <code>MutationObserver</code> est supprimé par le garbage collector si l'élément cible est supprimé.</p>\n</div>","titleAsText":"disconnect()"}},{"type":"prose","value":{"id":"takerecords","title":"<code>takeRecords()</code>","isH3":true,"content":"<p>Vide la file des mutations enregistrées du <code>MutationObserver</code> et retourne son contenu.</p>\n<pre class=\"notranslate\">Array takeRecords();\n</pre>\n<dl>\n  <dt id=\"valeur_de_retour\">Valeur de retour</dt>\n  <dd>\n    <p>Retourne un tableau de <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationRecord\"><code>MutationRecord</code> <small>(en-US)</small></a>.</p>\n  </dd>\n</dl>","titleAsText":"takeRecords()"}},{"type":"prose","value":{"id":"mutationobserverinit","title":"<code>MutationObserverInit</code>","isH3":false,"content":"<p><code>MutationObserverInit</code> est un objet pouvant avoir les propriétés suivantes&nbsp;:</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note :</strong> Au moins une propriété parmi <code>childList</code>, <code>attributes</code> ou <code>characterData</code> doit être initialisée à <code>true</code>, sinon l’erreur <i lang=\"en\">\"An invalid or illegal string was specified</i>\" sera émise.</p>\n</div>\n<table class=\"standard-table\">\n  <tbody>\n    <tr>\n      <td class=\"header\">Propriété</td>\n      <td class=\"header\">Description</td>\n    </tr>\n    <tr>\n      <td><code>childList</code></td>\n      <td>\n        <code>true</code> si l’ajout ou la suppression des éléments enfants du\n        nœud visé (incluant les nœuds de texte) sont à observer.\n      </td>\n    </tr>\n    <tr>\n      <td><code>attributes</code></td>\n      <td>\n        <code>true</code> si les mutations d’attributs du nœud visé sont à\n        observer.\n      </td>\n    </tr>\n    <tr>\n      <td><code>characterData</code></td>\n      <td><code>true</code> si les mutations de texte du nœud visé sont à observer.</td>\n    </tr>\n    <tr>\n      <td><code>subtree</code></td>\n      <td>\n        <code>true</code> si les descendants du nœud visé sont également à\n        observer.\n      </td>\n    </tr>\n    <tr>\n      <td><code>attributeOldValue</code></td>\n      <td>\n        <code>true</code> si <code>attributes</code> est <code>true</code> et si\n        la valeur des attributs avant mutation doit être enregistrée.\n      </td>\n    </tr>\n    <tr>\n      <td><code>characterDataOldValue</code></td>\n      <td>\n        <code>true</code> si <code>characterData</code> est <code>true</code> et\n        si la valeur des données avant mutation doit être enregistrée.\n      </td>\n    </tr>\n    <tr>\n      <td><code>attributeFilter</code></td>\n      <td>\n        Spécifiez un tableau de noms d’attributs locaux (sans namespace) si vous\n        souhaitez n’observer les mutations que sur une partie des attributs.\n      </td>\n    </tr>\n  </tbody>\n</table>","titleAsText":"MutationObserverInit"}},{"type":"prose","value":{"id":"exemple_d’utilisation","title":"Exemple d’utilisation","isH3":false,"content":"<p>L’exemple suivant est extrait de ce <a href=\"https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\" class=\"external\" rel=\" noopener\">blog</a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Selectionne le noeud dont les mutations seront observées</span>\n<span class=\"token keyword\">var</span> targetNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'some-id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Options de l'observateur (quelles sont les mutations à observer)</span>\n<span class=\"token keyword\">var</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">childList</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Fonction callback à éxécuter quand une mutation est observée</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">callback</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mutationsList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> mutation <span class=\"token keyword\">of</span> mutationsList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mutation<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token string\">'childList'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Un noeud enfant a été ajouté ou supprimé.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mutation<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token string\">'attributes'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"L'attribut '\"</span> <span class=\"token operator\">+</span> mutation<span class=\"token punctuation\">.</span>attributeName <span class=\"token operator\">+</span> <span class=\"token string\">\"' a été modifié.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Créé une instance de l'observateur lié à la fonction de callback</span>\n<span class=\"token keyword\">var</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MutationObserver</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Commence à observer le noeud cible pour les mutations précédemment configurées</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>targetNode<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// L'observation peut être arrêtée par la suite</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"autres_articles_pour_en_savoir_plus_en_anglais","title":"Autres articles pour en savoir plus (en anglais)","isH3":false,"content":"<ul>\n  <li><a href=\"http://updates.html5rocks.com/2012/02/Detect-DOM-changes-with-Mutation-Observers\" class=\"external\" rel=\" noopener\">A brief overview</a></li>\n  <li><a href=\"https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\" class=\"external\" rel=\" noopener\">A more in-depth discussion</a></li>\n  <li><a href=\"https://www.youtube.com/watch?v=eRZ4pO0gVWw\" class=\"external\" rel=\" noopener\">A screencast by Chromium developer Rafael Weinstein</a></li>\n  <li><a href=\"https://code.google.com/p/mutation-summary/\" class=\"external\" rel=\" noopener\">The mutation summary library</a></li>\n  <li><a href=\"https://dom.spec.whatwg.org/#mutation-observers\" class=\"external\" rel=\" noopener\">The DOM standard</a> which defines the <code>MutationObserver</code> interface</li>\n</ul>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#interface-mutationobserver","title":"DOM Standard"}],"query":"api.MutationObserver"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.MutationObserver","dataURL":"/fr/docs/Web/API/MutationObserver/bcd.json"}}],"toc":[{"text":"Constructeur","id":"constructeur"},{"text":"Méthodes d’instance","id":"méthodes_d’instance"},{"text":"<code>MutationObserverInit</code>","id":"mutationobserverinit"},{"text":"Exemple d’utilisation","id":"exemple_d’utilisation"},{"text":"Autres articles pour en savoir plus (en anglais)","id":"autres_articles_pour_en_savoir_plus_en_anglais"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"}],"summary":"MutationObserver fournit un moyen d’intercepter les changements dans le DOM. Il a été conçu pour remplacer les Mutation Events définis dans la spécification DOM3 Events.","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MutationObserver","locale":"en-US","native":"English (US)"},{"title":"MutationObserver","locale":"es","native":"Español"},{"title":"MutationObserver","locale":"ja","native":"日本語"},{"title":"MutationObserver","locale":"ko","native":"한국어"},{"title":"MutationObserver","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"MutationObserver","locale":"ru","native":"Русский"},{"title":"MutationObserver","locale":"zh-CN","native":"中文 (简体)"},{"title":"MutationObserver","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"fr/web/api/mutationobserver","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/mutationobserver/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/MutationObserver","title":"MutationObserver"}],"pageTitle":"MutationObserver - Référence Web API | MDN","noIndexing":false}}