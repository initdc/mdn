{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"performance.getEntries()","mdn_url":"/fr/docs/Web/API/Performance/getEntries","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/Performance_Timeline\">Performance Timeline</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/Performance\"><code>Performance</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Propriétés</summary><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/API/Performance/navigation\"><code>navigation</code></a></li><li><a href=\"/fr/docs/Web/API/Performance/timeOrigin\"><code>timeOrigin</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/fr/docs/Web/API/Performance/timing\"><code>timing</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a href=\"/fr/docs/Web/API/Performance/clearMarks\"><code>clearMarks()</code></a></li><li><a href=\"/fr/docs/Web/API/Performance/clearMeasures\"><code>clearMeasures()</code></a></li><li><a href=\"/fr/docs/Web/API/Performance/clearResourceTimings\"><code>clearResourceTimings()</code></a></li><li><em><code>getEntries()</code></em></li><li><a href=\"/fr/docs/Web/API/Performance/getEntriesByName\"><code>getEntriesByName()</code></a></li><li><a href=\"/fr/docs/Web/API/Performance/getEntriesByType\"><code>getEntriesByType()</code></a></li><li><a href=\"/fr/docs/Web/API/Performance/mark\"><code>mark()</code></a></li><li><a href=\"/fr/docs/Web/API/Performance/measure\"><code>measure()</code></a></li><li><a href=\"/fr/docs/Web/API/Performance/now\"><code>now()</code></a></li><li><a href=\"/fr/docs/Web/API/Performance/setResourceTimingBufferSize\"><code>setResourceTimingBufferSize()</code></a></li><li><a href=\"/fr/docs/Web/API/Performance/toJSON\"><code>toJSON()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Événements</summary><ol><li><a href=\"/fr/docs/Web/API/Performance/resourcetimingbufferfull_event\"><code>resourcetimingbufferfull</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Héritage&nbsp;:</summary><ol><li><a href=\"/fr/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à Performance Timeline API</summary><ol><li><a href=\"/fr/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></li><li><a href=\"/fr/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/performance_property\"><code>performance_property</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>La méthode <strong><code>getEntries()</code></strong> renvoie une liste de tous les objets <a href=\"/fr/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a> pour la page. Les membres de la liste (<em>entrées</em>) peuvent être créés en faisant des <em>marqueurs</em> ou des <em>mesures</em> de performance (par exemple en appelant la méthode <a href=\"/fr/docs/Web/API/Performance/mark\" title=\"mark()\"><code>mark()</code></a>) à des moments explicites. Si vous souhaitez filtrer les entrées de performance en fonction de leur type ou de leur nom, consultez la documentation des méthodes <a href=\"/fr/docs/Web/API/Performance/getEntriesByType\" title=\"getEntriesByType()\"><code>getEntriesByType()</code></a> et <a href=\"/fr/docs/Web/API/Performance/getEntriesByName\" title=\"getEntriesByName()\"><code>getEntriesByName()</code></a>.</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Cette fonctionnalité est disponible via les <a href=\"/fr/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  entries <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"valeur_de_retour","title":"Valeur de retour","isH3":true,"content":"<dl>\n  <dt id=\"entries\"><code>entries</code></dt>\n  <dd>\n    <p>Un tableau (<a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>) d'objets <a href=\"/fr/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a>. Les éléments seront classés par ordre chronologique en fonction des entrées <a href=\"/fr/docs/Web/API/PerformanceEntry/startTime\" title=\"startTime\"><code>startTime</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemple","title":"Exemple","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">use_PerformanceEntry_methods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PerformanceEntry tests ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>performance<span class=\"token punctuation\">.</span>mark <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... performance.mark Non pris en charge\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Crée quelques entrées de performance via la méthode mark()</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Begin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">do_work</span><span class=\"token punctuation\">(</span><span class=\"token number\">50000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Begin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">do_work</span><span class=\"token punctuation\">(</span><span class=\"token number\">100000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">do_work</span><span class=\"token punctuation\">(</span><span class=\"token number\">200000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Utilise getEntries() pour itérer à travers chaque entrée.</span>\n  <span class=\"token keyword\">let</span> p <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Entry[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">check_PerformanceEntry</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Utilise getEntriesByType() pour obtenir toutes les entrées \"mark\".</span>\n  p <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Mark only entry[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"]: name = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span>\n         <span class=\"token string\">\"; startTime = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>startTime <span class=\"token operator\">+</span>\n         <span class=\"token string\">\"; duration  = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Utilise getEntriesByName() pour obtenir toutes les entrées \"mark\" nommées \"Begin\".</span>\n  p <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Begin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Mark and Begin entry[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"]: name = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span>\n         <span class=\"token string\">\"; startTime = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>startTime <span class=\"token operator\">+</span>\n         <span class=\"token string\">\"; duration  = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/performance-timeline/#dom-performance-getentries","title":"Performance Timeline"}],"query":"api.Performance.getEntries"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.Performance.getEntries","dataURL":"/fr/docs/Web/API/Performance/getEntries/bcd.json"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Exemple","id":"exemple"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"}],"summary":"La méthode getEntries() renvoie une liste de tous les objets PerformanceEntry pour la page. Les membres de la liste (entrées) peuvent être créés en faisant des marqueurs ou des mesures de performance (par exemple en appelant la méthode mark()) à des moments explicites. Si vous souhaitez filtrer les entrées de performance en fonction de leur type ou de leur nom, consultez la documentation des méthodes getEntriesByType() et getEntriesByName().","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"performance.getEntries()","locale":"en-US","native":"English (US)"},{"title":"performance.getEntries()","locale":"ja","native":"日本語"},{"title":"Performance.getEntries()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/performance/getentries","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/performance/getentries/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/Performance","title":"Performance"},{"uri":"/fr/docs/Web/API/Performance/getEntries","title":"performance.getEntries()"}],"pageTitle":"performance.getEntries() - Référence Web API | MDN","noIndexing":false}}