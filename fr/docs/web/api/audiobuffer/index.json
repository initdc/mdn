{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AudioBuffer","mdn_url":"/fr/docs/Web/API/AudioBuffer","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructeur</summary><ol><li><a href=\"/fr/docs/Web/API/AudioBuffer/AudioBuffer\"><code>AudioBuffer()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Propriétés</summary><ol><li><a href=\"/fr/docs/Web/API/AudioBuffer/duration\"><code>duration</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBuffer/length\"><code>length</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBuffer/numberOfChannels\"><code>numberOfChannels</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBuffer/sampleRate\"><code>sampleRate</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a href=\"/fr/docs/Web/API/AudioBuffer/copyFromChannel\"><code>copyFromChannel()</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBuffer/copyToChannel\"><code>copyToChannel()</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBuffer/getChannelData\"><code>getChannelData()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à Web Audio API</summary><ol><li><a href=\"/fr/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/fr/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/fr/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/fr/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/fr/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/fr/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/fr/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>L'interface AudioBuffer représente une ressource audio stockée en mémoire, créée à partir d'un fichier audio avec la méthode <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>AudioContext.decodeAudioData()</code> <small>(en-US)</small></a>, ou à partir de données brutes avec <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BaseAudioContext/createBuffer\"><code>AudioContext.createBuffer()</code> <small>(en-US)</small></a>. Une fois mises en mémoire dans un AudioBuffer, les données audio sont transférées dans un <a href=\"/fr/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a> afin d'être lues.</p>\n<p>Ce type d'objet est conçu pour contenir de petit extraits audio, durant généralement moins de 45s. Pour les sons plus longs, les objets implémentant <a class=\"page-not-created\" title=\"Cette documentation n'a pas encore été rédigée, vous pouvez aider en contribuant&nbsp;!\"><code>MediaAudioElementSourceNode</code></a> sont plus adaptés. La mémoire tampon contient des données au format non entrelacé IEEE 32-bit PCM linéaire, avec une portée nominale comprise entre -1 et +1. S'il y a plusieurs canaux, ils sont stockés dans des mémoires-tampon distinctes.</p>"}},{"type":"prose","value":{"id":"constructeur","title":"Constructeur","isH3":false,"content":"<dl>\n  <dt id=\"audiobuffer\"><a href=\"/fr/docs/Web/API/AudioBuffer/AudioBuffer\" title=\"AudioBuffer()\"><code>AudioBuffer()</code></a></dt>\n  <dd>\n    <p>Crée et retourne un nouvel objet <code>AudioBuffer</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"propriétés","title":"Propriétés","isH3":false,"content":"<dl>\n  <dt id=\"audiobuffer.samplerate\"><a href=\"/fr/docs/Web/API/AudioBuffer/sampleRate\"><code>AudioBuffer.sampleRate</code></a> <span title=\"Cette valeur ne peut pas être changée.\" class=\"badge inline readonly\">Lecture seule </span></dt>\n  <dd>\n    <p>Retourne un nombre flottant qui représente la fréquence d'échantillonnage, en échantillons par seconde, des données PCM stockées dans la mémoire tampon.</p>\n  </dd>\n  <dt id=\"audiobuffer.length\"><a href=\"/fr/docs/Web/API/AudioBuffer/length\"><code>AudioBuffer.length</code></a> <span title=\"Cette valeur ne peut pas être changée.\" class=\"badge inline readonly\">Lecture seule </span></dt>\n  <dd>\n    <p>Retourne un nombre entier qui représente la longueur, en trames d'échantillonnage , des données PCM stockées dans la mémoire tampon.</p>\n  </dd>\n  <dt id=\"audiobuffer.duration\"><a href=\"/fr/docs/Web/API/AudioBuffer/duration\"><code>AudioBuffer.duration</code></a> <span title=\"Cette valeur ne peut pas être changée.\" class=\"badge inline readonly\">Lecture seule </span></dt>\n  <dd>\n    <p>Retourne un nombre à virgule flottante de double précision qui représente la durée, exprimée en secondes, des données PCM stockées dans la mémoire tampon.</p>\n  </dd>\n  <dt id=\"audiobuffer.numberofchannels\"><a href=\"/fr/docs/Web/API/AudioBuffer/numberOfChannels\"><code>AudioBuffer.numberOfChannels</code></a> <span title=\"Cette valeur ne peut pas être changée.\" class=\"badge inline readonly\">Lecture seule </span></dt>\n  <dd>\n    <p>Retourne un nombre entier qui représente le nombre de canaux audio discrets décrits par les données PCM stockées dans la mémoire tampon.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"méthodes","title":"Méthodes","isH3":false,"content":"<dl>\n  <dt id=\"audiobuffer.getchanneldata\"><a href=\"/fr/docs/Web/API/AudioBuffer/getChannelData\"><code>AudioBuffer.getChannelData()</code></a></dt>\n  <dd>\n    <p>Retourne un <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code> <small>(en-US)</small></a> contenant les données PCM associés au canal, défini par l'index du canal (0 représentant le premier canal).</p>\n  </dd>\n  <dt id=\"audiobuffer.copyfromchannel\"><a href=\"/fr/docs/Web/API/AudioBuffer/copyFromChannel\"><code>AudioBuffer.copyFromChannel()</code></a></dt>\n  <dd>\n    <p>Copie les échantillons du canal associé à <code>AudioBuffer</code> dans un tableau de destination.</p>\n  </dd>\n  <dt id=\"audiobuffer.copytochannel\"><a href=\"/fr/docs/Web/API/AudioBuffer/copyToChannel\"><code>AudioBuffer.copyToChannel()</code></a></dt>\n  <dd>\n    <p>Copie les échantillons dans le canal associé à <code>AudioBuffer</code>, depuis le tableau <code>source</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemple","title":"Exemple","isH3":false,"content":"<p>L'exemple suivant montre comment créer un <code>AudioBuffer</code> et le remplir avec du bruit blanc. Le code source est disponible sur notre repo <a href=\"https://github.com/mdn/audio-buffer\" class=\"external\" rel=\" noopener\">audio-buffer demo</a>; une <a href=\"https://mdn.github.io/audio-buffer/\" class=\"external\" rel=\" noopener\">version live</a> est également consultable.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Stéréo</span>\n<span class=\"token keyword\">var</span> nombreCanaux <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Crée une mémoire tampon vide de 2 secondes</span>\n<span class=\"token comment\">// à la fréquence d'échantillonage du contexte AudioContext</span>\n<span class=\"token keyword\">var</span> nombreFrames <span class=\"token operator\">=</span> contexteAudio<span class=\"token punctuation\">.</span>sampleRate <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> tableauDonnees <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createBuffer</span><span class=\"token punctuation\">(</span>nombreCanaux<span class=\"token punctuation\">,</span> nombreFrames<span class=\"token punctuation\">,</span> contexteAudio<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbouton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// remplit la mémoire tampon avec du bruit blanc</span>\n  <span class=\"token comment\">// valeurs aléatoires entre -1.0 et 1.0</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> canal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> canal <span class=\"token operator\">&lt;</span> nombreCanaux<span class=\"token punctuation\">;</span> canal<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// génère le tableau contenant les données</span>\n    <span class=\"token keyword\">var</span> tampon <span class=\"token operator\">=</span> tableauDonnees<span class=\"token punctuation\">.</span><span class=\"token function\">getChannelData</span><span class=\"token punctuation\">(</span>canal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nombreFrames<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Math.random() donne une valeur comprise entre [0; 1.0]</span>\n      <span class=\"token comment\">// l'audio doit être compris entre [-1.0; 1.0]</span>\n      tampon<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Récupère un AudioBufferSourceNode.</span>\n  <span class=\"token comment\">// C'est un AudioNode à utiliser quand on veut jouer AudioBuffer</span>\n  <span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> contexteAudio<span class=\"token punctuation\">.</span><span class=\"token function\">createBufferSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// assigne le buffer au AudioBufferSourceNode</span>\n  source<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> tableauDonnees<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// connecte le AudioBufferSourceNode avec</span>\n  <span class=\"token comment\">// la destination pour qu'on puisse entendre le son</span>\n  source<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>contexteAudio<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// lance la lecture du so</span>\n  source<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#AudioBuffer","title":"Web Audio API"}],"query":"api.AudioBuffer"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.AudioBuffer","dataURL":"/fr/docs/Web/API/AudioBuffer/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Utiliser la Web Audio API</a></li>\n</ul>"}}],"toc":[{"text":"Constructeur","id":"constructeur"},{"text":"Propriétés","id":"propriétés"},{"text":"Méthodes","id":"méthodes"},{"text":"Exemple","id":"exemple"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"L'interface AudioBuffer représente une ressource audio stockée en mémoire, créée à partir d'un fichier audio avec la méthode AudioContext.decodeAudioData() (en-US), ou à partir de données brutes avec AudioContext.createBuffer() (en-US). Une fois mises en mémoire dans un AudioBuffer, les données audio sont transférées dans un AudioBufferSourceNode afin d'être lues.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AudioBuffer","locale":"en-US","native":"English (US)"},{"title":"AudioBuffer","locale":"es","native":"Español"},{"title":"AudioBuffer","locale":"ja","native":"日本語"},{"title":"AudioBuffer","locale":"ko","native":"한국어"},{"title":"AudioBuffer","locale":"ru","native":"Русский"},{"title":"AudioBuffer","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/audiobuffer","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/audiobuffer/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/AudioBuffer","title":"AudioBuffer"}],"pageTitle":"AudioBuffer - Référence Web API | MDN","noIndexing":false}}