{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"GlobalFetch.fetch()","mdn_url":"/fr/docs/Web/API/fetch","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/fetch\"><code>Fetch</code></a></strong></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>La méthode globale <strong><code>fetch()</code></strong> démarre le chargement d'une ressource sur le réseau et retourne une promesse qui est résolue dès que la réponse est disponible. La promesse résoud l'objet <a href=\"/fr/docs/Web/API/Response\"><code>Response</code></a> représentant la réponse de votre requête. Cette promesse n'échoue pas en cas d'erreur HTTP, elle n'échoue que sur les problèmes de réseau. Vous devez utiliser un gestionnaire <code>then</code> pour identifier les erreurs HTTP.</p>\n<p><code>WindowOrWorkerGlobalScope</code> est aussi bien implémenté par <a href=\"/fr/docs/Web/API/Window\"><code>Window</code></a> que par <a href=\"/fr/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a>, ce qui signifie que la méthode <code>fetch()</code> est disponible dans la plupart des cas où vous pourriez en avoir besoin.</p>\n<p>Une promesse <a href=\"/fr/docs/Web/API/fetch\" title=\"fetch()\" aria-current=\"page\"><code>fetch()</code></a> n'est rejetée que quand un problème de réseau est rencontré, même si en réalité cela signifie généralement qu'il y a un problème de permissions ou quelque chose de similaire. La promesse ne sera pas rejetée en cas d'erreur HTTP (<code>404</code>, etc.) Pour cela, un gestionnaire <code>then()</code> doit vérifier que la propriété <a href=\"/fr/docs/Web/API/Response/ok\"><code>Response.ok</code></a> ait bien pour valeur <code>true</code> et/ou la valeur de la propriété <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/status\"><code>Response.status</code> <small>(en-US)</small></a>.</p>\n<p>La méthode <code>fetch()</code> est contrôlée par la directive <code>connect-src</code> de l'entête <a href=\"/fr/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> plutôt que par la directive de la ressource qui est récupérée.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note :</strong> Les paramètres de la méthode <code>fetch()</code> sont identiques à ceux du contructeur d'une <a href=\"/fr/docs/Web/API/Request/Request\" title=\"Request()\"><code>Request()</code></a>.</p>\n</div>"}},{"type":"prose","value":{"id":"syntaxe","title":"Syntaxe","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> fetchResponsePromise <span class=\"token operator\">=</span> Promise<span class=\"token operator\">&lt;</span>Response<span class=\"token operator\">&gt;</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>entrée<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"paramètres","title":"Paramètres","isH3":true,"content":"<dl>\n  <dt id=\"entrée\"><code>entrée</code></dt>\n  <dd>\n    <p>Définit la ressource que vous voulez obtenir. Cela peut être :</p>\n    <ul>\n      <li>Un <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a> qui contient l'URL de la ressource à obtenir. Certains navigateurs acceptent <code>blob:</code> et <code>data:</code>.</li>\n      <li>Un objet <a href=\"/fr/docs/Web/API/Request\"><code>Request</code></a>.</li>\n    </ul>\n  </dd>\n  <dt id=\"init\"><code>init</code> <span class=\"badge inline optional\">Facultatif</span></dt>\n  <dd>\n    <p>Un objet qui contient les paramètres de votre requête. Les options possibles sont :</p>\n    <dl>\n      <dt id=\"method\"><code>method</code></dt>\n      <dd>\n        <p>La méthode de la requête, par exemple <code>GET</code> ou <code>POST</code>.</p>\n      </dd>\n      <dt id=\"headers\"><code>headers</code></dt>\n      <dd>\n        <p>Les entêtes à ajouter à votre requête, contenues dans un objet <a href=\"/fr/docs/Web/API/Headers\"><code>Headers</code></a> ou dans un objet avec des <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>ByteString</code></a> pour valeurs.</p>\n      </dd>\n      <dt id=\"body\"><code>body</code></dt>\n      <dd>\n        <p>Le corps de votre requête. Cela peut être un <a href=\"/fr/docs/Web/API/Blob\"><code>Blob</code></a>, un <a class=\"page-not-created\" title=\"Cette documentation n'a pas encore été rédigée, vous pouvez aider en contribuant&nbsp;!\"><code>BufferSource</code></a>, un <a href=\"/fr/docs/Web/API/FormData\"><code>FormData</code></a>, un <a href=\"/fr/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, ou un <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>USVString</code></a>. Notez cependant qu'une requête avec <code>GET</code> ou <code>HEAD</code> pour méthode ne peut pas avoir de corps.</p>\n      </dd>\n      <dt id=\"mode\"><code>mode</code></dt>\n      <dd>\n        <p>Le mode à utiliser pour cette requête, par exemple <code>cors</code>, <code>no-cors</code>, ou <code>same-origin.</code></p>\n      </dd>\n      <dt id=\"credentials\"><code>credentials</code></dt>\n      <dd>\n        <p>Les identifiants à utiliser pour cette requête : <code>omit</code>, <code>same-origin</code>, ou <code>include</code>. Pour envoyer automatiquement les cookies pour le domaine actuel, cette option doit être définie. À partir de Chrome 50, cette propriété peut aussi prendre un objet <a href=\"/fr/docs/Web/API/FederatedCredential\"><code>FederatedCredential</code></a> ou une instance de <a href=\"/fr/docs/Web/API/PasswordCredential\"><code>PasswordCredential</code></a>.</p>\n      </dd>\n      <dt id=\"cache\"><code>cache</code></dt>\n      <dd>\n        <p>Le comportement du cache pour cette requête : <code>default</code>, <code>no-store</code>, <code>reload</code>, <code>no-cache</code>, <code>force-cache</code>, ou <code>only-if-cached</code>.</p>\n      </dd>\n      <dt id=\"redirect\"><code>redirect</code></dt>\n      <dd>\n        <p>Le mode de redirection à adopter pour cette requête : <code>follow</code> (suivre les redirections automatiquement), <code>error</code> (abandonner avec une erreur si une redirection a lieu), ou <code>manual</code> (gérer les redirections manuellement). Dans Chrome, la valeur par défaut était <code>follow</code> avant Chrome 47, mais à partir de cette version, c'est <code>manual</code>.</p>\n      </dd>\n      <dt id=\"referrer\"><code>referrer</code></dt>\n      <dd>\n        <p>Un USVString qui vaut <code>no-referrer</code>, <code>client</code>, ou qui contient une URL. La valeur par défaut est <code>client</code>.</p>\n      </dd>\n      <dt id=\"referrerpolicy\"><code>referrerPolicy</code></dt>\n      <dd>\n        <p>Spécifie la valeur de l'entête HTTP referer. Cela peut être <code>no-referrer</code>, <code>no-referrer-when-downgrade</code>, <code>origin</code>, <code>origin-when-cross-origin</code> ou <code>unsafe-url</code>.</p>\n      </dd>\n      <dt id=\"integrity\"><code>integrity</code></dt>\n      <dd>\n        <p>Contient la valeur de <a href=\"/fr/docs/Web/Security/Subresource_Integrity\">l'intégrité de la sous-ressource</a> de la requête (par exemple, <code>sha256-BpfBw7ivV8q2jLiT13fxDYAe2tJllusRSZ273h2nFSE=</code>).</p>\n      </dd>\n      <dt id=\"keepalive\"><code>keepalive</code></dt>\n      <dd>\n        <p>Peut être utilisée pour autoriser la requête à se poursuivre après la fermeture de la page. Une requête avec ce paramètre est équivalente à l'API <a href=\"/fr/docs/Web/API/Navigator/sendBeacon\"><code>Navigator.sendBeacon()</code></a>.</p>\n      </dd>\n      <dt id=\"signal\"><code>signal</code></dt>\n      <dd>\n        <p>Une instance de <a href=\"/fr/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> vous permettant de communiquer avec une requête et de l'interrompre si vous le souhaitez via un <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code> <small>(en-US)</small></a>.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"valeur_retournée","title":"Valeur retournée","isH3":true,"content":"<p>Une <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code> <small>(en-US)</small></a> qui se résoud avec un object <a href=\"/fr/docs/Web/API/Response\"><code>Response</code></a>.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"aborterror\"><code>AbortError</code></dt>\n  <dd>\n    <p>La requête a été interrompue à cause d'un appel à la méthode <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbortController/abort\"><code>abort()</code> <small>(en-US)</small></a> de <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code> <small>(en-US)</small></a>.</p>\n  </dd>\n  <dt id=\"typeerror\"><code>TypeError</code></dt>\n  <dd>\n    <p>L'URL spécifié inclut des identifiants. Ces informations devraient plutôt être fournises via l'en-tête HTTP <a href=\"/fr/docs/Web/HTTP/Headers/Authorization\"><code>Authorization</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemple","title":"Exemple","isH3":false,"content":"<p>Dans notre <a href=\"https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-request\" class=\"external\" rel=\" noopener\">exemple de requête avec fetch</a> (voir <a href=\"https://mdn.github.io/fetch-examples/fetch-request/\" class=\"external\" rel=\" noopener\">cet exemple en direct</a>) nous créons une nouvelle <a href=\"/fr/docs/Web/API/Request\"><code>Request</code></a> avec le constructeur correspondant, puis on l'envoie en appellant <code>fetch()</code>. Comme nous récupérons une image, nous utilisons la méthode <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/blob\"><code>Body.blob()</code> <small>(en-US)</small></a> sur la réponse pour lui donner le bon type MIME pour qu'elle soit gérée correctement, puis l'on crée l'URL correspondant à cet objet et on l'affiche dans un élément <a href=\"/fr/docs/Web/HTML/Element/Img\"><code>&lt;img&gt;</code></a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> monImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> maRequete <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fleurs.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>maRequete<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reponse</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">erreur HTTP! statut: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>reponse<span class=\"token punctuation\">.</span>status<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> reponse<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reponse</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> URLobjet <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>reponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  monImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> URLobjet<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Dans notre <a href=\"https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-with-init-then-request\" class=\"external\" rel=\" noopener\">exemple fetch avec initialisation et requête</a> (voir <a href=\"https://mdn.github.io/fetch-examples/fetch-with-init-then-request/\" class=\"external\" rel=\" noopener\">cet exemple en direct</a>) nous faisons la même chose à la différence que nous passons aussi un objet d'initalisation à la méthode <code>fetch</code> :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> monImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> mesEntetes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmesEntetes<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> monInit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n               <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> mesEntetes<span class=\"token punctuation\">,</span>\n               <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">,</span>\n               <span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token string\">'default'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> maRequete <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fleurs.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>maRequete<span class=\"token punctuation\">,</span> monInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reponse</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Notez que vous pouvez aussi passer l'objet d'initialisation au constructeur de la requête pour obtenir le même effet, par exemple :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> maRequete <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fleurs.jpg'</span><span class=\"token punctuation\">,</span> monInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Vous pouvez aussi utiliser un objet litéral comme en-têtes dans votre objet d'initalisation.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> monInit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n               <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                   <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'image/jpeg'</span>\n               <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n               <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">,</span>\n               <span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token string\">'default'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> maRequete <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fleurs.jpg'</span><span class=\"token punctuation\">,</span> monInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#fetch-method","title":"Fetch Standard"}],"query":"api.fetch"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.fetch","dataURL":"/fr/docs/Web/API/fetch/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/API/Fetch_API\">Fetch API</a></li>\n  <li><a href=\"/fr/docs/Web/API/Service_Worker_API\">ServiceWorker API</a></li>\n  <li><a href=\"/fr/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/fr/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"Syntaxe","id":"syntaxe"},{"text":"Exemple","id":"exemple"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"La méthode globale fetch() démarre le chargement d'une ressource sur le réseau et retourne une promesse qui est résolue dès que la réponse est disponible. La promesse résoud l'objet Response représentant la réponse de votre requête. Cette promesse n'échoue pas en cas d'erreur HTTP, elle n'échoue que sur les problèmes de réseau. Vous devez utiliser un gestionnaire then pour identifier les erreurs HTTP.","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"fetch()","locale":"en-US","native":"English (US)"},{"title":"WindowOrWorkerGlobalScope.fetch()","locale":"es","native":"Español"},{"title":"WindowOrWorkerGlobalScope.fetch()","locale":"ja","native":"日本語"},{"title":"fetch()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"WindowOrWorkerGlobalScope.fetch()","locale":"ru","native":"Русский"},{"title":"fetch()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/fetch","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/fetch/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/fetch","title":"GlobalFetch.fetch()"}],"pageTitle":"GlobalFetch.fetch() - Référence Web API | MDN","noIndexing":false}}