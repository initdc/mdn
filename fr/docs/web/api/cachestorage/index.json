{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CacheStorage","mdn_url":"/fr/docs/Web/API/CacheStorage","locale":"fr","native":"Français","sidebarHTML":"<ol><li><strong><a href=\"/fr/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/fr/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Méthodes</summary><ol><li><a href=\"/fr/docs/Web/API/CacheStorage/delete\"><code>delete()</code></a></li><li><a href=\"/fr/docs/Web/API/CacheStorage/has\"><code>has()</code></a></li><li><a href=\"/fr/docs/Web/API/CacheStorage/keys\"><code>keys()</code></a></li><li><a href=\"/fr/docs/Web/API/CacheStorage/match\"><code>match()</code></a></li><li><a href=\"/fr/docs/Web/API/CacheStorage/open\"><code>open()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Pages liées à Service Workers API</summary><ol><li><a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/fr/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/fr/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/fr/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/fr/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/fr/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/fr/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/fr/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/fr/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code> <small>(en-US)</small></a></li><li><a href=\"/fr/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/fr/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>Cette fonction est expérimentale</strong><br>Puisque cette fonction est toujours en développement dans certains navigateurs, veuillez consulter le <a href=\"#browser_compatibility\">tableau de compatibilité</a> pour les préfixes à utiliser selon les navigateurs.<br>Il convient de noter qu'une fonctionnalité expérimentale peut voir sa syntaxe ou son comportement modifié dans le futur en fonction des évolutions de la spécification.</p></div>\n<p>L'interface <code>CacheStorage</code> représente le stockage des objets <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a>.</p>\n<p>L'interface :</p>\n<ul>\n  <li>Fournit un répertoire principal de tous les caches nommés qui peut être accessible par un <a href=\"/fr/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> ou un autre type de travailleur ou portée de <a href=\"/fr/docs/Web/API/Window\"><code>window</code></a> (vous n'êtes pas limité à l'utiliser uniquement avec des Service Workers, même si la spécification des <i lang=\"en\">service workers</i> le définit).\n    <div class=\"notecard note\" id=\"sect2\">\n      <p><strong>Note :</strong> <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1026063\" class=\"external\" rel=\" noopener\">Chrome et Safari n'exposent que \"CacheStorage\" au contexte fenêtré sur HTTPS</a>. <a href=\"/fr/docs/Web/API/caches\"><code>window.caches</code></a> sera indéfinie, à moins qu'un certificat SSL ne soit configuré.</p>\n    </div>\n  </li>\n  <li>Maintient une correspondance entre les noms des chaînes de caractères et les objets <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a> correspondants.</li>\n</ul>\n<p>Utilisez <a href=\"/fr/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open()</code></a> pour obtenir une instance <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a>.</p>\n<p>Utilisez <a href=\"/fr/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code></a> pour vérifier si une <a href=\"/fr/docs/Web/API/Request\" title=\"Requête\"><code>Requête</code></a> donnée est une clé dans l'un des objets <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a> que l'objet <code>CacheStorage</code> surveille.</p>\n<p>Vous pouvez accéder à <code>CacheStorage</code> via la propriété globale <a href=\"/fr/docs/Web/API/caches\"><code>caches</code></a>.</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note :</strong> CacheStorage échouera systématiquement avec une <code>SecurityError</code> sur les domaines non certifiés (i.e. ceux qui n'utilisent pas HTTPS, bien que cette définition risque de devenir plus complexe dans le future). Pendant vos tests vous pouvez contourner ce comportement en cochant l'option \"Enable Service Workers over HTTP (when toolbox is open)\" dans les options Firefox Devtools / le menu gear.</p>\n</div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note :</strong> <a href=\"/fr/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code></a> est une méthode de convenance. Il est possible d'implémenter une fonctionnalité équivalente pour matcher une entrée de cache en appelant <a href=\"/fr/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open()</code></a>, puis en retournant <a href=\"/fr/docs/Web/API/CacheStorage/keys\"><code>CacheStorage.keys()</code></a>, et en matchant les entrées voulues avec <a href=\"/fr/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code></a>.</p>\n</div>"}},{"type":"prose","value":{"id":"méthodes","title":"Méthodes","isH3":false,"content":"<dl>\n  <dt id=\"cachestorage.match\"><a href=\"/fr/docs/Web/API/CacheStorage/match\"><code>CacheStorage.match()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Cherche si une <a href=\"/fr/docs/Web/API/Request\"><code>Request</code></a> donnée est la clé de n'importe lequel des objets <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a> maintenus par le <a href=\"/fr/docs/Web/API/CacheStorage\" aria-current=\"page\"><code>CacheStorage</code></a>, et retourne une <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promesse</code></a> résolue en cet objet <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a>.</p>\n  </dd>\n  <dt id=\"cachestorage.has\"><a href=\"/fr/docs/Web/API/CacheStorage/has\"><code>CacheStorage.has()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Retourne une <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promesse</code></a> qui est résolue en <code>true</code> si un objet <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a> qui correspond au <code>cacheName</code> existe.</p>\n  </dd>\n  <dt id=\"cachestorage.open\"><a href=\"/fr/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Retourne une <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promesse</code></a> qui est résolue en l'objet <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a> qui correspond au <code>cacheName</code> (si il n'existe pas, un nouveau cache est créé).</p>\n  </dd>\n  <dt id=\"cachestorage.delete\"><a href=\"/fr/docs/Web/API/CacheStorage/delete\"><code>CacheStorage.delete()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Trouve l'objet <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a> correspondant au <code>cacheName</code>, et si il est trouvé, supprime l'objet <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a> et retourne une <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promesse</code></a> résolue à <code>true</code>. Si aucun objet <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a> n'est trouvé, la <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promesse</code></a> est résolue à <code>false</code>.</p>\n  </dd>\n  <dt id=\"cachestorage.keys\"><a href=\"/fr/docs/Web/API/CacheStorage/keys\"><code>CacheStorage.keys()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Retourne une <a href=\"/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promesse</code></a> qui est résolue en un tableau qui contient toutes les chaînes correspondantes aux objets <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a> maintenus par le <a href=\"/fr/docs/Web/API/CacheStorage\" aria-current=\"page\"><code>CacheStorage</code></a>. Cette méthode peut s'utiliser pour itérer sur une liste de tous les objets <a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exemples","title":"Exemples","isH3":false,"content":"<p>Cet extrait de code est tiré de l'<a href=\"https://github.com/mdn/sw-test/\" class=\"external\" rel=\" noopener\">exemple MDN sw-test</a> (lancer <a href=\"https://mdn.github.io/sw-test/\" class=\"external\" rel=\" noopener\">sw-test dans votre navigateur</a>). Ce service worker script attends le déclenchement d'un <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a>, puis lance <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ExtendableEvent/waitUntil\"><code>waitUntil</code> <small>(en-US)</small></a> pour gérer la phase d'installation de l'app. Cela consiste à appeler <a href=\"/fr/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open</code></a> pour créer un nouveau cache, puis <a href=\"/fr/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a> pour y ajouter une série d'assets.</p>\n<p>Dans le second bloc de code, on attends le déclenchement d'un <a href=\"/fr/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a>. On construit ensuite une réponse spéciale comme suit :</p>\n<ol>\n  <li>Vérifier si il y a un match pour la requête dans le CacheStorage. Le cas échéant, servir ça.</li>\n  <li>Sinon, récupérer la requête sur le réseau, puis ouvrir le cache du premier bloc et y ajouter un clone de la requête grâce à <a href=\"/fr/docs/Web/API/Cache/put\"><code>Cache.put</code></a> (<code>cache.put(event.request, response.clone())</code>.)</li>\n  <li>En cas d'échec (e.g. car le réseau est inaccessible), retourner une réponse par défaut.</li>\n</ol>\n<p>Enfin, on retourne cette réponse en utilisant <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FetchEvent/respondWith\"><code>FetchEvent.respondWith</code> <small>(en-US)</small></a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'install'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'/sw-test/'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/index.html'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/style.css'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/app.js'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/image-list.js'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/star-wars-logo.jpg'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/gallery/'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/gallery/bountyHunters.jpg'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'/sw-test/gallery/snowTroopers.jpg'</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span>caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// caches.match() fonctionne toujours</span>\n    <span class=\"token comment\">// mais en cas de succès, la réponse aura une valeur</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// la réponse ne peut être utilisée qu'une seule fois</span>\n        <span class=\"token comment\">// nous devons sauvegarder le clone pour mettre</span>\n        <span class=\"token comment\">// une copie en cache et servir le second</span>\n        <span class=\"token keyword\">let</span> responseClone <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> responseClone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Cet extrait montre comment l'API peut être utilisée en dehors du contexte d'un Service Worker, et utilise l'opérateur \"await\" pour un code beaucoup plus lisible.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Essayer d'obtenir des données du cache, mais se rabattre sur la récupération en direct.</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> cacheVersion <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> cacheName    <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">myapp-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> cacheVersion <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> url          <span class=\"token operator\">=</span> <span class=\"token string\">'https://jsonplaceholder.typicode.com/todos/1'</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">let</span> cachedData     <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getCachedData</span><span class=\"token punctuation\">(</span> cacheName<span class=\"token punctuation\">,</span> url <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> cachedData <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'Récupération des données mises en cache'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> cachedData<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'Obtenir de nouvelles données'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">const</span> cacheStorage <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span> cacheName <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">await</span> cacheStorage<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span> url <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   cachedData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getCachedData</span><span class=\"token punctuation\">(</span> cacheName<span class=\"token punctuation\">,</span> url <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">await</span> <span class=\"token function\">deleteOldCaches</span><span class=\"token punctuation\">(</span> cacheName <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">return</span> cachedData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Obtenir des données du cache.</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getCachedData</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">cacheName<span class=\"token punctuation\">,</span> url</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> cacheStorage   <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span> cacheName <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> cachedResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> cacheStorage<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span> url <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span> cachedResponse <span class=\"token operator\">||</span> <span class=\"token operator\">!</span> cachedResponse<span class=\"token punctuation\">.</span>ok <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> cachedResponse<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Delete any old caches to respect user's disk space.</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">deleteOldCaches</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">currentCache</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> keys <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> key <span class=\"token keyword\">of</span> keys <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> isOurCache <span class=\"token operator\">=</span> <span class=\"token string\">'myapp-'</span> <span class=\"token operator\">===</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> currentCache <span class=\"token operator\">===</span> key <span class=\"token operator\">||</span> <span class=\"token operator\">!</span> isOurCache <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      caches<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span> key <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span> error <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> error <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Spécifications","id":"spécifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#cachestorage-interface","title":"Service Workers 1"}],"query":"api.CacheStorage"}},{"type":"browser_compatibility","value":{"title":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs","isH3":false,"query":"api.CacheStorage","dataURL":"/fr/docs/Web/API/CacheStorage/bcd.json"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Utilisation des Service Workers (en-US)</a></li>\n  <li><a href=\"/fr/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a href=\"/fr/docs/Web/API/caches\"><code>caches</code></a></li>\n</ul>"}}],"toc":[{"text":"Méthodes","id":"méthodes"},{"text":"Exemples","id":"exemples"},{"text":"Spécifications","id":"spécifications"},{"text":"Compatibilité des navigateurs","id":"compatibilité_des_navigateurs"},{"text":"Voir aussi","id":"voir_aussi"}],"summary":"L'interface CacheStorage représente le stockage des objets Cache.","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CacheStorage","locale":"en-US","native":"English (US)"},{"title":"CacheStorage","locale":"es","native":"Español"},{"title":"CacheStorage","locale":"ja","native":"日本語"},{"title":"CacheStorage","locale":"ru","native":"Русский"},{"title":"CacheStorage","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/web/api/cachestorage","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/cachestorage/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/CacheStorage","title":"CacheStorage"}],"pageTitle":"CacheStorage - Référence Web API | MDN","noIndexing":false}}