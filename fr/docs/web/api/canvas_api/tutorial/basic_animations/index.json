{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Animations basiques","mdn_url":"/fr/docs/Web/API/Canvas_API/Tutorial/Basic_animations","locale":"fr","native":"Français","sidebarHTML":"\n <ol>\n  <li><a href=\"/fr/docs/Web/API/Canvas_API\"><strong>Canvas API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Canvas tutorial</summary>\n      <ol>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">Basic usage</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">Drawing shapes</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">Applying styles and colors</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Drawing_text\">Drawing text</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Using_images\">Using images</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Transformations\">Transformations</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Compositing\">Compositing and clipping</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">Basic animations</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">Advanced animations</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">Pixel manipulation</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">Optimizing the canvas</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Finale\">Finale</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Examples</summary>\n      <ol>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/A_basic_ray-caster\">A basic raycaster</a></li>\n        <li><a href=\"/fr/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">Manipulating video using canvas</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Interfaces</summary>\n      <ol>\n        <li><a href=\"/fr/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n        <li><a href=\"/fr/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n        <li><a href=\"/fr/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/fr/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n        <li><a href=\"/fr/docs/Web/API/TextMetrics\"><code>TextMetrics</code></a></li>\n        <li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Path2D\"><code>Path2D</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/fr/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Contribute</summary>\n      <ol>\n        <li><a href=\"/fr/docs/MDN\">The MDN project</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Compositing\">« Précédent</a></li>\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">Suivant  »</a></li>\n</ul>\n<p>Avec l'utilisation en Javascript du composant <a href=\"/fr/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a>, il est très simple de créer des animations (interactives). Ce chapitre décrit comment créer quelques animations basiques.</p>\n<p>La plus grosse limitation est sans doute qu'une fois qu'une forme est dessinée, elle reste telle quelle. Si on a besoin de la déplacer, il faut la redessiner avec ce qui était dessiné avant. Cela peut prendre beaucoup de temps de redessiner des images complexes et les performances dépendront beaucoup de la vitesse de l'ordinateur qui exécute cet affichage.</p>"}},{"type":"prose","value":{"id":"les_étapes_dune_animation_basique","title":"Les étapes d'une animation basique","isH3":false,"content":"<p>Voici les étapes à suivre à chaque image dessinée (frame) :</p>\n<ol>\n  <li>\n    <strong>Effacer le canevas</strong>\n    À moins que les formes que vous voulez dessiner remplissent complètement le canevas (par exemple une image en arrière-plan), vous devrez effacer toutes les formes qui ont été dessinées précédemment. La manière la plus simple de le faire est d'utiliser la méthode <a href=\"/fr/docs/Web/API/CanvasRenderingContext2D/clearRect\" title=\"clearRect()\"><code>clearRect()</code></a>.\n  </li>\n  <li>\n    <strong>Enregistrer l'état du canevas</strong>\n    Si vous changez des configurations qui affectent l'état du canevas (comme le style, les transformations, etc.), et vous voulez vous assurer que c'est l'état original qui est utilisé chaque fois que le canevas est redessiné, alors vous devez enregistrer l'état original.\n  </li>\n  <li>\n    <strong>Dessiner les formes animées</strong>\n    Vous effectuez toutes les opérations pour afficher l'image.\n  </li>\n  <li>\n    <strong>Restaurer l'état du canevas</strong>\n    Si l'état du canevas a été sauvegardé, vous restaurez cet état avant le prochain rendu.\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"contrôle_dune_animation","title":"Contrôle d'une animation","isH3":false,"content":"<p>Les formes sont dessinées en utilisant soit les méthodes du canevas directement soit en appelant des fonctions personnalisées. Dans des conditions normales, on ne voit le résultat des opérations sur le canevas que quand le script a terminé son exécution. Cela signifie qu'il n'est pas possible de créer une animation avec une boucle <code>for</code>.</p>\n<p>Il nous faut donc un moyen d'exécuter nos fonctions de dessin sur une période de temps. Il existe à ce jour trois manières de le faire.</p>"}},{"type":"prose","value":{"id":"mises_à_jour_planifiées","title":"Mises à jour planifiées","isH3":true,"content":"<p>Les fonctions <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/setInterval\"><code>window.setInterval()</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/setTimeout\"><code>window.setTimeout()</code> <small>(en-US)</small></a>, et <a href=\"/fr/docs/Web/API/Window/requestAnimationFrame\"><code>window.requestAnimationFrame()</code></a> peuvent être utilisées :</p>\n<dl>\n  <dt id=\"setintervalfunction_delay_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/setInterval\"><code>setInterval(function, delay)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Lance la fonction définie par <code>function</code> chaque <code>delay</code> <em>(délai)</em> millisecondes.</p>\n  </dd>\n  <dt id=\"settimeoutfunction_delay\"><a href=\"/fr/docs/Web/API/setTimeout\" title=\"setTimeout(function, delay)\"><code>setTimeout(function, delay)</code></a></dt>\n  <dd>\n    <p>Exécute la fonction définie par <code>function</code> dans <code>delay</code> millisecondes.</p>\n  </dd>\n  <dt id=\"requestanimationframecallback\"><a href=\"/fr/docs/Web/API/Window/requestAnimationFrame\" title=\"requestAnimationFrame(callback)\"><code>requestAnimationFrame(callback)</code></a></dt>\n  <dd>\n    <p>Dit au navigateur qu'on veut afficher une animation et lui demande d'appeler la fonction <code>callback</code> pour mettre à jour cette animation avant de dessiner la prochaine image.</p>\n  </dd>\n</dl>\n<p>Si vous n'avez pas besoin d'interaction utilisateur, vous pouvez utiliser la fonction <code>setInterval()</code>, elle va exécuter périodiquement votre code.</p>\n<p>Si vous voulez faire un jeu, et utiliser les événements du clavier et de la souris pour contrôler l'animation, vous pouvez utiliser <code>setTimeout()</code>. En utilisant des <a href=\"/fr/docs/Web/API/EventTarget/addEventListener\"><code>EventListener</code></a>, on peut récupèrer chaque interaction et d'exécuter nos fonctions d'animation.</p>\n<p>Dans les exemples suivants, nous utiliserons <a href=\"/fr/docs/Web/API/Window/requestAnimationFrame\"><code>window.requestAnimationFrame()</code></a> pour contrôler les animations. Cette technique est plus fluide et plus efficace, elle appelle les opérations de rendu quand le système est prêt à dessiner l'image. Dans des conditions idéales, la fonction est alors lancée 60 fois par seconde, mais la fréquence sera réduite si l'animation se passe dans un onglet non visible.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note :</strong> Pour plus d'informations sur la boucle d'animation, plus spécialement pour les jeux, rendez-vous sur l'article <a href=\"/fr/docs/Games/Anatomy\">L'anatomie d'un jeu vidéo</a> dans notre section <a href=\"/fr/docs/Games\">Développement de jeux vidéo</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"un_système_terrestre_animé","title":"Un système terrestre animé","isH3":false,"content":"<p>Cette exemple anime un petit modèle de notre système terrestre.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> sun <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> moon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> earth <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  sun<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'canvas_sun.png'</span><span class=\"token punctuation\">;</span>\n  moon<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'canvas_moon.png'</span><span class=\"token punctuation\">;</span>\n  earth<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'canvas_earth.png'</span><span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span>globalCompositeOperation <span class=\"token operator\">=</span> <span class=\"token string\">'destination-over'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// effacer le canvas</span>\n\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgba(0,0,0,0.4)'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgba(0,153,255,0.4)'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Terre</span>\n  <span class=\"token keyword\">var</span> time <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">getSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">60000</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">getMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">105</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ombre</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>earth<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Lune</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">getSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">6000</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">getMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">28.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>moon<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">3.5</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">105</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Orbite terrestre</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>sun<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"Un système terrestre animé sample\" id=\"frame_un_système_terrestre_animé\" width=\"310\" height=\"310\" src=\"https://yari-demos.prod.mdn.mozit.cloud/fr/docs/Web/API/Canvas_API/Tutorial/Basic_animations/_sample_.un_syst%C3%A8me_terrestre_anim%C3%A9.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"une_horloge_animée","title":"Une horloge animée","isH3":false,"content":"<p>Cette exemple dessine une horloge animée qui affiche l'heure actuelle.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">clock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>lineCap <span class=\"token operator\">=</span> <span class=\"token string\">\"round\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Marquage des heures</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Marquage des minutes</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">60</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">5</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">117</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> sec <span class=\"token operator\">=</span> now<span class=\"token punctuation\">.</span><span class=\"token function\">getSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> min <span class=\"token operator\">=</span> now<span class=\"token punctuation\">.</span><span class=\"token function\">getMinutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> hr  <span class=\"token operator\">=</span> now<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hr <span class=\"token operator\">=</span> hr<span class=\"token operator\">&gt;=</span><span class=\"token number\">12</span> <span class=\"token operator\">?</span> hr<span class=\"token operator\">-</span><span class=\"token number\">12</span> <span class=\"token operator\">:</span> hr<span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Aiguille des heures</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span> hr<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">360</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>min <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">21600</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>sec <span class=\"token punctuation\">)</span>\n  ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Aiguille des minutes</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>min <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">1800</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>sec <span class=\"token punctuation\">)</span>\n  ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">112</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Aiguille des secondes</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>sec <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">/</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#D40000\"</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#D40000\"</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"rgba(0,0,0,0)\"</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#325FA2'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">142</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>clock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>clock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"Une horloge animée sample\" id=\"frame_une_horloge_animée\" width=\"180\" height=\"180\" src=\"https://yari-demos.prod.mdn.mozit.cloud/fr/docs/Web/API/Canvas_API/Tutorial/Basic_animations/_sample_.une_horloge_anim%C3%A9e.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"un_panorama_défilant_en_boucle","title":"Un panorama défilant en boucle","isH3":false,"content":"<p>Dans cet exemple, un panorama défile de la gauche vers la droite et recommence. Nous utilisons une <a href=\"http://commons.wikimedia.org/wiki/File:Capitan_Meadows,_Yosemite_National_Park.jpg\" class=\"external\" rel=\" noopener\">image du parc Yosemite National</a> récupérée sur Wikimedia, vous pouvez utiliser une autre image de votre choix qui est plus grande que le canevas.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Variables utilisateur - les personnaliser pour changer l'image qui défile, ses</span>\n<span class=\"token comment\">// directions, et la vitesse.</span>\n\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'capitan_meadows_yosemite_national_park.jpg'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> CanvasXSize <span class=\"token operator\">=</span> <span class=\"token number\">800</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> CanvasYSize <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> speed <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// plus elle est basse, plus c'est rapide</span>\n<span class=\"token keyword\">var</span> scale <span class=\"token operator\">=</span> <span class=\"token number\">1.05</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">4.5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// décalage vertical</span>\n\n<span class=\"token comment\">// Programme principal</span>\n\n<span class=\"token keyword\">var</span> dx <span class=\"token operator\">=</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> imgW<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> imgH<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> clearX<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> clearY<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ctx<span class=\"token punctuation\">;</span>\n\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    imgW <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span>\n    imgH <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imgW <span class=\"token operator\">&gt;</span> CanvasXSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// image plus grande que le canvas</span>\n        x <span class=\"token operator\">=</span> CanvasXSize <span class=\"token operator\">-</span> imgW<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imgW <span class=\"token operator\">&gt;</span> CanvasXSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// largeur de l'image plus grande que le canvas</span>\n        clearX <span class=\"token operator\">=</span> imgW<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        clearX <span class=\"token operator\">=</span> CanvasXSize<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imgH <span class=\"token operator\">&gt;</span> CanvasYSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// hauteur de l'image plus grande que le canvas</span>\n        clearY <span class=\"token operator\">=</span> imgH<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        clearY <span class=\"token operator\">=</span> CanvasYSize<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// récupérer le contexte du canvas</span>\n    ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// définir le taux de rafraichissement</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">,</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> clearX<span class=\"token punctuation\">,</span> clearY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// clear the canvas</span>\n\n    <span class=\"token comment\">// si image est &lt;= taille du canvas</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imgW <span class=\"token operator\">&lt;=</span> CanvasXSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// réinitialise, repart du début</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> CanvasXSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>imgW <span class=\"token operator\">+</span> x<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// dessine image1 supplémentaire</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>imgW <span class=\"token operator\">+</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> imgW<span class=\"token punctuation\">,</span> imgH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// dessine image2 supplémentaire</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> imgW <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>imgW <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> imgW<span class=\"token punctuation\">,</span> imgH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// image est &gt; taille du canvas</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// réinitialise, repeart du début</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">(</span>CanvasXSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            x <span class=\"token operator\">=</span> CanvasXSize <span class=\"token operator\">-</span> imgW<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// dessine image supplémentaire</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">(</span>CanvasXSize<span class=\"token operator\">-</span>imgW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> x <span class=\"token operator\">-</span> imgW <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> imgW<span class=\"token punctuation\">,</span> imgH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// dessine image</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span>imgW<span class=\"token punctuation\">,</span> imgH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// quantité à déplacer</span>\n    x <span class=\"token operator\">+=</span> dx<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>En dessous, vous trouvez l'élément <a href=\"/fr/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> avec l'image qui défile. Notez que les dimensions de largeur et de hauteur spécifiées doivent correspondre aux valeurs des variables <code>CanvasXZSize</code> et <code>CanvasYSize</code> dans le code JavaScript.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>800<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"Un panorama défilant en boucle sample\" id=\"frame_un_panorama_défilant_en_boucle\" width=\"830\" height=\"230\" src=\"https://yari-demos.prod.mdn.mozit.cloud/fr/docs/Web/API/Canvas_API/Tutorial/Basic_animations/_sample_.un_panorama_d%C3%A9filant_en_boucle.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"autres_exemples","title":"Autres exemples","isH3":false,"content":"<dl>\n  <dt id=\"un_raycaster_basique_avec_canvas\"><a href=\"/fr/docs/Un_raycaster_basique_avec_canvas\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Un raycaster basique avec canvas</a></dt>\n  <dd>\n    <p>Un bon exemple d'animation contrôlée par le clavier.</p>\n  </dd>\n  <dt id=\"animations_avancées\"><a href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">Animations avancées</a></dt>\n  <dd>\n    <p>Nous nous attarderons sur quelques techniques d'animation et de gestion de physique avancées dans le prochain châpitre.</p>\n  </dd>\n</dl><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Compositing\">« Précédent</a></li>\n    <li><a class=\"button minimal\" href=\"/fr/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">Suivant  »</a></li>\n</ul>"}}],"toc":[{"text":"Les étapes d'une animation basique","id":"les_étapes_dune_animation_basique"},{"text":"Contrôle d'une animation","id":"contrôle_dune_animation"},{"text":"Un système terrestre animé","id":"un_système_terrestre_animé"},{"text":"Une horloge animée","id":"une_horloge_animée"},{"text":"Un panorama défilant en boucle","id":"un_panorama_défilant_en_boucle"},{"text":"Autres exemples","id":"autres_exemples"}],"summary":"Avec l'utilisation en Javascript du composant <canvas>, il est très simple de créer des animations (interactives). Ce chapitre décrit comment créer quelques animations basiques.","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Basic animations","locale":"en-US","native":"English (US)"},{"title":"Animaciones básicas","locale":"es","native":"Español"},{"title":"基本的なアニメーション","locale":"ja","native":"日本語"},{"title":"기본 애니메이션","locale":"ko","native":"한국어"},{"title":"Basic animations","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Простые анимации","locale":"ru","native":"Русский"},{"title":"基本的动画","locale":"zh-CN","native":"中文 (简体)"},{"title":"基礎動畫","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"fr/web/api/canvas_api/tutorial/basic_animations","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/api/canvas_api/tutorial/basic_animations/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/API","title":"Référence Web API"},{"uri":"/fr/docs/Web/API/Canvas_API","title":"API canvas"},{"uri":"/fr/docs/Web/API/Canvas_API/Tutorial","title":"Tutoriel canvas"},{"uri":"/fr/docs/Web/API/Canvas_API/Tutorial/Basic_animations","title":"Animations basiques"}],"pageTitle":"Animations basiques - Référence Web API | MDN","noIndexing":false}}