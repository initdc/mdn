{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Définition de paramètres","mdn_url":"/fr/docs/Web/XSLT/XSLT_JS_interface_in_Gecko/Setting_Parameters","locale":"fr","native":"Français","sidebarHTML":"","body":[{"type":"prose","value":{"id":"définition_de_paramètres","title":"Définition de paramètres","isH3":false,"content":"<p>Alors que l'exécution de transformations à l'aide des fichiers .xsl et .xml pré codés est utile, la configuration du fichier .xsl par JavaScript peut l'être bien plus. Par exemple, JavaScript et XSLT peuvent être utilisés pour trier des données XML puis les afficher. L'ordre du tri pourra alterner entre le tri ascendant et le tri descendant.</p>\n<p>XSLT fournit l'élément <code>xsl:param</code>, qui est un descendant de l'élément <code>xsl:stylesheet</code>. <code>XSLTProcessor()</code> fournit trois méthodes JavaScript pour interagir avec ces paramètres&nbsp;: <code>setParameter</code>, <code>getParameter</code> et <code>removeParameter</code>. Elles prennent toutes comme premier argument l'URI de l'espace de nommage de <code>xsl:param</code> (normalement, <code>param</code> tombera dans l'espace de nommage par défaut, ainsi le passer à <code>null</code> suffira). Le nom local de <code>xsl:param</code> est le second argument. <code>setParameter</code> requiert un troisième argument, à savoir la valeur à laquelle le paramètre sera défini.</p>\n<p><strong>Figure 7&nbsp;: Paramètres</strong></p>\n<p><em>XSLT&nbsp;:</em></p>\n<div class=\"code-example\"><pre class=\"brush: xml notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>param</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myOrder<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre></div>\n<p><em>JavaScript&nbsp;:</em></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> sortVal <span class=\"token operator\">=</span> xsltProcessor<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"monOrdre\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sortVal <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> sortVal <span class=\"token operator\">==</span> <span class=\"token string\">\"descendant\"</span><span class=\"token punctuation\">)</span>\n  xsltProcessor<span class=\"token punctuation\">.</span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"monOrdre\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ascendant\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span>\n  xsltProcessor<span class=\"token punctuation\">.</span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"monOrdre\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"descendant\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}}],"toc":[{"text":"Définition de paramètres","id":"définition_de_paramètres"}],"summary":"Alors que l'exécution de transformations à l'aide des fichiers .xsl et .xml pré codés est utile, la configuration du fichier .xsl par JavaScript peut l'être bien plus. Par exemple, JavaScript et XSLT peuvent être utilisés pour trier des données XML puis les afficher. L'ordre du tri pourra alterner entre le tri ascendant et le tri descendant.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Setting Parameters","locale":"en-US","native":"English (US)"},{"title":"XSLT - パラメータの設定","locale":"ja","native":"日本語"},{"title":"Setting Parameters","locale":"ko","native":"한국어"}],"source":{"folder":"fr/web/xslt/xslt_js_interface_in_gecko/setting_parameters","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/web/xslt/xslt_js_interface_in_gecko/setting_parameters/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Web","title":"Technologies web pour développeurs"},{"uri":"/fr/docs/Web/XSLT","title":"XSLT"},{"uri":"/fr/docs/Web/XSLT/XSLT_JS_interface_in_Gecko","title":"L'interface XSLT/JavaScript dans Gecko"},{"uri":"/fr/docs/Web/XSLT/XSLT_JS_interface_in_Gecko/Setting_Parameters","title":"Définition de paramètres"}],"pageTitle":"Définition de paramètres - XSLT | MDN","noIndexing":false}}