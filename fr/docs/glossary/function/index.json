{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Fonction","mdn_url":"/fr/docs/Glossary/Function","locale":"fr","native":"Français","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Une <strong>fonction</strong> est une portion de code qui peut être appelée par d'autres codes ou par elle-même ou par une <a href=\"/fr/docs/Glossary/Variable\">variable</a> qui se réfère à la fonction. Lorsqu'une fonction est appelée, des <a href=\"/fr/docs/Glossary/Argument\">arguments</a> lui sont généralement donnés en entrée. La fonction peut également retourner une valeur de sortie. En <a href=\"/fr/docs/Glossary/JavaScript\">JavaScript</a>, une fonction est aussi un <a href=\"/fr/docs/Glossary/Object\">objet</a>.</p>\n<p>Un nom de fonction est un <a href=\"/fr/docs/Glossary/Identifier\">identifiant</a> déclaré dans le cadre d'une déclaration de fonction ou de l'expression d'une fonction. Le fait que le nom de fonction soit déclaré ou exprimé impacte la <a href=\"/fr/docs/Glossary/Scope\">portée</a> du nom de fonction.</p>"}},{"type":"prose","value":{"id":"différents_types_de_fonctions","title":"Différents types de fonctions","isH3":true,"content":"<p>Une <strong>fonction anonyme</strong> est une fonction sans nom de fonction :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ou en utilisant la notation de flèche de ECMAScript 2015</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Une <strong>fonction nommée</strong> est une fonction avec un nom de fonction :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ou en utilisant la notation de flèche de ECMAScript 2015</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">foo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Une <strong>fonction imbriquée (ou fonction interne)</strong> est une fonction à l'intérieur d'une autre fonction (<em><code>square</code></em> dans l'exemple suivant). Une <strong>fonction externe</strong> est une fonction qui contient une fonction (<em><code>addSquares</code></em> dans l'exemple suivant) :</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">addSquares</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">function</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> x<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//En utilisant la notation de flèche de ECMAScript 2015</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addSquares</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">square</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> x<span class=\"token operator\">*</span>x<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Une <strong>fonction récursive</strong> est une fonction qui fait appel à elle-même. Voir <a href=\"/fr/docs/Glossary/Recursion\">récursion</a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//En utilisant la notation de flèche de ECMAScript 2015</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">loop</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Une <strong>expression de fonction invoquée immédiatement</strong> (IIFE) est une fonction appelée directement après le chargement de la fonction dans le compilateur du navigateur. La façon d'identifier une IIFE est de localiser les parenthèses gauche et droite supplémentaires à la fin de la déclaration de la fonction.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Erreur (https://en.wikipedia.org/wiki/Immediately-invoked_function_expression)</span>\n<span class=\"token comment\">/*\nfunction foo() {\n    console.log('Hello Foo');\n}();\n*/</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">food</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Food\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Si vous souhaitez en savoir plus sur les IIFE, consultez la page suivante sur Wikipédia : <a href=\"https://fr.wikipedia.org/wiki/JavaScript#Expressions_de_fonctions_imm%C3%A9diatement_invoqu%C3%A9es\" class=\"external\" rel=\" noopener\">Expression de la fonction immédiatement invoquée</a></p>"}},{"type":"prose","value":{"id":"voir_aussi","title":"Voir aussi","isH3":false,"content":""}},{"type":"prose","value":{"id":"informations_techniques","title":"Informations Techniques","isH3":true,"content":"<ul>\n  <li><a href=\"/fr/docs/Web/JavaScript/Guide/Functions\">Les Fonctions</a> en JavaScript sur MDN</li>\n  <li><a href=\"/fr/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Fonctions fléchées</a></li>\n</ul>"}}],"toc":[{"text":"Voir aussi","id":"voir_aussi"}],"summary":"Une fonction est une portion de code qui peut être appelée par d'autres codes ou par elle-même ou par une variable qui se réfère à la fonction. Lorsqu'une fonction est appelée, des arguments lui sont généralement donnés en entrée. La fonction peut également retourner une valeur de sortie. En JavaScript, une fonction est aussi un objet.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Function","locale":"en-US","native":"English (US)"},{"title":"Función","locale":"es","native":"Español"},{"title":"Function (関数)","locale":"ja","native":"日本語"},{"title":"함수","locale":"ko","native":"한국어"},{"title":"Função","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Функция","locale":"ru","native":"Русский"},{"title":"Function（函数）","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"fr/glossary/function","github_url":"https://github.com/mdn/translated-content/blob/main/files/fr/glossary/function/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/fr/docs/Glossary","title":"Glossaire MDN : définitions des termes du Web"},{"uri":"/fr/docs/Glossary/Function","title":"Fonction"}],"pageTitle":"Fonction - Glossaire MDN : définitions des termes du Web | MDN","noIndexing":false}}