{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Inheriting Properties","mdn_url":"/ja/docs/orphaned/Web/JavaScript/Guide/The_Employee_Example/Object_Properties/Inheriting_Properties","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":"プロパティの継承","title":"プロパティの継承","isH3":true,"content":"<p>次の文を用いて（<a href=\"/ja/Core_JavaScript_1.5_Guide/The_Employee_Example/Creating_the_Hierarchy\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">図 8.3</a> で示したように）<code>mark</code> オブジェクトを <code>WorkerBee</code> として作成するとします。</p>\n<pre class=\"notranslate\">mark = new WorkerBee;\n</pre>\n<p>JavaScript は new 演算子に出くわすと、新しく汎用オブジェクトを生成し、この新しいオブジェクトを <code>this</code> キーワードの値として WorkerBee コンストラクタ関数に渡します。コンストラクタ関数は明示的に <code>projects</code> プロパティの値をセットします。さらに、内部的な <code>__proto__</code> プロパティの値として <code>WorkerBee.prototype</code> の値をセットします。（このプロパティ名は最初と最後に 2 文字ずつのアンダースコアが付いています。）<code>__proto__</code> プロパティはプロパティの値を返すのに使用されるプロトタイプチェーンを決定します。これらのプロパティがセットされると JavaScript は新しいオブジェクトを返し、代入文は変数 <code>mark</code> にそのオブジェクトをセットします。</p>\n<p>このプロセスでは <code>mark</code> がプロトタイプチェーンから継承するプロパティとして明示的には <code>mark</code> オブジェクトに値（<em>ローカルの</em>値）を格納しません。プロパティの値を使用するとき、JavaScript はまずその値がそのオブジェクトに存在しているかどうかを確認します。存在している場合はその値が返されます。値がローカルには存在していない場合、JavaScript はプロトタイプチェーンを確認します（<code>__proto__</code> プロパティを使用）。プロトタイプチェーン内のオブジェクトがそのプロパティの値を持っている場合、その値が返されます。そのようなプロパティが見つからない場合は JavaScript はそのオブジェクトにはそのプロパティがないと報告します。このようにして、<code>mark</code> オブジェクトには次のようなプロパティと値が入ることになります。</p>\n<pre class=\"notranslate\">mark.name = \"\";\nmark.dept = \"general\";\nmark.projects = [];\n</pre>\n<p><code>mark</code> オブジェクトは <code>mark.__proto__</code> の原型的なオブジェクトから name および dept プロパティの値を継承します。WorkerBee コンストラクタによって projects プロパティにローカルの値が代入されます。このことでプロパティとその値を継承することができます。このプロセスの細かいところは <a href=\"/ja/Core_JavaScript_1.5_Guide/Property_Inheritance_Revisited\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">プロパティの継承、再び</a> にて議論します。</p>\n<p>これらのコンストラクタにインスタンス固有の値を渡せないため、この情報は汎用的になります。プロパティの値は WorkerBee によって作成されるすべての新しいオブジェクトに共有される、デフォルトの値になります。もちろん、これらのどのプロパティのでもその値を変えることができます。そのためには次のようにして <code>mark</code> に固有の情報を与えます。</p>\n<pre class=\"notranslate\">mark.name = \"Doe, Mark\";\nmark.dept = \"admin\";\nmark.projects = [\"navigator\"];\n</pre><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/orphaned/Web/JavaScript/Guide/The_Employee_Example/Object_Properties\">« 前のページ</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/orphaned/Web/JavaScript/Guide/The_Employee_Example/Object_Properties/Adding_Properties\">次のページ »</a></li>\n</ul>"}}],"toc":[],"summary":"次の文を用いて（図 8.3 で示したように）mark オブジェクトを WorkerBee として作成するとします。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","source":{"folder":"ja/orphaned/web/javascript/guide/the_employee_example/object_properties/inheriting_properties","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/orphaned/web/javascript/guide/the_employee_example/object_properties/inheriting_properties/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/orphaned/Web/JavaScript/Guide/The_Employee_Example","title":"The Employee Example"},{"uri":"/ja/docs/orphaned/Web/JavaScript/Guide/The_Employee_Example/Object_Properties","title":"Object Properties"},{"uri":"/ja/docs/orphaned/Web/JavaScript/Guide/The_Employee_Example/Object_Properties/Inheriting_Properties","title":"Inheriting Properties"}],"pageTitle":"Inheriting Properties | MDN","noIndexing":true}}