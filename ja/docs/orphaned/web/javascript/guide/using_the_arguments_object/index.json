{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"arguments オブジェクトの使用","mdn_url":"/ja/docs/orphaned/Web/JavaScript/Guide/Using_the_arguments_object","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":"arguments_オブジェクトの使用","title":"<code>arguments</code> オブジェクトの使用","isH3":true,"content":"<div class=\"onlyinclude\" id=\"sect1\">\n  \n  <p>関数の引数は配列のようなオブジェクトで管理されます。関数内では、次のようにして渡された引数を指すことができます。</p>\n  <pre class=\"eval notranslate\">arguments[i]\n</pre>\n  <p>ここで <code>i</code> は引数の順序を表す数を指します。これは 0 から始まります。関数に渡された第 1 引数は <code>arguments[0]</code> となります。引数のトータルの数は <code>arguments.length</code> で示されます。</p>\n  <p><code>arguments</code> オブジェクトを使用すると、宣言時の仮引数の数よりも多くの引数を使って関数を呼び出すことができます。これはその関数に渡す引数の数が前もってわかっていない場合に役立ちます。<code>arguments</code>.length を使用することで実際にその関数に渡された引数の数を特定することができます。また、<code>arguments</code> オブジェクトを使用することで各引数を扱うことができます。</p>\n  <p>例えば、複数の文字列を連結する関数を考えます。この関数の仮引数は、連結するアイテムを区切るのに用いる文字列のみです。この関数は次のように定義されています。</p>\n  <pre class=\"eval notranslate\">function myConcat(separator) {\n   var result = \"\"; // リストを初期化する\n   // 引数について繰り返し\n   for (var i = 1; i &lt; arguments.length; i++) {\n      result += arguments[i] + separator;\n   }\n   return result;\n}\n</pre>\n  <p>この関数に引数をいくつも渡すことができます。そして各引数を文字列のリストに連結します。</p>\n  <pre class=\"eval notranslate\">// \"red, orange, blue, \" を返す\nmyConcat(\", \", \"red\", \"orange\", \"blue\");\n<p>// \"elephant; giraffe; lion; cheetah; \" を返す\nmyConcat(\"; \", \"elephant\", \"giraffe\", \"lion\", \"cheetah\");</p>\n<p>// \"sage. basil. oregano. pepper. parsley. \" を返す\nmyConcat(\". \", \"sage\", \"basil\", \"oregano\", \"pepper\", \"parsley\");</p>\n<p></p></pre>\n  <p>さらなる情報については、コア JavaScript リファレンスの <a href=\"/ja/Core_JavaScript_1.5_Reference/Objects/Function\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Function オブジェクト</a> をご覧ください。</p>\n  <p><strong>JavaScript 1.3 以前のバージョン</strong><br>arguments オブジェクトは <code>Function</code> オブジェクトのプロパティであり、次のように関数の名前を前に付けることができます。</p>functionName.arguments[i]\n</div>\n<p></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal page-not-created\" href=\"/ja/docs/JavaScript/Guide/Calling_Functions\" title=\"This is a link to an unwritten page\">« 前のページ</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/orphaned/Web/JavaScript/Guide/Predefined_Functions\">次のページ »</a></li>\n</ul>","titleAsText":"arguments オブジェクトの使用"}}],"toc":[],"summary":"関数の引数は配列のようなオブジェクトで管理されます。関数内では、次のようにして渡された引数を指すことができます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","source":{"folder":"ja/orphaned/web/javascript/guide/using_the_arguments_object","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/orphaned/web/javascript/guide/using_the_arguments_object/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"pageTitle":"arguments オブジェクトの使用 | MDN","noIndexing":true}}