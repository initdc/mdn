{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Firefox 5 for developers","mdn_url":"/ja/docs/Mozilla/Firefox/Releases/5","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Firefox 5 は Gecko 5.0 ベースのブラウザで、2011 年 6 月 21 日にリリースされました。このページは Firefox 5 のリリースにあたり、開発者に影響する変更について情報をまとめたものです。</p>"}},{"type":"prose","value":{"id":"web_開発者向けの変更点一覧","title":"Web 開発者向けの変更点一覧","isH3":false,"content":""}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<ul>\n  <li>すべての HTML 要素が <a href=\"/ja/docs/Web/API/HTMLElement/accessKey\" title=\"accessKey\"><code>accessKey</code></a> 属性を持つようになりました。また、<a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>blur()</code></a>, <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>click()</code></a>, <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>focus()</code></a> メソッドもすべての要素に定義されました。これらの属性やメソッドは <a href=\"/ja/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a> に定義されています。</li>\n  <li>HTML5 仕様への準拠により、<a href=\"/ja/docs/Character_Sets_Supported_by_Gecko\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">文字エンコーディング</a> UTF-7 と UTF-32 のサポートが削除されました。</li>\n  <li>Quirks モードにおいて、空の <a href=\"/ja/docs/Web/HTML/Element/map\"><code>&lt;map&gt;</code></a> がマッチされず、空でない <code>&lt;map&gt;</code> にスキップしてしまう問題が修正されました。詳細は <a href=\"/ja/docs/Web/HTML/Element/map\"><code>&lt;map&gt;</code></a> 要素のページにある <a href=\"/en-US/docs/Web/HTML/Element/map#gecko_notes\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Gecko の実装に関する注意書き (en-US)</a> をご覧ください。</li>\n  <li>Android 版 Firefox mobile が <a href=\"/ja/docs/Web/CSS/@font-face\"><code>@font-face</code></a> で WOFF を利用できるようになりました。</li>\n  <li>セキュリティ対策により、WebGL で <a href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\">もとのドメイン外からのテクスチャが読み込まれなくなりました</a>。将来的に <a href=\"/ja/docs/Web/HTTP/CORS\">HTTP access control</a> のサポートが行われ、セキュリティを確保したかたちでクロステクスチャが実現できるでしょう。</li>\n</ul>\n<h4 id=\"canvas_の修正\">Canvas の修正</h4>\n<ul>\n  <li><a href=\"/ja/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 2D コンテキストの <code>createImageData()</code> メソッドに <code>ImageData</code> オブジェクト指定できるようになりました。このメソッドは指定したオブジェクトと同じ大きさの <a href=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas#creating_an_imagedata_object\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">新しい ImageData オブジェクトを作成 (en-US)</a> しますが、すべてのピクセルが透明な黒で描画されます。これは実装されたと書かれていたのですが、そうではありませんでした。</li>\n  <li><a href=\"/ja/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a> の <code>addColorStop()</code> メソッドの呼び出しで非有限なカラーストップが指定された際、<code>INDEX_SIZE_ERR</code> が適切に投げられるようになりました (これまでは <code>SYNTAX_ERR</code> が投げられていました)。</li>\n  <li><a href=\"/ja/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> の <code>toDataURL()</code> メソッド実装が修正され、指定した MIME 型をマッチングの前に小文字に変換するようになりました。</li>\n  <li><code>getImageData()</code> が修正され、canvas の境界を超えた矩形を受け入れるようになりました。canvas 外にあるピクセルは透明な黒として返されます。</li>\n  <li><code>drawImage()</code> と <code>createImageData()</code> が仕様に準拠し、負の引数を処理するようになりました。この処理は、適切な軸にそって矩形を反転させます。<strong>We need an article about <a href=\"https://dev.w3.org/csswg/css3-images/#default-sizing\" class=\"external\" rel=\" noopener\">CSS sizing</a> and how this works.</strong></li>\n  <li><code>createImageData()</code> の呼び出しで非有限な値が指定された際、<code>NOT_SUPPORTED_ERR</code> が適切に投げられるようになりました。</li>\n  <li>1px より小さな矩形が指定された際、<code>createImageData()</code> と <code>getImageData()</code> は適切に 1px 相当の ImageData を返すようになりました。</li>\n  <li><code>createRadialGradient()</code> の半径に負の値を指定した際、<code>INDEX_SIZE_ERR</code> が適切に投げられるようになりました。</li>\n  <li><code>createPattern()</code> や <code>drawImage()</code> の呼び出しで、画像に <code>null</code> や <code>undefined</code> が指定された際、<code>TYPE_MISMATCH_ERR</code> が適切に投げられるようになりました。</li>\n  <li><code>globalAlpha</code> に不正な値が指定されても <code>SYNTAX_ERR</code> が投げられないようになりました。このような場合は適切にただ無視されます。</li>\n  <li><code>translate()</code>, <code>transform()</code>, <code>rect()</code>, <code>clearRect()</code>, <code>fillRect()</code>, <code>strokeRect()</code>, <code>lineTo()</code>, <code>moveTo()</code>, <code>quadraticCurveTo()</code>, <code>arc()</code> に不正な値が指定されても例外が投げられないようになりました。このような場合は適切にただ無視されます。</li>\n  <li><code>shadowOffsetX</code>, <code>shadowOffsetY</code>, <code>shadowBlur</code> に不正な値が指定された際、それらはただ無視されるようになりました。</li>\n  <li><code>rotate</code>, <code>scale</code> に不正な値が指定された際、それらはただ無視されるようになりました。</li>\n</ul>"}},{"type":"prose","value":{"id":"css","title":"CSS","isH3":true,"content":"<dl>\n  <dt id=\"css_animations\"><a href=\"/ja/docs/Web/CSS/CSS_Animations/Using_CSS_animations\">CSS Animations</a></dt>\n  <dd>\n    <p>CSS Animations がサポートされました。<code>-moz-</code> 接頭辞をつければ利用可能です。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"dom","title":"DOM","isH3":true,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Selection\"><code>selection</code></a> オブジェクトの <a href=\"/en-US/docs/Web/API/Selection/modify\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">modify() (en-US)</a> メソッドが変更され、単語の選択で単語の後にある空白を含まなくなりました。この変更はプラットフォームごとの一貫性を向上させ、また WebKit の挙動とも一致します。</li>\n  <li>アクティブでないタブにおいて <a href=\"/ja/docs/Web/API/setTimeout\"><code>window.setTimeout()</code></a> メソッドのタイムアウトが 1 秒に 1 回 を超えないようになりました。また、入れ子のタイムアウトが HTML5 仕様で定められた最小値 4ms になりました (これまでは 10ms でした)。</li>\n  <li>上記と同様に、アクティブでないタブにおける <a href=\"/ja/docs/Web/API/setInterval\"><code>window.setInterval()</code></a> も 1 秒に 1 回以下になりました。</li>\n  <li><a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> が <a href=\"/ja/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#detecting_any_load_end_condition\"><code>loadend</code> イベントをサポート</a> for progress listeners. このイベントはすべての転送が終了した際 (つまり、<code>abort</code>, <code>error</code>, <code>load</code> イベントの後) に発生します。このイベントを利用すると、転送の成功・失敗に関わらず実行されるタスクを処理できます。</li>\n  <li><a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> オブジェクトと <a href=\"/ja/docs/Web/API/File\"><code>File</code></a> オブジェクトの <code>slice()</code> メソッドが削除され、代わりに提案中のメソッドに置き換えられました。提案中のメソッドは JavaScript の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>Array.slice()</code></a>, <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/slice\"><code>String.slice()</code></a> メソッドにより近いものです。現時点では <a href=\"/ja/docs/Web/API/Blob#mozslice()\"><code>mozSlice()</code></a> という名前がつけられています。</li>\n  <li><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>window.navigator.language</code></a> の値が <code>Accept-Language</code> <a href=\"/ja/docs/Web/HTTP/Headers\">HTTP ヘッダ</a> の値から決定されるようになりました。</li>\n  <li>DOM 仕様の要件により、<a href=\"/ja/docs/Web/API/Element/prefix\"><code>Node.prefix</code></a> プロパティが readonly になりました。</li>\n</ul>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<ul>\n  <li>正規表現を関数のように呼び出せなくなりました。この変更は WebKit チームと互換性の確保について話し合った結果行われたものです。(<a rel=\"external noopener\" href=\"https://bugs.webkit.org/show_bug.cgi?id=28285\" class=\"external\" title=\"\">WebKit bug 28285</a> をお読みください。この機能は長いこと存在していたものの、少なくとも MDC ではドキュメント化されていませんでした。)</li>\n  <li><a href=\"/ja/docs/JavaScript/Reference/Global_Objects/Function/isGenerator\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>Function.prototype.isGenerator()</code></a> メソッドがサポートされました。個のメソッドによってある関数が <a href=\"/ja/docs/Web/JavaScript/Guide/Iterators_and_Generators#generators.3a_a_better_way_to_build_iterators\">generator</a> であるかを調べられます。</li>\n  <li>chrome コード内に生成された DOM 文書が sandbox 内のスクリプトに現れなくなりました。</li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Lexical_grammar\">予約語</a> <code>class</code>, <code>enum</code>, <code>export</code>, <code>extends</code>, <code>import</code>, <code>super</code> はこれまで Strict Mode のみで予約されていましたが、Strict Mode ではない通常のモードでも予約語扱いになりました。</li>\n  <li>JSON パーサが書き直され、スピードと準拠度が向上しました。この書き直しには <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=572279\" class=\"external\" rel=\" noopener\">バグ&nbsp;572279</a> の修正も含まれています。</li>\n</ul>"}},{"type":"prose","value":{"id":"svg","title":"SVG","isH3":true,"content":"<ul>\n  <li><code><a href=\"/en-US/docs/Web/SVG/Attribute/class\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">class (en-US)</a></code> SVG アトリビュートを動的に変化させられるようになりました。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGLengthList\"><code>SVGLengthList</code> <small>(en-US)</small></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGNumberList\"><code>SVGNumberList</code> <small>(en-US)</small></a>, <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>SVGPathSegList</code></a>, <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SVGPointList\"><code>SVGPointList</code> <small>(en-US)</small></a> など、オブジェクトのリストを表す SVG DOM インターフェースがインデックスされ、配列のようにアクセス可能となりました。加えて、リスト中の項目数を表す <code>length</code> も持ちます。</li>\n</ul>"}},{"type":"prose","value":{"id":"http","title":"HTTP","isH3":true,"content":"<ul>\n  <li>Firefox は <code>Keep-Alive</code> HTTP ヘッダを送信しないようになります。私たちはこのヘッダを正しく整形していませんでした。また、<a href=\"/ja/docs/Web/HTTP/Headers/Connection\"><code>Connection</code></a> や <a href=\"/ja/docs/Web/HTTP/Headers/Proxy-Connection\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>Proxy-Connection</code></a> ヘッダに \"keep-alive\" を指定していたため重複しており、意味がなかったのです。</li>\n  <li>HTTP のトランザクションモデルを変更し、持続的接続プール内の接続を再利用するというより高度なものになりました。Necko はプールを <a title=\"FIFO\" href=\"https://ja.wikipedia.org/wiki/FIFO\" class=\"external\" rel=\" noopener\">FIFO</a> と扱うのではなく、プール内の接続を <a title=\"congestion window\" href=\"https://ja.wikipedia.org/wiki/Congestion_window\" class=\"external\" rel=\" noopener\">congestion window</a> (CWND) の大きい順に並べ替えます。Window のサイズ拡大を避けることで、多くのケースで HTTP トランザクションの確認応答時間 (RTT) を減少させることができるでしょう。</li>\n  <li>Firefox は <code>Content-Disposition</code> HTTP レスポンスヘッダについて、<code>filename</code>, <code>filename*</code> パラメタがどちらも与えられている場合にそれらをより効果的に処理するようになりました。これは <code>filename</code> が先に与えられている場合でも <code>filename*</code> をまず調べすべての名前を読み取ることで実現しています。これまでは最初にマッチしたパラメタが使われており、後により適切な名前が与えられていた場合でもそれが使われなかったのです。詳細は <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=588781\" class=\"external\" rel=\" noopener\">バグ&nbsp;588781</a> をお読みください。</li>\n</ul>"}},{"type":"prose","value":{"id":"mathml","title":"MathML","isH3":true,"content":"<ul>\n  <li><a href=\"https://www.w3.org/TR/MathML3/chapter3.html#id.3.2.5.7.3\" class=\"external\" rel=\" noopener\">embellished operators</a> がサポートされました。</li>\n</ul>"}},{"type":"prose","value":{"id":"開発者ツール","title":"開発者ツール","isH3":true,"content":"<ul>\n  <li><a href=\"https://firefox-source-docs.mozilla.org/devtools-user/web_console/index.html#the_console_object\" class=\"external\" rel=\" noopener\">Web コンソールの <code>Console</code> オブジェクト</a> に <code>debug()</code> メソッドが導入されました。これは <code>log()</code> のエイリアスで、導入によっていくつかの Web サイトとの互換性が向上します。</li>\n</ul>"}},{"type":"prose","value":{"id":"アドオン開発者向けの変更点一覧","title":"アドオン開発者向けの変更点一覧","isH3":false,"content":"<p>すでに開発済みのアドオンを Firefox 5 向けにアップデートを行う方法については <a href=\"/ja/docs/Mozilla/Firefox/Updating_add-ons_for_Firefox_5\">Firefox 5 へのアドオンのアップデート方法</a>をご覧ください。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Firefox 5 は他のメジャーリリース版の Firefox と同様に、再コンパイルされたバイナリコンポーネントが必要となります。詳しくは<a href=\"/ja/docs/Developer_Guide/Interface_Compatibility#Binary_Interfaces\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">バイナリインターフェース</a>をご覧ください。</p>\n</div>"}},{"type":"prose","value":{"id":"javascript_コードモジュールに対する変更点","title":"JavaScript コードモジュールに対する変更点","isH3":true,"content":"<h4 id=\"新しい_javascript_コードモジュール\">新しい JavaScript コードモジュール</h4>\n<ul>\n  <li><a href=\"/ja/docs/JavaScript_code_modules/Dict.jsm\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>Dict.jsm</code></a>コードモジュールが追加されました。このモジュールはキーと値のペアの辞書に対する API を提供します。</li>\n</ul>\n<h4 id=\"netutil.jsm\">NetUtil.jsm</h4>\n<ul>\n  <li><a href=\"/ja/docs/JavaScript_code_modules/NetUtil.jsm#asyncFetch()\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>asyncFetch()</code></a> メソッドは今回から<code>nsIInputStream</code> として入力ソースの特定をサポートします。</li>\n</ul>"}},{"type":"prose","value":{"id":"インターフェースの変更点","title":"インターフェースの変更点","isH3":true,"content":"<ul>\n  <li><code>nsIHttpChannelInternal</code> インターフェースはチャネルの端点のアドレスとポートの情報にアクセスする新しい属性を持っています。この情報は主にデバッグに用いることができます。</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> エレメントの <a href=\"/ja/docs/Web/HTML/Element/canvas#attr-width\"><code>width</code></a> と <a href=\"/ja/docs/Web/HTML/Element/canvas#attr-height\"><code>height</code></a> 属性は今回から符号付き整数から符合なし整数に変わり、IDL におけるリフレクトを行います（<a href=\"/en-US/docs/Web/API/HTMLCanvasElement\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">HTMLCanvasElement (en-US)</a> をご覧ください）。</li>\n  <li><code>nsIAppStartup2</code> と <code>nsIAppStartup_MOZILLA_2_0</code> インターフェースは<code>nsIAppStartup</code> インターフェースに統合されました。</li>\n  <li><code>nsIDocShell_MOZILLA_2_0_BRANCH は</code> <code>nsIDocShell</code> インターフェースに統合されました。</li>\n  <li><code>nsIFocusManager_MOZILLA_2_0_BRANCH</code> インターフェースは <code>nsIFocusManager</code> インターフェースに統合されました。</li>\n  <li><code>nsIHTMLEditor_MOZILLA_2_0_BRANCH</code> インターフェースは <code>nsIHTMLEditor</code> インターフェースに統合されました。</li>\n</ul>\n<h4 id=\"新しいインターフェース\">新しいインターフェース</h4>\n<ul>\n  <li><code>nsIDOMAnimationEvent</code> が追加されました。 <a href=\"/ja/docs/Web/API/AnimationEvent\"><code>AnimationEvent</code></a></li>\n</ul>\n<h4 id=\"削除されたインターフェース\">削除されたインターフェース</h4>\n<p>次にあげるインターフェースはもはや必要がないと判断されました。</p>\n<ul>\n  <li><code>nsICiter</code> （<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=633066\" class=\"external\" rel=\" noopener\">バグ&nbsp;633066</a> をご覧ください）</li>\n  <li><code>nsIDOM3Document</code> （<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=639849\" class=\"external\" rel=\" noopener\">バグ&nbsp;639849</a> をご覧ください。）</li>\n  <li><code>nsIFIXptrEvaluator</code></li>\n  <li><code>nsISelectElement</code> （<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=619996\" class=\"external\" rel=\" noopener\">バグ&nbsp;619996</a> をご覧ください。）</li>\n</ul>"}},{"type":"prose","value":{"id":"デバッグの補助","title":"デバッグの補助","isH3":true,"content":"<ul>\n  <li>新しい <a href=\"/ja/docs/Namespace/Mozilla/DebugOnly%3CT%3E\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>DebugOnly&lt;T&gt;</code></a> ヘルパーはデバッグモードにおけるビルドにおいてのみ変数の定義を可能にしました。</li>\n</ul>"}},{"type":"prose","value":{"id":"javascript_api_spidermonkey","title":"JavaScript API (SpiderMonkey)","isH3":true,"content":"<ul>\n  <li><a href=\"/ja/docs/SpiderMonkey/JSAPI_Reference/jsdouble\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>jsdouble</code></a> の値を C の符号付き整数型と符合なし整数型に変換するために <code>JS_DoubleToInt32()</code> と <a href=\"/ja/docs/SpiderMonkey/JSAPI_Reference/JS_DoubleToInt32\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>JS_DoubleToUint32()</code></a> が追加されました。</li>\n</ul>"}},{"type":"prose","value":{"id":"ビルドシステムの変更点","title":"ビルドシステムの変更点","isH3":true,"content":"<ul>\n  <li><code>mozconfig</code> ファイルがなくても Firefox をビルドできるようになり、 <a href=\"/ja/docs/Configuring_Build_Options#Choose_an_application\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>--enable-application</code> setting</a> が \"browser\" のデフォルトになりました。コードをダウンロード後、<code>configure &amp;&amp; make</code> (or <code>make -f client.mk</code>) を行うだけで Firefox をビルドできます。</li>\n</ul>"}},{"type":"prose","value":{"id":"参考","title":"参考","isH3":false,"content":"<ul>\n  <li><a href=\"https://dev.mozilla.jp/2011/06/firefox5-backward-compatibility/\" class=\"external\" rel=\" noopener\">Firefox 5 の後方互換性に関わる修正のまとめ</a></li>\n  <li><a href=\"http://mozilla.jp/firefox/preview/faq/\" class=\"external\" rel=\" noopener\">高速リリースサイクルに関するよくある質問</a></li>\n</ul><div class=\"multiColumnList\" id=\"sect2\">\n<ul>\n<li><a href=\"/ja/docs/Mozilla/Firefox/Releases/4\">Firefox 4 for developers</a></li><li><a href=\"/ja/docs/Mozilla/Firefox/Releases/3.6\">Firefox 3.6 for developers</a></li><li><a href=\"/ja/docs/Mozilla/Firefox/Releases/3.5\">Firefox 3.5 for developers</a></li><li><a href=\"/ja/docs/Mozilla/Firefox/Releases/3\">Firefox 3 for developers</a></li><li><a href=\"/ja/docs/Mozilla/Firefox/Releases/2\">Firefox 2 for developers</a></li><li><a href=\"/ja/docs/Mozilla/Firefox/Releases/1.5\">Firefox 1.5 for developers</a></li></ul>\n</div>"}}],"toc":[{"text":"Web 開発者向けの変更点一覧","id":"web_開発者向けの変更点一覧"},{"text":"アドオン開発者向けの変更点一覧","id":"アドオン開発者向けの変更点一覧"},{"text":"参考","id":"参考"}],"summary":"Firefox 5 は Gecko 5.0 ベースのブラウザで、2011 年 6 月 21 日にリリースされました。このページは Firefox 5 のリリースにあたり、開発者に影響する変更について情報をまとめたものです。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Firefox 5 for developers","locale":"en-US","native":"English (US)"},{"title":"Firefox 5 pour les développeurs","locale":"fr","native":"Français"},{"title":"Firefox 5 技術文件","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/mozilla/firefox/releases/5","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/mozilla/firefox/releases/5/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Mozilla","title":"Mozilla"},{"uri":"/ja/docs/Mozilla/Firefox","title":"Firefox"},{"uri":"/ja/docs/Mozilla/Firefox/Releases","title":"Firefox 開発者向けリリースノート"},{"uri":"/ja/docs/Mozilla/Firefox/Releases/5","title":"Firefox 5 for developers"}],"pageTitle":"Firefox 5 for developers - Mozilla | MDN","noIndexing":false}}