{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ネイティブメッセージング","mdn_url":"/ja/docs/Mozilla/Add-ons/WebExtensions/Native_messaging","locale":"ja","native":"日本語","sidebarHTML":"\n  <ol>\n    <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions\"><strong>ブラウザー拡張機能</strong></a></li>\n    <li class=\"toggle\">\n      <details>\n        <summary>始めましょう</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/What_are_WebExtensions\">拡張機能とは何か?</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Your_first_WebExtension\">初めての拡張機能</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Your_second_WebExtension\">2つめの拡張機能</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Anatomy_of_a_WebExtension\">拡張機能の中身</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Examples\">拡張機能の例</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/What_next_\">次にどうするのか？</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>概念</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Using_the_JavaScript_APIs\">JavaScript API 群の利用</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Content_scripts\">コンテンツスクリプト</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Match_patterns\">マッチパターン</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Working_with_files\">ファイルの操作</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Internationalization\">多言語対応</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy\">Content Security Policy</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Native_messaging\">Native messaging</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Differences_between_API_implementations\">Differences between API implementations</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Chrome_incompatibilities\">Chrome との非互換性</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>ユーザーインターフェイス</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/user_interface\">ユーザーインターフェイス</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/user_interface/Browser_action\">ブラウザーツールバーボタン</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/user_interface/Page_actions\">アドレスバーボタン</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/user_interface/Sidebars\">サイドバー</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/user_interface/Context_menu_items\">コンテキストメニュー項目</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/user_interface/Options_pages\">オプションページ</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/user_interface/Extension_pages\">ページ拡張</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/user_interface/Notifications\">通知</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/user_interface/Omnibox\">Address bar suggestions</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/user_interface/devtools_panels\">開発ツールパネル</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>逆引きリファレンス</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Intercept_HTTP_requests\">HTTP リクエストへの介入</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Modify_a_web_page\">web ページの変更</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Safely_inserting_external_content_into_a_page\">外部コンテンツの挿入</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Sharing_objects_with_page_scripts\">Share objects with page scripts</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Add_a_button_to_the_toolbar\">ツールバーボタンの追加</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Implement_a_settings_page\">設定画面の実装</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Working_with_the_Tabs_API\">Tabs API 群の使い方</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Work_with_the_Bookmarks_API\">Bookmark API 群の使い方</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Work_with_the_Cookies_API\">Cookie API 群の使い方</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Work_with_contextual_identities\">contextual identities の使い方</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Interact_with_the_clipboard\">クリップボードとのやりとり</a></li>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Build_a_cross_browser_extension\">Build a cross-browser extension</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Firefox_differentiators\">Firefox differentiators</a></summary>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>JavaScript API 群</summary>\n        <ol><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Browser_support_for_JavaScript_APIs\">Browser support for JavaScript APIs</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/alarms\">alarms</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/bookmarks\">bookmarks</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/browserAction\">browserAction</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/browserSettings\">browserSettings</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/browsingData\">browsingData</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/clipboard\">clipboard</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/commands\">commands</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/contentScripts\">contentScripts</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/contextualIdentities\">contextualIdentities</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/cookies\">cookies</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/downloads\">downloads</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/events\">events</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/extension\">extension</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/extensionTypes\">extensionTypes</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/find\">find</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/history\">history</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/i18n\">i18n</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/identity\">identity</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/idle\">idle</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/management\">management</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/menus\">menus</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/notifications\">notifications</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/omnibox\">omnibox</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/pageAction\">pageAction</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/permissions\">permissions</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/pkcs11\">pkcs11</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/privacy\">privacy</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/proxy\">proxy</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/runtime\">runtime</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/sessions\">sessions</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/sidebarAction\">sidebarAction</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/storage\">storage</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/tabs\">tabs</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/theme\">theme</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/topSites\">topSites</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/types\">types</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/webNavigation\">webNavigation</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/webRequest\">webRequest</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/windows\">windows</a></li></ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n      <summary>Manifest keys</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json\">序章</a></li>\n        </ol>\n      <ol><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/author\">author</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/background\">background</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_action\">browser_action</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_specific_settings\">browser_specific_settings</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/chrome_settings_overrides\">chrome_settings_overrides</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/chrome_url_overrides\">chrome_url_overrides</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/commands\">commands</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/content_scripts\">content_scripts</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/content_security_policy\">content_security_policy</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/default_locale\">default_locale</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/description\">description</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/developer\">developer</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/devtools_page\">devtools_page</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/homepage_url\">homepage_url</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/icons\">icons</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/incognito\">incognito</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/manifest_version\">manifest_version</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/name\">name</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/omnibox\">omnibox</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/optional_permissions\">optional_permissions</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/options_ui\">options_ui</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/page_action\">page_action</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/permissions\">permissions</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/protocol_handlers\">protocol_handlers</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/short_name\">short_name</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/sidebar_action\">sidebar_action</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/theme\">theme</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/version\">version</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/version_name\">version_name</a></li><li><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/web_accessible_resources\">web_accessible_resources</a></li></ol>\n      </details>\n    </li>\n     <li class=\"toggle\">\n      <details>\n        <summary>Extension Workshop</summary>\n        <ol>\n          <li><a href=\"https://extensionworkshop.com/documentation/develop/\">Develop</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/publish/\">Publish</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/manage/\">Manage</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/enterprise/\">Enterprise</a></li>\n        </ol>\n      </details>\n    </li>\n    <li><a href=\"/ja/docs/Mozilla/Add-ons/Contact_us\"><strong>コンタクト</strong></a></li>\n    <li class=\"toggle\">\n      <details>\n        <summary>チャンネル</summary>\n        <ol>\n          <li><a href=\"https://blog.mozilla.org/addons\">ブログ</a></li>\n          <li><a href=\"https://discourse.mozilla.org/c/add-ons\">フォーラム</a></li>\n          <li><a href=\"https://chat.mozilla.org/#/room/%23addons:mozilla.org\">Add-ons chat</a></li>\n        </ol>\n      </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>ネイティブメッセージング</strong>はユーザーのコンピューターにインストールされたアプリケーションと拡張機能との間のメッセージ交換を可能にします。ネイティブメッセージングにより、拡張機能が追加のウェブを介したアクセスなしにサービスを提供できます。</p>\n<p>パスワードマネージャーは、パスワードの管理、保管、暗号化を行うネイティブアプリケーションです。ネイティブアプリケーションは拡張機能と通信してウェブフォームに入力を行います。</p>\n<p>さらに、ネイティブメッセージングを用いることで、 WebExtension API ではアクセスできないリソース（特定のハードウェアなど）に対して拡張機能からアクセスできるようになります。</p>\n<p>ネイティブアプリケーションは、ブラウザーによってインストールまたは管理されません。ネイティブアプリケーションは、基盤となるオペレーティングシステムのインストール機構を使用してインストールされます。「ホストマニフェスト」または「アプリマニフェスト」と呼ばれる JSON ファイルを作成してください。定義された場所に JSON ファイルをインストールしてください。アプリマニフェストファイルには、ブラウザーがネイティブアプリケーションに接続する方法を記述します。</p>\n<p>拡張機能は <code>\"nativeMessaging\"</code> の <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/permissions\">権限</a>または<a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/optional_permissions\">オプション権限</a>を <code>manifest.json</code> の中で要求する必要があります。また、ネイティブアプリケーション側ではアプリマニフェストの \"allowed_extensions\" フィールドに拡張機能の ID を含めることで権限を許可する必要があります。</p>\n<p>インストール後、拡張機能はネイティブアプリケーションと JSON メッセージを交換することができます。 <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/runtime\"><code>runtime</code></a> API の一連の関数を使用します。ネイティブアプリ側では、メッセージは標準入力 (<code>stdin</code>) を使用して受信し、標準出力 (<code>stdout</code>) を使用して送信します。</p>\n<p>\n  <img src=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Native_messaging/native-messaging.png\" alt=\"\" width=\"1344\" height=\"1096\" loading=\"lazy\">\n</p>\n<p>ネイティブメッセージングの対応は Chrome とほぼ互換性がありますが、主に 2 つの違いがあります。</p>\n<ul>\n  <li>アプリマニフェストには <code>allowed_extensions</code> にアプリの ID の配列を記述します。 Chrome では <code>allowed_origins</code> に \"chrome-extension\" URL の配列を記述します。</li>\n  <li>アプリマニフェストは <a href=\"https://developer.chrome.com/docs/apps/nativeMessaging/#native-messaging-host-location\" class=\"external\" rel=\" noopener\">Chrome と比較して</a>異なる場所に格納されます。</li>\n</ul>\n<p>GitHub の \"webextensions-examples\" リポジトリーの <a href=\"https://github.com/mdn/webextensions-examples/tree/master/native-messaging\" class=\"external\" rel=\" noopener\">\"<code>native-messaging</code>\" ディレクトリー</a>に完全な例があります。この記事におけるサンプルコードの大半は、この例から直接持ち込んでいます。</p>"}},{"type":"prose","value":{"id":"セットアップ","title":"セットアップ","isH3":false,"content":""}},{"type":"prose","value":{"id":"拡張機能のマニフェスト","title":"拡張機能のマニフェスト","isH3":true,"content":"<p>もし拡張機能をネイティブアプリケーションと通信させたい場合、</p>\n<ul>\n  <li><code>\"nativeMessaging\"</code> <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/permissions\">権限</a>または<a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/optional_permissions\">オプション権限</a>を <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json\"><code>manifest.json</code></a> ファイルに設定する必要があります。</li>\n  <li>アドオンIDを明示的に指定します。 <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_specific_settings\"><code>browser_specific_settings</code></a> マニフェストキーを使用してください（アプリのマニフェストは、 ID への接続を許可する拡張機能のセットを識別します）。</li>\n</ul>\n<p>以下に manifest.json の例を示します。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Native messaging example add-on\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"manifest_version\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Native messaging example\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"48\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icons/message.svg\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token property\">\"browser_specific_settings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"gecko\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ping_pong@example.org\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"strict_min_version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"50.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token property\">\"background\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"background.js\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token property\">\"browser_action\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"default_icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icons/message.svg\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token property\">\"permissions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"nativeMessaging\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Chrome は <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_specific_settings\">browser_specific_settings</a> キーに対応していません。 Chrome に同等の WebExtension をインストールするには、このキーを含まない別のマニフェストを使用する必要があります。以下の <a href=\"#chrome_%E3%81%A7%E3%81%AE%E9%9D%9E%E4%BA%92%E6%8F%9B%E6%80%A7\">Chrome の非互換性</a>を参照してください。</p>\n</div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> オプションの権限を使用する場合、権限が付与されていることを確認し、必要に応じて <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/permissions\"><code>permissions</code></a> API でユーザーに権限を要求してからネイティブアプリケーションと通信してください。</p>\n</div>"}},{"type":"prose","value":{"id":"アプリマニフェスト","title":"アプリマニフェスト","isH3":true,"content":"<p>アプリマニフェストに、ブラウザーがネイティブアプリケーションに接続する方法を記述します。</p>\n<p>アプリマニフェストファイルはネイティブアプリケーションと一緒にインストールする必要があります。ブラウザーはアプリマニフェストファイルを読み込み、検証を行いますが、インストールや管理は行いません。したがって、アプリマニフェストファイルがインストール・更新された時期や方法についてのセキュリティモデルは、 WebExtension を使う拡張機能に対してのものというよりはネイティブアプリケーションに対してのものです。</p>\n<p>ネイティブアプリマニフェストの文法と場所については、<a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Native_manifests\">ネイティブマニフェスト</a>を見てください。</p>\n<p>例として、 \"ping_pong\" ネイティブアプリケーションのマニフェストを以下に示します。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ping_pong\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Example host for native messaging\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/path/to/native-messaging/app/ping_pong.py\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stdio\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"allowed_extensions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"ping_pong@example.org\"</span> <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この設定では、 <code>\"ping_pong@example.org\"</code> という ID の 拡張機能において <code>\"ping_pong\"</code> という名前を <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/runtime\"><code>runtime</code></a> API の関数に渡すことによる接続が許可されます。 アプリケーション自体は <code>\"/path/to/native-messaging/app/ping_pong.py\"</code> です。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> Chrome は、 WebExtension の ID を使用して、<code>allowed_origins</code> という別のキーで許可される拡張機能を識別します。詳しくは <a href=\"https://developer.chrome.com/docs/apps/nativeMessaging/#native-messaging-host\" class=\"external\" rel=\" noopener\">Chrome のドキュメント</a>を参照し、以下の <a href=\"#chrome_%E3%81%A7%E3%81%AE%E9%9D%9E%E4%BA%92%E6%8F%9B%E6%80%A7\">Chrome での非互換性</a>を参照してください。</p>\n</div>"}},{"type":"prose","value":{"id":"windows_セットアップ","title":"Windows セットアップ","isH3":true,"content":"<p>例として、 <a href=\"https://github.com/SphinxKnight/webextensions-examples/tree/master/native-messaging#windows-setup\" class=\"external\" rel=\" noopener\">GitHub のネイティブメッセージング拡張機能の readme</a> を参照することもできます。Windows マシンでこのリポジトリーをフォークした後、ローカルの設定を確認したい場合、いくつかの問題のトラブルシューティングのために <code>check_config_win.py</code> を実行することができます。</p>\n<h4 id=\"アプリマニフェスト_2\">アプリマニフェスト</h4>\n<p>上記の例では、ネイティブアプリケーションは Python スクリプトです。この方法で Windows に Python スクリプトを確実に実行させるのは難しいので、代替案として <code>.bat</code> ファイルを提供し、アプリケーションのマニフェストからそれにリンクする方法があります。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ping_pong\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Example host for native messaging\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c:\\\\path\\\\to\\\\native-messaging\\\\app\\\\ping_pong_win.bat\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stdio\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"allowed_extensions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"ping_pong@example.org\"</span> <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>(<code>allowed_extensions</code> キーと Chrome での対応については、上記の <a href=\"#chrome_%E3%81%A7%E3%81%AE%E9%9D%9E%E4%BA%92%E6%8F%9B%E6%80%A7\">Chrome の互換性</a> についての注意を参照してください)。</p>\n<p>そして、バッチファイルが Python スクリプトを呼び出します。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>@echo off\n\npython -u <span class=\"token string\">\"c:<span class=\"token entity\" title=\"\\\\\">\\\\</span>path<span class=\"token entity\" title=\"\\\\\">\\\\</span>to<span class=\"token entity\" title=\"\\\\\">\\\\</span>native-messaging<span class=\"token entity\" title=\"\\\\\">\\\\</span>app<span class=\"token entity\" title=\"\\\\\">\\\\</span>ping_pong.py\"</span>\n</code></pre></div>\n<h4 id=\"レジストリー\">レジストリー</h4>\n<p>ブラウザーは、特定の場所にある レジストリーキー に基づいて拡張機能を見つけます。最終的なアプリケーションでプログラム的に追加するか、 GitHub の例を使用する場合は手動で追加する必要があります。詳細については、<a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Native_manifests#manifest_location\">マニフェストの場所</a>を参照してください。</p>\n<p><code>ping_pong</code> の例にならって、 Firefox を使用する場合（<a href=\"https://developer.chrome.com/docs/apps/nativeMessaging/#native-messaging-host-location\" class=\"external\" rel=\" noopener\">Chrome の場合はこのページ</a>を参照）、メッセージングが動作するように 2 つのレジストリー項目を作成する必要があります。</p>\n<ul>\n  <li><code>HKEY_CURRENT_USER\\Software\\Mozilla\\NativeMessagingHosts\\ping_pong</code>\n    <ul>\n      <li>このキーの既定値は、<em>アプリケーションマニフェスト</em>へのパスとなります。例: <code>C:\\Users\\&lt;myusername&gt;\\webextensions-examples\\native-messaging\\app\\ping_pong.json</code></li>\n    </ul>\n  </li>\n  <li><code>HKEY_LOCAL_MACHINE\\Software\\Mozilla\\NativeMessagingHosts\\ping_pong</code>\n    <ul>\n      <li>このキーの既定値は、アプリケーションマニフェストへのパスへのパスとなります。</li>\n    </ul>\n  </li>\n</ul>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> GitHub にあるサンプルを元に作業を行う場合は、ブラウザーに WebExtension をインストールする前に、 <a href=\"https://github.com/SphinxKnight/webextensions-examples/tree/master/native-messaging#windows-setup\" class=\"external\" rel=\" noopener\">readme のこの部分</a>を読み、 <code>check_config_win.py</code> の出力をチェックしてください。</p>\n</div>"}},{"type":"prose","value":{"id":"メッセージの交換","title":"メッセージの交換","isH3":false,"content":"<p>上記のセットアップにより、拡張機能はネイティブアプリケーションと JSON メッセージを交換することができます。</p>"}},{"type":"prose","value":{"id":"拡張機能側","title":"拡張機能側","isH3":true,"content":"<p>ネイティブメッセージは、コンテンツスクリプトで直接使うことはできません。<a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#communicating_with_background_scripts\">バックグラウンドスクリプトで間接的にやりとりする</a>必要があります。</p>\n<p>これを使うには 2 つのパターンがあります。<strong>コネクションベースのメッセージング</strong>と<strong>コネクションレスメッセージング</strong>です。</p>\n<h4 id=\"コネクションベースのメッセージング\">コネクションベースのメッセージング</h4>\n<p>このパターンでは、 <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/connectNative\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.connectNative() (en-US)</a> を呼びだし、その時にアプリケーションの名前（アプリマニフェストの \"name\" プロパティの値）を渡します。既にアプリケーションが起動済みでなかった場合、これによってアプリケーションが起動し、<a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/Port\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.Port (en-US)</a> オブジェクトを拡張機能に返します。</p>\n<p>ネイティブアプリは起動時に次の 2 つの引数を取ります。</p>\n<ul>\n  <li>アプリマニフェストの完全パス</li>\n  <li>(Firefox 55 以降で) 起動元のアドオンの ID (manifest.json の <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_specific_settings\">browser_specific_settings</a> キーにて指定)</li>\n</ul>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>Note:</strong> Chrome では引数の扱いが異なります。</p>\n  <ul>\n    <li>Linux と Macでは、Chrome は引数を、拡張機能が開始するオリジンを次の形: <code>chrome-extension://[extensionID]</code>で渡します。これによりアプリは拡張機能を識別できます。</li>\n    <li>Windowsでは、Chrome は 2 つの引数を渡します、 1 つ目は拡張機能のオリジンで、 2 つ目はアプリを開始するChrome ネイティブウィンドウのハンドルです。</li>\n  </ul>\n</div>\n<p>アプリケーションは 拡張機能が <code>Port.disconnect()</code> を呼び出すか、接続されたページが閉じられるまで実行し続けます。</p>\n<p><code>Port</code> を使用してメッセージを送信するためには、<code>postMessage()</code> 関数を呼び出し、 送信する JSON メッセージを渡します。<code>Port</code> を使用してメッセージを受信するためには、<code>onMessage.addListener()</code> 関数を使用してリスナーを追加します。</p>\n<p>\"ping_pong\" アプリケーションとコネクションを確立するバックグラウンドスクリプトの例を示します。アプリケーションからのメッセージを受信し、ユーザーがブラウザーアクションをクリックするたびに \"ping\" メッセージを送信します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\nOn startup, connect to the \"ping_pong\" app.\n*/</span>\n<span class=\"token keyword\">let</span> port <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">connectNative</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ping_pong\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\nListen for messages from the app.\n*/</span>\nport<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Received: \"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\nOn a click on the browser action, send the app a message.\n*/</span>\nbrowser<span class=\"token punctuation\">.</span>browserAction<span class=\"token punctuation\">.</span>onClicked<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sending:  ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"コネクションレスメッセージング\">コネクションレスメッセージング</h4>\n<p>このパターンでは、 <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime/sendNativeMessage\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">runtime.sendNativeMessage() (en-US)</a> を呼び出し、以下のものを渡します。</p>\n<ul>\n  <li>アプリケーションの名前</li>\n  <li>送信する JSON メッセージ</li>\n  <li>コールバック（オプション）</li>\n</ul>\n<p>それぞれのメッセージごとに新しいアプリケーションのインスタンスが作成されます。アプリの開始時に次の 2 つの引数が渡されます。</p>\n<ul>\n  <li>アプリマニフェストの完全パス</li>\n  <li>(Firefox 55 以降で) 起動元のアドオンの ID (manifest.json の <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_specific_settings\">browser_specific_settings</a> キーにて指定)</li>\n</ul>\n<p>アプリからの最初のメッセージは <code>sendNativeMessage()</code> 呼び出しの応答として扱われ、コールバックに渡されます。</p>\n<p>以下に、先ほどの例を <code>runtime.sendNativeMessage()</code> を使って書き直したものを示します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">onResponse</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Received \"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\nOn a click on the browser action, send the app a message.\n*/</span>\nbrowser<span class=\"token punctuation\">.</span>browserAction<span class=\"token punctuation\">.</span>onClicked<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sending:  ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> sending <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">sendNativeMessage</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"ping_pong\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"ping\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sending<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>onResponse<span class=\"token punctuation\">,</span> onError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"アプリ側","title":"アプリ側","isH3":true,"content":"<p>アプリケーション側では、標準入力を用いてメッセージを受信し、標準出力を用いてメッセージを送信します。</p>\n<p>各メッセージは JSON でシリアライズされ、UTF-8 でエンコードされ、メッセージ長を表す 32 ビットの値がネイティブのバイト順で先頭に付加されます。</p>\n<p>アプリケーションからの一つのメッセージの最大サイズは 1MB です。アプリケーションへの一つのメッセージの最大サイズは 4GB です。</p>\n<p>次の NodeJS コードで、すぐにメッセージを送受信することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token hashbang comment\">#!/usr/local/bin/node</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">let</span> payloadSize <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// A queue to store the chunks as we read them from stdin.</span>\n    <span class=\"token comment\">// This queue can be flushed when `payloadSize` data has been read</span>\n    <span class=\"token keyword\">let</span> chunks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Only read the size once for each payload</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sizeHasBeenRead</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>payloadSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// All the data has been read, reset everything for the next message</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">flushChunksQueue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        payloadSize <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        chunks<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">processData</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Create one big buffer with all the chunks</span>\n        <span class=\"token keyword\">const</span> stringData <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>chunks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// The browser will emit the size as a header of the payload,</span>\n        <span class=\"token comment\">// if it hasn't been read yet, do it.</span>\n        <span class=\"token comment\">// The next time we'll need to read the payload size is when all of the data</span>\n        <span class=\"token comment\">// of the current payload has been read (ie. data.length &gt;= payloadSize + 4)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">sizeHasBeenRead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            payloadSize <span class=\"token operator\">=</span> stringData<span class=\"token punctuation\">.</span><span class=\"token function\">readUInt32LE</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// If the data we have read so far is &gt;= to the size advertised in the header,</span>\n        <span class=\"token comment\">// it means we have all of the data sent.</span>\n        <span class=\"token comment\">// We add 4 here because that's the size of the bytes that old the payloadSize</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stringData<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;=</span> <span class=\"token punctuation\">(</span>payloadSize <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Remove the header</span>\n            <span class=\"token keyword\">const</span> contentWithoutSize <span class=\"token operator\">=</span> stringData<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>payloadSize <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Reset the read size and the queued chunks</span>\n            <span class=\"token function\">flushChunksQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>contentWithoutSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Do something with the data…</span>\n         <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    process<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readable'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// A temporary variable holding the nodejs.Buffer of each</span>\n        <span class=\"token comment\">// chunk of data read off stdin</span>\n        <span class=\"token keyword\">let</span> chunk <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Read all of the available data</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>chunk <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            chunks<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token function\">processData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>もうひとつ、 Python による例を示します。このアプリケーションはアドオンからのメッセージを受信します。 Linuxでは、このファイルを実行可能にしてください。メッセージが \"ping\" であった場合、 \"pong\" というメッセージを返します。</p>\n<p>これは Python 2 のバージョンです。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\">#!/usr/bin/python -u</span>\n\n<span class=\"token comment\"># Note that running python with the `-u` flag is required on Windows,</span>\n<span class=\"token comment\"># in order to ensure that stdin and stdout are opened in binary, rather</span>\n<span class=\"token comment\"># than text, mode.</span>\n\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> struct\n\n<span class=\"token comment\"># Read a message from stdin and decode it.</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    raw_length <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> raw_length<span class=\"token punctuation\">:</span>\n        sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    message_length <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">'=I'</span><span class=\"token punctuation\">,</span> raw_length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    message <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span>message_length<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Encode a message for transmission, given its content.</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">encode_message</span><span class=\"token punctuation\">(</span>message_content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    encoded_content <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>message_content<span class=\"token punctuation\">)</span>\n    encoded_length <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'=I'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>encoded_content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">:</span> encoded_length<span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">:</span> encoded_content<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Send an encoded message to stdout.</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">send_message</span><span class=\"token punctuation\">(</span>encoded_message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>encoded_message<span class=\"token punctuation\">[</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>encoded_message<span class=\"token punctuation\">[</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>flush<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    message <span class=\"token operator\">=</span> get_message<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> message <span class=\"token operator\">==</span> <span class=\"token string\">\"ping\"</span><span class=\"token punctuation\">:</span>\n        send_message<span class=\"token punctuation\">(</span>encode_message<span class=\"token punctuation\">(</span><span class=\"token string\">\"pong\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Python 3 では、受信したバイナリーデータを文字列にデコードしないといけません。アドオンに送り返されるコンテンツは構造体を使ってバイナリーデータにエンコードする必要があります。</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\">#!/usr/bin/python -u</span>\n\n<span class=\"token comment\"># Note that running python with the `-u` flag is required on Windows,</span>\n<span class=\"token comment\"># in order to ensure that stdin and stdout are opened in binary, rather</span>\n<span class=\"token comment\"># than text, mode.</span>\n\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> struct\n\n<span class=\"token comment\"># Read a message from stdin and decode it.</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    raw_length <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> raw_length<span class=\"token punctuation\">:</span>\n        sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    message_length <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">'=I'</span><span class=\"token punctuation\">,</span> raw_length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    message <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span>message_length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Encode a message for transmission, given its content.</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">encode_message</span><span class=\"token punctuation\">(</span>message_content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    encoded_content <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>message_content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n    encoded_length <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'=I'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>encoded_content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#  use struct.pack(\"10s\", bytes), to pack a string of the length of 10 characters</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">:</span> encoded_length<span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">:</span> struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>encoded_content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"s\"</span><span class=\"token punctuation\">,</span>encoded_content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Send an encoded message to stdout.</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">send_message</span><span class=\"token punctuation\">(</span>encoded_message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>encoded_message<span class=\"token punctuation\">[</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>encoded_message<span class=\"token punctuation\">[</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span><span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>flush<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    message <span class=\"token operator\">=</span> get_message<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> message <span class=\"token operator\">==</span> <span class=\"token string\">\"ping\"</span><span class=\"token punctuation\">:</span>\n        send_message<span class=\"token punctuation\">(</span>encode_message<span class=\"token punctuation\">(</span><span class=\"token string\">\"pong\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ネイティブアプリを閉じる","title":"ネイティブアプリを閉じる","isH3":false,"content":"<p><code>runtime.connectNative()</code> を使用してネイティブアプリケーションに接続した場合、アプリケーションは拡張機能が <code>Port.disconnect()</code> を呼び出すか接続したページが閉じられるまで実行されます。<code>runtime.sendNativeMessage()</code> を使用してネイティブアプリケーションの実行を開始した場合、アプリケーションはメッセージを受信してレスポンスを送信した後閉じられます。</p>\n<p>ネイティブアプリケーションを閉じるためには、次のようにします。</p>\n<ul>\n  <li>OS X や Linux のような *nix システムでは、ブラウザーはネイティブアプリケーションが正しく終了する機会を与えるために SIGTERM を送信し、その後 SIGKILL を送信します。これらのシグナルは新しいプロセスグループを作成して分けない限りすべてのサブプロセスに伝播します。</li>\n  <li>Windows では、ブラウザーはネイティブアプリケーションのプロセスを <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms684161(v=vs.85).aspx\" class=\"external\" rel=\" noopener\">Job オブジェクト</a>とし、ジョブを kill します。 ネイティブアプリケーションが追加でプロセスを立ち上げ、アプリケーション自体が kill された後もそのままにしたい場合、ネイティブアプリケーションは追加のプロセスを <a href=\"https://msdn.microsoft.com/library/windows/desktop/ms684863(v=vs.85).aspx\" class=\"external\" rel=\" noopener\"><code>CREATE_BREAKAWAY_FROM_JOB</code></a> フラグを立てて立ち上げる必要があります。</li>\n</ul>"}},{"type":"prose","value":{"id":"トラブルシューティング","title":"トラブルシューティング","isH3":false,"content":"<p>もしうまくいかない場合、<a href=\"https://extensionworkshop.com/documentation/develop/debugging/#viewing_log_output\" class=\"external\" rel=\" noopener\">ブラウザーコンソール</a>をチェックしてください。ネイティブアプリケーションが何かしらの出力を stderr に送っていた場合、ブラウザーはそれをブラウザーのコンソールにリダイレクトします。そのため、ネイティブアプリケーションが起動できている限り、出力されたエラーメッセージを確認することができます。</p>\n<p>アプリケーションが起動できていなかった場合、問題の手がかりとなるエラーメッセージを確認してください。</p>\n<pre class=\"notranslate\">\"No such native application &lt;name&gt;\"\n</pre>\n<ul>\n  <li><code>runtime.connectNative()</code> に渡した名前がアプリマニフェスト中の名前と一致しているか確認してください。</li>\n  <li>OS X/Linux: アプリマニフェストのファイル名が <code>&lt;name&gt;.json</code> となっていることを確認してください。</li>\n  <li>OS X/Linux: ネイティブアプリのマニフェストの場所が<a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Native_manifests#mac_os_x\">ここ</a>で述べているところにあるのを確認してください。</li>\n  <li>Windows: レジストリキーが正しい場所にあり、その名前がアプリマニフェスト中の名前と一致していることを確認してください。</li>\n  <li>Windows: レジストリキーに指定されたパスがアプリマニフェストを指していることを確認してください。\n    <pre class=\"notranslate\">\"Error: Invalid application &lt;name&gt;\"\n</pre>\n  </li>\n  <li>アプリケーションの名前に不正な文字が含まれていないことを確認してください。\n    <pre class=\"notranslate\">\"'python' is not recognized as an internal or external command, ...\"\n</pre>\n  </li>\n  <li>Windows: アプリケーションが Python スクリプトの場合、Python がインストールされており、パスが正しく設定されていることを確認してください。\n    <pre class=\"notranslate\">\"File at path &lt;path&gt; does not exist, or is not executable\"\n</pre>\n  </li>\n  <li>このメッセージが表示されたとき、アプリマニフェストの発見には成功しています。</li>\n  <li>アプリマニフェストの \"path\" が正しいかどうかを確認してください。</li>\n  <li>Windows: パスセパレータがエスケープされていることを確認してください (<code>\"c:\\\\path\\\\to\\\\file\"</code>)。</li>\n  <li>アプリがアプリマニフェストの \"path\" プロパティで示された場所に配置されていることを確認してください。</li>\n  <li>アプリが実行可能であることを確認してください。\n    <pre class=\"notranslate\">\"This extension does not have permission to use native application &lt;name&gt;\"\n</pre>\n  </li>\n  <li>アプリマニフェストの \"allowed_extensions\" がアドオンの ID を含んでいることを確認してください。\n    <pre class=\"notranslate\">    \"TypeError: browser.runtime.connectNative is not a function\"\n</pre>\n  </li>\n  <li>アドオンが \"nativeMessaging\" permission を持っているか確認してください。\n    <pre class=\"notranslate\">\"[object Object]       NativeMessaging.jsm:218\"\n</pre>\n  </li>\n  <li>アプリケーションの開始に問題が発生しました。</li>\n</ul>"}},{"type":"prose","value":{"id":"chrome_での非互換性","title":"Chrome での非互換性","isH3":false,"content":"<p>\n  ウェブ拡張機能のネイティブメッセージングに影響を与えるブラウザー間の違いは、ネイティブアプリに渡される引数、マニフェストファイルの場所など、多数あります。\n  これらの違いについては、 <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/Chrome_incompatibilities#native_messaging\">Chrome の非互換性 &gt; ネイティブメッセージング</a>で説明されています。\n</p>"}}],"toc":[{"text":"セットアップ","id":"セットアップ"},{"text":"メッセージの交換","id":"メッセージの交換"},{"text":"ネイティブアプリを閉じる","id":"ネイティブアプリを閉じる"},{"text":"トラブルシューティング","id":"トラブルシューティング"},{"text":"Chrome での非互換性","id":"chrome_での非互換性"}],"summary":"ネイティブメッセージングはユーザーのコンピューターにインストールされたアプリケーションと拡張機能との間のメッセージ交換を可能にします。ネイティブメッセージングにより、拡張機能が追加のウェブを介したアクセスなしにサービスを提供できます。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Native messaging","locale":"en-US","native":"English (US)"},{"title":"Native messaging","locale":"fr","native":"Français"},{"title":"与本地应用通信","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/mozilla/add-ons/webextensions/native_messaging","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/mozilla/add-ons/webextensions/native_messaging/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Mozilla","title":"Mozilla"},{"uri":"/ja/docs/Mozilla/Add-ons","title":"アドオン"},{"uri":"/ja/docs/Mozilla/Add-ons/WebExtensions","title":"ブラウザー拡張機能"},{"uri":"/ja/docs/Mozilla/Add-ons/WebExtensions/Native_messaging","title":"ネイティブメッセージング"}],"pageTitle":"ネイティブメッセージング - Mozilla | MDN","noIndexing":false}}