{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"テキストを扱う — JavaScript での文字列","mdn_url":"/ja/docs/Learn/JavaScript/First_steps/Strings","locale":"ja","native":"日本語","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/ja/docs/Learn/Getting_started_with_the_web\"><strong>完全な初心者はこちらから!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>ウェブ入門</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web\">ウェブ入門</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">基本的なソフトウェアのインストール</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">ウェブサイトをどんな外見にするか</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">ファイルの扱い</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML の基本</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS の基本</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript の基本</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">ウェブサイトの公開</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">ウェブのしくみ</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ja/docs/Learn/HTML\"><strong>HTML — Structuring the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML概論</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML\">HTML概論</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Getting started with HTML</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">head って何？HTML のメタデータ</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML テキストの基礎</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">ハイパーリンクを作ってみる</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Advanced text formatting</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Document and website structure</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Debugging HTML</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Assessment: Marking up a letter</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Assessment: Structuring a page of content</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Multimedia and embedding</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding\">Multimedia and embedding overview</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Images in HTML</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Video and audio content</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">From object to iframe — other embedding technologies</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adding vector graphics to the Web</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Responsive images</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Assessment: Mozilla splash page</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML tables</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/HTML/Tables\">HTML tables overview</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ja/docs/Learn/CSS\"><strong>CSS — Styling the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS first steps</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Styling text</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text\">Styling text overview</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamental text and font styling</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text/Styling_lists\">Styling lists</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text/Styling_links\">Styling links</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text/Web_fonts\">Web fonts</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Assessment: Typesetting a community school homepage</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS layout</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout\">CSS layout overview</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Floats\">Floats</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Positioning\">Positioning</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/ja/docs/Learn/JavaScript\"><strong>JavaScript — 動的クライアントサイドスクリプト</strong></a></li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>JavaScript の第一歩</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps\">JavaScript の第一歩</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">JavaScriptって何？</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/A_first_splash\">JavaScriptへの最初のダイブ</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/What_went_wrong\">何が間違っている? JavaScript のトラブルシューティング</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Variables\">必要な情報を保存する — 変数</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Math\">JavaScriptでの数学入門 — 数値と演算子について</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Strings\">テキストを扱う — JavaScript での文字列</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Useful_string_methods\">便利な文字列メソッド</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Arrays\">配列</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Silly_story_generator\">バカ話ジェネレーター</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript building blocks</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks overview</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/conditionals\">Making decisions in your code — Conditionals</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Looping_code\">Looping code</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Functions\">Functions — Reusable blocks of code</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Build your own function</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Return_values\">Function return values</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Assessment: Image gallery</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introducing JavaScript objects</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects overview</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Basics\">Object basics</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Object_prototypes\">Object prototypes</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/JSON\">Working with JSON data</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Object_building_practice\">Object building practice</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Assessment: Adding features to our bouncing balls demo</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web APIs</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ja/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ja/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility guides</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Accessibility\">Accessibility overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility assessment</summary>\n        <ol>\n            <li><a href=\"/ja/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ja/docs/Learn/Tools_and_testing\"><strong>Tools and testing</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Cross browser testing</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing\">Cross browser testing overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introduction to cross browser testing</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Strategies for carrying out testing</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Handling common HTML and CSS problems</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Handling common JavaScript problems</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Handling common accessibility problems</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementing feature detection</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introduction to automated testing</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Setting up your own test automation environment</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ja/docs/Learn/Server-side\"><strong>Server-side website programming</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>First steps</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Server-side/First_steps\">First steps overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/First_steps/Introduction\">Introduction to the server-side</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/First_steps/Client-Server_overview\">Client-Server overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/First_steps/Web_frameworks\">Server-side web frameworks</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/First_steps/Website_security\">Website security</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django web framework (Python)</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django\">Django web framework (Python) overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Introduction\">Introduction</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/development_environment\">Setting up a development environment</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial: The Local Library website</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Models\">Tutorial Part 3: Using models</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Admin_site\">Tutorial Part 4: Django admin site</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Home_page\">Tutorial Part 5: Creating our home page</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Generic_views\">Tutorial Part 6: Generic list and detail views</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Sessions\">Tutorial Part 7: Sessions framework</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Authentication\">Tutorial Part 8: User authentication and permissions</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Forms\">Tutorial Part 9: Working with forms</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Testing\">Tutorial Part 10: Testing a Django web application</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Deployment\">Tutorial Part 11: Deploying Django to production</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/web_application_security\">Web application security</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/django_assessment_blog\">Assessment: DIY mini blog</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript) overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node (Express) development environment</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express tutorial: The Local Library website</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Further resources</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Common questions</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/HTML/Howto\">HTML questions</a></li>\n          <li><a href=\"/ja/docs/Learn/CSS/Howto\">CSS questions</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/ja/docs/Learn/Common_questions#Web_mechanics\">Web mechanics</a></li>\n          <li><a href=\"/ja/docs/Learn/Common_questions#Tools_and_setup\">Tools and setup</a></li>\n          <li><a href=\"/ja/docs/Learn/Common_questions#Design_and_accessibility\">Design and accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/JavaScript/First_steps/Math\"> 前のページ </a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/JavaScript/First_steps\"> Overview: First steps</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/JavaScript/First_steps/Useful_string_methods\"> 次のページ  </a></li>\n</ul>\n<p>プログラミングでは文字の羅列を文字列と呼びますが、次はこれを学習しましょう。この記事では、JavaScript でよく使われる、文字列を作ったり、引用符をエスケープしたり、文字列を結合したりといった、文字列について本当に知っておくべきことだけを見てみましょう。</p>\n<table>\n  <thead>\n    <tr>\n      <th>前提条件:</th>\n      <th>基本的なコンピュータの知識および HTML と CSS への理解、JavaScript とは何かを知っている。</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>目的:</td>\n      <td>JavaScript の文字列操作に慣れる。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"言葉の力","title":"言葉の力","isH3":false,"content":"<p>言葉はコミュニケーションの大部分を担う、人類にとって、とても大切なものです。Web は情報の共有やコミュニケーションができるように設計された大規模な文字ベースの媒体ですので、そこで使用される言葉を操作できると便利です。<a href=\"/ja/docs/Glossary/HTML\">HTML</a> は意味付けされ、構造化されたテキストを提供し、<a href=\"/ja/docs/Glossary/CSS\">CSS</a> がきれいに体裁を整える事を可能にし、そして JavaScript には、挨拶用の文章を生成したり、適切なラベルを表示したり、言葉を並べ替えたりといった、文字列を操作するたくさんの機能が含まれています。</p>\n<p>今までこのコースでお見せしたプログラムのほとんどが、何らかの文字列操作を含んでいましたね。</p>"}},{"type":"prose","value":{"id":"文字列_—_基本","title":"文字列 — 基本","isH3":false,"content":"<p>文字列は一見すると数値と同じように見えますが、少し深く見ていくと、違いに気づくことでしょう。まずは慣らすために基本的なコードを<a href=\"/ja/docs/Learn/Common_questions/What_are_browser_developer_tools\">ブラウザーの開発者ツール</a>に入力してみましょう。</p>"}},{"type":"prose","value":{"id":"文字列を作る","title":"文字列を作る","isH3":true,"content":"<ol>\n  <li>初めに、次の行を入力してみましょう。\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> string <span class=\"token operator\">=</span> <span class=\"token string\">'革命はテレビでは放送されない。'</span><span class=\"token punctuation\">;</span>\nstring<span class=\"token punctuation\">;</span>\n</code></pre></div>数値のところでやったのと同じように、変数を宣言して、値を入れて初期化しています。そして値を返しています。ただ違うのは、文字列が引用符で囲まれて書かれていることです。\n  </li>\n  <li>もし引用符で囲わななかったり、どちらか一方を書き忘れたりすると、エラーになります。\n    <div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">let</span> badString <span class=\"token operator\">=</span> これはテストです<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> badString <span class=\"token operator\">=</span> 'これはテストです<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> badString <span class=\"token operator\">=</span> これはテストです'<span class=\"token punctuation\">;</span>\n</code></pre></div>これらの行は動きません。なぜなら引用符で文字を囲わなければ、変数名や、プロパティ名や、予約語などと解釈されてしまうためです。もしブラウザーが引用符を見つけられないと、エラーとなります (たとえば \"missing ; before statement\" [文の前に、セミコロンが見つかりません] のようなエラーです)。2 行目の例のように、ブラウザーが引用符を見つけても、文字列の終わりが示されていなければ、これもエラーとなります (\"unterminated string literal\" [文字列リテラルの終わりがありません] というエラーです)。このようなエラーがプログラムで起きたら、全ての文字列について、引用符の付け忘れがないかを確認してください。\n  </li>\n  <li>続くコードは先ほど変数を <code>string</code> という名前で宣言していれば、動くでしょう。試してみましょう。\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> badString <span class=\"token operator\">=</span> string<span class=\"token punctuation\">;</span>\nbadString<span class=\"token punctuation\">;</span>\n</code></pre></div><code>badString</code> という変数に <code>string</code> という変数の値が設定されたことでしょう。\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"シングルクォーテーション_vs._ダブルクォーテーション","title":"シングルクォーテーション vs. ダブルクォーテーション","isH3":true,"content":"<ol>\n  <li>JavaScript では、文字列を囲む引用符として、シングルクォーテーションとダブルクォーテーションを使用することができます。以下のどちらの例も正しく動きます。\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> sgl <span class=\"token operator\">=</span> <span class=\"token string\">'シングルクォーテーション'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> dbl <span class=\"token operator\">=</span> <span class=\"token string\">\"ダブルクォーテーション\"</span><span class=\"token punctuation\">;</span>\nsgl<span class=\"token punctuation\">;</span>\ndbl<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>どちらを使ってもほとんど違いはありません。どちらを使うかは好みの問題ですが、どちらを使うかは統一するべきでしょう。両方を同時に使うと混乱してしまいます、特に同じ文字列に二種類の引用符を使ってしまうときなど！次の行はエラーです。\n    <div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">let</span> badQuotes <span class=\"token operator\">=</span> 'なんということだ！\"<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>ブラウザーは上の文字列が閉じていないと認識します。なぜなら、文字列を囲うのに使用していない引用符はその文字列の中に含めることができるからです。たとえば次の例は問題ありません。\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> sglDbl <span class=\"token operator\">=</span> <span class=\"token string\">'Would you eat a \"fish supper\"?'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> dblSgl <span class=\"token operator\">=</span> <span class=\"token string\">\"I'm feeling blue.\"</span><span class=\"token punctuation\">;</span>\nsglDbl<span class=\"token punctuation\">;</span>\ndblSgl<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>ただし、文字列の中に、囲んでいるのと同じ種類の引用符を含めることはできません。以下の例は文字列の終わりがわからないので、ブラウザーを混乱させてしまいます。\n    <div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">let</span> bigmouth <span class=\"token operator\">=</span> <span class=\"token string\">'I'</span>ve got no right to take my place<span class=\"token operator\">...</span>'<span class=\"token punctuation\">;</span>\n</code></pre></div>それでは同じ種類の引用符を含めるにはどのようにすればよいでしょうか。\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"文字列をエスケープする","title":"文字列をエスケープする","isH3":true,"content":"<p>先ほどのコード行を直すには、問題となっている引用符をエスケープする必要があります。文字のエスケープとは、その文字が、コードではなく、文字列の一部であるとブラウザーに認識させる書き方です。JavaScript ではバックスラッシュ ( \\ [環境によっては円マーク (￥)]) を文字の前におくことでエスケープすることができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> bigmouth <span class=\"token operator\">=</span> <span class=\"token string\">'I\\'ve got no right to take my place...'</span><span class=\"token punctuation\">;</span>\nbigmouth<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これでうまく動きます。 同じ方法で他の文字をエスケープする (例えば <code>\\\"</code>) ことができ、それ以外にも特別なコードがあります。詳細は<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String#escape_notation\">エスケープ記法</a>を見てください。</p>"}},{"type":"prose","value":{"id":"文字列を連結する","title":"文字列を連結する","isH3":false,"content":"<ol>\n  <li>コンカチする (concatenate) という単語は「結合する」ことを表すプログラミングの用語です。JavaScript で文字列を結合するにはプラス (+) 演算子を使用します。数値の加算をするのに使用した演算子ですが、今回は違う動作をします。下の例をコンソールに入力してみてください。\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> one <span class=\"token operator\">=</span> <span class=\"token string\">'こんにちは、'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> two <span class=\"token operator\">=</span> <span class=\"token string\">'ご機嫌いかがでしょう？'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> joined <span class=\"token operator\">=</span> one <span class=\"token operator\">+</span> two<span class=\"token punctuation\">;</span>\njoined<span class=\"token punctuation\">;</span>\n</code></pre></div>この例の実行結果は <code>joined</code> という変数に格納され、値は \"こんにちは、ご機嫌いかがでしょう？\" となります。\n  </li>\n  <li>今の例は 2 つの文字列だけを結合しましたが、<code>+</code> 演算子が変数と変数の間にあれば、いくつでも結合することができます。例えば、次の例を試しましょう。\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> multiple <span class=\"token operator\">=</span> one <span class=\"token operator\">+</span> one <span class=\"token operator\">+</span> one <span class=\"token operator\">+</span> one <span class=\"token operator\">+</span> two<span class=\"token punctuation\">;</span>\nmultiple<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>変数のほかに、実際の文字列と混ぜて使うこともできます。\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> response <span class=\"token operator\">=</span> one <span class=\"token operator\">+</span> <span class=\"token string\">'私は元気です。'</span> <span class=\"token operator\">+</span> two<span class=\"token punctuation\">;</span>\nresponse<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n</ol>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> コード中に、シングルクォーテーションおよびダブルクォーテーションで囲われた、実際の文字列を書いたときそれは<strong>文字列リテラル</strong>と呼ばれます。</p>\n</div>"}},{"type":"prose","value":{"id":"様々な結合","title":"様々な結合","isH3":true,"content":"<p>実際に文字列が結合されている場面を見てみましょう。これはこのコースの最初の方からの例です。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">&gt;</span></span>押してみて！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbutton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'あなたの名前は？'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'こんにちは、'</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'さん。初めまして！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><iframe class=\"hide-codepen-jsfiddle\" title=\"様々な結合\" id=\"frame_concatenation_in_context\" width=\"100%\" height=\"60\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Learn/JavaScript/First_steps/Strings/_sample_.concatenation_in_context.html\" loading=\"lazy\"></iframe>\n<p>4 行目でユーザに答えてもらうため、<a href=\"/ja/docs/Web/API/Window/prompt\" title=\"Window.prompt()\"><code>Window.prompt()</code></a>関数を使用して、テキストを入力できるポップアップダイアログを表示し、ユーザによって入力された文字列を <code>name</code> 変数に格納しています。そして、5 行目で<a href=\"/ja/docs/Web/API/Window/alert\" title=\"Window.alert()\"><code>Window.alert()</code></a>関数を使用し、2 つの文字列リテラルと <code>name</code> 変数を結合して別のポップアップに文字列を作り上げています。</p>"}},{"type":"prose","value":{"id":"数値_vs._文字列","title":"数値 vs. 文字列","isH3":true,"content":"<ol>\n  <li>それでは文字列と数値を足したら (もしくは結合したら) 何が起きるでしょうか。コンソールに入力してみましょう。\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'フロント'</span> <span class=\"token operator\">+</span> <span class=\"token number\">242</span><span class=\"token punctuation\">;</span>\n</code></pre></div>エラーが起きると予想したかもしれませんが、普通に動きます。文字列を数値として表すのには意味がありませんが、数値を文字で表すのはわかりますね。つまりブラウザーはどうやら、数値を文字列に変換し、2 つの文字列としてから結合しているようです。\n  </li>\n  <li>数字同士でやっても同じです。数字を引用符で囲むと文字列になります。次の行を実行してみてください。(<code>typeof</code>演算子で変数が文字列なのか数値なのか調べています。)\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myDate <span class=\"token operator\">=</span> <span class=\"token string\">'19'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'67'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> myDate<span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n  <li>もし、数値を文字列に変換したかったり、文字列を数値に変換したかったりする場合には、次の 2 つの生成方法を見てください。\n    <ul>\n      <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>オブジェクトは渡されたものすべてを数値に変換します。次の例を実行してみましょう。\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myString <span class=\"token operator\">=</span> <span class=\"token string\">'123'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> myNum <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>myString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> myNum<span class=\"token punctuation\">;</span>\n</code></pre></div>\n      </li>\n      <li>反対に全ての数値は <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>toString()</code></a> という文字列に変換するメソッドを持っています。\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> myString <span class=\"token operator\">=</span> myNum<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typeof</span> myString<span class=\"token punctuation\">;</span>\n</code></pre></div>\n      </li>\n    </ul>この生成方法は状況によってはとても便利です。例えば、ユーザがフォームのテキストフィールドに数字を入力した場合、入力された値は文字列です。しかし、その数字を使って計算したい場合、数値にしなければなりません。そんな時は <code>Number()</code> に任せましょう。これは実際に<a href=\"https://github.com/mdn/learning-area/blob/master/javascript/introduction-to-js-1/first-splash/number-guessing-game.html#L54\" class=\"external\" rel=\" noopener\">数字当てゲームの 54 行目</a>で使用した方法です。\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"テンプレートリテラル","title":"テンプレートリテラル","isH3":false,"content":"<p>遭遇する可能性のある別のタイプの文字列構文は、<strong>テンプレートリテラル</strong>（テンプレート文字列と呼ばれることもあります）です。 これは、より柔軟で読みやすい文字列を提供する新しい構文です。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 以下の例をブラウザーの JavaScript コンソールに入力して、どのような結果が得られるかを確認してください。</p>\n</div>\n<p>標準の文字列リテラルをテンプレートリテラルに変換するには、引用符 (<code>' '</code> または <code>\" \"</code>) をバッククォート文字 (<code>` `</code>) に置き換える必要があります。</p>\n<p>簡単な例。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> song <span class=\"token operator\">=</span> <span class=\"token string\">'Fight the Youth'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>テンプレートリテラルに変換します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>song <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Fight the Youth</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>文字列を連結したり、文字列内に式の結果を含めたりする場合、従来の文字列で書くのは面倒です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> score <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> highestScore <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> output <span class=\"token operator\">=</span> <span class=\"token string\">'I like the song \"'</span> <span class=\"token operator\">+</span> song <span class=\"token operator\">+</span> <span class=\"token string\">'\". I gave it a score of '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>score<span class=\"token operator\">/</span>highestScore <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'%.'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>テンプレートリテラルはこれを非常に簡単に行えます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>output <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">I like the song \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> song <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\". I gave it a score of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> score<span class=\"token operator\">/</span>highestScore <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">%.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>複数の文のピースを繋げる必要はありません。文章全体を 1 組のバッククォートで囲むだけです。文字列内に変数または式を含める場合は、プレースホルダーと呼ばれる <code>${ }</code> 構造内に含めます。</p>\n<p>テンプレートリテラル内に複雑な式を含めることもできます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> examScore <span class=\"token operator\">=</span> <span class=\"token number\">45</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> examHighestScore <span class=\"token operator\">=</span> <span class=\"token number\">70</span><span class=\"token punctuation\">;</span>\nexamReport <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You scored </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> examScore <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> examHighestScore <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>examScore<span class=\"token operator\">/</span>examHighestScore<span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">%). </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> examScore <span class=\"token operator\">&gt;=</span> <span class=\"token number\">49</span> <span class=\"token operator\">?</span> <span class=\"token string\">'Well done, you passed!'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Bad luck, you didn\\'t pass this time.'</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<ul>\n  <li>最初の 2 つのプレースホルダーは非常に単純で、変数を参照する単純な文字列のみが含まれています。</li>\n  <li>3 つ目は、パーセンテージの結果を計算し、それを最も近い整数に丸めます。</li>\n  <li>4 つ目は、三項演算子を使用してスコアが特定の値を超えているかどうかを確認し、結果に応じて合格または不合格のメッセージを出力します。</li>\n</ul>\n<p>従来の文字列リテラルで複数の行に分割する場合は、改行文字 <code>\\n</code> を含める必要がありました。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>output <span class=\"token operator\">=</span> <span class=\"token string\">'I like the song \"'</span> <span class=\"token operator\">+</span> song <span class=\"token operator\">+</span> <span class=\"token string\">'\".\\nI gave it a score of '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>score<span class=\"token operator\">/</span>highestScore <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'%.'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>テンプレートリテラルはソースコードの改行をそのまま再現するため、改行文字は不要になります。 以下は同じ結果を得ます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>output <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">I like the song \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> song <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\".\nI gave it a score of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> score<span class=\"token operator\">/</span>highestScore <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">%.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>できるだけ早くテンプレートリテラルの使用に慣れることをお勧めします。 これらは最新のブラウザーで十分にサポートされており、サポートが不足しているのは Internet Explorer だけです。私たちの例の多くはまだ標準の文字列リテラルを使用していますが、今後さらに多くのテンプレートリテラルを含める予定です。</p>\n<p>高度な機能の例と詳細については、<a href=\"/ja/docs/Web/JavaScript/Reference/Template_literals\">テンプレートリテラル</a>のリファレンスページを参照してください。</p>"}},{"type":"prose","value":{"id":"あなたのスキルをテストしてください！","title":"あなたのスキルをテストしてください！","isH3":false,"content":"<p>この記事の最後に到達しましたが、最も重要な情報を覚えていますか？ 先に進む前に、この情報を記憶していることを確認するためのいくつかの<a href=\"/en-US/docs/Learn/JavaScript/First_steps/Test_your_skills:_Strings\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">テスト (en-US)</a>を見つけることができます。これには次の記事の知識も必要なので、最初にそれを読むことをお勧めします。</p>"}},{"type":"prose","value":{"id":"結論","title":"結論","isH3":false,"content":"<p>ここまでが JavaScript での文字列の基礎になります。次の記事では、JavaScript で使える文字列操作の組み込み関数と、それを使って思い通りの形に文字列を変換する方法を、その基礎の上に建てていきましょう。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/JavaScript/First_steps/Math\"> 前のページ </a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/JavaScript/First_steps\"> Overview: First steps</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/JavaScript/First_steps/Useful_string_methods\"> 次のページ  </a></li>\n</ul>"}},{"type":"prose","value":{"id":"このモジュール内","title":"このモジュール内","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">JavaScript って何?</a></li>\n  <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/A_first_splash\">JavaScript への最初のダイブ</a></li>\n  <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/What_went_wrong\">何が間違っている? JavaScript のトラブルシューティング</a></li>\n  <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Variables\">必要な情報を保存する — 変数</a></li>\n  <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Math\">JavaScript での数学入門 — 数値と演算子について</a></li>\n  <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Strings\" aria-current=\"page\">テキストを扱う — JavaScript での文字列</a></li>\n  <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Useful_string_methods\">便利な文字列メソッド</a></li>\n  <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Arrays\">配列</a></li>\n  <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Silly_story_generator\">評価: バカ話ジェネレーター</a></li>\n</ul>"}}],"toc":[{"text":"言葉の力","id":"言葉の力"},{"text":"文字列 — 基本","id":"文字列_—_基本"},{"text":"文字列を連結する","id":"文字列を連結する"},{"text":"テンプレートリテラル","id":"テンプレートリテラル"},{"text":"あなたのスキルをテストしてください！","id":"あなたのスキルをテストしてください！"},{"text":"結論","id":"結論"},{"text":"このモジュール内","id":"このモジュール内"}],"summary":"プログラミングでは文字の羅列を文字列と呼びますが、次はこれを学習しましょう。この記事では、JavaScript でよく使われる、文字列を作ったり、引用符をエスケープしたり、文字列を結合したりといった、文字列について本当に知っておくべきことだけを見てみましょう。","popularity":0.0023,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Handling text — strings in JavaScript","locale":"en-US","native":"English (US)"},{"title":"Manejar texto — cadenas en JavaScript","locale":"es","native":"Español"},{"title":"Gérer du texte — les chaînes de caractères en JavaScript","locale":"fr","native":"Français"},{"title":"문자열 다루기 — 문자열","locale":"ko","native":"한국어"},{"title":"Trabalhando com texto — strings em JavaScript","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Работа с текстом — строки в JavaScript","locale":"ru","native":"Русский"},{"title":"文本处理 — JavaScript 中的字符串","locale":"zh-CN","native":"中文 (简体)"},{"title":"處理文字 - JavaScript中的字串","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/learn/javascript/first_steps/strings","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/learn/javascript/first_steps/strings/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Learn","title":"ウェブ開発を学ぶ"},{"uri":"/ja/docs/Learn/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Learn/JavaScript/First_steps","title":"JavaScript の第一歩"},{"uri":"/ja/docs/Learn/JavaScript/First_steps/Strings","title":"テキストを扱う — JavaScript での文字列"}],"pageTitle":"テキストを扱う — JavaScript での文字列 - ウェブ開発を学ぶ | MDN","noIndexing":false}}