{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CSS の一般的な質問","mdn_url":"/ja/docs/Learn/CSS/Howto/CSS_FAQ","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>この記事には、 CSS に関するいくつかのよくある質問（FAQ）とその解答が見つかり、ウェブ開発者になるための道で役に立つでしょう。</p>"}},{"type":"prose","value":{"id":"なぜ_css_が妥当なのに正しくレンダリングされないのか？","title":"なぜ CSS が妥当なのに正しくレンダリングされないのか？","isH3":false,"content":"<p>ブラウザーは <code>DOCTYPE</code> 宣言を使用して、文書の表示ににウェブ標準とより互換性があるモードを使用するか、あるいは古いブラウザーのバグに互換性があるモードを使用するかを選択します。正しく新しい <code>DOCTYPE</code> 宣言を HTML の先頭で使用すると、ブラウザーの標準への準拠度が向上します。</p>\n<p>現代のブラウザーは、2 つの主要なレンダリングモードを備えています。</p>\n<ul>\n  <li><em>Quirks Mode</em>: 後方互換モードとも呼ばれます。古いウェブページが制作者の意図したとおりにレンダリングされるようにして、古いブラウザーが用いていた非標準のレンダリング規則に従います。 <code>DOCTYPE</code> 宣言が不完全、不正確、あるいは存在しない、または 2001 年より前に一般的であった既知の <code>DOCTYPE</code> 宣言であるドキュメントは、 Quirks Mode でレンダリングされます。</li>\n  <li><em>Standards Mode</em>: ブラウザーは W3C 標準へ厳密に従おうとします。新しい HTML ページは標準に準拠したブラウザー向けに設計されていると考えられるため、新しい <code>DOCTYPE</code> 宣言を持つページは Standards Mode でレンダリングされます。</li>\n</ul>\n<p>Gecko ベースのブラウザーには、いくつかの小さな調整のみを行う第 3 のモードであります*<a href=\"/ja/docs/Gecko's*%22Almost*Standards%22_Mode\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">Almost Standards Mode</a>* があります。</p>\n<p>以下は Standards Mode または Almost Standards Mode になる <code>DOCTYPE</code> 宣言で、もっとも一般的に使用されるものの一覧です:</p>\n<pre class=\"notranslate\">&lt;!DOCTYPE html&gt; /* これは HTML5 の doctype です。HTML5 パーサーを使用する新しいブラウザーでは、\n                   この doctype が推奨されます */\n\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\"&gt;\n\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n</pre>\n<p>可能な限り、 HTML5 の doctype を使用するべきです。</p>"}},{"type":"prose","value":{"id":"なぜ_css_が妥当なのにまったくレンダリングされないのか","title":"なぜ CSS が妥当なのにまったくレンダリングされないのか?","isH3":false,"content":"<p>以下のような可能性があります。</p>\n<ul>\n  <li>CSS ファイルへのパスが間違っている。</li>\n  <li>適用されるためには、 CSS スタイルシートを MIME タイプ <code>text/css</code> で提供しなければなりません。ウェブサーバがこのタイプで提供していない場合、スタイルシートは適用されません。</li>\n</ul>"}},{"type":"prose","value":{"id":"id_と_class_の違いは何か","title":"<code>id</code> と <code>class</code> の違いは何か?","isH3":false,"content":"<p>HTML の要素は、 <code>id</code> 属性と <code>class</code> 属性の片方または両方を持つことができます。 <code>id</code> 属性は要素に適用する名前を割り当てます。妥当なマークアップでは、ある名前を持つ要素はひとつだけです。 <code>class</code> 属性は要素にクラス名を割り当てます。一つのクラス名を、ページ内の多数の要素で使用できます。 CSS は特定の <code>id</code> または <code>class</code> 名に対してスタイルを設定できます。</p>\n<ul>\n  <li>ページ内のたくさんのブロックや要素にスタイルのルールを適用したい場合や、スタイルを適用したい要素が 1 つしかないものの、後で追加したい場合は、 class 指定によるスタイルを使用してください。</li>\n  <li>適用されるスタイルのルールを 1 つの特定のブロックや要素に限定する必要がある場合は、 id 指定によるスタイルを使用してください。このスタイルは特定の id を持った特定の要素にのみ使用されます。</li>\n</ul>\n<p>一般的にはできるだけ class を使用し、 id は特定の用途で絶対的に必要な場合（ラベルとフォーム要素を接続したり、スタイルをつける要素が意味的に独自の場合など）に限り使用することが推奨されます。</p>\n<ul>\n  <li>class を使用するとスタイルの用途が広げられるようになり、現在は特定のルールセットのスタイルを 1 つの要素にしか適用しなくても、後から追加したくなる可能性があります</li>\n  <li>class を使用すると、複数の要素のスタイルを設定できるため、id セレクタを使用する複数のルールで同じスタイル設定情報を書き出す必要がなくなり、より短いスタイルシートを作成できます。より短いスタイルシートはより高性能です</li>\n  <li>class セレクタは id セレクタよりも特異性が低いため、必要に応じてオーバーライドする方が簡単です</li>\n</ul>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 詳しくは <a href=\"/ja/docs/Learn/CSS/Building_blocks/Selectors\">Selectors</a> もご覧ください。</p>\n</div>","titleAsText":"id と class の違いは何か?"}},{"type":"prose","value":{"id":"プロパティの既定値に戻すにはどうすればよいのか","title":"プロパティの既定値に戻すにはどうすればよいのか?","isH3":false,"content":"<p>当初 CSS には \"default\" キーワードがなく、プロパティの既定値を戻す唯一の方法は、そのプロパティを明示的に宣言し直すことでした。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token comment\">/* 見出しの既定の色は黒 */</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これは CSS 2 で変わり、<a href=\"/ja/docs/Web/CSS/initial\">initial</a> キーワードが CSS プロパティの正当な値になりました。これはプロパティを既定値にリセットします。この既定値は、当該プロパティの CSS 仕様で定義されています。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token comment\">/* 見出しの既定の色は黒 */</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"スタイルを他のスタイルから派生させるにはどうすればよいか","title":"スタイルを他のスタイルから派生させるにはどうすればよいか?","isH3":false,"content":"<p>CSS では、あるスタイルが他の表現で定義されることを許可していません (<a href=\"http://archivist.incutio.com/viewlist/css-discuss/2685\" class=\"external\" rel=\" noopener\">Working Group のスタンスに関する、Eric Meyer 氏のコメント</a>をご覧ください)。ただし、ひとつの要素に複数のクラスを割り当てることで、同様の効果を得られます。また、複数の場所で再利用できるスタイル情報を 1 ヶ所で定義する方法として、 <a href=\"/ja/docs/Web/CSS/Using_CSS_custom_properties\">CSS 変数</a> が導入されました。</p>"}},{"type":"prose","value":{"id":"ひとつの要素に複数のクラスを割り当てる方法は","title":"ひとつの要素に複数のクラスを割り当てる方法は?","isH3":false,"content":"<p>HTML の要素は <code>class</code> 属性に空白区切りでクラスを並べることで、複数のクラスを割り当てることができます。</p>\n<pre class=\"notranslate\">&lt;style type=\"text/css\"&gt;\n.news { background: black; color: white; }\n.today { font-weight: bold; }\n&lt;/style&gt;\n\n&lt;div class=\"news today\"&gt;\n... content of today's news ...\n&lt;/div&gt;\n</pre>\n<p>同じプロパティが双方の規則内で宣言されている場合は、その競合がまずは詳細度によって、そして CSS 宣言の順序に従って解決されます。<code>class</code> 属性内のクラスの順序は関係がありません。</p>"}},{"type":"prose","value":{"id":"なぜ私のスタイル規則は正しく動作しないのか","title":"なぜ私のスタイル規則は正しく動作しないのか?","isH3":false,"content":"<p>構文が正しいスタイル規則が、ある状況下で適用されないことがあります。この種類の問題をデバッグするために <a href=\"/ja/docs/DOM_Inspector\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">DOM Inspector</a> の <em>CSS Style Rules</em> ビューを活用できますが、スタイルが無視される事例でもっとも頻発するものは以下のとおりです。</p>"}},{"type":"prose","value":{"id":"html_要素の階層","title":"HTML 要素の階層","isH3":true,"content":"<p>CSS スタイルを HTML 要素に適用する方法は、要素の階層にも依存します。CSS 規則の詳細度や優先度にかかわらず、子孫に適用された規則は親のスタイルをオーバーライドすることを覚えておくことが重要です。</p>\n<pre class=\"notranslate\">.news { color: black; }\n.corpName { font-weight: bold; color: red; }\n\n&lt;!-- ニュース項目は黒色ですが、社名は赤色かつ太字です --&gt;\n&lt;div class=\"news\"&gt;\n   (Reuters) &lt;span class=\"corpName\"&gt;General Electric&lt;/span&gt; (GE.NYS) announced on Thursday...\n&lt;/div&gt;\n</pre>\n<p>複雑な HTML 階層で規則が無視されているように見える場合は、異なるスタイルが設定された別の要素の内部にその要素がないかを確認してください。</p>"}},{"type":"prose","value":{"id":"明示的に再定義されたスタイル規則","title":"明示的に再定義されたスタイル規則","isH3":true,"content":"<p>CSS スタイルシートでは、順序<strong>こそが</strong>重要です。ある規則を定義した後に同じ規則を再定義した場合は、最後の定義が使用されます。</p>\n<pre class=\"notranslate\">#stockTicker { font-weight: bold; }\n.stockSymbol { color: red; }\n/*  他の規則             */\n/*  他の規則             */\n/*  他の規則             */\n.stockSymbol { font-weight: normal; }\n\n&lt;!-- ほとんどのテキストは太字ですが、\"GE\" は赤色で太字ではありません --&gt;\n&lt;div id=\"stockTicker\"&gt;\n   NYS: &lt;span class=\"stockSymbol\"&gt;GE&lt;/span&gt; +1.0 ...\n&lt;/div&gt;\n</pre>\n<p>このような誤りを避けるには、あるセレクタに対する規則は 1 回だけ定義するようにして、セレクタに所属するすべての規則をグループ化してください。</p>"}},{"type":"prose","value":{"id":"ショートハンドプロパティの使用","title":"ショートハンドプロパティの使用","isH3":true,"content":"<p>ショートハンドプロパティを使用したスタイル規則の定義は、構文がとてもコンパクトになることからよいことです。一部の属性だけを持つショートハンドプロパティの使用は可能かつ正当ですが、宣言していない属性は自動的に既定値へリセットされることを覚えておくべきです。すなわち、単独の属性に対する以前の規則は暗黙的にオーバーライドされます。</p>\n<pre class=\"notranslate\">#stockTicker { font-size: 12px; font-family: Verdana; font-weight: bold; }\n.stockSymbol { font: 14px Arial; color: red; }\n\n&lt;div id=\"stockTicker\"&gt;\n   NYS: &lt;span class=\"stockSymbol\"&gt;GE&lt;/span&gt; +1.0 ...\n&lt;/div&gt;\n</pre>\n<p>前の例では別の要素に属する規則で問題が発生していますが、同一の要素でも問題が起こりえます。これは、規則の順序<strong>こそが</strong>重要であるためです。</p>\n<pre class=\"notranslate\">#stockTicker {\n   font-weight: bold;\n   font: 12px Verdana;  /* font-weight is now set to normal */\n}\n</pre>"}},{"type":"prose","value":{"id":"_セレクタの使用","title":"<code>*</code> セレクタの使用","isH3":true,"content":"<p>ワイルドカードセレクタ <code>*</code> はすべての要素を参照するものであり、特に注意して使用しなければなりません。</p>\n<pre class=\"notranslate\">body * { font-weight: normal; }\n#stockTicker { font: 12px Verdana; }\n.corpName { font-weight: bold; }\n.stockUp { color: red; }\n\n&lt;div id=\"section\"&gt;\n   NYS: &lt;span class=\"corpName\"&gt;&lt;span class=\"stockUp\"&gt;GE&lt;/span&gt;&lt;/span&gt; +1.0 ...\n&lt;/div&gt;\n</pre>\n<p>この例では、<code>body *</code> セレクタで body 要素内の全要素に対して規則を適用しており、それは .stockUp クラスも含むすべての階層レベルです。よって .corpName クラスに適用した <code>font-weight: bold;</code> は、body 内の全要素に適用した <code>font-weight: normal;</code> にオーバーライドされます。</p>\n<p>特にセレクタの最初の要素として使用しない場合に、* セレクタは遅いセレクタであるため使用は最小限にするべきです。このような使い方はできるだけ避けるべきです。</p>","titleAsText":"* セレクタの使用"}},{"type":"prose","value":{"id":"css_の詳細度","title":"CSS の詳細度","isH3":true,"content":"<p>ある要素に複数の規則を適用すると、スタイルの<a href=\"/ja/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#specificity\">詳細さ</a>に従って規則が選ばれます。インラインスタイル（HTML の <code>style</code> 属性）が最上位の詳細さで他のあらゆるセレクタを上書きし、次に ID セレクタ、それからクラスセレクタ、要素名セレクタの順となります。よって、以下の <a href=\"/ja/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> の文字色は赤になります。</p>\n<pre class=\"notranslate\">div { color: black; }\n#orange { color: orange; }\n.green { color: green; }\n\n&lt;div id=\"orange\" class=\"green\" style=\"color: red;\"&gt;This is red&lt;/div&gt;\n</pre>\n<p>セレクタが複数の範囲を持つ場合、規則はより複雑になります。セレクタの詳細度がどのように算出されるかについて、詳しくは <a href=\"https://www.w3.org/TR/CSS21/cascade.html#specificity\" class=\"external\" rel=\" noopener\">CSS 2.1 Specification chapter 6.4.3</a> でご覧いただけます。</p>"}},{"type":"prose","value":{"id":"-moz-、-ms-、-webkit-、-o-、-khtml-_プロパティは何をするものか","title":"-moz-*、-ms-*、-webkit-*、-o-*、-khtml-* プロパティは何をするものか?","isH3":false,"content":"<p>これらのプロパティは<em>接頭辞付きプロパティ</em>と呼ばれ、CSS 標準を拡張したものです。これらは正規の名前空間を乱すことなく実験的で非標準の機能を使用するために用いられ、標準仕様が拡張したときに機能の不整合が発生することを防ぎます。</p>\n<p>本番 Web サイトでこのようなプロパティを使用することはお勧めできません。これらのプロパティは既に Web との互換性に大きな問題を引き起こしています。たとえば、接頭辞のないバージョンがすべてのブラウザーでサポートされている場合に、接頭辞のないバージョンがプロパティの <code>-webkit-</code> 接頭辞バージョンのみを使用するということは、Webkit ベースでないブラウザーではそのプロパティに依存する機能が完全に不要になるということです。この問題はひどく悪くなったため、Compatibility Living Standard で指定されているように、Web の互換性を向上させるために他のブラウザーが <code>-webkit-</code> プレフィックスエイリアスを実装し始めました。</p>\n<p>実際のところ、ほとんどのブラウザーは実験的機能を実装するときに CSS プレフィックスを使用せず、代わりに Nightly ブラウザーバージョンなどでのみそれらの機能を実装しています。</p>\n<p>作業でプレフィックスを使用する必要がある場合は、最初にプレフィックス付きのバージョンを使用するようにコードを書くことをお勧めします。ただし、サポートされている場合はプレフィックス付きのバージョンを自動的に上書きできます。 例えば：</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token property\">-ms-transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>90deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">-webkit-transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>90deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>90deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 接頭辞付きプロパティの処理の詳細については、<a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing\">クロスブラウザーテスト</a>モジュールの<a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#handling_css_prefixes\">一般的な HTML および CSS の問題の処理 - CSS プレフィックスの処理</a>を参照してください。</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> Mozilla をプレフィックスとする CSS プロパティの詳細については、<a href=\"/ja/docs/Web/CSS/Mozilla_Extensions\">CSS の Mozilla 拡張</a>ページを参照してください。</p>\n</div>"}},{"type":"prose","value":{"id":"z-index_は位置指定へどのように関係するのか","title":"z-index は位置指定へどのように関係するのか?","isH3":false,"content":"<p>z-index プロパティは、要素を積み重ねる順序を指定します。</p>\n<p>z-index/stack の順序が高い要素は、常に z-index/stack の順序が低い要素の前に表示されます。z-index は指定された位置 (<code>position:absolute</code>、<code>position:relative</code>、または <code>position:fixed</code>) を持つ要素に対してのみ機能します。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> 詳細については、<a href=\"/ja/docs/Learn/CSS/CSS_layout/Positioning\">ポジショニング</a>学習の記事、特に <a href=\"/ja/docs/Learn/CSS/CSS_layout/Positioning#introducing_z-index\">z-index の紹介</a>セクションを参照してください。</p>\n</div>"}}],"toc":[{"text":"なぜ CSS が妥当なのに正しくレンダリングされないのか？","id":"なぜ_css_が妥当なのに正しくレンダリングされないのか？"},{"text":"なぜ CSS が妥当なのにまったくレンダリングされないのか?","id":"なぜ_css_が妥当なのにまったくレンダリングされないのか"},{"text":"<code>id</code> と <code>class</code> の違いは何か?","id":"id_と_class_の違いは何か"},{"text":"プロパティの既定値に戻すにはどうすればよいのか?","id":"プロパティの既定値に戻すにはどうすればよいのか"},{"text":"スタイルを他のスタイルから派生させるにはどうすればよいか?","id":"スタイルを他のスタイルから派生させるにはどうすればよいか"},{"text":"ひとつの要素に複数のクラスを割り当てる方法は?","id":"ひとつの要素に複数のクラスを割り当てる方法は"},{"text":"なぜ私のスタイル規則は正しく動作しないのか?","id":"なぜ私のスタイル規則は正しく動作しないのか"},{"text":"-moz-*、-ms-*、-webkit-*、-o-*、-khtml-* プロパティは何をするものか?","id":"-moz-、-ms-、-webkit-、-o-、-khtml-_プロパティは何をするものか"},{"text":"z-index は位置指定へどのように関係するのか?","id":"z-index_は位置指定へどのように関係するのか"}],"summary":"この記事には、 CSS に関するいくつかのよくある質問（FAQ）とその解答が見つかり、ウェブ開発者になるための道で役に立つでしょう。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CSS FAQ","locale":"en-US","native":"English (US)"},{"title":"Preguntas frecuentes sobre CSS","locale":"es","native":"Español"},{"title":"Questions fréquentes en CSS","locale":"fr","native":"Français"},{"title":"공통된 CSS 질문들","locale":"ko","native":"한국어"},{"title":"CSS - Perguntas frequentes","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Common CSS questions","locale":"ru","native":"Русский"},{"title":"CSS 常见问题","locale":"zh-CN","native":"中文 (简体)"},{"title":"CSS 一般問題","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/learn/css/howto/css_faq","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/learn/css/howto/css_faq/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Learn","title":"ウェブ開発を学ぶ"},{"uri":"/ja/docs/Learn/CSS","title":"CSS"},{"uri":"/ja/docs/Learn/CSS/Howto","title":"CSS を使ってよくある問題を解決する"},{"uri":"/ja/docs/Learn/CSS/Howto/CSS_FAQ","title":"CSS の一般的な質問"}],"pageTitle":"CSS の一般的な質問 - ウェブ開発を学ぶ | MDN","noIndexing":false}}