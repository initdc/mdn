{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Express チュートリアル Part 2: スケルトン Web サイトの作成","mdn_url":"/ja/docs/Learn/Server-side/Express_Nodejs/skeleton_website","locale":"ja","native":"日本語","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/ja/docs/Learn/Getting_started_with_the_web\"><strong>完全な初心者はこちらから!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>ウェブ入門</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web\">ウェブ入門</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">基本的なソフトウェアのインストール</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">ウェブサイトをどんな外見にするか</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">ファイルの扱い</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML の基本</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS の基本</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript の基本</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">ウェブサイトの公開</a></li>\n            <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">ウェブのしくみ</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ja/docs/Learn/HTML\"><strong>HTML — Structuring the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML概論</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML\">HTML概論</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Getting started with HTML</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">head って何？HTML のメタデータ</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML テキストの基礎</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">ハイパーリンクを作ってみる</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Advanced text formatting</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Document and website structure</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Debugging HTML</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Assessment: Marking up a letter</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Assessment: Structuring a page of content</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Multimedia and embedding</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding\">Multimedia and embedding overview</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Images in HTML</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Video and audio content</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">From object to iframe — other embedding technologies</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adding vector graphics to the Web</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Responsive images</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Assessment: Mozilla splash page</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML tables</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/HTML/Tables\">HTML tables overview</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/ja/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ja/docs/Learn/CSS\"><strong>CSS — Styling the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS first steps</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Styling text</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text\">Styling text overview</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamental text and font styling</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text/Styling_lists\">Styling lists</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text/Styling_links\">Styling links</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text/Web_fonts\">Web fonts</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Assessment: Typesetting a community school homepage</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS layout</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout\">CSS layout overview</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Floats\">Floats</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Positioning\">Positioning</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/ja/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/ja/docs/Learn/JavaScript\"><strong>JavaScript — 動的クライアントサイドスクリプト</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript の第一歩</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps\">JavaScript の第一歩</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">JavaScriptって何？</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/A_first_splash\">JavaScriptへの最初のダイブ</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/What_went_wrong\">何が間違っている? JavaScript のトラブルシューティング</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Variables\">必要な情報を保存する — 変数</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Math\">JavaScriptでの数学入門 — 数値と演算子について</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Strings\">テキストを扱う — JavaScript での文字列</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Useful_string_methods\">便利な文字列メソッド</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Arrays\">配列</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/First_steps/Silly_story_generator\">バカ話ジェネレーター</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript building blocks</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks overview</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/conditionals\">Making decisions in your code — Conditionals</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Looping_code\">Looping code</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Functions\">Functions — Reusable blocks of code</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Build your own function</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Return_values\">Function return values</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Assessment: Image gallery</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introducing JavaScript objects</summary>\n          <ol>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects overview</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Basics\">Object basics</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Object_prototypes\">Object prototypes</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/JSON\">Working with JSON data</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Object_building_practice\">Object building practice</a></li>\n            <li><a href=\"/ja/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Assessment: Adding features to our bouncing balls demo</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web APIs</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ja/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/ja/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ja/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility guides</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Accessibility\">Accessibility overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/ja/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility assessment</summary>\n        <ol>\n            <li><a href=\"/ja/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/ja/docs/Learn/Tools_and_testing\"><strong>Tools and testing</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Cross browser testing</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing\">Cross browser testing overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introduction to cross browser testing</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Strategies for carrying out testing</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Handling common HTML and CSS problems</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Handling common JavaScript problems</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Handling common accessibility problems</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementing feature detection</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introduction to automated testing</a></li>\n          <li><a href=\"/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Setting up your own test automation environment</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/ja/docs/Learn/Server-side\"><strong>Server-side website programming</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>First steps</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Server-side/First_steps\">First steps overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/First_steps/Introduction\">Introduction to the server-side</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/First_steps/Client-Server_overview\">Client-Server overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/First_steps/Web_frameworks\">Server-side web frameworks</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/First_steps/Website_security\">Website security</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django web framework (Python)</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django\">Django web framework (Python) overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Introduction\">Introduction</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/development_environment\">Setting up a development environment</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial: The Local Library website</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Models\">Tutorial Part 3: Using models</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Admin_site\">Tutorial Part 4: Django admin site</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Home_page\">Tutorial Part 5: Creating our home page</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Generic_views\">Tutorial Part 6: Generic list and detail views</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Sessions\">Tutorial Part 7: Sessions framework</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Authentication\">Tutorial Part 8: User authentication and permissions</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Forms\">Tutorial Part 9: Working with forms</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Testing\">Tutorial Part 10: Testing a Django web application</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/Deployment\">Tutorial Part 11: Deploying Django to production</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/web_application_security\">Web application security</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Django/django_assessment_blog\">Assessment: DIY mini blog</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript) overview</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node (Express) development environment</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express tutorial: The Local Library website</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li>\n          <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Further resources</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Common questions</summary>\n        <ol>\n          <li><a href=\"/ja/docs/Learn/HTML/Howto\">HTML questions</a></li>\n          <li><a href=\"/ja/docs/Learn/CSS/Howto\">CSS questions</a></li>\n          <li><a href=\"/ja/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/ja/docs/Learn/Common_questions#Web_mechanics\">Web mechanics</a></li>\n          <li><a href=\"/ja/docs/Learn/Common_questions#Tools_and_setup\">Tools and setup</a></li>\n          <li><a href=\"/ja/docs/Learn/Common_questions#Design_and_accessibility\">Design and accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\"> 前のページ </a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/Server-side/Express_Nodejs\"> Overview: Express Nodejs</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/Server-side/Express_Nodejs/mongoose\"> 次のページ  </a></li>\n</ul>\n<p>この <a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express チュートリアル</a>の 2 回目の記事では、どのようにして \"スケルトン\" Web サイトプロジェクトを作成し、サイト固有のルート、テンプレート/ビュー、およびデータベース呼び出しを追加するかを説明します。</p>\n<table>\n  <thead>\n    <tr>\n      <th>前提条件:</th>\n      <th><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/development_environment\">Node 開発環境を設定します</a>。Express チュートリアルを確認してください。</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>目標:</td>\n      <td>Express Application Generator を使用して独自の新しい Web サイトプロジェクトを開始できるようにする。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"概要","title":"概要","isH3":false,"content":"<p>この記事では <a href=\"https://expressjs.com/ja/starter/generator.html\" class=\"external\" rel=\" noopener\">Express Application Generator</a> ツールを使用して \"スケルトン\" Web サイトを作成する方法を説明します。このツールには、サイト固有のルート、ビュー/テンプレート、およびデータベース呼び出しを追加できます。この場合は、このツールを使用して<a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">ローカルライブラリ Web サイト</a>用のフレームワークを作成し、後でそのサイトに必要な他のすべてのコードを追加します。プロセスは非常に単純で、必要に応じてサイトのテンプレートエンジンと CSS ジェネレータを指定して、新しいプロジェクト名を指定してコマンドラインでジェネレータを呼び出すだけです。</p>\n<p>次のセクションでは、アプリケーションジェネレータを呼び出す方法を示し、さまざまな ビュー/CSS オプションについて簡単に説明します。また、スケルトン Web サイトの構造についても説明します。最後に、Web サイトを実行してそれが機能することを確認する方法を紹介します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Express アプリケーションジェネレータは、Express アプリケーション用の唯一のジェネレータというわけではありません。また、生成されたプロジェクトはファイルやディレクトリーを構造化する唯一実行可能な方法というわけではありません。しかしながら、生成されたサイトは、拡張と理解が容易なモジュール構造を持っています。最小限の Express アプリケーションについては、<a href=\"https://expressjs.com/ja/starter/hello-world.html\" class=\"external\" rel=\" noopener\">Hello world の例</a> (Express ドキュメント) を参照してください。</p>\n</div>"}},{"type":"prose","value":{"id":"アプリケーションジェネレータを使用する","title":"アプリケーションジェネレータを使用する","isH3":false,"content":"<p><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/development_environment\">Node 開発環境の設定</a>の一部として、ジェネレータをすでにインストールしているはずです。念のため、NPM パッケージマネージャを使用して、サイト全体にジェネレータツールをインストールします。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> express-generator -g\n</code></pre></div>\n<p>ジェネレータにはいくつかのオプションがあり、それらは <code>--help</code> (または <code>-h</code>) コマンドを使用してコマンドラインで表示できます。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token operator\">&gt;</span> express --help\n\n  Usage: express <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>dir<span class=\"token punctuation\">]</span>\n\n  Options:\n\n    -h, --help           output usage information\n        --version        output the version number\n    -e, --ejs            <span class=\"token function\">add</span> ejs engine support\n        --pug            <span class=\"token function\">add</span> pug engine support\n        --hbs            <span class=\"token function\">add</span> handlebars engine support\n    -H, --hogan          <span class=\"token function\">add</span> hogan.js engine support\n    -v, --view <span class=\"token operator\">&lt;</span>engine<span class=\"token operator\">&gt;</span>  <span class=\"token function\">add</span> view <span class=\"token operator\">&lt;</span>engine<span class=\"token operator\">&gt;</span> support <span class=\"token punctuation\">(</span>ejs<span class=\"token operator\">|</span>hbs<span class=\"token operator\">|</span>hjs<span class=\"token operator\">|</span>jade<span class=\"token operator\">|</span>pug<span class=\"token operator\">|</span>twig<span class=\"token operator\">|</span>vash<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>defaults to jade<span class=\"token punctuation\">)</span>\n    -c, --css <span class=\"token operator\">&lt;</span>engine<span class=\"token operator\">&gt;</span>   <span class=\"token function\">add</span> stylesheet <span class=\"token operator\">&lt;</span>engine<span class=\"token operator\">&gt;</span> support <span class=\"token punctuation\">(</span>less<span class=\"token operator\">|</span>stylus<span class=\"token operator\">|</span>compass<span class=\"token operator\">|</span>sass<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>defaults to plain css<span class=\"token punctuation\">)</span>\n        --git            <span class=\"token function\">add</span> .gitignore\n    -f, --force          force on non-empty directory\n</code></pre></div>\n<p>Jade ビューエンジンとプレーン CSS を使用して、<code>express</code> を指定するだけで現在のディレクトリー内にプロジェクトを作成できます (ディレクトリー名を指定すると、プロジェクトはその名前のサブフォルダに作成されます)。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>express\n</code></pre></div>\n<p><code>--view</code> を使用してビュー (テンプレート) エンジンを選択したり、<code>--css</code> を使用して CSS 生成エンジンを選択したりすることもできます。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> テンプレートエンジンを選択するためのその他のオプション (<code>--hogan</code>、<code>--ejs</code>、<code>--hbs</code> など) は推奨されません。<code>--view</code> (または <code>-v</code>)を使用してください。</p>\n</div>"}},{"type":"prose","value":{"id":"どのビューエンジンを使うべきですか？","title":"どのビューエンジンを使うべきですか？","isH3":true,"content":"<p>Express Application Generator を使用すると、<a href=\"https://www.npmjs.com/package/ejs\" class=\"external\" rel=\" noopener\">EJS</a>、<a href=\"http://github.com/donpark/hbs\" class=\"external\" rel=\" noopener\">Hbs</a>、<a href=\"https://pugjs.org/api/getting-started.html\" class=\"external\" rel=\" noopener\">Pug</a> (Jade)、<a href=\"https://www.npmjs.com/package/twig\" class=\"external\" rel=\" noopener\">Twig</a>、<a href=\"https://www.npmjs.com/package/vash\" class=\"external\" rel=\" noopener\">Vash</a> など、一般的なビュー/テンプレートエンジンを多数設定できます。ただし、ビューオプションを指定しない場合はデフォルトで Jade が選択されます。 Express 自体は、<a href=\"https://github.com/expressjs/express/wiki#template-engines\" class=\"external\" rel=\" noopener\">一般的な</a>他のテンプレート言語の多くをサポートすることができます。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> ジェネレータでサポートされていないテンプレートエンジンを使用したい場合は、<a href=\"https://expressjs.com/ja/guide/using-template-engines.html\" class=\"external\" rel=\" noopener\">Express でテンプレートエンジンを使用する</a> (Express ドキュメント) およびターゲットビューエンジンのドキュメントを参照してください。</p>\n</div>\n<p>一般的に、あなたが必要とするすべての機能を提供し、あなたがより早く生産的になることを可能にするテンプレートエンジンを選ぶべきです ー もしくは言い換えれば、同じ方法で、他のコンポーネントを選択するということです。テンプレートエンジンを比較する際に考慮すべき点がいくつかあります。</p>\n<ul>\n  <li>生産的になるための時間 - あなたのチームがすでにテンプレート言語の経験があるのなら l その言語を使うことでより速く生産的になるでしょう。そうでない場合は、候補のテンプレートエンジンの相対的な学習曲線を検討する必要があります</li>\n  <li>人気度とアクティビティ - エンジンの人気度と、活発なコミュニティがあるかどうかを確認します。あなたがウェブサイトの生涯にわたって問題を抱えているときにエンジンのサポートを受けることができることが重要です</li>\n  <li>スタイル － テンプレートエンジンの中には、\"通常の\" HTML 内に挿入されたコンテンツを示すために特定のマークアップを使用するものもあれば、別の構文を使用して HTML を構成するものもあります (たとえば、インデントとブロック名を使用)</li>\n  <li>パフォーマンス/レンダリング時間</li>\n  <li>機能 - あなたが見ているエンジンが利用可能な以下の機能を持っているかどうかを考慮する必要があります。\n    <ul>\n      <li>レイアウトの継承：ベーステンプレートを定義してから、特定のページに対して異なる部分だけを \"継承\" することができます。これは通常、必要なコンポーネントを多数含めるか、毎回テンプレートを最初から作成することによってテンプレートを作成するよりも優れた方法です</li>\n      <li>\"Include\" のサポート：他のテンプレートを含めることでテンプレートを構築することを可能にします</li>\n      <li>簡潔な変数およびループ制御構文</li>\n      <li>テンプレートレベルで変数値をフィルタリングする機能 (例えば、変数を大文字にする、または日付値をフォーマットする)</li>\n      <li>HTML 以外の出力フォーマット (JSON や XML など) を生成する機能</li>\n      <li>非同期操作とストリーミングのサポート</li>\n      <li>サーバだけでなくクライアントでも使用できます。テンプレートエンジンをクライアント上で使用できる場合、これによりデータを提供し、レンダリングの全部または大部分をクライアント側で行うことができます</li>\n    </ul>\n  </li>\n</ul>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> <strong>Tip:</strong> インターネット上には、さまざまなオプションを比較するのに役立つ多くのリソースがあります。</p>\n</div>\n<p>このプロジェクトでは、<a href=\"https://pugjs.org/api/getting-started.html\" class=\"external\" rel=\" noopener\">Pug</a> テンプレートエンジン (これは最近名前が変更された Jade エンジンです) を使用します。これは最も一般的な Express/JavaScript テンプレート言語の 1 つで、ジェネレータによってそのままサポートされているためです。</p>"}},{"type":"prose","value":{"id":"どの_css_スタイルシートエンジンを使うべきですか？","title":"どの CSS スタイルシートエンジンを使うべきですか？","isH3":true,"content":"<p>Express Application Generator を使用すると、最も一般的な CSS スタイルシートエンジン (<a href=\"https://lesscss.org/\" class=\"external\" rel=\" noopener\">LESS</a>、<a href=\"https://sass-lang.com/\" class=\"external\" rel=\" noopener\">SASS</a>、<a href=\"http://compass-style.org/\" class=\"external\" rel=\" noopener\">Compass</a>、<a href=\"http://stylus-lang.com/\" class=\"external\" rel=\" noopener\">Stylus</a>) を使用するように構成されたプロジェクトを作成できます。</p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>Note:</strong> CSS にはいくつかの制限があり、特定のタスクを困難にします。CSS スタイルシートエンジンを使用すると、CSS を定義するためのより強力な構文を使用してから、ブラウザーで使用するためにその定義を通常の CSS にコンパイルできます。</p>\n</div>\n<p>テンプレートエンジンと同様に、チームを最も生産的にすることができるスタイルシートエンジンを使用する必要があります。このプロジェクトでは、CSS 要件が他のものを使用することを正当化するのに十分に複雑ではないため、通常の CSS (デフォルト) を使用します。</p>"}},{"type":"prose","value":{"id":"どのデータベースを使うべきですか？","title":"どのデータベースを使うべきですか？","isH3":true,"content":"<p>生成されたコードはデータベースを一切使用しません。 Express アプリケーションは、Node によってサポートされている任意の<a href=\"https://expressjs.com/ja/guide/database-integration.html\" class=\"external\" rel=\" noopener\">データベースメカニズム</a>を使用できます (Express 自体はデータベース管理のための特定の追加の動作や要件を定義していません)。</p>\n<p>データベースと統合する方法については、後の記事で説明します。</p>"}},{"type":"prose","value":{"id":"プロジェクトを作成する","title":"プロジェクトを作成する","isH3":false,"content":"<p>これから作成するサンプルのローカルライブラリアプリでは、Pug テンプレートライブラリを使用し、CSS スタイルシートエンジンを使用しないで、express-locallibrary-tutorial という名前のプロジェクトを作成します。</p>\n<p>まず、プロジェクトを作成する場所に移動し、次に示すようにコマンドプロンプトで Express Application Generator を実行します。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>express express-locallibrary-tutorial --view<span class=\"token operator\">=</span>pug\n</code></pre></div>\n<p>ジェネレータはプロジェクトのファイルを作成 (そして一覧表示) します。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/package.json\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/app.js\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/public/images\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/public\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/public/stylesheets\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/public/stylesheets/style.css\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/public/javascripts\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/routes\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/routes/index.js\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/routes/users.js\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/views\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/views/index.pug\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/views/layout.pug\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/views/error.pug\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/bin\n   create <span class=\"token builtin class-name\">:</span> express-locallibrary-tutorial/bin/www\n\n   <span class=\"token function\">install</span> dependencies:\n     <span class=\"token operator\">&gt;</span> <span class=\"token builtin class-name\">cd</span> express-locallibrary-tutorial <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n\n   run the app:\n     <span class=\"token operator\">&gt;</span> SET <span class=\"token assign-left variable\">DEBUG</span><span class=\"token operator\">=</span>express-locallibrary-tutorial:* <span class=\"token operator\">&amp;</span> <span class=\"token function\">npm</span> start\n</code></pre></div>\n<p>出力の最後に、ジェネレータは依存関係をどのようにインストールするか (<strong>package.json</strong> ファイルにリストされているとおり)、次にアプリケーションを実行する方法についての指示を提供します (上記の手順は Windows 用です。Linux/ macOS では若干異なります)。</p>"}},{"type":"prose","value":{"id":"スケルトン_web_サイトを実行する","title":"スケルトン Web サイトを実行する","isH3":false,"content":"<p>これで、完全なスケルトンプロジェクトが完成しました。 ウェブサイトは実際にはそれほど多くは行っていませんが、それがどのように機能するかを示すために実行する価値があります。</p>\n<ol>\n  <li>まず、依存関係をインストールします (<code>install</code> コマンドはプロジェクトの <strong>package.json</strong> ファイルにリストされているすべての依存関係パッケージを取得します)\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token builtin class-name\">cd</span> express-locallibrary-tutorial\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n</code></pre></div>\n  </li>\n  <li>その後、アプリケーションを実行します\n    <ul>\n      <li>Windows では、次のコマンドを使用します\n        <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>SET <span class=\"token assign-left variable\">DEBUG</span><span class=\"token operator\">=</span>express-locallibrary-tutorial:* <span class=\"token operator\">&amp;</span> <span class=\"token function\">npm</span> start\n</code></pre></div>\n      </li>\n      <li>macOS または Linux では、次のコマンドを使用します\n        <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token assign-left variable\">DEBUG</span><span class=\"token operator\">=</span>express-locallibrary-tutorial:* <span class=\"token function\">npm</span> start\n</code></pre></div>\n      </li>\n    </ul>\n  </li>\n  <li>その後、ブラウザーに <a href=\"http://localhost:3000/\" class=\"external\" rel=\" noopener\">http://localhost:3000/</a> をロードしてアプリにアクセスします</li>\n</ol>\n<p>次のようなブラウザーページが表示されるはずです。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website/ExpressGeneratorSkeletonWebsite.png\" alt=\"Browser for default Express app generator website\" width=\"576\" height=\"403\" loading=\"lazy\">\n</p>\n<p>自分自身で <em>localhost:3000</em> に提供している、動作する Express アプリケーションがあります。</p>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>Note:</strong> <code>npm start</code> コマンドを使用してアプリを起動することもできます。示されているように DEBUG 変数を指定すると、コンソールロギング/デバッグが有効になります。たとえば、上記のページにアクセスすると、次のようなデバッグ出力が表示されます。</p>\n  <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token operator\">&gt;</span>SET <span class=\"token assign-left variable\">DEBUG</span><span class=\"token operator\">=</span>express-locallibrary-tutorial:* <span class=\"token operator\">&amp;</span> <span class=\"token function\">npm</span> start\n\n<span class=\"token operator\">&gt;</span> express-locallibrary-tutorial@0.0.0 start D:<span class=\"token punctuation\">\\</span>express-locallibrary-tutorial\n<span class=\"token operator\">&gt;</span> <span class=\"token function\">node</span> ./bin/www\n\n  express-locallibrary-tutorial:server Listening on port <span class=\"token number\">3000</span> +0ms\nGET / <span class=\"token number\">200</span> <span class=\"token number\">288.474</span> ms - <span class=\"token number\">170</span>\nGET /stylesheets/style.css <span class=\"token number\">200</span> <span class=\"token number\">5.799</span> ms - <span class=\"token number\">111</span>\nGET /favicon.ico <span class=\"token number\">404</span> <span class=\"token number\">34.134</span> ms - <span class=\"token number\">1335</span>\n</code></pre></div>\n</div>"}},{"type":"prose","value":{"id":"ファイルの変更時にサーバの再起動を有効にする","title":"ファイルの変更時にサーバの再起動を有効にする","isH3":false,"content":"<p>Express Web サイトに加えた変更は、現在のサーバを再起動するまで表示されません。変更を加えるたびにサーバを停止して再起動する必要があることはすぐに非常に苛立たしいものになるため、必要に応じてサーバの再起動を自動化することに時間をかける価値があります。</p>\n<p>この目的のための最も簡単なツールの 1 つが <a href=\"https://github.com/remy/nodemon\" class=\"external\" rel=\" noopener\">nodemon</a> です。 これは通常 \"ツール\" としてグローバルにインストールされますが、ここでは開発者の依存関係としてローカルにインストールして使用するので、プロジェクトを操作する開発者はアプリケーションをインストールするときに自動的に取得されます。スケルトンプロジェクトのルートディレクトリーで次のコマンドを使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev nodemon\n</code></pre></div>\n<p>プロジェクトの <strong>package.json</strong> ファイルだけでなく、自分のマシンにグローバルに <a href=\"https://github.com/remy/nodemon\" class=\"external\" rel=\" noopener\">nodemon</a> をインストールする場合は、次のようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g nodemon\n</code></pre></div>\n<p>プロジェクトの <strong>package.json</strong> ファイルを開くと、この依存関係を持つ新しいセクションが表示されます。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code>  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"nodemon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.14.11\"</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>このツールはグローバルにはインストールされていないので (パスに追加しない限り) コマンドラインから起動することはできませんが、NPM はインストールされているパッケージをすべて知っているので、NPM スクリプトから呼び出すことができます。package.json の <code>scripts</code> セクションを見つけます。最初は <code>\"start\"</code> で始まる 1 行が含まれています。その行の末尾にカンマを入れて、以下に見られる <code>\"devstart\"</code> 行を追加することによってそれを更新します。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code>  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node ./bin/www\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"devstart\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon ./bin/www\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p><code>devstart</code> コマンドを指定して、以前とほぼ同じ方法でサーバーを起動することができます。</p>\n<ul>\n  <li>Windows では、次のコマンドを使用してください\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>SET <span class=\"token assign-left variable\">DEBUG</span><span class=\"token operator\">=</span>express-locallibrary-tutorial:* <span class=\"token operator\">&amp;</span> <span class=\"token function\">npm</span> run devstart\n</code></pre></div>\n  </li>\n  <li>macOS または Linux では、次のコマンドを使用してください\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token assign-left variable\">DEBUG</span><span class=\"token operator\">=</span>express-locallibrary-tutorial:* <span class=\"token function\">npm</span> run devstart\n</code></pre></div>\n  </li>\n</ul>\n<div class=\"notecard note\" id=\"sect7\">\n  <p><strong>Note:</strong> プロジェクト内のファイルを編集した場合は、サーバが再起動します (またはコマンドプロンプトで <code>rs</code> と入力していつでも再起動できます)。あなたはまだページを更新するためにブラウザーを再読み込みする必要があるでしょう。</p>\n  <p>\"start\" は実際には名前付きスクリプトにマップされた NPM コマンドなので、ここでは単に <code>npm start</code> ではなく \"<code>npm run &lt;scriptname&gt;</code>\" を呼び出す必要があります。起動スクリプトのコマンドを置き換えることもできますが、開発中は nodemon を使用するだけなので、新しいスクリプトコマンドを作成するのが理にかなっています。</p>\n</div>"}},{"type":"prose","value":{"id":"生成されたプロジェクト","title":"生成されたプロジェクト","isH3":false,"content":"<p>今作成したプロジェクトを見てみましょう。</p>"}},{"type":"prose","value":{"id":"ディレクトリー構造","title":"ディレクトリー構造","isH3":true,"content":"<p>生成されたプロジェクトは、依存関係をインストールしたので、次のようなファイル構造になります (ファイルは \"/\" が前に付いて<strong>いない</strong>項目です)。<strong>package.json</strong> ファイルは、アプリケーションの依存関係とその他の情報を定義します。また、アプリケーションのエントリポイントである JavaScript ファイル <strong>/bin/www</strong> を呼び出す起動スクリプトも定義されています。これにより、アプリケーションのエラー処理がいくつか設定され、その後 <strong>app.js</strong> が読み込まれて残りの作業が行われます。 アプリのルートは <strong>routes/</strong> ディレクトリーの下の別々のモジュールに格納されています。 テンプレートは /<strong>views</strong> ディレクトリーの下に格納されています。</p>\n<pre class=\"notranslate\">/express-locallibrary-tutorial\n    app.js\n    /bin\n        www\n    package.json\n    /node_modules\n        [about 4,500 subdirectories and files]\n    /public\n        /images\n        /javascripts\n        /stylesheets\n            style.css\n    /routes\n        index.js\n        users.js\n    /views\n        error.pug\n        index.pug\n        layout.pug\n</pre>\n<p>次のセクションでは、ファイルについてもう少し詳しく説明します。</p>"}},{"type":"prose","value":{"id":"package.json","title":"package.json","isH3":true,"content":"<p><strong>package.json</strong> ファイルは、アプリケーションの依存関係とその他の情報を定義します。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"express-locallibrary-tutorial\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node ./bin/www\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"devstart\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon ./bin/www\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"cookie-parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~1.4.3\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"debug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~2.6.9\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"express\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~4.16.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"morgan\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~1.9.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~2.0.0-rc.4\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"serve-favicon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~2.4.5\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"nodemon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.14.11\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>依存関係には、express パッケージと選択したビューエンジン (pug) 用のパッケージが含まれます。さらに、多くの Web アプリケーションで役立つ次のパッケージがあります。</p>\n<ul>\n  <li><a href=\"https://www.npmjs.com/package/cookie-parser\" class=\"external\" rel=\" noopener\">cookie-parser</a>: Cookie ヘッダーを解析し、<code>req.cookies</code> を生成するために使用されます (基本的に Cookie 情報にアクセスするための便利な方法を提供します)</li>\n  <li><a href=\"https://www.npmjs.com/package/debug\" class=\"external\" rel=\" noopener\">debug</a>: 小さなノードデバッグユーティリティは、Node コアのデバッグ技術をモデルにしています</li>\n  <li><a href=\"https://www.npmjs.com/package/morgan\" class=\"external\" rel=\" noopener\">morgan</a>: Node 用の HTTP リクエストロガーミドルウェア</li>\n  <li><a href=\"https://www.npmjs.com/package/serve-favicon\" class=\"external\" rel=\" noopener\">serve-favicon</a>: <a href=\"https://ja.wikipedia.org/wiki/Favicon\" class=\"external\" rel=\" noopener\">ファビコン</a>を提供するためのノードミドルウェア (これはブラウザータブ内のサイト、ブックマークなどを表すために使用されるアイコンです)</li>\n</ul>\n<p>scripts セクションは \"start\" スクリプトを定義します。これは、<code>npm start</code> を呼び出してサーバを起動するときに呼び出すスクリプトです。スクリプトの定義から、これは実際に JavaScript ファイル <strong>./bin/www</strong> with node を開始することがわかります。また、\"devstart\" スクリプトも定義しています。これは、代わりに <code>npm run devstart</code> を呼び出すときに呼び出されます。これは同じ <strong>./bin/www</strong> ファイルを開始しますが、node ではなく nodemon を使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code>  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node ./bin/www\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"devstart\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon ./bin/www\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"www_ファイル","title":"www ファイル","isH3":true,"content":"<p>ファイル <strong>/bin/www</strong> がアプリケーションのエントリポイントです。 これが最初に行うことは、<a href=\"http://expressjs.com/ja/api.html\" class=\"external\" rel=\" noopener\"><code>express()</code></a> アプリケーションオブジェクトを設定して返す \"本物の\" アプリケーションエントリポイント (プロジェクトルート内の <strong>app.js</strong>) である<code>require()</code> です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token hashbang comment\">#!/usr/bin/env node</span>\n\n<span class=\"token comment\">/**\n * Module dependencies.\n */</span>\n\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect8\">\n  <p><strong>Note:</strong> <code>require()</code> は、現在のファイルにモジュールをインポートするために使われるグローバル Node 関数です。 ここでは相対パスを使用し、オプションの (.<strong>js</strong>) ファイル拡張子を省略して <strong>app.js</strong> モジュールを指定します。</p>\n</div>\n<p>このファイルのコードの残りの部分では、特定のポート (環境変数で定義されているか、変数が定義されていない場合は 3000 で定義されている) に設定された <code>app</code> を使用して Node HTTP サーバをセットアップします。 今のところ、コードについて他に何も知る必要はありません (このファイル内のすべてが \"定型句\" です) が、興味があればお気軽にレビューしてください。</p>"}},{"type":"prose","value":{"id":"app.js","title":"app.js","isH3":true,"content":"<p>このファイルは、<code>express</code> アプリケーションオブジェクト (慣例では <code>app</code> という名前) を作成し、さまざまな設定とミドルウェアを使用してアプリケーションを設定してから、モジュールからアプリケーションをエクスポートします。以下のコードは、アプリオブジェクトを作成およびエクスポートするファイルの一部だけを示しています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> app<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>上記の <strong>www</strong> エントリポイントファイルに戻ると、このファイルがインポートされたときに呼び出し元に渡されるのは、この <code>module.exports</code> オブジェクトです。</p>\n<p><strong>app.js</strong> ファイルを詳しく見ていきましょう。まず、NPM を使用してアプリケーション用に以前にダウンロードした express、serve-favicon、morgan、cookie-parser など、<code>require()</code> を使用していくつかの便利な Node ライブラリをファイルにインポートします。path は、ファイルとディレクトリーのパスを解析するためのコア Node ライブラリです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> favicon <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'serve-favicon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> logger <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'morgan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cookieParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cookie-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>それから routes ディレクトリーから <code>require()</code> モジュールを呼び出します。これらのモジュール/ファイルには、関連する \"ルート\" (URL パス) の特定のセットを処理するためのコードが含まれています。たとえばライブラリ内のすべての本をリストするためにスケルトンアプリケーションを拡張するときは、本関連のルートを処理するための新しいファイルを追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> indexRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes/index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> usersRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./routes/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect9\">\n  <p><strong>Note:</strong> この時点で、モジュールをインポートしたばかりです。 実際にはまだそのルートを使用していません (これはファイルの少し下まで行われます)。</p>\n</div>\n<p>次に、インポートした Express モジュールを使ってアプリオブジェクトを作成し、それを使ってビュー (テンプレート) エンジンを設定します。エンジンの設定には 2 つの部分があります。まず、 '<code>views</code>' の値を設定して、テンプレートが保存されるフォルダを指定します (この場合はサブフォルダの <strong>/views</strong>)。それから '<code>view engine</code>' の値を設定してテンプレートライブラリ (この場合は \"pug\") を指定します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// view engine setup</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'views'</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'views'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'view engine'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pug'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>次の一連の関数は <code>app.use()</code> を呼び出してミドルウェアライブラリをリクエスト処理チェーンに追加します。以前インポートしたサードパーティのライブラリに加えて、Express がプロジェクトルートの <strong>/public</strong> ディレクトリーにあるすべての静的ファイルを処理するようにするために、<code>express.static</code> ミドルウェアを使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// uncomment after placing your favicon in /public</span>\n<span class=\"token comment\">//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">logger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dev'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">urlencoded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">extended</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cookieParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">static</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>他のすべてのミドルウェアがセットアップされたので、(以前にインポートした) ルート処理コードをリクエスト処理チェーンに追加します。 インポートされたコードは、サイトのさまざまな部分に特定のルートを定義します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> indexRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/users'</span><span class=\"token punctuation\">,</span> usersRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect10\">\n  <p><strong>Note:</strong> 上記で指定されたパス ('/' と '<code>/users'</code>) は、インポートされたファイルで定義されているルートの接頭辞として扱われます。たとえば、インポートされたユーザーモジュールが <code>/profile</code> のルートを定義している場合は、<code>/users/profile</code> でそのルートにアクセスします。 ルートの詳細については後の記事で説明します。</p>\n</div>\n<p>ファイルの最後のミドルウェアは、エラーと HTTP 404 レスポンス用のハンドラメソッドを追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// catch 404 and forward to error handler</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Not Found'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// error handler</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// set locals, only providing error in development</span>\n  res<span class=\"token punctuation\">.</span>locals<span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span>locals<span class=\"token punctuation\">.</span>error <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'env'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'development'</span> <span class=\"token operator\">?</span> err <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// render the error page</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">||</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Express アプリケーションオブジェクト (app) が完全に設定されました。最後のステップはそれをモジュールのエクスポートに追加することです (これは <strong>/bin/www</strong> によってインポートされることを可能にするものです)。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> app<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ルート","title":"ルート","isH3":true,"content":"<p>ルートファイル <strong>/routes/users.js</strong> を以下に示します (ルートファイルは同様の構造を共有しているので、<strong>index.js</strong> も表示する必要はありません)。まず、express モジュールをロードし、それを使って <code>express.Router</code> オブジェクトを取得します。それからそのオブジェクトのルートを指定し、最後にモジュールからルーターをエクスポートします (これがファイルが <strong>app.js</strong> にインポートされることを可能にするものです)。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> router <span class=\"token operator\">=</span> express<span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* GET users listing. */</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'respond with a resource'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> router<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このルートは、正しいパターンの HTTP <code>GET</code> リクエストが検出されたときに必ず呼び出されるコールバックを定義します。一致パターンは、モジュールのインポート時に指定された経路 ('<code>/users</code>') と、このファイルで定義されているもの ('<code>/</code>') です。 つまり、このルートは <code>/users/</code> の URL が受信されたときに使用されます。</p>\n<div class=\"notecard note\" id=\"sect11\">\n  <p><strong>Note:</strong> <strong>Tip:</strong> これを試すには、node を使用してサーバを実行し、ブラウザーの URL (<a href=\"http://localhost:3000/users/\" class=\"external\" rel=\" noopener\">http://localhost:3000/users/</a>) にアクセスしてください。「リソースで応答してください」というメッセージが表示されます。</p>\n</div>\n<p>上記の関心事の 1 つは、コールバック関数が 3 番目の引数 '<code>next</code>' を持ち、したがって単純なルートコールバックではなくミドルウェア関数であることです。このコードでは現在 <code>next</code> 引数を使用していませんが、<code>'/'</code> ルートパスに複数のルートハンドラを追加したい場合、将来的には役に立つかもしれません。</p>"}},{"type":"prose","value":{"id":"ビュー_テンプレート","title":"ビュー (テンプレート)","isH3":true,"content":"<p>ビュー (テンプレート) は <strong>/views</strong> ディレクトリー (<strong>app.js</strong> で指定されている) に保存され、ファイル拡張子 <strong>.pug</strong> が与えられます。<a href=\"http://expressjs.com/ja/4x/api.html#res.render\" class=\"external\" rel=\" noopener\"><code>Response.render()</code></a> メソッドは、オブジェクトに渡された名前付き変数の値とともに指定されたテンプレートをレンダリングし、その結果をレスポンスとして送信するために使用されます。以下の <strong>/routes/index.js</strong> のコードでは、テンプレート変数 \"title\" を渡した \"index\" テンプレートを使用して、そのルートがどのようにレスポンスをレンダリングするかを確認できます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/* GET home page. */</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Express'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>上記のルートに対応するテンプレートを以下に示します(<strong>index.pug</strong>)。構文については後で詳しく説明します。今のところ知る必要があるのは、(変数 <code>'Express'</code> を持つ) <code>title</code>変数がテンプレートの指定された場所に挿入されることだけです。</p>\n<pre class=\"notranslate\">extends layout\n\nblock content\n  h1= title\n  p Welcome to #{title}\n</pre>"}},{"type":"prose","value":{"id":"自分自身で挑戦","title":"自分自身で挑戦","isH3":false,"content":"<p><strong>/routes/users.js</strong> に新しいルートを作成し、URL <code>/users/cool/</code> に \"You're so cool\" というテキストを表示します。 サーバーを実行し、ブラウザーで <a href=\"http://localhost:3000/users/cool/\" class=\"external\" rel=\" noopener\">http://localhost:3000/users/cool/</a> にアクセスしてテストしてください。</p>"}},{"type":"prose","value":{"id":"まとめ","title":"まとめ","isH3":false,"content":"<p>これで、<a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">ローカルライブラリ</a>用のスケルトン Web サイトプロジェクトを作成し、それが Node を使用して実行されることを確認しました。最も重要なのは、プロジェクトの構造も理解しているので、ローカルライブラリのルートとビューを追加するために変更を加える必要がある場所をよく理解していることです。</p>\n<p>次に、図書館の Web サイトとして機能するようにスケルトンを変更します。</p>"}},{"type":"prose","value":{"id":"あわせて参照","title":"あわせて参照","isH3":false,"content":"<ul>\n  <li><a href=\"https://expressjs.com/en/starter/generator.html\" class=\"external\" rel=\" noopener\">Express application generator</a> (Express ドキュメント)</li>\n  <li><a href=\"https://expressjs.com/en/guide/using-template-engines.html\" class=\"external\" rel=\" noopener\">Using template engines with Express</a> (Express ドキュメント)</li>\n</ul><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\"> 前のページ </a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/Server-side/Express_Nodejs\"> Overview: Express Nodejs</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Learn/Server-side/Express_Nodejs/mongoose\"> 次のページ  </a></li>\n</ul>"}},{"type":"prose","value":{"id":"このモジュール","title":"このモジュール","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node のイントロダクション</a></li>\n  <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/development_environment\">Node 開発環境の設定</a></li>\n  <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express チュートリアル: 地域図書館の Web サイト</a></li>\n  <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/skeleton_website\" aria-current=\"page\">Express チュートリアル Part 2: スケルトン Web サイトの作成</a></li>\n  <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express チュートリアル Part 3: データベースを使う (Mongoose を使用)</a></li>\n  <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/routes\">Express チュートリアル Part 4: ルートとコントローラ</a></li>\n  <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express チュートリアル Part 5: ライブラリデータの表示</a></li>\n  <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/forms\">Express チュートリアル Part 6: フォームの操作</a></li>\n  <li><a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/deployment\">Express チュートリアル Part 7: プロダクションへのデプロイ</a></li>\n</ul>"}}],"toc":[{"text":"概要","id":"概要"},{"text":"アプリケーションジェネレータを使用する","id":"アプリケーションジェネレータを使用する"},{"text":"プロジェクトを作成する","id":"プロジェクトを作成する"},{"text":"スケルトン Web サイトを実行する","id":"スケルトン_web_サイトを実行する"},{"text":"ファイルの変更時にサーバの再起動を有効にする","id":"ファイルの変更時にサーバの再起動を有効にする"},{"text":"生成されたプロジェクト","id":"生成されたプロジェクト"},{"text":"自分自身で挑戦","id":"自分自身で挑戦"},{"text":"まとめ","id":"まとめ"},{"text":"あわせて参照","id":"あわせて参照"},{"text":"このモジュール","id":"このモジュール"}],"summary":"この Express チュートリアルの 2 回目の記事では、どのようにして \"スケルトン\" Web サイトプロジェクトを作成し、サイト固有のルート、テンプレート/ビュー、およびデータベース呼び出しを追加するかを説明します。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Express Tutorial Part 2: Creating a skeleton website","locale":"en-US","native":"English (US)"},{"title":"Express Tutorial Part 2: Creating a skeleton website","locale":"es","native":"Español"},{"title":"Express Tutorial Part 2: 스켈레톤 웹사이트 만들기","locale":"ko","native":"한국어"},{"title":"Express Tutorial Parte 2: Criando a estrutura do website","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Учебник Express часть 2: Создание скелета сайта","locale":"ru","native":"Русский"},{"title":"Express 教程 2：创建站点框架","locale":"zh-CN","native":"中文 (简体)"},{"title":"Express 教學 2: 創建一個骨架網站","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/learn/server-side/express_nodejs/skeleton_website","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/learn/server-side/express_nodejs/skeleton_website/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Learn","title":"ウェブ開発を学ぶ"},{"uri":"/ja/docs/Learn/Server-side","title":"サーバサイド Web サイトプログラミング"},{"uri":"/ja/docs/Learn/Server-side/Express_Nodejs","title":"Express Web フレームワーク (Node.js/JavaScript)"},{"uri":"/ja/docs/Learn/Server-side/Express_Nodejs/skeleton_website","title":"Express チュートリアル Part 2: スケルトン Web サイトの作成"}],"pageTitle":"Express チュートリアル Part 2: スケルトン Web サイトの作成 - ウェブ開発を学ぶ | MDN","noIndexing":false}}