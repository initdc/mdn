{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"本の詳細ページ","mdn_url":"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <em>Book detail page</em> needs to display the information for a specific <code>Book</code>, identified using its (automatically generated) <code>_id</code> field value, along with information about each associated copy in the libary (<code>BookInstance</code>). Wherever we display an author, genre, or book instance, these should be linked to the associated detail page for that item.</p>"}},{"type":"prose","value":{"id":"controller","title":"Controller","isH3":false,"content":"<p>Open <strong>/controllers/bookController.js</strong>. Find the exported <code>book_detail()</code> controller method and replace it with the following code.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display detail page for a specific book.</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">book_detail</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    async<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">book</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            Book<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'author'</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'genre'</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">book_instance</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n          BookInstance<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'book'</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> results</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>book<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// No results.</span>\n            <span class=\"token keyword\">var</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Book not found'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// Successful, so render.</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book_detail'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Title'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">book</span><span class=\"token operator\">:</span> results<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">book_instances</span><span class=\"token operator\">:</span> results<span class=\"token punctuation\">.</span>book_instance <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> We don't need to require <em>async</em> and <em>BookInstance</em>, as we already imported those modules when we implemented the home page controller.</p>\n</div>\n<p>The method uses <code>async.parallel()</code> to find the <code>Book</code> and its associated copies (<code>BookInstances</code>) in parallel. The approach is exactly the same as described for the <em>Genre detail page</em> above.</p>"}},{"type":"prose","value":{"id":"view","title":"View","isH3":false,"content":"<p>Create <strong>/views/book_detail.pug</strong> and add the text below.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">extends</span> <span class=\"token class-name\">layout</span>\n\nblock content\n  h1 #<span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> #<span class=\"token punctuation\">{</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span>\n\n  p #<span class=\"token punctuation\">[</span>strong Author<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>book<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>book<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span>\n  p #<span class=\"token punctuation\">[</span>strong Summary<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>book<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">}</span>\n  p #<span class=\"token punctuation\">[</span>strong <span class=\"token constant\">ISBN</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>book<span class=\"token punctuation\">.</span>isbn<span class=\"token punctuation\">}</span>\n  p #<span class=\"token punctuation\">[</span>strong Genre<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n    each val<span class=\"token punctuation\">,</span> index <span class=\"token keyword\">in</span> book<span class=\"token punctuation\">.</span>genre\n      <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>val<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> index <span class=\"token operator\">&lt;</span> book<span class=\"token punctuation\">.</span>genre<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        <span class=\"token operator\">|</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function\">div</span><span class=\"token punctuation\">(</span>style<span class=\"token operator\">=</span><span class=\"token string\">'margin-left:20px;margin-top:20px'</span><span class=\"token punctuation\">)</span>\n    h4 Copies\n\n    each val <span class=\"token keyword\">in</span> book_instances\n      hr\n      <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Available'</span>\n        p<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>success #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Maintenance'</span>\n        p<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>danger #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">else</span>\n        p<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>warning #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n      p #<span class=\"token punctuation\">[</span>strong Imprint<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>imprint<span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> val<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Available'</span>\n        p #<span class=\"token punctuation\">[</span>strong Due back<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>due_back<span class=\"token punctuation\">}</span>\n      p #<span class=\"token punctuation\">[</span>strong Id<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span>nbsp<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>val<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">else</span>\n      p There are no copies <span class=\"token keyword\">of</span> <span class=\"token keyword\">this</span> book <span class=\"token keyword\">in</span> the library<span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>Almost everything in this template has been demonstrated in previous sections.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> The list of genres associated with the book is implemented in the template as below. This adds a comma after every genre associated with the book except for the last one.</p>\n  <pre class=\"notranslate\">  p #[strong Genre:]\n    each val, index in book.genre\n      a(href=val.url) #{val.name}\n      if index &lt; book.genre.length - 1\n        |,\n</pre>\n</div>"}},{"type":"prose","value":{"id":"what_does_it_look_like","title":"What does it look like?","isH3":false,"content":"<p>Run the application and open your browser to <a href=\"http://localhost:3000/\" class=\"external\" rel=\" noopener\">http://localhost:3000/</a>. Select the <em>All books</em> link, then select one of the books. If everything is set up correctly, your page should look something like the following screenshot.</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page/LocalLibary_Express_Book_Detail.png\" alt=\"Book Detail Page - Express Local Library site\" width=\"1491\" height=\"765\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"next_steps","title":"Next steps","isH3":false,"content":"<ul>\n  <li>Return to <a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a>.</li>\n  <li>Proceed to the next subarticle of part 5: <a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_detail_page\">Author detail page</a>.</li>\n</ul>"}}],"toc":[{"text":"Controller","id":"controller"},{"text":"View","id":"view"},{"text":"What does it look like?","id":"what_does_it_look_like"},{"text":"Next steps","id":"next_steps"}],"summary":"The Book detail page needs to display the information for a specific Book, identified using its (automatically generated) _id field value, along with information about each associated copy in the libary (BookInstance). Wherever we display an author, genre, or book instance, these should be linked to the associated detail page for that item.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Book detail page","locale":"en-US","native":"English (US)"},{"title":"书本详细信息页面","locale":"zh-CN","native":"中文 (简体)"},{"title":"書本詳情頁面","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/learn/server-side/express_nodejs/displaying_data/book_detail_page","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/learn/server-side/express_nodejs/displaying_data/book_detail_page/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Learn","title":"ウェブ開発を学ぶ"},{"uri":"/ja/docs/Learn/Server-side","title":"サーバサイド Web サイトプログラミング"},{"uri":"/ja/docs/Learn/Server-side/Express_Nodejs","title":"Express Web フレームワーク (Node.js/JavaScript)"},{"uri":"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express チュートリアル Part 5: ライブラリデータの表示"},{"uri":"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page","title":"本の詳細ページ"}],"pageTitle":"本の詳細ページ - ウェブ開発を学ぶ | MDN","noIndexing":false}}