{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ブックインスタンス詳細ページとチャレンジ","mdn_url":"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":"bookinstance_detail_page","title":"BookInstance detail page","isH3":false,"content":"<p>The <code>BookInstance</code> detail page needs to display the information for each <code>BookInstance</code>, identified using its (automatically generated) <code>_id</code> field value. This will include the <code>Book</code> name (as a link to the <em>Book detail page</em>) along with other information in the record.</p>"}},{"type":"prose","value":{"id":"controller","title":"Controller","isH3":true,"content":"<p>Open <strong>/controllers/bookinstanceController.js</strong>. Find the exported <code>bookinstance_detail()</code> controller method and replace it with the following code.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display detail page for a specific BookInstance.</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">bookinstance_detail</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    BookInstance<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> bookinstance</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bookinstance<span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// No results.</span>\n          <span class=\"token keyword\">var</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Book copy not found'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Successful, so render.</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bookinstance_detail'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Book:'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">bookinstance</span><span class=\"token operator\">:</span>  bookinstance<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The method calls <code>BookInstance.findById()</code> with the ID of a specific book instance extracted from the URL (using the route), and accessed within the controller via the request parameters: <code>req.params.id</code>). It then calls <code>populate()</code> to get the details of the associated <code>Book</code>.</p>"}},{"type":"prose","value":{"id":"view","title":"View","isH3":true,"content":"<p>Create <strong>/views/bookinstance_detail.pug</strong> and copy in the content below.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">extends</span> <span class=\"token class-name\">layout</span>\n\nblock content\n\n  h1 <span class=\"token constant\">ID</span><span class=\"token operator\">:</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">}</span>\n\n  p #<span class=\"token punctuation\">[</span>strong Title<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span>bookinstance<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span>\n  p #<span class=\"token punctuation\">[</span>strong Imprint<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>imprint<span class=\"token punctuation\">}</span>\n\n  p #<span class=\"token punctuation\">[</span>strong Status<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Available'</span>\n      span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>success #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">==</span><span class=\"token string\">'Maintenance'</span>\n      span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>danger #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n      span<span class=\"token punctuation\">.</span>text<span class=\"token operator\">-</span>warning #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> bookinstance<span class=\"token punctuation\">.</span>status<span class=\"token operator\">!=</span><span class=\"token string\">'Available'</span>\n    p #<span class=\"token punctuation\">[</span>strong Due back<span class=\"token operator\">:</span><span class=\"token punctuation\">]</span> #<span class=\"token punctuation\">{</span>bookinstance<span class=\"token punctuation\">.</span>due_back<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Everything in this template has been demonstrated in previous sections.</p>"}},{"type":"prose","value":{"id":"what_does_it_look_like","title":"What does it look like?","isH3":true,"content":"<p>Run the application and open your browser to <a href=\"http://localhost:3000/\" class=\"external\" rel=\" noopener\">http://localhost:3000/</a>. Select the <em>All book-instances</em> link, then select one of the items. If everything is set up correctly, your site should look something like the following screenshot.</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge/LocalLibary_Express_BookInstance_Detail.png\" alt=\"BookInstance Detail Page - Express Local Library site\" width=\"1016\" height=\"368\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"challenge","title":"Challenge","isH3":false,"content":"<p>Currently most <em>dates</em> displayed on the site use the default JavaScript format (e.g. <em>Tue Dec 06 2016 15:49:58 GMT+1100 (AUS Eastern Daylight Time)</em>. The challenge for this article is to improve the appearance of the date display for <code>Author</code> lifespan information (date of death/birth) and for <em>BookInstance detail</em> pages to use the format: December 6th, 2016.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> You can use the <a href=\"#date_formatting\">same approach</a> as we used for the <em>Book Instance List</em> (adding the virtual property for the lifespan to the <code>Author</code> model and use <a href=\"https://www.npmjs.com/package/moment\" class=\"external\" rel=\" noopener\">moment</a> to format the date strings).</p>\n</div>\n<p>The requirements to meet this challenge:</p>\n<ol>\n  <li>Replace the variable <code>due_back</code> with <code>due_back_formatted</code> in the <em>BookInstance detail</em> page.</li>\n  <li>Update the Author module to add a lifespan virtual property. The lifespan should look like: <em>date_of_birth - date_of_death</em>, where both values have the same date format as <code>BookInstance.due_back_formatted</code>.</li>\n  <li>Use <code>Author.lifespan</code> in all views where you currently explicitly use <code>date_of_birth</code> and <code>date_of_death</code>.</li>\n</ol>"}},{"type":"prose","value":{"id":"next_steps","title":"Next steps","isH3":false,"content":"<ul>\n  <li>Return to <a href=\"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a>.</li>\n</ul>"}}],"toc":[{"text":"BookInstance detail page","id":"bookinstance_detail_page"},{"text":"Challenge","id":"challenge"},{"text":"Next steps","id":"next_steps"}],"summary":"The BookInstance detail page needs to display the information for each BookInstance, identified using its (automatically generated) _id field value. This will include the Book name (as a link to the Book detail page) along with other information in the record.","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BookInstance detail page and challenge","locale":"en-US","native":"English (US)"},{"title":"书本实例细节页面、与自我挑战","locale":"zh-CN","native":"中文 (简体)"},{"title":"書本實例詳情頁面與自我挑戰","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/learn/server-side/express_nodejs/displaying_data/bookinstance_detail_page_and_challenge","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/learn/server-side/express_nodejs/displaying_data/bookinstance_detail_page_and_challenge/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Learn","title":"ウェブ開発を学ぶ"},{"uri":"/ja/docs/Learn/Server-side","title":"サーバサイド Web サイトプログラミング"},{"uri":"/ja/docs/Learn/Server-side/Express_Nodejs","title":"Express Web フレームワーク (Node.js/JavaScript)"},{"uri":"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express チュートリアル Part 5: ライブラリデータの表示"},{"uri":"/ja/docs/Learn/Server-side/Express_Nodejs/Displaying_data/BookInstance_detail_page_and_challenge","title":"ブックインスタンス詳細ページとチャレンジ"}],"pageTitle":"ブックインスタンス詳細ページとチャレンジ - ウェブ開発を学ぶ | MDN","noIndexing":false}}