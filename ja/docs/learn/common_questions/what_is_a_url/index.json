{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"URL とは？","mdn_url":"/ja/docs/Learn/Common_questions/What_is_a_URL","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>この記事では URL (Uniform Resource Locator) について説明し、その内容と構造を説明します。</p>\n<table>\n  <tbody>\n    <tr>\n      <th scope=\"row\">前提知識:</th>\n      <td><a href=\"/ja/docs/Learn/Common_questions/How_does_the_Internet_work\">インターネットはどのように動くのか</a>、<a href=\"/ja/docs/Learn/Common_questions/What_is_a_web_server\">ウェブサーバーとは</a>、<a href=\"/ja/docs/Learn/Common_questions/What_are_hyperlinks\">ウェブ上のリンクの背後にある概念</a>を知っておく必要があります。</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">目標:</th>\n      <td>URL とは何か、ウェブ上でどう働くのかについて学習します。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"概要","title":"概要","isH3":false,"content":"<p><a href=\"/ja/docs/Glossary/Hypertext\">ハイパーテキスト</a>や <a href=\"/ja/docs/Glossary/HTTP\">HTTP</a> とともに、 <strong><em>URL</em></strong> はウェブの重要な概念の一つです。<a href=\"/ja/docs/Glossary/Browser\">ブラウザー</a>がウェブ上の公開されたリソースを取得するために使用する仕組みです。</p>\n<p><strong>URL</strong> は <em>Uniform Resource Locator</em> の略です。 URL はウェブ上の特定の一意のリソースのアドレスにすぎません。理論的には、それぞれ有効な URL は一意のリソースを指しています。そのようなリソースは HTML ページ、 CSS 文書、画像などである可能性があります。実際には一部例外もあります。最も一般的なものは、もはや存在しないリソースや移動したリソースを指す URL です。 URL で表されるリソースと URL 自体はウェブサーバーによって処理されるため、ウェブサーバーの所有者がそのリソースとその関連 URL を慎重に管理する必要があります。</p>"}},{"type":"prose","value":{"id":"基本_url_の解剖","title":"基本: URL の解剖","isH3":false,"content":"<p>URL の例を次に示します</p>\n<pre class=\"notranslate\">https://developer.mozilla.org\nhttps://developer.mozilla.org/ja/docs/Learn/\nhttps://developer.mozilla.org/ja/search?q=URL\n</pre>\n<p>これらの URL のいずれかをブラウザーのアドレスバーに入力して、関連するページ（リソース）をロードするように指示することができます。</p>\n<p>URL はさまざまな部分で構成されていますが、必須のものと任意のものもあります。次の URL を使用して最も重要な部分を見てみましょう（下記の節で詳細を提供しています）。</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Common_questions/What_is_a_URL/mdn-url-all.png\" alt=\"full URL\" width=\"2493\" height=\"241\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> URL を通常の郵便の住所として考えることもできます。スキーム (<em>scheme</em>) は利用したい郵便サービス、ドメイン名 (<em>domain name</em>) は市町村、ポート番号 (<em>port</em>) は郵便番号のようなもの、パス (<em>path</em>) は郵便物を届けるべき建物、引数 (<em>parameters</em>) はその建物の部屋番号など追加情報、アンカー (<em>anchor</em>) は実際の宛先人物を表します。</p>\n</div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> URL に関しては<a href=\"https://ja.wikipedia.org/wiki/Uniform_Resource_Locator\" class=\"external\" rel=\" noopener\">いくつかの追加の部分と追加のルール</a>がありますが、これらは普通のユーザーとウェブ開発者には関係ありません。気にしないでください。これを知る必要はありませんし、 URL のすべての機能を使用する必要もありません。</p>\n</div>"}},{"type":"prose","value":{"id":"スキーム","title":"スキーム","isH3":false,"content":"<p>\n  <img src=\"/en-US/docs/Learn/Common_questions/What_is_a_URL/mdn-url-protocol@x2_update.png\" alt=\"スキーム\" width=\"787\" height=\"140\" loading=\"lazy\">\n</p>\n<p>URL の最初の部分は<strong>スキーム</strong>で、ブラウザーがリソースをリクエストするために使用するプロトコルを示します（プロトコルとは、コンピューターネットワーク上でデータを交換または転送するための一連の手順です）。通常、ウェブサイトのプロトコルは、 HTTPS または HTTP （保護なしバージョン）です。しかし、ブラウザーは <code>mailto:</code> （メールクライアントを開く）のような他のスキームを処理する方法も知っているので、他のプロトコルを見かけても驚かないでください。</p>"}},{"type":"prose","value":{"id":"オーソリティ","title":"オーソリティ","isH3":false,"content":"<p>\n  <img src=\"/en-US/docs/Learn/Common_questions/What_is_a_URL/mdn-url-authority.png\" alt=\"オーソリティ\" width=\"900\" height=\"140\" loading=\"lazy\">\n</p>\n<p>次に<strong>オーソリティ</strong>が続きます。これはスキームから <code>://</code> の文字パターンで区切られます。オーソリティがある場合は、<strong>ドメイン</strong>（例えば <code>www.example.com</code>）と<strong>ポート番号</strong> (<code>80</code>) がコロン区切りで含まれます。</p>\n<ul>\n  <li>ドメインは、どのウェブサーバーを要求しているのかを示します。通常はドメイン名ですが、 <a href=\"/ja/docs/Glossary/IP_Address\">IP アドレス</a>を使うこともあります（ただし、これは利便性に欠けるので稀です）。</li>\n  <li>ポートは、ウェブサーバー上のリソースにアクセスするために使用される技術的な「門」 を示します。ウェブサーバーが HTTP プロトコルの標準ポート（HTTP は 80、 HTTPS は 443）を使用してリソースへのアクセスを許可している場合は、通常、この項目は省略されます。それ以外の場合は必須です。</li>\n</ul>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> スキームとオーソリティの間の区切り文字は <code>://</code> です。コロンはスキームと URL の次の部分を分離し、 <code>//</code> は URL の次の部分がオーソリティであることを示します。</p>\n  <p>オーソリティを使用しない URL の一例として、メールクライアント (<code>mailto:foobar</code>) があります。これはスキームを含んでいますが、オーソリティ部分を使用していません。したがって、コロンの後には 2 つのスラッシュがなく、スキームとメールアドレスの間の区切り文字としてのみ機能します。</p>\n</div>"}},{"type":"prose","value":{"id":"リソースへのパス","title":"リソースへのパス","isH3":false,"content":"<p>\n  <img src=\"/en-US/docs/Learn/Common_questions/What_is_a_URL/mdn-url-path@x2.png\" alt=\"ファイルへのパス\" width=\"880\" height=\"140\" loading=\"lazy\">\n</p>\n<p><code>/path/to/myfile.html</code> は、ウェブサーバー上のリソースへのパスです。初期のウェブでは、このようなパスはウェブサーバー上の物理的なファイルの場所を表していました。今日ではほとんどの場合、物理的なものではなくウェブサーバーによって処理される抽象的なものです。</p>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":false,"content":"<p>\n  <img src=\"/en-US/docs/Learn/Common_questions/What_is_a_URL/mdn-url-parameters@x2.png\" alt=\"引数\" width=\"880\" height=\"140\" loading=\"lazy\">\n</p>\n<p><code>?key1=value1&amp;key2=value2</code> は、ウェブサーバーに提供される追加の引数です。これらの引数は <code>&amp;</code> 記号で区切られたキー/値の組のリストです。ウェブサーバーは、リソースを返す前にこれらの引数を使用して追加の処理を行うことができます。各ウェブサーバーには引数に関する独自のルールがありますので、特定のウェブサーバーが引数を処理するかどうかを確認する確実な方法は、ウェブサーバーの所有者に問い合わせることだけです。</p>"}},{"type":"prose","value":{"id":"アンカー","title":"アンカー","isH3":false,"content":"<p>\n  <img src=\"/en-US/docs/Learn/Common_questions/What_is_a_URL/mdn-url-anchor@x2.png\" alt=\"アンカー\" width=\"880\" height=\"140\" loading=\"lazy\">\n</p>\n<p><code>#SomewhereInTheDocument</code> は、リソース自体の別の部分へのアンカーです。アンカーはリソース内の一種の「ブックマーク」を表し、ブラウザーにそのブックマークされた場所にあるコンテンツを表示するための指示を与えます。たとえば、 HTML 文書では、ブラウザーはアンカーが定義されている位置までスクロールします。ビデオやオーディオ文書では、ブラウザーはアンカーが表す時刻に移動しようとします。 <strong>#</strong> の後の部分は<strong>フラグメント識別子</strong>とも呼ばれ、リクエストとともにサーバーに送信されることはありません。</p>"}},{"type":"prose","value":{"id":"url_の使い方","title":"URL の使い方","isH3":true,"content":"<p>ブラウザーのアドレスバーの中に正しく URL を入力すれば、それに対応するリソースを得ることができます。しかし、これは氷山の一角にすぎません。</p>\n<p><a href=\"/ja/docs/Glossary/HTML\">HTML</a> 言語では — <a href=\"/ja/docs/Learn/HTML/Introduction_to_HTML\">後述しますが</a> — URL を幅広く使用しています。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a> 要素により、他の文書へのリンクを生成する</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> や <a href=\"/ja/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> のような様々な要素を介して、文書を関連するリソースと結びつける</li>\n  <li>画像（<a href=\"/ja/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> 要素による）、動画（<a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素による）、音声と音楽（<a href=\"/ja/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> 要素による）などのメディアを表示する</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> 要素により、他の HTML 文書を表示する</li>\n</ul>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> URL を指定してページの一部としてリソースを読み込む際（<code>&lt;script&gt;</code>, <code>&lt;audio&gt;</code>, <code>&lt;img&gt;</code>, <code>&lt;video&gt;</code> を使用する場合など）は、 HTTP と HTTPS の URL のみを使用してください。いくつかの例外はあります（注目すべきは <code>data:</code> です。<a href=\"/ja/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\">データ URL</a> を参照してください）。たとえば FTP を使用しても、安全になることはなく、多くのブラウザーでは対応していません。</p>\n</div>\n<p><a href=\"/ja/docs/Glossary/CSS\">CSS</a> や <a href=\"/ja/docs/Glossary/JavaScript\">JavaScript</a> などの他の技術は、URL を広範囲に使用し、真にウェブの中核です。</p>"}},{"type":"prose","value":{"id":"絶対_url_と相対_url","title":"絶対 URL と相対 URL","isH3":false,"content":"<p>上記で見たものは<strong>絶対 URL</strong> と呼ばれていますが、<strong>相対 URL</strong> と呼ばれるものもあります。 <a href=\"https://url.spec.whatwg.org/#absolute-url-string\" class=\"external\" rel=\" noopener\">URL 標準</a>では両方が定義されています。 — ここでは<a href=\"https://url.spec.whatwg.org/#absolute-url-string\" class=\"external\" rel=\" noopener\"><em>絶対 URL 文字列</em></a>および<a href=\"https://url.spec.whatwg.org/#relative-url-string\" class=\"external\" rel=\" noopener\"><em>相対 URL 文字列</em></a>という言葉が使われています。これは <a href=\"https://url.spec.whatwg.org/#url\" class=\"external\" rel=\" noopener\">URL オブジェクト</a>（URL のメモリー内の表現）と区別するためです。</p>\n<p>URL のコンテキストで<em>絶対</em>と<em>相対</em>の意味の違いを確認してみましょう。</p>\n<p>URL の必須部分は、その URL が使用されているコンテキストによって大きく異なります。ブラウザーのアドレスバーでは、 URL にはコンテキストがありません。そのため、上で見たように、完全（または<strong>絶対</strong>） URL を指定する必要があります。プロトコル（ブラウザーは既定で HTTP を使用します）やポート番号（対象となるウェブサーバーが通常以外のポートを使用している場合にのみ必要）を含める必要はありませんが、 URL の他の部分はすべて必要です。</p>\n<p>HTML ページ内など、文書内で URL が使用されている場合は状況が少し異なります。ブラウザーはすでに文書自身の URL を持っているので、この情報を文書内で利用される URL の欠けている部分を補うために利用することができます。<strong>絶対 URL</strong> と<strong>相対 URL</strong> は、 URL の<strong>パス</strong>の部分を見るだけで区別することができます。 URL のパスの部分が \"<code>/</code>\" の文字で始まっていれば、ブラウザーは現在の文書で指定されているコンテキストを参照せずに、サーバーの最上位のルートからそのリソースを取得します。</p>\n<p>これを明確にするためにいくつかの例を見てみましょう。</p>"}},{"type":"prose","value":{"id":"絶対_url_の例","title":"絶対 URL の例","isH3":true,"content":"<table>\n  <tbody>\n    <tr>\n      <td>完全 URL (以前に使用したものと同じ)</td>\n      <td>\n        <pre class=\"notranslate\">https://developer.mozilla.org/ja/docs/Learn</pre>\n      </td>\n    </tr>\n    <tr>\n      <td>暗黙のプロトコル</td>\n      <td>\n        <pre class=\"notranslate\">//developer.mozilla.org/ja/docs/Learn</pre>\n        <p>この場合、ブラウザーはその URL をホストしている文書を読み込むために使用されたものと同じプロトコルで、その URL を呼び出します。</p>\n      </td>\n    </tr>\n    <tr>\n      <td>暗黙のドメイン名</td>\n      <td>\n        <pre class=\"notranslate\">/ja/docs/Learn</pre>\n        <p>\n          これは、 HTML 文書内の絶対 URL の最も一般的な使用例です。ブラウザーは、その URL をホストしている文書を読み込むために使用されたものと同じプロトコルおよび同じドメイン名を使用します。\n          **メモ:**\n          <em>プロトコルを省略せずにドメイン名だけ省略することはできません。</em>\n        </p>\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"相対_url_の例","title":"相対 URL の例","isH3":true,"content":"<p>次の例をよく理解するために、これらの URL が <code>https://developer.mozilla.org/ja/docs/Learn</code> という URL にある文書内から呼び出されると仮定しましょう。</p>\n<table>\n  <tbody>\n    <tr>\n      <td>サブリソース</td>\n      <td>\n        <pre class=\"notranslate\">Skills/Infrastructure/Understanding_URLs</pre>\n        <p>URL が `/` で始まっていないので、ブラウザーは現在のリソースを含んでいるディレクトリーのサブディレクトリーでその文書を見つけようとします。そのため、この例では本当に達したい URL である次の URL に達します。<br>https://developer.mozilla.org/ja/docs/Learn/Skills/Infrastructure/Understanding_URLs.</p>\n      </td>\n    </tr>\n    <tr>\n      <td>ディレクトリーツリー内をさかのぼる</td>\n      <td>\n        <pre class=\"notranslate\">../CSS/display</pre>\n        <p>この場合、 UNIX ファイルシステムの世界から継承された `../` の表記規則を使用して、ブラウザーにあるディレクトリーの上に移動したいことを伝えます。つまり、次の URL にアクセスしようとします。<br>https://developer.mozilla.org/ja/docs/Learn/../CSS/display<br>これは、次のように単純化することができます。<br>https://developer.mozilla.org/ja/docs/CSS/display</p>\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"セマンティック_url","title":"セマンティック URL","isH3":true,"content":"<p>URL はとても技術的な香りがするにもかかわらず、人間が読めるウェブサイトの入口を表します。覚えやすく、誰でもブラウザーのアドレスバーに入力することができます。人々はウェブの中核にいるので、<a href=\"https://en.wikipedia.org/wiki/Semantic_URL\" class=\"external\" rel=\" noopener\"><strong>セマンティック URL</strong></a> と呼ばれるものを構築することがベストプラクティスと考えられています。セマンティック URL は、技術的な知識に関係なく、誰でも理解できる固有の意味を持つ単語を使用します。</p>\n<p>言語的セマンティックはもちろんコンピューターとは無関係です。おそらくランダムな文字を組み合わせたように見える URL を見たことがあるでしょう。しかし、人間が読める URL を作成することには多くの利点があります。</p>\n<ul>\n  <li>より操作しやすくなります。</li>\n  <li>ウェブ上のどこにいるのか、何をしているのか、何を読んでいるのか、何と対話しているかといった観点のことが、ユーザーにとって明確になります。</li>\n  <li>検索エンジンによっては、関連するページを分類するためにこれらのセマンティックを使用することがあります。</li>\n</ul>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<p><a href=\"/ja/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\">データ URL</a> — データ URL とは、 URL の前に<code>data:</code>スキームを付けたもので、コンテンツ制作者が小さなファイルを文書内にインラインで埋め込むことを可能にします。</p>"}}],"toc":[{"text":"概要","id":"概要"},{"text":"基本: URL の解剖","id":"基本_url_の解剖"},{"text":"スキーム","id":"スキーム"},{"text":"オーソリティ","id":"オーソリティ"},{"text":"リソースへのパス","id":"リソースへのパス"},{"text":"引数","id":"引数"},{"text":"アンカー","id":"アンカー"},{"text":"絶対 URL と相対 URL","id":"絶対_url_と相対_url"},{"text":"関連情報","id":"関連情報"}],"summary":"この記事では URL (Uniform Resource Locator) について説明し、その内容と構造を説明します。","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"What is a URL?","locale":"en-US","native":"English (US)"},{"title":"¿Qué es una URL?","locale":"es","native":"Español"},{"title":"Comprendre les URL et leur structure","locale":"fr","native":"Français"},{"title":"What is a URL?","locale":"ko","native":"한국어"},{"title":"Что такое URL-адрес?","locale":"ru","native":"Русский"},{"title":"什么是 URL？","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/learn/common_questions/what_is_a_url","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/learn/common_questions/what_is_a_url/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Learn","title":"ウェブ開発を学ぶ"},{"uri":"/ja/docs/Learn/Common_questions","title":"よくある質問"},{"uri":"/ja/docs/Learn/Common_questions/What_is_a_URL","title":"URL とは？"}],"pageTitle":"URL とは？ - ウェブ開発を学ぶ | MDN","noIndexing":false}}