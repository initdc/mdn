{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"どうすればすべての種類のユーザーのためにデザインすることができるか？","mdn_url":"/ja/docs/Learn/Common_questions/Design_for_all_types_of_users","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>この記事ではあらゆる種類のユーザーのためのウェブサイトを設計する基本的なヒントを紹介します。</p>\n<table class=\"standard-table\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">前提条件:</th>\n      <td>ここではアクセシビリティに応じた詳細な説明はしていませんので、まず<a href=\"/ja/docs/Learn/Common_questions/What_is_accessibility\">アクセシビリティとは何か</a>を読んでください。</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">目標:</th>\n      <td>ユニバーサルデザインとは、障碍や技術的な制約に関係なく、すべての人のためにデザインすることを意味します。この記事では、ユニバーサルデザインのための最も重要な即効性のある方法を挙げています。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"概要","title":"概要","isH3":false,"content":"<p>ウェブサイトを構築する際、最も考慮すべき課題のひとつが<a href=\"https://en.wikipedia.org/wiki/Universal_design\" class=\"external\" rel=\" noopener\">ユニバーサルデザイン</a>です。障碍の有無、技術的制約、文化、場所などにかかわらず、すべてのユーザーに対応することです。</p>"}},{"type":"prose","value":{"id":"アクティブラーニング","title":"アクティブラーニング","isH3":false,"content":"<p><em>利用可能なアクティブラーニングはまだありません。<a href=\"/ja/docs/MDN/Community/Contributing/Getting_started\">ぜひ協力をご検討ください</a>。</em></p>"}},{"type":"prose","value":{"id":"より深く掘り下げる","title":"より深く掘り下げる","isH3":false,"content":""}},{"type":"prose","value":{"id":"カラーコントラスト","title":"カラーコントラスト","isH3":true,"content":"<p>文字を読みやすくするために、背景色とのコントラストが高い文字色を使用しましょう。視覚障碍者や街中でスマホを使用する人のために、テキストは特に読みやすくしましょう。</p>\n<p><a href=\"/ja/docs/Glossary/W3C\">W3C</a> では、前景と背景の輝度の比を計算するアルゴリズムで、良い色の混合を定義しています。計算がかなり複雑に思えるかもしれませんが、その仕事を代行してくれるツールに頼ることができます。</p>\n<p>Paciello Group の <a href=\"https://www.tpgi.com/color-contrast-checker/\" class=\"external\" rel=\" noopener\">Color Contrast Analyser</a> をダウンロードし、インストールしてみましょう。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 他にも、WebAIM の <a href=\"https://webaim.org/resources/contrastchecker/\" class=\"external\" rel=\" noopener\">Color Contrast Checker</a> のようなコントラストチェッカーがオンライン上に多数あります。ローカルチェッカーをお勧めするのは、色の数値を探すための画面上のカラーピッカーがパッケージされているからです。</p>\n</div>\n<p>\n  例えば、このページの色をカラーコントラストアナライザーで調べて、結果を確認してみましょう。\n  \n  <img src=\"/en-US/docs/Learn/Common_questions/Design_for_all_types_of_users/color-contrast.png\" alt=\"Color contrast on this page: excellent!\" width=\"799\" height=\"575\" loading=\"lazy\">\n</p>\n<p>文字と背景の輝度コントラスト比は 8.30:1 で、最低基準 (4.5:1) を超えており、多くの視覚障碍者がこのページを読むことができるはずです。</p>"}},{"type":"prose","value":{"id":"フォントサイズ","title":"フォントサイズ","isH3":true,"content":"<p>ウェブサイトにおけるフォントサイズは、相対単位でも絶対単位でも指定することができます。</p>\n<h4 id=\"絶対単位\">絶対単位</h4>\n<p>絶対単位とは、比率計算ではなく、いわば設定された大きさを参照するもので、ほとんどの場合、ピクセル (<code>px</code>) で表現されます。例えば、 CSS でこのように宣言した場合、</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>16px<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>… これは、何が起ころうともフォントサイズは 16 ピクセルでなければならない、とブラウザーに指示していることになります。最近のブラウザーは、「ユーザーが拡大率を 100% に設定したときの 16 ピクセル」を依頼しているように装うことで、このルールを回避しています。</p>\n<p>しかし、 Internet Explorer は長年、 16 ピクセルを頑なに 16 ピクセルと表示していました。 Internet Explorer 8 に至るまで、拡大縮小しても何も起こりませんでした。まだ存在しているため、私たちは合わせなければなりません。</p>\n<h4 id=\"相対単位\">相対単位</h4>\n<p><strong>比例単位</strong>とも呼ばれる相対単位は、親要素を基準として計算されます。相対単位は、ユーザーのシステムの設定を尊重するため、アクセシビリティに友好的です。</p>\n<p>相対単位は&nbsp;<code>em</code>&nbsp;、<code>%</code>&nbsp;や&nbsp;<code>rem</code> で表現されます。</p>\n<dl>\n  <dt id=\"パーセントベースのサイズ\">パーセントベースのサイズ: <code>%</code></dt>\n  <dd>\n    <p>この単位は、ある要素のフォントサイズが、フォントサイズが表現された前の要素の N% でなければならないことを、ブラウザーに指示します。親要素が見つからない場合、ブラウザー内の既定値を基本サイズとして計算します（通常は 16 ピクセルに相当します）。</p>\n  </dd>\n  <dt id=\"em_ベースのサイズ\">em ベースのサイズ: <code>em</code></dt>\n  <dd>\n    <p>この単位は、 100 分の 1 ではなく、 1 分の 1 で計算することを除けば、パーセントと同じように計算します。 \"em\" はアルファベットの大文字 \"M\" の幅と言われています（大雑把に言うと \"M\" が四角に収まる）。</p>\n  </dd>\n  <dt id=\"rem_ベースのサイズ\">rem ベースのサイズ: <code>rem</code></dt>\n  <dd>\n    <p>この単位はルート要素のフォントサイズに比例し、 <code>em</code> のように 1 分の 1 で表現されます。</p>\n  </dd>\n</dl>\n<p>例えば、基本のフォントサイズを 16px、h1 （大見出し）を 32px 相当で表示したいとします。しかし、 h1 の中に <code>subheading</code> クラスの <code>span</code> を見つけると、それも既定のフォントサイズ（通常は 16px）でレンダリングしなければならないので、このようにします。</p>\n<p>以下は、使用している HTML の例です。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Font size experiment<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>This is our main heading\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>subheading<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>This is our subheading<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>パーセントベースの CSS は、次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>100%<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">/* ブラウザーの基本フォントサイズの 100% なので、ほとんどの場合、16 ピクセルとしてレンダリングされます。 */</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>200%<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">/* 本文の 2 倍の大きさなので 32 ピクセル */</span>\n<span class=\"token selector\">span.subheading</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>50%<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">/* h1 の半分の大きさ、つまり 16 ピクセルで元のサイズに戻ります。 */</span>\n</code></pre></div>\n<p>em でも同じ問題が発生します。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>1em<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">/* 1em = ブラウザーの基本フォントサイズの 100% なので、ほとんどの場合、16 ピクセルとしてレンダリングされます。 */</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>2em<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">/* 本文の 2 倍の大きさなので 32 ピクセル */</span>\n<span class=\"token selector\">span.subheading</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>0.5em<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">/* h1 の半分の大きさ、つまり 16 ピクセルで元のサイズに戻ります。 */</span>\n</code></pre></div>\n<p>ご覧のように、親、親の親、親の親の親などを保有しなければならない場合、計算はすぐに大変なことになります。(ほとんどのデザインはピクセルベースのソフトウェアで行われるため、計算は CSS をコーディングする人が行わなければなりません)。</p>\n<p>そこで登場するのが <code>rem</code> です。この単位はルート要素のサイズに対する相対的なもので、他の親要素に対するものではありません。 CSS はこのように書き換えることができます。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>1em<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">/* 1em = ブラウザーの基本フォントサイズの 100% なので、ほとんどの場合、16 ピクセルとしてレンダリングされます。 */</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>2rem<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">/* 本文の 2 倍の大きさなので 32 ピクセル */</span>\n<span class=\"token selector\">span.subheading</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span>1rem<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">/* 元のサイズ */</span>\n</code></pre></div>\n<p>もっと簡単でしょう？これは、 <a href=\"https://caniuse.com/#search=rem\" class=\"external\" rel=\" noopener\">Internet Explorer 9 と他のすべての現行ブラウザーで</a>の時点で動作するので、この単位は気軽に使用してください。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Opera Mini は rem のフォントサイズに対応していないことにお気づきかもしれません。結局は独自のフォントサイズを設定することになるので、わざわざフォント単位を与える必要はありません。</p>\n</div>\n<h4 id=\"なぜ比例単位を使用するのか\">なぜ比例単位を使用するのか</h4>\n<p>なぜなら、いつピクセル単位で表記されたテキストの拡大表示を拒否するブラウザーが現れるかわからないからです。また、あなたのウェブサイトの統計情報を確認してください。古いブラウザーからの訪問を受ける可能性があります。</p>\n<p>次のことをアドバイスします。</p>\n<ul>\n  <li>フォントを <code>rem</code> 単位で記述すると、ほとんどのブラウザーはとても満足するはずです。</li>\n  <li>古いブラウザーには、自身の内部エンジンでフォントを表示させましょう。ブラウザーのエンジンは、CSS のプロパティや 値に対応できない場合は無視するので、デザイナーのビジョンに忠実でなくても、ウェブサイトが使用できるようになります。古いブラウザーは、いずれは消えていくものです。</li>\n</ul>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> ご使用のブラウザーによって異なるかもしれません。古いブラウザーに合わせなければならない場合は、 <code>em</code> を使用し、もう少し計算する必要があります。</p>\n</div>"}},{"type":"prose","value":{"id":"行の長さ","title":"行の長さ","isH3":true,"content":"<p>ウェブ上の行の長さについては、長年の議論がありますが、ここではその話をします。新聞があった頃、印刷会社は、行が長すぎると読者の目が次の行に行きにくくなることに気づきました。その解決策は？段組みです。</p>\n<p>もちろん、ウェブに移行してもこの問題は解消さ れません。読者の目は、行から行へと移動するシャトルのようなものです。目に優しくするためには、行の幅を 60 文字か 70 文字程度に制限することです。（訳注：日本語では 40 文字程度と言われています。）</p>\n<p>そのためには、テキストのコンテナーの大きさを指定します。この HTML を考えてみましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Font size experiment<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>This is our main heading\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>subheading<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>This is our subheading<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>[lengthy text that spans many lines]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>ここに、<code>container</code> クラスを持つ <code>div</code> があります。この <code>div</code> には、幅を設定する（<code>width</code> プロパティを使用する）か、大きすぎないように最大幅を設定する（<code>max-width</code> プロパティを使用する）かのどちらかのスタイルを設定することができます。もし、伸縮性のあるレスポンシブなウェブサイトを作りたいが、ブラウザーの既定の幅が分からない場合は、 <code>max-width</code> プロパティを使用して、 1 行に 70 文字まで許容し、それ以上は許容しないようにすることができます。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">div.container</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span>70em<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"画像、音声、動画の代替コンテンツ","title":"画像、音声、動画の代替コンテンツ","isH3":true,"content":"<p>ウェブサイトには、プレーンテキスト以外のものが入ることがよくあります。</p>\n<h4 id=\"画像\">画像</h4>\n<p>画像には装飾的なものと情報的なものがありますが、ユーザーに見てもらえるという保証はありません。例えば、以下のような場合です。</p>\n<ul>\n  <li>視覚障碍者は、テキストしか扱えない画面リーダーに頼っています。</li>\n  <li>読者が、 <a href=\"/ja/docs/Glossary/CDN\">CDN</a> から発信される画像をブロックする非常に厳しいイントラネットを使用している可能性があります。</li>\n  <li>読者が、特にモバイル機器の帯域幅を節約するために、画像を無効にしている可能性があります （下記参照）。</li>\n</ul><!---->\n<dl>\n  <dt id=\"装飾的な画像\">装飾的な画像</dt>\n  <dd>\n    <p>これらは単なる装飾であり、実際の情報を伝えるものではありません。ほとんどの場合、背景画像で置き換えることができます。空の <code>alt</code> 属性があることを確認してください。 <code>&lt;img src=\"deco.gif\" alt=\"\"&gt;</code> のように、テキストが詰まることがないようにします。</p>\n  </dd>\n  <dt id=\"情報的な画像\">情報的な画像</dt>\n  <dd>\n    <p>情報を伝えるために使用されることから、その名がつきました。例えば、グラフを表示したり、人の身振りを表示したり、その他の情報を表示することができます。少なくとも、関連する <code>alt</code> 属性を提供する必要があります。</p>\n  </dd>\n</dl>\n<p>画像が簡潔に記述できるのであれば、<code>alt</code>属性を提供すればよく、それ以上のことをする必要はありません。画像が簡潔に記述できない場合は、同じページで同じ内容を別の形で提供するか（例えば、円グラフを同じデータを提供する表で補完する）、あるいは <code>longdesc</code> 属性に頼らなければならないでしょう。この属性の値は、画像の内容を詳細に記述したリソースを明示的に指す URL です。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> <code>longdesc</code> を使用すること、さらにはその存在については、かなり長い間議論されてきました。 W3C の <a href=\"https://www.w3.org/TR/html-longdesc/\" class=\"external\" rel=\" noopener\">Image Description Extension (longdesc)</a> を参照すると、詳しい説明と徹底的な例が載っています。</p>\n</div>\n<h4 id=\"音声動画\">音声/動画</h4>\n<p>マルチメディアコンテンツの代替も提供することが必要です。</p>\n<dl>\n  <dt id=\"字幕／クローズキャプション\">字幕／クローズキャプション</dt>\n  <dd>\n    <p>音声が聞こえない訪問者のために、動画にキャプションを入れる必要があります。ユーザーの中には、聴覚障害をお持ちの方や、スピーカーが機能しない方、（電車の中など）騒がしい環境で作業している方もいます。</p>\n  </dd>\n  <dt id=\"文字起こし\">文字起こし</dt>\n  <dd>\n    <p>字幕は、誰かが動画を見て初めて機能するものです。多くのユーザーは時間がなかったり、適切なプラグインやコーデックがなかったりします。さらに、検索エンジンは、コンテンツをインデックスするために、主にテキストに頼っています。これらの理由から、動画/音声ファイルをテキストで書き起こしたものを提供してください。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"画像の圧縮","title":"画像の圧縮","isH3":true,"content":"<p>ユーザーによっては、画像を表示することを選んでも、特に発展途上国やモバイル機器では、利用できる帯域幅が限られている場合があります。ウェブサイトを成功させたいのであれば、画像を圧縮してください。オンラインでもローカルでも、様々なツールがあります。</p>\n<ul>\n  <li><strong>インストールするソフトウェア</strong> <a href=\"https://imageoptim.com/api\" class=\"external\" rel=\" noopener\">ImageOptim</a> (Mac)、<a href=\"http://optipng.sourceforge.net/\" class=\"external\" rel=\" noopener\">OptiPNG</a> （全プラットフォーム）、<a href=\"https://pmt.sourceforge.io/pngcrush/\" class=\"external\" rel=\" noopener\">PNGcrush</a> （DOS、Unix/Linux）</li>\n  <li><strong>オンラインツール</strong> Dynamic drive の <a href=\"https://tools.dynamicdrive.com/imageoptimizer/\" class=\"external\" rel=\" noopener\">Online Image Optimizer</a> （帯域幅がより有効になるように、ある形式から別の形式に自動的に変換することができます。）</li>\n</ul>"}}],"toc":[{"text":"概要","id":"概要"},{"text":"アクティブラーニング","id":"アクティブラーニング"},{"text":"より深く掘り下げる","id":"より深く掘り下げる"}],"summary":"この記事ではあらゆる種類のユーザーのためのウェブサイトを設計する基本的なヒントを紹介します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"How can we design for all types of users?","locale":"en-US","native":"English (US)"},{"title":"Concevoir un site pour toutes les personnes","locale":"fr","native":"Français"},{"title":"Как создать дизайн, подходящий для всех пользователей?","locale":"ru","native":"Русский"}],"source":{"folder":"ja/learn/common_questions/design_for_all_types_of_users","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/learn/common_questions/design_for_all_types_of_users/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Learn","title":"ウェブ開発を学ぶ"},{"uri":"/ja/docs/Learn/Common_questions","title":"よくある質問"},{"uri":"/ja/docs/Learn/Common_questions/Design_for_all_types_of_users","title":"どうすればすべての種類のユーザーのためにデザインすることができるか？"}],"pageTitle":"どうすればすべての種類のユーザーのためにデザインすることができるか？ - ウェブ開発を学ぶ | MDN","noIndexing":false}}