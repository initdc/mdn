{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"GitHub Pages を使うには？","mdn_url":"/ja/docs/Learn/Common_questions/Using_Github_pages","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"https://github.com/\" class=\"external\" rel=\" noopener\">GitHub</a> は「ソーシャルコーディング」のサイトです。 <a href=\"https://git-scm.com/\" class=\"external\" rel=\" noopener\">Git</a> <strong>バージョン管理システム</strong>のストレージに対して、ソースコードリポジトリーのアップロードを許可します。その後、コードプロジェクトで共同作業を行うことができます。また、システムはオープンソースに自動設定されています。つまり、世界中の誰もが GitHub コードを検索・使用また、そこから学習しコードを改善することができます。他の人のコードでもそれが可能です！この記事は GitHub の gh-pages 機能を使って、公開コンテンツに関する基本的なガイドを提供します。</p>"}},{"type":"prose","value":{"id":"公開コンテンツ","title":"公開コンテンツ","isH3":false,"content":"<p>GitHub は非常に重要で役に立つコミュニティの一つで、Git / GitHub は非常に人気のある<a href=\"http://git-scm.com/book/en/v2/Getting-Started-About-Version-Control\" class=\"external\" rel=\" noopener\">バージョン管理システム</a>です。現在、ほとんどのハイテク企業がワークフローでそれを使用しています。 GitHub は <a href=\"https://pages.github.com/\" class=\"external\" rel=\" noopener\">GitHub Pages</a> と呼ばれるとても便利な機能を持っています。これでウェブ上にライブでウェブサイトのコードを公開することが可能です。</p>"}},{"type":"prose","value":{"id":"github_の基本設定","title":"GitHub の基本設定","isH3":true,"content":"<ol>\n  <li>初めに、システムに <a href=\"http://git-scm.com/downloads\" class=\"external\" rel=\" noopener\">Git をインストール</a>してください。これは GitHub が動作する基盤となるバージョン管理システムのソフトウェアです。</li>\n  <li>次に、<a href=\"https://github.com/join\" class=\"external\" rel=\" noopener\">GitHub アカウント</a>に<a href=\"/ja/docs/Web\">サインアップ</a>します。それは単純かつ簡単です。</li>\n  <li>サインアップしたら、ユーザー名とパスワードを使って <a href=\"https://github.com\" class=\"external\" rel=\" noopener\">github.com</a> &nbsp;にログインします。</li>\n</ol>"}},{"type":"prose","value":{"id":"ソースコードのアップロード準備","title":"ソースコードのアップロード準備","isH3":true,"content":"<p>GitHub リポジトリーに好きなコードを保存できますが、GitHub Pages 機能を最大限に活用するには、コードを典型的なウェブサイトとして構成する必要があります。主なエントリーポイントは、<code>index.html</code> という HTML ファイルです。</p>\n<p>次に進む前に、自身のコードディレクトリーを Git リポジトリーとして初期化する必要があります。このために、以下のことを実行してください:</p>\n<ol>\n  <li>コマンドラインで <code>test-site</code> のディレクトリー (またはウェブサイトを含むディレクトリーと呼んだもの) を指定します。これには、<code>cd</code> コマンドを使用します (つまり、「ディレクトリーの変更」)。ウェブサイトをデスクトップの <code>test-site</code> というディレクトリーに配置した場合は、次のように入力します。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token builtin class-name\">cd</span> Desktop/test-site\n</code></pre></div>\n  </li>\n  <li>コマンドラインがウェブサイトのディレクトリー内を指しているときに、次のコマンドを入力します。これは <code>git</code> ツールに、そのディレクトリーを git リポジトリーにするように指示するものです。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> init\n</code></pre></div>\n  </li>\n</ol>\n<h4 id=\"コマンドラインインターフェイスの余談\">コマンドラインインターフェイスの余談</h4>\n<p>GitHub にコードをアップロードする最良の方法は、コマンドラインを使用することです。これは、ユーザーインターフェイス内をクリックするのではなく、ファイルを作成・プログラム実行のような動作のためのコマンドを入力するウィンドウです。それは次のようなものです:</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Common_questions/Using_Github_pages/command-line.png\" alt=\"\" width=\"697\" height=\"478\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> コマンドラインに不安がある場合は、<a href=\"/ja/docs/Web\">Git グラフィカルユーザーインターフェイス</a>を使用して、同じ作業を行うことも検討できます。</p>\n</div>\n<p>すべてのオペレーティングシステムには、コマンドラインツールが付属しています。</p>\n<ul>\n  <li><strong>Windows</strong>: Windows のキーを押して、<strong>コマンドプロンプト</strong>と入力し、表示されるリストから選択すると、<strong>コマンドプロンプト</strong>にアクセスできます。Windows は、Linux や OS X とは異なる、独自のコマンド規約を持っているので、下記のコマンドは、あなたのマシンでは異なるかもしれません。</li>\n  <li><strong>OS X</strong>: <strong>ターミナル</strong>は、<strong>アプリケーション &gt; ユーティリティ</strong>にあります。</li>\n  <li><strong>Linux</strong>: 通常、<strong>Ctrl + Alt + T</strong> で端末を起動できます。それでもうまくいかない場合は、アプリバーまたはメニューで<strong>ターミナル</strong>を探します。</li>\n</ul>\n<p>これには最初は、少し戸惑うかもしれませんが、心配しないでください — すぐに基本のコツをつかむでしょう。上記のようにコマンドを入力して、 Enter キーを押すことで、端末で動作するようにコンピューターに指示します。</p>"}},{"type":"prose","value":{"id":"ソースコードのリポジトリーの作成","title":"ソースコードのリポジトリーの作成","isH3":true,"content":"<ol>\n  <li>次に、ファイルを保存するための新しいリポジトリーを作成する必要があります。GitHub ホームページの右上にあるプラス (+) をクリックしてから、<strong>新しいリポジトリー</strong> を選択します。</li>\n  <li>このページの<strong>リポジトリー名ボックス</strong> に、ソースコードのリポジトリー名 (例:<strong>my-repository</strong>) を入力します。</li>\n  <li>\n    また、説明を入力することで、リポジトリーに何を格納しようとしているのかを記述します。画面は次のようなものです。\n    \n    <img src=\"/en-US/docs/Learn/Common_questions/Using_Github_pages/create-new-repo.png\" alt=\"\" width=\"800\" height=\"548\" loading=\"lazy\">\n  </li>\n  <li>\n    <strong>Create repository</strong> をクリックします。これにより、次のページに移動します。\n    \n    <img src=\"/en-US/docs/Learn/Common_questions/Using_Github_pages/github-repo.png\" alt=\"\" width=\"800\" height=\"520\" loading=\"lazy\">\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"github_へのファイルのアップロード","title":"GitHub へのファイルのアップロード","isH3":true,"content":"<ol>\n  <li>現在のページのこの節、<em>既存のリポジトリーをコマンドラインからプッシュする</em>ことに興味があるわけですね。この節に 2 行のコードが並んでいるはずです。最初の行全体をコピーしてコマンドラインに貼り付け、 Enter キーを押してください。コマンドは次のようなものです。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://github.com/chrisdavidmills/my-repository.git\n</code></pre></div>\n  </li>\n  <li>次に、次の 2 つのコマンドを入力して、それぞれの後に Enter キーを押します。これらは、コードを GitHub にアップロードする準備をし、これらのファイルを管理するように Git に依頼するものです。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> <span class=\"token function\">add</span> --all\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">'adding my files to my repository'</span>\n</code></pre></div>\n  </li>\n  <li>最後に、表示されている 2 つのコマンドの内、2 番目のコマンドを端末に入力する、または、コマンドラインセクションから既存のリポジトリーをプッシュして」、コードを GitHub にプッシュします。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> push -u origin main\n</code></pre></div>\n  </li>\n  <li>ここで、リポジトリーの GitHub Pages を有効にする必要があります。これを行うには、リポジトリーのトップページから <em>Settings</em> を選び、左のサイドバーから <em>Pages</em> を選択します。 <em>Source</em> の下にある \"main\" ブランチを選びます。ページが更新されるはずです。</li>\n  <li>GitHub Pages セクションに再度アクセスすると、<code>Your site is ready to be published at https://xxxxxx.</code> という行が表示されるはずです。</li>\n  <li>この URL をクリックすると、ホームページが <code>index.html</code> という名前であれば、例のライブバージョンに移動するはずです - このエントリーポイントに既定値で移動します。もし、あなたのサイトのエントリーポイントが何か別のもの、例えば <code>myPage.html</code> と呼ばれている場合は、 <code>https://xxxxxx/myPage.html</code> にアクセスする必要があります。</li>\n</ol>"}},{"type":"prose","value":{"id":"github_の詳細","title":"GitHub の詳細","isH3":true,"content":"<p>テストサイトにさらに変更を加えて、GitHub にアップロードしたい場合は、以前と同じようにファイルに変更を加えるだけです。それから、以下のコマンドを入力して (それぞれ Enter キーを押して) GitHub にそれらの変更をプッシュする必要があります。</p>\n<pre class=\"notranslate\">git add --all\ngit commit -m 'another commit'\ngit push\n</pre>\n<p><em>another commit</em> をより適切なメッセージに置き換えることで、今何を変更したかを記述することができます。</p>\n<p>私たちは、Git の表面に触れたにすぎません。詳細については、 <a href=\"/ja/docs/Learn/Tools_and_testing/GitHub\">Git と GitHub</a> を参照してください。</p>"}}],"toc":[{"text":"公開コンテンツ","id":"公開コンテンツ"}],"summary":"GitHub は「ソーシャルコーディング」のサイトです。 Git バージョン管理システムのストレージに対して、ソースコードリポジトリーのアップロードを許可します。その後、コードプロジェクトで共同作業を行うことができます。また、システムはオープンソースに自動設定されています。つまり、世界中の誰もが GitHub コードを検索・使用また、そこから学習しコードを改善することができます。他の人のコードでもそれが可能です！この記事は GitHub の gh-pages 機能を使って、公開コンテンツに関する基本的なガイドを提供します。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"How do I use GitHub Pages?","locale":"en-US","native":"English (US)"},{"title":"¿Cómo se utiliza Github pages?","locale":"es","native":"Español"},{"title":"Utiliser les pages GitHub","locale":"fr","native":"Français"},{"title":"How do I use GitHub Pages?","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Как использовать GitHub Pages?","locale":"ru","native":"Русский"},{"title":"应该如何使用 Github Pages?","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/learn/common_questions/using_github_pages","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/learn/common_questions/using_github_pages/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Learn","title":"ウェブ開発を学ぶ"},{"uri":"/ja/docs/Learn/Common_questions","title":"よくある質問"},{"uri":"/ja/docs/Learn/Common_questions/Using_Github_pages","title":"GitHub Pages を使うには？"}],"pageTitle":"GitHub Pages を使うには？ - ウェブ開発を学ぶ | MDN","noIndexing":false}}