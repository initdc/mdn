{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Call stack (コールスタック)","mdn_url":"/ja/docs/Glossary/Call_stack","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>コールスタック</strong> (call stack) は、インタープリター (ウェブブラウザー内の JavaScript インタープリターなど) の仕組みの一つで、複数階層の<a href=\"/ja/docs/Glossary/Function\">関数</a>を呼び出したスクリプト内の位置を追跡し続けることです。 — どの関数が現在実行されているのか、その関数の中でどの関数が呼び出されたか、などです。</p>\n<ul>\n  <li>スクリプトが関数を呼び出すとき、インタープリターはそれをコールスタックに追加し、それから関数の実行を始めます。</li>\n  <li>その関数から呼び出されたどの関数も、コールスタックのその上に追加され、呼び出し先を実行します。</li>\n  <li>現在の関数が終了すると、インタープリターはスタックからそれを外し、最後のコードがリストされている場所から実行を再開します。</li>\n  <li>スタックが割り当てられている量よりも多くのスペースを使用した場合、 \"stack overflow\" エラーとなります。</li>\n</ul>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// [1] Some code here</span>\n   <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">// [2] Some code here</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Invoke the `greeting` function</span>\n<span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [3] Some code here</span>\n</code></pre></div>\n<p>上記のコードは次のように実行されます。</p>\n<ol>\n  <li><code>greeting()</code> 関数の呼び出しまで、すべての関数を無視する。</li>\n  <li><code>greeting()</code> 関数をコールスタックリストに追加する。\n    <div class=\"notecard note\" id=\"sect1\">\n      <p>\n        <strong>Note:</strong> コールスタックリスト:\n        - greeting\n      </p>\n    </div>\n  </li>\n  <li><code>greeting()</code> 関数の中にあるコードのすべての行を実行する。</li>\n  <li><code>sayHi()</code> 関数の呼び出しまで移動する。</li>\n  <li>コールスタックリストに <code>sayHi()</code> 関数を追加する。\n    <div class=\"notecard note\" id=\"sect2\">\n      <p>\n        <strong>Note:</strong> コールスタックリスト:\n        - greeting\n        - sayHi\n      </p>\n    </div>\n  </li>\n  <li><code>sayHi()</code> 関数の中にあるコードのすべての行を、末尾に達するまで実行する。</li>\n  <li>実行を <code>sayHi()</code> を呼び出した行に戻し、 <code>greeting()</code> 関数の残りの実行を続ける。</li>\n  <li><code>sayHi()</code> 関数をコールスタックリストから削除する。\n    <div class=\"notecard note\" id=\"sect3\">\n      <p>\n        <strong>Note:</strong> コールスタックリスト:\n        - greeting\n      </p>\n    </div>\n  </li>\n  <li><code>greeting()</code> 関数の中のすべてを実行したら、これを呼び出した行に戻り、残りの JavaScript コードの実行を続ける。</li>\n  <li><code>greeting()</code> 関数をコールスタックリストから削除する。\n    <div class=\"notecard note\" id=\"sect4\">\n      <p>\n        <strong>Note:</strong> コールスタックリスト:\n        空\n      </p>\n    </div>\n  </li>\n</ol>\n<p>空のコールスタックで始め、関数を呼び出す度に、自動的にそれがコールスタックに追加され、コードをすべて実行した後、自動的にコールスタックから削除されます。最後に、またからのスタックで終了します。</p>"}},{"type":"prose","value":{"id":"より詳しく知る","title":"より詳しく知る","isH3":false,"content":""}},{"type":"prose","value":{"id":"一般知識","title":"一般知識","isH3":true,"content":"<ul>\n  <li>ウィキペディアの<a title=\"コールスタック\" href=\"https://ja.wikipedia.org/wiki/コールスタック\" class=\"external\" rel=\" noopener\">コールスタック</a></li>\n</ul><!---->\n<ul>\n  <li><a href=\"/ja/docs/Glossary\">MDN Web Docs 用語集</a>\n    <ul>\n      <li><a href=\"/ja/docs/Glossary/Call_stack\" aria-current=\"page\">コールスタック</a></li>\n      <li><a href=\"/ja/docs/Glossary/Function\">関数</a></li>\n    </ul>\n  </li>\n</ul>"}}],"toc":[{"text":"例","id":"例"},{"text":"より詳しく知る","id":"より詳しく知る"}],"summary":"コールスタック (call stack) は、インタープリター (ウェブブラウザー内の JavaScript インタープリターなど) の仕組みの一つで、複数階層の関数を呼び出したスクリプト内の位置を追跡し続けることです。 — どの関数が現在実行されているのか、その関数の中でどの関数が呼び出されたか、などです。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Call stack","locale":"en-US","native":"English (US)"},{"title":"Pila de llamadas","locale":"es","native":"Español"},{"title":"Pile d'exécution","locale":"fr","native":"Français"},{"title":"호출 스택","locale":"ko","native":"한국어"},{"title":"Call stack (Pilha de chamadas)","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Call stack","locale":"ru","native":"Русский"},{"title":"Call stack（调用栈）","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/glossary/call_stack","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/glossary/call_stack/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Glossary","title":"MDN Web Docs 用語集: ウェブ関連用語の定義"},{"uri":"/ja/docs/Glossary/Call_stack","title":"Call stack (コールスタック)"}],"pageTitle":"Call stack (コールスタック) - MDN Web Docs 用語集: ウェブ関連用語の定義 | MDN","noIndexing":false}}