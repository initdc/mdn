{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"IDL (インターフェイス記述言語)","mdn_url":"/ja/docs/Glossary/IDL","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>IDL</strong> (<em>Interface Description Language</em>、インターフェイス記述言語) は、特定のプログラミング言語とは別にオブジェクトのインターフェイスを指定するために使用される汎用言語です。</p>"}},{"type":"prose","value":{"id":"コンテンツ属性と_idl_属性","title":"コンテンツ属性と IDL 属性","isH3":false,"content":"<p>HTML では、ほとんどの属性に二つの側面があります。<strong>コンテンツ属性</strong>と <strong>IDL 属性</strong>です。</p>\n<p>コンテンツ属性は、コンテンツ (HTML コード) から設定したままの属性で、 <a href=\"/ja/docs/Web/API/Element/setAttribute\"><code>element.setAttribute()</code></a> で設定したり、 <a href=\"/ja/docs/Web/API/Element/getAttribute\"><code>element.getAttribute()</code></a> で取得したりすることができます。コンテンツ属性は、期待される値が整数でなければならない場合でも、常に文字列です。例えば、コンテンツ属性を使用して <a href=\"/ja/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> 要素の <code>maxlength</code> を 42 に設定するには、その要素で <code>setAttribute(\"maxlength\", \"42\")</code> を呼び出す必要があります。</p>\n<p>IDL 属性は JavaScript のプロパティとしても知られています。これらは、 <code class=\"moz-txt-verticalline\">element.foo</code> のような JavaScript プロパティを使って読み込んだり、設定したりすることができる属性です。 IDL 属性は、値を取得したときに値を返すために、その下にあるコンテンツ属性を常に使用しようとしています (しかし、変換するかもしれません) し、設定したときにコンテンツ属性に何かを保存しようとしています。言い換えれば、 IDL 属性は、本質的にはコンテンツ属性を反映します。</p>\n<p>ほとんどの場合、 IDL 属性は実際に使われている通りの値を返します。例えば、 <a href=\"/ja/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> 要素の既定の <code>type</code> は \"text\" なので、 <code>input.type=\"foobar\"</code> と設定すると、 <code>&lt;input&gt;</code> 要素の型は (外観と動作において) text になりますが、コンテンツ属性の \"type\" の値は \"foobar\" になります。しかし、IDL 属性 <code>type</code> は文字列 \"text\" を返します。</p>\n<p>IDL 属性は必ずしも文字列とは限らず、例えば <code>input.maxlength</code> は数値 (signed long) です。 IDL 属性を使用する際には、希望する型の値を読み込んだり設定したりしますので、 <code>input.maxlength</code> は常に数値を返すでしょうし、 <code>input.maxlength</code> を設定すると、数値を要求します。他の型を渡した場合、型変換のための標準的な JavaScript のルールで指定されているように、自動的に数値に変換されます。</p>\n<p>IDL 属性は、 unsigned long、 URL、 論理型など、<a href=\"https://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#reflecting-content-attributes-in-idl-attributes\" class=\"external\" rel=\" noopener\">他の型を反映</a>することができます。残念ながら、明確なルールはなく、 IDL 属性が対応するコンテンツ属性と連動してどのように振る舞うかは、属性に依存します。ほとんどの場合、仕様書で定められた規則に従いますが、そうでない場合もあります。 HTML の仕様は、これを可能な限り開発者に優しいものにしようとしていますが、様々な理由 (主に歴史的な理由) で、属性によっては (例えば <code>select.size</code> など) 奇妙な振る舞いをすることもありますので、それらが正確にどのように振る舞うかを理解するには仕様書を読んでください。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li>ウィキペディアの<a href=\"https://ja.wikipedia.org/wiki/%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9%E8%A8%98%E8%BF%B0%E8%A8%80%E8%AA%9E\" class=\"external\" rel=\" noopener\">インタフェース記述言語</a></li>\n  <li><a href=\"/ja/docs/Web/HTML/Attributes\">HTML 属性リファレンス</a></li>\n  <li><a href=\"https://people.eecs.berkeley.edu/~messer/netappc/Supplements/10-idl.pdf\" class=\"external\" rel=\" noopener\">インターフェイス定義言語</a>（英語）</li>\n</ul>"}}],"toc":[{"text":"コンテンツ属性と IDL 属性","id":"コンテンツ属性と_idl_属性"},{"text":"関連情報","id":"関連情報"}],"summary":"IDL (Interface Description Language、インターフェイス記述言語) は、特定のプログラミング言語とは別にオブジェクトのインターフェイスを指定するために使用される汎用言語です。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"IDL","locale":"en-US","native":"English (US)"},{"title":"IDL","locale":"fr","native":"Français"}],"source":{"folder":"ja/glossary/idl","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/glossary/idl/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Glossary","title":"MDN Web Docs 用語集: ウェブ関連用語の定義"},{"uri":"/ja/docs/Glossary/IDL","title":"IDL (インターフェイス記述言語)"}],"pageTitle":"IDL (インターフェイス記述言語) - MDN Web Docs 用語集: ウェブ関連用語の定義 | MDN","noIndexing":false}}