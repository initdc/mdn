{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"サブリソース完全性","mdn_url":"/ja/docs/Web/Security/Subresource_Integrity","locale":"ja","native":"日本語","sidebarHTML":"\n<ol><li><a href=\"/ja/docs/Web/Security/Referer_header:_privacy_and_security_concerns\">Referer ヘッダーのプライバシーとセキュリティの考慮事項</a></li><li><a href=\"/ja/docs/Web/Security/Subdomain_takeovers\">Subdomain takeovers</a></li><li><a href=\"/ja/docs/Web/Security/Transport_Layer_Security\">Transport Layer Security</a></li><li><a href=\"/ja/docs/Web/Security/Securing_your_site\">サイトの安全化</a><ol><li><a href=\"/ja/docs/Web/Security/Securing_your_site\">サイトの安全化</a></li><li><a href=\"/ja/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\">フォームの自動補完を無効にするには</a></li></ol></li><li><a href=\"/ja/docs/Web/Security/Subresource_Integrity\">サブリソース完全性</a></li><li><a href=\"/ja/docs/Web/Security/Same-origin_policy\">同一オリジンポリシー</a></li><li><a href=\"/ja/docs/Web/Security/Insecure_passwords\">安全でないパスワード</a></li><li><a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a><ol><li><a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a></li><li><a href=\"/ja/docs/Web/Security/Secure_Contexts/features_restricted_to_secure_contexts\">安全なコンテキストに制限されている機能</a></li></ol></li><li><a href=\"/ja/docs/Web/Security/Types_of_attacks\">攻撃の種類</a></li><li><a href=\"/ja/docs/Web/Security/Mixed_content\">混在コンテンツ</a><ol><li><a href=\"/ja/docs/Web/Security/Mixed_content\">混在コンテンツ</a></li><li><a href=\"/ja/docs/Web/Security/Mixed_content/How_to_fix_website_with_mixed_content\">混在コンテンツでブロックされるウェブサイトを修正するには</a></li></ol></li><li><a href=\"/ja/docs/Web/Security/Weak_Signature_Algorithm\">脆弱な署名アルゴリズム</a></li><li><a href=\"/ja/docs/Web/Security/Certificate_Transparency\">証明書の透明性</a></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>サブリソース完全性</strong> (Subresource Integrity, SRI) は、 (<a href=\"/ja/docs/Glossary/CDN\">CDN</a> などから) 取得したリソースが意図せず改ざんされていないかをブラウザーが検証するセキュリティ機能です。 SRI を利用する際には、取得したリソースのハッシュ値と一致すべきハッシュ値を指定します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> サブリソース完全性の検証において、サブリソースが埋め込まれる文書のオリジン以外から提供されたリソースについては、ブラウザーは<a href=\"/ja/docs/Web/HTTP/CORS\">オリジン間リソース共有 (CORS)</a> を使用してリソースに追加のチェックを行い、オリジンがリソースがリクエストしたオリジンに共有されることを許可しているかどうかを確認します。</p>\n</div>"}},{"type":"prose","value":{"id":"サブリソース完全性の必要性","title":"サブリソース完全性の必要性","isH3":false,"content":"<p>複数のサイトで使われるスクリプトやスタイルシートなどのファイルを<a href=\"/ja/docs/Glossary/CDN\">コンテンツ配信ネットワーク (CDN)</a> にホストすることにより、読み込みに必要な時間や通信帯域を減らすことができます。しかし、 CDN はリスクにもなり得ます。仮に攻撃者が CDN を掌握できれば、攻撃者は CDN 上のファイルに悪意あるコンテンツを挿入することにより (あるいは完全に置き換えることにより)、その CDN からファイルを読み込む全てのサイトを攻撃対象とすることができます。</p>\n<p>サブリソース完全性は、ウェブアプリケーションやウェブ文書が (CDN など任意の場所から) 取得したファイルについて、第三者によってファイルの中に別のものが挿入されていないか、そして、それらのファイルに対してその他の改ざんが行われていないかを検証することにより、先程のような攻撃のリスクを軽減します。</p>"}},{"type":"prose","value":{"id":"サブリソース完全性の使い方","title":"サブリソース完全性の使い方","isH3":false,"content":"<p>サブリソース完全性の機能は、ブラウザーが取得するリソース (ファイル) のハッシュ値を base64 エンコードし、その値を <a href=\"/ja/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> や <a href=\"/ja/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> 要素の <code>integrity</code> 属性に指定することによって使用します。</p>\n<p><code>integrity</code> 属性の値は、ハッシュアルゴリズムを示す接頭辞 (現在利用できる接頭辞は <code>sha256</code>, <code>sha384</code>, <code>sha512</code> です) と、 base64 でエンコードされたハッシュ値をダッシュで繋いだ文字列です。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <code>integrity</code> 属性値には、ホワイトスペースで区切って複数のハッシュ値を含めることができます。リソースはこれらのハッシュ値のいずれかに一致した場合に読み込まれます。</p>\n</div>\n<p>base64 でエンコードされた sha384 ハッシュを含む <code>integrity</code> 文字列の例</p>\n<pre class=\"notranslate\">sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC\n</pre>\n<p>従って、 <code>oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC</code> がハッシュ値の部分であり、接頭辞の <code>sha384</code> が sha384 ハッシュであることを示します。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> 厳密に言うと、 <code>integrity</code> 属性値におけるハッシュ値の部分は、あるハッシュ関数にデータを入力 (スクリプトやスタイルシートファイル) して生成された<strong>暗号学的ダイジェスト値</strong>です。しかし、一般的には短く「ハッシュ」と言えば<em>暗号学的ダイジェスト値</em>を意味するので、本記事でもそのように呼んでいます。</p>\n</div>"}},{"type":"prose","value":{"id":"sri_ハッシュを生成するツール","title":"SRI ハッシュを生成するツール","isH3":true,"content":"<p>次の <strong>openssl</strong> コマンドにより SRI ハッシュを生成することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">cat</span> FILENAME.js <span class=\"token operator\">|</span> openssl dgst -sha384 -binary <span class=\"token operator\">|</span> openssl base64 -A\n</code></pre></div>\n<p>または、次のような <strong>shasum</strong> コマンドの呼び出しでも実現できます。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>shasum -b -a <span class=\"token number\">384</span> FILENAME.js <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ print $1 }'</span> <span class=\"token operator\">|</span> xxd -r -p <span class=\"token operator\">|</span> base64\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong></p>\n  <ul>\n    <li>パイプで <code>xxd</code> を通る過程で、 <code>shasum</code> からの出力を取り、バイナリへ変換します。</li>\n    <li>パイプで <code>awk</code> を通る過程は、 <code>shasum</code> がハッシュ化されたファイル名を <code>xxd</code> へ渡すために必要です。ファイル名が有効な 16 進数の文字を持っている場合に有害な影響を与える可能性があるからです。 <code>xxd</code> はそれを復号して、 <code>base64</code> に渡す可能性があるからです。</li>\n  </ul>\n</div>\n<p>また、<strong>SRI Hash Generator</strong> (<a href=\"https://www.srihash.org/\" class=\"external\" rel=\" noopener\">https://www.srihash.org/</a>) によりオンラインで SRI ハッシュを生成することもできます。</p>"}},{"type":"prose","value":{"id":"オリジン間リソース共有とサブリソース完全性","title":"オリジン間リソース共有とサブリソース完全性","isH3":true,"content":"<p>サブリソース完全性の検証において、サブリソースが埋め込まれる文書のオリジン以外から提供されたリソースについては、ブラウザーは<a href=\"/ja/docs/Web/HTTP/CORS\">オリジン間リソース共有 (CORS)</a> を使用してリソースに追加のチェックを行い、オリジンがリソースがリクエストしたオリジンに共有されることを許可しているかどうかを確認します。従って、次の例のように、リソースが要求されたオリジンに共有できるよう <a href=\"/ja/docs/Web/HTTP/Headers/Access-Control-Allow-Origin\"><code>Access-Control-Allow-Origin</code></a> ヘッダーを付けて提供する必要があります。</p>\n<pre class=\"notranslate\">Access-Control-Allow-Origin: *\n</pre>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>以下の例では、 <code>oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC</code> が特定のスクリプト <code>example-framework.js</code> の期待される SHA-384 ハッシュ値としてすでに知られており、スクリプトのコピーが <code>https://example.com/example-framework.js</code> にホストされているものとします。</p>"}},{"type":"prose","value":{"id":"script_要素のサブリソース完全性","title":"&lt;script&gt; 要素のサブリソース完全性","isH3":true,"content":"<p>次の <a href=\"/ja/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 要素により、ブラウザーが <code>https://example.com/example-framework.js</code> を実行する前に、まず想定されるハッシュ値とスクリプトのハッシュ値が一致することをブラウザーに確認させることができます。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://example.com/example-framework.js<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">integrity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>Note:</strong> <strong>crossorigin</strong> 属性については <a href=\"/ja/docs/Web/HTML/Attributes/crossorigin\">CORS 設定属性</a>を参照してください。</p>\n</div>","titleAsText":"<script> 要素のサブリソース完全性"}},{"type":"prose","value":{"id":"サブリソース完全性のブラウザーでの扱い","title":"サブリソース完全性のブラウザーでの扱い","isH3":false,"content":"<p>ブラウザは SRI を以下のように処理します。</p>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>Note:</strong> サブリソース完全性の検証において、サブリソースが埋め込まれる文書のオリジン以外から提供されたリソースについては、ブラウザーは<a href=\"/ja/docs/Web/HTTP/CORS\">オリジン間リソース共有 (CORS)</a> を使用してリソースに追加のチェックを行い、オリジンがリソースがリクエストしたオリジンに共有されることを許可しているかどうかを確認します。</p>\n</div>\n<ol>\n  <li>ブラウザは <code>integrity</code> 属性を持った <a href=\"/ja/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> または <a href=\"/ja/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> 属性を見つけると、スクリプトや <a href=\"/ja/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> 属性で指定された任意のスタイルシートを適用する前に、<code>integrity</code> 属性のハッシュ値とスクリプトやスタイルシートのハッシュ値を比較しなくてはなりません。</li>\n  <li>スクリプトやスタイルシートが対応する <code>integrity</code> 属性値と一致しない場合、ブラウザーはスクリプトを実行したりスタイルシートを適用してはいけません。その代わりに、スクリプトやスタイルシートの取得が失敗したというネットワークエラーを返さなくてはなりません。</li>\n</ol>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>状態</th>\n      <th>備考</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/webappsec-subresource-integrity/\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"Subresource Integrityの仕様書\" rel=\" noopener\">Subresource Integrity</a></td>\n      <td><span class=\"spec-rec\">勧告</span></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://fetch.spec.whatwg.org/\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"Fetchの仕様書\" rel=\" noopener\">Fetch</a></td>\n      <td><span class=\"spec-living\">現行の標準</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"ブラウザの互換性","title":"ブラウザの互換性","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"<script integrity>","id":"script_integrity","isH3":true,"query":"html.elements.script.integrity","dataURL":"/ja/docs/Web/Security/Subresource_Integrity/bcd.json"}},{"type":"browser_compatibility","value":{"title":"CSP: require-sri-for","id":"csp_require-sri-for","isH3":true,"data":null,"query":"http.headers.csp.require-sri-for","browsers":null}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li>Content Security Policy</li>\n  <li><a href=\"/ja/docs/Web/HTTP/Headers/Content-Security-Policy\"><code>Content-Security-Policy</code></a></li>\n  <li><a href=\"https://frederik-braun.com/using-subresource-integrity.html\" class=\"external\" rel=\" noopener\">A CDN that can not XSS you: Using Subresource Integrity</a></li>\n  <li><a href=\"https://w3c-test.org/subresource-integrity/subresource-integrity.html\" class=\"external\" rel=\" noopener\">Subresource Integrity test from W3C</a></li>\n  <li><a href=\"https://www.srihash.org/\" class=\"external\" rel=\" noopener\">SRI Hash Generator</a></li>\n</ul>"}}],"toc":[{"text":"サブリソース完全性の必要性","id":"サブリソース完全性の必要性"},{"text":"サブリソース完全性の使い方","id":"サブリソース完全性の使い方"},{"text":"例","id":"例"},{"text":"サブリソース完全性のブラウザーでの扱い","id":"サブリソース完全性のブラウザーでの扱い"},{"text":"仕様","id":"仕様"},{"text":"ブラウザの互換性","id":"ブラウザの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"サブリソース完全性 (Subresource Integrity, SRI) は、 (CDN などから) 取得したリソースが意図せず改ざんされていないかをブラウザーが検証するセキュリティ機能です。 SRI を利用する際には、取得したリソースのハッシュ値と一致すべきハッシュ値を指定します。","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Subresource Integrity","locale":"en-US","native":"English (US)"},{"title":"Subresource Integrity","locale":"fr","native":"Français"},{"title":"Subresource Integrity","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/security/subresource_integrity","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/security/subresource_integrity/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Security","title":"ウェブセキュリティ"},{"uri":"/ja/docs/Web/Security/Subresource_Integrity","title":"サブリソース完全性"}],"pageTitle":"サブリソース完全性 - ウェブセキュリティ | MDN","noIndexing":false}}