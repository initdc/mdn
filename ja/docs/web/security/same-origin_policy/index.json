{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"同一オリジンポリシー","mdn_url":"/ja/docs/Web/Security/Same-origin_policy","locale":"ja","native":"日本語","sidebarHTML":"\n<ol><li><a href=\"/ja/docs/Web/Security/Referer_header:_privacy_and_security_concerns\">Referer ヘッダーのプライバシーとセキュリティの考慮事項</a></li><li><a href=\"/ja/docs/Web/Security/Subdomain_takeovers\">Subdomain takeovers</a></li><li><a href=\"/ja/docs/Web/Security/Transport_Layer_Security\">Transport Layer Security</a></li><li><a href=\"/ja/docs/Web/Security/Securing_your_site\">サイトの安全化</a><ol><li><a href=\"/ja/docs/Web/Security/Securing_your_site\">サイトの安全化</a></li><li><a href=\"/ja/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\">フォームの自動補完を無効にするには</a></li></ol></li><li><a href=\"/ja/docs/Web/Security/Subresource_Integrity\">サブリソース完全性</a></li><li><a href=\"/ja/docs/Web/Security/Same-origin_policy\">同一オリジンポリシー</a></li><li><a href=\"/ja/docs/Web/Security/Insecure_passwords\">安全でないパスワード</a></li><li><a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a><ol><li><a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a></li><li><a href=\"/ja/docs/Web/Security/Secure_Contexts/features_restricted_to_secure_contexts\">安全なコンテキストに制限されている機能</a></li></ol></li><li><a href=\"/ja/docs/Web/Security/Types_of_attacks\">攻撃の種類</a></li><li><a href=\"/ja/docs/Web/Security/Mixed_content\">混在コンテンツ</a><ol><li><a href=\"/ja/docs/Web/Security/Mixed_content\">混在コンテンツ</a></li><li><a href=\"/ja/docs/Web/Security/Mixed_content/How_to_fix_website_with_mixed_content\">混在コンテンツでブロックされるウェブサイトを修正するには</a></li></ol></li><li><a href=\"/ja/docs/Web/Security/Weak_Signature_Algorithm\">脆弱な署名アルゴリズム</a></li><li><a href=\"/ja/docs/Web/Security/Certificate_Transparency\">証明書の透明性</a></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>同一オリジンポリシー</strong>は重要なセキュリティの仕組みであり、ある<a href=\"/ja/docs/Glossary/Origin\">オリジン</a>によって読み込まれた文書やスクリプトが、他のオリジンにあるリソースにアクセスできる方法を制限するものです。</p>\n<p>これにより、悪意のある可能性のあるドキュメントを隔離し、起こりうる攻撃のベクターを減らすことができます。例えば、インターネット上の悪意のあるウェブサイトがブラウザー内で JS を実行して、 (ユーザーがサインインしている) サードパーティのウェブメールサービスや (公開 IP アドレスを持たないことで攻撃者の直接アクセスから保護されている) 企業のイントラネットからデータを読み取り、そのデータを攻撃者に中継することを防ぎます。</p>"}},{"type":"prose","value":{"id":"オリジンの定義","title":"オリジンの定義","isH3":false,"content":"<p>二つのページの<a href=\"/ja/docs/Glossary/Protocol\">プロトコル</a>、<a href=\"/ja/docs/Glossary/Port\">ポート番号</a> (もしあれば)、<a href=\"/ja/docs/Glossary/Host\">ホスト</a>が等しい場合、両者のページは同じオリジンです。これは「スキーム/ホスト/ポート番号のタプル」または時に単に「タプル」として参照されます (「タプル」は共に全体を構成する三つの部分の組み合わせを表します)。</p>\n<p>以下の表は、各行の URL が <code>http://store.company.com/dir/page.html</code> と同じオリジンであるかを比較したものです。</p>\n<table>\n  <thead>\n    <tr>\n      <th>URL</th>\n      <th>結果</th>\n      <th>理由</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>http://store.company.com/dir2/other.html</code></td>\n      <td>同一オリジン</td>\n      <td>パスだけが異なる</td>\n    </tr>\n    <tr>\n      <td><code>http://store.company.com/dir/inner/another.html</code></td>\n      <td>同一オリジン</td>\n      <td>パスだけが異なる</td>\n    </tr>\n    <tr>\n      <td><code>https://store.company.com/page.html</code></td>\n      <td>不一致</td>\n      <td>プロトコルが異なる</td>\n    </tr>\n    <tr>\n      <td><code>http://store.company.com:81/dir/page.html</code></td>\n      <td>不一致</td>\n      <td>ポート番号が異なる (<code>http://</code> は既定で 80 番ポート)</td>\n    </tr>\n    <tr>\n      <td><code>http://news.company.com/dir/page.html</code></td>\n      <td>不一致</td>\n      <td>ホストが異なる</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"オリジンの継承","title":"オリジンの継承","isH3":true,"content":"<p><code>about:blank</code> や <code>javascript:</code> の URL のページから実行されたスクリプトは、その URL にオリジンのサーバーについての情報が明示的に含まれていないため、その URL を開いた文書のオリジンを継承します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 例えば、 <code>about:blank</code> は (例えば <a href=\"/ja/docs/Web/API/Window/open\"><code>Window.open()</code></a> メカニズムを使用して) 新しい空のポップアップウィンドウを生成し、その中に親スクリプトがコンテンツを書き込むために使用されます。ポップアップウィンドウにもコードが含まれた場合、そのコードはそれを生成したスクリプトと同じオリジンを継承します。</p>\n</div>\n<div class=\"notecard warning\" id=\"sect2\">\n  <p><strong>Warning:</strong> <code>data:</code> の URL は新しく、空のセキュリティコンテキストを生成します。</p>\n</div>"}},{"type":"prose","value":{"id":"ie_における例外事項","title":"IE における例外事項","isH3":true,"content":"<p>Internet Explorer では、同一オリジンポリシーについて二つの大きな例外があります。</p>\n<dl>\n  <dt id=\"信頼済みゾーン\">信頼済みゾーン</dt>\n  <dd>\n    <p>双方のドメインが<em>高く信頼されたゾーン</em> (企業のドメインなど) である場合は、同一オリジンの制限が適用されません。</p>\n  </dd>\n  <dt id=\"ポート番号\">ポート番号</dt>\n  <dd>\n    <p>IE は同一オリジンの確認要素にポート番号を含みません。従って、 <code>http://company.com:81/index.html</code> と <code>http://company.com/index.html</code> は同一オリジンとみなされ、制限は適用されません。</p>\n  </dd>\n</dl>\n<p>これらの例外事項は標準外であり、他のブラウザーはこのような挙動に対応していません。</p>"}},{"type":"prose","value":{"id":"オリジンの変更","title":"オリジンの変更","isH3":false,"content":"<div class=\"notecard warning\" id=\"sect3\">\n  <p><strong>Warning:</strong> ここで説明している (<a href=\"/ja/docs/Web/API/Document/domain\"><code>document.domain</code></a> セッターを使用する) 方法は非推奨です。同一オリジンポリシーによるセキュリティ保護を弱め、ブラウザーのオリジンモデルを複雑にして、相互運用性の問題やセキュリティバグを引き起こすためです。</p>\n</div>\n<p>ページのオリジンは、いくつかの制限の下で変更されることがあります。スクリプトを用いると、 <a href=\"/ja/docs/Web/API/Document/domain\"><code>document.domain</code></a> の値を現在のドメインまたは上位ドメインに変更できます。スクリプトによって現在のドメインの上位ドメインへオリジンが変更された場合、より短くなったドメイン名は次回のオリジン検査時に用いられます。</p>\n<p>例えば、 <code>http://store.company.com/dir/other.html</code> にあるドキュメント内のスクリプトが以下のコードを実行したと仮定します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span>domain <span class=\"token operator\">=</span> <span class=\"token string\">\"company.com\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このコードが実行された後、そのページは <code>http://company.com/dir/page.html</code> におけるオリジンの検査を通過できます (許可を明示するために <code>http://company.com/dir/page.html</code> が自身の <code>document.domain</code> を \"<code>company.com</code>\" に変更したと仮定します。詳しくは <a href=\"/ja/docs/Web/API/Document/domain\"><code>document.domain</code></a> を参照してください)。しかし、 <code>company.com</code> が自身の <code>document.domain</code> を <code>othercompany.com</code> に変更することは<strong>できません</strong>。なぜなら <code>company.com</code> の上位ドメインではないためです。</p>\n<p>ブラウザーはポート番号を個別に検査します。 <code>document.domain</code> を呼び出すと、 <code>document.domain = document.domain</code> の場合も含め、ポート番号が <code>null</code> で上書きされます。従って、スクリプトの最初に <code>document.domain = \"company.com\"</code> を設定しただけでは、 <code>company.com:8080</code> と <code>company.com</code> とは互いにアクセス<strong>できません</strong>。双方のポートが <code>null</code> になるように、双方で設定しなければなりません。</p>\n<p>この仕組みにはいくつかの制限があります。例えば、 <a href=\"/ja/docs/Web/HTTP/Headers/Feature-Policy/document-domain\"><code>document-domain</code></a> の <a href=\"/ja/docs/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> が有効になっている場合や、文書がサンドボックス化された <a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> 内にある場合は、 \"<code>SecurityError</code>\" の <a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a> が発生します。また、この方法でオリジンを変更しても、多くの Web API (<a href=\"/ja/docs/Web/API/Window/localStorage\"><code>localStorage</code></a>, <a href=\"/ja/docs/Web/API/IndexedDB_API\"><code>indexedDB</code></a>, <a href=\"/ja/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a>, <a href=\"/ja/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a> など) で使用されているオリジンチェックには影響しません。失敗事例のより詳細なリストは、 <a href=\"/ja/docs/Web/API/Document/domain#failures\">Document.domain &gt; Failures</a> にあります。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> サブドメインから親ドメインへアクセスさせるために <code>document.domain</code> を使用する際は、親ドメインとサブドメインの双方で同じ値を <code>document.domain</code> に設定することが必要です。この作業は、親ドメインを元の値に戻す際にも必要です。これを怠ると権限エラーが発生します。</p>\n</div>"}},{"type":"prose","value":{"id":"異なるオリジンへのネットワークアクセス","title":"異なるオリジンへのネットワークアクセス","isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> や <a href=\"/ja/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> 要素を使用する場合など、 同一オリジンポリシーは 2 つのオリジン間における通信を制御します。一般にこれらの通信は 3 つのカテゴリに分類されます。</p>\n<ul>\n  <li>異なるオリジンへの<em>書き込み</em>は、概して許可されます。例えばリンクやリダイレクト、フォームの送信などがあります。まれに使用される HTTP リクエストの際は<a href=\"/ja/docs/Web/HTTP/CORS#preflighted_requests\">プリフライト</a>が必要です。</li>\n  <li>異なるオリジンの<em>埋め込み</em>は、概して許可されます。例は後述します。</li>\n  <li>異なるオリジンからの<em>読み込み</em>は一般に許可されませんが、埋め込みによって読み取り権限がしばしば漏れてしまいます。例えば埋め込み画像の幅や高さ、埋め込みスクリプトの動作内容、あるいは<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=629094\" class=\"external\" rel=\" noopener\">埋め込みリソースでアクセス可能なもの</a>を読み取ることができます。</li>\n</ul>\n<p>以下に挙げるのは、異なるオリジンに埋め込むことができるリソースの例です。</p>\n<ul>\n  <li>JavaScript を <code>&lt;script src=\"...\"&gt;&lt;/script&gt;</code> で使用する場合。構文に関するエラーメッセージは、同一オリジンのスクリプトについてのみ読み取り可能です。</li>\n  <li>CSS を <code>&lt;link rel=\"stylesheet\" href=\"...\"&gt;</code> で使用する場合。 CSS は<a href=\"https://scarybeastsecurity.blogspot.com/2009/12/generic-cross-browser-cross-domain.html\" class=\"external\" rel=\" noopener\">緩い構文規則</a>を持っているため、オリジンをまたぐ CSS には適切な <code>Content-Type</code> ヘッダーを付加することが必要です。制約はブラウザーにより異なり、ブラウザーごとの詳細は <a href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622939(v=vs.85)?redirectedfrom=MSDN\" class=\"external\" rel=\" noopener\">Internet Explorer</a>, <a href=\"https://www.mozilla.org/en-US/security/advisories/mfsa2010-46/\" class=\"external\" rel=\" noopener\">Firefox</a>, <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=9877\" class=\"external\" rel=\" noopener\">Chrome</a>, <a href=\"https://support.apple.com/kb/HT4070\" class=\"external\" rel=\" noopener\">Safari</a> (<a href=\"https://support.apple.com/kb/HT4070?viewlocale=ja_JP\" class=\"external\" rel=\" noopener\">日本語訳</a>) (CVE-2010-0051 までスクロールしてください), <a href=\"https://security.opera.com/cross-domain-data-theft-with-css-load-opera-security-advisories/\" class=\"external\" rel=\" noopener\">Opera</a> の各項目を参照してください。</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> で表示された画像。</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> および <a href=\"/ja/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> で再生されたメディア。</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a> または <a href=\"/ja/docs/Web/HTML/Element/embed\"><code>&lt;embed&gt;</code></a> で埋め込まれた外部リソース。</li>\n  <li><a href=\"/ja/docs/Web/CSS/@font-face\"><code>@font-face</code></a> が適用されたフォント。異なるオリジンのフォントを許容するブラウザーもありますが、同一オリジンを要求するものもあります。</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> に関連するあらゆること。このような形のオリジン間のやりとりを防ぐため、サイトに <a href=\"/ja/docs/Web/HTTP/Headers/X-Frame-Options\"><code>X-Frame-Options</code></a> ヘッダーを使用することができます。</li>\n</ul>"}},{"type":"prose","value":{"id":"異なるオリジンへのアクセスを許可する方法","title":"異なるオリジンへのアクセスを許可する方法","isH3":true,"content":"<p>異なるオリジンへのアクセスを許可するには、 <a href=\"/ja/docs/Web/HTTP/CORS\">CORS</a> を使用してください。 CORS は <a href=\"/ja/docs/Glossary/HTTP\">HTTP</a> の一部で、ブラウザーがコンテンツの読み込みを許可する他のホストをサーバーが指定できるようにするものです。</p>"}},{"type":"prose","value":{"id":"異なるオリジンへのアクセスをブロックする方法","title":"異なるオリジンへのアクセスをブロックする方法","isH3":true,"content":"<ul>\n  <li>異なるオリジンへの書き込みを防ぐには、リクエスト内の <a href=\"https://owasp.org/www-community/attacks/csrf\" class=\"external\" rel=\" noopener\">Cross-Site Request Forgery (CSRF)</a> トークンと呼ばれる推測できないトークンをチェックしてください。このトークンを知っているページのオリジンをまたがった読み込みを防ぎます。</li>\n  <li>異なるオリジンからのリソースの読み込みを防ぐには、そのリソースが埋め込まれないようにします。リソースの埋め込まれると情報が漏えいする場合があるため、多くの場合は埋め込みの抑止が必要になります。</li>\n  <li>異なるオリジンによる埋め込みを防ぐには、リソースの形式が先ほど述べたような埋め込み可能な形式だと思われないようにします。ほとんどの場合、ブラウザーは <code>Content-Type</code> を尊重しません。例えば <code>&lt;script&gt;</code> タグで HTML 文書を指した場合、ブラウザーは HTML を JavaScript としてパースしようとします。リソースがサイトの入口ではない場合は、埋め込みを抑止するため CSRF トークンも使用するとよいでしょう。</li>\n</ul>"}},{"type":"prose","value":{"id":"異なるオリジンへのスクリプトからの_api_によるアクセス","title":"異なるオリジンへのスクリプトからの API によるアクセス","isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/HTMLIFrameElement/contentWindow\" title=\"iframe.contentWindow\"><code>iframe.contentWindow</code></a>, <a href=\"/ja/docs/Web/API/Window/parent\"><code>window.parent</code></a>, <a href=\"/ja/docs/Web/API/Window/open\"><code>window.open</code></a>, <a href=\"/ja/docs/Web/API/Window/opener\"><code>window.opener</code></a> といった JavaScript API を用いると、ドキュメントが直接互いに参照することができます。2 つのドキュメントが同一のオリジンではない場合、 <a href=\"/ja/docs/Web/API/Window\"><code>Window</code></a> オブジェクトや <a href=\"/ja/docs/Web/API/Location\"><code>Location</code></a> オブジェクトなど、限られたオブジェクトにのみアクセスすることができます。詳しくは次の 2 つのセクションで説明します。</p>\n<p><a href=\"/ja/docs/Web/API/Window/postMessage\"><code>window.postMessage</code></a> を使用すると、異なるオリジンの文書間における通信がさらに可能となります。</p>\n<p>仕様書: <a href=\"https://html.spec.whatwg.org/multipage/browsers.html#cross-origin-objects\" class=\"external\" rel=\" noopener\">HTML Living Standard § Cross-origin objects</a>.</p>"}},{"type":"prose","value":{"id":"window","title":"Window","isH3":true,"content":"<p>以下に示した <code>Window</code> のプロパティは、異なるオリジンからのアクセスが許可されています。</p>\n<table>\n  <thead>\n    <tr>\n      <th>メソッド</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/blur\"><code>window.blur</code></a></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/close\"><code>window.close</code></a></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/focus\"><code>window.focus</code></a></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/postMessage\"><code>window.postMessage</code></a></td>\n    </tr>\n  </tbody>\n</table>\n<table>\n  <thead>\n    <tr>\n      <th>属性</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/closed\"><code>window.closed</code></a></td>\n      <td>読み取り専用</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/frames\"><code>window.frames</code></a></td>\n      <td>読み取り専用</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/length\"><code>window.length</code></a></td>\n      <td>読み取り専用</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/location\"><code>window.location</code></a></td>\n      <td>読み取り/書き込み</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/opener\"><code>window.opener</code></a></td>\n      <td>読み取り専用</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/parent\"><code>window.parent</code></a></td>\n      <td>読み取り専用</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/self\"><code>window.self</code></a></td>\n      <td>読み取り専用</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/top\"><code>window.top</code></a></td>\n      <td>読み取り専用</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Window/window\"><code>window.window</code></a></td>\n      <td>読み取り専用</td>\n    </tr>\n  </tbody>\n</table>\n<p>一部のブラウザーでは、仕様書で定められたものより多くのプロパティでアクセスが許可されています。</p>"}},{"type":"prose","value":{"id":"location","title":"Location","isH3":true,"content":"<p>以下に示した <code>Location</code> のプロパティは、異なるオリジンからのアクセスが許可されています。</p>\n<table>\n  <thead>\n    <tr>\n      <th>メソッド</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Location/replace\"><code>location.replace</code></a></td>\n    </tr>\n  </tbody>\n</table>\n<table>\n  <thead>\n    <tr>\n      <th>属性</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>URLUtils.href</code></a></td>\n      <td>書き込みのみ</td>\n    </tr>\n  </tbody>\n</table>\n<p>一部のブラウザーでは、仕様書で定められたものより多くのプロパティでアクセスが許可されています。</p>"}},{"type":"prose","value":{"id":"オリジンをまたいだデータストレージアクセス","title":"オリジンをまたいだデータストレージアクセス","isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/Web_Storage_API\">ウェブストレージ</a>や <a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB</a> など、ブラウザー内部に保存されるデータへのアクセスは、オリジンによって権限が分かれています。それぞれのオリジンが個別にストレージを持ち、あるオリジンの JavaScript から別のオリジンに属するストレージを読み書きすることはできません。</p>\n<p><a href=\"/ja/docs/Glossary/Cookie\">Cookie</a> におけるオリジンの定義は異なります。ページは自身のドメインまたは任意の親ドメイン (親ドメインが public suffix ではない場合に限る) 用の Cookie を設定できます。 ドメインが public suffix であるかを判断する際、Firefox と Chrome は <a href=\"https://publicsuffix.org/\" class=\"external\" rel=\" noopener\">Public Suffix List</a> を使用します。 Internet Explorer は独自の方法で public suffix であるかを判断します。使用しているスキーム (HTTP/HTTPS) やポートに関係なく、ブラウザーはサブドメインも含めて Cookie を使用可能にします。Cookie の設定時に <code>Domain</code>, <code>Path</code>, <code>Secure</code>, <code>HttpOnly</code> の各フラグを用いることで、その Cookie の利用範囲を制限できます。Cookie を読み取るとき、Cookie を設定した場所から知ることはできません。安全な https 接続のみ使用していたとしても、参照している Cookie は安全でない接続を通じて設定された可能性があります。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.w3.org/Security/wiki/Same_Origin_Policy\" class=\"external\" rel=\" noopener\">Same Origin Policy at W3C</a></li>\n  <li><a href=\"https://web.dev/secure/same-origin-policy\" class=\"external\" rel=\" noopener\">Same-origin policy at web.dev</a></li>\n  <li><a href=\"/ja/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy\"><code>Cross-Origin-Resource-Policy</code></a></li>\n  <li><a href=\"/ja/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy\"><code>Cross-Origin-Embedder-Policy</code></a></li>\n</ul>"}},{"type":"prose","value":{"id":"原典情報","title":"原典情報","isH3":false,"content":"<ul>\n  <li>著者: Jesse Ruderman</li>\n</ul>"}}],"toc":[{"text":"オリジンの定義","id":"オリジンの定義"},{"text":"オリジンの変更","id":"オリジンの変更"},{"text":"異なるオリジンへのネットワークアクセス","id":"異なるオリジンへのネットワークアクセス"},{"text":"異なるオリジンへのスクリプトからの API によるアクセス","id":"異なるオリジンへのスクリプトからの_api_によるアクセス"},{"text":"オリジンをまたいだデータストレージアクセス","id":"オリジンをまたいだデータストレージアクセス"},{"text":"関連情報","id":"関連情報"},{"text":"原典情報","id":"原典情報"}],"summary":"同一オリジンポリシーは重要なセキュリティの仕組みであり、あるオリジンによって読み込まれた文書やスクリプトが、他のオリジンにあるリソースにアクセスできる方法を制限するものです。","popularity":0.0008,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Same-origin policy","locale":"en-US","native":"English (US)"},{"title":"Política Same-origin","locale":"es","native":"Español"},{"title":"Same-origin policy","locale":"fr","native":"Français"},{"title":"동일 출처 정책","locale":"ko","native":"한국어"},{"title":"Same-origin policy","locale":"ru","native":"Русский"},{"title":"浏览器的同源策略","locale":"zh-CN","native":"中文 (简体)"},{"title":"同源政策 (Same-origin policy)","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/security/same-origin_policy","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/security/same-origin_policy/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Security","title":"ウェブセキュリティ"},{"uri":"/ja/docs/Web/Security/Same-origin_policy","title":"同一オリジンポリシー"}],"pageTitle":"同一オリジンポリシー - ウェブセキュリティ | MDN","noIndexing":false}}