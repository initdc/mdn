{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"混在コンテンツ","mdn_url":"/ja/docs/Web/Security/Mixed_content","locale":"ja","native":"日本語","sidebarHTML":"\n<ol><li><a href=\"/ja/docs/Web/Security/Referer_header:_privacy_and_security_concerns\">Referer ヘッダーのプライバシーとセキュリティの考慮事項</a></li><li><a href=\"/ja/docs/Web/Security/Subdomain_takeovers\">Subdomain takeovers</a></li><li><a href=\"/ja/docs/Web/Security/Transport_Layer_Security\">Transport Layer Security</a></li><li><a href=\"/ja/docs/Web/Security/Securing_your_site\">サイトの安全化</a><ol><li><a href=\"/ja/docs/Web/Security/Securing_your_site\">サイトの安全化</a></li><li><a href=\"/ja/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\">フォームの自動補完を無効にするには</a></li></ol></li><li><a href=\"/ja/docs/Web/Security/Subresource_Integrity\">サブリソース完全性</a></li><li><a href=\"/ja/docs/Web/Security/Same-origin_policy\">同一オリジンポリシー</a></li><li><a href=\"/ja/docs/Web/Security/Insecure_passwords\">安全でないパスワード</a></li><li><a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a><ol><li><a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a></li><li><a href=\"/ja/docs/Web/Security/Secure_Contexts/features_restricted_to_secure_contexts\">安全なコンテキストに制限されている機能</a></li></ol></li><li><a href=\"/ja/docs/Web/Security/Types_of_attacks\">攻撃の種類</a></li><li><a href=\"/ja/docs/Web/Security/Mixed_content\">混在コンテンツ</a><ol><li><a href=\"/ja/docs/Web/Security/Mixed_content\">混在コンテンツ</a></li><li><a href=\"/ja/docs/Web/Security/Mixed_content/How_to_fix_website_with_mixed_content\">混在コンテンツでブロックされるウェブサイトを修正するには</a></li></ol></li><li><a href=\"/ja/docs/Web/Security/Weak_Signature_Algorithm\">脆弱な署名アルゴリズム</a></li><li><a href=\"/ja/docs/Web/Security/Certificate_Transparency\">証明書の透明性</a></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>ユーザが <a href=\"/ja/docs/Glossary/https\">HTTPS</a> を通じてページにアクセスすると、ユーザとウェブサーバとの接続は <a href=\"/ja/docs/Glossary/TLS\">TLS</a> で暗号化され、盗聴や中間者攻撃から保護されます。HTTPS のページの中に通常の平文の HTTP で送られてくるコンテンツが含まれている場合、<strong>混在コンテンツ</strong>と呼ばれます。このようなページは部分的にしか暗号化されておらず、盗聴者や中間者攻撃者が暗号化されていないコンテンツにアクセスできてしまいます。つまり、ページは安全ではありません。</p>"}},{"type":"prose","value":{"id":"混在コンテンツの種類","title":"混在コンテンツの種類","isH3":false,"content":"<p>混在コンテンツには <strong>受動的な混在コンテンツ</strong> と <strong>能動的な混在コンテンツ</strong> の 2 種類があります。この 2 つは、中間者攻撃によってコンテンツが改ざんされた場合に、最悪のケースとして脅威が影響を与える度合いで区別されます。受動的な混在コンテンツにおける脅威は低いものとなります (誤解を招くコンテンツが含まれているか、ユーザのクッキーが盗まれている可能性があります)。能動的な混在コンテンツの場合、その脅威としてフィッシングや機密情報の漏えい、悪意あるサイトへのリダイレクトなどが想定されます。</p>"}},{"type":"prose","value":{"id":"受動的な混在コンテンツ","title":"受動的な混在コンテンツ","isH3":true,"content":"<p>受動的な混在コンテンツは、 HTTPS のウェブページの中で HTTP 経由で送信されるコンテンツです。しかし、そのウェブページの他の要素を混在コンテンツから変更することは出来ません。 例えば、HTTP で送信された画像に対して、攻撃者は別の不適切な画像やメッセージへと差し替えてユーザに表示させることが出来ます。 また、攻撃者はユーザへ送信される画像を盗聴することで、ユーザの行動に関する情報を推測することが可能です。 なぜなら、画像ファイルの置かれている場所がウェブサイト中のある特定のページに固定されていることがままあるからです。もし攻撃者が特定の画像に対する HTTP リクエストを覗き見れば、ユーザが閲覧しているウェブページを特定することが出来るでしょう。</p>\n<h4 id=\"受動的なコンテンツの一覧\">受動的なコンテンツの一覧</h4>\n<p>受動的なコンテンツとされる HTTP リクエストは以下の通りです。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> (<code>src</code> 属性)</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> (<code>src</code> 属性)</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> (<code>src</code> 属性)</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a> サブリソース (<code>&lt;object&gt;</code> が HTTP リクエストを送信したとき)</li>\n</ul>"}},{"type":"prose","value":{"id":"能動的な混在コンテンツ","title":"能動的な混在コンテンツ","isH3":true,"content":"<p><strong>能動的な混在コンテンツ</strong>は、その HTTPS ページのすべて、ないしは DOM の一部にアクセスできるコンテンツです。このタイプの混在コンテンツは HTTPS ページの動作を変更することができ、ユーザから機密情報を窃取することも可能です。従って、先程説明した受動的な混在コンテンツによる脅威に加え、能動的な混在コンテンツには他の攻撃ベクタへ向けた脆弱性が存在します。</p>\n<p>能動的な混在コンテンツの場合、中間者攻撃の攻撃者はまず HTTP のコンテンツへのリクエストを横取りすることが出来ます。 その後、攻撃者はレスポンスを改ざんして悪意ある JavaScript コードを含めることも可能です。悪意ある能動的なコンテンツは、ユーザーのログイン情報を窃取したり、ユーザーに関する機密情報を取得したり、ユーザのマシンにマルウェアのインストールを試みることが出来ます (例えば、ブラウザーやそのプラグインの脆弱性を利用することが考えられます)。</p>\n<p>混在コンテンツに関係するリスクは、ユーザが閲覧しているウェブサイトの種類と、そのサイトにどれだけ機微な情報が含まれているかに依存します。そのウェブページには世界中に公開されているデータもあれば、認証された時のみアクセスできる機密情報もあるでしょう。 もしウェブページが公開されていて機微なデータは何もなかった場合でも、攻撃者は能動的な混在コンテンツを利用することにより、ユーザを他の HTTP ページへリダイレクトさせたり、 HTTP cookie をサイトから窃取したりできてしまうのです。</p>\n<h4 id=\"能動的な混在コンテンツの例\">能動的な混在コンテンツの例</h4>\n<p>能動的なコンテンツとされる HTTP リクエストのうち、代表的なものは以下の通りです。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> (<code>src</code> 属性)</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> (<code>href</code> 属性) (CSS スタイルシートも含む)</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> (<code>src</code> 属性)</li>\n  <li><a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> リクエスト</li>\n  <li><a href=\"/ja/docs/Web/API/fetch\" title=\"fetch()\"><code>fetch()</code></a> リクエスト</li>\n  <li><a href=\"/ja/docs/Web/CSS/url\"><code>url</code></a> 値を用いる CSS すべて (<a href=\"/ja/docs/Web/CSS/@font-face\"><code>@font-face</code></a> / <a href=\"/ja/docs/Web/CSS/cursor\"><code>cursor</code></a> / <a href=\"/ja/docs/Web/CSS/background-image\"><code>background-image</code></a> など)</li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a> (<code>data</code> 属性)</li>\n  <li><a href=\"/ja/docs/Web/API/Navigator/sendBeacon\"><code>Navigator.sendBeacon</code></a> (<code>url</code> 属性)</li>\n</ul>\n<p>Chrome と同様に、ウェブフォントやワーカーのようなリソースタイプも能動的なコンテンツとみなされます。</p>"}},{"type":"prose","value":{"id":"ウェブコンソール内の警告","title":"ウェブコンソール内の警告","isH3":false,"content":"<p>閲覧しているページに混在コンテンツが含まれていた場合、Firefox のウェブコンソールには警告が表示されます。 HTTP 経由で読み込まれた混在コンテンツのリソースは赤色で表示され、このページへのリンクである「混在コンテンツ」の文字列が併記されます。</p>\n<p><a href=\"Mixed_content_-_Net_pane.png\"><img src=\"/en-US/docs/Web/Security/Mixed_content/Mixed_content_-_Net_pane.png\" alt=\"Screen shot of the web console displaying a mixed content warning.\" width=\"1120\" height=\"286\" loading=\"lazy\"></a></p>\n<p>これらの警告をウェブコンソールで見つけるのと同様に、 <a href=\"/ja/docs/Web/HTTP/CSP\">Content Security Policy (CSP)</a> を使用して問題を報告することができます。 <a href=\"https://www.jitbit.com/sslcheck/\" class=\"external\" rel=\" noopener\">SSL-check</a> や <a href=\"https://www.missingpadlock.com/\" class=\"external\" rel=\" noopener\">Missing Padlock</a> のようなオンラインクローラーと使用すると、ウェブサイトを再帰的にチェックし、安全ではないコンテンツのリンクを探すことができます。</p>\n<p>Firefox 23 以降より、能動的な混在コンテンツはデフォルトでブロックされるようになりました (受動的な混在コンテンツは設定によりブロック可能です)。ウェブ開発者が混在コンテンツのエラーに気付きやすくなるよう、ブロックされた混在コンテンツへのリクエストはウェブコンソールのセキュリティペインにすべて記録されます。</p>\n<p><a href=\"blocked-mixed-content-errors.png\"><img src=\"/en-US/docs/Web/Security/Mixed_content/mixed_content_webconsole.png\" alt=\"A screenshot of blocked mixed content errors in the Security Pane of the Web Console\" width=\"1120\" height=\"285\" loading=\"lazy\"></a></p>\n<p>このエラーを修正するには、 HTTP コンテンツへのリクエストをすべて HTTPS コンテンツへのリクエストに差し替えてください。よくある混在コンテンツには JavaScript ファイルやスタイルシート、画像、動画、その他のメディアファイルなどがあります。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Firefox 55 以降、 <code>http://127.0.0.1/</code> で混在コンテンツの読み込みが許可されました (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=903966\" class=\"external\" rel=\" noopener\">バグ&nbsp;903966</a> を参照)。 Chrome は <code>http://127.0.0.1/</code> 及び <code>http://localhost/</code> で混在コンテンツを許可しています。 Safari は混在コンテンツを許可しません。</p>\n</div>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://w3c.github.io/webappsec/specs/mixedcontent/\" class=\"external\" rel=\" noopener\">Mixed Content - W3C Editor's Draft</a></li>\n  <li><a href=\"/ja/docs/Web/Security/Mixed_content/How_to_fix_website_with_mixed_content\">混在コンテンツでブロックされるウェブサイトを修正するには</a></li>\n</ul>"}}],"toc":[{"text":"混在コンテンツの種類","id":"混在コンテンツの種類"},{"text":"ウェブコンソール内の警告","id":"ウェブコンソール内の警告"},{"text":"関連情報","id":"関連情報"}],"summary":"ユーザが HTTPS を通じてページにアクセスすると、ユーザとウェブサーバとの接続は TLS で暗号化され、盗聴や中間者攻撃から保護されます。HTTPS のページの中に通常の平文の HTTP で送られてくるコンテンツが含まれている場合、混在コンテンツと呼ばれます。このようなページは部分的にしか暗号化されておらず、盗聴者や中間者攻撃者が暗号化されていないコンテンツにアクセスできてしまいます。つまり、ページは安全ではありません。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Mixed content","locale":"en-US","native":"English (US)"},{"title":"Contenu mixte","locale":"fr","native":"Français"},{"title":"混合內容","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/security/mixed_content","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/security/mixed_content/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Security","title":"ウェブセキュリティ"},{"uri":"/ja/docs/Web/Security/Mixed_content","title":"混在コンテンツ"}],"pageTitle":"混在コンテンツ - ウェブセキュリティ | MDN","noIndexing":false}}