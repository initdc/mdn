{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"高度な例","mdn_url":"/ja/docs/Web/XSLT/XSLT_JS_interface_in_Gecko/Advanced_Example","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":"高度な例","title":"高度な例","isH3":false,"content":"<p>高度な例では、コンテンツに基づいていくつかの div をソートします。この例では、昇順ソートと降順ソートの間で交互にコンテンツをソートすることができます。JavaScript は最初に.xsl ファイルのみをロードし、ファイルのロードが完了すると<code>xslloaded</code>変数を true に設定します。<a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>XSLTProcessor.getParameter()</code></a>メソッドを使用すると、コードは昇順または降順に並べ替えることができます。パラメータが空の場合（ソートが初めて発生したとき、XSLT ファイルに値がないため）はデフォルトで昇順になります。ソート値は<a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>XSLTProcessor.setParameter()</code></a>を使用して設定されます。</p>\n<p>XSLT ファイルには、JavaScript がソート方法を変更するために設定する<code>myOrder</code>というパラメータがあります。<code>xsl:sort</code>要素の order 属性は、<code>$myOrder</code>を使用してパラメータの値にアクセスできます。ただし、その値は文字列ではなく XPATH 式である必要があるため、<code>{$myOrder}</code>が使用されます。{} を使用すると、コンテンツが XPath 式として評価されます。</p>\n<p>変換が完了すると、この例に示すように、結果がドキュメントに追加されます。</p>\n<p><strong>サンプル 7 : div コンテンツを元にソートする</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// XHTML Fragment:</span>\n\n<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"example\"</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token number\">3</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token number\">4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token number\">5</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token number\">6</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token number\">7</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token number\">8</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token number\">9</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span><span class=\"token number\">10</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n\n<span class=\"token comment\">// JavaScript</span>\n\n<span class=\"token keyword\">var</span> xslRef<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> xslloaded <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> xsltProcessor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XSLTProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> myDOM<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> xmlRef <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>implementation<span class=\"token punctuation\">.</span><span class=\"token function\">createDocument</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>xslloaded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"example2.xsl\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    xslRef <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>responseXML<span class=\"token punctuation\">;</span>\n    xsltProcessor<span class=\"token punctuation\">.</span><span class=\"token function\">importStylesheet</span><span class=\"token punctuation\">(</span>xslRef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    xslloaded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// create a new XML document in memory</span>\n  xmlRef <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>implementation<span class=\"token punctuation\">.</span><span class=\"token function\">createDocument</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// we want to move a part of the DOM from an HTML document to an XML document.</span>\n  <span class=\"token comment\">// importNode is used to clone the nodes we want to process via XSLT - true makes it do a deep clone</span>\n  <span class=\"token keyword\">var</span> myNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> clonedNode <span class=\"token operator\">=</span> xmlRef<span class=\"token punctuation\">.</span><span class=\"token function\">importNode</span><span class=\"token punctuation\">(</span>myNode<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// after cloning, we append</span>\n  xmlRef<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>clonedNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// set the sorting parameter in the XSL file</span>\n  <span class=\"token keyword\">var</span> sortVal <span class=\"token operator\">=</span> xsltProcessor<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"myOrder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sortVal <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> sortVal <span class=\"token operator\">==</span> <span class=\"token string\">\"descending\"</span><span class=\"token punctuation\">)</span>\n    xsltProcessor<span class=\"token punctuation\">.</span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"myOrder\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ascending\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span>\n    xsltProcessor<span class=\"token punctuation\">.</span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"myOrder\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"descending\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// initiate the transformation</span>\n  <span class=\"token keyword\">var</span> fragment <span class=\"token operator\">=</span> xsltProcessor<span class=\"token punctuation\">.</span><span class=\"token function\">transformToFragment</span><span class=\"token punctuation\">(</span>xmlRef<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// clear the contents</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n  myDOM <span class=\"token operator\">=</span> fragment<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// add the new content from the transformation</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>fragment<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// XSL Stylesheet:</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>xsl<span class=\"token operator\">:</span>stylesheet version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> xmlns<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.w3.org/1999/xhtml\"</span> <span class=\"token literal-property property\">xmlns</span><span class=\"token operator\">:</span>html<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.w3.org/1999/xhtml\"</span> <span class=\"token literal-property property\">xmlns</span><span class=\"token operator\">:</span>xsl<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.w3.org/1999/XSL/Transform\"</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>xsl<span class=\"token operator\">:</span>output method<span class=\"token operator\">=</span><span class=\"token string\">\"html\"</span> indent<span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n\n  <span class=\"token operator\">&lt;</span>xsl<span class=\"token operator\">:</span>param name<span class=\"token operator\">=</span><span class=\"token string\">\"myOrder\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n\n  <span class=\"token operator\">&lt;</span>xsl<span class=\"token operator\">:</span>template match<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">&gt;</span>\n\n    <span class=\"token operator\">&lt;</span>xsl<span class=\"token operator\">:</span>apply<span class=\"token operator\">-</span>templates select<span class=\"token operator\">=</span><span class=\"token string\">\"/div//div\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>xsl<span class=\"token operator\">:</span>sort select<span class=\"token operator\">=</span><span class=\"token string\">\".\"</span> data<span class=\"token operator\">-</span>type<span class=\"token operator\">=</span><span class=\"token string\">\"number\"</span> order<span class=\"token operator\">=</span><span class=\"token string\">\"{$myOrder}\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>xsl<span class=\"token operator\">:</span>apply<span class=\"token operator\">-</span>templates<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>xsl<span class=\"token operator\">:</span>template<span class=\"token operator\">&gt;</span>\n\n  <span class=\"token operator\">&lt;</span>xsl<span class=\"token operator\">:</span>template match<span class=\"token operator\">=</span><span class=\"token string\">\"div\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>xsl<span class=\"token operator\">:</span>copy<span class=\"token operator\">-</span><span class=\"token keyword\">of</span> select<span class=\"token operator\">=</span><span class=\"token string\">\".\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>xsl<span class=\"token operator\">:</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>xsl<span class=\"token operator\">:</span>stylesheet<span class=\"token operator\">&gt;</span>\n</code></pre></div>"}}],"toc":[{"text":"高度な例","id":"高度な例"}],"summary":"高度な例では、コンテンツに基づいていくつかの div をソートします。この例では、昇順ソートと降順ソートの間で交互にコンテンツをソートすることができます。JavaScript は最初に.xsl ファイルのみをロードし、ファイルのロードが完了するとxslloaded変数を true に設定します。XSLTProcessor.getParameter()メソッドを使用すると、コードは昇順または降順に並べ替えることができます。パラメータが空の場合（ソートが初めて発生したとき、XSLT ファイルに値がないため）はデフォルトで昇順になります。ソート値はXSLTProcessor.setParameter()を使用して設定されます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Advanced Example","locale":"en-US","native":"English (US)"},{"title":"Exemple avancé","locale":"fr","native":"Français"},{"title":"Exemplo Avançado","locale":"pt-BR","native":"Português (do Brasil)"}],"source":{"folder":"ja/web/xslt/xslt_js_interface_in_gecko/advanced_example","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/xslt/xslt_js_interface_in_gecko/advanced_example/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/XSLT","title":"XSLT: 拡張可能なスタイルシートの言語変換"},{"uri":"/ja/docs/Web/XSLT/XSLT_JS_interface_in_Gecko","title":"Gecko の XSLT/JavaScript インターフェース"},{"uri":"/ja/docs/Web/XSLT/XSLT_JS_interface_in_Gecko/Advanced_Example","title":"高度な例"}],"pageTitle":"高度な例 - XSLT: 拡張可能なスタイルシートの言語変換 | MDN","noIndexing":false}}