{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"PIパラメータ","mdn_url":"/ja/docs/Web/XSLT/PI_Parameters","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":"概要","title":"概要","isH3":true,"content":"<p>XSLT は実行時にパラメータをスタイルシートに渡すという概念をサポートしています。これによりしばらくの間は JavaScript で <a href=\"/ja/docs/Web/API/XSLTProcessor\">XSLTProcessor</a> を使用することが可能です。しかし、 <code>&lt;?xml-stylesheet?&gt;</code> 処理命令（PI）を使用するときは、パラメータを提供する方法がありませんでした。</p>\n<p>これを解決するために 2 つの新しい PI 、つまり <code>&lt;?xslt-param?&gt;</code> および <code>&lt;?xslt-param-namespace?&gt;</code> が <a href=\"/ja/docs/XSLT/en/Firefox_2\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Firefox 2</a> (詳細については<a href=\"#supported_versions\">Supported versions</a>を参照) で実装されています。どちらの PI にも、<code>xml-stylesheet</code> PI と同じ方法で「擬似属性」を含めることができます。</p>\n<p>次のドキュメントは \"color\" と \"size\" の 2 つのパラメータをスタイルシート \"style.xsl\" に渡します。</p>\n<pre class=\"notranslate\">&lt;?xslt-param name=\"color\" value=\"blue\"?&gt;\n&lt;?xslt-param name=\"size\" select=\"2\"?&gt;\n&lt;?xml-stylesheet type=\"text/xsl\" href=\"style.xsl\"?&gt;\n</pre>\n<p>これらの PI は JavaScript で <code>XSLTProcessor</code> オブジェクトを使用して変換が行われても効果がありません。</p>"}},{"type":"prose","value":{"id":"処理の指示","title":"処理の指示","isH3":true,"content":"<p><code>xslt-param</code> および <code>xslt-param-namespace</code> PI の属性は、<a href=\"https://www.w3.org/TR/xml-stylesheet/\" class=\"external\" rel=\" noopener\">xml-stylesheet</a> で定義されている規則を使用して解析されます。認識できない属性はすべて無視する必要があります。属性の解析は、 <code>xml-stylesheet</code> の構文に従う限り、認識できない属性が存在するせいで失敗してはなりません。</p>\n<p><code>xslt-param</code> と <code>xslt-param-namespace</code> PI の両方はドキュメントのプロローグ、つまり最初の要素タグの前になければなりません。プロローグ内のすべての PI は、<code>xml-stylesheet</code> PI の前後に発生する必要があります。</p>\n<p>複数の <code>xml-stylesheet</code> PI がある場合、パラメータはすべてのスタイルシートに適用され、その結果すべてのスタイルシートが XSLT 仕様に従って単一のスタイルシートにインポートされます。複数の <code>xml-stylesheet</code> XSLT PI は現在 Firefox ではサポートされていません。</p>\n<h4 id=\"xslt-param\">xslt-param</h4>\n<p><code>xslt-param</code> PI は 4 つの属性をサポートしています。</p>\n<dl>\n  <dt id=\"name\">name</dt>\n  <dd>\n    <p>パラメータ名のローカル名部分。属性の構文チェックは行われませんが、有効な <a href=\"https://www.w3.org/TR/REC-xml-names/#NT-NCName\" class=\"external\" rel=\" noopener\">NCName</a> でない場合は、スタイルシートのどのパラメータにも一致しません。</p>\n  </dd>\n  <dt id=\"namespace\">namespace</dt>\n  <dd>\n    <p>パラメータ名の名前空間。属性の構文チェックは行われません。</p>\n  </dd>\n  <dt id=\"value\">value</dt>\n  <dd>\n    <p>パラメータの文字列値を格納します。属性の値はパラメータの値として使用されます。データ型は常に最適です。</p>\n  </dd>\n  <dt id=\"select\">select</dt>\n  <dd>\n    <p>パラメータの <a href=\"/ja/docs/Web/XPath\">XPath</a> 式。属性の値は XPath 式として解析されます。式を評価した結果はパラメータの値として使用されます。</p>\n  </dd>\n</dl>\n<p><strong>name</strong> 属性がないか空の場合、PI は無視されます。</p>\n<p><strong>namespace</strong> 属性がないか空の場合、null 名前空間が使用されます。</p>\n<p>スタイルシートに存在しない (またはスタイルシート内の変数である) パラメータ名を指定するのはエラーではありません。PI は単に無視されます。</p>\n<p><strong>value</strong> と <strong>select</strong> の両方が存在する場合、または <strong>value</strong> も <strong>select</strong> も存在しない場合、PI は無視されます。</p>\n<p><code>value=\"...\"</code> はアポストロフィと引用文字の両方を含むことができるので、厳密には <code>select=\"'...'\"</code> と等しくないことに注意してください。</p>\n<h5 id=\"例\">例</h5>\n<p>パラメータ 'color' を文字列 'red' に設定します。</p>\n<pre class=\"notranslate\">&lt;?xslt-param name=\"color\" value=\"red\"?&gt;\n</pre>\n<p>パラメータ 'columns' を 2 に設定します。</p>\n<pre class=\"notranslate\">&lt;?xslt-param name=\"columns\" select=\"2\"?&gt;\n</pre>\n<p>パラメータ 'books' を null 名前空間のすべての <code>&lt;book&gt;</code> 要素を含むノードセットに設定します。</p>\n<pre class=\"notranslate\">&lt;?xslt-param name=\"books\" select=\"//book\"?&gt;\n</pre>\n<p>パラメータ 'show-toc' を真偽値 <code>true</code> に設定します。</p>\n<pre class=\"notranslate\"> &lt;?xslt-param name=\"show-toc\" select=\"true()\"?&gt;\n</pre>\n<h5 id=\"select_属性コンテキスト\">select 属性コンテキスト</h5>\n<p>次のコンテキストは、<strong>select</strong> 属性の式の解析と評価に使用されます。</p>\n<ul>\n  <li>コンテキストノードは、スタイルシートを実行するときに使用される初期カレントノードとして使用されるノードです</li>\n  <li>コンテキストポジションは、スタイルシートを実行する際に使用される初期カレントノードリスト内のコンテキストノードの位置です</li>\n  <li>コンテキストサイズは、スタイルシートを実行する際に使用される初期の現在のノードリストのサイズです</li>\n  <li>変数はありません</li>\n  <li>関数ライブラリは標準の XPath 関数ライブラリです。</li>\n  <li>名前空間宣言は <code>xslt-param-namespace</code> PI によって決まります。以下を参照してください</li>\n</ul>\n<p><strong>select</strong> 属性が解析または実行に失敗した場合、PI は無視されます (特に、<strong>value</strong> 属性に戻ることはありません)。</p>\n<h4 id=\"xslt-param-namespace\">xslt-param-namespace</h4>\n<p><code>xslt-param-namespace</code> は 2 つの属性を使用します。</p>\n<dl>\n  <dt id=\"prefix\">prefix</dt>\n  <dd>\n    <p>マッピングされている接頭辞</p>\n  </dd>\n  <dt id=\"namespace_2\">namespace</dt>\n  <dd>\n    <p>接頭辞がマップされる名前空間</p>\n  </dd>\n</dl>\n<p><code>xslt-param-namespace</code> PI は、それに続くすべての xslt-params の select 属性の式に影響します。 これは、xslt-param-namespace と xslt-param PI の間にコメントや他の PI などの他のノードがある場合でも適用されます。</p>\n<p>複数の PI が同じプレフィックスを使用するのはエラーではなく、新しい PI はすべてプレフィックスがマップする名前空間を変更するだけです。</p>\n<p><strong>接頭辞</strong>がないか、空もしくは無効な NCName と等しい場合、PI は無視されます。</p>\n<p><strong>名前空間</strong>がない場合、PI は無視されます。<strong>名前空間</strong>が空の場合、接頭辞マッピングは削除されます。</p>\n<h5 id=\"例_2\">例</h5>\n<p>パラメータ 'books' を 'http://www.example.org/myNamespace' 名前空間のすべての <code>&lt;book&gt;</code> 要素を含むノードセットに設定します。</p>\n<pre class=\"notranslate\">&lt;?xslt-param-namespace prefix=\"my\" namespace=\"http://www.example.org/myNamespace\"?&gt;\n&lt;?xslt-param name=\"books\" select=\"//my:book\"?&gt;\n</pre>"}},{"type":"prose","value":{"id":"サポート対象バージョン","title":"サポート対象バージョン","isH3":true,"content":"<p>Firefox 2.0.0.1 以降でサポートされています。<strong>value</strong> 属性は Firefox 2 ではサポートされていますが、2.0 リリースの一部の式では <strong>select</strong> 属性がクラッシュします。</p>"}},{"type":"prose","value":{"id":"可能性のある将来の開発","title":"可能性のある将来の開発","isH3":true,"content":"<p>式に XSLT 関数を許可する必要がありますか？ <code>document()</code> は役に立ちそうですが、<code>generate-id()</code> が同じ文書に対して同じ文字列を生成しなければならない不変条件を維持するのは難しいようです。</p>\n<p>XSLT スタイルシートで URL パラメータをクエリするとどうなりますか？ 例えば、それらを指定された &lt;xsl:param&gt;に渡します。</p>"}}],"toc":[],"summary":"XSLT は実行時にパラメータをスタイルシートに渡すという概念をサポートしています。これによりしばらくの間は JavaScript で XSLTProcessor を使用することが可能です。しかし、 <?xml-stylesheet?> 処理命令（PI）を使用するときは、パラメータを提供する方法がありませんでした。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"PI Parameters","locale":"en-US","native":"English (US)"},{"title":"Paramètres des instructions de traitement","locale":"fr","native":"Français"}],"source":{"folder":"ja/web/xslt/pi_parameters","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/xslt/pi_parameters/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/XSLT","title":"XSLT: 拡張可能なスタイルシートの言語変換"},{"uri":"/ja/docs/Web/XSLT/PI_Parameters","title":"PIパラメータ"}],"pageTitle":"PIパラメータ - XSLT: 拡張可能なスタイルシートの言語変換 | MDN","noIndexing":false}}