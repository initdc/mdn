{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"シャドウ DOM の使用","mdn_url":"/ja/docs/Web/Web_Components/Using_shadow_DOM","locale":"ja","native":"日本語","sidebarHTML":"<ol><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/Web_Components/Using_custom_elements\">Using custom elements</a></li><li><a href=\"/ja/docs/Web/Web_Components/Using_shadow_DOM\">Using shadow DOM</a></li><li><a href=\"/ja/docs/Web/Web_Components/Using_templates_and_slots\">Using templates and slots</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></li><li><a href=\"/ja/docs/Web/API/ShadowRoot\"><code>ShadowRoot</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a></li><li><a href=\"/ja/docs/Web/API/Element/slot\"><code>Element.slot</code></a></li><li><a href=\"/ja/docs/Web/API/Event/composed\"><code>Event.composed</code></a></li><li><a href=\"/ja/docs/Web/API/Event/composedPath\"><code>Event.composedPath</code></a></li><li><a href=\"/ja/docs/Web/API/Node/isConnected\"><code>Node.isConnected</code></a></li><li><a href=\"/ja/docs/Web/API/Window/customElements\"><code>Window.customElements</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Document/createElement\"><code>Document.createElement()</code></a></li><li><a href=\"/ja/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/getRootNode\"><code>Node.getRootNode()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>ウェブコンポーネントにおける重要な側面の一つが、カプセル化です。マークアップ構造、スタイル、動作を隠蔽し、コード上の他のコードから分離することで、他の部分でクラッシュすることを防ぎ、コードをきれいにしておくことができます。シャドウ DOM API はこの主要部分であり、隠蔽され分離された DOM を要素に取り付けるための方法を提供しています。この記事ではシャドウ DOM を使う基本を記述しています。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> シャドウ DOM は Firefox (バージョン 63 以降)、Chrome、Opera、 Safari が対応しています。 Chromium ベースの新しい Edge （75 以降）も対応しています。古い Edge は対応していません。</p>\n</div>"}},{"type":"prose","value":{"id":"高水準のビュー","title":"高水準のビュー","isH3":false,"content":"<p>この記事は、すでにあなたが <a href=\"/ja/docs/Web/API/Document_Object_Model/Introduction\">DOM (Document Object Model)</a> の概念を理解していることを想定しています。これはツリー上の構造で、接続されたノードがマークアップ文書（ウェブ文書の場合は通常 HTML 文書）に現れるさまざまな要素や文字列を表します。例として、以下のような HTML の断片を考えてみましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Simple DOM example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dinosaur.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>A red Tyrannosaurus Rex: A two legged dinosaur standing upright like a human, with small arms, and a large head with lots of sharp teeth.<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Here we will add a link to the <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.mozilla.org/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Mozilla homepage<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>この断片によって以下のような DOM 構造が構成されます。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Web_Components/Using_shadow_DOM/dom-screenshot.png\" alt=\"\" width=\"717\" height=\"396\" loading=\"lazy\">\n</p>\n<p><em>シャドウ</em> DOM により、通常の DOM ツリーの要素の下に隠れた DOM ツリーを取り付けることができます。このシャドウ DOM ツリーはシャドウルートから始まり、その下には普通の DOM ツリーと同様に任意の要素を追加することができます。</p>\n<p>\n  <img src=\"/ja/docs/Web/Web_Components/Using_shadow_DOM/shadowdom.svg\" alt=\"文書、シャドウルート、シャドウホストの相互作用を示す図の SVG 版。\" width=\"1107\" height=\"509\" loading=\"lazy\">\n</p>\n<p>以下にシャドウ DOM における用語を定義します。</p>\n<ul>\n  <li><strong>シャドウホスト</strong>: シャドウ DOM が取り付けられた、通常の DOM ノード</li>\n  <li><strong>シャドウツリー</strong>: シャドウ DOM の中にある DOM ツリー</li>\n  <li><strong>シャドウ境界</strong>: シャドウ DOM と通常の DOM の境界</li>\n  <li><strong>シャドウルート</strong>: シャドウツリーの根ノード</li>\n</ul>\n<p>シャドウ DOM 内のノードには、シャドウでないノードと全く同じように影響を与えることができます。たとえば、子を追加したり、属性を設定したり、element.style.foo を使用して個々のノードのスタイルを設定したり、 <a href=\"/ja/docs/Web/HTML/Element/style\"><code>&lt;style&gt;</code></a> 要素内でシャドウ DOM ツリー全体へのスタイルを追加したりすることができます。違いは、シャドウ DOM 内のどのコードもその外の何かに影響を与えることができず、便利なカプセル化ができることです。</p>\n<p>なお、シャドウ DOM は決して新しいものではありません。ブラウザーは長い間、要素の内部構造をカプセル化するためにこれを使用してきました。例えば、既定のブラウザーコントロールが公開されている <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素を思い浮かべてください。 DOM には <code>&lt;video&gt;</code> 要素しか表示されませんが、そのシャドウ DOM の内部には、一連のボタンやその他のコントロールが含まれています。 Shadow DOM 仕様により、独自のカスタム要素のシャドウ DOM を実際に操作することができるようになりました。</p>"}},{"type":"prose","value":{"id":"基本的な使い方","title":"基本的な使い方","isH3":false,"content":"<p>任意の要素にシャドウルートを取り付けるには <a href=\"/ja/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a> メソッドを使用します。このメソッドはオプションオブジェクトを引数として取り、その中にはオプションが 1 つ、 <code>mode</code> オプションを <code>open</code> または <code>closed</code> の値で取ります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> shadow <span class=\"token operator\">=</span> elementRef<span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> shadow <span class=\"token operator\">=</span> elementRef<span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'closed'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>open</code> の場合は、シャドウ DOM にメインページに書かれた JavaScript からアクセスできます。以下のように <a href=\"/ja/docs/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a> プロパティを利用してアクセスできます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myShadowDom <span class=\"token operator\">=</span> myCustomElem<span class=\"token punctuation\">.</span>shadowRoot<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>シャドウルートを <code>mode: closed</code> で取り付けた場合、外部からシャドウ DOM にアクセスすることができません。 <code>myCustomElem.shadowRoot</code> は <code>null</code> を返します。シャドウ DOM を含む既成の要素、例えば <code>&lt;video&gt;</code> などは <code>closed</code> になっています。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <a href=\"https://blog.revillweb.com/open-vs-closed-shadow-dom-9f3d7427d1af\" class=\"external\" rel=\" noopener\">このブログ記事</a>を見ると、実は closed のシャドウ DOM を回避するのはさほど難しいことではなく、また、これを完全に隠すことはその価値の割には面倒です。</p>\n</div>\n<p>シャドウ DOM をカスタム要素のコンストラクターの一部として取り付けた場合（シャドウ DOM の最も有用な用途です）、次のような方法を使用することになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>シャドウ DOM を要素に取り付けた場合、その操作は通常の DOM 操作と同じ DOM API を使うだけでよいのです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> para <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nshadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>para<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// etc.</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"簡単な例を一通り扱う","title":"簡単な例を一通り扱う","isH3":false,"content":"<p>カスタム要素内のシンプルなシャドウ DOM を見てみましょう。 <a href=\"https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component\" class=\"external\" rel=\" noopener\"><code>&lt;popup-info&gt;</code></a> (<a href=\"https://mdn.github.io/web-components-examples/popup-info-box-web-component/\" class=\"external\" rel=\" noopener\">ライブ例</a>を参照)です。この要素は画像アイコンとテキストを取り、アイコンをページに埋め込みます。アイコンがフォーカスされるとポップアップが表示され、さらなる情報を提供します。まずは <code>HTMLElement</code> を拡張して <code>PopUpInfo</code> というクラスを定義します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">PopUpInfo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// コンストラクターでは常に super を最初に呼び出してください</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ここに要素の機能を記述します</span>\n\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>クラス定義の中で、要素のコンストラクターを定義し、その中で要素のインスタンスが生成されたときに、その要素が持つすべての機能を定義します。</p>"}},{"type":"prose","value":{"id":"シャドウルートの作成","title":"シャドウルートの作成","isH3":true,"content":"<p>最初にシャドウルートをカスタム要素に追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// シャドウルートを生成</span>\n<span class=\"token keyword\">let</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"シャドウ_dom_構造の作成","title":"シャドウ DOM 構造の作成","isH3":true,"content":"<p>次に、いくつかの DOM 操作を使用して、要素の内部シャドウ DOM 構造を作成します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// spans の生成</span>\n<span class=\"token keyword\">let</span> wrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwrapper<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wrapper'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> icon <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nicon<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'icon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nicon<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabindex'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> info <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ninfo<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'info'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 属性の中身を取得し、 info の span の中に入れる</span>\n<span class=\"token keyword\">let</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ninfo<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// アイコンを挿入</span>\n<span class=\"token keyword\">let</span> imgUrl<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  imgUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  imgUrl <span class=\"token operator\">=</span> <span class=\"token string\">'img/default.png'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> imgUrl<span class=\"token punctuation\">;</span>\nicon<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"シャドウ_dom_のスタイル付け","title":"シャドウ DOM のスタイル付け","isH3":true,"content":"<p class=\"brush: js\">そのあと、 <a href=\"/ja/docs/Web/HTML/Element/style\"><code>&lt;style&gt;</code></a> 要素を作り CSS でスタイルを付けます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// CSS を生成してシャドウ DOM に適用</span>\n<span class=\"token keyword\">let</span> style <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nstyle<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n.wrapper {\n  position: relative;\n}\n\n.info {\n  font-size: 0.8rem;\n  width: 200px;\n  display: inline-block;\n  border: 1px solid black;\n  padding: 10px;\n  background: white;\n  border-radius: 10px;\n  opacity: 0;\n  transition: 0.6s all;\n  position: absolute;\n  bottom: 20px;\n  left: 10px;\n  z-index: 3;\n}\n\nimg {\n  width: 1.2rem;\n}\n\n.icon:hover + .info, .icon:focus + .info {\n  opacity: 1;\n}</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"シャドウ_dom_をシャドウルートに追加","title":"シャドウ DOM をシャドウルートに追加","isH3":true,"content":"<p>最後のステップは、生成した要素すべてをシャドウルートに取り付けることです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 生成した要素をシャドウ DOM に取り付ける</span>\nshadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nshadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>icon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"カスタム要素の使用","title":"カスタム要素の使用","isH3":true,"content":"<p>一度クラスを定義すれば、<a href=\"/ja/docs/Web/Web_Components/Using_custom_elements\">カスタム要素の使用</a>で説明したように、その要素を定義し、ページに配置するだけで簡単に使用できるようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 新しい要素を定義</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'popup-info'</span><span class=\"token punctuation\">,</span> PopUpInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>popup-info</span> <span class=\"token attr-name\">img</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img/alt.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Your card validation code (CVC) is an extra\n                                    security feature — it is the last 3 or 4\n                                    numbers on the back of your card.<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"内部スタイルと外部スタイル","title":"内部スタイルと外部スタイル","isH3":true,"content":"<p>上記の例では <a href=\"/ja/docs/Web/HTML/Element/style\"><code>&lt;style&gt;</code></a> 要素を用いてシャドウ DOM にスタイルを適用しましたが、代わりに完全に <a href=\"/ja/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> 要素から外部スタイルシートを参照することが可能です。</p>\n<p>例えば、 <a href=\"https://mdn.github.io/web-components-examples/popup-info-box-external-stylesheet/\" class=\"external\" rel=\" noopener\">popup-info-box-external-stylesheet</a> のコードを少し見てみましょう（<a href=\"https://github.com/mdn/web-components-examples/blob/master/popup-info-box-external-stylesheet/main.js\" class=\"external\" rel=\" noopener\">ソースコード</a>はこちら）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 外部スタイルシートをシャドウ DOM に適用</span>\n<span class=\"token keyword\">const</span> linkElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'link'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlinkElem<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rel'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'stylesheet'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlinkElem<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'style.css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 生成された要素をシャドウ DOM に添付</span>\nshadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>linkElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>なお、 <a href=\"/ja/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> 要素はシャドウルートの描画をブロックしないので、スタイルシートのロード中にスタイル付けされていないコンテンツ (FOUC) が一瞬表示されるかもしれないことに注意してください。</p>\n<p>最近のブラウザーの多くは、共通のノードからクローンされた、あるいは同一のテキストを持つ <a href=\"/ja/docs/Web/HTML/Element/style\"><code>&lt;style&gt;</code></a> タグに対して、単一のバッキングスタイルシートを共有できるようにする最適化を実装しています。この最適化によって、外部スタイルでも内部スタイルでも性能は同程度になるはずです。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/Web_Components/Using_custom_elements\">カスタム要素の使用</a></li>\n  <li><a href=\"/ja/docs/Web/Web_Components/Using_templates_and_slots\">テンプレートとスロットの使用</a></li>\n</ul>"}}],"toc":[{"text":"高水準のビュー","id":"高水準のビュー"},{"text":"基本的な使い方","id":"基本的な使い方"},{"text":"簡単な例を一通り扱う","id":"簡単な例を一通り扱う"},{"text":"関連情報","id":"関連情報"}],"summary":"ウェブコンポーネントにおける重要な側面の一つが、カプセル化です。マークアップ構造、スタイル、動作を隠蔽し、コード上の他のコードから分離することで、他の部分でクラッシュすることを防ぎ、コードをきれいにしておくことができます。シャドウ DOM API はこの主要部分であり、隠蔽され分離された DOM を要素に取り付けるための方法を提供しています。この記事ではシャドウ DOM を使う基本を記述しています。","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using shadow DOM","locale":"en-US","native":"English (US)"},{"title":"Usando shadow DOM","locale":"es","native":"Español"},{"title":"Utiliser le shadow DOM","locale":"fr","native":"Français"},{"title":"shadow DOM 사용하기","locale":"ko","native":"한국어"},{"title":"使用 shadow DOM","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/web_components/using_shadow_dom","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/web_components/using_shadow_dom/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Web_Components","title":"ウェブコンポーネント"},{"uri":"/ja/docs/Web/Web_Components/Using_shadow_DOM","title":"シャドウ DOM の使用"}],"pageTitle":"シャドウ DOM の使用 - ウェブコンポーネント | MDN","noIndexing":false}}