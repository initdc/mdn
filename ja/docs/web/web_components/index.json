{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ウェブコンポーネント","mdn_url":"/ja/docs/Web/Web_Components","locale":"ja","native":"日本語","sidebarHTML":"<ol><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/Web_Components/Using_custom_elements\">Using custom elements</a></li><li><a href=\"/ja/docs/Web/Web_Components/Using_shadow_DOM\">Using shadow DOM</a></li><li><a href=\"/ja/docs/Web/Web_Components/Using_templates_and_slots\">Using templates and slots</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></li><li><a href=\"/ja/docs/Web/API/ShadowRoot\"><code>ShadowRoot</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a></li><li><a href=\"/ja/docs/Web/API/Element/slot\"><code>Element.slot</code></a></li><li><a href=\"/ja/docs/Web/API/Event/composed\"><code>Event.composed</code></a></li><li><a href=\"/ja/docs/Web/API/Event/composedPath\"><code>Event.composedPath</code></a></li><li><a href=\"/ja/docs/Web/API/Node/isConnected\"><code>Node.isConnected</code></a></li><li><a href=\"/ja/docs/Web/API/Window/customElements\"><code>Window.customElements</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Document/createElement\"><code>Document.createElement()</code></a></li><li><a href=\"/ja/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/getRootNode\"><code>Node.getRootNode()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>ウェブコンポーネントは、再利用可能なカスタム要素を作成し、ウェブアプリの中で利用するための、一連のテクノロジーです。コードの他の部分から独立した、カプセル化された機能を使って実現します。</p>"}},{"type":"prose","value":{"id":"概念と使用法","title":"概念と使用法","isH3":false,"content":"<p>開発者ならご存知でしょうが、可能な限りコードを再利用することは良い考えです。しかしこれは、以前から、カスタムのマークアップ構造にとって、それほど簡単なことではありませんでした。複雑な HTML (と一連のスタイルやスクリプト) を考えてみて下さい。ときに、カスタム UI の制御をレンダリングするために、コードを書かなければなりません。それに、注意していないと、それらの制御をどう使い回すかで、ページが複雑なものになってしまいます。</p>\n<p>ウェブコンポーネントは、上記の問題の解決を目指しています。 ウェブコンポーネントは、3 つの主要な技術からなり、それらを組み合わせて、多目的なカスタム要素を作成します。カプセル化された機能を使うことで、コードの重複を恐れることなく、どこでも再利用することができます。</p>\n<ul>\n  <li><strong>カスタム要素</strong>: カスタム要素とその動作を定義するための、一連の JavaScript API です。以降、ユーザーインターフェイスの中で好きなだけ使用することができます。</li>\n  <li><strong>シャドウ DOM</strong>: カプセル化された「シャドウ」 DOM ツリーを要素に紐付け、関連する機能を制御するための、一連の JavaScript API です。シャドウ DOM ツリーは、メイン文書の DOM とは別にレンダリングされます。こうして、要素の機能を公開せずに済み、文書の他の部分との重複を恐れることなく、スクリプト化やスタイル化できます。</li>\n  <li><strong>HTML テンプレート</strong>: <a href=\"/ja/docs/Web/HTML/Element/template\"><code>&lt;template&gt;</code></a> と <a href=\"/ja/docs/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> 要素によって、レンダリングされたページ内に表示されないマークアップのテンプレートを書くことができます。カスタム要素の構造体の基礎として、それらを何度も再利用できます。</li>\n</ul>\n<p>ウェブコンポーネントを実装する基本的な流れは、以下に挙げてある通りです。</p>\n<ol>\n  <li>ウェブコンポーネントの機能を明示したクラスもしくは関数を作成します。クラスを使用するなら、ECMAScript 2015 のクラス構文に従ってください。 (詳細は<a href=\"/ja/docs/Web/JavaScript/Reference/Classes\">クラス</a>を参照してください。)</li>\n  <li>新しく作成したカスタム要素を登録します。<a href=\"/ja/docs/Web/API/CustomElementRegistry/define\"><code>CustomElementRegistry.define()</code></a> メソッドに、要素の名前、機能が明示されているクラスもしくは関数、またオプションでどの要素を継承するかを渡して下さい。</li>\n  <li>必要なら <a href=\"/ja/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a> メソッドを使って、シャドウ DOM をカスタム要素に紐付けます。通常の DOM メソッドを使って、子要素やイベントリスナーなどをシャドウ DOM に追加して下さい。</li>\n  <li>必要なら <a href=\"/ja/docs/Web/HTML/Element/template\"><code>&lt;template&gt;</code></a> と <a href=\"/ja/docs/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> を使って、HTML テンプレートを定義します。通常の DOM メソッドを再度使って、テンプレートをクローンし、シャドウ DOM に紐付けてください。</li>\n  <li>ページ内のお好きな場所で、通常の HTML 要素のように、カスタム要素を使って下さい。</li>\n</ol>"}},{"type":"prose","value":{"id":"チュートリアル","title":"チュートリアル","isH3":false,"content":"<dl>\n  <dt id=\"カスタム要素の使用\"><a href=\"/ja/docs/Web/Web_Components/Using_custom_elements\">カスタム要素の使用</a></dt>\n  <dd>\n    <p>単純なウェブコンポーネントを作成するために、カスタム要素の機能の使い方を紹介したガイドです。それ以外にも、ライフサイクルコールバックやその他の高度な機能の中を覗いていきます。</p>\n  </dd>\n  <dt id=\"シャドウ_dom_の使用\"><a href=\"/ja/docs/Web/Web_Components/Using_shadow_DOM\">シャドウ DOM の使用</a></dt>\n  <dd>\n    <p>シャドウ DOM の基礎を眺めるガイドです。シャドウ DOM を要素にどう紐付けるか、シャドウ DOM ツリーにどう追加するか、どうスタイル付けするかなどを紹介しています。</p>\n  </dd>\n  <dt id=\"テンプレートとスロットの使用\"><a href=\"/ja/docs/Web/Web_Components/Using_templates_and_slots\">テンプレートとスロットの使用</a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/HTML/Element/template\"><code>&lt;template&gt;</code></a> と <a href=\"/ja/docs/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> 要素を使って、再利用可能な HTML 構造体の定義と使用方法を紹介したガイドです。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"リファレンス","title":"リファレンス","isH3":false,"content":""}},{"type":"prose","value":{"id":"カスタム要素","title":"カスタム要素","isH3":true,"content":"<dl>\n  <dt id=\"customelementregistry\"><a href=\"/ja/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a></dt>\n  <dd>\n    <p>カスタム要素に関わる機能が含まれています。中でも注目すべきは、 <a href=\"/ja/docs/Web/API/CustomElementRegistry/define\"><code>CustomElementRegistry.define()</code></a> メソッドで、新しいカスタム要素を登録するために用います。それにより、カスタム要素を文書内で使用できるようになります。</p>\n  </dd>\n  <dt id=\"window.customelements\"><a href=\"/ja/docs/Web/API/Window/customElements\"><code>Window.customElements</code></a></dt>\n  <dd>\n    <p><code>CustomElementRegistry</code> オブジェクトへの参照を返します。</p>\n  </dd>\n  <dt id=\"ライフサイクルコールバック\"><a href=\"/ja/docs/Web/Web_Components/Using_custom_elements#%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AB%E3%82%B3%E3%83%BC%E3%83%AB%E3%83%90%E3%83%83%E3%82%AF%E3%81%AE%E4%BD%BF%E7%94%A8\">ライフサイクルコールバック</a></dt>\n  <dd>\n    <p>カスタム要素のクラス定義の中で定義された特別なコールバック関数で、挙動に影響を与えます。</p>\n    <ul>\n      <li><code>connectedCallback</code>: カスタム要素が文書の DOM に初めて接続したときに呼び出されます。</li>\n      <li><code>disconnectedCallback</code>: カスタム要素が文書の DOM から切断されたときに呼び出されます。</li>\n      <li><code>adoptedCallback</code>: カスタム要素が新しい文書に移動したときに呼び出されます。</li>\n      <li><code>attributeChangedCallback</code>: カスタム要素の属性のひとつが追加、削除、もしくは変更されたときに呼び出されます。</li>\n    </ul>\n  </dd>\n  <dt id=\"カスタム組み込み要素を作成するための拡張機能\">カスタム組み込み要素を作成するための拡張機能</dt>\n  <dd>\n    <p>以下の拡張機能が定義されています。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/HTML/Global_attributes#attr-is\"><code>is</code></a> グローバル HTML 属性: 標準の HTML 要素が、カスタム組み込み要素のように振る舞うべきかを指定できます。</li>\n      <li><a href=\"/ja/docs/Web/API/Document/createElement\"><code>Document.createElement()</code></a> メソッドの \"is\" オプション: カスタム組み込み要素のように振る舞う標準の HTML 要素のインスタンスを作成できます。</li>\n    </ul>\n  </dd>\n  <dt id=\"css_の擬似クラス\">CSS の擬似クラス</dt>\n  <dd>\n    <p>カスタム要素に関連する擬似クラスです。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/CSS/:defined\"><code>:defined</code></a>: 組み込み要素と <code>CustomElementRegistry.define()</code> で定義されるカスタム要素を含む、あらゆる定義済みの要素に一致します。</li>\n      <li><a href=\"/ja/docs/Web/CSS/:host\"><code>:host</code></a>: 使われている CSS を含む、<a href=\"/ja/docs/Web/Web_Components/Using_shadow_DOM\">シャドウ DOM</a> のシャドウホストを選択します。</li>\n      <li><a href=\"/ja/docs/Web/CSS/:host_function\"><code>:host()</code></a>: 使われている CSS を含む、<a href=\"/ja/docs/Web/Web_Components/Using_shadow_DOM\">シャドウ DOM</a> のシャドウホストを選択します。 (シャドウ DOM の内側からカスタム要素を選択することができます。) ただし、関数の引数として渡されるセレクターがシャドウホストに一致している場合に限ります。</li>\n      <li><a href=\"/ja/docs/orphaned/Web/CSS/:host-context()\"><code>:host-context()</code></a>: 使われている CSS を含む、<a href=\"/ja/docs/Web/Web_Components/Using_shadow_DOM\">シャドウ DOM</a> のシャドウホストを選択します。 (シャドウ DOM の内側からカスタム要素を選択することができます。) ただし、関数の引数として渡されるセレクターが DOM 階層内のシャドウホストの先祖要素に一致している場合に限ります。</li>\n    </ul>\n  </dd>\n  <dt id=\"css_擬似要素\">CSS 擬似要素</dt>\n  <dd>\n    <p>カスタム要素に関連する擬似要素です。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/CSS/::part\"><code>::part</code></a>: <a href=\"/ja/docs/Web/Web_Components/Using_shadow_DOM\">シャドウツリー</a>内にある要素で、一致する <a href=\"/ja/docs/Web/HTML/Global_attributes#attr-part\"><code>part</code></a> 属性を持つものを表します。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"シャドウ_dom","title":"シャドウ DOM","isH3":true,"content":"<dl>\n  <dt id=\"shadowroot\"><a href=\"/ja/docs/Web/API/ShadowRoot\"><code>ShadowRoot</code></a></dt>\n  <dd>\n    <p>シャドウ DOM サブツリーのルートノードを表します。</p>\n  </dd>\n  <dt id=\"element\"><a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a> の拡張</dt>\n  <dd>\n    <p>シャドウ DOM に関する <code>Element</code> インターフェイスの拡張です。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a> メソッドは、シャドウ DOM ツリーを指定された要素に取り付けます。</li>\n      <li><a href=\"/ja/docs/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a> プロパティは、指定された要素に取り付けられたシャドウルートを返します。取り付けられているシャドウルートがない場合は <code>null</code> を返します。</li>\n    </ul>\n  </dd>\n  <dt id=\"関連する\">関連する <a href=\"/ja/docs/Web/API/Node\"><code>Node</code></a> への追加</dt>\n  <dd>\n    <p>シャドウ DOM に関する <code>Node</code> インターフェイスへの追加事項です。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/API/Node/getRootNode\"><code>Node.getRootNode()</code></a> メソッドは、そのコンテキストオブジェクトのルートを返します。存在する場合はシャドウルートを含みます。</li>\n      <li><a href=\"/ja/docs/Web/API/Node/isConnected\"><code>Node.isConnected</code></a> プロパティは論理値を返し、そのノードがそのコンテキストオブジェクト（通常の DOM であれば <a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a> オブジェクト、シャドウ DOM であれば <a href=\"/ja/docs/Web/API/ShadowRoot\"><code>ShadowRoot</code></a>）に接続されているかどうかを示します。</li>\n    </ul>\n  </dd>\n  <dt id=\"event\"><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a> の拡張</dt>\n  <dd>\n    <p>シャドウ DOM に関する <code>Event</code> インターフェイスの拡張です。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/API/Event/composed\"><code>Event.composed</code></a>: このイベントがシャドウ DOM 境界を超えて標準 DOM にまで伝播する場合は <code>true</code>、そうでなければ <code>false</code> を返します。</li>\n      <li><a href=\"/ja/docs/Web/API/Event/composedPath\"><code>Event.composedPath</code></a>: イベントのパス（リスナーが呼び出されたオブジェクト）を返します。 <a href=\"/ja/docs/Web/API/ShadowRoot/mode\"><code>ShadowRoot.mode</code></a> が closed でシャドウルートが生成された場合、シャドウツリー内のノードは含まれません。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"html_テンプレート","title":"HTML テンプレート","isH3":true,"content":"<dl>\n  <dt id=\"template\"><a href=\"/ja/docs/Web/HTML/Element/template\"><code>&lt;template&gt;</code></a></dt>\n  <dd>\n    <p>HTML の断片を含みますが、最初に文書を読み込んだときにはレンダリングされず、実行時に　JavaScript を使って表示することができます。関連する DOM インターフェイスは <a href=\"/ja/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a> です。</p>\n  </dd>\n  <dt id=\"slot\"><a href=\"/ja/docs/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a></dt>\n  <dd>\n    <p>ウェブコンポーネント内のプレースホルダーで、独自のマークアップで埋めることができます。これにより、別の DOM ツリーを生成し、それらを一緒に表示することができます。関連する DOM インターフェイスは <a href=\"/ja/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a> です。</p>\n  </dd>\n  <dt id=\"slot_2\"><a href=\"/ja/docs/Web/HTML/Global_attributes/slot\"><code>slot</code></a> グローバル HTML 属性</dt>\n  <dd>\n    <p>シャドウ DOM のシャドウツリーにあるスロットを要素に割り当てます。</p>\n  </dd>\n  <dt id=\"element.assignedslot\"><a href=\"/ja/docs/Web/API/Element/assignedSlot\"><code>Element.assignedSlot</code></a></dt>\n  <dd>\n    <p>読み取り専用の属性で、この要素が挿入される <a href=\"/ja/docs/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> の参照を返します。</p>\n  </dd>\n  <dt id=\"text.assignedslot\"><a href=\"/ja/docs/Web/API/Text/assignedSlot\"><code>Text.assignedSlot</code></a></dt>\n  <dd>\n    <p>読み取り専用の属性で、このテキストノードが挿入される <a href=\"/ja/docs/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> の参照を返します。</p>\n  </dd>\n  <dt id=\"element_2\"><a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a> の拡張</dt>\n  <dd>\n    <p>スロットに関する <code>Element</code> インターフェイスの拡張です。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/API/Element/slot\"><code>Element.slot</code></a>: この要素に取り付けられたシャドウ DOM スロットの名前を返します。</li>\n    </ul>\n  </dd>\n  <dt id=\"css_擬似要素_2\">CSS 擬似要素</dt>\n  <dd>\n    <p>スロットに特化した擬似要素です。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/CSS/::slotted\"><code>::slotted</code></a>: スロットに挿入されたコンテンツに一致します。</li>\n    </ul>\n  </dd>\n  <dt id=\"slotchange\"><a href=\"/ja/docs/Web/API/HTMLSlotElement/slotchange_event\" title=\"slotchange\"><code>slotchange</code></a> イベント</dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a> のインスタンス (<a href=\"/ja/docs/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> 要素) において、そのスロットに含まれるノードが変化したときに発行されます。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p><a href=\"https://github.com/mdn/web-components-examples\" class=\"external\" rel=\" noopener\">web-components-examples</a> の GitHub リポジトリーに、いくつかの例を用意してあります。時間とともに、より多くの例が追加されることでしょう。</p>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":""}},{"type":"specifications","value":{"title":"template 要素とカスタム要素","id":"template_要素とカスタム要素","isH3":true,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/scripting.html#the-template-element","title":"HTML Standard"}],"query":"html.elements.template"}},{"type":"specifications","value":{"title":"シャドウ DOM","id":"シャドウ_dom_2","isH3":true,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#interface-shadowroot","title":"DOM Standard"}],"query":"api.ShadowRoot"}},{"type":"prose","value":{"id":"ブラウザーの互換性","title":"ブラウザーの互換性","isH3":false,"content":"<p>一般に、</p>\n<ul>\n  <li>ウェブコンポーネントは、Firefox (バージョン 63)、Chrome、Opera、Edge (バージョン 79) が既定で対応しています。</li>\n  <li>Safari では、いくつかのウェブコンポーネントの機能に対応していますが、上記のブラウザーよりも限定的です。</li>\n</ul>\n<p>特定の機能についてのブラウザーの対応状況は、上記のページを調べて下さい。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://open-wc.org/\" class=\"external\" rel=\" noopener\">Open Web Components</a> — Guides, tools and libraries for developing web components.</li>\n  <li><a href=\"https://www.dataformsjs.com/\" class=\"external\" rel=\" noopener\">DataFormsJS</a> — Open source web components library — Set of Web Components that can be used to build Single Page Apps (SPA), Display JSON data from API’s and Web Services, and bind data to different elements on screen. All Web Components are plain JavaScript and require no build process.</li>\n  <li><a href=\"https://fast.design/\" class=\"external\" rel=\" noopener\">FAST</a> is a web component library built by Microsoft which offers several packages to leverage depending on your project needs. <a href=\"https://github.com/microsoft/fast/tree/master/packages/web-components/fast-element\" class=\"external\" rel=\" noopener\">Fast Element</a> is a lightweight means to easily build performant, memory-efficient, standards-compliant Web Components. <a href=\"https://github.com/microsoft/fast/tree/master/packages/web-components/fast-foundation\" class=\"external\" rel=\" noopener\">Fast Foundation</a> is a library of Web Component classes, templates, and other utilities built on fast-element intended to be composed into registered Web Components.</li>\n  <li><a href=\"https://github.com/hybridsjs/hybrids\" class=\"external\" rel=\" noopener\">Hybrids</a> — Open source web components library, which favors plain objects and pure functions over <code>class</code> and <code>this</code> syntax. It provides a simple and functional API for creating custom elements.</li>\n  <li><a href=\"https://lit.dev/\" class=\"external\" rel=\" noopener\">Lit</a> — Google's web components library, the core of which is a component base class designed to reduce boilerplate while providing reactive state, scoped styles, and a declarative template system.</li>\n  <li><a href=\"https://github.com/devpunks/snuggsi#readme\" class=\"external\" rel=\" noopener\">Snuggsi</a> — Easy Web Components in ~1kB <em>Including polyfill</em> — All you need is a browser and basic understanding of HTML, CSS, and JavaScript classes to be productive.</li>\n  <li><a href=\"https://github.com/slimjs/slim.js\" class=\"external\" rel=\" noopener\">Slim.js</a> — Open source web components library — a high-performant library for rapid and easy component authoring; extensible and pluggable and cross-framework compatible.</li>\n  <li><a href=\"https://stenciljs.com/\" class=\"external\" rel=\" noopener\">Stencil</a> — Toolchain for building reusable, scalable design systems in web components.</li>\n</ul>"}}],"toc":[{"text":"概念と使用法","id":"概念と使用法"},{"text":"チュートリアル","id":"チュートリアル"},{"text":"リファレンス","id":"リファレンス"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"ウェブコンポーネントは、再利用可能なカスタム要素を作成し、ウェブアプリの中で利用するための、一連のテクノロジーです。コードの他の部分から独立した、カプセル化された機能を使って実現します。","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Web Components","locale":"en-US","native":"English (US)"},{"title":"Web Components","locale":"es","native":"Español"},{"title":"Web Components (composants web)","locale":"fr","native":"Français"},{"title":"웹 컴포넌트","locale":"ko","native":"한국어"},{"title":"Web Components","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Веб-компоненты","locale":"ru","native":"Русский"},{"title":"Web Components","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/web_components","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/web_components/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Web_Components","title":"ウェブコンポーネント"}],"pageTitle":"ウェブコンポーネント | MDN","noIndexing":false}}