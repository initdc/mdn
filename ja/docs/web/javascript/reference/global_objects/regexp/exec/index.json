{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"RegExp.prototype.exec()","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@species\"><code>get RegExp[@@species]</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/dotAll\"><code>RegExp.prototype.dotAll</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/flags\"><code>RegExp.prototype.flags</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/global\"><code>RegExp.prototype.global</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/hasIndices\"><code>RegExp.prototype.hasIndices</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/ignoreCase\"><code>RegExp.prototype.ignoreCase</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/input\"><code>RegExp.input ($_)</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex\"><code>RegExp: lastIndex</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastMatch\"><code>RegExp.lastMatch ($&amp;)</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastParen\"><code>RegExp.lastParen ($+)</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/leftContext\"><code>RegExp.leftContext ($`)</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/multiline\"><code>RegExp.prototype.multiline</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/n\"><code>RegExp.$1-$9</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/rightContext\"><code>RegExp.rightContext ($')</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/source\"><code>RegExp.prototype.source</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky\"><code>RegExp.prototype.sticky</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/unicode\"><code>RegExp.prototype.unicode</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@match\"><code>RegExp.prototype[@@match]()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@matchAll\"><code>RegExp.prototype[@@matchAll]()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@replace\"><code>RegExp.prototype[@@replace]()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@search\"><code>RegExp.prototype[@@search]()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/@@split\"><code>RegExp.prototype[@@split]()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/compile\"><code>RegExp.prototype.compile()</code></a></li><li><em><code>RegExp.prototype.exec()</code></em></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\"><code>RegExp.prototype.test()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/toString\"><code>RegExp.prototype.toString()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>exec()</code></strong> メソッドは、指定された文字列内で一致するものの検索を実行します。結果の配列、または <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> を返します。</p>\n<p>JavaScript の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a> オブジェクトは、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/global\"><code>global</code></a> または <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky\"><code>sticky</code></a> フラグが設定されている場合 (例えば <code>/foo/g</code> や <code>/foo/y</code>) は<strong>ステートフル</strong>になります。これは前回の一致位置を <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex\"><code>lastIndex</code></a> に格納します。これを内部的に使用することで、 <code>exec()</code> はテキストの文字列内で (キャプチャグループのある) 複数の一致を反復処理することができます。これは単なる文字列の一致を取得する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/match\"><code>String.prototype.match()</code></a> とは対照的です。</p>\n<p>より新しい関数として、 (キャプチャグループによる) 複数の部分の文字列の一致を単純化する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll\"><code>String.prototype.matchAll()</code></a> が提案されています。</p>\n<p><code>true</code> か <code>false</code> かを知るために検索を実行するのであれば、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\"><code>RegExp.prototype.test()</code></a> メソッドを使用してください。</p>\n<p>文字列中での位置を知るために検索を実行するのであれば、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/search\"><code>String.prototype.search()</code></a> メソッドを使用してください。</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/regexp-prototype-exec.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"str\"><code>str</code></dt>\n  <dd>\n    <p>正規表現の検索の対象となる文字列。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>検索に成功した場合、 <code>exec()</code> メソッドは配列を返し (追加のプロパティ <code>index</code> と <code>input</code> が付いており、 <code>d</code> フラグが設定されている場合は <code>indices</code> も、以下参照)、正規表現オブジェクトの <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex\"><code>lastIndex</code></a> プロパティを更新します。返された配列は、一致したテキストを最初の項目として持ち、その後、一致したテキストの括弧によるキャプチャグループに対して 1 つずつの項目を持ちます。</p>\n<p>一致に失敗した場合は、 <code>exec()</code> メソッドは <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> を返し、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex\"><code>lastIndex</code></a> を <code>0</code> に設定します。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p>次の例を想定してください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// \"quick brown\" の後に \"jumps\" が来るものを、その間の文字を無視して一致させます。</span>\n<span class=\"token comment\">// \"brown\" と \"jumps\" を取得します。</span>\n<span class=\"token comment\">// 大文字と小文字は区別しません。</span>\n<span class=\"token keyword\">let</span> re <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">quick\\s(brown).+?(jumps)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">ig</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The Quick Brown Fox Jumps Over The Lazy Dog'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>以下の表は、このスクリプト実行後の <code>result</code> の状態を示しています。</p>\n<table>\n  <thead>\n    <tr>\n      <th>プロパティ/添字</th>\n      <th>説明</th>\n      <th>例</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>[0]</code></td>\n      <td>文字が一致した部分の文字列全体</td>\n      <td><code>\"Quick Brown Fox Jumps\"</code></td>\n    </tr>\n    <tr>\n      <td><code>[1], ...[n]</code></td>\n      <td>もしあれば、括弧に囲まれた部分文字列が一致したものです。括弧に囲まれた部分文字列の数に制限はありません。</td>\n      <td><code>result[1] === \"Brown\"</code> <code>result[2] === \"Jumps\"</code></td>\n    </tr>\n    <tr>\n      <td><code>index</code></td>\n      <td>0 から始める一致した文字列の位置。</td>\n      <td><code>4</code></td>\n    </tr>\n    <tr>\n      <td><code>indices</code></td>\n      <td>各項目が部分文字列の一致を表す配列です。各部分文字列の一致自体は、最初の項目が開始位置、 2 番目の項目が終了位置を表す配列です。 indices 配列にはさらに、名前の付いたすべてのキャプチャリンググループのオブジェクトを保持する groups プロパティがあります。キーはキャプチャリンググループの名前で、各値は、最初の項目が開始項目、 2 番目の項目がキャプチャリンググループの終了位置となる配列です。正規表現にキャプチャリンググループが含まれていなかった場合は、 <code>groups</code> は <code>undefined</code> です。</td>\n      <td><code>indices[0] === Array [ 4, 25 ]</code> <code>indices[1] === Array [ 10, 15 ]</code> <code>indices[2] === Array [ 20, 25 ]</code> <code>indices.groups === undefined</code> <code>indices.length === 3</code></td>\n    </tr>\n    <tr>\n      <td><code>input</code></td>\n      <td>検索対象となった元の文字列。</td>\n      <td><code>The Quick Brown Fox Jumps Over The Lazy Dog</code></td>\n    </tr>\n  </tbody>\n</table>\n<p>以下の表は、このスクリプト実行後の <code>re</code> の状態を示しています。</p>\n<table>\n  <thead>\n    <tr>\n      <th>プロパティ/添字</th>\n      <th>説明</th>\n      <th>例</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>lastIndex</code></td>\n      <td>次回の検索を始める位置です。<code>g</code> がない場合は <code>0</code> のままです。</td>\n      <td><code>25</code></td>\n    </tr>\n    <tr>\n      <td><code>dotAll</code></td>\n      <td><code>s</code> フラグが使用され、 <code>.</code> が改行文字に一致するようにしたかどうかを示します。</td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>hasIndices</code></td>\n      <td><code>d</code> フラグが使用され、返値に一致する部分文字列の開始位置と終了位置を持つ <code>indices</code> プロパティを生成したかどうかを示します。</td>\n      <td><code>true</code></td>\n    </tr>\n    <tr>\n      <td><code>ignoreCase</code></td>\n      <td><code>i</code> フラグが使用され、大文字小文字を区別しなかったかどうか。</td>\n      <td><code>true</code></td>\n    </tr>\n    <tr>\n      <td><code>global</code></td>\n      <td><code>g</code> フラグが使用され、グローバル検索が行われたかどうか。</td>\n      <td><code>true</code></td>\n    </tr>\n    <tr>\n      <td><code>multiline</code></td>\n      <td><code>m</code> フラグが使用され、複数行に渡って文字列が検索されたかどうか。</td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>source</code></td>\n      <td>パターンの文字列。</td>\n      <td><code>quick\\s(brown).+?(jumps)</code></td>\n    </tr>\n    <tr>\n      <td><code>sticky</code></td>\n      <td><code>y</code> フラグが使用され、比較が <code>lastIndex</code> プロパティで示された位置からのみ行われたかどうか。</td>\n      <td><code>false</code></td>\n    </tr>\n    <tr>\n      <td><code>unicode</code></td>\n      <td><code>u</code> フラグが使用され、パターンが Unicode コードポイントの並びとして扱われたかどうか。</td>\n      <td><code>false</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"成功する一致の検索","title":"成功する一致の検索","isH3":true,"content":"<p>正規表現で \"<code>g</code>\" フラグを使用する場合、同じ文字列で成功する一致を見つけるために <code>exec()</code> メソッドを複数回使うことができます。その際、検索は正規表現オブジェクトの <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex\"><code>lastIndex</code></a> プロパティで指定された位置の <code>str</code> の部分文字列から始まります (<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\"><code>test()</code></a> も <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex\"><code>lastIndex</code></a> プロパティの位置から始めます)。なお、別な文字列を検索する場合でも <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex\"><code>lastIndex</code></a> プロパティはリセットされず、既存の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex\"><code>lastIndex</code></a> から検索を始めます。</p>\n<p>例えば、次のスクリプトを考えてみてください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myRe <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">ab*</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'abbcdefabh'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> myArray<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>myArray <span class=\"token operator\">=</span> myRe<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> msg <span class=\"token operator\">=</span> myArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">' を見つけました。'</span><span class=\"token punctuation\">;</span>\n  msg <span class=\"token operator\">+=</span> <span class=\"token string\">'次の検索は '</span> <span class=\"token operator\">+</span> myRe<span class=\"token punctuation\">.</span>lastIndex <span class=\"token operator\">+</span> <span class=\"token string\">' からです。'</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>このスクリプトは以下のテキストを表示します。</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">abb を見つけました。次の検索は 3 からです。\nab を見つけました。次の検索は 9 からです。\n</pre></div>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>Warning:</strong> <strong>正規表現リテラル (または <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a> コンストラクター) を <code>while</code> の条件の中に配置しないでください。</strong></p>\n  <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex\"><code>lastIndex</code></a> プロパティが繰り返し毎にリセットされるので、無限ループになります。</p>\n  <p>また、グローバルフラグ (\"<code>g</code>\") が設定されていることを確認してください。これも無限ループを引き起こします。</p>\n</div>"}},{"type":"prose","value":{"id":"regexp_リテラルでの_exec_の使用","title":"RegExp リテラルでの exec() の使用","isH3":true,"content":"<p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a> オブジェクトを作成せずに <code>exec()</code> を使用することもできます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> matches <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(hello \\S+)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is a hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>matches<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これで 'hello world!' を含んだメッセージをログ出力します。</p>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/text-processing.html#sec-regexp.prototype.exec","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.RegExp.exec"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.RegExp.exec","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Guide\">JavaScript ガイド</a>の<a href=\"/ja/docs/Web/JavaScript/Guide/Regular_Expressions\">正規表現</a>の章</li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"解説","id":"解説"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"exec() メソッドは、指定された文字列内で一致するものの検索を実行します。結果の配列、または null を返します。","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"RegExp.prototype.exec()","locale":"en-US","native":"English (US)"},{"title":"RegExp.prototype.exec()","locale":"es","native":"Español"},{"title":"RegExp.prototype.exec()","locale":"fr","native":"Français"},{"title":"RegExp.prototype.exec()","locale":"ko","native":"한국어"},{"title":"RegExp.prototype.exec()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"RegExp.prototype.exec()","locale":"ru","native":"Русский"},{"title":"RegExp.prototype.exec()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/regexp/exec","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/regexp/exec/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp","title":"RegExp"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec","title":"RegExp.prototype.exec()"}],"pageTitle":"RegExp.prototype.exec() - JavaScript | MDN","noIndexing":false}}