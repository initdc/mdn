{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"JSON","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>JSON</code></strong> オブジェクトは、 <a href=\"https://json.org/\" class=\"external\" rel=\" noopener\">JavaScript Object\nNotation</a> (<a href=\"/ja/docs/Glossary/JSON\">JSON</a>) を解釈するメソッドや、値を JSON に変換するメソッドを持ちます。これは呼び出しや構築をすることができず、また 2 つのメソッドプロパティを除いて、これ自身に興味深い機能性はありません。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":""}},{"type":"prose","value":{"id":"javascript_と_json_の違い","title":"JavaScript と JSON の違い","isH3":true,"content":"<p>JSON は、オブジェクト、配列、数値、文字列、論理値、そして <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> をシリアライズする構文です。これは JavaScript の構文に基づいていますが、区別されるものです。JavaScript ならば JSON であるというわけでは<em>ありません</em>。</p>\n<dl>\n  <dt id=\"オブジェクトと配列\"><strong>オブジェクトと配列</strong></dt>\n  <dd>\n    <p>プロパティ名は二重引用符で括った文字列にしなければなりません。<a href=\"/ja/docs/Web/JavaScript/Reference/Trailing_commas\">末尾のカンマ</a>を置いてはいけません。</p>\n  </dd>\n  <dt id=\"数値\"><strong>数値</strong></dt>\n  <dd>\n    <p>先頭にゼロを置くことは禁止されています。また、小数点は 1 桁以上の数字の後ろに置かなければなりません。 <code>NaN</code> と <code>Infinity</code> には対応していません。</p>\n  </dd>\n  <dt id=\"あらゆる_json_のテキストは有効な_javascript_の式です\"><strong>あらゆる JSON のテキストは有効な JavaScript の式です...</strong></dt>\n  <dd>\n    <p>...ただし、<a href=\"https://github.com/tc39/proposal-json-superset\" class=\"external\" rel=\" noopener\">proposal to make all JSON text valid ECMA-262</a> を実装した JavaScript エンジンのみでの話です。この提案を実装していないエンジンでは、 U+2028 LINE SEPARATOR と U+2029 PARAGRAPH SEPARATOR は JSON の文字列リテラルとプロパティのキーでは許されますが、これらの機能を JavaScript 文字列リテラルの中で使用すると <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> になります。</p>\n  </dd>\n</dl>\n<p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> が文字列を JSON として解釈し、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval</code></a> が文字列を JavaScript として実行するこの例を考えてみてください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> code <span class=\"token operator\">=</span> <span class=\"token string\">'\"\\u2028\\u2029\"'</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// どのエンジンでも \"\\u2028\\u2029\" と評価される</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span>        <span class=\"token comment\">// 古いエンジンでは SyntaxError が発生する</span>\n</code></pre></div>\n<p>他の違いとしては、二重引用符で囲まれた文字列のみを許可していることや、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> やコメントの規定がないことなどが挙げられます。 JSON に基づいたより人間に優しい設定フォーマットを使いたい場合、 Babel コンパイラーによって使われる <a href=\"https://json5.org/\" class=\"external\" rel=\" noopener\">JSON5</a> と、より一般的に使われる <a href=\"https://ja.wikipedia.org/wiki/YAML\" class=\"external\" rel=\" noopener\">YAML</a> があります。</p>"}},{"type":"prose","value":{"id":"json_の完全な構文","title":"JSON の完全な構文","isH3":true,"content":"<p>有効な JSON の構文は、<a href=\"https://ja.wikipedia.org/wiki/ABNF\" class=\"external\" rel=\" noopener\">ABNF</a> で表現された以下の文法で公式に定義されています。これは <a href=\"https://datatracker.ietf.org/doc/html/rfc8259\" class=\"external\" rel=\" noopener\">IETF の JSON 標準 (RFC)</a> からコピーしたものです。</p>\n<pre class=\"notranslate\">JSON-text = object / array\nbegin-array     = ws %x5B ws  ; [ left square bracket\nbegin-object    = ws %x7B ws  ; { left curly bracket\nend-array       = ws %x5D ws  ; ] right square bracket\nend-object      = ws %x7D ws  ; } right curly bracket\nname-separator  = ws %x3A ws  ; : colon\nvalue-separator = ws %x2C ws  ; , comma\nws = *(\n     %x20 /              ; Space\n     %x09 /              ; Horizontal tab\n     %x0A /              ; Line feed or New line\n     %x0D                ; Carriage return\n     )\nvalue = false / null / true / object / array / number / string\nfalse = %x66.61.6c.73.65   ; false\nnull  = %x6e.75.6c.6c      ; null\ntrue  = %x74.72.75.65      ; true\nobject = begin-object [ member *( value-separator member ) ]\n         end-object\nmember = string name-separator value\narray = begin-array [ value *( value-separator value ) ] end-array\nnumber = [ minus ] int [ frac ] [ exp ]\ndecimal-point = %x2E       ; .\ndigit1-9 = %x31-39         ; 1-9\ne = %x65 / %x45            ; e E\nexp = e [ minus / plus ] 1*DIGIT\nfrac = decimal-point 1*DIGIT\nint = zero / ( digit1-9 *DIGIT )\nminus = %x2D               ; -\nplus = %x2B                ; +\nzero = %x30                ; 0\nstring = quotation-mark *char quotation-mark\nchar = unescaped /\n    escape (\n        %x22 /          ; \"    quotation mark  U+0022\n        %x5C /          ; \\    reverse solidus U+005C\n        %x2F /          ; /    solidus         U+002F\n        %x62 /          ; b    backspace       U+0008\n        %x66 /          ; f    form feed       U+000C\n        %x6E /          ; n    line feed       U+000A\n        %x72 /          ; r    carriage return U+000D\n        %x74 /          ; t    tab             U+0009\n        %x75 4HEXDIG )  ; uXXXX                U+XXXX\nescape = %x5C              ; \\\nquotation-mark = %x22      ; \"\nunescaped = %x20-21 / %x23-5B / %x5D-10FFFF\n\nHEXDIG = DIGIT / %x41-46 / %x61-66   ; 0-9, A-F, or a-f\n       ; HEXDIG equivalent to HEXDIG rule in [RFC5234]\nDIGIT = %x30-39            ; 0-9\n      ; DIGIT equivalent to DIGIT rule in [RFC5234]\n</pre>\n<p>重要でない<a href=\"/ja/docs/Glossary/Whitespace\">ホワイトスペース</a>は、基本的に任意の場所に置くことができますが、 <code>JSONNumber</code> (数値に空白を含んではいけません) や <code>JSONString</code> (対応する文字であると解釈されるか、エラーが発生します) の内部を除きます。ホワイトスペースとして有効な文字はタブ文字 (<a href=\"https://unicode-table.com/en/0009/\" class=\"external\" rel=\" noopener\">U+0009</a>)、キャリッジリターン (<a href=\"https://unicode-table.com/en/000D/\" class=\"external\" rel=\" noopener\">U+000D</a>)、ラインフィード (<a href=\"https://unicode-table.com/en/000A/\" class=\"external\" rel=\" noopener\">U+000A</a>)、空白 (<a href=\"https://unicode-table.com/en/0020/\" class=\"external\" rel=\" noopener\">U+0020</a>) のみです。</p>"}},{"type":"prose","value":{"id":"静的メソッド","title":"静的メソッド","isH3":false,"content":"<dl>\n  <dt id=\"json.parsetext_reviver\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse(<var>text</var>[, <var>reviver</var>])</code></a></dt>\n  <dd>\n    <p>文字列 <code>text</code> を JSON として解析し、オプションで生成された値とそのプロパティを変換し、値を返します。 JavaScript と JSON の違いに関連するものを含め、 JSON の構文に違反すると <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> が発生します。<code>reviver</code> オプションは、<code>replacer</code> が他のデータ型の代用として使用したものを解釈することができます。</p>\n  </dd>\n  <dt id=\"json.stringifyvalue_replacer_space\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify(<var>value</var>[, <var>replacer</var>[, <var>space</var>]])</code></a></dt>\n  <dd>\n    <p>指定した値に対応する JSON 文字列を返します。オプションで、特定のプロパティのみを含むか、ユーザー定義の方法でプロパティ値を置き換えることもできます。既定では、すべての <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> のインスタンスは <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> に置き換えられ、その他の対応していないネイティブデータ型は打ち切られます。 <code>replacer</code> オプションでは、他の動作を指定することができます。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"json_の例","title":"JSON の例","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"browsers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"firefox\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Firefox\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"pref_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"about:config\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"releases\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"release_date\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2004-11-09\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"retired\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"engine\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gecko\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"engine_version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.7\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/structured-data.html#sec-json-object","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.JSON"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.JSON","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\"><code>Date.prototype.toJSON()</code></a></li>\n  <li><a href=\"https://json-diff.com/\" class=\"external\" rel=\" noopener\">JSON Diff</a> checker</li>\n  <li><a href=\"https://jsonbeautifier.org/\" class=\"external\" rel=\" noopener\">JSON Beautifier/editor</a></li>\n  <li><a href=\"https://jsonparser.org/\" class=\"external\" rel=\" noopener\">JSON Parser</a></li>\n  <li><a href=\"https://tools.learningcontainer.com/json-validator/\" class=\"external\" rel=\" noopener\">JSON Validator</a></li>\n</ul>"}}],"toc":[{"text":"解説","id":"解説"},{"text":"静的メソッド","id":"静的メソッド"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"JSON オブジェクトは、 JavaScript Object\nNotation (JSON) を解釈するメソッドや、値を JSON に変換するメソッドを持ちます。これは呼び出しや構築をすることができず、また 2 つのメソッドプロパティを除いて、これ自身に興味深い機能性はありません。","popularity":0.0015,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"JSON","locale":"en-US","native":"English (US)"},{"title":"JSON","locale":"es","native":"Español"},{"title":"JSON","locale":"fr","native":"Français"},{"title":"JSON","locale":"ko","native":"한국어"},{"title":"JSON","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"JSON","locale":"ru","native":"Русский"},{"title":"JSON","locale":"zh-CN","native":"中文 (简体)"},{"title":"JSON","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/json","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/json/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON","title":"JSON"}],"pageTitle":"JSON - JavaScript | MDN","noIndexing":false}}