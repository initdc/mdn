{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Number.prototype.toLocaleString()","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\"><code>Number.EPSILON</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN\"><code>Number.NaN</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY\"><code>Number.NEGATIVE_INFINITY</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY\"><code>Number.POSITIVE_INFINITY</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\"><code>Number.isFinite()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\"><code>Number.isInteger()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>Number.isNaN()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\"><code>Number.parseFloat()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\"><code>Number.parseInt()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\"><code>Number.prototype.toExponential()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\"><code>Number.prototype.toFixed()</code></a></li><li><em><code>Number.prototype.toLocaleString()</code></em></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\"><code>Number.prototype.toPrecision()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>Number.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/valueOf\"><code>Number.prototype.valueOf()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>toLocaleString()</code></strong> メソッドは、この数値を表す言語依存の文字列を返します。</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/number-tolocalestring.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span>locales<span class=\"token punctuation\">)</span>\n<span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span>locales<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<p><code>locales</code> と <code>options</code> 引数で機能の動作をカスタマイズすることができ、アプリケーションが書式化の習慣を用いる言語を指定することができます。<code>locales</code> と <code>options</code> の引数を無視する実装では、使用されるロケールや返される文字列の形式は、完全に実装依存になります。</p>\n<p>引数と使い方について詳しくは、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat\"><code>Intl.NumberFormat()</code>\nコンストラクター</a>を参照してください。</p>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>指定された数値の言語依存の表現による文字列です。</p>"}},{"type":"prose","value":{"id":"性能","title":"性能","isH3":false,"content":"<p>たくさんの数を整形する場合は、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\"><code>Intl.NumberFormat</code></a> オブジェクトを生成して <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/format\"><code>format</code></a> プロパティで提供される関数を使用することをお勧めします。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"tolocalestring_を使う","title":"<code>toLocaleString</code> を使う","isH3":true,"content":"<p>ロケールを指定しない基本的な使用です。既定のロケールと既定のオプションの整形された文字列が返されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> number <span class=\"token operator\">=</span> <span class=\"token number\">3500</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// アメリカ英語のロケールでは \"3,500\" を表示</span>\n</code></pre></div>","titleAsText":"toLocaleString を使う"}},{"type":"prose","value":{"id":"locales_引数と_options_引数に対応しているかどうかを調べる","title":"<code>locales</code> 引数と <code>options</code> 引数に対応しているかどうかを調べる","isH3":true,"content":"<p><code>locales</code> 引数と <code>options</code> 引数はまだすべてのブラウザーで対応しているわけではありません。不正な言語タグが <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RangeError\"><code>RangeError</code></a> 例外で拒否されるという要件を利用することで、実装がすでに対応しているかどうかを調べられます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">toLocaleStringSupportsLocales</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    number<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'RangeError'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ES5.1 以前の実装では、引数を使って <code>toLocaleString</code> を呼んだ場合に <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RangeError\"><code>RangeError</code></a> 例外を throw する必要はありませんでした。</p>\n<p>5.1 以前の ECMAScript をサポートしているものも含めたすべてのホストで動くチェックは、直接 <code>Number.prototype.toLocaleString</code> の地域オプションのサポートに必要な ECMA-402 で指定された機能をテストすることで行えます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">toLocaleStringSupportsOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> Intl <span class=\"token operator\">==</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> Intl <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">typeof</span> Intl<span class=\"token punctuation\">.</span>NumberFormat <span class=\"token operator\">==</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>上記のコードは、グローバル <code>Intl</code> オブジェクトが <code>null</code> でないことと、<code>Intl</code> オブジェクトが <code>NumberFormat</code> プロパティを持ち、それが関数であることをテストします。</p>","titleAsText":"locales 引数と options 引数に対応しているかどうかを調べる"}},{"type":"prose","value":{"id":"locales_を使う","title":"<code>locales</code> を使う","isH3":true,"content":"<p>この例ではローカライズされた数値変換のバリエーションのいくつかを示します。アプリケーションのユーザーインターフェイスで使われる言語の形式を得るために、<code>locales</code> 引数を用いている言語（そしておそらくいくつかのフォールバック言語）を明示することを確かめてください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> number <span class=\"token operator\">=</span> <span class=\"token number\">123456.789</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ドイツ語では小数点にカンマを用い、千の桁区切りにピリオドを用いる</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'de-DE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → 123.456,789</span>\n\n<span class=\"token comment\">// 多くのアラビア語圏の国のアラビア語では、東アラビア数字を用いる</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ar-EG'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → ١٢٣٤٥٦٫٧٨٩</span>\n\n<span class=\"token comment\">// インド語では thousands/lakh/crore の区切りを用いる</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-IN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → 1,23,456.789</span>\n\n<span class=\"token comment\">// nu 拡張キーでは、中国の数字などの計数法をリクエストする</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zh-Hans-CN-u-nu-hanidec'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → 一二三,四五六.七八九</span>\n\n<span class=\"token comment\">// バリ語など対応していない可能性のある言語をリクエストする場合は、</span>\n<span class=\"token comment\">// 予備の言語 (この場合はインドネシア語) を含める</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'ban'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → 123.456,789</span>\n</code></pre></div>","titleAsText":"locales を使う"}},{"type":"prose","value":{"id":"options_を使う","title":"<code>options</code> を使う","isH3":true,"content":"<p><code>toLocaleString</code> によって得られる結果は <code>options</code> 引数を使用してカスタマイズできます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> number <span class=\"token operator\">=</span> <span class=\"token number\">123456.789</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 通貨形式をリクエスト</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'de-DE'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'currency'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">currency</span><span class=\"token operator\">:</span> <span class=\"token string\">'EUR'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → 123.456,79 €</span>\n\n<span class=\"token comment\">// 日本円には副単位がない</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ja-JP'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'currency'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">currency</span><span class=\"token operator\">:</span> <span class=\"token string\">'JPY'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// → ￥123,457</span>\n\n<span class=\"token comment\">// 有効桁数を 3 桁に制限</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-IN'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">maximumSignificantDigits</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → 1,23,000</span>\n\n<span class=\"token comment\">// 数値の書式化にホストの既定の言語とオプションを使用する</span>\n<span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">30000.65</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">minimumFractionDigits</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">maximumFractionDigits</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → \"30,000.65\" where English is the default language, or</span>\n<span class=\"token comment\">// → \"30.000,65\" where German is the default language, or</span>\n<span class=\"token comment\">// → \"30 000,65\" where French is the default language</span>\n</code></pre></div>","titleAsText":"options を使う"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-number.prototype.tolocalestring","title":"ECMAScript Language Specification"},{"bcdSpecificationURL":"https://tc39.es/ecma402/#sup-number.prototype.tolocalestring","title":"ECMAScript Internationalization API Specification"}],"query":"javascript.builtins.Number.toLocaleString"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.Number.toLocaleString","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>Number.prototype.toString()</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"性能","id":"性能"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"toLocaleString() メソッドは、この数値を表す言語依存の文字列を返します。","popularity":0.0009,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Number.prototype.toLocaleString()","locale":"en-US","native":"English (US)"},{"title":"Number.prototype.toLocaleString()","locale":"es","native":"Español"},{"title":"Number.prototype.toLocaleString()","locale":"fr","native":"Français"},{"title":"Number.prototype.toLocaleString()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Number.prototype.toLocaleString()","locale":"ru","native":"Русский"},{"title":"Number.prototype.toLocaleString()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/number/tolocalestring","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/number/tolocalestring/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number","title":"Number"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString","title":"Number.prototype.toLocaleString()"}],"pageTitle":"Number.prototype.toLocaleString() - JavaScript | MDN","noIndexing":false}}