{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"handler.setPrototypeOf()","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/setPrototypeOf","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\"><code>Proxy/handler</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/apply\"><code>handler.apply()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/construct\"><code>handler.construct()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/defineProperty\"><code>handler.defineProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/deleteProperty\"><code>handler.deleteProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get\"><code>handler.get()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor\"><code>handler.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getPrototypeOf\"><code>handler.getPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/has\"><code>handler.has()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/isExtensible\"><code>handler.isExtensible()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/ownKeys\"><code>handler.ownKeys()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/preventExtensions\"><code>handler.preventExtensions()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set\"><code>handler.set()</code></a></li><li><em><code>handler.setPrototypeOf()</code></em></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>handler.setPrototypeOf()</code></strong> メソッドは、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a> に対するトラップです。</p><iframe class=\"interactive\" height=\"692\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/proxyhandler-setprototypeof.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">const p = new Proxy(target, {\n  setPrototypeOf: function(target, prototype) {\n  }\n});\n</pre>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<p>次の引数は <code>setPrototypeOf()</code> メソッドに渡されます。 <code>this</code> はハンドラーにバインドされます。</p>\n<dl>\n  <dt id=\"target\"><code>target</code></dt>\n  <dd>\n    <p>ターゲットオブジェクトです。</p>\n  </dd>\n  <dt id=\"prototype\"><code>prototype</code></dt>\n  <dd>\n    <p>オブジェクトの新しいプロトタイプ、または <code>null</code> です。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p><code>setPrototypeOf()</code> メソッドは <code>[[Prototype]]</code> の変更に成功したら <code>true</code> を返し、そうでない場合は <code>false</code> を返します。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p><strong><code>handler.setPrototypeOf()</code></strong> メソッドは <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a> に対するトラップです。</p>"}},{"type":"prose","value":{"id":"介入","title":"介入","isH3":true,"content":"<p>このトラップは下記の操作に介入できます。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf()</code></a></li>\n</ul>"}},{"type":"prose","value":{"id":"不変条件","title":"不変条件","isH3":true,"content":"<p>以下の不変条件に違反している場合、プロキシは <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> を発生します。</p>\n<ul>\n  <li><code>target</code> が拡張可能でない場合、引数の <code>prototype</code> は <code>Object.getPrototypeOf(target)</code> と同じ値でなければなりません。</li>\n</ul>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>オブジェクトに新しいプロトタイプを設定することを禁止したい場合は、ハンドラーの <code>setPrototypeOf()</code> メソッドで <code>false</code> を返したり、例外を発生させたりするようにすることができます。</p>"}},{"type":"prose","value":{"id":"アプローチ_1_false_を返す","title":"アプローチ 1: false を返す","isH3":true,"content":"<p>このアプローチでは、例外を発生させる変更操作は、それ自身で例外を生成する必要があります。</p>\n<p>例えば、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a> は、それ自体が <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> を発生させます。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf()</code></a> のように、失敗しても通常は例外が発生しない操作で変更操作が行われた場合、例外は発生しません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> handlerReturnsFalse <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> newProto</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> newProto <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> p1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handlerReturnsFalse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span> newProto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws a TypeError</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span> newProto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// returns false</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"アプローチ_2_例外を発生","title":"アプローチ 2: 例外を発生","isH3":true,"content":"<p>後者のアプローチでは、変更を試みるすべての操作で例外が発生します。このアプローチは、例外を発生しない操作でも失敗時に例外をは正させたい場合や、カスタムの例外値を発生させたい場合に最適です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> handlerThrows <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> newProto</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'custom error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> newProto <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> p2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handlerThrows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">,</span> newProto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// throws new Error(\"custom error\")</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">,</span> newProto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws new Error(\"custom error\")</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript (ECMA-262)<br><small lang=\"ja\">[[SetPrototypeOf]] の定義</small></a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.Proxy.handler.setPrototypeOf","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/setPrototypeOf/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy\"><code>Proxy</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\"><code>handler</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf()</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"解説","id":"解説"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"handler.setPrototypeOf() メソッドは、 Object.setPrototypeOf() に対するトラップです。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"handler.setPrototypeOf()","locale":"en-US","native":"English (US)"},{"title":"handler.setPrototypeOf()","locale":"fr","native":"Français"},{"title":"handler.setPrototypeOf()","locale":"ko","native":"한국어"},{"title":"handler.setPrototypeOf()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/proxy/proxy/setprototypeof","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/proxy/proxy/setprototypeof/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy","title":"Proxy"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy","title":"Proxy() コンストラクター"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/setPrototypeOf","title":"handler.setPrototypeOf()"}],"pageTitle":"handler.setPrototypeOf() - JavaScript | MDN","noIndexing":false}}