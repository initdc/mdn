{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Math.fround()","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/fround","locale":"ja","native":"日本語","hasMathML":true,"sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/E\"><code>Math.E</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/LN10\"><code>Math.LN10</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/LN2\"><code>Math.LN2</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/LOG10E\"><code>Math.LOG10E</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/LOG2E\"><code>Math.LOG2E</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/PI\"><code>Math.PI</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/SQRT1_2\"><code>Math.SQRT1_2</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/SQRT2\"><code>Math.SQRT2</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/abs\"><code>Math.abs()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/acos\"><code>Math.acos()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh\"><code>Math.acosh()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/asin\"><code>Math.asin()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh\"><code>Math.asinh()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/atan\"><code>Math.atan()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2\"><code>Math.atan2()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh\"><code>Math.atanh()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\"><code>Math.cbrt()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\"><code>Math.ceil()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\"><code>Math.clz32()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/cos\"><code>Math.cos()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh\"><code>Math.cosh()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/exp\"><code>Math.exp()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/expm1\"><code>Math.expm1()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\"><code>Math.floor()</code></a></li><li><em><code>Math.fround()</code></em></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/hypot\"><code>Math.hypot()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\"><code>Math.imul()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/log\"><code>Math.log()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/log10\"><code>Math.log10()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p\"><code>Math.log1p()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/log2\"><code>Math.log2()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/max\"><code>Math.max()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/min\"><code>Math.min()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\"><code>Math.pow()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/random\"><code>Math.random()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"><code>Math.round()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\"><code>Math.sign()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/sin\"><code>Math.sin()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh\"><code>Math.sinh()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt\"><code>Math.sqrt()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/tan\"><code>Math.tan()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh\"><code>Math.tanh()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\"><code>Math.trunc()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Math.fround()</code></strong> 関数は、ある <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> を表す最も近い<a title=\"32ビット単精度\" href=\"https://ja.wikipedia.org/wiki/単精度浮動小数点数\" class=\"external\" rel=\" noopener\">32ビット単精度</a>浮動小数点数を返します。</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/math-fround.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">var singleFloat = Math.fround(doubleFloat);\n</pre>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"doublefloat\"><code>doubleFloat</code></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>。この引数が異なる方であった場合は、数値に変換されるか、変換できなければ <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> になります。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>与えられた値を表す最も近い <a title=\"32 ビット単精度\" href=\"https://ja.wikipedia.org/wiki/単精度浮動小数点数\" class=\"external\" rel=\" noopener\">32 ビット単精度</a>浮動小数点数です。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p>JavaScript は内部的に 64 ビットの倍精度浮動小数点数を使用しており、非常に高い精度を提供しています。しかし、例えば <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> から値を読み込む場合など 32 ビットの浮動小数点数を扱うことがあるかもしれません。これは混乱を招く可能性があります。 64 ビットの浮動小数点数と 32 ビットの浮動小数点数が等しいかどうかをチェックすると、一見同じように見える数値であっても失敗することがあります。</p>\n<p>これを解決するには、 <code>Math.fround()</code> を使用して、 64 ビット浮動小数点数を 32 ビットの浮動小数点数にキャストすることができます。内部的には、 JavaScript は数値を 64 ビットの浮動小数点数として扱い続けますが、仮数の 23 番目のビットに「偶数への丸め」を実行し、それに続く仮数ビットをすべて 0 に設定します。数値が 32 ビットの浮動小数点数の範囲外の場合は、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a> または <code>-Infinity</code> が返されます。</p>\n<p><code>fround()</code> は <code>Math</code> の静的メソッドであるため、生成した <code>Math</code> オブジェクトのメソッドとしてではなく、常に <code>Math.fround()</code> として使用するようにしてください (<code>Math</code> はコンストラクターではありません)。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"math.fround_の使用","title":"Math.fround() の使用","isH3":true,"content":"<p>1.5 という数値は二進数で正確に表すことができ、32 ビットと 64 ビットとで同じになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Math<span class=\"token punctuation\">.</span><span class=\"token function\">fround</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1.5</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">fround</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n</code></pre></div>\n<p>しかし、 1.337 という数値は二進数では正確に表すことができず、32 ビットと 64 ビットとで異なります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Math<span class=\"token punctuation\">.</span><span class=\"token function\">fround</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.337</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1.3370000123977661</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">fround</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.337</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">1.337</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre></div>\n<p>\n  <math>\n    <semantics>\n      <msup>\n        <mn>2</mn>\n        <mn>150</mn>\n      </msup>\n      <annotation encoding=\"TeX\">2^150</annotation>\n    </semantics>\n  </math> は 32 ビット浮動小数点では大きすぎるため、 <code>Infinity</code> が返されます。\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token number\">150</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1.42724769270596e+45</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">fround</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Infinity</span>\n</code></pre></div>\n<p>引数が数値に変換できない場合、または<a title=\"非数\" href=\"https://ja.wikipedia.org/wiki/NaN\" class=\"external\" rel=\" noopener\">非数</a> (<code>NaN</code>) であった場合、 <code>Math.fround()</code> は <code>NaN</code> を返します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Math<span class=\"token punctuation\">.</span><span class=\"token function\">fround</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\nMath<span class=\"token punctuation\">.</span><span class=\"token function\">fround</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ポリフィル","title":"ポリフィル","isH3":false,"content":"<p>これは <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> に対応している場合、次の関数でエミュレートできます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Math<span class=\"token punctuation\">.</span>fround <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span>fround <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>古いブラウザーに対応するには、より遅いですが、次のものも利用できます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Math<span class=\"token punctuation\">.</span>fround<span class=\"token punctuation\">)</span> Math<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">fround</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  arg <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Return early for ±0 and NaN.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>arg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> arg<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> sign <span class=\"token operator\">=</span> arg <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sign <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> arg <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>arg<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Compute the exponent (8 bits, signed).</span>\n  <span class=\"token keyword\">var</span> exp <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">LN2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> powexp <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">126</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>exp<span class=\"token punctuation\">,</span> <span class=\"token number\">127</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Handle subnormals: leading digit is zero if exponent bits are all zero.</span>\n  <span class=\"token keyword\">var</span> leading <span class=\"token operator\">=</span> exp <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">127</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Compute 23 bits of mantissa, inverted to round toward zero.</span>\n  <span class=\"token keyword\">var</span> mantissa <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>leading <span class=\"token operator\">-</span> arg <span class=\"token operator\">/</span> powexp<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mantissa <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">-</span><span class=\"token number\">0x800000</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> sign <span class=\"token operator\">*</span> <span class=\"token number\">Infinity</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> sign <span class=\"token operator\">*</span> powexp <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>leading <span class=\"token operator\">-</span> mantissa <span class=\"token operator\">/</span> <span class=\"token number\">0x800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma262/#sec-math.fround\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript (ECMA-262)<br><small lang=\"ja\">Math.fround の定義</small></a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.Math.fround","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/fround/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"><code>Math.round()</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"解説","id":"解説"},{"text":"例","id":"例"},{"text":"ポリフィル","id":"ポリフィル"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Math.fround() 関数は、ある Number を表す最も近い32ビット単精度浮動小数点数を返します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Math.fround()","locale":"en-US","native":"English (US)"},{"title":"Math.fround()","locale":"fr","native":"Français"},{"title":"Math.fround()","locale":"ko","native":"한국어"},{"title":"Math.fround()","locale":"ru","native":"Русский"},{"title":"Math.fround()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/math/fround","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/math/fround/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math","title":"Math"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/fround","title":"Math.fround()"}],"pageTitle":"Math.fround() - JavaScript | MDN","noIndexing":false}}