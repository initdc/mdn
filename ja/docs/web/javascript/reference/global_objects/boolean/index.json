{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Boolean","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean/toString\"><code>Boolean.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean/valueOf\"><code>Boolean.prototype.valueOf()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Boolean</code></strong> オブジェクトは論理値のオブジェクトラッパーです。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p>最初の引数に渡された値は、必要に応じて論理値に変換されます。値が省略された場合や、値が <code>0</code>, <code>-0</code>, <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a>, <code>false</code>, <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>, <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>, 空文字列 (<code>\"\"</code>) であった場合、オブジェクトは <code>false</code> の初期値を持ちます。それ以外のあらゆる値は、オブジェクトや空の配列 (<code>[]</code>)、\"<code>false</code>\" という文字列も含めて、 <code>true</code> の初期値を持つオブジェクトを生成します。</p>\n<p><a href=\"/ja/docs/Glossary/Primitive\">プリミティブ</a>の <code>Boolean</code> 値である <code>true</code> や <code>false</code> を、 <code>true</code> や <code>false</code> の値を持った <code>Boolean</code> オブジェクトと混同しないでください。</p>\n<p>その値が <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> や <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> でないオブジェクトは<strong>すべて</strong>、 <code>Boolean</code> オブジェクトの値が <code>false</code> である場合も含めて、条件文に渡されるとすべて <code>true</code> に評価されます。例えば、以下の <a href=\"/ja/docs/Web/JavaScript/Reference/Statements/if...else\"><code>if</code></a> 文の条件は <code>true</code> に評価されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// このコードは実行されます。</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この振る舞いは <code>Boolean</code> プリミティブには適用されません。例えば、以下の <a href=\"/ja/docs/Web/JavaScript/Reference/Statements/if...else\"><code>if</code></a> 文の条件は <code>false</code> に評価されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// このコードは実行されません</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>Boolean</code> オブジェクトを論理値でない値から論理値への変換に使わないでください。代わりに、 <code>Boolean</code> を関数として使ったり、<a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">二重否定演算子</a>を使用したりすることで同じことが行えます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// こちらを使うか...</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// ...こちらを使ってください</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span>expression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// これは使わないでください！</span>\n</code></pre></div>\n<p><code>Boolean</code> オブジェクトの初期値としてオブジェクトを指定した場合、それが値が <code>false</code> の <code>Boolean</code> オブジェクトであっても、新しい <code>Boolean</code> オブジェクトは <code>true</code> の値を持ちます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myFalse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 初期値は false</span>\n<span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>myFalse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 初期値は true</span>\n<span class=\"token keyword\">var</span> myString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 文字列オブジェクト</span>\n<span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>myString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 初期値は true</span>\n</code></pre></div>\n<p><code>Boolean</code> プリミティブの代わりに <code>Boolean</code> オブジェクトを使用しないでください。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 標準外の <a href=\"/ja/docs/Web/API/Document#properties\"><code>document.all</code></a> プロパティがこのコンストラクターの引数として使用された場合、結果は <code>Boolean</code> オブジェクトで値は <code>false</code> となります。このプロパティは古く、標準外で、使用するべきではありません。</p>\n</div>\n<p><code>==</code> を使用して緩い比較でオブジェクトと boolean プリミティブを比較した場合、実際にはどのように比較が行われるのかを明確に理解することが重要です。以下の例を考えてみてください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[] is truthy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>         <span class=\"token comment\">// \"[] is truthy\" と出力</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[] == false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// \"[] == false\" と出力</span>\n</code></pre></div>\n<p><code>[]</code> が真値であるにもかかわらず <code>[] == false</code> となるのは、 <code>[] == false</code> は <code>[]</code> の<em>値</em>と <code>false</code> を比較するからです。そして、 <code>[]</code> の<em>値</em>を取得するために、 JavaScript エンジンはまず <code>[].toString()</code> を呼び出します。これは <code>\"\"</code> を返すので、<em>これ</em>が実際に <code>false</code> と比較されます。言い換えれば、 <code>[] == false</code> は <code>\"\" == false</code> と同じです。そして、 <code>\"\"</code> は偽値です。ということで、この例の動作はこれで説明できます。</p>"}},{"type":"prose","value":{"id":"コンストラクター","title":"コンストラクター","isH3":false,"content":"<dl>\n  <dt id=\"boolean\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean/Boolean\"><code>Boolean()</code></a></dt>\n  <dd>\n    <p>新しい <code>Boolean</code> オブジェクトを生成します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"インスタンスメソッド","title":"インスタンスメソッド","isH3":false,"content":"<dl>\n  <dt id=\"boolean.prototype.tostring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean/toString\"><code>Boolean.prototype.toString()</code></a></dt>\n  <dd>\n    <p>このオブジェクトの値に応じて、文字列で <code>true</code> または <code>false</code> のどちらかを返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a> メソッドを上書きします。</p>\n  </dd>\n  <dt id=\"boolean.prototype.valueof\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean/valueOf\"><code>Boolean.prototype.valueOf()</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\" aria-current=\"page\"><code>Boolean</code></a> オブジェクトのプリミティブ値を返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a> メソッドを上書きします。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"boolean_オブジェクトを初期値_false_で生成","title":"<code>Boolean</code> オブジェクトを初期値 <code>false</code> で生成","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> bNoParam <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bZero <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bNull <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bEmptyString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bfalse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Boolean オブジェクトを初期値 false で生成"}},{"type":"prose","value":{"id":"boolean_オブジェクトを初期値_true_で生成","title":"<code>Boolean</code> オブジェクトを初期値 <code>true</code> で生成","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> btrue <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> btrueString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">'true'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bfalseString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">'false'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bSuLin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Su Lin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bArrayProto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> bObjProto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","titleAsText":"Boolean オブジェクトを初期値 true で生成"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-boolean-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Boolean"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.Boolean","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Glossary/Boolean\">Boolean</a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Data_structures#boolean_type\">論理値プリミティブ</a></li>\n  <li><a href=\"https://ja.wikipedia.org/wiki/%E3%83%96%E3%83%BC%E3%83%AA%E3%82%A2%E3%83%B3%E5%9E%8B\" class=\"external\" rel=\" noopener\">ブーリアン型 (Wikipedia)</a></li>\n</ul>"}}],"toc":[{"text":"解説","id":"解説"},{"text":"コンストラクター","id":"コンストラクター"},{"text":"インスタンスメソッド","id":"インスタンスメソッド"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Boolean オブジェクトは論理値のオブジェクトラッパーです。","popularity":0.0011,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Boolean","locale":"en-US","native":"English (US)"},{"title":"Booleano","locale":"es","native":"Español"},{"title":"Boolean","locale":"fr","native":"Français"},{"title":"Boolean","locale":"ko","native":"한국어"},{"title":"Boolean","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Boolean","locale":"ru","native":"Русский"},{"title":"Boolean","locale":"zh-CN","native":"中文 (简体)"},{"title":"Boolean","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/boolean","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/boolean/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean","title":"Boolean"}],"pageTitle":"Boolean - JavaScript | MDN","noIndexing":false}}