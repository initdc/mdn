{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Date","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/@@toPrimitive\"><code>Date.prototype[@@toPrimitive]</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getDate\"><code>Date.prototype.getDate()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\"><code>Date.prototype.getDay()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear\"><code>Date.prototype.getFullYear()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getHours\"><code>Date.prototype.getHours()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getMilliseconds\"><code>Date.prototype.getMilliseconds()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getMinutes\"><code>Date.prototype.getMinutes()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth\"><code>Date.prototype.getMonth()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getSeconds\"><code>Date.prototype.getSeconds()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime\"><code>Date.prototype.getTime()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\"><code>Date.prototype.getTimezoneOffset()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDate\"><code>Date.prototype.getUTCDate()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDay\"><code>Date.prototype.getUTCDay()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCFullYear\"><code>Date.prototype.getUTCFullYear()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCHours\"><code>Date.prototype.getUTCHours()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMilliseconds\"><code>Date.prototype.getUTCMilliseconds()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMinutes\"><code>Date.prototype.getUTCMinutes()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMonth\"><code>Date.prototype.getUTCMonth()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCSeconds\"><code>Date.prototype.getUTCSeconds()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getYear\"><code>Date.prototype.getYear()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/now\"><code>Date.now()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\"><code>Date.parse()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setDate\"><code>Date.prototype.setDate()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setFullYear\"><code>Date.prototype.setFullYear()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setHours\"><code>Date.prototype.setHours()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setMilliseconds\"><code>Date.prototype.setMilliseconds()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setMinutes\"><code>Date.prototype.setMinutes()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth\"><code>Date.prototype.setMonth()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setSeconds\"><code>Date.prototype.setSeconds()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime\"><code>Date.prototype.setTime()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCDate\"><code>Date.prototype.setUTCDate()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCFullYear\"><code>Date.prototype.setUTCFullYear()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCHours\"><code>Date.prototype.setUTCHours()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMilliseconds\"><code>Date.prototype.setUTCMilliseconds()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMinutes\"><code>Date.prototype.setUTCMinutes()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMonth\"><code>Date.prototype.setUTCMonth()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCSeconds\"><code>Date.prototype.setUTCSeconds()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setYear\"><code>Date.prototype.setYear()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toDateString\"><code>Date.prototype.toDateString()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toGMTString\"><code>Date.prototype.toGMTString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\"><code>Date.prototype.toISOString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\"><code>Date.prototype.toJSON()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString\"><code>Date.prototype.toLocaleDateString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\"><code>Date.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\"><code>Date.prototype.toLocaleTimeString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toString\"><code>Date.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toTimeString\"><code>Date.prototype.toTimeString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\"><code>Date.prototype.toUTCString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC\"><code>Date.UTC()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/valueOf\"><code>Date.prototype.valueOf()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>JavaScript の <strong><code>Date</code></strong> オブジェクトは、単一の瞬間の時刻をプラットフォームに依存しない形式で表します。 <code>Date</code> オブジェクトは協定世界時 (UTC) の 1970 年 1 月 1 日からの経過ミリ秒数を表す <code>Number</code> の値を含んでいます。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> TC39 は <a href=\"https://tc39.es/proposal-temporal/docs/index.html\" class=\"external\" rel=\" noopener\">Temporal</a> という、新しい日付/時刻の API を開発しています。これについて詳しくは <a href=\"https://blogs.igalia.com/compilers/2020/06/23/dates-and-times-in-javascript/\" class=\"external\" rel=\" noopener\">Igalia のブログ</a>を参照してください。まだ正式利用の準備はできていません。</p>\n</div>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":""}},{"type":"prose","value":{"id":"ecmascript_元期_とタイムスタンプ","title":"ECMAScript 元期 とタイムスタンプ","isH3":true,"content":"<p>JavaScript の日時は、基本的に協定世界時 (UTC) の 1970 年 1 月 1 日深夜 0 時からの経過ミリ秒数で指定されます。この日付と時刻は、コンピューターに記録される日付と時刻の値の主な基準値である <strong>UNIX 元期</strong> (UTC の 1970 年 1 月 1 日深夜 0 時からの経過秒数) とは異なります。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Date オブジェクトの中心となる時間値は UTC ですが、日付と時刻、またはその一部を取得する基本的なメソッドは、すべて地方時 (ホストシステムなど) のタイムゾーンとオフセットで動作することを覚えておくことが重要です。</p>\n</div>\n<p><code>Date</code> の最大値は、確実な整数の最大値 (<code>Number.MAX_SAFE_INTEGER</code>、9,007,199,254,740,991) と同じ値ではないことに注意が必要です。代わりに ECMA-262 では、 UTC の 1970 年 1 月 1 日から前後 ±100,000,000 (1 億) 日 (つまり、紀元前 271821 年 4 月 20 日 - 紀元 275760 年 9 月 13 日) を標準の <code>Date</code> オブジェクトで表すことができると定義しています。</p>"}},{"type":"prose","value":{"id":"日時形式とタイムゾーンの変換","title":"日時形式とタイムゾーンの変換","isH3":true,"content":"<p>様々な形式で日時を取得したり、タイムゾーンの変換を行ったりすることができる方法はたくさんあります。特に便利なのは、世界時標準 (World Time Standard) で定義されている世界標準時である協定世界時 (UTC) で日付と時刻を出力する関数です。 (この時間は歴史的に<em>グリニッジ標準時</em>として知られており、 UTC はイギリスのロンドンとその近くのグリニッジを含む子午線に沿って位置しています。) ユーザーの端末は現地時間を提供します。</p>\n<p>地方時の日付と時刻の個々の部分を読み書きするメソッド (<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\"><code>getDay()</code></a> や <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setHours\"><code>setHours()</code></a> など) に加えて、 UTC を使用して日付と時刻を読み書きする同等のメソッド (<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDay\"><code>getUTCDay()</code></a> や <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCHours\"><code>setUTCHours()</code></a> など) もあります。</p>"}},{"type":"prose","value":{"id":"コンストラクター","title":"コンストラクター","isH3":false,"content":"<dl>\n  <dt id=\"date\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/Date\"><code>Date()</code></a></dt>\n  <dd>\n    <p>関数として呼び出された場合、現在の日付と時刻の文字列表現を返します。 <code>new Date().toString()</code> を実行するのと同じです。</p>\n  </dd>\n  <dt id=\"new_date\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/Date\"><code>new Date()</code></a></dt>\n  <dd>\n    <p>コンストラクターとして呼び出された場合、新しい <code>Date</code> オブジェクトを返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"静的メソッド","title":"静的メソッド","isH3":false,"content":"<dl>\n  <dt id=\"date.now\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/now\"><code>Date.now()</code></a></dt>\n  <dd>\n    <p>現在の時刻に対応する数値、すなわち UTC の 1970 年 1 月 1 日 00:00:00 から経過したミリ秒数を表す数値を返します。うるう秒は無視します。</p>\n  </dd>\n  <dt id=\"date.parse\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\"><code>Date.parse()</code></a></dt>\n  <dd>\n    <p>日付を表す文字列を解釈して、地方時で 1970 年 1 月 1 日 00:00:00 から経過したミリ秒数を表す数値を返します。うるう秒は無視します。</p>\n    <div class=\"notecard note\" id=\"sect3\">\n      <p><strong>Note:</strong> ブラウザーごとに動作が異なり一貫性がないため、 <code>Date.parse</code> で文字列を解釈しないことを強く推奨します。</p>\n    </div>\n  </dd>\n  <dt id=\"date.utc\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC\"><code>Date.UTC()</code></a></dt>\n  <dd>\n    <p>最も長い形式のコンストラクターと同じ引数（すなわち 2 〜 7）を受け取り、 1970 年 1 月 1 日 00:00:00 （UTC）から経過したミリ秒数を返します。うるう秒は無視します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"インスタンスメソッド","title":"インスタンスメソッド","isH3":false,"content":"<dl>\n  <dt id=\"date.prototype.getdate\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getDate\"><code>Date.prototype.getDate()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「日」 (<code>1</code>–<code>31</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getday\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay\"><code>Date.prototype.getDay()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「曜日」 (<code>0</code>–<code>6</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getfullyear\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear\"><code>Date.prototype.getFullYear()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「年」 (4 桁の年であれば 4 桁) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.gethours\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getHours\"><code>Date.prototype.getHours()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「時」 (<code>0</code>–<code>23</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getmilliseconds\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getMilliseconds\"><code>Date.prototype.getMilliseconds()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「ミリ秒」 (<code>0</code>–<code>999</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getminutes\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getMinutes\"><code>Date.prototype.getMinutes()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「分」 (<code>0</code>–<code>59</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getmonth\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth\"><code>Date.prototype.getMonth()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「月」 (<code>0</code>–<code>11</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getseconds\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getSeconds\"><code>Date.prototype.getSeconds()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「秒」 (<code>0</code>–<code>59</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.gettime\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime\"><code>Date.prototype.getTime()</code></a></dt>\n  <dd>\n    <p>指定された日時を協定世界時 (UTC) の 1970 年 1 月 1 日 00:00:00 からの経過ミリ秒単位の数値で返します。 (それ以前の時刻では負の数を返します。)</p>\n  </dd>\n  <dt id=\"date.prototype.gettimezoneoffset\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\"><code>Date.prototype.getTimezoneOffset()</code></a></dt>\n  <dd>\n    <p>現地の時間帯のオフセットを分で返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getutcdate\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDate\"><code>Date.prototype.getUTCDate()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「日」 (<code>1</code>–<code>31</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getutcday\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCDay\"><code>Date.prototype.getUTCDay()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「曜日」 (<code>0</code>–<code>6</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getutcfullyear\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCFullYear\"><code>Date.prototype.getUTCFullYear()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「年」 (4 桁の年であれば 4 桁) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getutchours\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCHours\"><code>Date.prototype.getUTCHours()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「時」 (<code>0</code>–<code>23</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getutcmilliseconds\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMilliseconds\"><code>Date.prototype.getUTCMilliseconds()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「ミリ秒」 (<code>0</code>–<code>999</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getutcminutes\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMinutes\"><code>Date.prototype.getUTCMinutes()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「分」 (<code>0</code>–<code>59</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getutcmonth\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCMonth\"><code>Date.prototype.getUTCMonth()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「月」 (<code>0</code>–<code>11</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getutcseconds\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getUTCSeconds\"><code>Date.prototype.getUTCSeconds()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「秒」 (<code>0</code>–<code>59</code>) を返します。</p>\n  </dd>\n  <dt id=\"date.prototype.getyear\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getYear\"><code>Date.prototype.getYear()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「年」 (ふつうは 2–3 桁) を返します。代わりに <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear\"><code>getFullYear()</code></a> を使用してください。</p>\n  </dd>\n  <dt id=\"date.prototype.setdate\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setDate\"><code>Date.prototype.setDate()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「日」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setfullyear\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setFullYear\"><code>Date.prototype.setFullYear()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「年」を完全な形 (例えば、 4 桁の年であれば 4 桁) で設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.sethours\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setHours\"><code>Date.prototype.setHours()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「時」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setmilliseconds\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setMilliseconds\"><code>Date.prototype.setMilliseconds()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「ミリ秒」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setminutes\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setMinutes\"><code>Date.prototype.setMinutes()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「分」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setmonth\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth\"><code>Date.prototype.setMonth()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「月」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setseconds\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setSeconds\"><code>Date.prototype.setSeconds()</code></a></dt>\n  <dd>\n    <p>地方時に基づき、指定された日時の「秒」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.settime\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime\"><code>Date.prototype.setTime()</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\" aria-current=\"page\"><code>Date</code></a> オブジェクトを協定世界時(UTC) の 1970 年 1 月 1 日 00:00:00 からのミリ秒単位の数で表された時刻に設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setutcdate\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCDate\"><code>Date.prototype.setUTCDate()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「日」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setutcfullyear\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCFullYear\"><code>Date.prototype.setUTCFullYear()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「年」を完全な形で設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setutchours\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCHours\"><code>Date.prototype.setUTCHours()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「時」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setutcmilliseconds\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMilliseconds\"><code>Date.prototype.setUTCMilliseconds()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「ミリ秒」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setutcminutes\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMinutes\"><code>Date.prototype.setUTCMinutes()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「分」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setutcmonth\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCMonth\"><code>Date.prototype.setUTCMonth()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「月」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setutcseconds\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setUTCSeconds\"><code>Date.prototype.setUTCSeconds()</code></a></dt>\n  <dd>\n    <p>協定世界時に基づき、指定された日時の「秒」を設定します。</p>\n  </dd>\n  <dt id=\"date.prototype.setyear\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setYear\"><code>Date.prototype.setYear()</code></a></dt>\n  <dd>\n    <p>協定地方時に基づき、指定された日時の「年」 (ふつうは 2–3 桁) を設定します。代わりに <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setFullYear\"><code>setFullYear()</code></a> を使用してください。</p>\n  </dd>\n  <dt id=\"date.prototype.todatestring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toDateString\"><code>Date.prototype.toDateString()</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\" aria-current=\"page\"><code>Date</code></a> の「日付」部を、 'Thu Apr 12 2018' のように人間が読みやすい形式の文字列にして返します。</p>\n  </dd>\n  <dt id=\"date.prototype.toisostring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\"><code>Date.prototype.toISOString()</code></a></dt>\n  <dd>\n    <p>日付を ISO 8601 Extended Format に準じた文字列に変換します。</p>\n  </dd>\n  <dt id=\"date.prototype.tojson\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\"><code>Date.prototype.toJSON()</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\"><code>toISOString()</code></a> を使用して <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\" aria-current=\"page\"><code>Date</code></a> を表す文字列を返します。<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>JSON.stringify()</code></a> の代わりに使用してください。</p>\n  </dd>\n  <dt id=\"date.prototype.togmtstring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toGMTString\"><code>Date.prototype.toGMTString()</code></a></dt>\n  <dd>\n    <p>GMT (UTC) タイムゾーンを基準にした <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\" aria-current=\"page\"><code>Date</code></a> を表す文字列を返します。代わりに <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\"><code>toUTCString()</code></a> を使用してください。</p>\n  </dd>\n  <dt id=\"date.prototype.tolocaledatestring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString\"><code>Date.prototype.toLocaleDateString()</code></a></dt>\n  <dd>\n    <p>この日時の日付部分を、システム設定に基づいて地域性を考慮した表現による文字列にして返します。</p>\n  </dd>\n  <dt id=\"date.prototype.tolocalestring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\"><code>Date.prototype.toLocaleString()</code></a></dt>\n  <dd>\n    <p>日付を地域の日付書式に従った文字列に変換して返します。<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a> メソッドを上書きします。</p>\n  </dd>\n  <dt id=\"date.prototype.tolocaletimestring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\"><code>Date.prototype.toLocaleTimeString()</code></a></dt>\n  <dd>\n    <p>この日時の時刻部分を、システム設定に基づいて地域性を考慮した表現による文字列にして返します。</p>\n  </dd>\n  <dt id=\"date.prototype.tostring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toString\"><code>Date.prototype.toString()</code></a></dt>\n  <dd>\n    <p>指定された <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\" aria-current=\"page\"><code>Date</code></a> オブジェクトを表す文字列を返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a> メソッドを上書きします。</p>\n  </dd>\n  <dt id=\"date.prototype.totimestring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toTimeString\"><code>Date.prototype.toTimeString()</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\" aria-current=\"page\"><code>Date</code></a> の「時刻」部を人間が読みやすい形式の文字列にして返します。</p>\n  </dd>\n  <dt id=\"date.prototype.toutcstring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\"><code>Date.prototype.toUTCString()</code></a></dt>\n  <dd>\n    <p>日時を UTC タイムゾーンを使用する文字列に変換します。</p>\n  </dd>\n  <dt id=\"date.prototype.valueof\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/valueOf\"><code>Date.prototype.valueOf()</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\" aria-current=\"page\"><code>Date</code></a> オブジェクトのプリミティブ値を返します。<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a> メソッドを上書きします。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"date_オブジェクトを生成するいくつかの方法","title":"Date オブジェクトを生成するいくつかの方法","isH3":true,"content":"<p>以下の例で、 JavaScript の日時を生成するいくつかの方法を示します。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> <code>Date</code> コンストラクター (または同等の <code>Date.parse</code>) で日付文字列を解釈することは、ブラウザーごとに動作が異なり一貫性がないため、避けるように強くすすめます。</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> today <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> birthday <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'December 17, 1995 03:24:00'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> birthday <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1995-12-17T03:24:00'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> birthday <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">1995</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span>            <span class=\"token comment\">// 月は 0 起点</span>\n<span class=\"token keyword\">let</span> birthday <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">1995</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> birthday <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">628021800000</span><span class=\"token punctuation\">)</span>            <span class=\"token comment\">// passing epoch timestamp</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"年月日や時刻の取得","title":"年月日や時刻の取得","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>month<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">]</span>       <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>hour<span class=\"token punctuation\">,</span> minutes<span class=\"token punctuation\">,</span> seconds<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getMinutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"2_桁の年の補完","title":"2 桁の年の補完","isH3":true,"content":"<p><code>new Date()</code> は 2 桁の年の値に対して、古くで望ましくない一貫性のない挙動を示します。具体的には、 <code>new Date()</code> の呼び出しに 2 桁の年の値が与えられた場合、その年の値はリテラルの年として扱われず、そのまま使用され、代わりに相対的なオフセットとして解釈されます。 — ある場合には 1900 年からのオフセットとなりますが、またある場合には 2000 年からのオフセットになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\">// Sun Feb 01 1998 00:00:00 GMT+0000 (GMT)</span>\n<span class=\"token keyword\">let</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\">// Wed Feb 01 1922 00:00:00 GMT+0000 (GMT)</span>\n<span class=\"token keyword\">let</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2/1/22\"</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">// Tue Feb 01 2022 00:00:00 GMT+0000 (GMT)</span>\n\n<span class=\"token comment\">// 古い方法。常に 2 桁の年の値を 1900 からの相対値として解釈する</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">setYear</span><span class=\"token punctuation\">(</span><span class=\"token number\">98</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Sun Feb 01 1998 00:00:00 GMT+0000 (GMT)</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">setYear</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Wed Feb 01 1922 00:00:00 GMT+0000 (GMT)</span>\n</code></pre></div>\n<p>西暦 0 年から 99 年までの間の年を生成および取得するには、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/setFullYear\"><code>setFullYear()</code></a> メソッドと <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear\"><code>getFullYear()</code></a> メソッドを使用してください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 推奨されるメソッドです。どんな値でも相対オフセットではなく、そのまま</span>\n<span class=\"token comment\">// 年として解釈します。</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">setFullYear</span><span class=\"token punctuation\">(</span><span class=\"token number\">98</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 98 (not 1998)</span>\ndate<span class=\"token punctuation\">.</span><span class=\"token function\">setFullYear</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 22 (not 1922, not 2022)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"経過時間の計算","title":"経過時間の計算","isH3":true,"content":"<p>以下の例で、2 つの JavaScript の日付の間で経過した時間を計る方法を示します。</p>\n<p>日 (夏時間の切り替えによる)、月、年の長さが異なるため、経過時間を時、分、秒以上の単位で表現するには、いくつかの問題に対処する必要がありますので、事前によく調べて使用してください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Date オブジェクトを使用</span>\n<span class=\"token keyword\">let</span> start <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 時間を計りたいイベントをここに置く</span>\n<span class=\"token function\">doSomethingForALongTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> end <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> elapsed <span class=\"token operator\">=</span> end <span class=\"token operator\">-</span> start <span class=\"token comment\">// ミリ秒単位の経過時間</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 組み込みメソッドを使用</span>\n<span class=\"token keyword\">var</span> start <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 時間を計りたいイベントをここに置く</span>\n<span class=\"token function\">doSomethingForALongTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> end <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> elapsed <span class=\"token operator\">=</span> end<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ミリ秒単位の経過時間</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 関数をテストして返値を取得する</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">printElapsedTime</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fTest</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> nStartTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      vReturn <span class=\"token operator\">=</span> <span class=\"token function\">fTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      nEndTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Elapsed time: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>nEndTime <span class=\"token operator\">-</span> nStartTime<span class=\"token punctuation\">)</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> milliseconds</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> vReturn\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> yourFunctionReturn <span class=\"token operator\">=</span> <span class=\"token function\">printElapsedTime</span><span class=\"token punctuation\">(</span>yourFunction<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>Note:</strong> <a href=\"/ja/docs/Web/API/performance_property\" title=\"Web Performance API\">Web Performance API</a> の高精度時刻機能に対応しているブラウザーでは、 <a href=\"/ja/docs/Web/API/Performance/now\"><code>Performance.now()</code></a> で、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/now\"><code>Date.now()</code></a> よりも高信頼かつ高精度な経過時間の測定が可能です。</p>\n</div>"}},{"type":"prose","value":{"id":"ecmascript_元期からの経過秒数を取得する","title":"ECMAScript 元期からの経過秒数を取得する","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> seconds <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>この場合、整数だけを返すことが重要です (単純な除算ではできません)。また、実際に経過した秒数を返すことも重要です (ですから、上の例では <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/round\"><code>Math.round()</code></a> ではなく <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\"><code>Math.floor()</code></a> を使っています)。</p>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-date-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Date"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.Date","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/Date\"><code>Date()</code></a> コンストラクター</li>\n</ul>"}}],"toc":[{"text":"解説","id":"解説"},{"text":"コンストラクター","id":"コンストラクター"},{"text":"静的メソッド","id":"静的メソッド"},{"text":"インスタンスメソッド","id":"インスタンスメソッド"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"JavaScript の Date オブジェクトは、単一の瞬間の時刻をプラットフォームに依存しない形式で表します。 Date オブジェクトは協定世界時 (UTC) の 1970 年 1 月 1 日からの経過ミリ秒数を表す Number の値を含んでいます。","popularity":0.006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Date","locale":"en-US","native":"English (US)"},{"title":"Date","locale":"es","native":"Español"},{"title":"Date","locale":"fr","native":"Français"},{"title":"Date","locale":"ko","native":"한국어"},{"title":"Date","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Дата","locale":"ru","native":"Русский"},{"title":"Date","locale":"zh-CN","native":"中文 (简体)"},{"title":"Date","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/date","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/date/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date","title":"Date"}],"pageTitle":"Date - JavaScript | MDN","noIndexing":false}}