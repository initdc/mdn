{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Atomics","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics\"><code>Atomics</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/add\"><code>Atomics.add()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/and\"><code>Atomics.and()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/compareExchange\"><code>Atomics.compareExchange()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/exchange\"><code>Atomics.exchange()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/isLockFree\"><code>Atomics.isLockFree()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/load\"><code>Atomics.load()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/notify\"><code>Atomics.notify()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/or\"><code>Atomics.or()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/store\"><code>Atomics.store()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/sub\"><code>Atomics.sub()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait\"><code>Atomics.wait()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/waitAsync\"><code>Atomics.waitAsync()</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/xor\"><code>Atomics.xor()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Atomics</code></strong> オブジェクトは、静的なメソッドとして不可分操作を提供します。これらは <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\"><code>SharedArrayBuffer</code></a> および <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> オブジェクトで使用されます。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p>不可分操作は、 <code>Atomics</code> モジュール上に装備されています。他のグローバルオブジェクトと異なり、 <code>Atomics</code> はコンストラクターではありません。 <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code> 演算子</a>と一緒に使用したり、 <code>Atomics</code> オブジェクトを関数として呼び出したりすることはできません。 <code>Atomics</code> のすべてのプロパティとメソッドは静的です (例えば、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a> オブジェクトの場合と同様です)。</p>"}},{"type":"prose","value":{"id":"不可分操作","title":"不可分操作","isH3":true,"content":"<p>メモリが共有されている場合、複数のスレッドがメモリー内の同じデータを読み書きできます。不可分操作では、予測される値の書き込みと読み込みを保証するため、次の演算が開始される前に現在の演算が完了し、その演算が割り込まれないようにします。</p>"}},{"type":"prose","value":{"id":"wait_と_notify","title":"wait と notify","isH3":true,"content":"<p><code>wait()</code> メソッドと <code>notify()</code> メソッドは、 Linux の futex (\"fast user-space mutex\") を原型としており、特定の条件が true になるまで待つ手段を提供します。一般的にはブロッキング構造として使用されます。</p>"}},{"type":"prose","value":{"id":"静的メソッド","title":"静的メソッド","isH3":false,"content":"<dl>\n  <dt id=\"atomics.add\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/add\"><code>Atomics.add()</code></a></dt>\n  <dd>\n    <p>配列の指定した位置にある既存の値に指定した値を追加します。その位置にあった古い値を返します。</p>\n  </dd>\n  <dt id=\"atomics.and\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/and\"><code>Atomics.and()</code></a></dt>\n  <dd>\n    <p>配列の指定した位置の値と指定した値でビット単位の論理積 (AND) を計算します。その位置にあった古い値を返します。</p>\n  </dd>\n  <dt id=\"atomics.compareexchange\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/compareExchange\"><code>Atomics.compareExchange()</code></a></dt>\n  <dd>\n    <p>値が等しい場合、配列の指定した位置に値を格納します。古い値を返します。</p>\n  </dd>\n  <dt id=\"atomics.exchange\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/exchange\"><code>Atomics.exchange()</code></a></dt>\n  <dd>\n    <p>配列の指定した位置に値を格納します。古い値を返します。</p>\n  </dd>\n  <dt id=\"atomics.islockfreesize\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/isLockFree\"><code>Atomics.isLockFree(size)</code></a></dt>\n  <dd>\n    <p>ロック機構と不可分操作のどちらを使用するかを決定するための最適化プリミティブです。指定した要素サイズの配列上の不可分操作が (ロックではなく) ハードウェアによる不可分操作を使用するよう実装されている場合、 <code>true</code> を返します。上級者だけが使用してください。</p>\n  </dd>\n  <dt id=\"atomics.load\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/load\"><code>Atomics.load()</code></a></dt>\n  <dd>\n    <p>配列の指定した位置の値を返します。</p>\n  </dd>\n  <dt id=\"atomics.notify\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/notify\"><code>Atomics.notify()</code></a></dt>\n  <dd>\n    <p>配列の指定した位置で待機中のエージェントに通知します。通知を受けたエージェントの数を返します。</p>\n  </dd>\n  <dt id=\"atomics.or\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/or\"><code>Atomics.or()</code></a></dt>\n  <dd>\n    <p>配列の指定した位置の値と指定した値でビット単位の論理和 (OR) を計算します。その位置にあった古い値を返します。</p>\n  </dd>\n  <dt id=\"atomics.store\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/store\"><code>Atomics.store()</code></a></dt>\n  <dd>\n    <p>配列の指定した位置に指定した値を格納します。その値を返します。</p>\n  </dd>\n  <dt id=\"atomics.sub\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/sub\"><code>Atomics.sub()</code></a></dt>\n  <dd>\n    <p>配列の指定した位置の値から指定した値を減算します。その位置にあった古い値を返します。</p>\n  </dd>\n  <dt id=\"atomics.wait\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait\"><code>Atomics.wait()</code></a></dt>\n  <dd>\n    <p>配列の指定位置に指定した値が含まれているか検証し、休止して待機するかタイムアウトします。 \"<code>ok</code>\"、\"<code>not-equal</code>\"、\"<code>timed-out</code>\" のいずれかの文字列を返します。呼び出したエージェントで待機が許可されていない場合は、 Error 例外を投げます (ほとんどのブラウザーは、ブラウザーのメインスレッドで <code>wait()</code> を許可していません)。</p>\n  </dd>\n  <dt id=\"atomics.xor\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/xor\"><code>Atomics.xor()</code></a></dt>\n  <dd>\n    <p>配列の指定した位置の値と指定した値でビット単位の排他的論理和 (XOR) を計算します。その位置にあった古い値を返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"atomics_の使用","title":"Atomics の使用","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> sab <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ta <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>sab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nta<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\nta<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 17</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 17</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">compareExchange</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 12</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">isLockFree</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">isLockFree</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">isLockFree</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">isLockFree</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">or</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 12</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 13</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">store</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 12</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 12</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span>\n\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">xor</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>ta<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 11</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"待機と通知","title":"待機と通知","isH3":true,"content":"<p>共有された <code>Int32Array</code> があるとします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> sab <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SharedArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> int32 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">(</span>sab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>読み取りスレッドはスリープ状態で、 0 の位置が 0 である間は待機しています。これが true である限り、スレッドは進みません。しかし、書き込みスレッドが新しい値を格納すると、書き込みスレッドから通知され、新しい値 (123) を返します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Atomics<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span>\n</code></pre></div>\n<p>書き込みスレッドが新しい値を格納し、待機しているスレッドに書き込みが発生したことを通知します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0;</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">store</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nAtomics<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/structured-data.html#sec-atomics-object","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Atomics"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.Atomics","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Typed_arrays\">JavaScript 型付き配列</a></li>\n  <li><a href=\"/ja/docs/Web/API/Web_Workers_API\">ウェブワーカー</a></li>\n  <li><a href=\"https://github.com/lars-t-hansen/parlib-simple\" class=\"external\" rel=\" noopener\">parlib-simple</a> – 同期と分配の抽象化を行うシンプルなライブラリー。</li>\n  <li><a href=\"https://github.com/tc39/ecmascript_sharedmem/blob/master/TUTORIAL.md\" class=\"external\" rel=\" noopener\">Shared Memory – 短いチュートリアル</a></li>\n  <li><a href=\"https://hacks.mozilla.org/2016/05/a-taste-of-javascripts-new-parallel-primitives/\" class=\"external\" rel=\" noopener\">JavaScript の並列処理機能を味見してみる – Mozilla Hacks</a></li>\n</ul>"}}],"toc":[{"text":"解説","id":"解説"},{"text":"静的メソッド","id":"静的メソッド"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Atomics オブジェクトは、静的なメソッドとして不可分操作を提供します。これらは SharedArrayBuffer および ArrayBuffer オブジェクトで使用されます。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Atomics","locale":"en-US","native":"English (US)"},{"title":"Atomics","locale":"fr","native":"Français"},{"title":"Atomics","locale":"ko","native":"한국어"},{"title":"Atomics","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Atomics","locale":"ru","native":"Русский"},{"title":"Atomics","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/atomics","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/atomics/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics","title":"Atomics"}],"pageTitle":"Atomics - JavaScript | MDN","noIndexing":false}}