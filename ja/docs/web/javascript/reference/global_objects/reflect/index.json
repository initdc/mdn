{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Reflect","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect\"><code>Reflect</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply\"><code>Reflect.apply()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/construct\"><code>Reflect.construct()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty\"><code>Reflect.defineProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/deleteProperty\"><code>Reflect.deleteProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/get\"><code>Reflect.get()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getOwnPropertyDescriptor\"><code>Reflect.getOwnPropertyDescriptor()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf\"><code>Reflect.getPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/has\"><code>Reflect.has()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/isExtensible\"><code>Reflect.isExtensible()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys\"><code>Reflect.ownKeys()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/preventExtensions\"><code>Reflect.preventExtensions()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set\"><code>Reflect.set()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Reflect</code></strong> は、JavaScript 操作を受け付けるためのメソッドを提供する組み込みオブジェクトです。メソッドは<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\">プロキシーハンドラー</a>のメソッドと同じです。<code>Reflect</code> は関数オブジェクトではありませんので、構築することはできません。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p>他の多くのグローバルオブジェクトとは異なり、<code>Reflect</code> はコンストラクターではありません。<a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code> 演算子</a>で使用したり、 <code>Reflect</code> オブジェクトを関数として呼び出したりすることはできません。 <code>Reflect</code> のすべてのプロパティとメソッドは (<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a> オブジェクトと同様に) 静的です。</p>\n<p><code>Reflect</code> オブジェクトは<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\">プロキシーハンドラーのメソッド</a>と同じ名前をもつ、下記の関数を提供します。</p>\n<p>これらのメソッドの一部は <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> の対応するメソッドとも同じですが、これらの間には<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/Comparing_Reflect_and_Object_methods\">いくらか微妙な違い</a>があります。</p>"}},{"type":"prose","value":{"id":"静的メソッド","title":"静的メソッド","isH3":false,"content":"<dl>\n  <dt id=\"reflect.applytarget_thisargument_argumentslist\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply\"><code>Reflect.apply(<var>target</var>, <var>thisArgument</var>, <var>argumentsList</var>)</code></a></dt>\n  <dd>\n    <p><code>target</code> 関数を、引数 <code>argumentsList</code> で指定された引数で呼び出します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"reflect.constructtarget_argumentslist_newtarget\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/construct\"><code>Reflect.construct(<var>target</var>, <var>argumentsList</var>[, <var>newTarget</var>])</code></a></dt>\n  <dd>\n    <p>関数としての <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code> 演算子</a>です。 <code>new target(...argumentsList)</code> を呼び出すのと等価です。別なプロトタイプを指定するためにオプションを指定することもできます。</p>\n  </dd>\n  <dt id=\"reflect.definepropertytarget_propertykey_attributes\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty\"><code>Reflect.defineProperty(<var>target</var>, <var>propertyKey</var>, <var>attributes</var>)</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\"><code>Object.defineProperty()</code></a> と同様です。返値は論理値で、プロパティが定義できた場合は <code>true</code> を返します。</p>\n  </dd>\n  <dt id=\"reflect.deletepropertytarget_propertykey\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/deleteProperty\"><code>Reflect.deleteProperty(<var>target</var>, <var>propertyKey</var>)</code></a></dt>\n  <dd>\n    <p>関数としての <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/delete\"><code>delete</code> 演算子</a>です。 <code>delete target[propertyKey]</code> を呼び出すのと等価です。</p>\n  </dd>\n  <dt id=\"reflect.gettarget_propertykey_receiver\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/get\"><code>Reflect.get(<var>target</var>, <var>propertyKey</var>[, <var>receiver</var>])</code></a></dt>\n  <dd>\n    <p>このプロパティの値を返します。オブジェクトからのプロパティの取得 (<code>target[propertyKey]</code>) を関数にしたようなものです。</p>\n  </dd>\n  <dt id=\"reflect.getownpropertydescriptortarget_propertykey\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getOwnPropertyDescriptor\"><code>Reflect.getOwnPropertyDescriptor(<var>target</var>, <var>propertyKey</var>)</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\"><code>Object.getOwnPropertyDescriptor()</code></a> に似ています。指定したプロパティが存在する場合にプロパティ記述子を返し、存在しない場合は <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> を返します。</p>\n  </dd>\n  <dt id=\"reflect.getprototypeoftarget\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf\"><code>Reflect.getPrototypeOf(<var>target</var>)</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\"><code>Object.getPrototypeOf()</code></a> と同じです。</p>\n  </dd>\n  <dt id=\"reflect.hastarget_propertykey\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/has\"><code>Reflect.has(<var>target, propertyKey</var>)</code></a></dt>\n  <dd>\n    <p>論理値で、対象がそのプロパティを持っているかどうかを返します。固有の場合も継承の場合も含みます。 <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/in\"><code>in</code> 演算子</a>を関数にしたものです。</p>\n  </dd>\n  <dt id=\"reflect.isextensibletarget\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/isExtensible\"><code>Reflect.isExtensible(<var>target</var>)</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\"><code>Object.isExtensible()</code></a> と同じです。論理値を返し、 <code>true</code> ならば対象が拡張可能です。</p>\n  </dd>\n  <dt id=\"reflect.ownkeystarget\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys\"><code>Reflect.ownKeys(<var>target</var>)</code></a></dt>\n  <dd>\n    <p>独自の (継承されているものではない) プロパティのキーをもつ文字列の配列を返します。</p>\n  </dd>\n  <dt id=\"reflect.preventextensionstarget\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/preventExtensions\"><code>Reflect.preventExtensions(<var>target</var>)</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\"><code>Object.preventExtensions()</code></a> に似ています。論理値を返し、 <code>true</code> は更新に成功した場合です。</p>\n  </dd>\n  <dt id=\"reflect.settarget_propertykey_value_receiver\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set\"><code>Reflect.set(<var>target</var>, <var>propertyKey</var>, <var>value</var>[, <var>receiver</var>])</code></a></dt>\n  <dd>\n    <p>値をプロパティに割り当てる関数です。更新に成功したら <code>true</code> となる論理値を返します。</p>\n  </dd>\n  <dt id=\"reflect.setprototypeoftarget_prototype\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\"><code>Reflect.setPrototypeOf(<var>target</var>, <var>prototype</var>)</code></a></dt>\n  <dd>\n    <p>オブジェクトのプロトタイプを設定する関数です。論理値を返し、 <code>true</code> ならば成功です。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"オブジェクトが特定のプロパティを持っているかどうかを検出","title":"オブジェクトが特定のプロパティを持っているかどうかを検出","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> duck <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Maurice'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">greeting</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Quaaaack! My name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// true</span>\nReflect<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">,</span> <span class=\"token string\">'haircut'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// false</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"オブジェクトが所有するキーの返却","title":"オブジェクトが所有するキーの返却","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">ownKeys</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [ \"name\", \"color\", \"greeting\" ]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"オブジェクトへの新しいプロパティの追加","title":"オブジェクトへの新しいプロパティの追加","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">,</span> <span class=\"token string\">'eyes'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 成功した場合は \"true\" を返します。</span>\n<span class=\"token comment\">// \"duck\" には \"eyes: 'black'\" プロパティが設定されました。</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/reflection.html#sec-reflect-object","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Reflect"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.Reflect","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy\"><code>Proxy</code></a> グローバルオブジェクト</li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy\"><code>handler</code></a> オブジェクト</li>\n</ul>"}}],"toc":[{"text":"解説","id":"解説"},{"text":"静的メソッド","id":"静的メソッド"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Reflect は、JavaScript 操作を受け付けるためのメソッドを提供する組み込みオブジェクトです。メソッドはプロキシーハンドラーのメソッドと同じです。Reflect は関数オブジェクトではありませんので、構築することはできません。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Reflect","locale":"en-US","native":"English (US)"},{"title":"Reflect","locale":"es","native":"Español"},{"title":"Reflect","locale":"fr","native":"Français"},{"title":"Reflect","locale":"ko","native":"한국어"},{"title":"Reflect","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Reflect","locale":"ru","native":"Русский"},{"title":"Reflect","locale":"zh-CN","native":"中文 (简体)"},{"title":"Reflect","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/reflect","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/reflect/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect","title":"Reflect"}],"pageTitle":"Reflect - JavaScript | MDN","noIndexing":false}}