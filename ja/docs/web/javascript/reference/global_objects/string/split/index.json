{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"String.prototype.split()","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/split","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/length\"><code>String length</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/@@iterator\"><code>String.prototype[@@iterator]()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/anchor\"><code>String.prototype.anchor()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/at\"><code>String.prototype.at()</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/big\"><code>String.prototype.big()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/blink\"><code>String.prototype.blink()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/bold\"><code>String.prototype.bold()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\"><code>String.prototype.charAt()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\"><code>String.prototype.charCodeAt()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt\"><code>String.prototype.codePointAt()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/concat\"><code>String.prototype.concat()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\"><code>String.prototype.endsWith()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/fixed\"><code>String.prototype.fixed()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/fontcolor\"><code>String.prototype.fontcolor()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/fontsize\"><code>String.prototype.fontsize()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode\"><code>String.fromCharCode()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\"><code>String.fromCodePoint()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/includes\"><code>String.prototype.includes()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\"><code>String.prototype.indexOf()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/italics\"><code>String.prototype.italics()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf\"><code>String.prototype.lastIndexOf()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/link\"><code>String.prototype.link()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\"><code>String.prototype.localeCompare()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/match\"><code>String.prototype.match()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll\"><code>String.prototype.matchAll()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\"><code>String.prototype.normalize()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\"><code>String.prototype.padEnd()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\"><code>String.prototype.padStart()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/raw\"><code>String.raw()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\"><code>String.prototype.repeat()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/replace\"><code>String.prototype.replace()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll\"><code>String.prototype.replaceAll()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/search\"><code>String.prototype.search()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/slice\"><code>String.prototype.slice()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/small\"><code>String.prototype.small()</code></a></li><li><em><code>String.prototype.split()</code></em></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\"><code>String.prototype.startsWith()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/strike\"><code>String.prototype.strike()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/sub\"><code>String.prototype.sub()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/substr\"><code>String.prototype.substr()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/substring\"><code>String.prototype.substring()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/sup\"><code>String.prototype.sup()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleLowerCase\"><code>String.prototype.toLocaleLowerCase()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/toLocaleUpperCase\"><code>String.prototype.toLocaleUpperCase()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase\"><code>String.prototype.toLowerCase()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/toString\"><code>String.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase\"><code>String.prototype.toUpperCase()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/trim\"><code>String.prototype.trim()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/trimEnd\"><code>String.prototype.trimEnd()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/trimStart\"><code>String.prototype.trimStart()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/valueOf\"><code>String.prototype.valueOf()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>split()</code></strong> メソッドは、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> を指定した区切り文字列で分割することにより、文字列の配列に分割します。</p><iframe class=\"interactive\" height=\"692\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/string-split.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">str.split([separator[, limit]])\n</pre>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"separator\"><code>separator</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>分割を行うところにある文字列です。文字列または<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">正規表現</a>を指定することができます。</p>\n    <ul>\n      <li><code>separator</code> が複数の文字を含んだ文字列である場合、分割にはその文字列の並び全体が見つかることが必要です。</li>\n      <li><code>separator</code> が省略されたり <code>str</code> の中に現れなかったりした場合は、返却される配列には文字列全体から成る要素が 1 つだけ含まれます。</li>\n      <li><code>separator</code> が文字列の先頭または末尾、またはその両方に現れた場合、配列の先頭、末尾、または先頭と末尾の両方が、それぞれ空文字列になります。</li>\n      <li><code>separator</code> が空文字列 (<code>\"\"</code>) の場合、 <code>str</code> は個々の UTF-16 「文字」の配列になります。</li>\n    </ul>\n    <div class=\"notecard warning\" id=\"sect1\">\n      <p><strong>Warning:</strong> 空文字列 (<code>\"\"</code>) を区切り文字列として使用すると、文字列が<em>ユーザーが知覚可能な文字</em> (<a href=\"https://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries\" class=\"external\" rel=\" noopener\">書記素クラスター</a>) に分割されるわけでは<strong>なく</strong>、 Unicode 文字 (コードポイント)、ただし UTF-16 コード単位です。これは<a href=\"https://unicode.org/faq/utf_bom.html#utf16-2\" class=\"external\" rel=\" noopener\">サロゲートペア</a>を破壊します。 <a href=\"https://stackoverflow.com/a/34717402\" class=\"external\" rel=\" noopener\">StackOverflow の “How do you get a string to a character array in JavaScript?”</a> を参照してください。</p>\n    </div>\n  </dd>\n  <dt id=\"limit\"><code>limit</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>非負の整数で、分割する数を制限します。指定された場合、文字列は <code>separator</code> が現れるたびに分割されますが、 <code>limit</code> の数の項目が配列に配置されると停止します。残りのテキストは配列に入りません。</p>\n    <ul>\n      <li>制限数に達する以前に文字列の末尾に達した場合は、配列の要素が <code>limit</code> よりも少なくなることがあります。</li>\n      <li><code>limit</code> が <code>0</code> の場合は、分割は行われません。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>文字列の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> で、指定された文字列で <code>separator</code> が現れるたびに分割されたものです。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p><code>separator</code> は見つかると文字列から削除され、部分文字列が配列に入って返されます。</p>\n<p><code>separator</code> が、キャプチャする括弧を含む正規表現だった場合、 <code>separator</code> が一致するごとに、キャプチャする括弧の結果が (未定義の結果であった場合を含め) 出力配列に追加されます。</p>\n<p><code>separator</code> が配列であった場合、その配列が String に変換された上で区切り文字列として使用されます。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"split_の使用","title":"<code>split()</code> の使用","isH3":true,"content":"<p>文字列が空の場合、 <code>split()</code> は空の配列ではなく、1 つの空文字列を含む配列を返します。文字列と区切り文字列が共に空文字列の場合、空の配列が返ります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myString <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">const</span> splits <span class=\"token operator\">=</span> myString<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>splits<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// ↪ [\"\"]</span>\n</code></pre></div>\n<p>以下の例は、指定された区切りを使って、文字列を文字列の配列に分割する関数を定義します。文字列を分割した後、その関数は元の文字列（分割する前）、使用した区切り、配列中の要素の数、そして、個々の配列要素を示すメッセージを表示します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">splitString</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stringToSplit<span class=\"token punctuation\">,</span> separator</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> arrayOfStrings <span class=\"token operator\">=</span> stringToSplit<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span>separator<span class=\"token punctuation\">)</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'元の文字列: '</span><span class=\"token punctuation\">,</span> stringToSplit<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'区切り文字列: '</span> <span class=\"token punctuation\">,</span> separator<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'配列の要素数は'</span><span class=\"token punctuation\">,</span> arrayOfStrings<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">'件: '</span><span class=\"token punctuation\">,</span> arrayOfStrings<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' / '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> tempestString <span class=\"token operator\">=</span> <span class=\"token string\">'Oh brave new world that has such people in it.'</span>\n<span class=\"token keyword\">const</span> monthString <span class=\"token operator\">=</span> <span class=\"token string\">'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'</span>\n\n<span class=\"token keyword\">const</span> space <span class=\"token operator\">=</span> <span class=\"token string\">' '</span>\n<span class=\"token keyword\">const</span> comma <span class=\"token operator\">=</span> <span class=\"token string\">','</span>\n\n<span class=\"token function\">splitString</span><span class=\"token punctuation\">(</span>tempestString<span class=\"token punctuation\">,</span> space<span class=\"token punctuation\">)</span>\n<span class=\"token function\">splitString</span><span class=\"token punctuation\">(</span>tempestString<span class=\"token punctuation\">)</span>\n<span class=\"token function\">splitString</span><span class=\"token punctuation\">(</span>monthString<span class=\"token punctuation\">,</span> comma<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>この例は次のような出力結果を生み出します。</p>\n<pre class=\"notranslate\">元の文字列: \"Oh brave new world that has such people in it.\"\n区切り: \" \"\n配列は 10 要素: Oh / brave / new / world / that / has / such / people / in / it.\n\n元の文字列: \"Oh brave new world that has such people in it.\"\n区切り: \"undefined\"\n配列は 1 要素: Oh brave new world that has such people in it.\n\n元の文字列: \"Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec\"\n区切り: \",\"\n配列は 12 要素: Jan / Feb / Mar / Apr / May / Jun / Jul / Aug / Sep / Oct / Nov / Dec\n</pre>","titleAsText":"split() の使用"}},{"type":"prose","value":{"id":"文字列からの空白の削除","title":"文字列からの空白の削除","isH3":true,"content":"<p>以下の例では、<code>split()</code> は、0 回以上の空白とそれに続くセミコロン、それにさらに続く 0 回以上の空白を探し、それらが見つかったとき、文字列から空白を削除します。<code>nameList</code> は、<code>split()</code> の結果として返された配列です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> names <span class=\"token operator\">=</span> <span class=\"token string\">'Harry Trump ;Fred Barney; Helen Rigby ; Bill Abel ;Chris Hand '</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> re <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s*(?:;|$)\\s*</span><span class=\"token regex-delimiter\">/</span></span>\n<span class=\"token keyword\">const</span> nameList <span class=\"token operator\">=</span> names<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameList<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>これは 2 つの行を出力します。1 行目は元の文字列を出力し、2 行目は <code>split</code> メソッドの実行結果の配列を出力します。</p>\n<pre class=\"notranslate\">Harry Trump ;Fred Barney; Helen Rigby ; Bill Abel ;Chris Hand\n[ \"Harry Trump\", \"Fred Barney\", \"Helen Rigby\", \"Bill Abel\", \"Chris Hand\", \"\" ]\n</pre>"}},{"type":"prose","value":{"id":"限られた数の分割結果を返す","title":"限られた数の分割結果を返す","isH3":true,"content":"<p>以下の例では、<code>split()</code> は 文字列中の 0 回以上の空白を探し、見つかった最初の 3 つの分割結果を返します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myString <span class=\"token operator\">=</span> <span class=\"token string\">'Hello World. How are you doing?'</span>\n<span class=\"token keyword\">const</span> splits <span class=\"token operator\">=</span> myString<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>splits<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>このスクリプトは以下の例を出力します。</p>\n<pre class=\"notranslate\">[\"Hello\", \"World.\", \"How\"]\n</pre>"}},{"type":"prose","value":{"id":"regexp_で分割して結果に区切り文字列の一部を含める","title":"<code>RegExp</code> で分割して結果に区切り文字列の一部を含める","isH3":true,"content":"<p><code>separator</code> がキャプチャの括弧 <code>(</code> <code>)</code> を含む正規表現である場合、一致した結果が配列に含まれます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myString <span class=\"token operator\">=</span> <span class=\"token string\">'Hello 1 word. Sentence number 2.'</span>\n<span class=\"token keyword\">const</span> splits <span class=\"token operator\">=</span> myString<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\d)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>splits<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>このスクリプトは、以下を表示します。</p>\n<pre class=\"notranslate\">[ \"Hello \", \"1\", \" word. Sentence number \", \"2\", \".\" ]\n</pre>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <strong>メモ:</strong> <code>\\d</code> は<a href=\"/ja/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes\">文字クラス</a>で、0 から 9 の数字に一致します。</p>\n</div>","titleAsText":"RegExp で分割して結果に区切り文字列の一部を含める"}},{"type":"prose","value":{"id":"split_を使った文字列を反転","title":"<code>split()</code> を使った文字列を反転","isH3":true,"content":"<div class=\"notecard warning\" id=\"sect3\">\n  <p><strong>Warning:</strong> この手法は文字列を正しく反転できるとは限りません。</p>\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'asdfghjkl'</span>\n<span class=\"token keyword\">const</span> strReverse <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 'lkjhgfdsa'</span>\n\n<span class=\"token comment\">// split() が配列を返し、 reverse() および join() が適用できます</span>\n</code></pre></div>\n  <p>Unicode 対応の分割を使用している場合でも、文字列に書記素クラスターが含まれていると機能しません (代わりに <a href=\"https://github.com/mathiasbynens/esrever\" class=\"external\" rel=\" noopener\">esrever</a> などを使ってください)。</p>\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'résumé'</span>\n<span class=\"token keyword\">const</span> strReverse <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?:)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">u</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// =&gt; \"́emuśer\"</span>\n</code></pre></div>\n  <p><strong>ボーナス:</strong> <a href=\"/ja/docs/Web/JavaScript/Reference/Operators#identity_strict_equality_(===)\"><code>===</code></a> 演算子を使用すると、元の文字列が回文であるかどうかが判定できます。</p>\n</div>","titleAsText":"split() を使った文字列を反転"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma262/#sec-string.prototype.split\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript (ECMA-262)<br><small lang=\"ja\">String.prototype.split の定義</small></a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.String.split","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/split/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\"><code>String.prototype.charAt()</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf\"><code>String.prototype.indexOf()</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf\"><code>String.prototype.lastIndexOf()</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"><code>Array.prototype.join()</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Guide/Regular_Expressions\">JavaScript での正規表現の使用</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"解説","id":"解説"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"split() メソッドは、 String を指定した区切り文字列で分割することにより、文字列の配列に分割します。","popularity":0.0047,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"String.prototype.split()","locale":"en-US","native":"English (US)"},{"title":"String.prototype.split()","locale":"es","native":"Español"},{"title":"String.prototype.split()","locale":"fr","native":"Français"},{"title":"String.prototype.split()","locale":"ko","native":"한국어"},{"title":"String.prototype.split()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"String.prototype.split()","locale":"ru","native":"Русский"},{"title":"String.prototype.split()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/string/split","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/string/split/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/String","title":"String"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/split","title":"String.prototype.split()"}],"pageTitle":"String.prototype.split() - JavaScript | MDN","noIndexing":false}}