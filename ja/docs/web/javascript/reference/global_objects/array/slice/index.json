{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Array.prototype.slice()","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/slice","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/@@species\"><code>get Array[@@species]</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/@@unscopables\"><code>Array.prototype[@@unscopables]</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/length\"><code>Array.prototype.length</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator\"><code>Array.prototype[@@iterator]()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/at\"><code>Array.prototype.at()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"><code>Array.prototype.concat()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\"><code>Array.prototype.copyWithin()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\"><code>Array.prototype.entries()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.prototype.every()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"><code>Array.prototype.fill()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array.prototype.filter()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"><code>Array.prototype.find()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\"><code>Array.prototype.findIndex()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast\"><code>Array.prototype.findLast()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex\"><code>Array.prototype.findLastIndex()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\"><code>Array.prototype.flat()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap\"><code>Array.prototype.flatMap()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/group\"><code>Array.prototype.group()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/groupToMap\"><code>Array.prototype.groupToMap()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\"><code>Array.prototype.includes()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>Array.prototype.indexOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\"><code>Array.isArray()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"><code>Array.prototype.join()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/keys\"><code>Array.prototype.keys()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\"><code>Array.prototype.lastIndexOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/of\"><code>Array.of()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\"><code>Array.prototype.pop()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/push\"><code>Array.prototype.push()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>Array.prototype.reduce()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight\"><code>Array.prototype.reduceRight()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\"><code>Array.prototype.reverse()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\"><code>Array.prototype.shift()</code></a></li><li><em><code>Array.prototype.slice()</code></em></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"><code>Array.prototype.some()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"><code>Array.prototype.sort()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.prototype.splice()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/toLocaleString\"><code>Array.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/toString\"><code>Array.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift\"><code>Array.prototype.unshift()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/values\"><code>Array.prototype.values()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>slice()</code></strong> メソッドは、配列の一部を <code>start</code> から <code>end</code> （<code>end</code> は含まれない）までの範囲で、選択した新しい配列オブジェクトに<a href=\"/ja/docs/Glossary/Shallow_copy\">シャローコピー</a>して返します。ここで <code>start</code> と <code>end</code> はその配列に含まれる項目の添字を表します。元の配列は変更されません。</p><iframe class=\"interactive\" height=\"692\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/array-slice.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span>\n<span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"start\"><code>start</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>取り出しの開始位置を示す 0 から始まる位置です。</p>\n    <p>負の位置を使って、列の末尾からのオフセットを指定することができます。<code>slice(-2)</code> は列の最後の 2 つの要素を取り出します。</p>\n    <p><code>start</code> が指定されなかった場合、 <code>slice</code> は位置 <code>0</code> から開始します。</p>\n    <p><code>start</code> が列の位置の範囲よりも大きい場合は、空の配列が返されます。</p>\n  </dd>\n  <dt id=\"end\"><code>end</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>返される配列から除外される最初の要素の位置です。 <code>slice</code> は <code>end</code> 自体は含めず、その直前まで取り出します。例えば、 <code>slice(1,4)</code> は 2 番目から 4 番目までの要素 (位置がそれぞれ 1, 2, 3 番目の要素) を取り出します。</p>\n    <p>負の位置を使って、列の終わりからのオフセットとして指定することができます。 <code>slice(2,-1)</code> は列の 3 番目から、最後から 2 番目までの要素を取り出します。</p>\n    <p><code>end</code> が省略された場合、 <code>slice</code> は列の最後 (<code>arr.length</code>) までを取り出します。</p>\n    <p><code>end</code> がシーケンスの長さを超えた場合も、<code>slice</code> はシーケンスの最後 (<code>arr.length</code>) までを取り出します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>取り出された要素を含む新しい配列です。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p><code>slice</code> は元の配列を変更せず、元の配列から要素を<a href=\"/ja/docs/Glossary/Shallow_copy\">シャローコピー</a>した新しい配列を返します。元の配列の要素は以下のように返される配列にコピーされます。</p>\n<ul>\n  <li>(実際のオブジェクトではない) オブジェクトの参照については、<code>slice</code> はオブジェクトの参照を新しい配列にコピーします。元の配列も新しい配列も同じオブジェクトを参照します。参照されたオブジェクトが修正された場合、その変更は新しい配列と元の配列の両方に現れます。</li>\n  <li>(<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>, <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a>, <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> オブジェクトではなく) 文字列、数値、論理値では、<code>slice</code> は値を新しい配列にコピーします。一方の配列の文字列や数値に変更を加えても、他の配列に影響はしません。</li>\n</ul>\n<p>一方の配列に新しい要素が追加されても、他方の配列に影響はしません。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"既存の配列の一部を返す","title":"既存の配列の一部を返す","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lemon'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mango'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> citrus <span class=\"token operator\">=</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// fruits contains ['Banana', 'Orange', 'Lemon', 'Apple', 'Mango']</span>\n<span class=\"token comment\">// citrus contains ['Orange','Lemon']</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"slice_の使用","title":"slice の使用","isH3":true,"content":"<p>以下の例で、<code>slice</code> は新しい配列 <code>newCar</code> を <code>myCar</code> から生成します。両者ともオブジェクト <code>myHonda</code> への参照を含んでいます。<code>myHonda</code> の色が purple に変更されると、両方の要素がその変更を反映します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// slice を使って、myCar から newCar を生成する。</span>\n<span class=\"token keyword\">const</span> myHonda <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">wheels</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">engine</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cylinders</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token number\">2.2</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> myCar <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>myHonda<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cherry condition'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'purchased 1997'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> newCar <span class=\"token operator\">=</span> myCar<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// myCar, newCar と両方の要素から参照されている myHonda の color の</span>\n<span class=\"token comment\">//  値を書きだす。</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myCar = '</span><span class=\"token punctuation\">,</span> myCar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newCar = '</span><span class=\"token punctuation\">,</span> newCar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myCar[0].color = '</span><span class=\"token punctuation\">,</span> myCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newCar[0].color = '</span><span class=\"token punctuation\">,</span> newCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// myHonda の色を変える。</span>\nmyHonda<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">'purple'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The new color of my Honda is '</span><span class=\"token punctuation\">,</span> myHonda<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 両方の要素から参照されている myHonda の color を書き出す。</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myCar[0].color = '</span><span class=\"token punctuation\">,</span> myCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newCar[0].color = '</span><span class=\"token punctuation\">,</span> newCar<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このスクリプトの出力は次の様になります。</p>\n<pre class=\"notranslate\">myCar = [\n  { color: 'red', wheels: 4, engine: { cylinders: 4, size: 2.2 } },\n  2,\n  'cherry condition',\n  'purchased 1997'\n]\nnewCar = [{color: 'red', wheels: 4, engine: {cylinders: 4, size: 2.2}}, 2]\nmyCar[0].color = red\nnewCar[0].color = red\nThe new color of my Honda is purple\nmyCar[0].color = purple\nnewCar[0].color = purple\n</pre>"}},{"type":"prose","value":{"id":"配列風オブジェクト","title":"配列風オブジェクト","isH3":true,"content":"<p><code>slice</code> メソッドを呼び出すことで、配列風オブジェクトやコレクションを新しい配列に変換することができます。メソッドをオブジェクトに <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>bind</code></a> するだけです。配列風オブジェクトの一例として、<a href=\"/ja/docs/Web/JavaScript/Reference/Functions/arguments\"><code>arguments</code></a> が挙げられます。以下に例を示します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> list1 <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 3]</span>\n</code></pre></div>\n<p>結合 (Binding) は <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a> の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>call()</code></a> メソッドを用いて行うことができますし、<code>[].slice.call(arguments)</code> を <code>Array.prototype.slice.call</code> の代わりに使って減らすこともできます。</p>\n<p>いずれにせよ、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>bind</code></a> を使用することで簡略化することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> unboundSlice <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>slice<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> slice <span class=\"token operator\">=</span> <span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>unboundSlice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> list1 <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 2, 3]</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.slice","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Array.slice"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.Array.slice","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/slice/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.prototype.splice()</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"解説","id":"解説"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"slice() メソッドは、配列の一部を start から end （end は含まれない）までの範囲で、選択した新しい配列オブジェクトにシャローコピーして返します。ここで start と end はその配列に含まれる項目の添字を表します。元の配列は変更されません。","popularity":0.0053,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Array.prototype.slice()","locale":"en-US","native":"English (US)"},{"title":"Array.prototype.slice()","locale":"es","native":"Español"},{"title":"Array.prototype.slice()","locale":"fr","native":"Français"},{"title":"Array.prototype.slice()","locale":"ko","native":"한국어"},{"title":"Array.prototype.slice()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Array.prototype.slice()","locale":"ru","native":"Русский"},{"title":"Array.prototype.slice()","locale":"zh-CN","native":"中文 (简体)"},{"title":"Array.prototype.slice()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/array/slice","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/array/slice/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array","title":"Array"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/slice","title":"Array.prototype.slice()"}],"pageTitle":"Array.prototype.slice() - JavaScript | MDN","noIndexing":false}}