{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"TypedArray","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>TypedArray</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@species\"><code>get TypedArray[@@species]</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/buffer\"><code>TypedArray.prototype.buffer</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteLength\"><code>TypedArray.prototype.byteLength</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteOffset\"><code>TypedArray.prototype.byteOffset</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/BYTES_PER_ELEMENT\"><code>TypedArray.BYTES_PER_ELEMENT</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/length\"><code>TypedArray.prototype.length</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/name\"><code>TypedArray.name</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@iterator\"><code>TypedArray.prototype[@@iterator]()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/at\"><code>TypedArray.prototype.at()</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/copyWithin\"><code>TypedArray.prototype.copyWithin()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/entries\"><code>TypedArray.prototype.entries()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/every\"><code>TypedArray.prototype.every()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/fill\"><code>TypedArray.prototype.fill()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/filter\"><code>TypedArray.prototype.filter()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/find\"><code>TypedArray.prototype.find()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findIndex\"><code>TypedArray.prototype.findIndex()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findLast\"><code>TypedArray.prototype.findLast()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findLastIndex\"><code>TypedArray.prototype.findLastIndex()</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/forEach\"><code>TypedArray.prototype.forEach()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/from\"><code>TypedArray.from()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/includes\"><code>TypedArray.prototype.includes()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/indexOf\"><code>TypedArray.prototype.indexOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/join\"><code>TypedArray.prototype.join()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/keys\"><code>TypedArray.prototype.keys()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/lastIndexOf\"><code>TypedArray.prototype.lastIndexOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/map\"><code>TypedArray.prototype.map()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/of\"><code>TypedArray.of()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduce\"><code>TypedArray.prototype.reduce()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduceRight\"><code>TypedArray.prototype.reduceRight()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reverse\"><code>TypedArray.prototype.reverse()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set\"><code>TypedArray.prototype.set()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice\"><code>TypedArray.prototype.slice()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/some\"><code>TypedArray.prototype.some()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/sort\"><code>TypedArray.prototype.sort()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray\"><code>TypedArray.prototype.subarray()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/toLocaleString\"><code>TypedArray.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/toString\"><code>TypedArray.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/values\"><code>TypedArray.prototype.values()</code></a></li></ol></li><li><strong>関連するページ</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\"><code>Int16Array</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\"><code>Float64Array</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\"><code>BigUint64Array</code></a></strong></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><em>TypedArray</em></strong> オブジェクトは、背後にある<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">バイナリーデータバッファー</a>の、配列状のビューを表します。 <code>TypedArray</code> という名称のグローバルプロパティはなく、また直接 <code>TypedArray</code> コンストラクターが見えるわけではありません。代わりに、さまざまなグローバルプロパティがあり、それらの値は後述するように特定の要素の型における型付き配列のコンストラクターになります。下記のページで、それぞれの要素を持つ片引き配列で使用できる共通のプロパティやメソッドを確認できます。</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/typedarray-constructor.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p>ECMAScript 2015 では <code>TypedArray</code> コンストラクターを、すべての <code>TypedArray</code> コンストラクターの <code>[[Prototype]]</code> として定義しています。このコンストラクターは直接公開されてはいません。グローバルな <code>%TypedArray%</code> または <code>TypedArray</code> プロパティは存在しません。<code>Object.getPrototypeOf(Int8Array)</code> などの形式でのみ直接アクセスできます。すべての <code>TypedArray</code> 系コンストラクターは、共通のプロパティを <code>%TypedArray%</code> コンストラクター関数から継承します。またすべての型付き配列のプロトタイプ (<code>TypedArray.prototype</code>) は、自身の <code>[[Prototype]]</code> として <code>%TypedArray%.prototype</code> を持ちます。</p>\n<p><code>%TypedArray%</code> コンストラクター自体は、特に役立つものではありません。サブクラス化をサポートする JS エンジンでオブジェクトを生成する際に使用する場合を除き、コンストラクターを呼び出すか <code>new</code> 構文を使用すると <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> が発生します。現在はそのようなエンジンがありませんので、<code>%TypedArray%</code> はすべての <code>TypedArray</code> コンストラクターへのポリフィル関数およびプロパティとしてのみ有用です。</p>\n<p><code>TypedArray</code> のインスタンス (すなわち <code>Int8Array</code> などのインスタンス) を生成するとき、配列バッファーはメモリーの内部に生成されます (コンストラクターの引数として <code>ArrayBuffer</code> オブジェクトが提供されて、配列バッファーによって使用される場合)。また、このバッファーのアドレスはインスタンスの内部プロパティとして保存され、 <code>%TypedArray%.prototype</code> のすべてのメソッドは、値の設定や取得などの操作で配列バッファーのアドレスを使用します。</p>"}},{"type":"prose","value":{"id":"typedarray_オブジェクト","title":"TypedArray オブジェクト","isH3":true,"content":"<table>\n  <thead>\n    <tr>\n      <th>型</th>\n      <th>値の範囲</th>\n      <th>サイズ (バイト数)</th>\n      <th>説明</th>\n      <th>Web IDL 型</th>\n      <th>同等の C 型</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a></td>\n      <td><code>-128</code> ～ <code>127</code></td>\n      <td>1</td>\n      <td>8 ビット長、2 の補数方式の符号付き整数値</td>\n      <td><code>byte</code></td>\n      <td><code>int8_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a></td>\n      <td><code>0</code> ～ <code>255</code></td>\n      <td>1</td>\n      <td>8 ビット長、符号なし整数値</td>\n      <td><code>octet</code></td>\n      <td><code>uint8_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a></td>\n      <td><code>0</code> ～ <code>255</code></td>\n      <td>1</td>\n      <td>8 ビット長、符号なし整数値 (切り詰め)</td>\n      <td><code>octet</code></td>\n      <td><code>uint8_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\"><code>Int16Array</code></a></td>\n      <td><code>-32768</code> ～ <code>32767</code></td>\n      <td>2</td>\n      <td>16 ビット長、2 の補数方式の符号付き整数値</td>\n      <td><code>short</code></td>\n      <td><code>int16_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a></td>\n      <td><code>0</code> ～ <code>65535</code></td>\n      <td>2</td>\n      <td>16 ビット長、符号なし整数値</td>\n      <td><code>unsigned short</code></td>\n      <td><code>uint16_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a></td>\n      <td><code>-2147483648</code> ～ <code>2147483647</code></td>\n      <td>4</td>\n      <td>32 ビット長、2 の補数方式の符号付き整数値</td>\n      <td><code>long</code></td>\n      <td><code>int32_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a></td>\n      <td><code>0</code> ～ <code>4294967295</code></td>\n      <td>4</td>\n      <td>32 ビット長、符号なし整数値</td>\n      <td><code>unsigned long</code></td>\n      <td><code>uint32_t</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a></td>\n      <td><code>1.2</code>×<code>10-38</code> ～ <code>3.4</code>×<code>1038</code></td>\n      <td>4</td>\n      <td>32 ビット長 IEEE 方式 浮動小数点数 (有効桁数 7 桁、例えば <code>1.234567</code>)</td>\n      <td><code>unrestricted float</code></td>\n      <td><code>float</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\"><code>Float64Array</code></a></td>\n      <td><code>5.0</code>×<code>10-324</code> ～ <code>1.8</code>×<code>10308</code></td>\n      <td>8</td>\n      <td>64 ビット長 IEEE 方式 浮動小数点数 (有効桁数 16 桁、例えば<code>1.23456789012345</code>)</td>\n      <td><code>unrestricted double</code></td>\n      <td><code>double</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a></td>\n      <td><code>-263</code> ～ <code>263-1</code></td>\n      <td>8</td>\n      <td>64 ビット長、2 の補数方式の符号付き整数値</td>\n      <td><code>bigint</code></td>\n      <td><code>int64_t (signed long long)</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\"><code>BigUint64Array</code></a></td>\n      <td><code>0</code> ～ <code>264-1</code></td>\n      <td>8</td>\n      <td>64 ビット長、符号なし整数値</td>\n      <td><code>bigint</code></td>\n      <td><code>uint64_t (unsigned long long)</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"コンストラクター","title":"コンストラクター","isH3":false,"content":"<p>このオブジェクトは直接インスタンス化することはできません。その代わりに、特定の方の配列、例えば <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\"><code>Int8Array</code></a> や <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\"><code>BigInt64Array</code></a> のインスタンスを生成することができます。これらのオブジェクトのコンストラクターの構文はすべて共通です。</p>\n<pre class=\"notranslate\">new TypedArray();\nnew TypedArray(length);\nnew TypedArray(typedArray);\nnew TypedArray(object);\nnew TypedArray(buffer [, byteOffset [, length]]);\n</pre>\n<p>ここで <em>TypedArray</em> は特定の型のコンストラクターのうちの一つを表します。</p>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"length\"><code>length</code></dt>\n  <dd>\n    <p>引数 <code>length</code> を付加して呼び出すと、<em>length に BYTES_PER_ELEMENT を掛けた値</em> のバイト数の、値 0 を持つ内部配列バッファーをメモリー内に生成します。</p>\n  </dd>\n  <dt id=\"typedarray\"><code>typedArray</code></dt>\n  <dd>\n    <p><code>typedArray</code> 引数で、任意の型付き配列型 (<code>Int32Array</code> など) のオブジェクトを示す引数を渡して呼び出すと、<code>typedArray</code> を新たな型付き配列にコピーします。<code>typedArray</code> 内の各値は、新しい配列へコピーされる前に対応する型へ変換されます。新しい型付き配列オブジェクトの長さは、引数 <code>typedArray</code> の長さと同じです。</p>\n  </dd>\n  <dt id=\"object\"><code>object</code></dt>\n  <dd>\n    <p>引数 <code>object</code> を付加して呼び出すと、<code>TypedArray.from()</code> メソッドを使用したかのように新たな型付き配列を生成します。</p>\n  </dd>\n  <dt id=\"buffer\"><code>buffer</code>, <code>byteOffset</code>, <code>length</code></dt>\n  <dd>\n    <p>引数 <code>buffer</code>, <code>byteOffset</code> (省略可), <code>length</code> (省略可) を付加して呼び出すと、指定した <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> のビューになる新たな型付き配列を生成します。引数 <code>byteOffset</code> および <code>length</code> は、型付き配列ビューで公開するメモリー範囲を指定します。両方とも省略すると、<code>buffer</code> のすべてを公開します。<code>length</code> のみ省略すると、<code>buffer</code> の残りの部分を公開します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"静的プロパティ","title":"静的プロパティ","isH3":false,"content":"<dl>\n  <dt id=\"typedarray.bytes_per_element\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/BYTES_PER_ELEMENT\"><code>TypedArray.BYTES_PER_ELEMENT</code></a></dt>\n  <dd>\n    <p>さまざまな <code>TypedArray</code> オブジェクトの要素のサイズを数値で返します。</p>\n  </dd>\n  <dt id=\"typedarray.name\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/name\"><code>TypedArray.name</code></a></dt>\n  <dd>\n    <p>コンストラクター名を文字列値で返します (例: \"<code>Int8Array</code>\")。</p>\n  </dd>\n  <dt id=\"get_typedarrayspecies\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@species\"><code>get TypedArray[@@species]</code></a></dt>\n  <dd>\n    <p>派生オブジェクトを生成するために使用するコンストラクター関数です。</p>\n  </dd>\n  <dt id=\"typedarray.prototype\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\" aria-current=\"page\"><code>TypedArray.prototype</code></a></dt>\n  <dd>\n    <p><code>TypedArray</code> オブジェクトのプロトタイプです。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"静的メソッド","title":"静的メソッド","isH3":false,"content":"<dl>\n  <dt id=\"typedarray.from\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/from\"><code>TypedArray.from()</code></a></dt>\n  <dd>\n    <p>配列状のオブジェクトや反復可能なオブジェクトから、新たな <code>TypedArray</code> を生成します。<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a> もご覧ください。</p>\n  </dd>\n  <dt id=\"typedarray.of\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/of\"><code>TypedArray.of()</code></a></dt>\n  <dd>\n    <p>引数に与えた値をもとに、新たな <code>TypedArray</code> を生成します。<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/of\"><code>Array.of()</code></a> もご覧ください。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"インスタンスプロパティ","title":"インスタンスプロパティ","isH3":false,"content":"<dl>\n  <dt id=\"typedarray.prototype.buffer\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/buffer\"><code>TypedArray.prototype.buffer</code></a></dt>\n  <dd>\n    <p>この型付き配列によって参照さている <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> を返します。構築時に設定され、<strong>読取専用</strong>です。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.bytelength\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteLength\"><code>TypedArray.prototype.byteLength</code></a></dt>\n  <dd>\n    <p>型付き配列の長さを (バイト単位で) 返します。構築時に設定され、<strong>読取専用</strong>です。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.byteoffset\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteOffset\"><code>TypedArray.prototype.byteOffset</code></a></dt>\n  <dd>\n    <p>型付き配列の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> の先頭からのオフセットを (バイト単位で) 返します。構築時に設定され、<strong>読取専用</strong>です。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.length\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/length\"><code>TypedArray.prototype.length</code></a></dt>\n  <dd>\n    <p>型付き配列内に保持された要素の数を返します。構築時に設定され、<strong>読取専用</strong>です。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"インスタンスメソッド","title":"インスタンスメソッド","isH3":false,"content":"<dl>\n  <dt id=\"typedarray.prototype.copywithin\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/copyWithin\"><code>TypedArray.prototype.copyWithin()</code></a></dt>\n  <dd>\n    <p>配列内で一連の配列要素をコピーします。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\"><code>Array.prototype.copyWithin()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.entries\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/entries\"><code>TypedArray.prototype.entries()</code></a></dt>\n  <dd>\n    <p>配列内のすべての位置に対するキー／値の組を含む、新しい配列イテレーターを返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\"><code>Array.prototype.entries()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.every\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/every\"><code>TypedArray.prototype.every()</code></a></dt>\n  <dd>\n    <p>配列内のすべての要素が関数によって提供されたテストに合格するかどうかテストを実行します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/every\"><code>Array.prototype.every()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.fill\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/fill\"><code>TypedArray.prototype.fill()</code></a></dt>\n  <dd>\n    <p>開始位置から終了位置までのすべての要素に固定値を設定します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\"><code>Array.prototype.fill()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.filter\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/filter\"><code>TypedArray.prototype.filter()</code></a></dt>\n  <dd>\n    <p>与えられたフィルタリング関数が <code>true</code> を返す配列のすべての要素をもつ新しい配列を生成します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\"><code>Array.prototype.filter()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.find\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/find\"><code>TypedArray.prototype.find()</code></a></dt>\n  <dd>\n    <p>配列要素が与えられたテスト関数を満足したら、配列の値を返します。満足しなかった場合、 <code>undefined</code> を返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/find\"><code>Array.prototype.find()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.findindex\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findIndex\"><code>TypedArray.prototype.findIndex()</code></a></dt>\n  <dd>\n    <p>配列要素が与えられたテスト関数を満足したら、配列のインデックスを返します。満足しなかった場合は <code>-1</code> を返します。<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\"><code>Array.prototype.findIndex()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.foreach\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/forEach\"><code>TypedArray.prototype.forEach()</code></a></dt>\n  <dd>\n    <p>配列内の各要素に対する関数を呼び出します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>Array.prototype.forEach()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.includes\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/includes\"><code>TypedArray.prototype.includes()</code></a></dt>\n  <dd>\n    <p>型付き配列にある要素が含まれているかどうか判断し、それに応じて <code>true</code> または <code>false</code> を返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\"><code>Array.prototype.includes()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.indexof\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/indexOf\"><code>TypedArray.prototype.indexOf()</code></a></dt>\n  <dd>\n    <p>指定された値に等しい配列内の要素の最初の位置を返します。見つからなかった場合は <code>-1</code> を返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>Array.prototype.indexOf()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.join\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/join\"><code>TypedArray.prototype.join()</code></a></dt>\n  <dd>\n    <p>すべての配列要素を 1 つの文字列に結合します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/join\"><code>Array.prototype.join()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.keys\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/keys\"><code>TypedArray.prototype.keys()</code></a></dt>\n  <dd>\n    <p>配列内のそれぞれの位置に対するキーを含む新しい配列イテレーターを返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/keys\"><code>Array.prototype.keys()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.lastindexof\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/lastIndexOf\"><code>TypedArray.prototype.lastIndexOf()</code></a></dt>\n  <dd>\n    <p>指定された値と等しい配列の要素の最後の位置を返します。見つからない場合は <code>-1</code> を返します。<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf\"><code>Array.prototype.lastIndexOf()</code></a>を確かめて下さい。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.map\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/map\"><code>TypedArray.prototype.map()</code></a></dt>\n  <dd>\n    <p>この配列のすべての要素で与えられた関数を呼び出した結果をもつ新しい配列を生成します。<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.reduce\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduce\"><code>TypedArray.prototype.reduce()</code></a></dt>\n  <dd>\n    <p>アキュームレーターと配列のそれぞれの値 (左から右へ) に対して関数を適用し、単一の値にまで縮小します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>Array.prototype.reduce()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.reduceright\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduceRight\"><code>TypedArray.prototype.reduceRight()</code></a></dt>\n  <dd>\n    <p>アキュームレーターと配列のそれぞれの値 (右から左へ) に対して関数を適用し、単一の値にまで縮小します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>Array.prototype.reduce()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.reverse\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reverse\"><code>TypedArray.prototype.reverse()</code></a></dt>\n  <dd>\n    <p>配列要素の順番を反転させます。 — 最初の要素は最後になり、最後の要素は最初になります。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\"><code>Array.prototype.reverse()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.set\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set\"><code>TypedArray.prototype.set()</code></a></dt>\n  <dd>\n    <p>入力値を指定した配列から読み込み、型付き配列内に複数の値を格納します。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.slice\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice\"><code>TypedArray.prototype.slice()</code></a></dt>\n  <dd>\n    <p>配列の一部を取り出して新しい配列を返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>Array.prototype.slice()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.some\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/some\"><code>TypedArray.prototype.some()</code></a></dt>\n  <dd>\n    <p>ある配列の少なくとも 1 つの要素が与えられたテスト関数を満たした場合に <code>true</code> を返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/some\"><code>Array.prototype.some()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.sort\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/sort\"><code>TypedArray.prototype.sort()</code></a></dt>\n  <dd>\n    <p>配列の要素をソートし、その結果を返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\"><code>Array.prototype.sort()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.subarray\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray\"><code>TypedArray.prototype.subarray()</code></a></dt>\n  <dd>\n    <p>与えられた開始位置と終了位置の要素インデックスから、新しい <code>TypedArray</code> を返します。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.values\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/values\"><code>TypedArray.prototype.values()</code></a></dt>\n  <dd>\n    <p>配列内のそれぞれの位置に対する値を含む新しい配列イテレーターオブジェクトを返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/values\"><code>Array.prototype.values()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.tolocalestring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/toLocaleString\"><code>TypedArray.prototype.toLocaleString()</code></a></dt>\n  <dd>\n    <p>配列と要素を表すローカライズされた文字列を返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/toLocaleString\"><code>Array.prototype.toLocaleString()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototype.tostring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/toString\"><code>TypedArray.prototype.toString()</code></a></dt>\n  <dd>\n    <p>配列と要素を表す文字列を返します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/toString\"><code>Array.prototype.toString()</code></a> も参照してください。</p>\n  </dd>\n  <dt id=\"typedarray.prototypeiterator\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@iterator\"><code>TypedArray.prototype[@@iterator]()</code></a></dt>\n  <dd>\n    <p>配列内でそれぞれの位置に対する値を含む新しい配列イテレーターオブジェクトを返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"new_が必須","title":"new が必須","isH3":true,"content":"<p>ECMAScript 2015 より、 <code>TypedArray</code> コンストラクターは <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a> 演算子を付けて構築する必要があります。 <code>TypedArray</code> コンストラクターを <code>new</code> のない関数として呼び出すと、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> が発生します。</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token keyword\">var</span> dv <span class=\"token operator\">=</span> <span class=\"token function\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TypeError: calling a builtin Int8Array constructor</span>\n<span class=\"token comment\">// without new is forbidden</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js example-good notranslate\"><code><span class=\"token keyword\">var</span> dv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"プロパティへのアクセス","title":"プロパティへのアクセス","isH3":true,"content":"<p>配列内の要素は、標準の配列の添字構文 (すなわち、かぎ括弧を使用する表記) を使用して参照することができます。しかし、型付き配列で添字付きプロパティで取得または設定するときは、範囲外の添字でもプロパティのプロトタイプチェーンを探索しません。添字付きプロパティは <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> を調べるのであり、オブジェクトのプロパティは探索しません。他のオブジェクト同様に、名前付きプロパティは使用できます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 標準的な配列構文を使用して設定および取得</span>\n<span class=\"token keyword\">var</span> int16 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int16Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nint16<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>int16<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\n\n<span class=\"token comment\">// プロトタイプで添字付き配列を使用しても探索しない (Fx 25)</span>\n<span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n<span class=\"token comment\">// even when out of bound</span>\n<span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n<span class=\"token comment\">// or with negative integers</span>\n<span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n\n<span class=\"token comment\">// Named properties are allowed, though (Fx 30)</span>\n<span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Int8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"bar\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma262/#sec-typedarray-objects\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript (ECMA-262)<br><small lang=\"ja\">TypedArray Objects の定義</small></a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.TypedArray","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Typed_arrays\">JavaScript の型付き配列</a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/TextDecoder\">TextDecoder</a> — 数値データから文字列をデコードするヘルパー</li>\n</ul>"}}],"toc":[{"text":"解説","id":"解説"},{"text":"コンストラクター","id":"コンストラクター"},{"text":"静的プロパティ","id":"静的プロパティ"},{"text":"静的メソッド","id":"静的メソッド"},{"text":"インスタンスプロパティ","id":"インスタンスプロパティ"},{"text":"インスタンスメソッド","id":"インスタンスメソッド"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"TypedArray オブジェクトは、背後にあるバイナリーデータバッファーの、配列状のビューを表します。 TypedArray という名称のグローバルプロパティはなく、また直接 TypedArray コンストラクターが見えるわけではありません。代わりに、さまざまなグローバルプロパティがあり、それらの値は後述するように特定の要素の型における型付き配列のコンストラクターになります。下記のページで、それぞれの要素を持つ片引き配列で使用できる共通のプロパティやメソッドを確認できます。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"TypedArray","locale":"en-US","native":"English (US)"},{"title":"TypedArray","locale":"es","native":"Español"},{"title":"TypedArray","locale":"fr","native":"Français"},{"title":"TypedArray","locale":"ko","native":"한국어"},{"title":"TypedArray","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"TypedArray","locale":"ru","native":"Русский"},{"title":"ArrayBufferView","locale":"zh-CN","native":"中文 (简体)"},{"title":"TypedArray","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/typedarray","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/typedarray/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray","title":"TypedArray"}],"pageTitle":"TypedArray - JavaScript | MDN","noIndexing":false}}