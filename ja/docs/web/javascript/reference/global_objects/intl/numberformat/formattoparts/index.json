{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Intl.NumberFormat.prototype.formatToParts()","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/formatToParts","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl\"><code>Intl</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/@@toStringTag\"><code>Intl[@@toStringTag]</code> <small>(en-US)</small></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/getCanonicalLocales\"><code>Intl.getCanonicalLocales()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/supportedValuesOf\"><code>Intl.supportedValuesOf()</code> <small>(en-US)</small></a></li></ol></li><li><strong>関連するページ</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator\"><code>Intl.Collator</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\"><code>Intl.DateTimeFormat</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat\"><code>Intl.ListFormat</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\"><code>Intl.NumberFormat</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/PluralRules\"><code>Intl.PluralRules</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\"><code>Intl.RelativeTimeFormat</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter\"><code>Intl.Segmenter</code></a></strong></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Intl.Numberformat.prototype.formatToParts()</code></strong> メソッドは <code>NumberFormat</code> フォーマッターによって生成された文字列のロケールに応じた書式設定を可能にします。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">Intl.NumberFormat.prototype.formatToParts(number)\n</pre>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"number\"><code>number</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>書式化する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> または <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>書式化された数値を含む要素のオブジェクトの <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p><code>formatToParts()</code> メソッドは、数値文字列のカスタム書式設定を行うときに便利です。ロケール固有のトークンを含むオブジェクトの <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> を返します。その <code>formatToParts()</code> メソッドが返す構造体は、次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"group\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\"500\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>可能なタイプは以下のとおりです。</p>\n<dl>\n  <dt id=\"currency\">currency</dt>\n  <dd>\n    <p>通貨の文字列です。 \"$\" や \"€\" のような記号または \"Dollar\", \"Euro\" の文字列です。これらの文字列は <code>currencyDisplay</code> の特定方法に依存します。</p>\n  </dd>\n  <dt id=\"decimal\">decimal</dt>\n  <dd>\n    <p>小数点区切り文字 (\".\")。</p>\n  </dd>\n  <dt id=\"fraction\">fraction</dt>\n  <dd>\n    <p>小数点以下の数値。</p>\n  </dd>\n  <dt id=\"group\">group</dt>\n  <dd>\n    <p>グループ区切り文字 (\",\")。</p>\n  </dd>\n  <dt id=\"infinity\">infinity</dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a> 文字列 (\"∞\")。</p>\n  </dd>\n  <dt id=\"integer\">integer</dt>\n  <dd>\n    <p>整数。</p>\n  </dd>\n  <dt id=\"literal\">literal</dt>\n  <dd>\n    <p>書式設定された数字のリテラル文字列または空白。</p>\n  </dd>\n  <dt id=\"minussign\">minusSign</dt>\n  <dd>\n    <p>マイナス記号の文字列 (\"-\")。</p>\n  </dd>\n  <dt id=\"nan\">nan</dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a> の文字列 (\"NaN\")。</p>\n  </dd>\n  <dt id=\"plussign\">plusSign</dt>\n  <dd>\n    <p>プラス記号の文字列 (\"+\")。</p>\n  </dd>\n</dl><!---->\n<dl>\n  <dt id=\"percentsign\">percentSign</dt>\n  <dd>\n    <p>パーセント文字列 (\"%\")。</p>\n  </dd>\n  <dt id=\"unit\">unit</dt>\n  <dd>\n    <p>単位の文字列、例えば \"l\" または \"litres\" で、 <code>unitDisplay</code> がどのように指定されているかに依存します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"format_と_formattoparts_の比較","title":"format と formatToParts の比較","isH3":true,"content":"<p><code>NumberFormat</code> はローカライズされた、直接操作できない文字列を出力します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> number <span class=\"token operator\">=</span> <span class=\"token number\">3500</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> formatter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>NumberFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'de-DE'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> <span class=\"token string\">'currency'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">currency</span><span class=\"token operator\">:</span> <span class=\"token string\">'EUR'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nformatter<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// \"3.500,00 €\"</span>\n</code></pre></div>\n<p>しかし、多くのユーザーインターフェースでは、この文字列の書式形式をカスタマイズしたいと要望があります。 <code>formatToParts</code> メソッドは <code>NumberFormat</code> フォーマッターによって生成された文字列を要素ごとの文字列として提供することでロケールに応じた書式設定を可能にします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>formatter<span class=\"token punctuation\">.</span><span class=\"token function\">formatToParts</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 返値:</span>\n<span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span><span class=\"token punctuation\">,</span>  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span>   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"group\"</span><span class=\"token punctuation\">,</span>    <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span>   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integer\"</span><span class=\"token punctuation\">,</span>  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\"500\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"decimal\"</span><span class=\"token punctuation\">,</span>  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\",\"</span>   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fraction\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"literal\"</span><span class=\"token punctuation\">,</span>  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\" \"</span>   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"currency\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\"€\"</span>   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>これで情報は個別に利用可能となり、カスタマイズされた方法でフォーマットして連結することができます。例えば <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>Array.prototype.map()</code></a>, <a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">アロー関数</a>, <a href=\"/ja/docs/Web/JavaScript/Reference/Statements/switch\">switch 文</a>, <a href=\"/ja/docs/Web/JavaScript/Reference/Template_literals\">テンプレートリテラル</a>, <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>Array.prototype.reduce()</code></a> を使います。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> numberString <span class=\"token operator\">=</span> formatter<span class=\"token punctuation\">.</span><span class=\"token function\">formatToParts</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'currency'</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;strong&gt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/strong&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">string<span class=\"token punctuation\">,</span> part</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> string <span class=\"token operator\">+</span> part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>上記は<code>formatToParts()</code>メソッドを使い、通貨を太字にします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>numberString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// \"3.500,00 &lt;strong&gt;€&lt;/strong&gt;\"</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma402/#sec-intl.numberformat.prototype.formattoparts\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript Internationalization API (ECMA-402)<br><small lang=\"ja\">Intl.NumberFormat.prototype.formatToParts の定義</small></a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.Intl.NumberFormat.formatToParts","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/formatToParts/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\"><code>Intl.NumberFormat</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/format\"><code>Intl.NumberFormat.prototype.format</code></a></li>\n  <li>日付の書式化: <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/formatToParts\"><code>Intl.DateTimeFormat.prototype.formatToParts()</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"解説","id":"解説"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Intl.Numberformat.prototype.formatToParts() メソッドは NumberFormat フォーマッターによって生成された文字列のロケールに応じた書式設定を可能にします。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Intl.NumberFormat.prototype.formatToParts()","locale":"en-US","native":"English (US)"},{"title":"Intl.NumberFormat.prototype.formatToParts()","locale":"fr","native":"Français"}],"source":{"folder":"ja/web/javascript/reference/global_objects/intl/numberformat/formattoparts","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/intl/numberformat/formattoparts/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl","title":"Intl"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat","title":"Intl.NumberFormat"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/formatToParts","title":"Intl.NumberFormat.prototype.formatToParts()"}],"pageTitle":"Intl.NumberFormat.prototype.formatToParts() - JavaScript | MDN","noIndexing":false}}