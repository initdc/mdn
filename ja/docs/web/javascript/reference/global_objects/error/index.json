{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Error","mdn_url":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error\"><code>Error</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\"><code>Error.prototype.cause</code> <small>(en-US)</small></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/columnNumber\"><code>Error.prototype.columnNumber</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/fileName\"><code>Error.prototype.fileName</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/lineNumber\"><code>Error.prototype.lineNumber</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/message\"><code>Error.prototype.message</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/name\"><code>Error.prototype.name</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack\"><code>Error.prototype.stack</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/toString\"><code>Error.prototype.toString()</code></a></li></ol></li><li><strong>関連するページ</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/EvalError\"><code>EvalError</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/InternalError\"><code>InternalError</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RangeError\"><code>RangeError</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\"><code>ReferenceError</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/URIError\"><code>URIError</code></a></strong></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>Error</code> オブジェクトは、実行時エラーが発生した時に発生します。 <code>Error</code> オブジェクトは、ユーザー定義の例外の基底オブジェクトとして使用することもできます。標準の組み込みエラー型については下記を参照してください。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p>実行時エラーが発生すると、新しい <code>Error</code> オブジェクトが生成されスローされます。</p>"}},{"type":"prose","value":{"id":"エラーの型","title":"エラーの型","isH3":true,"content":"<p>JavaScript には、一般的な <code>Error</code> コンストラクターの他に、中核となる 7 つのエラーコンストラクターがあります。クライアント側の例外については、<a href=\"/ja/docs/Web/JavaScript/Guide/Control_flow_and_error_handling#exception_handling_statements\">例外処理文</a>を参照してください。</p>\n<dl>\n  <dt id=\"evalerror\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/EvalError\"><code>EvalError</code></a></dt>\n  <dd>\n    <p>グローバル関数 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a> に関して発生するエラーを表すインスタンスを生成します。</p>\n  </dd>\n  <dt id=\"internalerror\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/InternalError\"><code>InternalError</code></a></dt>\n  <dd>\n    <p>\"too much recursion\" (深すぎる再帰) など、JavaScript エンジンで内部エラーが発生した時に発生するエラーを表すインスタンスを生成します。</p>\n  </dd>\n  <dt id=\"rangeerror\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RangeError\"><code>RangeError</code></a></dt>\n  <dd>\n    <p>数値変数または引数が、その有効範囲外である場合に発生するエラーを表すインスタンスを生成します。</p>\n  </dd>\n  <dt id=\"referenceerror\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\"><code>ReferenceError</code></a></dt>\n  <dd>\n    <p>不正な参照から参照先の値を取得した時に発生するエラーを表すインスタンスを生成します。</p>\n  </dd>\n  <dt id=\"syntaxerror\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a></dt>\n  <dd>\n    <p>構文エラーを表すインスタンスを生成します。</p>\n  </dd>\n  <dt id=\"typeerror\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>変数または引数の型が有効でない場合に発生するエラーを表すインスタンスを生成します。</p>\n  </dd>\n  <dt id=\"urierror\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/URIError\"><code>URIError</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\"><code>encodeURI()</code></a> または <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\"><code>decodeURI()</code></a> に不正な引数が渡された時に発生するエラーを表すインスタンスを生成します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"コンストラクター","title":"コンストラクター","isH3":false,"content":"<dl>\n  <dt id=\"error\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/Error\"><code>Error()</code></a></dt>\n  <dd>\n    <p>新しい <code>Error</code> オブジェクトを生成します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"静的メソッド","title":"静的メソッド","isH3":false,"content":"<dl>\n  <dt id=\"error.capturestacktrace\"><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>Error.captureStackTrace()</code></a></dt>\n  <dd>\n    <p>標準外の <strong>V8</strong> の関数で、 Error インスタンスに <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack\"><code>stack</code></a> プロパティを生成します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"インスタンスプロパティ","title":"インスタンスプロパティ","isH3":false,"content":"<dl>\n  <dt id=\"error.prototype.message\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/message\"><code>Error.prototype.message</code></a></dt>\n  <dd>\n    <p>エラーメッセージ。</p>\n  </dd>\n  <dt id=\"error.prototype.name\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/name\"><code>Error.prototype.name</code></a></dt>\n  <dd>\n    <p>エラーの名称。</p>\n  </dd>\n  <dt id=\"error.prototype.description\"><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>Error.prototype.description</code></a></dt>\n  <dd>\n    <p>標準外の Microsoft のプロパティで、エラーの説明です。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/message\"><code>message</code></a> と似ています。</p>\n  </dd>\n  <dt id=\"error.prototype.number\"><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>Error.prototype.number</code></a></dt>\n  <dd>\n    <p>標準外の Microsoft のプロパティで、エラー番号です。</p>\n  </dd>\n  <dt id=\"error.prototype.filename\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/fileName\"><code>Error.prototype.fileName</code></a></dt>\n  <dd>\n    <p>標準外の Mozilla のプロパティで、このエラーが発生したファイルへのパスです。</p>\n  </dd>\n  <dt id=\"error.prototype.linenumber\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/lineNumber\"><code>Error.prototype.lineNumber</code></a></dt>\n  <dd>\n    <p>標準外の Mozilla のプロパティで、このエラーが発生したファイル内の行番号です。</p>\n  </dd>\n  <dt id=\"error.prototype.columnnumber\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/columnNumber\"><code>Error.prototype.columnNumber</code></a></dt>\n  <dd>\n    <p>標準外の Mozilla のプロパティで、このエラーが発生した行内の桁番号です。</p>\n  </dd>\n  <dt id=\"error.prototype.stack\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack\"><code>Error.prototype.stack</code></a></dt>\n  <dd>\n    <p>標準外の Mozilla プロパティで、スタックトレースです。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"インスタンスメソッド","title":"インスタンスメソッド","isH3":false,"content":"<dl>\n  <dt id=\"error.prototype.tostring\"><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/toString\"><code>Error.prototype.toString()</code></a></dt>\n  <dd>\n    <p>指定したオブジェクトを表す文字列を返します。<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a> メソッドを上書きします。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"一般的なエラーを発生させる","title":"一般的なエラーを発生させる","isH3":true,"content":"<p>通常、<a href=\"/ja/docs/Web/JavaScript/Reference/Statements/throw\"><code>throw</code></a> キーワードを使い意図的にエラーを発生させて <code>Error</code> オブジェクトを生成します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Statements/try...catch\"><code>try...catch</code></a> 構文を使用してエラーを処理してください:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Whoops!'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': '</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"特定のエラーを処理する","title":"特定のエラーを処理する","isH3":true,"content":"<p>エラーの <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>constructor</code></a> プロパティでエラー型をテストすることにより、特定のエラー型だけを選んで処理できます。または、最近の JavaScript エンジン向けに書いているのであれば、<a href=\"/ja/docs/Web/JavaScript/Reference/Operators/instanceof\"><code>instanceof</code></a> キーワードが使えます:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  foo<span class=\"token punctuation\">.</span><span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">EvalError</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': '</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">RangeError</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': '</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ... etc</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"独自のエラー型","title":"独自のエラー型","isH3":true,"content":"<p><code>Error</code> から派生した独自のエラー型を定義して <code>throw new CustomError()</code> ができるようにし、<code>instanceof CustomError</code> で例外ハンドラー内のエラーの種類を確認したいでしょう。これを行う一般的な方法の実例を以下に示します。</p>\n<p>StackOverflow の突っ込んだ議論、 <a href=\"https://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript\" class=\"external\" rel=\" noopener\">\"What's a good way to extend Error in JavaScript?\"</a> も参照してください。</p>\n<h4 id=\"es6_独自のエラークラス\">ES6 独自のエラークラス</h4>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>Warning:</strong> Babel 7 以前では独自のエラークラスのメソッドを使用することができますが、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">Object.defineProperty()</a> で宣言された場合に限定されます。 そうでない場合、古い Babel やそれ以外のトランスパイラは、下記のコードを正しく処理するために<a href=\"https://github.com/loganfsmyth/babel-plugin-transform-builtin-extend\" class=\"external\" rel=\" noopener\">追加の設定</a>を必要とします。</p>\n</div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> ES2015 クラスを使用した場合、一部のブラウザのスタックトレース上に、 CustomError コンストラクタが含まれます。</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomError</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Error</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>foo <span class=\"token operator\">=</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Pass remaining arguments (including vendor specific ones) to parent constructor</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>params<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Maintains proper stack trace for where our error was thrown (only available on V8)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Error<span class=\"token punctuation\">.</span>captureStackTrace<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      Error<span class=\"token punctuation\">.</span><span class=\"token function\">captureStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> CustomError<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'CustomError'</span>\n    <span class=\"token comment\">// Custom debugging information</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> foo\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'baz'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bazMessage'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>    <span class=\"token comment\">//CustomError</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span>     <span class=\"token comment\">//baz</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span> <span class=\"token comment\">//bazMessage</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">)</span>   <span class=\"token comment\">//stacktrace</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"es5_独自のエラーオブジェクト\">ES5 独自のエラーオブジェクト</h4>\n<div class=\"notecard warning\" id=\"sect3\">\n  <p><strong>Warning:</strong> <strong>すべて</strong>のブラウザーのスタックトレース上に、 <code>CustomError</code> コンストラクターが含まれます。</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">CustomError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">foo<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">,</span> lineNumber</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">,</span> lineNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  instance<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'CustomError'</span><span class=\"token punctuation\">;</span>\n  instance<span class=\"token punctuation\">.</span>foo <span class=\"token operator\">=</span> foo<span class=\"token punctuation\">;</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Error<span class=\"token punctuation\">.</span>captureStackTrace<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Error<span class=\"token punctuation\">.</span><span class=\"token function\">captureStackTrace</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">,</span> CustomError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> instance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">CustomError</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Error</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">constructor</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> Error<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">writable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">configurable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span>setPrototypeOf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">setPrototypeOf</span><span class=\"token punctuation\">(</span>CustomError<span class=\"token punctuation\">,</span> Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  CustomError<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> Error<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'baz'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bazMessage'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//CustomError</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//baz</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//bazMessage</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://tc39.es/ecma262/#sec-error-objects\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">ECMAScript (ECMA-262)<br><small lang=\"ja\">Error の定義</small></a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.Error","dataURL":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/throw\"><code>throw</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/try...catch\"><code>try...catch</code></a></li>\n</ul>"}}],"toc":[{"text":"解説","id":"解説"},{"text":"コンストラクター","id":"コンストラクター"},{"text":"静的メソッド","id":"静的メソッド"},{"text":"インスタンスプロパティ","id":"インスタンスプロパティ"},{"text":"インスタンスメソッド","id":"インスタンスメソッド"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Error オブジェクトは、実行時エラーが発生した時に発生します。 Error オブジェクトは、ユーザー定義の例外の基底オブジェクトとして使用することもできます。標準の組み込みエラー型については下記を参照してください。","popularity":0.0012,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Error","locale":"en-US","native":"English (US)"},{"title":"Error","locale":"es","native":"Español"},{"title":"Error","locale":"fr","native":"Français"},{"title":"Error","locale":"ko","native":"한국어"},{"title":"Error","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Error","locale":"ru","native":"Русский"},{"title":"Error","locale":"zh-CN","native":"中文 (简体)"},{"title":"Error","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/javascript/reference/global_objects/error","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/global_objects/error/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects","title":"標準組み込みオブジェクト"},{"uri":"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error","title":"Error"}],"pageTitle":"Error - JavaScript | MDN","noIndexing":false}}