{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"字句文法","mdn_url":"/ja/docs/Web/JavaScript/Reference/Lexical_grammar","locale":"ja","native":"日本語","sidebarHTML":"\n <ol>\n  <li><a href=\"/ja/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Tutorials\"><strong>チュートリアル:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>初級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript の基礎</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/First_steps\">JavaScript の第一歩</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks\">JavaScript の構成要素</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Objects\">JavaScript オブジェクト入門</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>JavaScript ガイド</summary>\n      <ol>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Introduction\">入門編</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Grammar_and_Types\">文法とデータ型</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">制御フローとエラー処理</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Loops_and_iteration\">ループとイテレーター</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Functions\">関数</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Expressions_and_Operators\">式と演算子</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Numbers_and_dates\">数と日付</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Text_formatting\">テキスト処理</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Regular_Expressions\">正規表現</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Indexed_collections\">インデックス付きコレクション</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Keyed_collections\">キー付きコレクション</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Working_with_Objects\">オブジェクトを利用する</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">オブジェクトモデルの詳細</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Using_promises\">プロミスの使用</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Iterators_and_generators\">イテレーターとジェネレーター</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Meta_programming\">メタプログラミング</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Modules\">JavaScript モジュール</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>中級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">クライアントサイド JavaScript フレームワーク</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs\">クライアントサイド Web API</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">JavaScript 「再」入門</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Data_structures\">JavaScript のデータ構造</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Equality_comparisons_and_sameness\">等値比較と同一性</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Closures\">クロージャ</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>上級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">継承とプロトタイプチェーン</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode\">Strict モード</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Typed_arrays\">JavaScript 型付き配列</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Memory_Management\">メモリー管理</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/EventLoop\">並列モデルとイベントループ</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ja/docs/Web/JavaScript/Reference\">リファレンス</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>組み込みオブジェクト</summary>\n        <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>式と演算子</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>文と宣言</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>関数</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>クラス</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>その他</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript 技術概説</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Lexical_grammar\">字句文法</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Data_structures\">JavaScript のデータ構造</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">プロパティの列挙可能性と所有権</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Iteration_protocols\">反復処理プロトコル</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode\">Strict モード</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">strict モードへの移行</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Template_literals\">テンプレート文字列</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">廃止予定の機能</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>このページでは、 JavaScript の字句文法について説明します。 ECMAScript スクリプトのソーステキストは、左から右へスキャンされ、入力要素、すなわちトークン、制御文字、行末、コメント、<a href=\"/ja/docs/Glossary/Whitespace\">ホワイトスペース</a>の並びに変換されます。 ECMAScript も、特定のキーワードとリテラルを定義しており、文を終了するにはセミコロンを自動挿入するためのルールがあります。</p>"}},{"type":"prose","value":{"id":"制御文字","title":"制御文字","isH3":false,"content":"<p>制御文字は、視覚的表現を有していないものの、テキストの解釈を制御するために使用されます。</p>\n<table>\n  <thead>\n    <tr>\n      <th>コードポイント</th>\n      <th>名前</th>\n      <th>略語</th>\n      <th>説明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>U+200C</code></td>\n      <td>Zero width non-joiner</td>\n      <td>&lt;ZWNJ&gt;</td>\n      <td>特定の言語において、合字に接合されることを防ぐために、文字の間に配置されます。(<a href=\"https://ja.wikipedia.org/wiki/%E3%82%BC%E3%83%AD%E5%B9%85%E9%9D%9E%E6%8E%A5%E5%90%88%E5%AD%90\" class=\"external\" rel=\" noopener\">Wikipedia</a>).</td>\n    </tr>\n    <tr>\n      <td><code>U+200D</code></td>\n      <td>Zero width joiner</td>\n      <td>&lt;ZWJ&gt;</td>\n      <td>特定の言語において、通常は接合されない文字を、接合した形を使用して文字を表示するために文字間に配置されます。 (<a href=\"https://ja.wikipedia.org/wiki/%E3%82%BC%E3%83%AD%E5%B9%85%E6%8E%A5%E5%90%88%E5%AD%90\" class=\"external\" rel=\" noopener\">Wikipedia</a>)</td>\n    </tr>\n    <tr>\n      <td><code>U+FEFF</code></td>\n      <td>Byte order mark</td>\n      <td>&lt;BOM&gt;</td>\n      <td>記述の先頭において、 Unicode を使用することと、そのテキストのバイト順をマークします。 (<a href=\"https://ja.wikipedia.org/wiki/%E3%83%90%E3%82%A4%E3%83%88%E3%82%AA%E3%83%BC%E3%83%80%E3%83%BC%E3%83%9E%E3%83%BC%E3%82%AF\" class=\"external\" rel=\" noopener\">Wikipedia</a>).</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"ホワイトスペース","title":"ホワイトスペース","isH3":false,"content":"<p><a href=\"/ja/docs/Glossary/Whitespace\">ホワイトスペース</a>はソースのテキストの読みやすさを向上させ、トークンを互いに区別します。これらの文字は通常、コードの機能性には不要なものです。よく <a href=\"https://en.wikipedia.org/wiki/Minification_%28programming%29\" class=\"external\" rel=\" noopener\">Minification tools</a> を使用して、転送する必要があるデータの量を削減するためにホワイトスペースを除去します。</p>\n<table>\n  <thead>\n    <tr>\n      <th>コードポイント</th>\n      <th>名前</th>\n      <th>略語</th>\n      <th>説明</th>\n      <th>エスケープシーケンス</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>U+0009</td>\n      <td>文字単位のタブ</td>\n      <td>&lt;HT&gt;</td>\n      <td>水平タブ</td>\n      <td>\\t</td>\n    </tr>\n    <tr>\n      <td>U+000B</td>\n      <td>行単位のタブ</td>\n      <td>&lt;VT&gt;</td>\n      <td>垂直タブ</td>\n      <td>\\v</td>\n    </tr>\n    <tr>\n      <td>U+000C</td>\n      <td>フォームフィード</td>\n      <td>&lt;FF&gt;</td>\n      <td>改ページの制御文字 (<a href=\"http://en.wikipedia.org/wiki/Page_break#Form_feed\" class=\"external\" rel=\" noopener\">Wikipedia</a>)</td>\n      <td>\\f</td>\n    </tr>\n    <tr>\n      <td>U+0020</td>\n      <td>空白</td>\n      <td>&lt;SP&gt;</td>\n      <td>通常の空白</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>U+00A0</td>\n      <td>ノーブレークスペース</td>\n      <td>&lt;NBSP&gt;</td>\n      <td>通常の空白だが、改行を行ってよい位置ではない</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>Others</td>\n      <td>他の Unicode の空白文字</td>\n      <td>&lt;USP&gt;</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/Space_%28punctuation%29#Spaces_in_Unicode\" class=\"external\" rel=\" noopener\">Spaces in Unicode on Wikipedia</a></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"行末文字","title":"行末文字","isH3":false,"content":"<p><a href=\"/ja/docs/Glossary/Whitespace\">ホワイトスペース</a>文字に加えて、行末文字もソースのテキストの読みやすさを改善するために使用されます。しかし、行末文字は JavaScript の実行に影響を与える場合があり、禁止されている場所もいくらかあります。行末文字は<a href=\"#automatic_semicolon_insertion\">自動的なセミコロンの挿入</a>の処理にも影響を与えます。行末文字は<a href=\"/ja/docs/Web/JavaScript/Guide/Regular_Expressions\">正規表現</a>の <strong>\\s</strong> クラスに一致します。</p>\n<p>以下の Unicode コードポイントのみが ECMAScript では行末文字として扱われ、他の改行文字はホワイトスペースとして扱われます (例えば、次の行、 NEL、 U+0085 はホワイトスペースと見なされます)。</p>\n<table>\n  <thead>\n    <tr>\n      <th>コードポイント</th>\n      <th>名前</th>\n      <th>略語</th>\n      <th>説明</th>\n      <th>エスケープシーケンス</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>U+000A</td>\n      <td>ラインフィード</td>\n      <td>&lt;LF&gt;</td>\n      <td>UNIX システムでの改行文字です。</td>\n      <td>\\n</td>\n    </tr>\n    <tr>\n      <td>U+000D</td>\n      <td>キャリッジリターン</td>\n      <td>&lt;CR&gt;</td>\n      <td>コモドールと初期の Mac システムでの改行文字です。</td>\n      <td>\\r</td>\n    </tr>\n    <tr>\n      <td>U+2028</td>\n      <td>ラインセパレーター</td>\n      <td>&lt;LS&gt;</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/Newline\" class=\"external\" rel=\" noopener\">Wikipedia</a></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>U+2029</td>\n      <td>改段落</td>\n      <td>&lt;PS&gt;</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/Newline\" class=\"external\" rel=\" noopener\">Wikipedia</a></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"コメント","title":"コメント","isH3":false,"content":"<p>コメントは、ヒント、メモ、提案、警告を JavaScript のコードに追加するために使用されます。これにより、コードがより読みやすく、より理解しやすいものなります。また、コードが実行されないよう無効にするために使用することができます。これは、貴重なデバッグツールになることがあります。</p>\n<p>JavaScript には、コード内にコメントを割り当てる方法が 2 つあります。</p>\n<p>1 番目の方法は <code>//</code> コメントです。つまり、これは同じ行にある、その後のすべてのテキストをコメントにします。例えば、</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// This is a one line JavaScript comment</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>2 番目の方法は <code>/* */</code> スタイルで、もっとずっと柔軟なものです。</p>\n<p>例えば、単一行に利用した場合は次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* This is a one line JavaScript comment */</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>複数行のコメントも下記のように作成することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* This comment spans multiple lines. Notice\n     that we don't need to end the comment until we're done. */</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>必要であれば、行の途中でコメントを使用することもできますが、これはコードが読みにくくなることがあるので注意が必要です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello '</span> <span class=\"token operator\">+</span> x <span class=\"token comment\">/* insert the value of x */</span> <span class=\"token operator\">+</span> <span class=\"token string\">' !'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token string\">'world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>また、コードをコメントで囲むことで、コードが実行されないよう無効にすることができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* console.log('Hello world!'); */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">comment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この場合、 <code>console.log()</code> の呼び出しはコメント内部にあるので、実行されることはありません。何行分のコードであっても、このようにして無効にすることができます。</p>"}},{"type":"prose","value":{"id":"ハッシュバンコメント","title":"ハッシュバンコメント","isH3":false,"content":"<p>特殊な 3 番目のコメントの構文である<strong>ハッシュバンコメント</strong>は、 ECMAScript で標準化の途中にあるものです（<a href=\"https://github.com/tc39/proposal-hashbang\" class=\"external\" rel=\" noopener\">Hashbang Grammar proposal</a> を参照してください）。</p>\n<p>ハッシュバンコメントは、ちょうど単一行コメント (<code>//</code>) のように動作しますが、 <code>#!</code> で始まり、<strong>スクリプトやモジュールの絶対的な開始位置にある場合のみ有効</strong>です。 <code>#!</code> の前にホワイトスペースも許されないことに注意してください。このコメントは <code>#!</code> の後から最初の行の末尾までのすべての文字で構成されます。このコメントは 1 つだけが許可されます。</p>\n<p>ハッシュバンコメントは、スクリプトを実行したい特定の JavaScript インタープリターへのパスを指定します。例えば次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token hashbang comment\">#!/usr/bin/env node</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> JavaScript のハッシュバンコメントは、ファイルを正しいインタープリターで実行するために使用される <a href=\"https://en.wikipedia.org/wiki/Shebang_(Unix)\" class=\"external\" rel=\" noopener\">UNIX のシバン</a>を模倣したものです。</p>\n</div>\n<div class=\"notecard warning\" id=\"sect2\">\n  <p><strong>Warning:</strong> スクリプトをシェル環境で直接実行できるようにしたい場合は、 <a href=\"https://ja.wikipedia.org/wiki/%E3%83%90%E3%82%A4%E3%83%88%E3%82%AA%E3%83%BC%E3%83%80%E3%83%BC%E3%83%9E%E3%83%BC%E3%82%AF\" class=\"external\" rel=\" noopener\">BOM</a> のない UTF-8 でエンコードしてください。ハッシュバンコメントの前に BOM があってもブラウザーでは動作しますが、ハッシュバンのあるスクリプトで BOM を使用することは推奨されていません。 BOM は Unix/Linux のシェル環境でスクリプトを実行しようとすると動作しません。したがって、シェル環境から直接スクリプトを実行したい場合は BOM のない UTF-8 を使用してください。</p>\n</div>\n<p><code>#!</code> の形のコメントは JavaScript インタープリターを指定するためにだけ使用してください。他の用途ではすべて <code>//</code> のコメント (または複数行コメント) を使用してください。</p>"}},{"type":"prose","value":{"id":"キーワード","title":"キーワード","isH3":false,"content":""}},{"type":"prose","value":{"id":"ecmascript_2015_における予約キーワード","title":"ECMAScript 2015 における予約キーワード","isH3":true,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/break\"><code>break</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/switch\"><code>case</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/try...catch\"><code>catch</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/class\"><code>class</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/const\"><code>const</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/continue\"><code>continue</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/debugger\"><code>debugger</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/switch\"><code>default</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/delete\"><code>delete</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/do...while\"><code>do</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/if...else\"><code>else</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/export\"><code>export</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/class\"><code>extends</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/try...catch\"><code>finally</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for\"><code>for</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/function\"><code>function</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/if...else\"><code>if</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/import\"><code>import</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/in\"><code>in</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/instanceof\"><code>instanceof</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/return\"><code>return</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/super\"><code>super</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/switch\"><code>switch</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/this\"><code>this</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/throw\"><code>throw</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/try...catch\"><code>try</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/typeof\"><code>typeof</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/var\"><code>var</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/void\"><code>void</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/while\"><code>while</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/with\"><code>with</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield\"><code>yield</code></a></li>\n</ul>"}},{"type":"prose","value":{"id":"今後の予約キーワード","title":"今後の予約キーワード","isH3":true,"content":"<p>以下のものは、 ECMAScript の仕様によって今後のキーワードとして予約されています。これらは現時点では特別な機能を持っていませんが、将来は持つ可能性があるので、識別子として使用することはできません。</p>\n<p>以下のものは常に予約されています。</p>\n<ul>\n  <li><code>enum</code></li>\n</ul>\n<p>以下のものは、厳格モードで遭遇した場合のみ予約語になります。</p>\n<ul>\n  <li><code>implements</code></li>\n  <li><code>interface</code></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/let\"><code>let</code></a></li>\n  <li><code>package</code></li>\n  <li><code>private</code></li>\n  <li><code>protected</code></li>\n  <li><code>public</code></li>\n  <li><code>static</code></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield\"><code>yield</code></a></li>\n</ul>\n<p>以下のものは、モジュールコードで遭遇した場合のみ予約語になります。</p>\n<ul>\n  <li><code>await</code></li>\n</ul>\n<h4 id=\"旧仕様にあった今後の予約キーワード\">旧仕様にあった今後の予約キーワード</h4>\n<p>以前の ECMAScript の仕様書 (ECMAScript 1 から 3 まで) では、以下のものが将来のキーワードとして予約されています。</p>\n<ul>\n  <li><code>abstract</code></li>\n  <li><code>boolean</code></li>\n  <li><code>byte</code></li>\n  <li><code>char</code></li>\n  <li><code>double</code></li>\n  <li><code>final</code></li>\n  <li><code>float</code></li>\n  <li><code>goto</code></li>\n  <li><code>int</code></li>\n  <li><code>long</code></li>\n  <li><code>native</code></li>\n  <li><code>short</code></li>\n  <li><code>synchronized</code></li>\n  <li><code>throws</code></li>\n  <li><code>transient</code></li>\n  <li><code>volatile</code></li>\n</ul>\n<p>加えて、 <code>null</code>, <code>true</code>, <code>false</code> の各リテラルは、 ECMAScript では識別子として使用することができません。</p>"}},{"type":"prose","value":{"id":"予約語の使用","title":"予約語の使用","isH3":true,"content":"<p>予約語は実際には (<em>IdentifierName</em> ではなく) 識別子にのみ適用されます。 <a href=\"https://tc39.es/ecma262/multipage/grammar-summary.html#sec-lexical-grammar\" class=\"external\" rel=\" noopener\">ECMAScript Lexical Grammar</a> に記載されているように、これらはすべて <em>IdentifierName</em> であり、<em>ReservedWord</em> を除外しません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>a<span class=\"token punctuation\">.</span>import\na<span class=\"token punctuation\">[</span><span class=\"token string\">'import'</span><span class=\"token punctuation\">]</span>\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">import</span><span class=\"token operator\">:</span> <span class=\"token string\">'test'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>一方、以下のものは <em>Identifier</em> であり、<em>IdentifierName</em> から予約語を除外したものであるからです。識別子は、<em>FunctionDeclaration</em>, <em>FunctionExpression</em>, <em>VariableDeclaration</em> などのために使用されます。 <em>IdentifierNames</em> は <em>MemberExpression</em>, <em>CallExpression</em> などについて使用されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 違反</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"特別な意味を持つ識別子","title":"特別な意味を持つ識別子","isH3":true,"content":"<p>一部の識別子は、キーワードでなくても、あるコンテキストで特別な意味を持つことがあります。それらは以下の通りです。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/arguments\"><code>arguments</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/get\"><code>get</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/set\"><code>set</code></a></li>\n</ul>"}},{"type":"prose","value":{"id":"リテラル","title":"リテラル","isH3":false,"content":""}},{"type":"prose","value":{"id":"null_リテラル","title":"Null リテラル","isH3":true,"content":"<p>詳細については <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> をご覧ください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">null</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"論理値リテラル","title":"論理値リテラル","isH3":true,"content":"<p>詳細については<a href=\"/ja/docs/Web/JavaScript/Data_structures#%E8%AB%96%E7%90%86%E5%9E%8B_boolean\">論理型</a>をご覧ください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token boolean\">true</span>\n<span class=\"token boolean\">false</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"数値リテラル","title":"数値リテラル","isH3":true,"content":"<p><a href=\"/ja/docs/Web/JavaScript/Data_structures#%E6%95%B0%E5%80%A4%E5%9E%8B_number\">数値型</a> (Number) および<a href=\"/ja/docs/Web/JavaScript/Data_structures#%E9%95%B7%E6%95%B4%E6%95%B0%E5%9E%8B_bigint\">長整数型</a> (Number) が数値リテラルを使用します。</p>\n<h4 id=\"10_進数\">10 進数</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">1234567890</span>\n<span class=\"token number\">42</span>\n\n<span class=\"token comment\">// 先頭にゼロがあるものを使用する場合は注意してください</span>\n<span class=\"token number\">0888</span> <span class=\"token comment\">// 888 は 10 進数として解釈されます</span>\n<span class=\"token number\">0777</span> <span class=\"token comment\">// 8 進数として解釈され、 10 進数では 511 です。</span>\n</code></pre></div>\n<p>なお、 10 進数リテラルはゼロ (<code>0</code>) から始め、他の 10 進数の数字を続けることができますが、 <code>0</code> に続く数字がすべて 8 より小さい場合は、その数値が 8 進数として解釈されることに注意してください。 JavaScript では、この場合に例外が発生しませんので、 <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=957513\" class=\"external\" rel=\" noopener\">バグ&nbsp;957513</a> をご覧ください。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt()</code></a> についてのページもご覧ください。</p>\n<h5 id=\"指数\">指数</h5>\n<p>10 進数の指数リテラルは、 <code>beN</code> の書式で指定します。ここで <code>b</code> は基数（整数または浮動小数点）、その後に <code>e</code> 文字（セパレーターまたは指数記号として機能）、そして <code>N</code> は<em>指数</em>または<em>べき乗数</em> - 符号付き整数です（2019 ECMA-262 仕様に従います）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">0e-5</span>   <span class=\"token comment\">// =&gt; 0</span>\n<span class=\"token number\">0e+5</span>   <span class=\"token comment\">// =&gt; 0</span>\n<span class=\"token number\">5e1</span>    <span class=\"token comment\">// =&gt; 50</span>\n<span class=\"token number\">175e-2</span> <span class=\"token comment\">// =&gt; 1.75</span>\n<span class=\"token number\">1e3</span>    <span class=\"token comment\">// =&gt; 1000</span>\n<span class=\"token number\">1e-3</span>   <span class=\"token comment\">// =&gt; 0.001</span>\n</code></pre></div>\n<h4 id=\"2_進数\">2 進数</h4>\n<p>2進数の構文は、先頭のゼロに続いて小文字または大文字のラテン文字 \"B\" を使用します (<code>0b</code> または <code>0B</code>)。この構文は ECMAScript 2015 の新しい構文なので、下記のブラウザー互換性表をご覧ください。 <code>0b</code> の後の数字が 0 または 1 でない場合は、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> が \"Missing binary digits after 0b\" の内容で発生します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> <span class=\"token constant\">FLT_SIGNBIT</span>  <span class=\"token operator\">=</span> <span class=\"token number\">0b10000000000000000000000000000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2147483648</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">FLT_EXPONENT</span> <span class=\"token operator\">=</span> <span class=\"token number\">0b01111111100000000000000000000000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2139095040</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">FLT_MANTISSA</span> <span class=\"token operator\">=</span> <span class=\"token number\">0B00000000011111111111111111111111</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8388607</span>\n</code></pre></div>\n<h4 id=\"8_進数\">8 進数</h4>\n<p>8進数の構文は、先頭のゼロに続いて小文字または大文字のラテン文字 \"O\" を使用します (<code>0o</code> または <code>0O</code>)。この構文は ECMAScript 2015 の新しい構文なので、下記のブラウザー互換性表をご覧ください。 <code>0o</code> の後の数字が範囲 (01234567) 外の場合、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> が \"Missing octal digits after 0o\" の内容で発生します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0O755</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 493</span>\n<span class=\"token keyword\">var</span> m <span class=\"token operator\">=</span> <span class=\"token number\">0o644</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 420</span>\n\n<span class=\"token comment\">// ゼロだけで始めることもできます (上記の10進数についてのメモを参照)</span>\n<span class=\"token number\">0755</span>\n<span class=\"token number\">0644</span>\n</code></pre></div>\n<h4 id=\"16_進数\">16 進数</h4>\n<p>16 進数の構文は、先頭のゼロに続いて小文字または大文字のラテン文字 \"X\" を使用します (<code>0x</code> または <code>0X</code>)。 0x の後の数字が範囲 (0123456789ABCDEF) 外の場合、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> が \"Identifier starts immediately after numeric literal\" の内容で発生します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">0xFFFFFFFFFFFFFFFFF</span> <span class=\"token comment\">// 295147905179352830000</span>\n<span class=\"token number\">0x123456789ABCDEF</span>   <span class=\"token comment\">// 81985529216486900</span>\n<span class=\"token number\">0XA</span>                 <span class=\"token comment\">// 10</span>\n</code></pre></div>\n<h4 id=\"長整数リテラル\">長整数リテラル</h4>\n<p><a href=\"/ja/docs/Web/JavaScript/Data_structures#%E9%95%B7%E6%95%B4%E6%95%B0%E5%9E%8B_bigint\">長整数型</a> (BigInt) は JavaScript の数値プリミティブであり、自由な精度の整数を表すことができます。長整数リテラルは、整数の末尾に <code>n</code> を追加することで作成されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">123456789123456789n</span>     <span class=\"token comment\">// 123456789123456789</span>\n<span class=\"token number\">0o777777777777n</span>         <span class=\"token comment\">// 68719476735</span>\n<span class=\"token number\">0x123456789ABCDEFn</span>      <span class=\"token comment\">// 81985529216486895</span>\n<span class=\"token number\">0b11101001010101010101n</span> <span class=\"token comment\">// 955733</span>\n</code></pre></div>\n<p>なお、先頭がゼロだけの 8 進数は <code>BigInt</code> では動作しません。</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token comment\">// 0755n</span>\n<span class=\"token comment\">// SyntaxError: invalid BigInt syntax</span>\n</code></pre></div>\n<p>8　進数の <code>BigInt</code> 数値では、常にゼロの後に \"o\" (大文字でも小文字でも) を付けて使用してください。</p>\n<div class=\"code-example\"><pre class=\"brush: js example-good notranslate\"><code><span class=\"token number\">0o755n</span>\n</code></pre></div>\n<p><code>BigInt</code> についての詳細な情報は、 <a href=\"/ja/docs/Web/JavaScript/Data_structures#%E9%95%B7%E6%95%B4%E6%95%B0%E5%9E%8B_bigint\">JavaScript のデータ構造</a>をご覧ください。</p>\n<h4 id=\"数値の区切り文字\">数値の区切り文字</h4>\n<p>数値リテラルの可読性を高めるために、アンダースコア (<code>_</code>, <code>U+005F</code>) を区切り文字として使用することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 10 進数の区切り文字</span>\n<span class=\"token number\">1_000_000_000_000</span>\n<span class=\"token number\">1_050.95</span>\n\n<span class=\"token comment\">// 2 進数の区切り文字</span>\n<span class=\"token number\">0b1010_0001_1000_0101</span>\n\n<span class=\"token comment\">// 8 進数の区切り文字</span>\n<span class=\"token number\">0o2_2_5_6</span>\n\n<span class=\"token comment\">// 16 進数の区切り文字</span>\n<span class=\"token number\">0xA0_B0_C0</span>\n\n<span class=\"token comment\">// BigInt の区切り文字</span>\n<span class=\"token number\">1_000_000_000_000_000_000_000n</span>\n</code></pre></div>\n<p>なお、以下の制限があります。</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token comment\">// 連続して 2 つ以上のアンダースコアは許可されていません</span>\n100__000<span class=\"token punctuation\">;</span> <span class=\"token comment\">// SyntaxError</span>\n\n<span class=\"token comment\">// 数値リテラルの末尾に置くことは許可されていません</span>\n100_<span class=\"token punctuation\">;</span> <span class=\"token comment\">// SyntaxError</span>\n\n<span class=\"token comment\">// 先頭の 0 の後に使用することはできません</span>\n<span class=\"token number\">0_1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SyntaxError</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"オブジェクトリテラル","title":"オブジェクトリテラル","isH3":true,"content":"<p>詳細については、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> と<a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Object_initializer\">オブジェクト初期化子</a>をご覧ください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ES2015 で導入された短縮表記</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 以前の表記</span>\n<span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> a<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> b<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> c <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"配列リテラル","title":"配列リテラル","isH3":true,"content":"<p>詳細については <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> をご覧ください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">[</span><span class=\"token number\">1954</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1974</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1990</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2014</span><span class=\"token punctuation\">]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"文字列リテラル","title":"文字列リテラル","isH3":true,"content":"<p><a href=\"/ja/docs/Web/JavaScript/Data_structures#%E6%96%87%E5%AD%97%E5%88%97%E5%9E%8B_string\">文字列</a>リテラルは、単一引用符または二重引用符に囲まれた零個以上の Unicode コードポイントです。 Unicode コードポイントはエスケープシーケンスで表すこともできます。以下の引用符を閉じるコードポイントを除いて、すべてのコードポイントが文字列リテラルに現れることができます。</p>\n<ul>\n  <li>U+005C \\ (バックスラッシュ)</li>\n  <li>U+000D &lt;CR&gt;,</li>\n  <li>and U+000A &lt;LF&gt;.</li>\n</ul>\n<p><a href=\"https://github.com/tc39/proposal-json-superset\" class=\"external\" rel=\" noopener\">proposal to make all JSON text valid ECMA-262</a> より以前は、 U+2028 &lt;LS&gt; および U+2029 &lt;PS&gt; は文字列リテラル内でエスケープせずに現れることができませんでした。</p>\n<p>すべてのコードポイントが、エスケープシーケンスの形で現れることができます。文字列リテラルは ECMAScript の文字列値として評価されます。これらの文字列の値を生成する際に、 Unicode コードポイントは UTF-16 エンコードされます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'foo'</span>\n<span class=\"token string\">\"bar\"</span>\n</code></pre></div>\n<h4 id=\"16_進エスケープシーケンス\">16 進エスケープシーケンス</h4>\n<p>16 進エスケープシーケンスは <code>\\x</code> に続いてちょうど 2 桁の 16 進数から成り、 0x0000 から 0x00FF までのコード単位またはコードポイントを表します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'\\xA9'</span> <span class=\"token comment\">// \"©\"</span>\n</code></pre></div>\n<h4 id=\"unicode_エスケープシーケンス\">Unicode エスケープシーケンス</h4>\n<p>Unicode エスケープシーケンスは <code>\\u</code> に続いてちょうど 4 桁の 16 進数から成ります。これで UTF-16 エンコーディングのコード単位を表します。コードポイント U+0000 から U+FFFF までは、コード単位とコードポイントは等しくなります。コードポイント U+10000 から U+10FFFF までは、 2 つのエスケープシーケンスで 2 つのコード単位 (サロゲートペア) を表す必要があります。サロゲートペアはコードポイントで区別されます。</p>\n<p>See also <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode\"><code>String.fromCharCode()</code></a> and <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\"><code>String.prototype.charCodeAt()</code></a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'\\u00A9'</span> <span class=\"token comment\">// \"©\" (U+A9)</span>\n</code></pre></div>\n<h4 id=\"unicode_コードポイントエスケープ\">Unicode コードポイントエスケープ</h4>\n<p>Unicode コードポイントエスケープは <code>\\u{</code> に続いて 16 進数のコードポイントが続き、 <code>}</code> が続きます。 16 進数の値は 0 から 0x10FFFF までの範囲に含まれている必要があります。 U+10000 から U+10FFFF までの範囲のコードポイントを、サロゲートペアとして表す必要はありません。コードポイントエスケープは JavaScript に ECMAScript 2015 (ES6) で追加されました。</p>\n<p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\"><code>String.fromCodePoint()</code></a> または <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt\"><code>String.prototype.codePointAt()</code></a> もご覧ください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'\\u{2F804}'</span> <span class=\"token comment\">// CJK COMPATIBILITY IDEOGRAPH-2F804 (U+2F804)</span>\n\n<span class=\"token comment\">// 同じ文字をサロゲートペアで表したもの</span>\n<span class=\"token string\">'\\uD87E\\uDC04'</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"正規表現リテラル","title":"正規表現リテラル","isH3":true,"content":"<p>詳細については <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a> を参照してください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">ab+c</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span>\n\n<span class=\"token comment\">// 「空の」正規表現リテラル</span>\n<span class=\"token comment\">// 単一行コメントと区別するために、空のキャプチャしない</span>\n<span class=\"token comment\">// グループが必要です。</span>\n<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"テンプレートリテラル","title":"テンプレートリテラル","isH3":true,"content":"<p>詳細について、<a href=\"/ja/docs/Web/JavaScript/Reference/Template_literals\">テンプレート文字列</a>をご覧ください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">string text</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">string text line 1\n string text line 2</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">string text </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>expression<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> string text</span><span class=\"token template-punctuation string\">`</span></span>\n\ntag <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">string text </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>expression<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> string text</span><span class=\"token template-punctuation string\">`</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"自動セミコロン挿入","title":"自動セミコロン挿入","isH3":false,"content":"<p>一部の <a href=\"/ja/docs/Web/JavaScript/Reference/Statements\">JavaScript 文</a>はセミコロンで終わる必要があります。したがって、自動セミコロン挿入 (ASI) の影響を受けます。</p>\n<ul>\n  <li>空の文</li>\n  <li><code>let</code>, <code>const</code>, 変数定義</li>\n  <li><code>import</code>, <code>export</code>, モジュール宣言</li>\n  <li>式の文</li>\n  <li><code>debugger</code></li>\n  <li><code>continue</code>, <code>break</code>, <code>throw</code></li>\n  <li><code>return</code></li>\n</ul>\n<p>ECMAScript 仕様書は、<a href=\"https://tc39.github.io/ecma262/#sec-rules-of-automatic-semicolon-insertion\" class=\"external\" rel=\" noopener\">セミコロン挿入の 3 つの規則</a>に言及しています。</p>\n<p>1. 文法上許されない位置で<a href=\"#%E8%A1%8C%E6%9C%AB%E6%96%87%E5%AD%97\">行末文字</a>または \"}\" に遭遇したとき、セミコロンが前に挿入されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">{</span> <span class=\"token number\">1</span>\n<span class=\"token number\">2</span> <span class=\"token punctuation\">}</span> <span class=\"token number\">3</span>\n\n<span class=\"token comment\">// 上記の文は、 ASI によって次のように変換されます</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">;</span><span class=\"token number\">2</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>2. トークンの入力ストリームの末尾が検出され、パーサーが単一の入力ストリームを完全なプログラムとして解釈できない場合、末尾にセミコロンが挿入されます。</p>\n<p>ここで <code>++</code> は、変数 <code>b</code> に適用される<a href=\"/ja/docs/Web/JavaScript/Reference/Operators#%E3%82%A4%E3%83%B3%E3%82%AF%E3%83%AA%E3%83%A1%E3%83%B3%E3%83%88%E3%81%A8%E3%83%87%E3%82%AF%E3%83%AA%E3%83%A1%E3%83%B3%E3%83%88\">後置演算子</a>としては扱われません。というのも、行末文字が <code>b</code> と<code>++</code> の間に見られるからです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>a <span class=\"token operator\">=</span> b\n<span class=\"token operator\">++</span>c\n\n<span class=\"token comment\">// 上記の文は、 ASI によって次のように変換されます</span>\n\na <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">++</span>c<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>3. 文法上の制限付き生成物を含む文の後に行末文字が続いている場合、最後にセミコロンが挿入されます。以下の文が \"no LineTerminator here\" 規則を持っています。</p>\n<ul>\n  <li>後置演算子 (<code>++</code> および <code>--</code>)</li>\n  <li><code>continue</code></li>\n  <li><code>break</code></li>\n  <li><code>return</code></li>\n  <li><code>yield</code>, <code>yield*</code></li>\n  <li><code>module</code></li>\n</ul>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">return</span>\na <span class=\"token operator\">+</span> b\n\n<span class=\"token comment\">// 上記の文は、 ASI によって次のように変換されます</span>\n\n<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.grammar","dataURL":"/ja/docs/Web/JavaScript/Reference/Lexical_grammar/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://tc39.es/ecma262/#sec-ecmascript-language-lexical-grammar\" class=\"external\" rel=\" noopener\">Lexical grammar in the ECMAScript specification</a></li>\n  <li><a href=\"https://whereswalden.com/2013/08/12/micro-feature-from-es6-now-in-firefox-aurora-and-nightly-binary-and-octal-numbers/\" class=\"external\" rel=\" noopener\">Jeff Walden: Binary and octal numbers</a></li>\n  <li><a href=\"https://mathiasbynens.be/notes/javascript-escapes\" class=\"external\" rel=\" noopener\">Mathias Bynens: JavaScript character escape sequences</a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Data_structures#%E8%AB%96%E7%90%86%E5%9E%8B_boolean\">論理型</a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Data_structures#%E6%95%B0%E5%80%A4%E5%9E%8B_number\">数値型</a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Data_structures#%E6%96%87%E5%AD%97%E5%88%97%E5%9E%8B_string\">文字列型</a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\"><code>RegExp</code></a></li>\n</ul>"}}],"toc":[{"text":"制御文字","id":"制御文字"},{"text":"ホワイトスペース","id":"ホワイトスペース"},{"text":"行末文字","id":"行末文字"},{"text":"コメント","id":"コメント"},{"text":"ハッシュバンコメント","id":"ハッシュバンコメント"},{"text":"キーワード","id":"キーワード"},{"text":"リテラル","id":"リテラル"},{"text":"自動セミコロン挿入","id":"自動セミコロン挿入"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"このページでは、 JavaScript の字句文法について説明します。 ECMAScript スクリプトのソーステキストは、左から右へスキャンされ、入力要素、すなわちトークン、制御文字、行末、コメント、ホワイトスペースの並びに変換されます。 ECMAScript も、特定のキーワードとリテラルを定義しており、文を終了するにはセミコロンを自動挿入するためのルールがあります。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Lexical grammar","locale":"en-US","native":"English (US)"},{"title":"Gramática léxica","locale":"es","native":"Español"},{"title":"Grammaire lexicale","locale":"fr","native":"Français"},{"title":"어휘 문법","locale":"ko","native":"한국어"},{"title":"Gramática léxica","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Лексический синтаксис","locale":"ru","native":"Русский"},{"title":"词法文法","locale":"zh-CN","native":"中文 (简体)"},{"title":"Lexical grammar","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/javascript/reference/lexical_grammar","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/lexical_grammar/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Lexical_grammar","title":"字句文法"}],"pageTitle":"字句文法 - JavaScript | MDN","noIndexing":false}}