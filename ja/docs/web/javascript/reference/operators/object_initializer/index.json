{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"オブジェクト初期化子","mdn_url":"/ja/docs/Web/JavaScript/Reference/Operators/Object_initializer","locale":"ja","native":"日本語","sidebarHTML":"\n <ol>\n  <li><a href=\"/ja/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Tutorials\"><strong>チュートリアル:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>初級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript の基礎</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/First_steps\">JavaScript の第一歩</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks\">JavaScript の構成要素</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Objects\">JavaScript オブジェクト入門</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>JavaScript ガイド</summary>\n      <ol>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Introduction\">入門編</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Grammar_and_Types\">文法とデータ型</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">制御フローとエラー処理</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Loops_and_iteration\">ループとイテレーター</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Functions\">関数</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Expressions_and_Operators\">式と演算子</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Numbers_and_dates\">数と日付</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Text_formatting\">テキスト処理</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Regular_Expressions\">正規表現</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Indexed_collections\">インデックス付きコレクション</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Keyed_collections\">キー付きコレクション</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Working_with_Objects\">オブジェクトを利用する</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">オブジェクトモデルの詳細</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Using_promises\">プロミスの使用</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Iterators_and_generators\">イテレーターとジェネレーター</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Meta_programming\">メタプログラミング</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Modules\">JavaScript モジュール</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>中級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">クライアントサイド JavaScript フレームワーク</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs\">クライアントサイド Web API</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">JavaScript 「再」入門</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Data_structures\">JavaScript のデータ構造</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Equality_comparisons_and_sameness\">等値比較と同一性</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Closures\">クロージャ</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>上級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">継承とプロトタイプチェーン</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode\">Strict モード</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Typed_arrays\">JavaScript 型付き配列</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Memory_Management\">メモリー管理</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/EventLoop\">並列モデルとイベントループ</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ja/docs/Web/JavaScript/Reference\">リファレンス</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>組み込みオブジェクト</summary>\n        <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>式と演算子</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>文と宣言</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>関数</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>クラス</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>その他</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript 技術概説</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Lexical_grammar\">字句文法</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Data_structures\">JavaScript のデータ構造</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">プロパティの列挙可能性と所有権</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Iteration_protocols\">反復処理プロトコル</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode\">Strict モード</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">strict モードへの移行</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Template_literals\">テンプレート文字列</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">廃止予定の機能</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>オブジェクトは <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>new Object()</code></a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a>、<em>リテラル</em>表記法 (<em>初期化子</em>表記法) を使用して初期化されます。オブジェクト初期化子はオブジェクトのプロパティ名と関連した値のゼロ以上のペアのリストで、中括弧 (<code>{}</code>) で囲まれます。</p><iframe class=\"interactive\" height=\"692\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/expressions-objectinitializer.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> a<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> b<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> c<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">property</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parameters</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ecmascript_2015_での新しい表記法","title":"ECMAScript 2015 での新しい表記法","isH3":true,"content":"<p>これらの表記をサポートするための互換性の表を参照してください。非サポート環境では、これらの表記は、構文エラーにつながります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 略記プロパティ名 (ES2015)</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 略記メソッド名 (ES2015)</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">parameters</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 計算プロパティ名 (ES2015)</span>\n<span class=\"token keyword\">let</span> prop <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">'hey'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'ar'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">'there'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p>オブジェクト初期化子は、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> の初期化を表す式です。オブジェクトはオブジェクトを表す<em>プロパティ</em>で構成されます。オブジェクトプロパティの値は、特定の<a href=\"/ja/docs/Glossary/Primitive\">プリミティブ</a>データ型か他のオブジェクトのどちらかを含みます。</p>"}},{"type":"prose","value":{"id":"オブジェクトリテラル表記法_vs_json","title":"オブジェクトリテラル表記法 vs JSON","isH3":true,"content":"<p>オブジェクトリテラル表記法は <strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation (<a href=\"/ja/docs/Glossary/JSON\">JSON</a>) とは異なります。両者は似ていますが、ちがいがあります。</p>\n<ul>\n  <li>JSON は、<code>\"property\": value</code> 構文を使用するプロパティ定義<em>のみ</em>を許可します。プロパティ名は二重引用符で囲まなければなりません。そして、その定義を略記にすることはできません。</li>\n  <li>JSON で値とすることができるのは、文字列、数値、配列、<code>true</code>、<code>false</code>、<code>null</code>、別の (JSON) オブジェクトのみです。</li>\n  <li>関数の値（後述の「メソッド」を参照）は JSON では値を割り当てることができません。</li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> のようなオブジェクトは、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> の後で文字列になります。</li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> では計算プロパティ名は拒否され、エラーが発生します。</li>\n</ul>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"オブジェクトの生成","title":"オブジェクトの生成","isH3":true,"content":"<p>プロパティを持たない空のオブジェクトは、下記のように中括弧を記述することで生成されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>しかし、<em>リテラル</em>記法、<em>初期化子</em>記法の利点は、中括弧内にプロパティをもつオブジェクトを簡潔に生成できる点です。 <code>key: value</code> の組をカンマで区切ったリストで記述することができます。</p>\n<p>以下のコードでは、 <code>\"foo\"</code>、<code>\"age\"</code>、<code>\"baz\"</code> の 3 つのプロパティをもつオブジェクトを生成します。これらのキーの値はそれぞれ、文字列の <code>\"bar\"</code>、数値の <code>42</code>、そして他のオブジェクトです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">baz</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">myProp</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"プロパティへのアクセス","title":"プロパティへのアクセス","isH3":true,"content":"<p>オブジェクトを生成すると、読み取ったり変更したりしたくなるでしょう。オブジェクトのプロパティには、ドット記法またはブラケット記法でアクセスすることができます。（詳細については、<a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">プロパティへのアクセス</a>をご覧ください。）</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>object<span class=\"token punctuation\">.</span>foo <span class=\"token comment\">// \"bar\"</span>\nobject<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 42</span>\nobject<span class=\"token punctuation\">.</span>baz          <span class=\"token comment\">// {myProp: 12}</span>\nobject<span class=\"token punctuation\">.</span>baz<span class=\"token punctuation\">.</span>myProp   <span class=\"token comment\">//12</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"プロパティの定義","title":"プロパティの定義","isH3":true,"content":"<p>初期化構文を使用してプロパティを記述する方法について既に学びました。多くの場合、コード内には、オブジェクトに設定したい変数があります。下記のコードをご覧ください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span>\n    b <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\n    c <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> a<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> b<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> c\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ECMAScript 2015 では、同じことを実現するために利用できる短い記法があります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span>\n    b <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\n    c <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 略記プロパティ名 (ES2015)</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// In other words,</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>a <span class=\"token operator\">===</span> <span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n</code></pre></div>\n<h4 id=\"重複したプロパティ名\">重複したプロパティ名</h4>\n<p>プロパティに対して同じ名前を使用するとき、二番目のプロパティは最初のプロパティを上書きします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {x: 2}</span>\n</code></pre></div>\n<p>ECMAScript 5 の厳格モードのコードでは、重複したプロパティの名前は <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\"><code>SyntaxError</code></a> とみなされます。実行時に重複を可能にする計算プロパティ名の導入により、 ECMAScript 2015 ではこの制限は取り除かれました。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">haveES2015DuplicatePropertySemantics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">prop</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">prop</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 厳格モードで重複するプロパティ名が許可されているため、エラーが発生しない場合。</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 厳格モードで重複が禁止されているため、エラーが発生する場合。</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"メソッドの定義","title":"メソッドの定義","isH3":true,"content":"<p>オブジェクトのプロパティは<a href=\"/ja/docs/Web/JavaScript/Reference/Functions\">関数</a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Functions/get\">ゲッター</a>メソッド、<a href=\"/ja/docs/Web/JavaScript/Reference/Functions/set\">セッター</a>メソッドも参照することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">property</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">parameters</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ECMAScript 2015 では、略記法が利用可能ですので、キーワード \"<code>function</code>\" は必要なくなりました。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// メソッド名の略記法 (ES2015)</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">property</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">parameters</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ECMAScript 2015 では、ジェネレーター関数であるプロパティを簡潔に定義する方法があります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">*</span><span class=\"token function\">generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>ECMAScript 5 では、下記のように記述します（ただし、 ES5 にはジェネレーターがないことに注意してください）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">generator</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>メソッドの詳細や例については、<a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Method_definitions\">メソッド定義</a>をご覧ください。</p>"}},{"type":"prose","value":{"id":"計算プロパティ名","title":"計算プロパティ名","isH3":true,"content":"<p>ECMAScript 2015 から、オブジェクト初期化子構文でも、計算プロパティ名に対応します。括弧 <code>[]</code> の中に式を記述することができ、それが計算されてプロパティ名として使用されます。これは、プロパティの読み込みと設定に使用したことのある、<a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">プロパティアクセサー</a>構文のブラケット表記を彷彿とさせるものです。</p>\n<p>今では、オブジェクトリテラルでも同様な構文を使うことができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Computed property names (ES2015)</span>\n<span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span> <span class=\"token operator\">+</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> i<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span> <span class=\"token operator\">+</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> i<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span> <span class=\"token operator\">+</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> i\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>foo1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>foo2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>foo3<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span>\n\n<span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">[</span>items<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hello\"</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// A,B,C: \"Hello\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span><span class=\"token string\">\"A,B,C\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"Hello\"</span>\n\n<span class=\"token keyword\">let</span> param <span class=\"token operator\">=</span> <span class=\"token string\">'size'</span>\n<span class=\"token keyword\">let</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>param<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'mobile'</span> <span class=\"token operator\">+</span> param<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> param<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {size: 12, mobileSize: 4}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"スプレッドプロパティ","title":"スプレッドプロパティ","isH3":true,"content":"<p><a href=\"https://github.com/tc39/proposal-object-rest-spread\" class=\"external\" rel=\" noopener\">ECMAScript proposal の Rest/Spread プロパティ</a> （ステージ 4） では、オブジェクトリテラルに<a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">スプレッド</a>プロパティを追加します。 渡されたオブジェクトから新しいオブジェクトに独自の列挙可能なプロパティをコピーします。</p>\n<p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a> を使うよりも短いコードで <code>prototype</code> を除いた浅いコピーの作成や、マージしたオブジェクトの作成を書くことができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token string\">'baz'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">13</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> clonedObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj1 <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Object { foo: \"bar\", x: 42 }</span>\n\n<span class=\"token keyword\">let</span> mergedObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj1<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>obj2 <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Object { foo: \"baz\", x: 42, y: 13 }</span>\n</code></pre></div>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>Warning:</strong> <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a> は<a href=\"/ja/docs/Web/JavaScript/Reference/Functions/set\">セッター</a>を起動しますが、スプレッド構文は起動しません。</p>\n</div>"}},{"type":"prose","value":{"id":"プロトタイプの変更","title":"プロトタイプの変更","isH3":true,"content":"<p><code>__proto__: value</code> 形式、または <code>\"__proto__\": value</code> 形式でプロパティを定義しても、 <code>__proto__</code> という名をもつプロパティを生成しません。代わりに、与えられた値がオブジェクトまたは <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> の場合、その値に生成されたオブジェクトの <code>[[Prototype]]</code> を変更します（その値がオブジェクト、または null ではない場合、オブジェクトは変更されません）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">__proto__</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> protoObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> obj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string-property property\">'__proto__'</span><span class=\"token operator\">:</span> protoObj<span class=\"token punctuation\">}</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> protoObj<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> obj4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">__proto__</span><span class=\"token operator\">:</span> <span class=\"token string\">'not an object or null'</span><span class=\"token punctuation\">}</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>obj4<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>obj4<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'__proto__'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>オブジェクトリテラルでは、単一のプロトタイプの変更のみが許可されています。すなわち、複数のプロトタイプを変更すると構文エラーになります。</p>\n<p>「コロン」表記法を使用しないプロパティ定義は、プロトタイプの変更にはなりません。任意の他の名称を使用する同様の定義と同じように動作するプロパティ定義です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> __proto__ <span class=\"token operator\">=</span> <span class=\"token string\">'variable'</span>\n\n<span class=\"token keyword\">let</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>__proto__<span class=\"token punctuation\">}</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getPrototypeOf</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'__proto__'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token string\">'variable'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token function\">__proto__</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">.</span><span class=\"token function\">__proto__</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> obj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token string\">'__prot'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'o__'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">17</span><span class=\"token punctuation\">}</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-object-initializer","title":"ECMAScript Language Specification"}],"query":"javascript.operators.object_initializer"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.operators.object_initializer","dataURL":"/ja/docs/Web/JavaScript/Reference/Operators/Object_initializer/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">メンバー演算子</a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/get\"><code>get</code></a> / <a href=\"/ja/docs/Web/JavaScript/Reference/Functions/set\"><code>set</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Method_definitions\">メソッド定義</a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Lexical_grammar\">字句文法</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"解説","id":"解説"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"オブジェクトは new Object()、Object.create()、リテラル表記法 (初期化子表記法) を使用して初期化されます。オブジェクト初期化子はオブジェクトのプロパティ名と関連した値のゼロ以上のペアのリストで、中括弧 ({}) で囲まれます。","popularity":0.0009,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Object initializer","locale":"en-US","native":"English (US)"},{"title":"Initialisateur d'objet","locale":"fr","native":"Français"},{"title":"객체 초기자","locale":"ko","native":"한국어"},{"title":"Inicializador de Objeto","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Инициализация объектов","locale":"ru","native":"Русский"},{"title":"对象初始化","locale":"zh-CN","native":"中文 (简体)"},{"title":"Object initializer","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/javascript/reference/operators/object_initializer","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/operators/object_initializer/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Operators","title":"式と演算子"},{"uri":"/ja/docs/Web/JavaScript/Reference/Operators/Object_initializer","title":"オブジェクト初期化子"}],"pageTitle":"オブジェクト初期化子 - JavaScript | MDN","noIndexing":false}}