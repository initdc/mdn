{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"演算子の優先順位","mdn_url":"/ja/docs/Web/JavaScript/Reference/Operators/Operator_Precedence","locale":"ja","native":"日本語","sidebarHTML":"\n <ol>\n  <li><a href=\"/ja/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Tutorials\"><strong>チュートリアル:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>初級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript の基礎</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/First_steps\">JavaScript の第一歩</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks\">JavaScript の構成要素</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Objects\">JavaScript オブジェクト入門</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>JavaScript ガイド</summary>\n      <ol>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Introduction\">入門編</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Grammar_and_Types\">文法とデータ型</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">制御フローとエラー処理</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Loops_and_iteration\">ループとイテレーター</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Functions\">関数</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Expressions_and_Operators\">式と演算子</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Numbers_and_dates\">数と日付</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Text_formatting\">テキスト処理</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Regular_Expressions\">正規表現</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Indexed_collections\">インデックス付きコレクション</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Keyed_collections\">キー付きコレクション</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Working_with_Objects\">オブジェクトを利用する</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">オブジェクトモデルの詳細</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Using_promises\">プロミスの使用</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Iterators_and_generators\">イテレーターとジェネレーター</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Meta_programming\">メタプログラミング</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Modules\">JavaScript モジュール</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>中級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">クライアントサイド JavaScript フレームワーク</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs\">クライアントサイド Web API</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">JavaScript 「再」入門</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Data_structures\">JavaScript のデータ構造</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Equality_comparisons_and_sameness\">等値比較と同一性</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Closures\">クロージャ</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>上級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">継承とプロトタイプチェーン</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode\">Strict モード</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Typed_arrays\">JavaScript 型付き配列</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Memory_Management\">メモリー管理</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/EventLoop\">並列モデルとイベントループ</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ja/docs/Web/JavaScript/Reference\">リファレンス</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>組み込みオブジェクト</summary>\n        <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>式と演算子</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>文と宣言</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>関数</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>クラス</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>その他</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript 技術概説</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Lexical_grammar\">字句文法</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Data_structures\">JavaScript のデータ構造</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">プロパティの列挙可能性と所有権</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Iteration_protocols\">反復処理プロトコル</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode\">Strict モード</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">strict モードへの移行</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Template_literals\">テンプレート文字列</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">廃止予定の機能</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>演算子の優先順位</strong>は、演算子が互いにどのように解釈されるかを決定します。優先度の高い演算子は、優先度の低い演算子のオペランドになります。</p><iframe class=\"interactive\" height=\"490\" src=\"https://interactive-examples.mdn.mozilla.net/pages/js/expressions-operatorprecedence.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"優先度と結合性","title":"優先度と結合性","isH3":false,"content":"<p>以下の表現で記述できる式を考えてみましょう。なお、<code>OP1</code> と <code>OP2</code> は演算子に置き換わります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>a <span class=\"token constant\">OP1</span> b <span class=\"token constant\">OP2</span> c\n</code></pre></div>\n<p><code>OP1</code> と <code>OP2</code> の優先順位（下記の一覧表を参照）が異なる場合は、優先順位の高い演算子が先に実行され、結合性は関係ありません。コードの中で加算が先に書かれているにもかかわらず、乗算の方が加算よりも優先順位が高く、先に実行されていることを確認してください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 23 を出力</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 括弧の優先順位が高いので、23 を出力</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 括弧が順位を変更するので 26 を出力</span>\n</code></pre></div>\n<p>左結合（左から右）は <code>(a OP1 b) OP2 c</code> のように処理されることであり、右結合（右から左）は <code>a OP1 (b OP2 c)</code> のように解釈されることです。代入演算子は右結合なので、このように書くことができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>a <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// a = (b = 5); と書いたのと同じ</span>\n</code></pre></div>\n<p>これで、<code>a</code> と <code>b</code> が 5 の値を得るという期待通りの結果を得ることができます。これは代入演算子が代入した値を返すためです。まず <code>b</code> に 5 が設定されます。そして <code>a</code> にも、代入演算子の右オペランドである <code>b = 5</code> が返す 5 が設定されるのです。</p>\n<p>他の例として、べき乗演算子だけが右結合性を持ちますが、他の算術演算子は左結合性を持ちます。興味深いのは、結合性や優先順位に関係なく、評価の順序は常に左から右になることです。</p>\n<table class=\"standard-table\">\n  <tbody>\n    <tr>\n      <td>コード</td>\n      <td>出力結果</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Evaluating the \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" side\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 除算演算子 (/) の場合</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"left\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n      </td>\n      <td>\n        <div class=\"code-example\"><pre class=\"brush: plain notranslate\">Evaluating the left side\nEvaluating the right side\n3\n</pre></div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Evaluating the \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" side\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// べき乗演算子 (**) の場合</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"left\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n      </td>\n      <td>\n        <div class=\"code-example\"><pre class=\"brush: plain notranslate\">Evaluating the left side\nEvaluating the right side\n8</pre></div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<p>結合性の違いは、同じ優先順位の演算子が複数存在する場合に現れます。上の例のように演算子が一つだけの場合や、演算子の優先順位が異なる場合は、結合性は出力に影響を与えません。下の例では、同じ演算子が複数使われている場合に、結合性が出力結果にどのような影響を与えるかを見てみましょう。</p>\n<table class=\"standard-table\">\n  <tbody>\n    <tr>\n      <td>コード</td>\n      <td>出力結果</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Evaluating the \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" side\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 除算演算子 (/) の場合</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"left\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"middle\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n      </td>\n      <td>\n        <div class=\"code-example\"><pre class=\"brush: plain notranslate\">Evaluating the left side\nEvaluating the middle side\nEvaluating the right side\n1\n</pre></div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Evaluating the \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" side\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// べき乗演算子 (**) の場合</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"left\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"middle\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n      </td>\n      <td>\n        <div class=\"code-example\"><pre class=\"brush: plain notranslate\">Evaluating the left side\nEvaluating the middle side\nEvaluating the right side\n512\n</pre></div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Evaluating the \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" side\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 左と中央の間のべき乗を括弧で囲んだ場合</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"left\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"middle\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n      </td>\n      <td>\n        <div class=\"code-example\"><pre class=\"brush: plain notranslate\">Evaluating the left side\nEvaluating the middle side\nEvaluating the right side\n64</pre></div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<p>上記のコードを見てください。<code>6 / 3 / 2</code> は、除算が左結合なので <code>(6 / 3) / 2</code> と同じになります。一方で、べき乗は右結合なので、<code>2 ** 3 ** 2</code> は <code>2 ** (3 ** 2)</code> と同じになります。したがって、 <code>(2 ** 3) ** 2</code> とすると上記の表にある通り、演算順序が変わって結果が 64 になります。</p>\n<p>優先順位は結合度よりも優先されることを忘れないでください。そのため、割り算とべき乗を交ぜた場合、べき乗は割り算よりも先に計算されます。例えば <code>2 ** 3 / 3 ** 2</code> の結果は 0.8888888888888888 となります。これは <code>(2 ** 3) / (3 ** 2)</code> と同じだからです。</p>"}},{"type":"prose","value":{"id":"グループ化と短絡評価の注意","title":"グループ化と短絡評価の注意","isH3":true,"content":"<p>下記の表では、<strong>グループ化</strong>が最上位の優先順位を持つものとして挙げられています。しかし、特に短絡が発生する場合は、グループ化記号 <code>( … )</code> の中の式が最初に評価されるとは限りません。</p>\n<p>短絡評価は、条件付き評価を表す用語です。例えば、<code>a &amp;&amp; (b + c)</code> という式において、<code>a</code> が<a href=\"/ja/docs/Glossary/Falsy\">偽値</a>である場合、従属式である <code>(b + c)</code> は括弧で囲まれていても評価されません。この論理的分離演算子 (\"OR\") は「短絡的」といえるでしょう。論理的分離演算子の他にも、ほかに短絡が発生する演算子には、論理的結合 (\"AND\") 演算子、Null 合体演算子、オプション連鎖演算子、条件演算子があります。以下に例を示します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>a <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 最初に `a` を評価し、 `a` が「真値」であれば `a` を出力</span>\na <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">&lt;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 最初に `a` を評価し、 `a` が「偽値」であれば `a` を出力</span>\na <span class=\"token operator\">??</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">||</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 最初に `a` を評価し、 `a` が `null` または `undefined` でなければ `a` を出力</span>\na<span class=\"token operator\">?.</span>b<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 最初に `a` を評価し、 `a` が `null` または `undefined` であれば `undefined` を出力</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">3</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token number\">2</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span>\n<span class=\"token comment\">// true を返す</span>\n\n<span class=\"token number\">3</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span>\n<span class=\"token comment\">// 結果は false となる。3 &gt; 2 は true であり、true は</span>\n<span class=\"token comment\">// 不等号で 1 に変換されるため、true &gt; 1 は 1 &gt; 1 となり、</span>\n<span class=\"token comment\">// false となる。(3 &gt; 2) &gt; 1 のように括弧を付けると明確になる。</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"一覧表","title":"一覧表","isH3":false,"content":"<p>以下の表は優先順位の最も高いもの (19) から最も低いもの (1) の順に並べられています。</p>\n<p>なお、<a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">スプレッド構文</a>はこの表から除外しています。 — 理由は <a href=\"https://stackoverflow.com/a/48656377\" class=\"external\" rel=\" noopener\">Stack Overflow の回答</a>を引用します。「<a href=\"https://stackoverflow.com/q/44934828/1048572\" class=\"external\" rel=\" noopener\">スプレッド構文は演算子ではなく</a>、優先度はありません。これは配列リテラルと関数呼び出し（およびオブジェクトリテラル）の構文の一部です。」</p>\n<table class=\"fullwidth-table\">\n  <tbody>\n    <tr>\n      <th>優先順位</th>\n      <th>演算子の種類</th>\n      <th>結合性</th>\n      <th>演算子</th>\n    </tr>\n    <tr>\n      <td>19</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Grouping\">グループ化</a></td>\n      <td>なし</td>\n      <td><code>( … )</code></td>\n    </tr>\n    <tr>\n      <td rowspan=\"5\">18</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Property_Accessors#dot_notation\">メンバーへのアクセス</a></td>\n      <td>左から右</td>\n      <td><code>… . …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Property_Accessors#bracket_notation\">計算値によるメンバーへのアクセス</a></td>\n      <td>左から右</td>\n      <td><code>… [ … ]</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a> (引数リスト付き)</td>\n      <td>なし</td>\n      <td><code>new … ( … )</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Guide/Functions\">関数呼び出し</a></td>\n      <td>左から右</td>\n      <td><code>… ( <var>… </var>)</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">オプション連鎖</a></td>\n      <td>左から右</td>\n      <td><code>?.</code></td>\n    </tr>\n    <tr>\n      <td>17</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\"><code>new</code></a> (引数リストなし)</td>\n      <td>右から左</td>\n      <td><code>new …</code></td>\n    </tr>\n    <tr>\n      <td rowspan=\"2\">16</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators#%E3%82%A4%E3%83%B3%E3%82%AF%E3%83%AA%E3%83%A1%E3%83%B3%E3%83%88%E3%81%A8%E3%83%87%E3%82%AF%E3%83%AA%E3%83%A1%E3%83%B3%E3%83%88\">後置インクリメント</a></td>\n      <td rowspan=\"2\">なし</td>\n      <td><code>… ++</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators#%E3%82%A4%E3%83%B3%E3%82%AF%E3%83%AA%E3%83%A1%E3%83%B3%E3%83%88%E3%81%A8%E3%83%87%E3%82%AF%E3%83%AA%E3%83%A1%E3%83%B3%E3%83%88\">後置デクリメント</a></td>\n      <td><code>… --</code></td>\n    </tr>\n    <tr>\n      <td rowspan=\"10\">15</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">論理 NOT (!)</a></td>\n      <td rowspan=\"10\">右から左</td>\n      <td><code>! …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">ビットごとの NOT (~)</a></td>\n      <td><code>~ …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unary_plus\">単項 +</a></td>\n      <td><code>+ …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unary_negation\">単項 -</a></td>\n      <td><code>- …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators#インクリメントとデクリメント\">前置インクリメント</a></td>\n      <td><code>++ …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators#インクリメントとデクリメント\">前置デクリメント</a></td>\n      <td><code>-- …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/typeof\"><code>typeof</code></a></td>\n      <td><code>typeof …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/void\"><code>void</code></a></td>\n      <td><code>void …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/delete\"><code>delete</code></a></td>\n      <td><code>delete …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/await\"><code>await</code></a></td>\n      <td><code>await …</code></td>\n    </tr>\n    <tr>\n      <td>14</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Exponentiation\">べき乗 (**)</a></td>\n      <td>右から左</td>\n      <td><code>… ** …</code></td>\n    </tr>\n    <tr>\n      <td rowspan=\"3\">13</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Multiplication\">乗算 (*)</a></td>\n      <td rowspan=\"3\">左から右</td>\n      <td><code>… * …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Division\">除算 (/)</a></td>\n      <td><code>… / …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Remainder\">剰余 (%)</a></td>\n      <td><code>… % …</code></td>\n    </tr>\n    <tr>\n      <td rowspan=\"2\">12</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Addition\">加算 (+)</a></td>\n      <td rowspan=\"2\">左から右</td>\n      <td><code>… + …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Subtraction\">減算(-)</a></td>\n      <td><code>… - …</code></td>\n    </tr>\n    <tr>\n      <td rowspan=\"3\">11</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Left_shift\">左ビットシフト (&lt;&lt;)</a></td>\n      <td rowspan=\"3\">左から右</td>\n      <td><code>… &lt;&lt; …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Right_shift\">右ビットシフト</a></td>\n      <td><code>… &gt;&gt; …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">符号なし右ビットシフト (&gt;&gt;&gt;)</a></td>\n      <td><code>… &gt;&gt;&gt; …</code></td>\n    </tr>\n    <tr>\n      <td rowspan=\"6\">10</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Less_than\">小なり (&lt;)</a></td>\n      <td rowspan=\"6\">左から右</td>\n      <td><code>… &lt; …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">小なりイコール (&lt;=)</a></td>\n      <td><code>… &lt;= …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Greater_than\">大なり (&gt;)</a></td>\n      <td><code>… &gt; …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">大なりイコール (&gt;=)</a></td>\n      <td><code>… &gt;= …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/in\"><code>in</code></a></td>\n      <td><code>… in …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/instanceof\"><code>instanceof</code></a></td>\n      <td><code>… instanceof …</code></td>\n    </tr>\n    <tr>\n      <td rowspan=\"4\">9</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Equality\">等価 (==)</a></td>\n      <td rowspan=\"4\">左から右</td>\n      <td><code>… == …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Inequality\">不等価 (!=)</a></td>\n      <td><code>… != …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Strict_equality\">厳密等価 (===)</a></td>\n      <td><code>… === …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">厳密不等価 (!==)</a></td>\n      <td><code>… !== …</code></td>\n    </tr>\n    <tr>\n      <td>8</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">ビット単位 AND (&amp;)</a></td>\n      <td>左から右</td>\n      <td><code>… &amp; …</code></td>\n    </tr>\n    <tr>\n      <td>7</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">ビット単位 XOR (^)</a></td>\n      <td>左から右</td>\n      <td><code>… ^ …</code></td>\n    </tr>\n    <tr>\n      <td>6</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">ビット単位 OR (|)</a></td>\n      <td>左から右</td>\n      <td><code>… | …</code></td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_AND\">論理 AND (&amp;&amp;)</a></td>\n      <td>左から右</td>\n      <td><code>… &amp;&amp; …</code></td>\n    </tr>\n    <tr>\n      <td rowspan=\"2\">4</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_OR\">論理 OR (||)</a></td>\n      <td>左から右</td>\n      <td><code>… || …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Null 合体 (??)</a></td>\n      <td>左から右</td>\n      <td><code>… ?? …</code></td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">条件（三項）演算子</a></td>\n      <td>右から左</td>\n      <td><code>… ? … : …</code></td>\n    </tr>\n    <tr>\n      <td rowspan=\"18\">2</td>\n      <td rowspan=\"16\"><a href=\"/ja/docs/Web/JavaScript/Reference/Operators#assignment_operators\">代入</a></td>\n      <td rowspan=\"16\">右から左</td>\n      <td><code>… = …</code></td>\n    </tr>\n    <tr>\n      <td><code>… += …</code></td>\n    </tr>\n    <tr>\n      <td><code>… -= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… **= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… *= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… /= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… %= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… &lt;&lt;= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… &gt;&gt;= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… &gt;&gt;&gt;= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… &amp;= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… ^= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… |= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… &amp;&amp;= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… ||= …</code></td>\n    </tr>\n    <tr>\n      <td><code>… ??= …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield\"><code>yield</code></a></td>\n      <td rowspan=\"2\">右から左</td>\n      <td><code>yield …</code></td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield*\"><code>yield*</code></a></td>\n      <td><code>yield* …</code></td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">カンマ / シーケンス</a></td>\n      <td>左から右</td>\n      <td><code>… , …</code></td>\n    </tr>\n  </tbody>\n</table>"}}],"toc":[{"text":"優先度と結合性","id":"優先度と結合性"},{"text":"例","id":"例"},{"text":"一覧表","id":"一覧表"}],"summary":"演算子の優先順位は、演算子が互いにどのように解釈されるかを決定します。優先度の高い演算子は、優先度の低い演算子のオペランドになります。","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Operator precedence","locale":"en-US","native":"English (US)"},{"title":"Precedencia de operadores","locale":"es","native":"Español"},{"title":"Précédence des opérateurs","locale":"fr","native":"Français"},{"title":"연산자 우선순위","locale":"ko","native":"한국어"},{"title":"Precedência de Operadores","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Приоритет операторов","locale":"ru","native":"Русский"},{"title":"运算符优先级","locale":"zh-CN","native":"中文 (简体)"},{"title":"運算子優先序","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/javascript/reference/operators/operator_precedence","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/javascript/reference/operators/operator_precedence/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/ja/docs/Web/JavaScript/Reference","title":"JavaScript リファレンス"},{"uri":"/ja/docs/Web/JavaScript/Reference/Operators","title":"式と演算子"},{"uri":"/ja/docs/Web/JavaScript/Reference/Operators/Operator_Precedence","title":"演算子の優先順位"}],"pageTitle":"演算子の優先順位 - JavaScript | MDN","noIndexing":false}}