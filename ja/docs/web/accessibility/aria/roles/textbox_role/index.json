{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ARIA: textbox ロール","mdn_url":"/ja/docs/Web/Accessibility/ARIA/Roles/textbox_role","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>textbox</code> ロールは、自由形式テキストの入力を可能にする要素を識別するために使用されます。 可能であれば、このロールを使用するのではなく、単一行入力の場合は <a href=\"/ja/docs/Web/HTML/Element/input/text\"><code>type=\"text\"</code></a> の <a href=\"/ja/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> 要素を使用し、複数行入力の場合は <a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> 要素を使用してください。</p>"}},{"type":"prose","value":{"id":"説明","title":"説明","isH3":false,"content":"<p>要素に <code>textbox</code> ロールがある場合、ブラウザーはアクセス可能なテキストボックスイベントを支援技術に送信し、ユーザーにそのことを通知できます。</p>\n<p>デフォルトは単一行入力で、<kbd>Return</kbd> や <kbd>Enter</kbd> はフォームを送信します。 この場合、 <code>type=\"text\"</code> の HTML の <a href=\"/ja/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> を使用することをお勧めします。 HTML の <a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> のように改行をサポートする複数行のテキストボックスを作成するには、<code>aria-multiline=\"true\"</code> を設定します。 HTML の <code>contenteditable</code> 属性を含めると、テキストノードが確実に編集可能になります。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!-- 単純なテキスト入力フィールド --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txtboxLabel<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>5桁の郵便番号を入力してください<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>textbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">contenteditable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-placholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5-digit zipcode<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-labeledby</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txtboxLabel<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token comment\">&lt;!-- 複数行のテキスト領域 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txtboxMultilineLabel<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>記事のタグを入力してください<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>textbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">contenteditable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-multiline</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n   <span class=\"token attr-name\">aria-labeledby</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txtboxMultilineLabel<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-required</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>意味論的な要素はより簡潔であり、テキストボックス機能をサポートするために JavaScript を必要としません。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txtbox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>5桁の郵便番号を入力してください<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5-digit zipcode<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txtbox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token comment\">&lt;!-- 複数行のテキスト領域 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txtboxMultiline<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>記事のタグを入力してください<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>lable</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>txtboxMultiline<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>テキストフィールドが読み取り専用の場合、要素に対して <code>aria-readonly=\"true\"</code> と設定することでこれを示します。</p>"}},{"type":"prose","value":{"id":"関連する_aria_のプロパティ","title":"関連する ARIA のプロパティ","isH3":true,"content":"<dl>\n  <dt id=\"aria-activedescendent\"><code>aria-activedescendent</code> 属性</dt>\n  <dd>\n    <p>その値として、ID は DOM のフォーカスを持つ要素の子孫であるか、または <code>aria-owns</code> 属性で指定された論理的子孫であり、<a href=\"/ja/docs/Web/Accessibility/ARIA/Roles/combobox\" class=\"page-not-created\" title=\"This is a link to an unwritten page\"><code>combobox</code></a> などの複合ウィジェットの一部であるときに、その要素にフォーカスがあるときを示します。 たとえば、コンボボックスでは、テキストボックスにフォーカスが残ることがありますが、<code>textbox</code> 要素の <code>aria-activedescendant</code> の値は、テキストボックスによって制御されるポップアップリストボックスの子孫を参照します。 この属性は、フォーカスが変更されるとプログラムで更新する必要があります。</p>\n  </dd>\n  <dt id=\"aria-autocomplete\"><code>aria-autocomplete</code> 属性</dt>\n  <dd>\n    <p>フィールドへのユーザーの入力が、意図した値の予測の表示をトリガーできるかどうか、およびその方法を示します。 これは以下の値をサポートしています。</p>\n    <ul>\n      <li><code>inline</code>: 予測されたテキストがキャレットの後に挿入されます。</li>\n      <li><code>list</code>: 予測されたテキストは、値の集まりとして提示されます。</li>\n      <li><code>both</code>: 予測されたテキストは、値の集まりとして提示され、補完に必要なテキストの 1 つの値がキャレットの後に挿入されます。</li>\n      <li><code>none</code>（デフォルト）: 予測されたテキストは提供されません。</li>\n    </ul>\n    <p><code>list</code> または <code>both</code> が設定されている場合は、<code>aria-controls</code> 属性と <code>aria-haspopup</code> 属性も含める必要があります。 <code>aria-controls</code> の値は、提案値のリストを含む要素の ID です。 さらに、テキストボックスまたは <code>combobox</code> ロールを含む包含要素のいずれかに、提案値のリストを含む要素のロールに一致する <code>aria-haspopup</code> の値を持ちます。</p>\n  </dd>\n  <dt id=\"aria-multiline\"><code>aria-multiline</code> 属性</dt>\n  <dd>\n    <p><code>aria-multiline=\"true\"</code> が設定されている場合、支援技術は、テキストボックスが複数行入力をサポートしていることをユーザーに知らせます。</p>\n    <p><kbd>Enter</kbd></p>\n    <p>や</p>\n    <p><kbd>Return</kbd></p>\n    <p>はフォームを送信するのではなく改行を作成します。 ARIA は要素の動作を変更しません。 むしろ、この機能は開発者によって制御されなければなりません。 <code>false</code> が設定されている場合、または属性が省略されていて <code>false</code> がデフォルトの場合、ユーザーはコントロールが単一行のテキストボックスであり、</p>\n    <p><kbd>Enter</kbd></p>\n    <p>や</p>\n    <p><kbd>Return</kbd></p>\n    <p>がフォームを送信することを期待しています。</p>\n  </dd>\n  <dt id=\"aria-placeholder\"><code>aria-placeholder</code> 属性</dt>\n  <dd>\n    <p>テキストフィールドに何を入力するかについてのヒント（単語またはフレーズ）をユーザーに示します。 ヒントは、サンプル値または期待されるフォーマットの簡単な説明であるべきです。 この情報は、ラベルの代用として使用するべきではありません。 ラベルはフォーカス可能で永続的で、どのような情報が期待されているかを示し、プレースホルダーのテキストは期待値を一時的に示唆しているだけで、誤って実装するとアクセシビリティが低下する可能性があります。 プレースホルダーは、コントロールが最初にフォーカスを受け取ったときやユーザーが以前に入力した値を削除したときなど、コントロールの値が空の文字列のときに表示するべきです。 <code>aria-placeholder</code> を使用する代わりに、意味論的な <code>&lt;input type=\"text\"&gt;</code> や <code>&lt;textarea&gt;</code> に <code>placeholder</code> 属性を使用します。</p>\n  </dd>\n  <dt id=\"aria-readonly\"><code>aria-readonly</code> 属性</dt>\n  <dd>\n    <p>ユーザーがテキストフィールドの値を変更できないことを示します。 <code>aria-readonly</code> を使用する代わりに、意味論的な <code>&lt;input type=\"text\"&gt;</code> や <code>&lt;textarea&gt;</code> に <code>readonly</code> 属性を使用します。</p>\n  </dd>\n  <dt id=\"aria-required\"><code>aria-required</code> 属性</dt>\n  <dd>\n    <p>フィールドが送信される前にフィールドに値を指定する必要があることを示します。 <code>aria-required</code> を使用する代わりに、意味論的な <code>&lt;input type=\"text\"&gt;</code> や <code>&lt;textarea&gt;</code> に <code>required</code> 属性を使用します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"キーボードインタラクション","title":"キーボードインタラクション","isH3":true,"content":"<p>単一行での使用（<code>aria-multiline</code> が <code>false</code> または使用されていない場合）では、<kbd>Return</kbd> キーや <kbd>Enter</kbd> キーがフォームを送信します。 複数行での使用（<code>aria-multiline</code> が <code>true</code> の場合）では、<kbd>Return</kbd> キーや <kbd>Enter</kbd> キーを押すと改行が挿入されます。</p>"}},{"type":"prose","value":{"id":"必要な_javascript_機能","title":"必要な JavaScript 機能","isH3":true,"content":"<p>すべてのプロパティとステートに関連するすべての機能を維持する必要があります。 また、単一行のテキストボックスにおいて <kbd>Enter</kbd> や <kbd>Return</kbd> でフォームを送信する必要があります。</p>\n<dl>\n  <dt id=\"フォーカスイベントハンドラと_aria-activedescendent_属性\">フォーカスイベントハンドラと aria-activedescendent 属性</dt>\n  <dd>\n    <p>テキストボックスとリストボックスで構成されるコンボボックスなどの複合ウィジェットを実装する場合は、ハンドラを使用して <code>aria-activedescendent</code> 属性を管理する必要があります。 この手法を使用する前に、ターゲットとするブラウザーが現在サポートしていることを確認してください。 詳細については、<a href=\"https://www.w3.org/TR/wai-aria/#aria-activedescendant\" class=\"external\" rel=\" noopener\">aria-descendent の仕様</a>（英語）を参照してください。</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> ARIA の <code>textbox</code> ロールの代わりに <code>type=\"text\"</code> の <a href=\"/ja/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> 要素、または <a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> 要素を使用する方が良い方法です。 どちらの意味論的な要素を使用する場合でも、ARIA の <code>textbox</code> ロールは必要ありません。 <a href=\"https://www.w3.org/TR/aria-in-html/\" class=\"external\" rel=\" noopener\">HTML で ARIA を使用する場合の注意</a>（英語）を参照してください。</p>\n</div>"}},{"type":"prose","value":{"id":"ユーザーエージェントと支援技術への影響","title":"ユーザーエージェントと支援技術への影響","isH3":false,"content":"<p><code>textbox</code> ロールが要素に追加されるか、そのような要素が可視になると、ユーザーエージェントは以下を行うべきです。</p>\n<ul>\n  <li>オペレーティングシステムのアクセシビリティ API で <code>textbox</code> ロールを持つものとして要素を公開します。</li>\n  <li>オペレーティングシステムのアクセシビリティ API をサポートしている場合は、アクセシビリティ API を使用してアクセス可能なテキストボックスイベントを発生させます。</li>\n</ul>\n<p>支援技術製品は、そのようなイベントをリスンし、それに応じてユーザーに以下を通知するするべきです。</p>\n<ul>\n  <li>スクリーンリーダーは、フォーカスが最初にテキストボックスに着くと、そのラベルとロールをアナウンスするべきです。 コンテンツも含まれている場合は、これを通常のテキストボックスの場合と同様にアナウンスするべきです。</li>\n  <li>スクリーン拡大鏡でテキストボックスが拡大されることがあります。</li>\n</ul>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 支援技術がこの手法をどのように扱うべきかについての意見は異なる場合があります。 上記の情報は、これらの意見の 1 つで、したがって規範的ではありません。</p>\n</div>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"例_1_単一行入力の_html_コードにロールを追加する","title":"例 1: 単一行入力の HTML コードにロールを追加する","isH3":true,"content":"<p>以下のスニペットは、<code>textbox</code> ロールが HTML ソースコードにどのように直接追加されるかを示しています。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>textbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">contenteditable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例_2_複数行入力の_html_コードにロールを追加する","title":"例 2: 複数行入力の HTML コードにロールを追加する","isH3":true,"content":"<p>以下のスニペットは、<code>textbox</code> ロールが HTML ソースコードにどのように直接追加されるかを示しています。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>textbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">contenteditable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-multiline</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ベストプラクティス","title":"ベストプラクティス","isH3":false,"content":"<ul>\n  <li>このロールが適用される HTML 要素に <code>contenteditable=\"true\"</code> 属性を必ず追加してください。 <code>aria-readonly</code> を <code>true</code> に設定した場合でもそうします。 このようにして、読み取り専用でない場合は、コンテンツを編集可能にすることを通知します。</li>\n</ul>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/Accessibility/ARIA/Roles/searchbox\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">ARIA: search ロール</a></li>\n</ul>"}}],"toc":[{"text":"説明","id":"説明"},{"text":"ユーザーエージェントと支援技術への影響","id":"ユーザーエージェントと支援技術への影響"},{"text":"例","id":"例"},{"text":"ベストプラクティス","id":"ベストプラクティス"},{"text":"関連情報","id":"関連情報"}],"summary":"textbox ロールは、自由形式テキストの入力を可能にする要素を識別するために使用されます。 可能であれば、このロールを使用するのではなく、単一行入力の場合は type=\"text\" の <input> 要素を使用し、複数行入力の場合は <textarea> 要素を使用してください。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ARIA: textbox role","locale":"en-US","native":"English (US)"},{"title":"Utiliser le rôle textbox","locale":"fr","native":"Français"}],"source":{"folder":"ja/web/accessibility/aria/roles/textbox_role","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/accessibility/aria/roles/textbox_role/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Accessibility","title":"アクセシビリティ"},{"uri":"/ja/docs/Web/Accessibility/ARIA","title":"ARIA"},{"uri":"/ja/docs/Web/Accessibility/ARIA/Roles","title":"WAI-ARIA ロール"},{"uri":"/ja/docs/Web/Accessibility/ARIA/Roles/textbox_role","title":"ARIA: textbox ロール"}],"pageTitle":"ARIA: textbox ロール - アクセシビリティ | MDN","noIndexing":false}}