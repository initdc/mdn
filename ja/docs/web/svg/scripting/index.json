{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"スクリプティング","mdn_url":"/ja/docs/Web/SVG/Scripting","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>ブラウザーの既定の動作を <code>evt.preventDefault( )</code> メソッドで上書きしたり、イベントリスナーを <code>element.addEventListener(event, function, useCapture)</code> という構文でオブジェクトに追加したり、要素のプロパティを <code>svgElement.style.setProperty(\"fill-opacity\", \"0.0\", \"\")</code> などで設定することが可能です。 3 つの引数がすべてプロパティを設定していることに注意してください。</p>"}},{"type":"prose","value":{"id":"イベントコードの既定の挙動を防ぐ","title":"イベントコードの既定の挙動を防ぐ","isH3":true,"content":"<p>ドラッグ＆ドロップのコードを書いていると、ページのテキストをドラッグ中に誤って付随的に選択してしまうことがあります。もしくは自分のコードの中でバックスペースキーを使いたい場合、バックスペースキーを押下したときに前のページへ戻るという、ブラウザーの既定の振る舞いを上書きしたくなるでしょう。このようなことは、 <code>evt.preventDefault()</code> メソッドで実現することができます。</p>"}},{"type":"prose","value":{"id":"オブジェクトに_eventlistener_を使う","title":"オブジェクトに <code>eventListener</code> を使う","isH3":true,"content":"<p><code>addEventListener()</code> や <code>removeEventListener()</code> は、対話的な SVG を書くときとても勇湯王です。これらのメソッドの第二引数として、 <code>handleEvent</code> インターフェイスを実装するオブジェクトを渡すことができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myRect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message<span class=\"token operator\">=</span>message\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rect<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createElementNS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.w3.org/2000/svg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"rect\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">setAttributeNS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">setAttributeNS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">setAttributeNS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">setAttributeNS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span>\n  document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">handleEvent</span><span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"click\"</span><span class=\"token operator\">:</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","titleAsText":"オブジェクトに eventListener を使う"}},{"type":"prose","value":{"id":"文書間のスクリプティング_-_埋め込み_svg_の参照","title":"文書間のスクリプティング - 埋め込み SVG の参照","isH3":false,"content":"<p>HTML 内で SVG を使用する場合、Adobe の SVG Viewer 3.0 は自動的に <code>svgDocument</code> という SVG 文書を指すウィンドウのプロパティを含みます。これは、Mozilla のネイティブ SVG 実装には当てはまりません。したがって、 <code>window.svgDocument</code> を使用しても Mozilla ではうまくいきません。その代わりに、</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> svgDoc<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span>embeds<span class=\"token punctuation\">[</span><span class=\"token string\">\"name_of_svg\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSVGDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>を使用して埋め込まれた SVG 文書の参照を取得することができます。</p>\n<p>SVG 文書を表す <a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a> にアクセスするには、以下のように <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLIFrameElement/contentDocument\"><code>HTMLIFrameElement.contentDocument</code> <small>(en-US)</small></a> （文書が <a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> で表現されている場合）または <a href=\"/ja/docs/Web/API/HTMLObjectElement/contentDocument\"><code>HTMLObjectElement.contentDocument</code></a> （文書が <a href=\"/ja/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a> 要素で表現されている場合）に注目するとよいでしょう。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> svgDoc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iframe_element\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>contentDocument<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>さらに、<a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, <a href=\"/ja/docs/Web/HTML/Element/embed\"><code>&lt;embed&gt;</code></a>, <a href=\"/ja/docs/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a> の各要素は <code>getSVGDocument()</code> というメソッドを提供しており、要素の埋め込み SVG を表す <a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a> または要素が SVG 文書を表さない場合には <code>null</code> を返します。</p>\n<p>また、 <code>document.getElementById(\"svg_elem_name\").getSVGDocument()</code> を用いても同じ結果を得ることができます。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>SVGDocument</code> インターフェイスに言及しているドキュメントを見かけることがあります。 SVG 2 より前は、 SVG 文書はこのインターフェイスを使って表現されていました。しかし、現在では SVG 文書は代わりに <a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a> インターフェイスを用いて表現されています。</p>\n</div>"}},{"type":"prose","value":{"id":"文書をまたがるスクリプティング_-_javascript_関数の呼び出し","title":"文書をまたがるスクリプティング - JavaScript 関数の呼び出し","isH3":true,"content":"<p>HTML 文書に埋め込まれた SVG ファイルから HTML ファイルの中にある JavaScript 関数を呼び出すとき、その関数を参照するには <code>parent.functionname()</code> を使うべきです。Adobe SVG Viewer プラグインは <code>functionname()</code> の利用を許可していますが、このようなことを行うには適していません。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <a href=\"https://web.archive.org/web/20100223210744/http://wiki.svg.org/Inter-Document_Communication\" class=\"external\" rel=\" noopener\">SVG wiki</a> によると、 JavaScript の変数 <code>\"parent\"</code> は Adobe の SVG バージョン 6 プレビュープラグインでは壊れているとのことです。回避策として、<code>\"parent\"</code>の代わりに<code>\"top\"</code>を使用することが提案されています。このプラグインはベータ版なので、おそらく無視しても大丈夫でしょう。</p>\n</div>\n<p>更なる情報といくつかの例は <a href=\"https://web.archive.org/web/20100223210744/http://wiki.svg.org/Inter-Document_Communication\" class=\"external\" rel=\" noopener\">SVG wiki inter-document scripting page</a> で見つかります。</p>"}},{"type":"prose","value":{"id":"setproperty_には_3_つの引数がある","title":"<code>setProperty</code> には 3 つの引数がある","isH3":true,"content":"<p><code>svgElement.style.setProperty(\"fill-opacity\", \"0.0\")</code> と関数を呼び出すと、 Mozilla では DOMException が <code>SYNTAX ERR</code> で発生します。この挙動は W3C によって DOM Level 2 Style 仕様の中で定められています。 <code>setProperty</code> 関数は 3 つの引数を持つ関数として定義されています。上記のものは、 <code>'svgElement.style.setProperty(\"fill-opacity\", \"0.0\", \"\")'</code> で置き換えることができ、これが標準に準拠しています。</p>","titleAsText":"setProperty には 3 つの引数がある"}},{"type":"prose","value":{"id":"リンク","title":"リンク","isH3":true,"content":"<p><a href=\"https://web.archive.org/web/20100212202713/http://wiki.svg.org/Main_Page#Scripting_and_Programming\" class=\"external\" rel=\" noopener\">SVG wiki on Scripting and Programming</a></p>"}}],"toc":[{"text":"文書間のスクリプティング - 埋め込み SVG の参照","id":"文書間のスクリプティング_-_埋め込み_svg_の参照"}],"summary":"ブラウザーの既定の動作を evt.preventDefault( ) メソッドで上書きしたり、イベントリスナーを element.addEventListener(event, function, useCapture) という構文でオブジェクトに追加したり、要素のプロパティを svgElement.style.setProperty(\"fill-opacity\", \"0.0\", \"\") などで設定することが可能です。 3 つの引数がすべてプロパティを設定していることに注意してください。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Scripting","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/svg/scripting","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/svg/scripting/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/SVG","title":"SVG: スケーラブルベクターグラフィック"},{"uri":"/ja/docs/Web/SVG/Scripting","title":"スクリプティング"}],"pageTitle":"スクリプティング - SVG: スケーラブルベクターグラフィック | MDN","noIndexing":false}}