{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"プログレッシブウェブアプリ (PWA)","mdn_url":"/ja/docs/Web/Progressive_web_apps","locale":"ja","native":"日本語","sidebarHTML":"\n<ol><li><a href=\"/ja/docs/Web/Progressive_web_apps/Installable_PWAs\">PWA をインストール可能にするには</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Offline_Service_workers\">サービスワーカーで PWA をオフラインで動作させる</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/App_structure\">プログレッシブウェブアプリの構造</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Structural_overview\">プログレッシブウェブアプリの構造的な概要</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Introduction\">プログレッシブウェブアプリの紹介</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Loading\">プログレッシブ読み込み</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen\">ホーム画面に追加</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\">通知とプッシュを利用して PWA を再エンゲージ可能にするには</a></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/pwa.png\" alt=\"PWA community logo\" width=\"1024\" height=\"386\" loading=\"lazy\"><strong>プログレッシブウェブアプリ (Progressive web apps, PWA)</strong> は、新しいウェブ API と伝統的なプログレッシブな拡張戦略を使用して、クロスプラットフォームのウェブアプリケーションにネイティブアプリと同様の使い勝手をもたらすウェブアプリのことです。プログレッシブウェブアプリは正式な標準ではありませんが、有用なデザインパターンです。 PWA は、特定のウェブ技術や技法の使用を含む、一連のアプリケーション属性を包含しているという点で AJAX や他の同様のパターンに似ていると考えることができます。この一連の文書では、これについて知るために必要なすべてをお伝えします。\n</p>\n<p>ウェブアプリを PWA と呼ぶには、技術的に言えば、 <a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a> (<strong><a href=\"/ja/docs/Glossary/https\">HTTPS</a></strong>)、1 つ以上の<a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー</a>、<a href=\"/ja/docs/Web/Manifest\">マニフェストファイル</a>を持つべきです。</p>\n<dl>\n  <dt id=\"安全なコンテキスト\"><a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a> (<a href=\"/ja/docs/Glossary/https\">HTTPS</a>)</dt>\n  <dd>\n    <p>このウェブアプリケーションは、安全なネットワーク上で提供しなければなりません。安全なサイトにすることは、良い習慣であるだけでなく、特にユーザーが安全な取引を行う必要がある場合には、ウェブアプリケーションを信頼できるサイトとして確立することにもつながります。位置情報やサービスワーカーなどの PWA に関連する機能のほとんどは、アプリが HTTPS を使用して読み込まれた場合にのみ利用できます。</p>\n  </dd>\n  <dt id=\"サービスワーカー\"><a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー</a></dt>\n  <dd>\n    <p>サービスワーカーとは、ウェブブラウザーがネットワークのリクエストや資産のキャッシュに介入し、その方法を制御することができるスクリプトのことです。サービスワーカーを使用することで、ウェブ開発者は信頼できる高速なウェブページやオフライン操作を作成することができます。</p>\n  </dd>\n  <dt id=\"マニフェストファイル\"><a href=\"/ja/docs/Web/Manifest\">マニフェストファイル</a></dt>\n  <dd>\n    <p>アプリがユーザーにどのように表示されるかを制御し、プログレッシブウェブアプリを確実に発見できるようにする <a href=\"/ja/docs/Glossary/JSON\">JSON</a> ファイルです。アプリの名前、開始 URL、アイコン、その他ウェブサイトをアプリのような形式に変換するために必要なすべての詳細が記述されています。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"pwa_の利点","title":"PWA の利点","isH3":false,"content":"<p>PWA は発見でき、インストールでき、リンクでき、ネットワークに依存せず、プログレッシブで、再エンゲージでき、レスポンシブで、安全です。これらが何を意味するのかについては、<a href=\"/ja/docs/Web/Progressive_web_apps/Introduction#advantages_of_web_applications\">プログレッシブウェブアプリの利点</a>をお読みください。</p>\n<p>PWA の実装方法については、 <a href=\"/ja/docs/Web/Progressive_web_apps/Developer_guide\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">PWA 開発者ガイド</a>をお読みください。</p>"}},{"type":"prose","value":{"id":"ドキュメント","title":"ドキュメント","isH3":false,"content":"<p><strong>&lt;-- 以下のものは一時的な自動生成リストで、すぐに置き換えられます --&gt;</strong></p><div class=\"row topicpage-table\" id=\"sect1\">\n    <div class=\"section\" id=\"sect2\"><dl><dl><dt class=\"landingPageList\" id=\"pwa_をインストール可能にするには\"><a href=\"/ja/docs/Web/Progressive_web_apps/Installable_PWAs\">PWA をインストール可能にするには</a></dt><dd class=\"landingPageList\">前回の記事では、サンプルアプリケーション <a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">js13kPWA</a> が<a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー</a>によってオフラインで動作する方法を見てきましたが、さらに、対応しているモバイルブラウザーやデスクトップブラウザーでは、ウェブアプリをユーザーがインストールできるようにすることができます。インストールされたウェブアプリは、ネイティブアプリと同様にユーザーが起動することができます。 この記事では、ウェブアプリマニフェストと「ホーム画面に追加」と呼ばれる機能を使用して、これを実現する方法を説明します。</dd><dt class=\"landingPageList\" id=\"サービスワーカーで_pwa_をオフラインで動作させる\"><a href=\"/ja/docs/Web/Progressive_web_apps/Offline_Service_workers\">サービスワーカーで PWA をオフラインで動作させる</a></dt><dd class=\"landingPageList\">js13kPWA の構造と、基本シェルが起動し実行させる様子を見てきたので、サービスワーカーを使用したオフライン機能の実装方法を見てみましょう。 この記事では、 <a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">js13kPWA の例</a> (<a href=\"https://github.com/mdn/pwa-examples/tree/master/js13kpwa\" class=\"external\" rel=\" noopener\">ソースコードはこちら</a>) で使用されている実現方法を見てみましょう。 どのようにオフライン機能を追加するのかを学習します。</dd><dt class=\"landingPageList\" id=\"プログレッシブウェブアプリの構造\"><a href=\"/ja/docs/Web/Progressive_web_apps/App_structure\">プログレッシブウェブアプリの構造</a></dt><dd class=\"landingPageList\">PWA の背後にある理論が分かったところで、推奨されるアプリの構造を見てみましょう。まず、 <a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">js13kPWA</a> アプリの分析、それがなぜそのように構築されているのか、それがもたらす利点について説明します。</dd><dt class=\"landingPageList\" id=\"プログレッシブウェブアプリの構造的な概要\"><a href=\"/ja/docs/Web/Progressive_web_apps/Structural_overview\">プログレッシブウェブアプリの構造的な概要</a></dt><dd class=\"landingPageList\">プログレッシブウェブアプリ (PWA) はあらゆるウェブコンテンツに対応していますが、ウェブ上で使用することも、ローカルアプリケーションとしてインストールして実行することも可能なウェブアプリとして認識されるためには、特定の構造を持ち、特定のコンポーネントを含む必要があります。この構造概要では、標準的なウェブアプリケーションを構成する機能と、PWA を構築する際に従うことができるいくつかのデザインパターンを見ていきます。</dd></dl></dl></div>\n    <div class=\"section\" id=\"sect3\"><dl><dt class=\"landingPageList\" id=\"プログレッシブウェブアプリの紹介\"><a href=\"/ja/docs/Web/Progressive_web_apps/Introduction\">プログレッシブウェブアプリの紹介</a></dt><dd class=\"landingPageList\">この記事ではプログレッシブウェブアプリ (Progressive Web Apps, PWA) を紹介し、それが何なのか、また普通のウェブアプリよりもどのような利点があるのかを説明します。</dd><dt class=\"landingPageList\" id=\"プログレッシブ読み込み\"><a href=\"/ja/docs/Web/Progressive_web_apps/Loading\">プログレッシブ読み込み</a></dt><dd class=\"landingPageList\">前回の記事では、<a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">js13kPWA</a> の例をプログレッシブウェブアプリケーションにするのに役立つ API について説明しました — <a href=\"/ja/docs/Web/Progressive_web_apps/Offline_Service_workers\">サービスワーカー</a>、<a href=\"/ja/docs/Web/Progressive_web_apps/Installable_PWAs\">ウェブマニフェスト</a>、<a href=\"/ja/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\">通知、およびプッシュ</a>です。 この記事では、リソースを徐々に読み込せて、アプリのパフォーマンスをさらに向上させます。</dd><dt class=\"landingPageList\" id=\"ホーム画面に追加\"><a href=\"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen\">ホーム画面に追加</a></dt><dd class=\"landingPageList\">ホーム画面に追加 (または A2HS と略記) は最近のブラウザーで利用できる機能で、ユーザーがウェブアプリを「インストール」、すなわちお気に入りのウェブアプリケーション (またはウェブサイト) を表すショートカットを自分のホーム画面に追加することができるので、今後はこのショートカットを一回タップすればアクセスできるようになります。このガイドでは、 A2HS の使用方法と、ユーザーがこの機能を利用できるようにするために開発者として行う必要のあることについて説明します。</dd><dt class=\"landingPageList\" id=\"通知とプッシュを利用して_pwa_を再エンゲージ可能にするには\"><a href=\"/ja/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\">通知とプッシュを利用して PWA を再エンゲージ可能にするには</a></dt><dd class=\"landingPageList\">アプリのコンテンツをキャッシュできるようにしてオフラインで動作させるのは、すばらしい機能です。 ユーザーがホーム画面にウェブアプリをインストールできるようにすることは、もっと良いことです。 しかし、ユーザーの操作のみに頼らず、プッシュメッセージと通知を使用すれば、さらに自動的に再エンゲージを行い新しいコンテンツが利用できるようになるたびに配信することができるようになります。</dd></dl></div>\n    </div>\n<div class=\"notecard warning\" id=\"sect4\">\n  <p><strong>Warning:</strong> <strong>ここから下は全て旧バージョンのままで、他のコンテンツの全面見直しに合わせて刷新していきます。</strong></p>\n</div>"}},{"type":"prose","value":{"id":"基本的な_pwa_のガイド","title":"基本的な PWA のガイド","isH3":false,"content":"<p>以下のガイドは PWA を実装するのに必要なことを、単純な例を実行し、すべての部分がどのように動作するかを示します。</p>\n<ol>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps/Introduction\">プログレッシブウェブアプリの紹介</a></li>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps/App_structure\">プログレッシブウェブアプリの構造</a></li>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps/Offline_Service_workers\">サービスワーカーで PWA をオフラインで動作するようにする</a></li>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps/Installable_PWAs\">PWA をインストール可能にする方法</a></li>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\">通知とプッシュ通知を使用して PWA を再エンゲージ可能にする方法</a></li>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps/Loading\">プログレッシブ読み込み</a></li>\n</ol>"}},{"type":"prose","value":{"id":"技術ガイド","title":"技術ガイド","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">クライアント側ストレージ</a> — ウェブストレージ, IndexedDB, サービスワーカーをいつ、どのように使うかを示すとても長いガイド。</li>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API/Using_Service_Workers\">サービスワーカーの使用</a> — より詳しい Service Worker API のガイド。</li>\n  <li><a href=\"/ja/docs/Web/API/IndexedDB_API/Using_IndexedDB\">IndexedDB の使用</a> — IndexedDB の基礎、詳しく説明されている。</li>\n  <li><a href=\"/ja/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\">Web Storage API の使用</a> — ウェブストレージ API はシンプルにできている。</li>\n  <li><a href=\"https://developers.google.com/web/updates/2015/11/app-shell\" class=\"external\" rel=\" noopener\">アプリケーションシェルアーキテクチャによるすばやいウェブアプリの読み込み</a> — App Shell コーディングパターンを使用して、すばやく読み込まれるアプリの作成のガイド。</li>\n  <li><a href=\"/ja/docs/Web/API/Push_API\">Push API の使用</a> — Web Push API の背景にある要点を学ぶ。</li>\n  <li><a href=\"/ja/docs/Web/API/Notifications_API/Using_the_Notifications_API\">Notifications API の使用</a> — ウェブ通知の簡単な説明。</li>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps/Responsive/responsive_design_building_blocks\">レスポンシブデザインの構成要素</a> — モダンアプリレイアウトにとって重要なレスポンシブウェブデザインの基本を学ぶ。</li>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps/Responsive/Mobile_first\">モバイルファースト</a> — レスポンシブなアプリケーションを作る時によく、モバイルレイアウトを既定として作って、その上により広いレイアウトを作る意味がある。</li>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen\">ホーム画面追加のためのガイド</a> — アプリをホーム画面に追加 (A2HS) する利点を学ぶ。</li>\n</ul>"}},{"type":"prose","value":{"id":"ツール","title":"ツール","isH3":false,"content":"<ul>\n  <li><a href=\"https://localforage.github.io/localForage/\" class=\"external\" rel=\" noopener\">localForage</a> — クライアントサイドのデータストレージを簡単に扱えるようにする素晴らしいシンプルな JavaScript ライブラリ、これは既定で IndexedDB を使用し、必要に応じて Web SQL/Web Storage にフォールバックする。</li>\n  <li><a href=\"https://github.com/fxos-components/serviceworkerware\" class=\"external\" rel=\" noopener\">ServiceWorkerWare</a> — Service Worker の開発を簡単にする Express のようなマイクロフレームワーク。</li>\n  <li><a href=\"https://github.com/mozilla/oghliner\" class=\"external\" rel=\" noopener\">oghliner</a> — テンプレートだけではなく、オフラインでウェブアプリケーションを Github Pages にデプロイするツール。</li>\n  <li><a href=\"https://github.com/GoogleChrome/sw-precache\" class=\"external\" rel=\" noopener\">sw-precache</a> — 特定のリソースを事前にキャッシュする Service Worker のコードを生成する node のモジュール。</li>\n  <li><a href=\"https://github.com/GoogleChrome/workbox\" class=\"external\" rel=\" noopener\">workbox</a> — 気持ち的には、より進んだキャッシングの手法と簡単なプリキャッシュを有する sw-precache の後継者。</li>\n  <li><a href=\"https://www.talater.com/upup/\" class=\"external\" rel=\" noopener\">upup</a> — あなたのサイトが常にあなたのユーザーのために存在するようにする小さなスクリプト。</li>\n  <li><a href=\"https://serviceworke.rs/\" class=\"external\" rel=\" noopener\">The service worker cookbook</a> — 一連の素晴らしい Service Worker/プッシュレシピ、オフラインアプリケーションの実装方法を紹介しているが、より多くの機能を持っている。</li>\n  <li><a href=\"https://marketplace.visualstudio.com/items?itemName=mayeedwin.vscode-pwa\" class=\"external\" rel=\" noopener\">PWA VS Code extension</a> - VS Code 環境でプログレッシブウェブアプリを構築するために必要な、すべての重要なコードスニペットのコレクションです。</li>\n</ul><!---->\n<ul>\n  <li><a href=\"https://developers.google.com/web/progressive-web-apps\" class=\"external\" rel=\" noopener\">Progressive web apps</a> on Google Developers</li>\n  <li>Alex Russell による <a href=\"https://medium.com/@slightlylate/progressive-apps-escaping-tabs-without-losing-our-soul-3b93a8561955#.6czgj0myh\" class=\"external\" rel=\" noopener\">Progressive Web Apps: Escaping Tabs Without Losing Our Soul</a></li>\n  <li><a href=\"https://developers.google.com/web/progressive-web-apps/checklist\" class=\"external\" rel=\" noopener\">Progressive Web Apps Check List</a></li>\n  <li>Google による <a href=\"https://developers.google.com/web/tools/lighthouse\" class=\"external\" rel=\" noopener\">The Lighthouse Tool</a></li>\n  <li><a href=\"https://github.com/angular/mobile-toolkit\" class=\"external\" rel=\" noopener\">Tools for building progressive web apps with Angular</a>.</li>\n  <li><a href=\"https://pokedex.org/\" class=\"external\" rel=\" noopener\">Offline-capable Pokédex web site</a>.</li>\n  <li><a href=\"https://hnpwa.com/\" class=\"external\" rel=\" noopener\">Hacker News readers as Progressive Web Apps</a>.</li>\n  <li><a href=\"https://www.csschopper.com/blog/progressive-web-apps-everything-you-need-to-know/\" class=\"external\" rel=\" noopener\">Progressive Web Apps: Everything You Need To Know</a></li>\n  <li><a href=\"https://pwafire.org\" class=\"external\" rel=\" noopener\">Collection of resources, codelabs and tools you need to build PWAs by the team at pwafire.org</a></li>\n  <li><a href=\"https://github.com/pwafire/pwadev-tips\" class=\"external\" rel=\" noopener\">Setting up your Progressive Web App Development environment</a></li>\n</ul>"}}],"toc":[{"text":"PWA の利点","id":"pwa_の利点"},{"text":"ドキュメント","id":"ドキュメント"},{"text":"基本的な PWA のガイド","id":"基本的な_pwa_のガイド"},{"text":"技術ガイド","id":"技術ガイド"},{"text":"ツール","id":"ツール"}],"summary":"プログレッシブウェブアプリ (Progressive web apps, PWA) は、新しいウェブ API と伝統的なプログレッシブな拡張戦略を使用して、クロスプラットフォームのウェブアプリケーションにネイティブアプリと同様の使い勝手をもたらすウェブアプリのことです。プログレッシブウェブアプリは正式な標準ではありませんが、有用なデザインパターンです。 PWA は、特定のウェブ技術や技法の使用を含む、一連のアプリケーション属性を包含しているという点で AJAX や他の同様のパターンに似ていると考えることができます。この一連の文書では、これについて知るために必要なすべてをお伝えします。","popularity":0.0018,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Progressive web apps (PWAs)","locale":"en-US","native":"English (US)"},{"title":"Aplicaciones Web Progresivas","locale":"es","native":"Español"},{"title":"Applications web progressives","locale":"fr","native":"Français"},{"title":"프로그레시브 웹 앱","locale":"ko","native":"한국어"},{"title":"Progressive web apps","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Прогрессивные веб-приложения","locale":"ru","native":"Русский"},{"title":"渐进式 Web 应用（PWA）","locale":"zh-CN","native":"中文 (简体)"},{"title":"漸進式網絡應用程式","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/progressive_web_apps","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/progressive_web_apps/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Progressive_web_apps","title":"プログレッシブウェブアプリ (PWA)"}],"pageTitle":"プログレッシブウェブアプリ (PWA) | MDN","noIndexing":false}}