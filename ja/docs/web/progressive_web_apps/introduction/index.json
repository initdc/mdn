{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"プログレッシブウェブアプリの紹介","mdn_url":"/ja/docs/Web/Progressive_web_apps/Introduction","locale":"ja","native":"日本語","sidebarHTML":"\n<ol><li><a href=\"/ja/docs/Web/Progressive_web_apps/Installable_PWAs\">PWA をインストール可能にするには</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Offline_Service_workers\">サービスワーカーで PWA をオフラインで動作させる</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/App_structure\">プログレッシブウェブアプリの構造</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Structural_overview\">プログレッシブウェブアプリの構造的な概要</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Introduction\">プログレッシブウェブアプリの紹介</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Loading\">プログレッシブ読み込み</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen\">ホーム画面に追加</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\">通知とプッシュを利用して PWA を再エンゲージ可能にするには</a></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/Progressive_web_apps\"> Overview: Progressive web apps</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/Progressive_web_apps/App_structure\"> 次のページ  </a></li>\n</ul>\n<p>この記事ではプログレッシブウェブアプリ (Progressive Web Apps, PWA) を紹介し、それが何なのか、また普通のウェブアプリよりもどのような利点があるのかを説明します。</p>"}},{"type":"prose","value":{"id":"プログレッシブウェブアプリとは","title":"プログレッシブウェブアプリとは","isH3":false,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 「プログレッシブウェブアプリ」という用語は、公式または正式な名称ではありません。ウェブ技術だけを使って、柔軟性と適応性のあるアプリケーションを作成するというコンセプトのもと、 Google が当初使用していた略語です。</p>\n</div>\n<p>PWA は数々の特定の技術と、ウェブアプリとネイティブアプリの機能の利点を併せ持った標準パターンを使用して開発されたウェブアプリです。例えば、ウェブアプリはより見つけやすいものです。アクセスするのは、アプリケーションをインストールするよりはるかに簡単で手早く、リンクを通してウェブアプリを共有することもできます。</p>\n<p>一方、ネイティブアプリはオペレーティングシステムとより調和するので、ユーザーにもっとシームレスな使い勝手を提供します。ネイティブアプリをインストールするとオフラインで動作し、ユーザーはブラウザーを使ってアプリに移動するのではなく、ホーム画面のアイコンから好きなアプリをタップするだけで簡単にアクセスできます。</p>\n<p>PWA によって、ネイティブアプリの利点を引き継いだウェブアプリケーションを作成することができます。</p>\n<p>これ新しい概念ではありません。このような考えは、過去にもウェブプラットフォーム上で、様々なアプローチにより何度も繰り返されてきました。プログレッシブエンハンスメントとレスポンシブデザインにより、すでにモバイルフレンドリーなウェブサイトを構築することができます。</p>\n<p>しかし、PWA はウェブを素晴らしいものにする既存の機能を一切排除することなく、これらすべてとそれ以上の機能を提供します。</p>"}},{"type":"prose","value":{"id":"何がアプリを_pwa_にするのか","title":"何がアプリを PWA にするのか","isH3":false,"content":"<p>前に述べたように、PWA は単一の技術によって成り立っているわけではありません。PWA とはウェブアプリケーションを構築するための新しい哲学を表しており、いくつかの特定のパターンや API、機能を含みます。一見しただけではそのウェブアプリが PWA かを見極めることはできません。ウェブアプリは、特定の要件を満たしているか、あるいは特定の機能を実装している場合に、PWA と見なされます。例えば、オフラインで動作すること、インストールできること、簡単に同期できること、プッシュ通知を送信することができることなどです。</p>\n<p>更に、アプリの完成度をパーセント値で測定するツールもあります (今のところは <a href=\"https://developers.google.com/web/tools/lighthouse/\" class=\"external\" rel=\" noopener\">Lighthouse</a> が最も有名です)。様々な技術的優位性を実装することでアプリをより進化的 (progressive) にすることができ、より高い Lighthouse のスコアを得ることができます。しかし、このスコアは大まかな指標でしかありません。</p>\n<p>ウェブアプリが PWA として見なされるために、いくつかの重要な原則があります。</p>\n<ul>\n  <li><a href=\"#discoverability\">Discoverable</a> (発見可能): コンテンツを検索エンジンで見つけることができる。</li>\n  <li><a href=\"#installability\">Installable</a> (インストール可能): アプリを端末のホーム画面に追加できる。</li>\n  <li><a href=\"#linkability\">Linkable</a> (リンク可能): URL を送るだけでアプリを共有できる。</li>\n  <li><a href=\"#network_independence\">Network independent</a> (ネットワーク非依存): オフラインか、あるいは貧弱なネットワーク環境でも使用できる。</li>\n  <li><a href=\"#progressive_enhancement_support\">Progressive</a> (進化的): 古いブラウザーでも基本的な機能は使用でき、最新のブラウザーではすべての機能が使用できる。</li>\n  <li><a href=\"#re-engageability\">Re-engageable</a> (再エンゲージ可能): 新しいコンテンツがあるときには、通知を送ることができる。</li>\n  <li><a href=\"#responsiveness\">Responsive</a> (レスポンシブ): 携帯電話やタブレット、ノートパソコン、テレビ、冷蔵庫など、画面とブラウザーを備える全ての端末で使用できる。</li>\n  <li><a href=\"#safety\">Safe</a> (安全): アプリからの通信が第三者からの攻撃に対して安全であり、機密情報を保護できる。</li>\n</ul>\n<p>これらの機能を提供し、<a href=\"#advantages_of_web_applications\">長所</a>をすべて活用することで、ユーザーや顧客にとって魅力的で柔軟性の高いサービスを提供することができます。</p>"}},{"type":"prose","value":{"id":"取り組む価値はありますか？","title":"取り組む価値はありますか？","isH3":true,"content":"<p>もちろん！基本的な PWA の機能を実装するのに必要な労力は比較的小さく、得られる便益は膨大です。例をあげましょう。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー</a>によるキャッシュのおかげで、貴重な帯域幅と時間の節約とともに、アプリがインストールされた後の読み込み時間が短縮されます。 PWA は (2 回目のアクセスから) ほぼ瞬時にローディングが行われます。</li>\n  <li>アプリの更新があると、変更されたコンテンツだけを更新することができます。一方、ネイティブアプリでは、わずかな変更でもユーザーはアプリ全体をダウンロードし直さなければなりません。</li>\n  <li>ネイティブプラットフォームとよく統合されたルックアンドフィール。例えばホーム画面のアプリアイコンや、全画面で動作するアプリなど。</li>\n  <li>システム通知やプッシュメッセージによるユーザーの再エンゲージ。これはエンゲージユーザーやコンバージョン率の向上に繋がる。</li>\n</ul>"}},{"type":"prose","value":{"id":"成功例","title":"成功例","isH3":true,"content":"<p>PWA の道を試みて、ネイティブアプリよりもウェブサイトの使い勝手の向上を選択し、その結果として大きな利益を得るに至った企業の成功例は多数あります。<a href=\"https://www.pwastats.com/\" class=\"external\" rel=\" noopener\">PWA Stats</a> というウェブサイトはこのような便益を示すたくさんの調査を公開しています。</p>\n<p>もっとも有名な成功例は、おそらく <a href=\"https://stories.flipkart.com/introducing-flipkart-lite/\" class=\"external\" rel=\" noopener\">Flipkart Lite</a> でしょう。インド最大手の e コマースサイトは 2015 年に PWA へと作り直され、その結果コンバージョン数が 70% 増加しました。<a href=\"https://m.aliexpress.com/\" class=\"external\" rel=\" noopener\">AliExpress</a> の PWA もまた新規ユーザーのコンバージョン率が 104%向上という、ウェブやネイティブアプリよりも良い結果となりました。このような利益の増加や PWA 転換に必要な労力が比較的少ないことを考えると、PWA の利点は明確です。</p>\n<p>一方では <a href=\"https://www.couponmoto.com/\" class=\"external\" rel=\" noopener\">couponmoto</a> のような初期段階にあるスタートアップも消費者エンゲージ促進のため PWA を使い始め、企業の大小問わずユーザーの (再) エンゲージに効果的であることが示されています。</p>\n<p>他にも例を知りたければ <a href=\"https://pwa.rocks/\" class=\"external\" rel=\" noopener\">pwa.rocks</a> を確認してみてください。特に <a href=\"https://hnpwa.com/\" class=\"external\" rel=\" noopener\">hnpwa.com</a> のページは注目に値します。これは (よくある TodoMVC アプリの代わりに) Hacker News ウェブサイトの実装例を掲載しており、様々なフロントエンドフレームワークの利用例を見ることができます。</p>\n<p><a href=\"https://www.pwabuilder.com/\" class=\"external\" rel=\" noopener\">PWABuilder</a> のウェブサイトを利用すると、PWA をオンラインで生成することもできます。</p>\n<p>サービスワーカーとおよびプッシュ通知に固有の情報を探しているならば、<a href=\"https://serviceworke.rs/\" class=\"external\" rel=\" noopener\">Service Worker Cookbook</a> も忘れずにチェックしてください。モダンなサイトにおけるサービスワーカーのレシピ集です。</p>\n<p>PWA のアプローチは挑戦する十分な価値があります。あなたのアプリでそれがどう動くのか、ぜひ自身で確認してみてください。</p>"}},{"type":"prose","value":{"id":"ウェブアプリケーションの利点","title":"ウェブアプリケーションの利点","isH3":false,"content":"<p>完全に機能するプログレッシブウェブアプリケーションは、以下のすべての利点をユーザーに提供します。</p>"}},{"type":"prose","value":{"id":"発見可能性","title":"発見可能性","isH3":true,"content":"<p>\n  <img src=\"/ja/docs/Web/Progressive_web_apps/Introduction/discoverable.svg\" alt=\"\" loading=\"lazy\">最終的な目的は、ウェブアプリが検索エンジンでより適切に表現され、公開されやすく、カタログ化とランク付けされ、ブラウザーにメタデータを使用してそれらに特別な機能を提供することです。\n</p>\n<p>一部の機能は、<a href=\"https://ogp.me/\" class=\"external\" rel=\" noopener\">Open Graph</a> のような独自の技術によって特定のウェブベースのプラットフォームですでにできるようになっています。これは <a href=\"/ja/docs/Glossary/HTML\">HTML</a> の <a href=\"/ja/docs/Web/HTML/Element/head\"><code>&lt;head&gt;</code></a> ブロック内で <a href=\"/ja/docs/Web/HTML/Element/meta\"><code>&lt;meta&gt;</code></a> タグを使って同様のメタデータを指定するフォーマットを提供しています。</p>\n<p>ここで関連するウェブ標準は<a href=\"/ja/docs/Web/Manifest\">ウェブアプリマニフェスト</a>（Web app manifest）です。 これは、名前、アイコン、スプラッシュ画面、テーマカラーなどのアプリの機能を <a href=\"/ja/docs/Glossary/JSON\">JSON</a> 形式のマニフェストファイルで定義します。 これは、アプリ一覧や端末のホーム画面などの場面で使用するためのものです。</p>"}},{"type":"prose","value":{"id":"インストール可能性","title":"インストール可能性","isH3":true,"content":"<p>\n  <img src=\"/ja/docs/Web/Progressive_web_apps/Introduction/installable.svg\" alt=\"\" loading=\"lazy\">\n</p>\n<p>ウェブアプリの使い勝手の中心となるのは、ユーザーがホーム画面にアプリのアイコンを表示し、タップしてアプリを開くことができるネイティブコンテナーであり、基盤となるプラットフォームとうまく統合されていることです。</p>\n<p>最近のウェブアプリは、ウェブアプリマニフェストに設定されたプロパティや、最近のスマートフォンブラウザーで利用できる<a href=\"/en-US/docs/Web/Progressive_web_apps/Installing\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ウェブアプリのインストール (en-US)</a>と呼ばれる機能によって、このようなネイティブアプリの感覚を持つことができます。</p>"}},{"type":"prose","value":{"id":"リンク可能性","title":"リンク可能性","isH3":true,"content":"<p>\n  <img src=\"/ja/docs/Web/Progressive_web_apps/Introduction/linkable.svg\" alt=\"\" loading=\"lazy\">\n</p>\n<p>ウェブの最も強力な機能の 1 つは、特定の URL でアプリにリンクできることです。アプリストアは不要で、複雑なインストールプロセスも不要です。これは今までもそうでした。</p>"}},{"type":"prose","value":{"id":"ネットワーク非依存性","title":"ネットワーク非依存性","isH3":true,"content":"<p>\n  <img src=\"/ja/docs/Web/Progressive_web_apps/Introduction/network-independent.svg\" alt=\"\" loading=\"lazy\">\n</p>\n<p>最新のウェブアプリケーションは、ネットワークの信頼性が低い、あるいは存在しない場合でも動作します。ネットワーク非依存性の基本的な考え方は、以下の通りです。</p>\n<ul>\n  <li>ネットワークが利用できない場合でも、サイトを再訪してそのコンテンツを取得できる。</li>\n  <li>ユーザーが過去に一度でもアクセスしたことのあるコンテンツであれば、接続性が悪い状況でも閲覧できる。</li>\n  <li>接続がない状況で、ユーザーに表示するものを制御することができます。</li>\n</ul>\n<p>これは、ページリクエストを制御する<a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー</a> (オフラインでの保存など)、ネットワークリクエストに対するレスポンスをオフラインで保存する <a href=\"/ja/docs/Web/API/Cache\">Cache API</a> (サイトの資産を保存するのにとても便利)、アプリケーションデータをオフラインで保存する<a href=\"/ja/docs/Web/API/Web_Storage_API\">ウェブストレージ</a>や <a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB</a> などのクライアントサイドのデータストレージ技術など、さまざまな技術を組み合わせて実現されています。</p>"}},{"type":"prose","value":{"id":"プログレッシブエンハンスメントの対応","title":"プログレッシブエンハンスメントの対応","isH3":true,"content":"<p>\n  <img src=\"/ja/docs/Web/Progressive_web_apps/Introduction/progressive.svg\" alt=\"\" loading=\"lazy\">\n</p>\n<p>最近のウェブアプリは、十分な機能を備えたブラウザーでは優れた使い勝手を、機能の劣るブラウザーでは (見劣りするものの) 許容できる使い勝手を提供するように開発することができます。私たちは、プログレッシブエンハンスメントなどのベストプラクティスを用いて、何年も前からこれを行ってきました。<a href=\"/ja/docs/Glossary/Progressive_Enhancement\">プログレッシブエンハンスメント</a>を使用することで、 PWA はクロスブラウザーに対応します。つまり開発者は、 PWA の一部の機能や技術の実装が、ブラウザーの実装ごとに異なることを考慮する必要があります。</p>"}},{"type":"prose","value":{"id":"再エンゲージ可能性","title":"再エンゲージ可能性","isH3":true,"content":"<p>\n  <img src=\"/ja/docs/Web/Progressive_web_apps/Introduction/re-engageable.svg\" alt=\"\" loading=\"lazy\">\n</p>\n<p>ネイティブプラットフォームの大きな利点は、ユーザーがアプリを見ていない時や端末を使用していない時でも、アップデートや新しいコンテンツによってユーザーを簡単に再エンゲージできることです。最近のウェブアプリでは、ページを制御するサービスワーカー、サーバーからサービスワーカーを介してアプリに直接アップデートを送信する <a href=\"/ja/docs/Web/API/Push_API\">Web Push API</a>、システム通知を生成する <a href=\"/ja/docs/Web/API/Notifications_API\">Notifications API</a> などの新しい技術を使用することで、このようなことが可能になっていますが、ユーザーがウェブブラウザーを積極的に使用していないときにも、ユーザーの関心を引くことができます。</p>"}},{"type":"prose","value":{"id":"レスポンシブ性","title":"レスポンシブ性","isH3":true,"content":"<p>\n  <img src=\"/ja/docs/Web/Progressive_web_apps/Introduction/responsive.svg\" alt=\"\" loading=\"lazy\">\n</p>\n<p>レスポンシブウェブアプリでは、<a href=\"/ja/docs/Web/CSS/Media_Queries\">メディアクエリー</a>や<a href=\"/ja/docs/Glossary/Viewport\">ビューポート</a>などの技術を用いて、デスクトップ、モバイル、タブレットなど、あらゆるフォームファクターに対応する UI を実現しています。</p>"}},{"type":"prose","value":{"id":"安全性","title":"安全性","isH3":true,"content":"<p>\n  <img src=\"/ja/docs/Web/Progressive_web_apps/Introduction/safe.svg\" alt=\"\" loading=\"lazy\">\n</p>\n<p>\n  <img src=\"/ja/docs/Web/Progressive_web_apps/Introduction/instalingmessengersomanyoptionseek.jpeg\" alt=\"Facebook Messengerを探すために「Messenger」と検索すると、膨大な数の結果が表示されるスクリーンショット。どれが正しいのでしょうか？\" loading=\"lazy\"><a href=\"/ja/docs/Glossary/https\">HTTPS</a> を利用し、セキュリティを考慮してアプリを開発していれば、ウェブプラットフォームは、コンテンツが改ざんされていないことを確認すると同時に、盗み見されることを防ぐ安全な配信メカニズムを提供します。\n</p>\n<p>また、アプリの URL がサイトのドメインと一致するため、ユーザーは正しいアプリをインストールしているかどうかを簡単に確認することができます。これは、アプリストアのアプリとは大きく異なります。アプリストアには似たような名前のアプリがいくつもあり、中には自分のサイトをベースにしたものもあるため、混乱を招くだけです。ウェブアプリは、そのような混乱を解消し、ユーザーに最高の使い勝手を提供します。</p>"}},{"type":"prose","value":{"id":"ブラウザーの対応","title":"ブラウザーの対応","isH3":false,"content":"<p>前述のように、PWA は単一の API に依存するのではなく、さまざまなテクノロジーを使用して、可能な限り最高のウェブの操作性を提供するという目標を達成します。</p>\n<p>PWA に必要な重要な要素は、<a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー</a>のサポートです。ありがたいことに、サービスワーカーは現在、デスクトップとモバイルの<a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">すべての主要なブラウザー</a>でサポートされています。</p>\n<p><a href=\"/ja/docs/Web/Manifest\">ウェブアプリマニフェスト</a>や<a href=\"/ja/docs/Web/API/Push_API\">プッシュ通知</a>、<a href=\"/ja/docs/Web/API/Notifications_API\">お知らせ</a>、<a href=\"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen\">ホーム画面に追加</a>などの他の機能も幅広く対応されています。現在、Safari では、ウェブアプリマニフェストとホーム画面に追加の対応が制限されており、ウェブプッシュ通知には対応していません。ただし、他の主要なブラウザーはこれらすべての機能に対応しています。</p>\n<p>特に、プログレッシブエンハンスメントのルールに従うべきです。つまり、利用可能な場合はアプリの外観や実用性を向上させる技術を使用し、それらの機能が利用できない場合はアプリの基本的な機能を提供します。信頼性の高いウェブサイトを優れたパフォーマンスで提供することは、これらの機能強化を使用することの結果であり、これは、より良い慣行に従ったウェブアプリを構築することを意味します。このようにして、誰もがアプリを使用できるようになりますが、モダンブラウザーを使用している人は、 PWA 機能の恩恵をさらに受けることができます。</p>"}},{"type":"prose","value":{"id":"アプリケーションの例","title":"アプリケーションの例","isH3":false,"content":"<p>このシリーズの記事では、 <a href=\"https://2017.js13kgames.com/\" class=\"external\" rel=\" noopener\">js13kGames 2017</a> 競技会の <a href=\"https://js13kgames.com/aframe\" class=\"external\" rel=\" noopener\">A-Frame category</a> に提出されたゲームに関する情報をリストする、非常にシンプルなウェブサイトのソースコードを調べます。ウェブサイトの実際のコンテンツについて考える必要はありません。主なポイントは、自分のプロジェクトで PWA 機能を使用する方法を学ぶことです。</p>\n<p>オンラインでは <a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">mdn.github.io/pwa-examples/js13kpwa</a> (<a href=\"https://github.com/mdn/pwa-examples/tree/master/js13kpwa\" class=\"external\" rel=\" noopener\">ソースコードも参照</a> ) で見つけることができます。これについては、次のいくつかの記事で詳しく説明します。</p>\n<p>それでは、このシリーズの第 2 部に移り、サンプルアプリの構造を見ていきましょう。</p><ul class=\"prev-next\">\n    \n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/Progressive_web_apps\"> Overview: Progressive web apps</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/Progressive_web_apps/App_structure\"> 次のページ  </a></li>\n</ul>"}}],"toc":[{"text":"プログレッシブウェブアプリとは","id":"プログレッシブウェブアプリとは"},{"text":"何がアプリを PWA にするのか","id":"何がアプリを_pwa_にするのか"},{"text":"ウェブアプリケーションの利点","id":"ウェブアプリケーションの利点"},{"text":"ブラウザーの対応","id":"ブラウザーの対応"},{"text":"アプリケーションの例","id":"アプリケーションの例"}],"summary":"この記事ではプログレッシブウェブアプリ (Progressive Web Apps, PWA) を紹介し、それが何なのか、また普通のウェブアプリよりもどのような利点があるのかを説明します。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Introduction to progressive web apps","locale":"en-US","native":"English (US)"},{"title":"Introducción a  aplicaciones web progresivas","locale":"es","native":"Español"},{"title":"Introduction aux progressive web apps","locale":"fr","native":"Français"},{"title":"프로그레시브 웹 앱 소개","locale":"ko","native":"한국어"},{"title":"Introdução a progressive web apps","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"渐进式 Web 应用介绍","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/progressive_web_apps/introduction","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/progressive_web_apps/introduction/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Progressive_web_apps","title":"プログレッシブウェブアプリ (PWA)"},{"uri":"/ja/docs/Web/Progressive_web_apps/Introduction","title":"プログレッシブウェブアプリの紹介"}],"pageTitle":"プログレッシブウェブアプリの紹介 - プログレッシブウェブアプリ (PWA) | MDN","noIndexing":false}}