{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"PWA をインストール可能にするには","mdn_url":"/ja/docs/Web/Progressive_web_apps/Installable_PWAs","locale":"ja","native":"日本語","sidebarHTML":"\n<ol><li><a href=\"/ja/docs/Web/Progressive_web_apps/Installable_PWAs\">PWA をインストール可能にするには</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Offline_Service_workers\">サービスワーカーで PWA をオフラインで動作させる</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/App_structure\">プログレッシブウェブアプリの構造</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Structural_overview\">プログレッシブウェブアプリの構造的な概要</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Introduction\">プログレッシブウェブアプリの紹介</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Loading\">プログレッシブ読み込み</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen\">ホーム画面に追加</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\">通知とプッシュを利用して PWA を再エンゲージ可能にするには</a></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/Progressive_web_apps/Offline_Service_workers\"> 前のページ </a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/Progressive_web_apps\"> Overview: Progressive web apps</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\"> 次のページ  </a></li>\n</ul>\n<p>前回の記事では、サンプルアプリケーション <a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">js13kPWA</a> が<a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー</a>によってオフラインで動作する方法を見てきましたが、さらに、対応しているモバイルブラウザーやデスクトップブラウザーでは、ウェブアプリをユーザーがインストールできるようにすることができます。インストールされたウェブアプリは、ネイティブアプリと同様にユーザーが起動することができます。 この記事では、ウェブアプリマニフェストと「ホーム画面に追加」と呼ばれる機能を使用して、これを実現する方法を説明します。</p>\n<p>これらの技術により、ユーザーはブラウザーを開いてからブックマークを使ってサイトに移動したり、 URL を入力したりするのではなく、アプリを端末のホーム画面から直接起動することができます。ウェブアプリは、第一級市民としてネイティブアプリケーションの隣に座ることができます。さらに、アプリを全画面またはスタンドアロン モードで起動するように指定できるため、既定ののブラウザーのユーザーインターフェイスが削除され、よりシームレスでネイティブアプリに近い感覚が得られます。</p>"}},{"type":"prose","value":{"id":"要求事項","title":"要求事項","isH3":false,"content":"<p>ウェブサイトをインストール可能にするには、以下のものが必要になります。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen#%E3%83%9E%E3%83%8B%E3%83%95%E3%82%A7%E3%82%B9%E3%83%88\">正しくフィールドが入力された</a>ウェブマニフェスト</li>\n  <li>安全な (HTTPS) ドメインから提供されるウェブサイト</li>\n  <li>端末上のアプリを表すアイコン</li>\n  <li>アプリをオフラインで動作させるために登録された<a href=\"/ja/docs/Web/API/Service_Worker_API\">service worker</a> (現時点では Android の Chrome にのみ必要です)</li>\n</ul>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 現在、サービスワーカーが必要なのは、 Chrome, Edge, Samsung Internet などの Chromium ベースのブラウザーのみです。Firefox を使ってアプリを開発する場合は、 Chromium ベースのブラウザーと互換性を持たせるためにサービスワーカーが必要になるので注意が必要です。</p>\n</div>"}},{"type":"prose","value":{"id":"マニフェストファイル","title":"マニフェストファイル","isH3":true,"content":"<p>重要な要素はウェブマニフェストファイルです。 このファイルには、ウェブサイトに関するすべての情報が JSON 形式でリストされます。</p>\n<p>通常、ウェブアプリのルートフォルダーに存在します。これには、アプリのタイトル、 OS 上でアプリを表現するために使用できる様々なサイズのアイコンへのパス (ホーム画面上のアイコン、スタートメニューの項目、デスクトップ上のアイコンなど)、読み込み中画面やスプラッシュ画面で使用する背景色などの有用な情報が含まれています。この情報は、ブラウザーがインストール処理中にウェブアプリを適切に表示したり、モバイル端末のホーム画面などの端末のアプリ起動インターフェイス内で表示したりするために必要です。</p>\n<p><a href=\"https://mdn.github.io/pwa-examples/js13kpwa/\" class=\"external\" rel=\" noopener\">js13kPWA</a> ウェブアプリの <code>js13kpwa.webmanifest</code> ファイルは、 <code>index.html</code> ファイルの <a href=\"/ja/docs/Web/HTML/Element/head\"><code>&lt;head&gt;</code></a> ブロックに次のコード行を使用して含まれています。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manifest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>js13kpwa.webmanifest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 過去にマニフェストに使用されてきた一般的な拡張機能がいくつかあります。 <code>manifest.webapp</code> は Firefox OS アプリのマニフェストで一般的でしたが、多くの場合、コンテンツは JSON 構造で編成されているためウェブマニフェストには <code>manifest.json</code> を使用します。 しかし、<code>.webmanifest</code> ファイル形式は <a href=\"https://w3c.github.io/manifest/\" class=\"external\" rel=\" noopener\">W3C マニフェスト仕様書</a> (英語) で明示的に言及されており、ここでは使用するのはこれです。</p>\n</div>\n<p>ファイルの内容は次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"js13kGames Progressive Web App\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"short_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"js13kPWA\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Progressive Web App that lists games submitted to the A-Frame category in the js13kGames 2017 competition.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icons/icon-32.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"32x32\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icons/icon-512.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"512x512\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/pwa-examples/js13kpwa/index.html\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"display\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fullscreen\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"theme_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#B12A34\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"background_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#B12A34\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ほとんどのフィールドは一目瞭然ですが、念のため、以下のものと同じです。</p>\n<ul>\n  <li><code>name</code>: ウェブアプリの正式な名前。</li>\n  <li><code>short_name</code>: ホーム画面に表示する省略した名前。</li>\n  <li><code>description</code>: アプリが何をするのかを説明する一つ二つの文章。</li>\n  <li><code>icons</code>: 一連のアイコン情報 — ソース URL、サイズ、種類。 ユーザーの端末に最適なものが選択されるように、少なくともいくつか含めるようにしてください。</li>\n  <li><code>start_url</code>: アプリの起動時に起動する index 文書。</li>\n  <li><code>display</code>: アプリの表示方法 — <code>fullscreen</code> (全画面), <code>standalone</code> (スタンドアロン), <code>minimal-ui</code> , <code>browser</code> (ブラウザー) のいずれかです。</li>\n  <li><code>theme_color</code>: テーマカラー — オペレーティングシステムで使用される UI の基本色です 。</li>\n  <li><code>background_color</code>: アプリの既定の背景色、インストール中およびスプラッシュ画面で使用します。</li>\n</ul>\n<p>最小限のウェブマニフェストには、少なくとも <code>name</code> と、1 つ以上のアイコンが定義された <code>icons</code> フィールドがなければなりません。アイコンには、少なくとも <code>src</code>, <code>size</code>, and <code>type</code> がなければなりません。それ以外はすべてオプションですが、<code>description</code>, <code>short_name</code>, <code>start_url</code> フィールドは推奨されます。上記のフィールド以外にも使用できるフィールドがあります。 - 詳細については、必ず<a href=\"/ja/docs/Web/Manifest\">ウェブアプリマニフェストリファレンス</a>を確認してください。</p>"}},{"type":"prose","value":{"id":"ホーム画面に追加","title":"ホーム画面に追加","isH3":false,"content":"<p>「ホーム画面に追加」（Add to home screen、略して a2hs）は、モバイルブラウザーによって実装され、アプリのウェブマニフェストにある情報を取得して、それらを使用して端末のホーム画面上のアプリをアイコンと名前で表す機能です。 これは、上記のように、アプリが必要な要件をすべて満たしている場合にのみ機能します。</p>\n<p>ユーザーがサポートしているモバイルブラウザーで PWA にアクセスすると、アプリを PWA としてインストールすることが可能であることを示す通知 (バナーやダイアログボックスなど) が表示されます。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Installable_PWAs/js13kpwa-icon.png\" alt=\"js13kPWA のホーム画面に追加のポップアップ。\" width=\"360\" height=\"640\" loading=\"lazy\">\n</p>\n<p>ユーザーがインストールを実行する意志を示したら、インストールバナーが表示されます。 そのバナーは、マニフェストファイルからの情報に基づいて、ブラウザーによって自動的に作成されます。例えば、プロンプトにはアプリの名前とアイコンが含まれています。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Installable_PWAs/js13kpwa-banner.png\" alt=\"js13kPWA のインストールバナー。\" width=\"360\" height=\"640\" loading=\"lazy\">\n</p>\n<p>ユーザーがボタンをクリックすると、アプリがどのように表示されるかを示し、間違いなくアプリを追加するかどうかをユーザーに選択させる最後のステップがあります。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Installable_PWAs/js13kpwa-add.png\" alt=\"js13kPWA のホーム画面に追加のポップアップ。\" width=\"360\" height=\"640\" loading=\"lazy\">\n</p>\n<p>確認すると、アプリがホーム画面にインストールされます。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Installable_PWAs/js13kpwa-installed.png\" alt=\"\" width=\"360\" height=\"640\" loading=\"lazy\">\n</p>\n<p>これでユーザーは、端末上の他のアプリケーションと同じようにウェブアプリを起動して使用することができるようになりました。端末やオペレーティングシステムによっては、ウェブアプリのアイコンにウェブアプリであることを示す小さなアイコンが付けられている場合があります。例えば、上のスクリーンショットでは、アプリには小さな Firefox のアイコンが付いており、 Firefox ランタイムを使用するウェブアプリであることを示しています。</p>"}},{"type":"prose","value":{"id":"スプラッシュ画面","title":"スプラッシュ画面","isH3":true,"content":"<p>一部のブラウザーでは、マニフェストの情報からスプラッシュ画面も生成されます。 これは、 PWA が起動され読み込まれている間に表示されます。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Installable_PWAs/js13kpwa-splash.png\" alt=\"\" width=\"360\" height=\"640\" loading=\"lazy\">\n</p>\n<p>この画面の作成には、アイコンとテーマカラーと背景色が使用されます。</p>"}},{"type":"prose","value":{"id":"まとめ","title":"まとめ","isH3":false,"content":"<p>この記事では、適切に設定されたウェブマニフェストで PWA をインストール可能にする方法と、その後でブラウザーの「ホーム画面に追加」機能を使って PWA をインストールする方法について学びました。</p>\n<p>a2hs の詳細については、必ず<a href=\"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen\">ホーム画面に追加のガイド</a>をお読みください。 ブラウザーのサポートは現在、Android の Firefox 58 以降、Mobile Chrome および Android Webview 31 以降、および Android の Opera 32 以降に制限されていますが、近い将来に改善されるはずです。</p>\n<p>それでは、PWA パズルの最後のピース、プッシュ通知を使用してユーザーとアナウンスを共有し、ユーザーがアプリに再び参加できるようにする方法に移りましょう。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/Progressive_web_apps/Offline_Service_workers\"> 前のページ </a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/Progressive_web_apps\"> Overview: Progressive web apps</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\"> 次のページ  </a></li>\n</ul>"}}],"toc":[{"text":"要求事項","id":"要求事項"},{"text":"ホーム画面に追加","id":"ホーム画面に追加"},{"text":"まとめ","id":"まとめ"}],"summary":"前回の記事では、サンプルアプリケーション js13kPWA がサービスワーカーによってオフラインで動作する方法を見てきましたが、さらに、対応しているモバイルブラウザーやデスクトップブラウザーでは、ウェブアプリをユーザーがインストールできるようにすることができます。インストールされたウェブアプリは、ネイティブアプリと同様にユーザーが起動することができます。 この記事では、ウェブアプリマニフェストと「ホーム画面に追加」と呼ばれる機能を使用して、これを実現する方法を説明します。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"How to make PWAs installable","locale":"en-US","native":"English (US)"},{"title":"Cómo hacer PWAs instalables","locale":"es","native":"Español"},{"title":"Comment rendre les PWAs installables","locale":"fr","native":"Français"},{"title":"PWA를 설치가능하게 만드는 방법","locale":"ko","native":"한국어"},{"title":"Как сделать PWA устанавливаемым","locale":"ru","native":"Русский"},{"title":"让 PWA 易于安装","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/progressive_web_apps/installable_pwas","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/progressive_web_apps/installable_pwas/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Progressive_web_apps","title":"プログレッシブウェブアプリ (PWA)"},{"uri":"/ja/docs/Web/Progressive_web_apps/Installable_PWAs","title":"PWA をインストール可能にするには"}],"pageTitle":"PWA をインストール可能にするには - プログレッシブウェブアプリ (PWA) | MDN","noIndexing":false}}