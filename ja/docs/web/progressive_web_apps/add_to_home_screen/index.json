{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ホーム画面に追加","mdn_url":"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen","locale":"ja","native":"日本語","sidebarHTML":"\n<ol><li><a href=\"/ja/docs/Web/Progressive_web_apps/Installable_PWAs\">PWA をインストール可能にするには</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Offline_Service_workers\">サービスワーカーで PWA をオフラインで動作させる</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/App_structure\">プログレッシブウェブアプリの構造</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Structural_overview\">プログレッシブウェブアプリの構造的な概要</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Introduction\">プログレッシブウェブアプリの紹介</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Loading\">プログレッシブ読み込み</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen\">ホーム画面に追加</a></li><li><a href=\"/ja/docs/Web/Progressive_web_apps/Re-engageable_Notifications_Push\">通知とプッシュを利用して PWA を再エンゲージ可能にするには</a></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>ホーム画面に追加 (または A2HS と略記) は最近のブラウザーで利用できる機能で、ユーザーがウェブアプリを「インストール」、すなわちお気に入りのウェブアプリケーション (またはウェブサイト) を表すショートカットを自分のホーム画面に追加することができるので、今後はこのショートカットを一回タップすればアクセスできるようになります。このガイドでは、 A2HS の使用方法と、ユーザーがこの機能を利用できるようにするために開発者として行う必要のあることについて説明します。</p>"}},{"type":"prose","value":{"id":"なぜ_a2hs_か","title":"なぜ A2HS か","isH3":false,"content":"<p>A2HS は<a href=\"/ja/docs/Web/Progressive_web_apps\">プログレッシブウェブアプリ</a>の思想の一環となるよう考えられています。 — ウェブアプリにネイティブアプリと同等の使い勝手を与えることで、今日のエコシステム競争に参戦できるものです。この部分はホーム画面のアイコンをタップするという簡単な操作でアプリを起動できるものであり、きちんとした独自のウィンドウに表示されます。 A2HS ではこれを実現します。</p>"}},{"type":"prose","value":{"id":"a2hs_に対応しているブラウザー","title":"A2HS に対応しているブラウザー","isH3":false,"content":"<p>A2HS は、 iOS webview を除いたすべてのモバイルブラウザーが対応しています。また、一部の Chromium ベースのデスクトップブラウザーも対応しています。</p>\n<p>Firefox はモバイルでの対応を<a href=\"/ja/docs/Mozilla/Firefox/Releases/58#%E3%81%9D%E3%81%AE%E4%BB%96\">v58 から</a>行っています。</p>\n<p>正確な詳細は <a href=\"https://caniuse.com/#feat=web-app-manifest\" class=\"external\" rel=\" noopener\">caniuse.com</a> を参照してください。</p>"}},{"type":"prose","value":{"id":"利用方法","title":"利用方法","isH3":false,"content":"<p>A2HS を説明するために最小構成のサンプルページを作成しました(デモページは<a href=\"https://mdn.github.io/pwa-examples/a2hs/\" class=\"external\" rel=\" noopener\">ここから</a>, ソースコードは <a href=\"https://github.com/mdn/pwa-examples/tree/master/a2hs\" class=\"external\" rel=\" noopener\">こちらから</a>)。このページ自体に大した機能はありませんが、ページを端末のホーム画面に追加してサービスワーカーのお陰でページをオフラインで使用可能にするために必要なコードが書かれています。このページは何枚かのキツネの写真を表示します。</p>\n<p>もし Android 版 Firefox または Android 版 Chrome を使用可能であれば、それを使用して<a href=\"https://mdn.github.io/pwa-examples/a2hs/\" class=\"external\" rel=\" noopener\">デモ</a>に移動してみてください（URL バーは Chrome では上端、 Firefox では下端に表示されます。）。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen/url_bar_menu.png\" alt=\"URL バーメニューL\" width=\"1431\" height=\"191\" loading=\"lazy\">\n</p>\n<p>\n  URL バーの横にあるメニューを開きます。\n  使用しているのが Chrome であるか、 Android であるかによって、「インストール」または「アプリのインストール」というメニューが表示されます。\n  これが、必要な機能を備えているサイトに表示される「ホーム画面に追加」オプションです。\n</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen/menu_install_app.png\" alt=\"アプリをインストールするオプション付きメニュー\" width=\"1200\" height=\"1223\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> 古いバージョンのブラウザーでは、「ホーム」アイコンの中にプラス (+) アイコンが表示される場合があります。\n    これは同じことを行います。\n  </p>\n  <p>\n    <img src=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen/add-to-home-screen-icon.png\" alt=\"ホーム画面に追加するアイコン（古いブラウザーで使用するもの）\" width=\"500\" height=\"64\" loading=\"lazy\">\n  </p>\n</div>\n<p>オプションを選択すると、アプリケーションをホーム画面に追加する処理が開始されます。</p>\n<p>\n  このプロセスは、ブラウザー、モバイル端末のオペレーティングシステム、さらには機器によって若干異なる場合があります。\n  例えば、 Google Pixel 3 で Android 上の Firefox を使用すると、 Pixel ランチャーが表示されます。\n</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen/pixel_launcher_add_app.png\" alt=\"Pixelランチャーでのアプリのインストール\" width=\"600\" height=\"740\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Chrome のインストールバナーについては、<a href=\"https://web.dev/customize-install/\" class=\"external\" rel=\" noopener\">自分自身でウェブインストール体験を指定された方法</a>の記事から、いろいろと調べることができます。</p>\n</div>\n<p>どのブラウザーで使用しているかにかかわらず、ホーム画面に追加することを選ぶと、ネイティブアプリと同じように、短いタイトルとともにアプリが表示されるのがわかります。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen/a2hs-on-home-screen.png\" alt=\"\" width=\"400\" height=\"243\" loading=\"lazy\">\n</p>\n<p>このアイコンをタップすると開きますが、全画面アプリとして開き、その周囲のブラウザー UI は表示されません。</p>"}},{"type":"prose","value":{"id":"アプリを_a2hs_対応にするには","title":"アプリを A2HS 対応にするには","isH3":false,"content":"<p>ウェブアプリを A2HS 対応にするには、次の要件を満たしている必要があります。</p>\n<ul>\n  <li>ウェブアプリが HTTPS で配信されていること ― ウェブはいまよりセキュアなほうへ向かっており A2HS を含むモダンなウェブ技術はセキュアな通信の上でのみ動くようになっています。</li>\n  <li>正しくフィールドが記入されたマニフェストファイルが含まれていて、それが HTML の &lt;head&gt; 部分にリンクされていること</li>\n  <li>ホーム画面に追加した時に正しく表示されるように適切なアイコンが含まれていること</li>\n  <li>Chrome は、追加でアプリがサービスワーカーを登録しておく必要があります (例えば、オフライン時に機能するように)。</li>\n</ul>"}},{"type":"prose","value":{"id":"マニフェスト","title":"マニフェスト","isH3":true,"content":"<p>マニフェストファイルは JSON 形式で書かれ、ウェブアプリ内のどこかに設置される必要があります (置き場所はルートディレクトリにするのがよいです)。またファイルの拡張子は <code>.webmanifest</code> にします。ここでは <code>manifest.webmanifest</code> といファイル名にしました。このファイルにはウェブアプリについての情報やどのような挙動をするのかについての設定が記されています。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> 拡張子 <code>.webmanifest</code> はドキュメントの中の <a href=\"https://w3c.github.io/manifest/#media-type-registration\" class=\"external\" rel=\" noopener\">Media type registration</a> の節の中で定義されています。ただ、多くの場合ブラウザーは他の適切な拡張し、たとえば <code>.json</code> に対応するでしょう。</p>\n</div>\n<p>A2HS に必要なフィールドは次の通りです。</p>\n<ul>\n  <li><code>background_color</code>: いくつかのアプリのコンテキストで使用する背景色を指定します。 A2HS に最も関連するのは、ホーム画面のアプリアイコンをタップして最初にロードを開始したときに表示されるスプラッシュ画面です (現在のところ、これは Chrome でアプリがホーム画面に追加されたときにのみ表示されます)。</li>\n  <li><code>display</code>: アプリの表示方法を指定します。独立したアプリ (単なるウェブページではなく) のように見せるには、 <code>fullscreen</code> (UI が全く表示されない) や <code>standalone</code> (よく似ているが、ステータスバーなどのシステムレベルの UI 要素が表示される場合がある) などの値を選択してください。</li>\n  <li><code>icons</code>: アプリをさまざまな場所 (タスク切り替えや肝心のホーム画面) など、で表示する際に使用するブラウザーのアイコンを指定します。今回のデモでは 1 つだけを含めました。</li>\n  <li><code>name</code>/<code>short_name</code>: これらのフィールドは、異なる場所でアプリを表示する際に表示されるアプリ名を提供します。 <code>name</code> はアプリの完全な名前を提供し、 <code>short_name</code> は完全な名前を表示するためのスペースが不足している場合に使用される短縮名を提供します。アプリの名前が特に長い場合は、両方を指定することをお勧めします。</li>\n  <li><code>start_url</code>: ホーム画面に追加したアプリが起動したときに読み込まれる資産へのパスを指定します。これは、サイトインデックスを指す相対 URL であり、マニフェストの URL からの相対 URL でなければならないことに注意してください。また、 Chrome ではインストールバナーを表示するのに必要ですが、 Firefox でプラス印の付いたホームのアイコンを表示するためは必要ではないことに注意してください。</li>\n</ul>\n<p>サンプルアプリのマニフェストは次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"background_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"purple\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Shows random fox pictures. Hey, at least it isn't cats.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"display\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fullscreen\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"icon/fox-icon.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"192x192\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Awesome fox pictures\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"short_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Foxes\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/pwa-examples/a2hs/index.html\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"適切なアイコン","title":"適切なアイコン","isH3":true,"content":"<p>上記のマニフェスト一覧に記載されているように、アプリを使用するために192 x 192 pxのアイコンを記載しています。必要に応じて、さらに多くのサイズを記載することができます。Android は、さまざまな用途に応じて最も適切なサイズを選択します。また、端末が最適なものを使用できるように、異なる種類のアイコンを記載することもできます（例: Chrome はすでに WebP 形式に対応しています）。</p>\n<p>各アイコンのオブジェクトの <code>type</code> メンバがアイコンの MIME タイプを指定することに注意してください。これにより、ブラウザーはそのアイコンの種類をすばやく読み取り、対応していない場合はそれを無視して別のアイコンに移動することができます。</p>\n<p>アイコンのデザイン方法については、他の Android のアイコンと同じ最善の手法に従うべきです（ <a href=\"https://developer.android.com/distribute/google-play/resources/icon-design-specifications\" class=\"external\" rel=\" noopener\">Google Play icon design specifications</a> を参照）。</p>"}},{"type":"prose","value":{"id":"html_からマニフェストへリンクする","title":"HTML からマニフェストへリンクする","isH3":true,"content":"<p>マニフェストの設定を完了するには、アプリケーションのホームページの HTML からマニフェストを参照する必要があります。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manifest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manifest.webmanifest<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre></div>\n<p>A2HS に対応しているブラウザーは、これによってマニフェストがどこにあるかを把握することができます。</p>"}},{"type":"prose","value":{"id":"a2hs_でできないこと","title":"A2HS でできないこと","isH3":false,"content":"<p>ホーム画面にアプリを追加しても、それはアプリを簡単にアクセスできるようにするだけで、アプリの資産やデータを機器にダウンロードしたり、アプリをオフラインで利用できるようにしたりするようなことはしないことを覚えておいてください。アプリをオフラインで動作させるには、オフラインで資産を格納するために<a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー API</a> を使用し、必要に応じて <a href=\"/ja/docs/Web/API/Web_Storage_API\">ウェブストレージ</a> や <a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB</a> を使用してそのデータを格納するようにしなければなりません。</p>\n<p>この例のアプリでは、必要なファイルをすべて格納するためにサービスワーカーを使用しただけです。サービスワーカーは、 <a href=\"https://github.com/mdn/pwa-examples/blob/master/a2hs/index.js\" class=\"external\" rel=\" noopener\"><code>index.js</code></a> ファイル内の最後のコードブロックで、サイトに対して登録されます。次に、<a href=\"/ja/docs/Web/API/Cache\">キャッシュ API</a> を使用してサイトのすべての資産をキャッシュし、 <a href=\"https://github.com/mdn/pwa-examples/blob/master/a2hs/sw.js\" class=\"external\" rel=\" noopener\">sw.js</a> ファイルのコードを使用してネットワークの代わりにキャッシュからそれらを提供します。</p>"}},{"type":"prose","value":{"id":"デスクトップでの_a2hs","title":"デスクトップでの A2HS","isH3":false,"content":"<p>本来はモバイル OS での使い勝手を向上させるためのものですが、PWA をデスクトッププラットフォームにもインストールする動きが出てきてい ます。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> この説明の時点では、以下の機能は新しいバージョンのChromeでのみ対応しています。Windowsでは既定で、 macOS では <code>#enable-desktop-pwas</code> フラグの後ろで対応しています。</p>\n</div>"}},{"type":"prose","value":{"id":"インストールボタンの追加","title":"インストールボタンの追加","isH3":true,"content":"<p>PWA インストール機能をデスクトップでも実現するには、まずインストールボタンをドキュメントに追加する必要があります。デスクトップではモバイル端末とは違い自動的にポップアップなどが出るわけではなくユーザーがトリガーを設定してやる必要があるのです。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>add-button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>ホーム画面に追加<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>例えばこんなふうにデザインします。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.add-button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"インストールを扱うための_javascript","title":"インストールを扱うための JavaScript","isH3":true,"content":"<p><a href=\"https://github.com/mdn/pwa-examples/blob/master/a2hs/index.js\" class=\"external\" rel=\" noopener\"><code>index.js</code> ファイル</a>の一番下に、インストールを処理するための JavaScript を追加しています。まず最初に、変数 <code>deferredPrompt</code> を宣言し（これについては後ほど説明します）、インストールボタンを参照し、最初は <code>display: none</code> に設定しています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> deferredPrompt<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> addBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.add-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\naddBtn<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>PWA は A2HS の基準に従うことで、初めてインストールを利用できるようになるため、最初はボタンを非表示にしています。このとき、対応しているブラウザーは <code>beforeinstallprompt</code> イベントを発行します。そして、以下のようなハンドラーを使用して、インストールを処理することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'beforeinstallprompt'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Chrome 67以前のバージョンでプロンプトが自動的に表示されないようにする</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 後で発生させることができるように、イベントを隠しておく。</span>\n  deferredPrompt <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ホーム画面に内側へ追加できることをユーザーに通知する UI の更新</span>\n  addBtn<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'block'</span><span class=\"token punctuation\">;</span>\n\n  addBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// A2HS ボタンを表示するユーザーインターフェイスを非表示にします。</span>\n    addBtn<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// プロンプトを表示</span>\n    deferredPrompt<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ユーザーがプロンプトに応答するのを待つ</span>\n    deferredPrompt<span class=\"token punctuation\">.</span>userChoice<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">choiceResult</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>choiceResult<span class=\"token punctuation\">.</span>outcome <span class=\"token operator\">===</span> <span class=\"token string\">'accepted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ユーザーが A2HS プロンプトを受け入れました。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ユーザーは A2HS のプロンプトを拒否しました。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        deferredPrompt <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>すなわち、次のようにします。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/Event/preventDefault\"><code>Event.preventDefault()</code></a> を呼び出すと、 Chrome 67 以前では自動的にインストールプロンプトを呼び出さなくなります（この動作は Chrome 68 で変更されました）。</li>\n  <li>イベントオブジェクトを <code>deferredPrompt</code> 変数に格納し、後で実際のインストールを行う際に使用できるようにします。</li>\n  <li>ボタンを <code>display: block</code> に設定し、ユーザーがクリックできるように UI に表示されるようにします。</li>\n  <li>ボタンに <code>click</code> ハンドラーを設定します。</li>\n</ul>\n<p>クリックハンドラーは以下のステップで構成されています。</p>\n<ul>\n  <li>ボタンを <code>display: none</code> でもう一度隠します。アプリがインストールされたらもう必要ありません。</li>\n  <li>インストールプロンプトを表示するトリガーとして、（<code>deferredPrompt</code> に格納された） <code>beforeinstallprompt</code> イベントオブジェクトで利用できる <code>prompt()</code> メソッドを使用します。</li>\n  <li>再び <code>beforeinstallprompt</code> イベントオブジェクトで使用できる <code>userChoice</code> プロパティを使用して、ユーザーとプロンプトの対話に応答します。</li>\n  <li>もう必要ないので、 <code>deferredPrompt</code> を null に設定します。</li>\n</ul>\n<p>そこで、ボタンをクリックすると、インストールを促すプロンプトが現れます。</p>\n<p>\n  <img src=\"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen/chrome-desktop-a2hs-banner.png\" alt=\"\" loading=\"lazy\">\n</p>\n<p>ユーザーが [インストール] を選択すると、アプリはインストールされ（スタンドアロンのデスクトップアプリとして利用できます）、インストールボタンは表示されなくなります（アプリがすでにインストールされている場合は、 <code>onbeforeinstallprompt</code> イベントが発行されなくなります）。アプリを開くと、アプリは自分自身でウィンドウに表示されます。</p>\n<p>\n  <img src=\"/en-US/docs/Web/Progressive_web_apps/Add_to_home_screen/a2hs-installed-desktop.png\" alt=\"\" width=\"500\" height=\"296\" loading=\"lazy\">\n</p>\n<p>ユーザーが [キャンセル] を選択すると、アプリの状態はボタンがクリックされる前の状態に戻ります。</p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>Note:</strong> この章のコードは多くを <a href=\"https://web.dev/customize-install/\" class=\"external\" rel=\" noopener\">How to provide your own in-app install experience</a> (Pete LePage) から引用しました。</p>\n</div>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps\">プログレッシブウェブアプリ</a></li>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー API</a></li>\n  <li><a href=\"/ja/docs/Web/Manifest\">ウェブマニフェストリファレンス</a></li>\n</ul>"}}],"toc":[{"text":"なぜ A2HS か","id":"なぜ_a2hs_か"},{"text":"A2HS に対応しているブラウザー","id":"a2hs_に対応しているブラウザー"},{"text":"利用方法","id":"利用方法"},{"text":"アプリを A2HS 対応にするには","id":"アプリを_a2hs_対応にするには"},{"text":"A2HS でできないこと","id":"a2hs_でできないこと"},{"text":"デスクトップでの A2HS","id":"デスクトップでの_a2hs"},{"text":"関連情報","id":"関連情報"}],"summary":"ホーム画面に追加 (または A2HS と略記) は最近のブラウザーで利用できる機能で、ユーザーがウェブアプリを「インストール」、すなわちお気に入りのウェブアプリケーション (またはウェブサイト) を表すショートカットを自分のホーム画面に追加することができるので、今後はこのショートカットを一回タップすればアクセスできるようになります。このガイドでは、 A2HS の使用方法と、ユーザーがこの機能を利用できるようにするために開発者として行う必要のあることについて説明します。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Add to Home screen","locale":"en-US","native":"English (US)"},{"title":"Ajouter à l'écran d'accueil","locale":"fr","native":"Français"},{"title":"Add to home screen","locale":"ko","native":"한국어"},{"title":"添加到主屏幕","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/progressive_web_apps/add_to_home_screen","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/progressive_web_apps/add_to_home_screen/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Progressive_web_apps","title":"プログレッシブウェブアプリ (PWA)"},{"uri":"/ja/docs/Web/Progressive_web_apps/Add_to_home_screen","title":"ホーム画面に追加"}],"pageTitle":"ホーム画面に追加 - プログレッシブウェブアプリ (PWA) | MDN","noIndexing":false}}