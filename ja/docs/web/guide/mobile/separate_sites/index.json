{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"モバイルとデスクトップで別々のサイト","mdn_url":"/ja/docs/Web/Guide/Mobile/Separate_sites","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>モバイルウェブ開発への「別々のサイト」アプローチは、モバイルウェブユーザーとデスクトップウェブユーザーのために異なるサイトを作成することを含みます。このアプローチにはプラス面とマイナス面があります。</p>"}},{"type":"prose","value":{"id":"長所","title":"長所","isH3":false,"content":"<p>この最初の選択肢はこれまでで最も人気があります — <a href=\"https://ja.wikipedia.org/wiki/%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%82%A8%E3%83%BC%E3%82%B8%E3%82%A7%E3%83%B3%E3%83%88#%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%82%A8%E3%83%BC%E3%82%B8%E3%82%A7%E3%83%B3%E3%83%88%E3%83%BB%E3%82%B9%E3%83%8B%E3%83%83%E3%83%95%E3%82%A3%E3%83%B3%E3%82%B0\" class=\"external\" rel=\" noopener\">ユーザーエージェント検出</a>を使用して、携帯電話のユーザーを別のモバイルサイト（典型的には m.example.com）に転送する方法です。一言で言えば、このテクニックではサーバー側のロジックを使用して<a href=\"https://blog.mozilla.com/webdev/2011/05/04/approaches-to-mobile-web-development-part-1-what-is-mobile-friendliness/\" class=\"external\" rel=\" noopener\">モバイルウェブ開発の 3 つの目標</a>（英語）すべてを一度に解決します — ユーザーのブラウザーが携帯電話のように見える場合は、携帯電話用にフォーマットされ、速度が最適化されたモバイルコンテンツを配信します。</p>\n<p>概念的には単純ですが、特にテンプレートをサポートする CMS またはウェブアプリケーションを使用している場合は、これが既存のサイトに追加する最も簡単な選択肢です。モバイルユーザーにはモバイル固有のコンテンツ、スタイル、およびスクリプトのみが送信されるため、この方法では、ここに示されている他の選択肢のどれよりも最高のパフォーマンスが得られます。最終的に、デスクトップとモバイルでまったく異なるユーザーエクスペリエンスを実現できます — 結局のところ、それらは 2 つの異なるサイトです！</p>"}},{"type":"prose","value":{"id":"短所","title":"短所","isH3":false,"content":"<p>残念ながら、このアプローチは欠点がないわけではありません。手始めに、モバイルユーザーに公開したいサイトの各ページに対して 2 つの異なるページを管理しています。CMS を使用している場合は、この重複を最小限に抑えるようにサイトのテンプレートを配置することが可能です。ただし、モバイルとデスクトップでテンプレートに違いがあるときはいつでも、コードには複雑な原因がひそんでいます。同様に、2 セットのフロントエンドロジックをコーディングする必要があるため、これにより新しいサイト機能の実装時間が長くなります。</p>\n<p>ただし、それよりもさらに重要なのは、ユーザーエージェントの検出には<a href=\"https://css-tricks.com/browser-detection-is-bad/\" class=\"external\" rel=\" noopener\">本質的に欠陥があり</a>（英語）、将来を見据えたものではないという事実です。新しいブラウザーが登場するたびに、それに対応するようにアルゴリズムを調整する必要があります。そして誤検知は特に怖いです — モバイルサイトを誤ってデスクトップユーザーに配信すると当惑させるかもしれません。</p>"}},{"type":"prose","value":{"id":"この選択肢を選ぶのが正しいとき","title":"この選択肢を選ぶのが正しいとき","isH3":false,"content":"<p>\n  <img src=\"/en-US/docs/Web/Guide/Mobile/Separate_sites/sumo_screenshot.png\" alt=\"sumo_screenshot.png\" width=\"300\" height=\"545\" loading=\"lazy\">まず、対象視聴者に古いかローエンドの<a href=\"https://www.cnet.com/8301-17918_1-10461614-85.html\" class=\"external\" rel=\" noopener\">フィーチャーフォン</a>（英語）のユーザーが含まれている場合は、この戦略を<a href=\"http://www.passani.it/gap/#adaptation\" class=\"external\" rel=\" noopener\">ある程度</a>（英語）採用する必要があるかもしれません。これは、一部のフィーチャーフォンのデフォルトブラウザーは、デスクトップを対象としたウェブサイトと同じマークアップをサポートしておらず、代わりに <a href=\"http://ja.wikipedia.org/wiki/XHTML_Mobile_Profile\" class=\"external\" rel=\" noopener\">XHTML-MP</a> や古い <a href=\"http://ja.wikipedia.org/wiki/Wireless_Markup_Language\" class=\"external\" rel=\" noopener\">WML</a> などの形式を理解するためです。\n</p>\n<p>この要因はさておき、この戦略が他の方法よりも本当に優れているケースが 1 つあります。モバイルデバイスでユーザーに提供したい機能がデスクトップのそれとは極端に異なる場合は、別々のサイトを使用するのが<a href=\"https://tripleodeon.com/2010/10/not-a-mobile-web-merely-a-320px-wide-one\" class=\"external\" rel=\" noopener\">最も実用的な選択</a>（英語）になる可能性があります。これは、完全に完全に別々の HTML、JavaScript、CSS を携帯電話と PC に送信するという選択肢があるからです。</p>\n<p>このアプローチを使用することを余儀なくされるもう 1 つのケースは、何らかの理由で既存のデスクトップサイトを変更できず、100% 別のモバイルサイトを必要とする場合です。理想的ではありませんが、少なくともこの選択肢があります。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p><a href=\"https://m.facebook.com/\" class=\"external\" rel=\" noopener\">Facebook</a>、<a href=\"https://m.youtube.com/\" class=\"external\" rel=\" noopener\">YouTube</a>、<a href=\"http://m.digg.com/\" class=\"external\" rel=\" noopener\">Digg</a>、<a href=\"https://m.flickr.com/\" class=\"external\" rel=\" noopener\">Flickr</a> など、あなたが実際に目にする主要なウェブアプリケーションのほとんどがこの方法を選択しています。実際、Mozilla はモバイル版の <a href=\"https://addons.mozilla.org/\" class=\"external\" rel=\" noopener\">addons.mozilla.org</a>（AMO）と <a href=\"https://support.mozilla.com/\" class=\"external\" rel=\" noopener\">support.mozilla.org</a>（SUMO）にこの戦略を選択しました。このアプローチの例の背後にあるソースコードを実際に見たい場合は、<a href=\"https://github.com/jbalogh/zamboni/\" class=\"external\" rel=\" noopener\">AMO</a> または <a href=\"https://github.com/jsocol/kitsune\" class=\"external\" rel=\" noopener\">SUMO</a>（リンク切れ）の github リポジトリをチェックしてください。</p>"}},{"type":"prose","value":{"id":"モバイルウェブ開発へのアプローチ","title":"モバイルウェブ開発へのアプローチ","isH3":false,"content":"<p>モバイルプラットフォーム向けに開発するための背景やその他のアプローチについては、以下の記事を参照してください。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/Guide/Mobile/Mobile-friendliness\">モバイルの親しみやすさとは？</a></li>\n  <li><a href=\"/ja/docs/Web/Progressive_web_apps\">レスポンシブデザイン</a></li>\n  <li><a href=\"/ja/docs/Web/Guide/Mobile/A_hybrid_approach\">ハイブリッドアプローチ</a></li>\n</ul>"}},{"type":"prose","value":{"id":"原本情報","title":"原本情報","isH3":true,"content":"<p>この記事は、もともと 2011 年 5 月 13 日に Mozilla Webdev ブログで「<a href=\"https://blog.mozilla.com/webdev/2011/05/13/approaches-to-mobile-web-development-part-2-separate-sites/\" class=\"external\" rel=\" noopener\">モバイルウェブ開発へのアプローチ 第 2 部 - 別々のサイト</a>」として Jason Grlicky によって公開されました。（英語）</p>"}}],"toc":[{"text":"長所","id":"長所"},{"text":"短所","id":"短所"},{"text":"この選択肢を選ぶのが正しいとき","id":"この選択肢を選ぶのが正しいとき"},{"text":"例","id":"例"},{"text":"モバイルウェブ開発へのアプローチ","id":"モバイルウェブ開発へのアプローチ"}],"summary":"モバイルウェブ開発への「別々のサイト」アプローチは、モバイルウェブユーザーとデスクトップウェブユーザーのために異なるサイトを作成することを含みます。このアプローチにはプラス面とマイナス面があります。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Separate sites for mobile and desktop","locale":"en-US","native":"English (US)"},{"title":"모바일과 데스크톱용 개별 사이트","locale":"ko","native":"한국어"},{"title":"Sites separados para celular e desktop","locale":"pt-BR","native":"Português (do Brasil)"}],"source":{"folder":"ja/web/guide/mobile/separate_sites","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/guide/mobile/separate_sites/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Guide","title":"開発者ガイド"},{"uri":"/ja/docs/Web/Guide/Mobile","title":"モバイルウェブ開発"},{"uri":"/ja/docs/Web/Guide/Mobile/Separate_sites","title":"モバイルとデスクトップで別々のサイト"}],"pageTitle":"モバイルとデスクトップで別々のサイト - 開発者ガイド | MDN","noIndexing":false}}