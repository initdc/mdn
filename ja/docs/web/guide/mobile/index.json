{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"モバイルウェブ開発","mdn_url":"/ja/docs/Web/Guide/Mobile","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>このページでは、モバイル端末で適切に機能するウェブサイトを設計するために必要となる、主要な一部のテクニックの概要を説明します。 Mozilla の Firefox OS プロジェクトに関する情報を探している場合は、 <a href=\"/ja/docs/Mozilla/Firefox_OS\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Firefox OS</a> のページを参照してください。または、 <a href=\"/ja/docs/Mozilla/Firefox_for_Android\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Android 版 Firefox</a> に興味があるかもしれません。</p>\n<p><a href=\"#designing_for_mobile_devices\">モバイル端末向けの設計</a>と<a href=\"#cross-browser_development\">ブラウザー間の互換性</a>の 2 つの節に整理しました。また、 Jason Grlicky によるウェブ開発者向けの<a href=\"/ja/docs/Web/Guide/Mobile/Mobile-friendliness\">モバイルへの親和性</a>のガイドも参照してください。</p>"}},{"type":"prose","value":{"id":"モバイル端末向けの設計","title":"モバイル端末向けの設計","isH3":false,"content":"<p>モバイル端末は、デスクトップパソコンやノートパソコンと比較して、ハードウェアの特性がまったく異なります。画面は通常、明らかに小さくなりますが、ユーザーが端末を回転させると、画面の向きがポートレートモードとランドスケープモードの間で自動的に切り替わります。通常、ユーザー入力用のタッチスクリーンがあります。位置情報や画面の向きなどの API は、デスクトップでは未対応であったりあまり有用でなかったりしますので、これらの API はモバイルユーザーに、サイトと対話するための新しい方法を提供します。</p>"}},{"type":"prose","value":{"id":"小さな画面での作業","title":"小さな画面での作業","isH3":true,"content":"<p><a href=\"/ja/docs/Web/Progressive_web_apps\">レスポンシブウェブデザイン</a>は、ウェブサイトのレイアウトを表示する環境 — 特に、大きさと画面の向き — の変化に合わせることができる一連の技術を表す用語です。これには次のような技術が含まれています。</p>\n<ul>\n  <li>流動的 CSS レイアウトにより、ブラウザーの大きさが変化したときにページを円滑に合わせる</li>\n  <li><a href=\"/ja/docs/Web/CSS/Media_Queries\">メディアクエリ</a>を使用して、端末の画面の<a href=\"/ja/docs/Web/CSS/@media/width\">幅</a>と<a href=\"/ja/docs/Web/CSS/@media/height\">高さ</a>にふさわしい CSS の規則を条件付きで含める</li>\n</ul>\n<p><a href=\"/ja/docs/Mozilla/Mobile/Viewport_meta_tag\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">viewport メタタグ</a>で、ブラウザーに対してユーザーの端末の適切な表示倍率でサイトを表示するよう指示します。</p>"}},{"type":"prose","value":{"id":"タッチ画面での操作","title":"タッチ画面での操作","isH3":true,"content":"<p>タッチ画面を使うには、 <a href=\"/ja/docs/Web/API/Touch_events\">DOM タッチイベント</a>の作業をする必要があります。 CSS の <a href=\"/ja/docs/Web/CSS/:hover\"><code>:hover</code></a> 擬似クラスを使用することはできないでしょうし、指はマウスポインターより太いという事実を考慮して、クリック可能なアイテムをボタンのようにデザインする必要があるでしょう。この記事、 <a href=\"https://web.archive.org/web/20150520130912/http://www.whatcreative.co.uk/blog/tips/designing-for-touch-screen/\" class=\"external\" rel=\" noopener\">designing for touch screens</a> を参照してください。</p>\n<p><a href=\"/ja/docs/Web/CSS/@media/pointer\">pointer</a> または <a href=\"/ja/docs/Web/CSS/@media/any-pointer\">any-pointer</a> メディアクエリを使用して、タッチ可能な端末で異なる CSS を読み込むことができます。</p>"}},{"type":"prose","value":{"id":"画像の最適化","title":"画像の最適化","isH3":true,"content":"<p>端末の帯域幅が低かったり高価だったりするユーザーを支援するために、デバイスの画面サイズと解像度に適した画像をロードして画像を最適化することができます。 CSS でこれを行うには、画面の<a href=\"/ja/docs/Web/CSS/@media/height\">高さ</a>、<a href=\"/ja/docs/Web/CSS/@media/width\">幅</a>、<a href=\"/ja/docs/Web/CSS/@media/resolution\">ピクセル比</a>でクエリを行います。</p>\n<p>CSS プロパティを使用して、画像を使用せずに<a href=\"/ja/docs/Web/CSS/CSS_Images/Using_CSS_gradients\">グラデーション</a>や<a href=\"/ja/docs/Web/CSS/box-shadow\">影</a>などの視覚効果を実装することもできます。</p>"}},{"type":"prose","value":{"id":"モバイル_api","title":"モバイル API","isH3":true,"content":"<p>最後に、<a href=\"/en-US/docs/Web/API/Device_orientation_events/Detecting_device_orientation\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">端末の向き (en-US)</a>や<a href=\"/ja/docs/Web/API/Geolocation_API\">位置情報</a>など、モバイル端末が提供する新しい可能性の利点を活用することができます。</p>"}},{"type":"prose","value":{"id":"クロスブラウザー開発","title":"クロスブラウザー開発","isH3":false,"content":""}},{"type":"prose","value":{"id":"クロスブラウザーコードを書く","title":"クロスブラウザーコードを書く","isH3":true,"content":"<p>様々なモバイル端末で受け入れられ動作するウェブサイトを作成するには、以下のことが必要です。</p>\n<ul>\n  <li>ベンダー接頭辞のついた CSS プロパティなど、ブラウザーに依存した機能を使用することを避けるようにしてください。</li>\n  <li>これらの機能を使用する必要がある場合は、他のブラウザーがこれらの機能を独自に実装しているかを調べ、それも対象にします。</li>\n  <li>ブラウザーがそれらの機能に対応していない場合は、利用可能な代替機能を提供してください。</li>\n</ul>\n<p>例えば、一部のテキストに背景としてグラデーションを、 <code>-webkit-linear-gradient</code> のようなベンダー接頭辞の付いたプロパティを使用して設定する場合、最も良いのは <a href=\"/ja/docs/Web/CSS/gradient/linear-gradient\"><code>linear-gradient()</code></a> プロパティの他のベンダー接頭辞が付いたものを含めることです。それを行わない場合は、少なくとも既定の背景がテキストとコントラストが付いていることを確認してください。つまり、ページが少なくとも <code>linear-gradient</code> 規則の対象外のブラウザーで利用できるようにします。</p>\n<p>この <a href=\"/ja/docs/Web/CSS/Mozilla_Extensions\">Gecko 固有のプロパティの一覧</a>と、この <a href=\"/ja/docs/Web/CSS/WebKit_Extensions\">WebKit 固有のプロパティの一覧</a>、そして Peter Beverloo の <a href=\"https://peter.sh/experiments/vendor-prefixed-css-property-overview/\" class=\"external\" rel=\" noopener\">table of vendor-specific properties</a> を参照してください。</p>\n<p><a href=\"http://csslint.net/\" class=\"external\" rel=\" noopener\">CSS Lint</a> などのツールを使用すると、コード内のこのような問題を探すのに役立ちますし、 <a href=\"https://sass-lang.com/\" class=\"external\" rel=\" noopener\">SASS</a> や <a href=\"https://lesscss.org/\" class=\"external\" rel=\" noopener\">LESS</a> などのプリプロセッサーを使用すると、クロスブラウザーのコードを生成するのに役立つことがあります。</p>"}},{"type":"prose","value":{"id":"ユーザーエージェントの推測に注意","title":"ユーザーエージェントの推測に注意","isH3":true,"content":"<p>以上のような手法を使用して、ウェブサイトが画面の大きさやタッチ画面などといった特定の端末特性を検出し、それに適応することが望ましい形です。しかし、これは非現実的である場合があり、ウェブサイトがブラウザーのユーザーエージェント文字列を解析して、デスクトップ、タブレット、携帯電話を区別し、端末ごとに異なるコンテンツを提供することに手を出しがちです。</p>\n<p>これを行う場合は、アルゴリズムが正しく、特定のブラウザーのユーザーエージェント文字列を理解していないために、間違った種類のコンテンツをデバイスに提供していないことを確認してください。<a href=\"/ja/docs/Web/HTTP/Browser_detection_using_the_user_agent#mobile.2c_tablet_or_desktop\">ユーザーエージェント文字列を使用して端末の種類を決定するガイド</a>を参照してください。</p>"}},{"type":"prose","value":{"id":"複数のブラウザーでのテスト_test_on_multiple_browsers","title":"複数のブラウザーでのテスト Test on multiple browsers","isH3":true,"content":"<p>ウェブサイトを複数のブラウザーでテストしてください。これは複数のプラットフォームでテストをするということです。 — 少なくとも iOS と Android です。</p>\n<ul>\n  <li>iPhone のモバイル Safari をテストするには、 <a href=\"https://developer.apple.com/devcenter/ios/index.action\" class=\"external\" rel=\" noopener\">iOS シミュレーター</a>を使用します</li>\n  <li>Opera や Firefox は <a href=\"https://developer.android.com/sdk/index.html\" class=\"external\" rel=\" noopener\">Android SDK</a> でテストします。これらの詳しい操作方法は、 <a href=\"https://wiki.mozilla.org/Mobile/Fennec/Android/Emulator\" class=\"external\" rel=\" noopener\">running Firefox for Android using the Android emulator</a> を参照してください。</li>\n</ul>"}}],"toc":[{"text":"モバイル端末向けの設計","id":"モバイル端末向けの設計"},{"text":"クロスブラウザー開発","id":"クロスブラウザー開発"}],"summary":"このページでは、モバイル端末で適切に機能するウェブサイトを設計するために必要となる、主要な一部のテクニックの概要を説明します。 Mozilla の Firefox OS プロジェクトに関する情報を探している場合は、 Firefox OS のページを参照してください。または、 Android 版 Firefox に興味があるかもしれません。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Mobile Web Development","locale":"en-US","native":"English (US)"},{"title":"Desarrollo Web Móvil","locale":"es","native":"Español"},{"title":"Développement web mobile","locale":"fr","native":"Français"},{"title":"Mobile Web Development","locale":"ko","native":"한국어"},{"title":"Mobile Web Development","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Веб-разработка под мобильные устройства","locale":"ru","native":"Русский"},{"title":"手机网页开发","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/guide/mobile","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/guide/mobile/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Guide","title":"開発者ガイド"},{"uri":"/ja/docs/Web/Guide/Mobile","title":"モバイルウェブ開発"}],"pageTitle":"モバイルウェブ開発 - 開発者ガイド | MDN","noIndexing":false}}