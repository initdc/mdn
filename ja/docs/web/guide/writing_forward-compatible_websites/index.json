{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"前方互換性のあるウェブサイトを書く","mdn_url":"/ja/docs/Web/Guide/Writing_forward-compatible_websites","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>このページでは、新しいバージョンのブラウザーが公開されても壊れることのないウェブサイトを記述する方法を説明します。</p>\n<p>これはイントラネットや公衆向けでないウェブサイトで特に重要です。私たちがコードを見ることができないので、それが壊れていることを確認できないのです。これらのすべてに従うことができない場合もありますが、できる限り多くの事項に従うことで、ウェブサイトを将来にわたって有用な状態にすることの助けになります。</p>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":false,"content":""}},{"type":"prose","value":{"id":"onfoo_属性でグローバル変数へアクセスする際に_window._接頭辞を付加する","title":"<code>onfoo</code> 属性でグローバル変数へアクセスする際に \"<code>window</code>.\" 接頭辞を付加する","isH3":true,"content":"<p>HTML の要素でイベントハンドラーのコンテンツ属性（<code>onclick</code>、 <code>onmouseover</code> など）が使用されているとき、それら属性でのすべての名前探索は始めに要素自身、次にフォームコントロール要素の場合はそのフォーム、そして document、さらに（あなたがグローバル変数を定義した） window の順に行われます。例えば、以下のマークアップがあるとします。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>ownerDocument<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Click me<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>文字列をクリックすると <code>div</code> の <code>ownerDocument</code> をアラートで表示します。これは、<code>var ownerDocument</code> がグローバルスコープで宣言されている場合でも動作します。</p>\n<p>つまり、イベントハンドラーのコンテンツ属性でグローバル変数にアクセスする場合、グローバルに宣言された関数を呼び出す場合も含めて、その関数や変数と同じ名前の新しい DOM プロパティが要素や文書に追加され、ブラウザーがそれを実装すると、名前の衝突が発生する可能性があるということです。そうすると、突然、関数が呼び出されなくなるのです。このようなことは、 HTML5 の進化の過程で、すでにさまざまなサイトで何度も起こっています。</p>\n<p>これを防ぐには、以下のように \"window.\" を用いてグローバル変数にアクセスしてください。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">function</span> <span class=\"token function\">localName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Function localName has been called'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\">window<span class=\"token punctuation\">.</span><span class=\"token function\">localName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Clicking me should show an alert<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>","titleAsText":"onfoo 属性でグローバル変数へアクセスする際に \"window.\" 接頭辞を付加する"}},{"type":"prose","value":{"id":"自身で管理しないスクリプトを連結しない","title":"自身で管理しないスクリプトを連結しない","isH3":true,"content":"<p>ファイルレベルで使用される ECMAScript の <code>\"use strict;\"</code> ディレクティブは、ファイル全体に適用されます。このため、厳格モードでない動作に依存するスクリプトを厳格モードのスクリプトに付加すると、スクリプトが動作しなくなります。</p>"}},{"type":"prose","value":{"id":"使用する_javascript_ライブラリーの作者に、上記のガイドラインに従っているかを確認する","title":"使用する JavaScript ライブラリーの作者に、上記のガイドラインに従っているかを確認する","isH3":true,"content":"<p>お気に入りのライブラリーの開発者にも、このガイドラインに従うように提案してみてください。そうしないと、将来そのライブラリーが壊れないかどうか当てにならないからです。残念ながら、ライブラリーはこのガイドラインに違反することが多いのです。</p>"}},{"type":"prose","value":{"id":"検出","title":"検出","isH3":false,"content":""}},{"type":"prose","value":{"id":"特定の機能の検出","title":"特定の機能の検出","isH3":true,"content":"<p>ある機能を用いようとするとき、可能であればその機能を見つけるためにオブジェクト検出を行ってください。簡単な例として、<code>body.style</code> に <code>\"filter\"</code> があるかのテストが真になるブラウザーは必ず Microsoft Internet Explorer であり、それゆえ例えばイベントハンドラーで <code>window.event</code> オブジェクトが利用できるとは考えないでください。また、ある一定の DOM 機能に対応しているブラウザーが、他の機能、特に非標準の DOM 機能にも対応しているとは考えないでください。あるいは逆に、他の機能に対応<em>しない</em>とも考えないでください。例えば、script 要素での <code>onload</code> に対応するブラウザーは <code>onreadystatechange</code> に対応しないと考えてはいけません。各ブラウザーの動作が収束することにより、機能は追加や削除されます。また、不具合の修正も行います。これら 3 点は過去に発生しており、また今後も発生するでしょう。</p>\n<p>従ってある機能の存在有無と別の機能の存在有無に関連はありませんので、ある機能やオブジェクトの検出結果から別のことを予測しないでください。</p>"}},{"type":"prose","value":{"id":"ua_検出を行わない","title":"UA 検出を行わない","isH3":true,"content":"<p>これはある機能（ユーザエージェント (UA) 文字列内に特定の文字列が含まれていること）が別の機能の有無を暗に示すと考えられている、特に一般的な実例です。</p>\n<h4 id=\"ua_検出が必要な場合は、過去のブラウザーのバージョンにのみ行う\">UA 検出が必要な場合は、過去のブラウザーのバージョンにのみ行う</h4>\n<p>UA 検出に頼る必要がある場合は、特定のブラウザーの過去のバージョンに対して用いてください。始めに、未知のブラウザーおよびあなたがテストで用いているブラウザーの現行バージョンと将来のバージョン向けの既定のコードパスがあります。そして、既定のコードパスが特定のブラウザーの過去のバージョンで動作せず、またそのコードパスで機能の欠落を検出することで問題点を発見できないときは、該当する過去のバージョンのブラウザーを検出することでそのブラウザー向けのハックを追加してかまいません。</p>\n<p>この提案において、「現行」とはテストを行った最新のバージョンのブラウザーを指します。例えば既定のコードパスが Firefox Aurora で適切に動作するが、Firefox Beta や最新の release 版では不具合があるためにコードが動作しない場合は、テストを行った Aurora の Firefox バージョン番号を「現行」とみなし、一般向けに公開されていないものであっても Beta のバージョンを「過去」のバージョンと考えてください。</p>"}},{"type":"prose","value":{"id":"異なるブラウザー向けに分離したコードパスはむやみに作成しない","title":"異なるブラウザー向けに分離したコードパスはむやみに作成しない","isH3":true,"content":"<p>関係のあるコードパスの一つがすべてのブラウザーで正しく動作するのに、わざわざオブジェクト検出や UA 検出に基づいて異なるコードを実行することは行わないでください。各ブラウザーの動作がお互い収束するように変更され、そのために代替のコードパスを設定していたあなたのサイトが正常に動作しなくなってしまう可能性があります。</p>"}},{"type":"prose","value":{"id":"テストの実施","title":"テストの実施","isH3":false,"content":""}},{"type":"prose","value":{"id":"すべての主要なエンジンについてテストを行う","title":"すべての主要なエンジンについてテストを行う","isH3":true,"content":"<p>コードは少なくとも Firefox、Chrome、Safari、Opera、Internet Explorer でテストを行ってください。すべての現行ブラウザーや未知のブラウザー向けに単一のコードパスを持つためこの提案に従えば、そのコードパスがすべての主要なエンジンで動作することをテストすることで、コードが将来にわたって動作する可能性がとても高くなります。</p>\n<p>各ブラウザーがある機能を若干異なる形で実装していることがあります。主要なエンジンすべてで動作する単一のコードパスが得られた場合は、使用している機能の動作は各ブラウザー間で既に収束していることを意味します。一方、各ブラウザーの動作が完全には収束していない場合は、どのエンジンの標準動作を支持するかが判明することに関係なくコードが動作します。</p>"}},{"type":"prose","value":{"id":"ブラウザー独自の機能や接頭辞","title":"ブラウザー独自の機能や接頭辞","isH3":false,"content":""}},{"type":"prose","value":{"id":"現行あるいは将来のバージョンのブラウザーを目標にするハックを行わない","title":"現行あるいは将来のバージョンのブラウザーを目標にするハックを行わない","isH3":true,"content":"<p>これは、現在ある不具合間の相関関係が将来の不具合間の相関関係を暗に示すと考えられている一般的な事例です。現行バージョンでは解決している不具合に関するハックを、過去のバージョンのブラウザーに対して適用することは問題ありません。ブラウザーが不具合 X を修正すると、不具合 X が存在するリリースすべてには不具合 Y もあることが確実にわかり、不具合 X が存在することを不具合 Y の回避策の適用基準として用いることができます。</p>\n<p>この提案において、前出の UA 検出でのアドバイスのように \"現行\" とはあなたがテストを行った最新のバージョンのブラウザーを指します。</p>"}},{"type":"prose","value":{"id":"最新の非標準機能に依存することを避ける","title":"最新の非標準機能に依存することを避ける","isH3":true,"content":"<p>接頭辞ありの機能であっても、それを使用することは危険です。仕様書の進展に伴い、ブラウザーの接頭辞ありの実装が仕様書に追随して変更されることがあります。またその機能が標準化されると、接頭辞ありのバージョンは削除されるでしょう。</p>\n<p>接頭辞が付加された非標準の機能は、実験やフィードバックを行うためにブラウザーの開発者が提供しているものであり、一般に展開することを意味していません。これらの機能を使うことを選択した場合は、機能の変更に伴って頻繁にサイトの更新が必要であることを覚悟してください。</p>"}},{"type":"prose","value":{"id":"標準化されていても_広く実装されていない最新機能を用いる際は縮退処理のテストを行う","title":"(標準化されていても) 広く実装されていない最新機能を用いる際は縮退処理のテストを行う","isH3":true,"content":"<p>用いている機能を実装していないブラウザー でどう動作するか（そのようなブラウザーをウェブサイトの業務で日常使用していない場合は特に）、必ずテストを行ってください。</p>"}},{"type":"prose","value":{"id":"ベンダー接頭辞が付加されている機能は、過去のバグが多いバージョンを目的とする場合を除き使用しない","title":"ベンダー接頭辞が付加されている機能は、過去のバグが多いバージョンを目的とする場合を除き使用しない","isH3":true,"content":"<p>ベンダー接頭辞が付加されている機能は、その動作が将来変更されるかもしれません。ブラウザーがある機能を接頭辞なしで公開しても、利用可能であれば接頭辞なし版を常に使用するようにすることで、過去のリリース向けに接頭辞あり版を使用することができます。良い例として、<code>make-it-pretty</code> プロパティの <code>\"sometimes\"</code> 値について接頭辞あり版とは異なる動作を接頭辞なし版に実装して公開した、 CSS の <code>-vnd</code> 接頭辞を用いるブラウザーベンダー向けの記述を示します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">.pretty-element</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">-vnd-make-it-pretty</span><span class=\"token punctuation\">:</span> sometimes<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">make-it-pretty</span><span class=\"token punctuation\">:</span> sometimes<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>上記の例で、ルール中の宣言の順番は重要です。接頭辞のないものは、最後に置くことが必要です。</p>"}},{"type":"prose","value":{"id":"少なくとも一つのブラウザーがサポートするまで、接頭辞のない_css_プロパティや_api_は使用しない","title":"少なくとも一つのブラウザーがサポートするまで、接頭辞のない CSS プロパティや API は使用しない","isH3":true,"content":"<p>何らかの機能について接頭辞なし版がある程度広くサポートされるまでは、その動作が突然変更されることがあります。特に、実際に接頭辞なし版に対応しているブラウザーがない機能は使用しないでください。接頭辞あり版の文法と完成版の文法が同じであると考えてはいけません。</p>"}},{"type":"prose","value":{"id":"良好なコード","title":"良好なコード","isH3":false,"content":""}},{"type":"prose","value":{"id":"_の欠落を防ぐ","title":"<code>&gt;</code> の欠落を防ぐ","isH3":true,"content":"<p>検証ツールを用いることがこれを確実にする方法の一つですが、あなたのウェブサイト全体を検証しないとしてもすべての <code>&gt;</code> 文字が置かれていることを確認してください。 <code>&gt;</code> が欠落していると、後ろのタグの名前が前のタグの属性であると判断されて予期せぬ状況に陥る場合があります。これはしばらくの間は動作するかもしれませんが、仕様書でその属性に意味が与えられると動作しなくなります。以下の例は HTML5 に対応しないブラウザーでは動作しますが、HTML5 に対応するブラウザーでは動作しません。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.example.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  &lt;input type=\"submit\" value=\"Submit the form\"\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>これは <code>input</code> タグで <code>&gt;</code> が欠落しているためです。</p>","titleAsText":"> の欠落を防ぐ"}},{"type":"prose","value":{"id":"コード中で動作しない実験的な部分は残さない","title":"コード中で動作しない実験的な部分は残さない","isH3":true,"content":"<p>何か行いたいことがあって CSS プロパティを使用してみたが効果がなかった場合、そのプロパティは削除してください。将来、予期しない動作が発生する可能性があります。</p>"}}],"toc":[{"text":"JavaScript","id":"javascript"},{"text":"検出","id":"検出"},{"text":"テストの実施","id":"テストの実施"},{"text":"ブラウザー独自の機能や接頭辞","id":"ブラウザー独自の機能や接頭辞"},{"text":"良好なコード","id":"良好なコード"}],"summary":"このページでは、新しいバージョンのブラウザーが公開されても壊れることのないウェブサイトを記述する方法を説明します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Writing forward-compatible websites","locale":"en-US","native":"English (US)"},{"title":"Développer des sites à compatibilité descendante","locale":"fr","native":"Français"},{"title":"Writing forward-compatible websites","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/guide/writing_forward-compatible_websites","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/guide/writing_forward-compatible_websites/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Guide","title":"開発者ガイド"},{"uri":"/ja/docs/Web/Guide/Writing_forward-compatible_websites","title":"前方互換性のあるウェブサイトを書く"}],"pageTitle":"前方互換性のあるウェブサイトを書く - 開発者ガイド | MDN","noIndexing":false}}