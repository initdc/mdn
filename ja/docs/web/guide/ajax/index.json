{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AJAX","mdn_url":"/ja/docs/Web/Guide/AJAX","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":"はじめに","title":"<a href=\"/ja/docs/Web/Guide/AJAX/Getting_Started\">はじめに</a>","isH3":false,"content":"<p>\n  <strong>A</strong>synchronous <strong>J</strong>avaScript <strong>a</strong>nd <strong>X</strong>ML (AJAX) はそれ自体がある種の技術というわけではありませんが、 Jesse James Garrett によって 2005 年に作られた言葉で、既存の技術同士を組み合わせた新しいアプローチを意味します。組み合わされる技術は、<a href=\"/ja/docs/Web/HTML\">HTML</a>, <a href=\"/ja/docs/Glossary/XHTML\">XHTML</a>, <a href=\"/ja/docs/Web/CSS\">CSS</a>, <a href=\"/ja/docs/Web/JavaScript\">JavaScript</a>, <a href=\"/ja/docs/Web/API/Document_Object_Model\">DOM</a>, <a href=\"/ja/docs/Web/XML\">XML</a>, <a href=\"/ja/docs/Web/XSLT\">XSLT</a>, そして最も重要なものは <a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> オブジェクトです。\n  これらの技術が AJAX のモデルで組み合わされると、ウェブアプリケーションはより早く、表示されているページ全てを再読み込みすることなく、ユーザーインターフェイスを逐次更新できるようになります。そして、アプリケーションにより早い表示、より良い応答性をもたらします。\n</p>\n<p>Ajax の X は XML を表していますが、 <a href=\"/ja/docs/Glossary/JSON\">JSON</a> の方がより軽く JavaScript の一部であることなど数多くの利点があるため、今日では XML よりもよく使われています。 JSON と XML はどちらも Ajax モデルの情報をパッケージ化するために使用されます。</p>","titleAsText":"はじめに"}},{"type":"prose","value":{"id":"ドキュメント","title":"ドキュメント","isH3":false,"content":"<dl>\n  <dt id=\"はじめに_2\"><a href=\"/ja/docs/Web/Guide/AJAX/Getting_Started\">はじめに</a></dt>\n  <dd>\n    <p>この記事では AJAX の基本について説明し、始めるために 2 つの簡単な実例を紹介します。</p>\n  </dd>\n  <dt id=\"xmlhttprequest_api_の使用\"><a href=\"/ja/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\"><code>XMLHttpRequest</code> API の使用</a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> API は、Ajax のコアです。この記事では、次のような Ajax 技術の使用方法について説明します。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#handling_responses\">サーバーのレスポンスの分析と操作</a></li>\n      <li><a href=\"/ja/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#monitoring_progress\">リクエストの進捗のモニタリング</a></li>\n      <li><a href=\"/ja/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#submitting_forms_and_uploading_files\">フォームの送信とバイナリーファイルのアップロード</a> – <em>純粋な Ajax</em>、もしくは <a href=\"/ja/docs/Web/API/FormData\"><code>FormData</code></a> オブジェクトを使用します</li>\n      <li><a href=\"/ja/docs/Web/API/Worker\">ウェブワーカー</a>内部における Ajax の使用</li>\n    </ul>\n  </dd>\n  <dt id=\"fetch_api\"><a href=\"/ja/docs/Web/API/Fetch_API\">Fetch API</a></dt>\n  <dd>\n    <p>Fetch API はリソースをフェッチするためのインターフェイスを提供します。 <a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHTTPRequest</code></a> を使用した人なら誰にでも馴染みのあるように見えますが、この API はより強力で柔軟な機能セットを提供します。</p>\n  </dd>\n  <dt id=\"server-sent_イベント\"><a href=\"/ja/docs/Web/API/Server-sent_events\">Server-sent イベント</a></dt>\n  <dd>\n    <p>伝統的に、ウェブページは新しいデータを受信するためにサーバーにリクエストを送信しなければなりません。つまり、ページはサーバーにデータを要求します。サーバーが送信したイベントでは、サーバーがメッセージをウェブページにプッシュすることで、いつでもウェブページに新しいデータを送信することができます。これらの着信メッセージは、ウェブページ内の*<a href=\"/ja/docs/Web/API/Event\">イベント</a>+データ*として扱うことができます。<a href=\"/ja/docs/Web/API/Server-sent_events/Using_server-sent_events\">サーバー送信イベントの使用</a>を参照してください。</p>\n  </dd>\n  <dt id=\"純粋な_ajax_ナビゲーションサンプル\"><a href=\"/ja/docs/Web/API/History_API/Example\"><em>純粋な Ajax</em> ナビゲーションサンプル</a></dt>\n  <dd>\n    <p>この記事では、<em>純粋な Ajax</em> ウェブサイトの 3 つのページから構成された実用的な (最小限の) 例を提供します。</p>\n  </dd>\n  <dt id=\"バイナリーデータの送信と受信\"><a href=\"/ja/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data\">バイナリーデータの送信と受信</a></dt>\n  <dd>\n    <p><code>XMLHttpRequest</code> オブジェクトの <code>responseType</code> プロパティを設定して、予想されるレスポンスタイプをサーバーから変更することができます。可能な値は空文字列 (デフォルト), <code>arraybuffer</code>, <code>blob</code>, <code>document</code>, <code>json</code>, <code>text</code> です。<code>response</code> のプロパティには、 <code>responseType</code> に従って <code>ArrayBuffer</code>, <code>Blob</code>, <code>Document</code>, <code>JSON</code>、または string のようなエンティティ本文が含まれます。この記事では、Ajax の I/O 技術をいくつか紹介します。</p>\n  </dd>\n  <dt id=\"xml\"><a href=\"/ja/docs/Web/XML\">XML</a></dt>\n  <dd>\n    <p><strong>Extensible Markup Language (XML)</strong> は、特定の目的のマークアップ言語を作成する W3C 推奨の汎用マークアップ言語です。これは SGML の単純化されたサブセットであり、多くの異なる種類のデータを記述することができます。その主な目的は、異なるシステム、特にインターネットを介して接続されたシステム間でのデータの共有を容易にすることです。</p>\n  </dd>\n  <dt id=\"xml_の解釈とシリアライズ\"><a href=\"/ja/docs/Web/Guide/Parsing_and_serializing_XML\">XML の解釈とシリアライズ</a></dt>\n  <dd>\n    <p>文字列、ファイル、または JavaScript を使用して XML 文書を解釈する方法、XML 文書を文字列、Javascript Object Tree (JXON) またはファイルにシリアル化する方法</p>\n  </dd>\n  <dt id=\"xpath\"><a href=\"/ja/docs/Web/XPath\">XPath</a></dt>\n  <dd>\n    <p>XPath は <strong>X</strong>ML <strong>Path</strong> Language (XML パス言語) の略で、<a href=\"/ja/docs/Web/XML\">XML</a> 文書のさまざまな部分をアドレス指定する (指す) 柔軟な方法を提供する非 XML 構文を使用します。これと同様に、ドキュメント内のアドレス指定されたノードをテストしてパターンに一致するかどうかを判断することもできます。</p>\n  </dd>\n  <dt id=\"filereader\"><a href=\"/ja/docs/Web/API/FileReader\"><code>FileReader</code></a> API</dt>\n  <dd>\n    <p><code>FileReader</code> API を使用すると、ウェブアプリケーションがユーザーのコンピューターに格納されているファイル (または生データバッファ) の内容を非同期に読み取ることができ、読み取るファイルまたはデータを <a href=\"/ja/docs/Web/API/File\"><code>File</code></a> または <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> オブジェクトで特定します。 File オブジェクトはユーザーが <a href=\"/ja/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> 要素を使用して選択した結果として返される <a href=\"/ja/docs/Web/API/FileList\"><code>FileList</code></a> オブジェクト、ドラッグ＆ドロップ操作の <a href=\"/ja/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> オブジェクト、 <a href=\"/ja/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> の <code>mozGetAsFile()</code> API から取得することができます。</p>\n  </dd>\n  <dt id=\"xmlhttprequest_における_html\"><a href=\"/ja/docs/Web/API/XMLHttpRequest/HTML_in_XMLHttpRequest\">XMLHttpRequest における HTML</a></dt>\n  <dd>\n    <p>W3C の <a href=\"https://xhr.spec.whatwg.org/\" class=\"external\" rel=\" noopener\">XMLHttpRequest</a> 仕様書では、もともと XML の解析のみに対応していた <a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> に HTML 解析の対応が追加されています。この機能を使用すると、ウェブアプリケーションは <code>XMLHttpRequest</code> を使用して解析された DOM として HTML リソースを取得できます。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"ツール","title":"ツール","isH3":false,"content":"<dl>\n  <dt id=\"axios\"><a href=\"https://github.com/axios/axios\" class=\"external\" rel=\" noopener\">axios</a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> ベースの <a href=\"/ja/docs/Glossary/HTTP\">HTTP</a> クライアントで、内部的に <code>XMLHttpRequest</code> を使用しています。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<dl>\n  <dt id=\"ajax_ウェブアプリケーションへの新しいアプローチ\"><a href=\"https://pdfs.semanticscholar.org/c440/ae765ff19ddd3deda24a92ac39cef9570f1e.pdf\" class=\"external\" rel=\" noopener\">Ajax: ウェブアプリケーションへの新しいアプローチ</a></dt>\n  <dd>\n    <p>Adaptive Path の Jesse James Garrett は 2005 年 2 月にこの記事を書いて、 Ajax とその関連概念を紹介しました。</p>\n  </dd>\n  <dt id=\"xmlhttprequest_の仕様書\"><a href=\"https://xhr.spec.whatwg.org/\" class=\"external\" rel=\" noopener\">XMLHttpRequest の仕様書</a></dt>\n  <dd>\n    <p>WHATWG ライブ標準</p>\n  </dd>\n</dl>"}}],"toc":[{"text":"<a href=\"/ja/docs/Web/Guide/AJAX/Getting_Started\">はじめに</a>","id":"はじめに"},{"text":"ドキュメント","id":"ドキュメント"},{"text":"ツール","id":"ツール"},{"text":"関連情報","id":"関連情報"}],"summary":"Asynchronous JavaScript and XML (AJAX) はそれ自体がある種の技術というわけではありませんが、 Jesse James Garrett によって 2005 年に作られた言葉で、既存の技術同士を組み合わせた新しいアプローチを意味します。組み合わされる技術は、HTML, XHTML, CSS, JavaScript, DOM, XML, XSLT, そして最も重要なものは XMLHttpRequest オブジェクトです。\n  これらの技術が AJAX のモデルで組み合わされると、ウェブアプリケーションはより早く、表示されているページ全てを再読み込みすることなく、ユーザーインターフェイスを逐次更新できるようになります。そして、アプリケーションにより早い表示、より良い応答性をもたらします。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Ajax","locale":"en-US","native":"English (US)"},{"title":"AJAX","locale":"es","native":"Español"},{"title":"AJAX","locale":"fr","native":"Français"},{"title":"AJAX","locale":"ko","native":"한국어"},{"title":"AJAX","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"AJAX","locale":"ru","native":"Русский"},{"title":"Ajax","locale":"zh-CN","native":"中文 (简体)"},{"title":"Ajax","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/guide/ajax","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/guide/ajax/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Guide","title":"開発者ガイド"},{"uri":"/ja/docs/Web/Guide/AJAX","title":"AJAX"}],"pageTitle":"AJAX - 開発者ガイド | MDN","noIndexing":false}}