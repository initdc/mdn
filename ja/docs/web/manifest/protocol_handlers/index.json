{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"protocol_handlers","mdn_url":"/ja/docs/Web/Manifest/protocol_handlers","locale":"ja","native":"日本語","sidebarHTML":"\n<ol></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard warning\" id=\"sect1\"><p><strong>非標準:</strong> この機能は標準ではなく、標準化の予定もありません。公開されているウェブサイトには使用しないでください。ユーザーによっては使用できないことがあります。実装ごとに大きな差があることもあり、将来は振る舞いが変わるかもしれません。</p></div>\n<table class=\"properties\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">型</th>\n      <td><code>Array</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">必須</th>\n      <td>いいえ</td>\n    </tr>\n  </tbody>\n</table>\n<p><code>protocol_handlers</code> メンバーは、このウェブアプリが登録・処理することができるプロトコルを表すオブジェクトの配列を指定します。プロトコルハンドラーは、 OS のアプリケーション設定にアプリケーションを登録します。登録は、特定のアプリケーションと与えられたプロトコルスキームを関連付けます。例えば、ウェブページで <code>mailto://</code> というプロトコルハンドラーを使用すると、登録されたメールアプリケーションが開きます。</p>\n<p>プロトコルハンドラーとしてウェブアプリを登録すると、ユーザーがブラウザーやネイティブアプリから <code>mailto://</code> や <code>web+music://</code> などの特定のスキームを持つハイパーリンクをクリックすると、登録した PWA が開いてその URL を受信することができるようになります。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>この例では、ウェブアプリのマニフェストで、プロトコルの <code>web+jngl</code> と <code>web+jnglstore</code> を処理するためにアプリを登録することを宣言しています。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"protocol_handlers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"protocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"web+jngl\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/lookup?type=%s\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"protocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"web+jnglstore\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/shop?for=%s\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>開発者は manifest.json にフィールドを追加して、ウェブアプリがどのプロトコルを処理できるかを宣言することができます。上記の例で見られるように、キーは <code>protocol_handlers</code> という名前で、プロトコル ハンドラ宣言オブジェクトの配列が含まれています。</p>\n<p>URL スキームを処理するためのアプリケーションの登録は、オペレーティングシステムに依存します。この関連付けは通常、アプリケーションのインストール時に行われますが、既にインストールされているアプリケーションから後で行われることもあります。</p>"}},{"type":"prose","value":{"id":"値","title":"値","isH3":false,"content":"<p>プロトコルハンドラーオブジェクトには、以下の値を指定することができます。</p>\n<table class=\"fullwidth-table standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">メンバー</th>\n      <th scope=\"col\">説明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>protocol</code></td>\n      <td>\n        必須の文字列で、処理するプロトコルを指定します。 例:\n        <code>mailto</code>, <code>ms-word</code>, <code>web+jngl</code>.\n      </td>\n    </tr>\n    <tr>\n      <td><code>url</code></td>\n      <td>プロトコルを処理するアプリケーションのスコープ (<a href=\"/en-US/docs/Web/Manifest/scope\">scope</a>) 内の必要な HTTPS URL。 <code>%s</code> トークンは、プロトコルハンドラーのスキームで始まる URL に置換されます。 <code>url</code> が相対 URL であった場合、ベース URL はマニフェストの URL になります。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<p>この機能はどの仕様書にも含まれていません。 <a href=\"https://w3c.github.io/manifest/\" class=\"external\" rel=\" noopener\">Manifest</a> 仕様書へ追加する提案が行われています。 <a href=\"https://github.com/w3c/manifest/issues/846\" class=\"external\" rel=\" noopener\">[1]</a> <a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/URLProtocolHandler/explainer.md\" class=\"external\" rel=\" noopener\">[2]</a></p>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"html.manifest.protocol_handlers","dataURL":"/ja/docs/Web/Manifest/protocol_handlers/bcd.json"}}],"toc":[{"text":"例","id":"例"},{"text":"値","id":"値"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"protocol_handlers メンバーは、このウェブアプリが登録・処理することができるプロトコルを表すオブジェクトの配列を指定します。プロトコルハンドラーは、 OS のアプリケーション設定にアプリケーションを登録します。登録は、特定のアプリケーションと与えられたプロトコルスキームを関連付けます。例えば、ウェブページで mailto:// というプロトコルハンドラーを使用すると、登録されたメールアプリケーションが開きます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"protocol_handlers","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/manifest/protocol_handlers","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/manifest/protocol_handlers/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Manifest","title":"ウェブアプリマニフェスト"},{"uri":"/ja/docs/Web/Manifest/protocol_handlers","title":"protocol_handlers"}],"pageTitle":"protocol_handlers - ウェブアプリマニフェスト | MDN","noIndexing":false}}