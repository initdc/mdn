{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"メディアおよびウェブオーディオ API の自動再生ガイド","mdn_url":"/ja/docs/Web/Media/Autoplay_guide","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>ページが読み込まれるとすぐに音声（または音声トラックを含む動画）の再生を自動的に開始することは、ユーザーにとって歓迎されない驚きです。 メディアの自動再生は便利な目的に役立ちますが、注意して必要なときにだけ使用してください。 ユーザーがこれを制御できるようにするために、ブラウザーは多くの場合、さまざまな形式の自動再生のブロック（autoplay blocking）を提供します。 このガイドでは、さまざまなメディアおよびウェブオーディオ API（Web Audio API）の自動再生機能について説明します — 自動再生の使用方法と自動再生のブロックを適切に処理するためのブラウザーの操作方法の簡単な概要を含みます。</p>\n<p>ソースメディアに音声トラックがない場合、または音声トラックがミュートされている場合、自動再生のブロックは <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素には適用<em>されません</em>。 アクティブな音声トラックを持つメディアは<strong>可聴である</strong>と見なされ、自動再生のブロックがそれらに適用されます。 <strong>可聴でない</strong>メディアは自動再生のブロックの影響を受けません。</p>"}},{"type":"prose","value":{"id":"自動再生と自動再生のブロック","title":"自動再生と自動再生のブロック","isH3":false,"content":"<p>用語「<strong>自動再生</strong>（<strong>autoplay</strong>）」は、ユーザーが再生の開始を明確に要求しなくても音声の再生を開始させる機能を意味します。 これには、メディアの自動再生のための HTML 属性の使用と、ユーザー入力を処理するコンテキストの外で再生を開始するための JavaScript コードのユーザーの両方が含まれます。</p>\n<p>つまり、次の両方が自動再生のふるまいと見なされるため、ブラウザーの自動再生のブロックのポリシーに従います。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/music.mp4<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoplay</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>と</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>audioElement<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>次のウェブ機能および API は自動再生のブロックの影響を受ける可能性があります。</p>\n<ul>\n  <li><a href=\"/ja/docs/Glossary/HTML\">HTML</a> の <a href=\"/ja/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> 要素と <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素</li>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API\">ウェブオーディオ API</a>（Web Audio API）</li>\n</ul>\n<p>ユーザーの観点からは、警告なしに自発的にノイズを発し始めるウェブページまたはアプリは、耳障り、不便、または気まずいものになる可能性があります。 そのため、ブラウザーでは通常、特定の状況下でのみ自動再生が正常に行われるようにすることしかできません。</p>"}},{"type":"prose","value":{"id":"自動再生の可用性","title":"自動再生の可用性","isH3":true,"content":"<p>一般的な規則として、次の条件の<em>少なくとも 1 つ</em>が当てはまる場合にのみ、メディアの自動再生が許可されると想定できます。</p>\n<ul>\n  <li>音声がミュートになっているか、音量が 0 に設定されている。</li>\n  <li>ユーザーがサイトを操作した（クリック、タップ、キーを押すなど）。</li>\n  <li>サイトがホワイトリストに登録されている場合。 これは、ユーザーがメディアと頻繁に関わっているとブラウザーが判断した場合は自動的に、または設定や他のユーザーインターフェイス機能を使用して手動で行われる場合があります。</li>\n  <li>自動再生機能ポリシーを使用して <a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> とそのドキュメントに自動再生のサポートを付与する場合。</li>\n</ul>\n<p>そうでないと、再生がブロックされる可能性があります。 ブロックされる正確な状況、およびサイトがホワイトリストに登録される方法の詳細はブラウザーによって異なりますが、上記のガイドラインを参考にしてください。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 別の言い方をすれば、音声が含まれているメディアの再生は、ユーザー操作がまだ行われていないタブでプログラム的に再生が開始されると、通常はブロックされます。 ブラウザーはさらに他の状況下でブロックすることを選択するかもしれません。</p>\n</div>"}},{"type":"prose","value":{"id":"メディア要素の自動再生","title":"メディア要素の自動再生","isH3":false,"content":"<p>自動再生とは何か、自動再生が許可されないようにすることができるかについて説明したので、次に、ウェブサイトまたはアプリがページの読み込み時に自動的にメディアを再生する方法、自動再生の失敗の検出方法、および自動再生がブラウザーによって拒否されたときの対処方法について説明します。</p>"}},{"type":"prose","value":{"id":"autoplay_属性","title":"autoplay 属性","isH3":true,"content":"<p>コンテンツを自動的に再生する最も簡単な方法は、<a href=\"/ja/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> 要素または <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素に <a href=\"/ja/docs/Web/HTML/Element/audio#attr-autoplay\"><code>autoplay</code></a> 属性を追加することです。 これにより、要素の <a href=\"/ja/docs/Web/API/HTMLMediaElement/autoplay\" title=\"autoplay\"><code>autoplay</code></a> プロパティが <code>true</code> に設定され、<code>autoplay</code> が <code>true</code> の場合、次のことが発生した後、メディアはできるだけ早く自動的に再生を開始します。</p>\n<ul>\n  <li>ページは自動再生機能を使用することを許可されている。</li>\n  <li>要素はページの読み込み中に作成された。</li>\n  <li>ネットワークのパフォーマンスや帯域幅に劇的な変化がないと仮定して、再生を開始し、中断することなくメディアの最後まで再生を続けるのに十分なメディアが受信されている。</li>\n</ul>\n<h4 id=\"例_autoplay_属性\">例: autoplay 属性</h4>\n<p><code>autoplay</code> 属性を使用する <a href=\"/ja/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> 要素は、次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>musicplayer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoplay</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/music/chapter1.mp4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>audio</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"例_2_自動再生の失敗を検出する\">例 2: 自動再生の失敗を検出する</h4>\n<p>重要なことを自動再生に頼っている場合、または自動再生の失敗が何らかの形でアプリに影響を与える場合は、自動再生が開始されなかったことを知りたいと思うでしょう。 残念ながら、<a href=\"/ja/docs/Web/HTML/Element/audio#attr-autoplay\"><code>autoplay</code></a> 属性の場合、自動再生が正常に開始されたかどうかを認識するのは難しいです。 自動再生が失敗したときにトリガーされるイベントはありません。 また、設定可能な例外やコールバック、あるいは自動再生が機能したかどうかを示すフラグもメディア要素にありません。 本当にできることは、いくつかの値を調べて、自動再生が機能したかどうかについて山を張ることだけです。</p>\n<p>見方を変えることができるのであれば、メディアの再生がうまくいかなかったときではなく、メディアの再生がうまくいったことを知ることに頼ることをお勧めします。 メディア要素で <code><a href=\"/en-US/docs/Web/API/HTMLMediaElement/play_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">play (en-US)</a></code> イベントが発生するのをリスンすることで、これを簡単に行うことができます。</p>\n<p><code>play</code> イベントは、メディアが一時停止後に再開されたとき<em>と</em>自動再生が発生したときの両方に送信されます。 つまり、初めて <code>play</code> イベントが発生したときは、ページが開かれた後に初めてメディアの再生が開始されたことがわかります。</p>\n<p>次の HTML をメディア要素として考えます。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code>&lt;video src=\"myvideo.mp4\" autoplay onplay=handleFirstPlay(event)\"&gt;\n</code></pre></div>\n<p>ここでは、<a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>onplay</code></a> イベントハンドラが設定された、<a href=\"/ja/docs/Web/HTML/Element/video#attr-autoplay\"><code>autoplay</code></a> 属性が設定されている <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素があります。 イベントは <code>handleFirstPlay()</code> と呼ばれる関数によって処理され、この関数は入力として <code>play</code> イベントを受け取ります。</p>\n<p><code>handleFirstPlay()</code> は次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleFirstPlay</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> vid <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n\n  vid<span class=\"token punctuation\">.</span>onplay <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 再生が開始された後に行う必要があるものをすべて開始する。</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a> オブジェクトの <a href=\"/ja/docs/Web/API/Event/target\" title=\"target\"><code>target</code></a> から動画要素への参照を取得した後、その要素の <code>onplay</code> ハンドラは <code>null</code> に設定されます。 これにより、今後の <code>play</code> イベントがハンドラに配信されなくなります。 これは、ドキュメントがバックグラウンドタブにあるときに、動画がユーザーによって一時停止および再開された場合、またはブラウザーによって自動的に行われる場合に発生する可能性があります。</p>\n<p>この時点で、あなたのサイトやアプリはそれがする必要があるものは何でも始めることができます。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> この方法では、自動再生とユーザーによる手動再生開始は区別されません。</p>\n</div>"}},{"type":"prose","value":{"id":"play_メソッド","title":"play() メソッド","isH3":true,"content":"<p>用語「自動再生」はまた、スクリプトが、ユーザ入力イベント処理のコンテキストの外側で、音声を含んだメディアの再生を開始しようと試みるシナリオを指します。 これは、メディア要素の <a href=\"/ja/docs/Web/API/HTMLMediaElement/play\" title=\"play()\"><code>play()</code></a> メソッドを呼び出すことによって行われます。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> 自動再生設定のサポートは、自動再生の他の手段よりも <code>autoplay</code> 属性の方が広く普及しているため、できるだけ <code>autoplay</code> 属性を使用することを強くお勧めします。 また、ブラウザーが再生開始の責任を負うようにして、再生のタイミングを最適化します。</p>\n</div>\n<h4 id=\"例_動画の再生\">例: 動画の再生</h4>\n<p>この簡単な例では、ドキュメント内の最初の <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素を再生します。 ドキュメントに自動的にメディアを再生するパーミッションがない限り、<code>play()</code> は再生を開始させません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"例_play_のエラー処理\">例: play() のエラー処理</h4>\n<p><a href=\"/ja/docs/Web/API/HTMLMediaElement/play\" title=\"play()\"><code>play()</code></a> メソッドを使用して開始すると、メディアの自動再生の失敗を検出するのがはるかに簡単になります。 <code>play()</code> は、メディアが正常に再生を開始すると解決され、自動再生が拒否された場合など、再生が開始しないと却下される <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。 自動再生が失敗した場合は、あなたはおそらくメディアを再生するためのパーミッションをユーザーが与えるようにブラウザーに手動で指示する方法をユーザーに提供したいと思うでしょう。</p>\n<p>あなたは仕事を達成するために、このようなコードを使うかもしれません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> startPlayPromise <span class=\"token operator\">=</span> videoElem<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>startPlayPromise <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  startPlayPromise<span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"NotAllowedError\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">showPlayButton</span><span class=\"token punctuation\">(</span>videoElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 読み込みエラーまたは再生エラーを処理する。</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 再生が開始された後にのみ行う必要があるものを開始する。</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>play()</code> の結果に対して最初に行うことは、それが未定義（<code>undefined</code>）ではないことを確認することです。 これは、以前のバージョンの HTML 仕様では、<code>play()</code> が値を返さなかったためです。 操作の成功または失敗を判断できるようにという promise を返すことが最近追加されました。 未定義をチェックすることで、このコードが古いバージョンのウェブブラウザーでエラーにより失敗することを防ぎます。</p>\n<p>次に promise に <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\"><code>catch()</code></a> ハンドラを追加します。 これは、エラーの名前（<a href=\"/ja/docs/Web/API/DOMException/name\" title=\"name\"><code>name</code></a>）を調べて、<code>NotAllowedError</code> かどうかを確認します。 これは、自動再生が拒否されたなど、パーミッションの問題が原因で再生が失敗したことを示します。 その場合は、ユーザーが手動で再生を開始できるようにするためのユーザーインターフェイスを表示する必要があります。 これはここでは関数 <code>showPlayButton()</code> によって処理されます。</p>\n<p>その他のエラーは適切に処理されます。</p>\n<p><code>play()</code> によって返された promise がエラーなしで解決された場合、<code>then()</code> 句が実行され、自動再生が開始されたときに必要なことは何でも開始できます。</p>"}},{"type":"prose","value":{"id":"ウェブオーディオ_api_を使用した自動再生","title":"ウェブオーディオ API を使用した自動再生","isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/Web_Audio_API\">ウェブオーディオ API</a> では、ウェブサイトまたはアプリは、<a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a> にリンクされているソースノードで <code>start()</code> メソッドを使用して音声の再生を開始できます。 ユーザ入力イベント処理のコンテキストの外側でそうすることは、自動再生規則の影響を受けます。</p>\n<p><em>より多くのコンテンツがすぐに来るでしょう。 自動再生のブロックは、Mozilla でもまだ開発中です。 他の人がすでにそれを持っているならば、彼らがこのセクションに参加することを歓迎します...</em></p>"}},{"type":"prose","value":{"id":"autoplay_機能ポリシー","title":"autoplay 機能ポリシー","isH3":false,"content":"<p>上記のブラウザー側での自動再生機能の管理および制御に加えて、ウェブサーバーは自動再生が機能することを許可する意欲を表現することもできます。 <a href=\"/ja/docs/Glossary/HTTP\">HTTP</a> の <a href=\"/ja/docs/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> ヘッダーの <a href=\"/ja/docs/Web/HTTP/Headers/Feature-Policy/autoplay\"><code>autoplay</code></a> ディレクティブは、メディアの自動再生に使用できるドメインがあれば、それを制御するために使用されます。 デフォルトでは、<code>autoplay</code> 機能ポリシー（feature policy）は <code>'self'</code>（<em>一重引用符を含む</em>）に設定されています。 これは、ドキュメントと同じドメインでホストされているときに自動再生が許可されることを示します。</p>\n<p>また、<code>'none'</code> を指定して自動再生を完全に無効にしたり、<code>'*'</code> を指定してすべてのドメインからの自動再生を許可したり、メディアを自動的に再生できる 1 つ以上の特定のオリジンを指定できます。 これらのオリジンはスペース文字で区切ります。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> 指定された機能ポリシーは、そのフレームとその中にネストされているすべてのフレームに新しい機能ポリシーを設定する <a href=\"/ja/docs/Web/HTML/Element/iframe#attr-allow\"><code>allow</code></a> が含まれていない限り、ドキュメントとその中にネストされているすべての <a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> に適用されます。</p>\n</div>\n<p><code>&lt;iframe&gt;</code> の <a href=\"/ja/docs/Web/HTML/Element/iframe#attr-allow\"><code>allow</code></a> 属性を使用してそのフレームとそのネストされたフレームの機能ポリシーを指定するときは、値 <code>'src'</code> を指定して、フレームの <a href=\"/ja/docs/Web/HTML/Element/iframe#attr-src\"><code>src</code></a> 属性で指定されたものと同じドメインからのメディアの自動再生のみを許可できます。</p>"}},{"type":"prose","value":{"id":"例_ドキュメントのドメインからの自動再生のみを許可する","title":"例: ドキュメントのドメインからの自動再生のみを許可する","isH3":true,"content":"<p><a href=\"/ja/docs/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> ヘッダーを使用して、ドキュメントの<a href=\"/ja/docs/Glossary/Origin\">オリジン</a>からのメディアの自動再生のみを許可するには次のようにします。</p>\n<pre class=\"notranslate\">Feature-Policy: autoplay 'self'\n</pre>\n<p><a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> に対して同じことを行うには次のようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mediaplayer.html<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">allow</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>autoplay <span class=\"token punctuation\">'</span>src<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例_自動再生と全画面モードの許可","title":"例: 自動再生と全画面モードの許可","isH3":true,"content":"<p>前の例に<a href=\"/ja/docs/Web/API/Fullscreen_API\">全画面 API</a>（Fullscreen API）のパーミッションを追加すると、ドメインに関係なく全画面のアクセスが許可されている場合、次のような <code>Feature-Policy</code> ヘッダーになります。 必要に応じてドメイン制限を追加できます。</p>\n<pre class=\"notranslate\">Feature-Policy: autoplay 'self'; fullscreen\n</pre>\n<p><code>&lt;iframe&gt;</code> 要素の <code>allow</code> プロパティを使って同じパーミッションを設定すると、次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mediaplayer.html<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">allow</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>autoplay <span class=\"token punctuation\">'</span>src<span class=\"token punctuation\">'</span>; fullscreen<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例_特定のソースからの自動再生を許可する","title":"例: 特定のソースからの自動再生を許可する","isH3":true,"content":"<p>ドキュメント（または <code>&lt;iframe&gt;</code>）の独自ドメインと <code>https://example.media</code> の両方からメディアを再生できるようにする <code>Feature-Policy</code> ヘッダーは、次のようになります。</p>\n<pre class=\"notranslate\">Feature-Policy: autoplay 'self' https://example.media\n</pre>\n<p>次のように <a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> を記述して、この自動再生ポリシーをそれ自体に適用する必要があり、すべての子フレームをこのように記述することを指定することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mediaplayer.html<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">allow</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>autoplay <span class=\"token punctuation\">'</span>src<span class=\"token punctuation\">'</span> https://example.media<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例_自動再生を無効にする","title":"例: 自動再生を無効にする","isH3":true,"content":"<p><code>autoplay</code> 機能ポリシーを <code>'none'</code> に設定すると、ドキュメントまたは <code>&lt;iframe&gt;</code> とすべてのネストされたフレームに対して自動再生が完全に無効になります。 HTTP ヘッダーは次のとおりです。</p>\n<pre class=\"notranslate\">Feature-Policy: autoplay 'none'\n</pre>\n<p><code>&lt;iframe&gt;</code> の <code>allow</code> 属性を使う場合は、次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mediaplayer.html<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">allow</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>autoplay <span class=\"token punctuation\">'</span>none<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ベストプラクティス","title":"ベストプラクティス","isH3":false,"content":"<p>ここでは、自動再生を最大限に活用するためのヒントと推奨されるベストプラクティスを紹介します。</p>"}},{"type":"prose","value":{"id":"メディアコントロールを使用した自動再生失敗の処理","title":"メディアコントロールを使用した自動再生失敗の処理","isH3":true,"content":"<p>自動再生の一般的な使用例は、記事、広告、またはページの主な機能のプレビューに合わせてビデオクリップの再生を自動的に開始することです。 このような動画を自動再生するには、2 つの選択肢があります。 音声トラックを使用しない、または音声トラックを使用しますが、デフォルトで音声をミュートするように <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素を次のように設定する方法です。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/videos/awesomevid.webm<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">controls</span> <span class=\"token attr-name\">autoplay</span> <span class=\"token attr-name\">muted</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>この動画要素は、ユーザーコントロール（通常は再生/一時停止、動画のタイムラインのスクラブ、音量調整、およびミュート）を含むように構成されています。 また、<a href=\"/ja/docs/Web/HTML/Element/video#attr-muted\"><code>muted</code></a> 属性が含まれているため、動画は自動再生されますが、音声はミュートされています。 ただし、ユーザーはコントロールのミュート解除ボタンをクリックして音声を再度有効にすることができます。</p>"}},{"type":"prose","value":{"id":"ブラウザー設定オプション","title":"ブラウザー設定オプション","isH3":false,"content":"<p>ブラウザーには、自動再生が機能する方法や自動再生のブロックの処理方法を制御する設定があります。 ここでは、ウェブ開発者として特別な意味または重要性があるかもしれないそのような設定がリストされています。 これらには、テストやデバッグに役立つ可能性のあるものや、あなたが処理する準備を整える必要がある方法で設定できるものが含まれます。</p>"}},{"type":"prose","value":{"id":"firefox","title":"Firefox","isH3":true,"content":"<dl>\n  <dt id=\"media.allowed-to-play.enabled\"><code>media.allowed-to-play.enabled</code></dt>\n  <dd>\n    <p><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>HTMLMediaElement.allowedToPlay</code></a> プロパティをウェブに公開するかどうかを指定するブール設定。 これは現在デフォルトでは <code>false</code> です（デフォルトで <code>true</code> になっているナイトリービルドを除く）。 これが <code>false</code> の場合、<code>allowedToPlay</code> プロパティは <code>HTMLMediaElement</code> インターフェイスにないため、<a href=\"/ja/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a> 要素にも <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素にも存在しません。</p>\n  </dd>\n  <dt id=\"media.autoplay.allow-extension-background-pages\"><code>media.autoplay.allow-extension-background-pages</code></dt>\n  <dd>\n    <p>このブール値設定が <code>true</code> の場合、ブラウザー拡張機能のバックグラウンドスクリプトは音声メディアを自動再生できます。 この値を <code>false</code> に設定すると、この機能は無効になります。 デフォルト値は <code>true</code> です。</p>\n  </dd>\n  <dt id=\"media.autoplay.allow-muted\"><code>media.autoplay.allow-muted</code></dt>\n  <dd>\n    <p><code>true</code>（デフォルト）の場合、現在ミュートされている音声メディアを自動的に再生することを許可するブール設定。 これが <code>false</code> に変更された場合、音声トラックのあるメディアはミュートされていても再生が許可されません。</p>\n  </dd>\n  <dt id=\"media.autoplay.block-webaudio\"><code>media.autoplay.block-webaudio</code></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/Web_Audio_API\">ウェブオーディオ API</a> に自動再生のブロックを適用するかどうかを示すブール設定。 デフォルトは <code>true</code> です。</p>\n  </dd>\n  <dt id=\"media.autoplay.default\"><code>media.autoplay.default</code></dt>\n  <dd>\n    <p>デフォルトで自動再生サポートのドメインごとの設定を許可する（<code>0</code>）、ブロックする（<code>1</code>）、使用時のプロンプト（<code>2</code>）のどちらにするかを指定する整数設定。 デフォルト値は <code>0</code> です。</p>\n  </dd>\n  <dt id=\"media.autoplay.enabled.user-gestures-needed\"><code>media.autoplay.enabled.user-gestures-needed</code>（ナイトリービルドのみ）</dt>\n  <dd>\n    <p>ユーザーのジェスチャーの検出によって <code>media.autoplay.default</code> の設定をオーバーライドできるかどうかを制御するブール設定。 <code>media.autoplay.default</code> が <code>0</code>（デフォルトで自動再生が許可）に設定されて<em>いない</em>場合、この設定が <code>true</code> の場合、ページがユーザーのジェスチャーによってアクティブにされ、可聴でないメディアはまったく制限されていない場合に、音声トラック付きのメディアを自動再生できます。</p>\n  </dd>\n  <dt id=\"media.block-autoplay-until-in-foreground\"><code>media.block-autoplay-until-in-foreground</code></dt>\n  <dd>\n    <p>バックグラウンドタブで開始したときにメディアの再生がブロックされるかどうかを示すブール設定。 デフォルト値の <code>true</code> は、他の方法で利用できる場合でも、タブが前面に表示されるまで自動再生は実行されないことを意味します。 これは、タブが音を出し始めて、ユーザーがすべてのタブやウィンドウの中からそのタブを見つけることができないという煩わしい状況を防ぎます。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/Media\">ウェブメディア技術</a></li>\n  <li><a href=\"/ja/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">動画と音声のコンテンツ</a>（学習ガイド）</li>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Web Audio API の使用</a></li>\n  <li><a href=\"/en-US/docs/Web/Guide/Audio_and_video_delivery/Cross-browser_audio_basics\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">クロスブラウザーオーディオの基本 (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"自動再生と自動再生のブロック","id":"自動再生と自動再生のブロック"},{"text":"メディア要素の自動再生","id":"メディア要素の自動再生"},{"text":"ウェブオーディオ API を使用した自動再生","id":"ウェブオーディオ_api_を使用した自動再生"},{"text":"autoplay 機能ポリシー","id":"autoplay_機能ポリシー"},{"text":"ベストプラクティス","id":"ベストプラクティス"},{"text":"ブラウザー設定オプション","id":"ブラウザー設定オプション"},{"text":"関連情報","id":"関連情報"}],"summary":"ページが読み込まれるとすぐに音声（または音声トラックを含む動画）の再生を自動的に開始することは、ユーザーにとって歓迎されない驚きです。 メディアの自動再生は便利な目的に役立ちますが、注意して必要なときにだけ使用してください。 ユーザーがこれを制御できるようにするために、ブラウザーは多くの場合、さまざまな形式の自動再生のブロック（autoplay blocking）を提供します。 このガイドでは、さまざまなメディアおよびウェブオーディオ API（Web Audio API）の自動再生機能について説明します — 自動再生の使用方法と自動再生のブロックを適切に処理するためのブラウザーの操作方法の簡単な概要を含みます。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Autoplay guide for media and Web Audio APIs","locale":"en-US","native":"English (US)"},{"title":"미디어 및 Web Audio API 자동 재생 가이드","locale":"ko","native":"한국어"},{"title":"Autoplay guide for media and Web Audio APIs","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/media/autoplay_guide","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/media/autoplay_guide/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/Media","title":"ウェブメディア技術"},{"uri":"/ja/docs/Web/Media/Autoplay_guide","title":"メディアおよびウェブオーディオ API の自動再生ガイド"}],"pageTitle":"メディアおよびウェブオーディオ API の自動再生ガイド - ウェブメディア技術 | MDN","noIndexing":false}}