{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"バーコード検出 API","mdn_url":"/ja/docs/Web/API/Barcode_Detection_API","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Barcode_Detection_API\">Barcode Detection API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/BarcodeDetector\"><code>BarcodeDetector</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/BarcodeDetector/detect\"><code>BarcodeDetector.detect()</code></a></li><li><a href=\"/ja/docs/Web/API/BarcodeDetector/getSupportedFormats\"><code>BarcodeDetector.getSupportedFormats()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>安全なコンテキスト用:</strong> この機能は一部またはすべての<a href=\"#browser_compatibility\">対応しているブラウザー</a>において、<a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a> (HTTPS) でのみ利用できます。</p></div> <div class=\"notecard note\" id=\"sect2\">\n  <p><strong>注:</strong> この機能は <a href=\"/ja/docs/Web/API/Web_Workers_API\">Web Worker</a> 内で利用可能です</p>\n</div> <div class=\"notecard experimental\" id=\"sect3\"><p><strong>Experimental:</strong> <strong>これは<a href=\"/ja/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">実験的な機能</a>です。</strong><br>本番で使用する前に<a href=\"#browser_compatibility\">ブラウザー互換性一覧表</a>をチェックしてください。</p></div>\n<p>バーコード検出 API (Barcode Detection API) は、線形および二次元のバーコードを画像内から検出します。</p>"}},{"type":"prose","value":{"id":"概念と使用方法","title":"概念と使用方法","isH3":false,"content":"<p>ウェブアプリケーションでバーコード認識に対応することで、対応しているバーコード形式を通じてさまざまな用途に利用できるようになります。 QR コードはオンライン決済、ウェブナビゲーション、ソーシャルメディア接続の確立に、アステカコードは搭乗券のスキャンに、ショッピングアプリは JAN、EAN、UPC バーコードを使用して物理的なアイテムの価格を比較するために使用することが可能です。</p>\n<p>検出は <a href=\"/ja/docs/Web/API/BarcodeDetector/detect\" title=\"detect()\"><code>detect()</code></a> メソッドで行われ、これに画像オブジェクトを渡します。これは <a href=\"/ja/docs/Web/HTML/Element/img\">要素</a>、<a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a>、<a href=\"/ja/docs/Web/API/ImageData\"><code>ImageData</code></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasImageSource</code> <small>(en-US)</small></a> の何れかです。オプションの引数を <a href=\"/ja/docs/Web/API/BarcodeDetector\"><code>BarcodeDetector</code></a> コンストラクターに渡すことで、検出するバーコード形式のヒントを与えることができます。</p>"}},{"type":"prose","value":{"id":"対応しているバーコード形式","title":"対応しているバーコード形式","isH3":true,"content":"<p>バーコード検出 API は、以下のバーコード形式に対応しています。</p>\n<table class=\"no-markdown\">\n  <thead>\n    <tr>\n      <th>形式</th>\n      <th>説明</th>\n      <th>画像</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>aztec</td>\n      <td>ISO24778 に準拠した正方形の二次元行列で、その中心には正方形の角灯パターンがあり、アステカのピラミッドに似ています。周囲に空白ゾーンを必要としません。</td>\n      <td>\n        <img alt=\"アステカバーコードのサンプル画像です。正方形の中に黒と白の小さな四角形が入っています。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/aztec.gif\" width=\"76\" height=\"76\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>code_128</td>\n      <td>ISO15417 に準拠し、 ASCII の 128 文字すべてを符号化できる（この名称の由来）線形（一次元）、双方向復号可能、自己検査可能なバーコードです。</td>\n      <td>\n        <img alt=\"code-128　バーコードの画像です。黒と白の縦線が水平に分布しています。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/code-128.gif\" width=\"312\" height=\"100\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>code_39</td>\n      <td>ISO16388 に準拠した線形（一次元）の自己検査バーコードです。離散的で可変長のバーコード型です。</td>\n      <td>\n        <img alt=\"code-39 バーコードの画像です。黒と白の縦線が水平に分布しています。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/code-39.png\" width=\"748\" height=\"300\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>code_93</td>\n      <td>bc5 に続く長さが可変の直線的な連続記号。 Code 128 よりも情報密度が高く、 Code 39 に似た外見です。 Code 93 は、主にカナダポストが配達の補足情報をエンコードするために使用しています。</td>\n      <td>\n        <img alt=\"code 93 形式のバーコードの画像です。黒と白の縦線が水平に分布しています。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/code-93.png\" width=\"608\" height=\"254\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>codabar</td>\n      <td>線形のバーコードで、 0-9, A-D と記号 - . $ / + の文字を表します。</td>\n      <td>\n        <img alt=\"codebar 形式のバーコードの画像です。黒と白の縦線が水平に分布しています。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/codabar.png\" width=\"550\" height=\"160\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>data_matrix</td>\n      <td>ISO16022 に準拠し、黒と白のモジュールを正方形または長方形に配列した、方向に依存しない二次元バーコードです。</td>\n      <td>\n        <img alt=\"データマトリクスバーコードの一例。正方形の中に白と黒の小さな正方形が埋め尽くされています。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/data-matrix.png\" width=\"262\" height=\"268\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>ean_13</td>\n      <td>UPC-A 規格に基づき、 ISO15420 で定義された線形バーコードです。</td>\n      <td>\n        <img alt=\"EAN-13 形式のバーコードの画像です。黒と白の縦線が水平に分布しています。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/ean-13.png\" width=\"770\" height=\"422\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>ean_8</td>\n      <td>ISO15420 で定義され、 EAN-13 から派生した線形バーコードです。</td>\n      <td>\n        <img alt=\"EAN-8 形式のバーコードの画像です。黒と白の縦線が水平に分布しています。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/ean-8.png\" width=\"450\" height=\"362\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>itf</td>\n      <td>連続的、自己チェック、双方向にデコード可能なバーコードです。常に 14 桁の数字がエンコードされています。</td>\n      <td>\n        <img alt=\"ITF バーコードの画像です。黒と白の縦線が水平に分布しています。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/ift.png\" width=\"558\" height=\"276\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>pdf417</td>\n      <td>複数行、複数列の連続した二次元バーコードの記号化形式です。双方向にデコード可能で、 ISO15438 規格を使用しています。</td>\n      <td>\n        <img alt=\"pdf417バーコードのフォーマットの例です。白黒の小さな四角形が並んでいます。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/pdf417.png\" width=\"668\" height=\"292\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>qr_code</td>\n      <td>ISO18004 規格を使用した二次元バーコードです。エンコードされる情報は、テキスト、URL、その他のデータです。</td>\n      <td>\n        <img alt=\"QR コードの一例です。白と黒の小さな四角形が並んでいます。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/qr-code.png\" width=\"302\" height=\"302\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>upc_a</td>\n      <td>最も一般的な線形バーコードの一つで、米国では小売業に広く適用されています。 ISO15420 で定義されており、バーとスペースで数字を表現し、各桁は幅が可変のバー 2 本とスペース 2 本の一意なパターンと関連付けられています。 UPC-A は、各商品に一意に割り当てられる 12 桁の数字をエンコードでき、技術的には EAN-13 のサブセットです（UPC-A コードは、最初の文字を 0 に設定したEAN-13 で表現されます）。</td>\n      <td>\n        <img alt=\"upc-a バーコードの画像です。白黒の縦線の長方形で、その下に数字が書かれています。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/upc-a.png\" width=\"564\" height=\"308\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>upc_e</td>\n      <td>ISO15420 で定義されている UPC-A の変化形で、不要なゼロを圧縮してよりコンパクトなバーコードにしたものです。</td>\n      <td>\n        <img alt=\"upc-e バーコードの画像です。黒と白の縦線が入った長方形です。\" src=\"/en-US/docs/Web/API/Barcode_Detection_API/upc-e.png\" width=\"446\" height=\"312\" loading=\"lazy\">\n      </td>\n    </tr>\n    <tr>\n      <td>unknown</td>\n      <td>この値は、プラットフォームが検出中のバーコードを解釈できない、または特定できない、または対応していないことを表すために使用されます。</td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n<p>ユーザーエージェントが対応している形式は、 <a href=\"/ja/docs/Web/API/BarcodeDetector/getSupportedFormats\" title=\"getSupportedFormats()\"><code>getSupportedFormats()</code></a> メソッドで確認することができます。</p>"}},{"type":"prose","value":{"id":"インターフェイス","title":"インターフェイス","isH3":false,"content":"<dl>\n  <dt id=\"barcodedetector\"><a href=\"/ja/docs/Web/API/BarcodeDetector\"><code>BarcodeDetector</code></a></dt>\n  <dd>\n    <p><strong><code>BarcodeDetector</code></strong> インターフェイスはバーコード検出 API のインターフェイスで、画像内の線形および二次元バーコードを検出できるようにします。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"検出器の作成","title":"検出器の作成","isH3":true,"content":"<p>この例では、ブラウザーの互換性をチェックし、指定されたサポート形式で、新しいバーコード検出器オブジェクトを作成します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 互換性をチェック</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">'BarcodeDetector'</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Barcode Detector はこのブラウザーでは対応していません。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Barcode Detector に対応しています。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 新しい検出器を生成</span>\n  <span class=\"token keyword\">var</span> barcodeDetector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BarcodeDetector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">formats</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'code_39'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'codabar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ean_13'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"対応している形式の取得","title":"対応している形式の取得","isH3":true,"content":"<p>次の例では、 <code>getSupportFormat()</code> メソッドを呼び出し、結果をコンソールに記録しています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 対応している型をチェック</span>\nBarcodeDetector<span class=\"token punctuation\">.</span><span class=\"token function\">getSupportedFormats</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">supportedFormats</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    supportedFormats<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">format</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"バーコードの検出","title":"バーコードの検出","isH3":true,"content":"<p>この例では、 <code>detect()</code> メソッドを使用して、与えられた画像内のバーコードを検出しています。これらは繰り返し処理され、バーコードのデータはコンソールに記録されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  barcodeDetector<span class=\"token punctuation\">.</span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span>imageEl<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">barcodes</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      barcodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">barcode</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>barcode<span class=\"token punctuation\">.</span>rawData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://wicg.github.io/shape-detection-api/#barcode-detection-api\" class=\"external\" rel=\" noopener\">Accelerated Shape Detection in Images # barcode-detection-api</a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.BarcodeDetector","dataURL":"/ja/docs/Web/API/Barcode_Detection_API/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.barcodefaq.com/\" class=\"external\" rel=\" noopener\">barcodefaq.com: A website with information about different barcodes and examples of the different types.</a></li>\n  <li><a href=\"https://web.dev/shape-detection/#barcodedetector\" class=\"external\" rel=\" noopener\">The Shape Detection API: a picture is worth a thousand words, faces, and barcodes</a></li>\n</ul>"}}],"toc":[{"text":"概念と使用方法","id":"概念と使用方法"},{"text":"インターフェイス","id":"インターフェイス"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"バーコード検出 API (Barcode Detection API) は、線形および二次元のバーコードを画像内から検出します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Barcode Detection API","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/barcode_detection_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/barcode_detection_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Barcode_Detection_API","title":"バーコード検出 API"}],"pageTitle":"バーコード検出 API - Web API | MDN","noIndexing":false}}