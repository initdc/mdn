{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"座標変換","mdn_url":"/ja/docs/Web/API/Canvas_API/Tutorial/Transformations","locale":"ja","native":"日本語","hasMathML":true,"sidebarHTML":"\n <ol>\n  <li><a href=\"/ja/docs/Web/API/Canvas_API\"><strong>Canvas API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Canvas チュートリアル</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">基本的な使用</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">図形の描画</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">スタイルと色の適用</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Drawing_text\">テキストの描画</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Using_images\">画像の使用</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Transformations\">変換</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Compositing\">合成とクリッピング</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">基本的なアニメーション</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">高度なアニメーション</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">ピクセル操作</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">canvas の最適化</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Finale\">最後に</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>例</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/A_basic_ray-caster\">A basic raycaster</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">canvas を用いた動画の操作</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>インターフェイス</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n        <li><a href=\"/ja/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n        <li><a href=\"/ja/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li>\n        <li><a href=\"/ja/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/ja/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code> <small>(en-US)</small></a></li>\n        <li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <a href=\"/ja/docs/Web/API/Path2D\"><code>Path2D</code></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ja/docs/MDN\">ドキュメント:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>貢献</summary>\n      <ol>\n        <li><a href=\"/ja/docs/MDN\">MDN プロジェクト</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Using_images\">« 前のページ</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Compositing\">次のページ »</a></li>\n</ul>\n<p>これまでのチュートリアルで、<a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">キャンバスのグリッド</a>や<strong>座標空間</strong>について学びました。今までは既定のグリッドしか使用しておらず、また必要に応じてキャンバス全体のサイズを変更していました。座標変換 (transformations) には、原点を別の場所に移したり、回転したり、拡大縮小したりといった、より強力な手段があります。</p>"}},{"type":"prose","value":{"id":"状態の保存と復元","title":"状態の保存と復元","isH3":false,"content":"<p>座標変換のメソッドを見ていく前に、より複雑な描画を始めたときに不可欠になメソッドを 2 つ見ておきましょう。</p>\n<dl>\n  <dt id=\"save\"><a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/save\" title=\"save()\"><code>save()</code></a></dt>\n  <dd>\n    <p>キャンバス全体の状態を保存します。</p>\n  </dd>\n  <dt id=\"restore_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/restore\"><code>restore()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>直近に保存したキャンバスの状態を復元します。</p>\n  </dd>\n</dl>\n<p>キャンバスの状態は、スタックに保存されます。 <code>save()</code> メソッドを呼び出すたびに、現在の描画状態をスタックにプッシュします。描画状態は以下の情報で構成されます。</p>\n<ul>\n  <li>適用された座標変換操作 (すなわち、後述する <code>translate</code>、<code>rotate</code>、<code>scale</code>)。</li>\n  <li><a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/strokeStyle\" title=\"strokeStyle\"><code>strokeStyle</code></a>、<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/fillStyle\" title=\"fillStyle\"><code>fillStyle</code></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/globalAlpha\"><code>globalAlpha</code> <small>(en-US)</small></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineWidth\"><code>lineWidth</code> <small>(en-US)</small></a>、<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/lineCap\" title=\"lineCap\"><code>lineCap</code></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin\"><code>lineJoin</code> <small>(en-US)</small></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/miterLimit\"><code>miterLimit</code> <small>(en-US)</small></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineDashOffset\"><code>lineDashOffset</code> <small>(en-US)</small></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX\"><code>shadowOffsetX</code> <small>(en-US)</small></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY\"><code>shadowOffsetY</code> <small>(en-US)</small></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowBlur\"><code>shadowBlur</code> <small>(en-US)</small></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowColor\"><code>shadowColor</code> <small>(en-US)</small></a>、<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\" title=\"globalCompositeOperation\"><code>globalCompositeOperation</code></a>、<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/font\" title=\"font\"><code>font</code></a>、<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/textAlign\" title=\"textAlign\"><code>textAlign</code></a>、<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/textBaseline\" title=\"textBaseline\"><code>textBaseline</code></a>、<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/direction\" title=\"direction\"><code>direction</code></a>、<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\" title=\"imageSmoothingEnabled\"><code>imageSmoothingEnabled</code></a> 属性の現在の値。</li>\n  <li>現在の<a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Compositing#clipping_paths\">クリッピングパス</a>。これは次の章で説明します。</li>\n</ul>\n<p><code>save()</code> メソッドは、何回でも呼び出すことができます。<code>restore()</code> メソッドを呼び出すたびに、最後に保存された状態をスタックからポップして、すべての保存済み設定を復元します。</p>"}},{"type":"prose","value":{"id":"save_および_restore_の例","title":"<code>save</code> および <code>restore</code> の例","isH3":true,"content":"<p>この例は、連続した一連の矩形を描画するときに、描画状態のスタックがどのように機能するかを示します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 既定の設定で矩形を描画</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 既定の状態を保存</span>\n\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#09F'</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 設定変更</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 新たな設定で矩形を描画</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 現在の状態を保存</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#FFF'</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 設定変更</span>\n  ctx<span class=\"token punctuation\">.</span>globalAlpha <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 新たな設定で矩形を描画</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 以前の状態を復元</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 復元した設定で矩形を描画</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 以前の状態を復元</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 復元した設定で矩形を描画</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>最初のステップで、大きな矩形を既定の設定で描きます。次にこの状態を保存して、塗りつぶし色を変更します。そして、 2 番目のやや小さい青色の矩形を描いて、状態を保存します。もう一度描画設定を変更して、 3 番目の半透明な白色の矩形を描きます。</p>\n<p>ここまでは、これまでの章で行ってきたことによく似ています。しかし最初に <code>restore()</code> 文を呼び出したとき、スタックの先頭の描画状態が削除されて、その設定が復元されます。<code>save()</code> を使用して状態を保存しなければ、前の状態に戻すために塗りつぶし色や透過性を手動で変更しなければなりません。ここではプロパティが 2 つであり容易ですが、プロパティが多ければコードが一気にとても長くなります。</p>\n<p>2 番目の <code>restore()</code> 文を呼び出すと、元の状態（1 番目の <code>save</code> を呼び出す前に設定した状態）を復元して、最後の矩形を再び黒色で描きます。</p><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations/canvas_savestate.png\" width=\"190\" height=\"190\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"save および restore の例\" id=\"frame_a_save_and_restore_canvas_state_example\" width=\"180\" height=\"180\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_save_and_restore_canvas_state_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table>","titleAsText":"save および restore の例"}},{"type":"prose","value":{"id":"移動","title":"移動","isH3":false,"content":"<p>最初の座標変換メソッドとして、<code>translate()</code> を見ていきましょう。このメソッドは、キャンバスおよびその原点をグリッド内の別の場所に移動するために使用されます。</p>\n<dl>\n  <dt id=\"translatex_y_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/translate\"><code>translate(x, y)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>キャンバスやその原点をグリッド上で移動します。<code>x</code> は水平方向の移動距離、<code>y</code> はグリッドを垂直方向の移動距離を示します。</p>\n  </dd>\n</dl>\n<p>\n  <img src=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations/canvas_grid_translate.png\" alt=\"\" width=\"220\" height=\"220\" loading=\"lazy\">\n</p>\n<p>座標変換を行う前にキャンバスの状態を保存しておくことは、よいアイデアです。ほとんどの場合、元の状態に戻すためには逆の座標変換を行うよりも <code>restore</code> メソッドを呼び出すほうが簡単です。また、ループ内で座標変換を行っているときにキャンバスの状態の保存や復元を行わなければ、キャンバスの端の外側に描画することになり、描いたものの一部を失ってしまうかもしれません。</p>"}},{"type":"prose","value":{"id":"translate_の例","title":"<code>translate</code> の例","isH3":true,"content":"<p>この例は、キャンバスの原点を移動する利点をいくつか示しています。 <code>translate()</code> メソッドを使用しなければ、すべての矩形が同じ位置 (0,0) に描かれます。また <code>translate()</code> によって、 <code>fillRect()</code> 関数で座標を手動で調整する必要なく、どこにでも自由に矩形を置くことができます。これにより若干理解しやすく、また使いやすくなります。</p>\n<p><code>draw()</code> 関数で、<code>for</code> ループを使用して <code>fillRect()</code> 関数を 9 回呼び出しています。それぞれのループで canvas を移動して矩形を描き、その後に元の状態を復元します。描画位置を調節する <code>translate()</code> を頼って、<code>fillRect()</code> は毎回同じ座標を使用していることに注目してください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb('</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">51</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span> <span class=\"token operator\">-</span> <span class=\"token number\">51</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', 255)'</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> j <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations/translate.png\" width=\"145\" height=\"148\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"translate の例\" id=\"frame_a_translate_example\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_translate_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table>","titleAsText":"translate の例"}},{"type":"prose","value":{"id":"回転","title":"回転","isH3":false,"content":"<p>2 番目の座標変換メソッドは <code>rotate()</code> です。現在の原点を中心にしてキャンバスを回転させるために使用します。</p>\n<dl>\n  <dt id=\"rotateangle_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/rotate\"><code>rotate(angle)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>現在の原点を中心にしてラジアンで示した <code>angle</code> の分、キャンバスを時計回りに回転します。</p>\n  </dd>\n</dl>\n<p>\n  <img src=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations/canvas_grid_rotate.png\" alt=\"\" width=\"220\" height=\"220\" loading=\"lazy\">\n</p>\n<p>回転の中心は、常にキャンバスの原点です。中心を変更するには、<code>translate()</code> メソッドを使用してキャンバスを移動しなければなりません。</p>"}},{"type":"prose","value":{"id":"rotate_の例","title":"<code>rotate</code> の例","isH3":true,"content":"<p>この例は、まずはキャンバスの原点で矩形を回転するために <code>rotate()</code> メソッドを使用して、次に矩形自身の中心で回転するために <code>translate()</code> の助けを借りています。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 角度はラジアン (radians) で表しており、度数 (degrees) ではありません。これは <code>radians = (Math.PI/180)*degrees</code> のようにすると変換できます。</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 左の矩形を canvas の原点で回転する</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 青い矩形</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#0095DD'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 灰色の矩形</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#4D4E53'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 右の矩形を矩形の中心で回転する</span>\n  <span class=\"token comment\">// draw blue rect</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#0095DD'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 矩形の中心に移動する</span>\n                          <span class=\"token comment\">// x = x + 0.5 * 幅</span>\n                          <span class=\"token comment\">// y = y + 0.5 * 高さ</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 回転する</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 元の位置に移動する</span>\n\n  <span class=\"token comment\">// 灰色の矩形を描く</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#4D4E53'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>矩形を中心で回転するために、キャンバスを矩形の中心へ移動した後にキャンバスを回転しています。そして canvas を 0,0 へ移動した後に矩形を描きます。</p>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations/rotate.png\" width=\"288\" height=\"191\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"rotate の例\" id=\"frame_a_rotate_example\" width=\"310\" height=\"210\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_rotate_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table>","titleAsText":"rotate の例"}},{"type":"prose","value":{"id":"拡大縮小","title":"拡大縮小","isH3":false,"content":"<p>次の座標変換メソッドは拡大縮小です。キャンバスのグリッドの単位を増減するために使用します。これは、図形やビットマップを縮小または拡大して描くために使用できます。</p>\n<dl>\n  <dt id=\"scalex_y\"><a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/scale\" title=\"scale(x, y)\"><code>scale(x, y)</code></a></dt>\n  <dd>\n    <p>キャンバスの単位を x （水平方向）または y （垂直方向）で指定した分拡大縮小します。どちらの引数も実数です。1.0 より小さい値は単位あたりのサイズが減少、1.0 より大きい値は単位あたりのサイズが増加します。1.0 では単位あたりのサイズが変わりません。</p>\n  </dd>\n</dl>\n<p>負数を使用すると軸を反転できます（例えば <code>translate(0,canvas.height); scale(1,-1);</code> で、原点が左下の隅にある有名なデカルト座標系になります）。</p>\n<p>既定では、キャンバスの 1 単位は 1 ピクセルとまったく同じです。例えば、拡大率に 0.5 を適用すると 1 単位が 0.5 ピクセルになり、図形が半分のサイズで描かれます。同様に拡大率を 2.0 に設定すると単位あたりのサイズが増えて、1 単位あたり 2 ピクセルになります。この結果、図形は 2 倍の大きさで描かれます。</p>"}},{"type":"prose","value":{"id":"scale_の例","title":"<code>scale</code> の例","isH3":true,"content":"<p>この例は、図形をさまざまな拡大率で描きます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// シンプルな図形を描いて、拡大する</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 水平方向に反転する</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>font <span class=\"token operator\">=</span> <span class=\"token string\">'48px serif'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'MDN'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations/scale.png\" width=\"154\" height=\"116\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"scale の例\" id=\"frame_a_scale_example\" width=\"160\" height=\"160\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.a_scale_example.html\" loading=\"lazy\"></iframe></td></tr></tbody></table>","titleAsText":"scale の例"}},{"type":"prose","value":{"id":"座標変換","title":"座標変換","isH3":false,"content":"<p>最後に、以下の座標変換メソッドでは、変換行列によって直接変更を行うことができます。</p>\n<ul>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/transform\"><code>transform(a, b, c, d, e, f)</code> <small>(en-US)</small></a>\n    <ul>\n      <li>\n        : 引数で表した行列と、現在の変換行列で乗算を行います。変換行列は以下のとおりです。\n        \n        <math>\n          <semantics>\n            <mrow>\n              <mo>[</mo>\n              <mtable columnalign=\"center center center\" rowspacing=\"0.5ex\">\n                <mtr>\n                  <mtd>\n                    <mi>a</mi>\n                  </mtd>\n                  <mtd>\n                    <mi>c</mi>\n                  </mtd>\n                  <mtd>\n                    <mi>e</mi>\n                  </mtd>\n                </mtr>\n                <mtr>\n                  <mtd>\n                    <mi>b</mi>\n                  </mtd>\n                  <mtd>\n                    <mi>d</mi>\n                  </mtd>\n                  <mtd>\n                    <mi>f</mi>\n                  </mtd>\n                </mtr>\n                <mtr>\n                  <mtd>\n                    <mn>0</mn>\n                  </mtd>\n                  <mtd>\n                    <mn>0</mn>\n                  </mtd>\n                  <mtd>\n                    <mn>1</mn>\n                  </mtd>\n                </mtr>\n              </mtable>\n              <mo>]</mo>\n            </mrow>\n            <annotation encoding=\"TeX\">\\left[ \\begin{array}{ccc} a &amp; c &amp; e \\ b &amp; d &amp; f \\ 0 &amp; 0 &amp; 1 \\end{array} \\right]</annotation>\n          </semantics>\n        </math>\n      </li>\n      <li>: いずれかの引数が <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a> になる場合は、メソッドで例外を発生させないように行列を infinite としてマークしなければなりません。</li>\n    </ul>\n  </li>\n</ul>\n<p>この関数の引数は以下のとおりです。</p>\n<dl>\n  <dt id=\"a_m11\"><code>a (m11)</code></dt>\n  <dd>\n    <p>水平方向の拡大。</p>\n  </dd>\n  <dt id=\"b_m12\"><em><code>b (m12)</code></em></dt>\n  <dd>\n    <p>水平方向の歪み。</p>\n  </dd>\n  <dt id=\"c_m21\"><code>c (m21)</code></dt>\n  <dd>\n    <p>垂直方向の歪み。</p>\n  </dd>\n  <dt id=\"d_m22\"><code>d (m22)</code></dt>\n  <dd>\n    <p>垂直方向の拡大。</p>\n  </dd>\n  <dt id=\"e_dx\"><code>e (dx)</code></dt>\n  <dd>\n    <p>水平方向の移動。</p>\n  </dd>\n  <dt id=\"f_dy\"><code>f (dy)</code></dt>\n  <dd>\n    <p>垂直方向の移動。</p>\n  </dd>\n  <dt id=\"settransforma_b_c_d_e_f_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\"><code>setTransform(a, b, c, d, e, f)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>現在の座標変換を単位行列にリセットして、同じ引数で <code>transform()</code> メソッドを呼び出します。これは基本的に、現在の座標変換をアンドゥしてから指定した座標変換を行う操作を一度に行うものです。</p>\n  </dd>\n  <dt id=\"resettransform_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/resetTransform\"><code>resetTransform()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>現在の座標変換を単位行列にリセットします。これは <code>ctx.setTransform(1, 0, 0, 1, 0, 0);</code> を呼び出すことと同じです。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"transform_と_settransform_の例","title":"<code>transform</code> と <code>setTransform</code> の例","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> sin <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> cos <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    c <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span> <span class=\"token operator\">/</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgb('</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">+</span> <span class=\"token string\">', '</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>cos<span class=\"token punctuation\">,</span> sin<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>sin<span class=\"token punctuation\">,</span> cos<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">setTransform</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgba(255, 128, 255, 0.5)'</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>250<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><table class=\"sample-code-table\"><thead><tr><th scope=\"col\" style=\"text-align: center;\">Screenshot</th><th scope=\"col\" style=\"text-align: center;\">Live sample</th></tr></thead><tbody><tr><td><img alt=\"\" class=\"internal\" src=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations/canvas_transform.png\" width=\"190\" height=\"190\" loading=\"lazy\"></td><td><iframe class=\"sample-code-frame\" title=\"transform と setTransform の例\" id=\"frame_example_for_transform_and_settransform\" width=\"230\" height=\"280\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Canvas_API/Tutorial/Transformations/_sample_.example_for_transform_and_settransform.html\" loading=\"lazy\"></iframe></td></tr></tbody></table>\n<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Using_images\">« 前のページ</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Compositing\">次のページ »</a></li>\n</ul>","titleAsText":"transform と setTransform の例"}}],"toc":[{"text":"状態の保存と復元","id":"状態の保存と復元"},{"text":"移動","id":"移動"},{"text":"回転","id":"回転"},{"text":"拡大縮小","id":"拡大縮小"},{"text":"座標変換","id":"座標変換"}],"summary":"これまでのチュートリアルで、キャンバスのグリッドや座標空間について学びました。今までは既定のグリッドしか使用しておらず、また必要に応じてキャンバス全体のサイズを変更していました。座標変換 (transformations) には、原点を別の場所に移したり、回転したり、拡大縮小したりといった、より強力な手段があります。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Transformations","locale":"en-US","native":"English (US)"},{"title":"Transformations","locale":"fr","native":"Français"},{"title":"변형 (transformations)","locale":"ko","native":"한국어"},{"title":"Transformations","locale":"ru","native":"Русский"},{"title":"变形 Transformations","locale":"zh-CN","native":"中文 (简体)"},{"title":"變形效果","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/canvas_api/tutorial/transformations","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/canvas_api/tutorial/transformations/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Canvas_API","title":"キャンバス API"},{"uri":"/ja/docs/Web/API/Canvas_API/Tutorial","title":"Canvas チュートリアル"},{"uri":"/ja/docs/Web/API/Canvas_API/Tutorial/Transformations","title":"座標変換"}],"pageTitle":"座標変換 - Web API | MDN","noIndexing":false}}