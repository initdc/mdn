{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"キャンバスとピクセル操作","mdn_url":"/ja/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas","locale":"ja","native":"日本語","sidebarHTML":"\n <ol>\n  <li><a href=\"/ja/docs/Web/API/Canvas_API\"><strong>Canvas API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Canvas チュートリアル</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Basic_usage\">基本的な使用</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes\">図形の描画</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors\">スタイルと色の適用</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Drawing_text\">テキストの描画</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Using_images\">画像の使用</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Transformations\">変換</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Compositing\">合成とクリッピング</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Basic_animations\">基本的なアニメーション</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">高度なアニメーション</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">ピクセル操作</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">canvas の最適化</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Finale\">最後に</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>例</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/A_basic_ray-caster\">A basic raycaster</a></li>\n        <li><a href=\"/ja/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\">canvas を用いた動画の操作</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>インターフェイス</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li>\n        <li><a href=\"/ja/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n        <li><a href=\"/ja/docs/Web/API/CanvasGradient\"><code>CanvasGradient</code></a></li>\n        <li><a href=\"/ja/docs/Web/API/CanvasPattern\"><code>CanvasPattern</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code> <small>(en-US)</small></a></li>\n        <li><a href=\"/ja/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TextMetrics\"><code>TextMetrics</code> <small>(en-US)</small></a></li>\n        <li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <a href=\"/ja/docs/Web/API/Path2D\"><code>Path2D</code></a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ja/docs/MDN\">ドキュメント:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>貢献</summary>\n      <ol>\n        <li><a href=\"/ja/docs/MDN\">MDN プロジェクト</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">« 前のページ</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">次のページ »</a></li>\n</ul>\n<p>これまで、キャンバスの実際のピクセルは見てきませんでした。 <code>ImageData</code> オブジェクトを使用して、ピクセルデータを操作するためにデータ配列へ直接読み取りや書き込みを行うことが可能です。また、画像のスムージング（アンチエイリアシング）の制御方法やキャンバスの画像を保存する方法も見ていきます。</p>"}},{"type":"prose","value":{"id":"imagedata_オブジェクト","title":"ImageData オブジェクト","isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/ImageData\"><code>ImageData</code></a> オブジェクトは、キャンバスオブジェクトの領域にあるピクセルデータを表します。これには以下の読み取り専用プロパティがあります。</p>\n<dl>\n  <dt id=\"width\"><code>width</code></dt>\n  <dd>\n    <p>画像の幅をピクセル数で表します。</p>\n  </dd>\n  <dt id=\"height\"><code>height</code></dt>\n  <dd>\n    <p>画像の高さをピクセル数で表します。</p>\n  </dd>\n  <dt id=\"data\"><code>data</code></dt>\n  <dd>\n    <p><code>0</code> から <code>255</code> の間の (両端の値を含む) 整数データを RGBA の順で収めた一次元配列を表す <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a> です。</p>\n  </dd>\n</dl>\n<p><code>data</code> プロパティは、生のピクセルデータを参照するためにアクセス可能な <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a> を返します。それぞれのピクセルは 4 つの 1 バイト値（赤、緑、青、アルファの順、すなわち \"RGBA\" 形式）で表されます。また、それぞれの色成分は 0 から 255 の間の整数で表します。さらに、それぞれの成分は配列内で連続した添字が割り当てられており、左上のピクセルの赤色成分が配列の添字 0 になります。配列の中でピクセルは左から右へ進み、さらに下へと進んでいきます。</p>\n<p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\"><code>Uint8ClampedArray</code></a> は <code>height</code> × <code>width</code> × 4 バイトのデータがあり、添字の範囲は 0 から (<code>height</code>×<code>width</code>×4)-1 になります。</p>\n<p>例えば画像の 50 行目の 200 列目にあるピクセルから青色成分の値を読み取るには、以下のようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>blueComponent <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">200</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>座標（X と Y）が与えられると、次のようなことをすることになるかもしれません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> xCoord <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> yCoord <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> canvasWidth <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getColorIndicesForCoord</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> red <span class=\"token operator\">=</span> y <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> x <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>red<span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> colorIndices <span class=\"token operator\">=</span> <span class=\"token function\">getColorIndicesForCoord</span><span class=\"token punctuation\">(</span>xCoord<span class=\"token punctuation\">,</span> yCoord<span class=\"token punctuation\">,</span> canvasWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> redIndex <span class=\"token operator\">=</span> colorIndices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> greenIndex <span class=\"token operator\">=</span> colorIndices<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> blueIndex <span class=\"token operator\">=</span> colorIndices<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> alphaIndex <span class=\"token operator\">=</span> colorIndices<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> redForCoord <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>redIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> greenForCoord <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>greenIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> blueForCoord <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>blueIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> alphaForCoord <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>alphaIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>または ES2015 では次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> xCoord <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> yCoord <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> canvasWidth <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getColorIndicesForCoord</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> red <span class=\"token operator\">=</span> y <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> x <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>red<span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> red <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> colorIndices <span class=\"token operator\">=</span> <span class=\"token function\">getColorIndicesForCoord</span><span class=\"token punctuation\">(</span>xCoord<span class=\"token punctuation\">,</span> yCoord<span class=\"token punctuation\">,</span> canvasWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>redIndex<span class=\"token punctuation\">,</span> greenIndex<span class=\"token punctuation\">,</span> blueIndex<span class=\"token punctuation\">,</span> alphaIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> colorIndices<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>Uint8ClampedArray.length</code> 属性を読み取ると、ピクセル配列のサイズをバイト数で知ることができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> numBytes <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"imagedata_オブジェクトの作成","title":"ImageData オブジェクトの作成","isH3":false,"content":"<p>新たに空の <code>ImageData</code> オブジェクトを作成するには、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createImageData\"><code>createImageData()</code> <small>(en-US)</small></a> メソッドを使用します。<code>createImageData()</code> メソッドは 2 種類の形式があります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createImageData</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これは、特定の寸法の新たな <code>ImageData</code> オブジェクトを作成します。すべてのピクセルは透明な黒色（すべてがゼロ、すなわち rgba(0,0,0,0)）に設定されます。</p>\n<p>新たな <code>ImageData</code> オブジェクトを、　<code>anotherImageData</code> で指定したオブジェクトと同じ寸法で作成することもできます。新しいオブジェクトのピクセルは、すべて透明な黒色に設定されます。<strong>画像データはコピーされません!</strong></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createImageData</span><span class=\"token punctuation\">(</span>anotherImageData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"コンテキストのピクセルデータの取得","title":"コンテキストのピクセルデータの取得","isH3":false,"content":"<p>キャンバスのコンテキストのピクセルデータの複製を持つ <code>ImageData</code> オブジェクトを取得するには、<code>getImageData()</code> メソッドを使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このメソッドは (<code>left</code>,<code>top</code>)、(<code>left+width</code>, <code>top</code>)、(<code>left</code>, <code>top+height</code>)、(<code>left+width</code>, <code>top+height</code>) の点で四隅を表したキャンバスの領域のピクセルデータを表す <code>ImageData</code> オブジェクトを返します。点の座標は、キャンバスの座標空間の単位で指定します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 返される <code>ImageData</code> オブジェクトで、キャンバスの外部にあるピクセルはすべて透明な黒色になります。</p>\n</div>\n<p>このメソッドは、<a href=\"/en-US/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">キャンバスを使用した動画の操作 (en-US)</a>の記事でも説明しています。</p>"}},{"type":"prose","value":{"id":"カラーピッカー","title":"カラーピッカー","isH3":true,"content":"<p>この例では、マウスカーソルの下にある色を表示するために <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getImageData() (en-US)</a> メソッドを使用しています。ここでは現在のマウスカーソルの位置を <code>layerX</code> と <code>layerY</code> で求めて、<a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">getImageData() (en-US)</a> が提供するピクセル配列で該当位置のピクセルデータを探します。最後に、色を表示するための <code>&lt;div&gt;</code> で背景色とテキストを設定するために、配列データを使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>crossOrigin <span class=\"token operator\">=</span> <span class=\"token string\">'anonymous'</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'./assets/rhino.jpg'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> hoveredColor <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hovered-color'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> selectedColor <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'selected-color'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> destination</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerX<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerY<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> pixel <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> pixel<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> rgba <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">rgba(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    destination<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> rgba<span class=\"token punctuation\">;</span>\n    destination<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> rgba<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> rgba<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> hoveredColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> selectedColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このコードの使い方は、次のライブ例で紹介します。</p><iframe width=\"100%\" height=\"300\" src=\"https://mdn.github.io/dom-examples/canvas/pixel-manipulation/color-picker.html\" loading=\"lazy\"></iframe>\n<p>ソースコードもご覧ください。 <a href=\"https://github.com/mdn/dom-examples/blob/master/canvas/pixel-manipulation/color-picker.html\" class=\"external\" rel=\" noopener\">HTML</a>, <a href=\"https://github.com/mdn/dom-examples/blob/master/canvas/pixel-manipulation/color-picker.js\" class=\"external\" rel=\" noopener\">JavaScript</a> です。</p>"}},{"type":"prose","value":{"id":"コンテキストへのピクセルデータの描画","title":"コンテキストへのピクセルデータの描画","isH3":false,"content":"<p><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">putImageData() (en-US)</a> メソッドを使用して、コンテキストにピクセルデータを描くことができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>myImageData<span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>引数 <code>dx</code> と <code>dy</code> は、描画したいピクセルデータの左上の隅を描く位置を、コンテキストのデバイス座標で示します。</p>\n<p>例えば <code>myImageData</code> が表す画像全体をコンテキストの左上の隅から描くには、単純に以下のようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>myImageData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"色のグレースケール化と反転","title":"色のグレースケール化と反転","isH3":true,"content":"<p>この例では、すべてのピクセルに対して繰り返し処理を行い、値を変更したピクセル配列を [putImageData()] (/ja/docs/Web/API/CanvasRenderingContext2D/putImageData) を使ってキャンバスに戻しています。反転機能は、最大値 255 から各色を減算します。グレースケール関数は、赤、緑、青の平均値を使用します。また、例えば <code>x = 0.299r + 0.587g + 0.114b</code> という式で与えられる加重平均を使用することもできます。詳しくは Wikipedia の<a href=\"https://ja.wikipedia.org/wiki/%E3%82%B0%E3%83%AC%E3%83%BC%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%AB\" class=\"external\" rel=\" noopener\">グレースケール</a>をご覧ください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>crossOrigin <span class=\"token operator\">=</span> <span class=\"token string\">'anonymous'</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'./assets/rhino.jpg'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">original</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">invert</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> imageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>     <span class=\"token operator\">=</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// red</span>\n        data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// green</span>\n        data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// blue</span>\n    <span class=\"token punctuation\">}</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">grayscale</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> imageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> avg <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>     <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span> <span class=\"token comment\">// red</span>\n        data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span> <span class=\"token comment\">// green</span>\n        data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span> <span class=\"token comment\">// blue</span>\n    <span class=\"token punctuation\">}</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> inputs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[name=color]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> input <span class=\"token keyword\">of</span> inputs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    input<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">case</span> <span class=\"token string\">\"inverted\"</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token string\">\"grayscale\"</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">grayscale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">original</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>このコードの使い方は、次のライブ例で紹介します。</p><iframe width=\"100%\" height=\"300\" src=\"https://mdn.github.io/dom-examples/canvas/pixel-manipulation/color-manipulation.html\" loading=\"lazy\"></iframe>\n<p>ソースコードも利用できます。 — <a href=\"https://github.com/mdn/dom-examples/blob/master/canvas/pixel-manipulation/color-manipulation.html\" class=\"external\" rel=\" noopener\">HTML</a>, <a href=\"https://github.com/mdn/dom-examples/blob/master/canvas/pixel-manipulation/color-manipulation.js\" class=\"external\" rel=\" noopener\">JavaScript</a></p>"}},{"type":"prose","value":{"id":"ズームとアンチエイリアシング","title":"ズームとアンチエイリアシング","isH3":false,"content":"<p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\"><code>drawImage()</code> <small>(en-US)</small></a> メソッド、第 2 の canvas、<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\" title=\"imageSmoothingEnabled\"><code>imageSmoothingEnabled</code></a> プロパティの力を借りて、画像をズームアップして詳しく見ることができます。また、<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\" title=\"imageSmoothingEnabled\"><code>imageSmoothingEnabled</code></a> のない 3 番目のキャンバスも描画し、左右に並べて比較できるようにします。</p>\n<p>マウスカーソルの位置を取得して、そこから上下左右に 5 ピクセルの範囲の画像を切り取ります。そして切り取った画像を別のキャンバスにコピーして、望むサイズにリサイズします。ズーム用のキャンバスでは、元のキャンバスから切り取った 10×10 ピクセルの画像を 200×200 ピクセルにリサイズしています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>zoomctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span>\n                  Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> x <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                  Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>height <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>ズームの例です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>crossOrigin <span class=\"token operator\">=</span> <span class=\"token string\">'anonymous'</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'./assets/rhino.jpg'</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> smoothedZoomCtx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'smoothed-zoom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  smoothedZoomCtx<span class=\"token punctuation\">.</span>imageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  smoothedZoomCtx<span class=\"token punctuation\">.</span>mozImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  smoothedZoomCtx<span class=\"token punctuation\">.</span>webkitImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  smoothedZoomCtx<span class=\"token punctuation\">.</span>msImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> pixelatedZoomCtx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pixelated-zoom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  pixelatedZoomCtx<span class=\"token punctuation\">.</span>imageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  pixelatedZoomCtx<span class=\"token punctuation\">.</span>mozImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  pixelatedZoomCtx<span class=\"token punctuation\">.</span>webkitImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  pixelatedZoomCtx<span class=\"token punctuation\">.</span>msImageSmoothingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">zoom</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span>\n        Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> x <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>height <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  canvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerX<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>layerY<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">zoom</span><span class=\"token punctuation\">(</span>smoothedZoomCtx<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">zoom</span><span class=\"token punctuation\">(</span>pixelatedZoomCtx<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>このコードの使い方は、次のライブ例で紹介します。</p><iframe width=\"100%\" height=\"300\" src=\"https://mdn.github.io/dom-examples/canvas/pixel-manipulation/image-smoothing.html\" loading=\"lazy\"></iframe>\n<p>ソースコードも見ることができます。 — <a href=\"https://github.com/mdn/dom-examples/blob/master/canvas/pixel-manipulation/image-smoothing.html\" class=\"external\" rel=\" noopener\">HTML</a>, <a href=\"https://github.com/mdn/dom-examples/blob/master/canvas/pixel-manipulation/image-smoothing.js\" class=\"external\" rel=\" noopener\">JavaScript</a></p>"}},{"type":"prose","value":{"id":"画像の保存","title":"画像の保存","isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> は、画像を保存する際に役に立つ <code>toDataURL()</code> メソッドを提供します。これは、 <a href=\"/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">data URI (en-US)</a> として引数 <code>type</code> で指定した形式（既定値は <a href=\"https://en.wikipedia.org/wiki/Portable_Network_Graphics\" class=\"external\" rel=\" noopener\">PNG</a>）で表した画像を返します。返される画像の解像度は 96 dpi です。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p>\n    <strong>Note:</strong> CORS を使用せずに他の <a href=\"/ja/docs/Glossary/Origin\">origin</a> から取得したピクセルがキャンバスに含まれている場合、キャンバスは<strong>汚染</strong>され、その内容を読み取ったり保存したりできなくなることに注意してください。\n    <a href=\"/ja/docs/Web/HTML/CORS_enabled_image#security_and_tainted_canvases\">セキュリティと汚染されたキャンバス</a>を参照してください。\n  </p>\n</div>\n<dl>\n  <dt id=\"canvas.todataurlimagepng\"><a href=\"/ja/docs/Web/API/HTMLCanvasElement/toDataURL\" title=\"canvas.toDataURL('image/png')\"><code>canvas.toDataURL('image/png')</code></a></dt>\n  <dd>\n    <p>既定の設定。PNG 画像を作成します。</p>\n  </dd>\n  <dt id=\"canvas.todataurlimagejpeg_quality\"><a href=\"/ja/docs/Web/API/HTMLCanvasElement/toDataURL\" title=\"canvas.toDataURL('image/jpeg', quality)\"><code>canvas.toDataURL('image/jpeg', quality)</code></a></dt>\n  <dd>\n    <p>JPG 画像を作成します。オプションで、品質を 0 から 1 の範囲で指定できます。1 は最高品質、0 はほとんど見分けがつかなくなりますがファイルサイズを小さくできます。</p>\n  </dd>\n</dl>\n<p>キャンバスから生成した data URI は、例えば任意の <a href=\"/ja/docs/Web/HTML/Element/image\"><code>&lt;image&gt;</code></a> のソースとして使用したり、ディスクに保存するために <a href=\"/ja/docs/Web/HTML/Element/a#attr-download\">download 属性</a>を持つハイパーリンクに投入することができます。</p>\n<p>また、キャンバスから <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> を生成することもできます。</p>\n<dl>\n  <dt id=\"canvas.toblob_callback___type___encoderoptions_\"><a href=\"/ja/docs/Web/API/HTMLCanvasElement/toBlob\" title=\"canvas.toBlob(_callback_, _type_, _encoderOptions_)\"><code>canvas.toBlob(_callback_, _type_, _encoderOptions_)</code></a></dt>\n  <dd>\n    <p>キャンバスに含まれる画像を表す <code>Blob</code> オブジェクトを作成します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/ImageData\"><code>ImageData</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Canvas_API/Manipulating_video_using_canvas\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">キャンバスを使用した動画の操作 (en-US)</a></li>\n  <li><a href=\"https://codepo8.github.io/canvas-images-and-pixels/\" class=\"external\" rel=\" noopener\">Canvas, images and pixels – by Christian Heilmann</a></li>\n</ul><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Advanced_animations\">« 前のページ</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\">次のページ »</a></li>\n</ul>"}}],"toc":[{"text":"ImageData オブジェクト","id":"imagedata_オブジェクト"},{"text":"ImageData オブジェクトの作成","id":"imagedata_オブジェクトの作成"},{"text":"コンテキストのピクセルデータの取得","id":"コンテキストのピクセルデータの取得"},{"text":"コンテキストへのピクセルデータの描画","id":"コンテキストへのピクセルデータの描画"},{"text":"ズームとアンチエイリアシング","id":"ズームとアンチエイリアシング"},{"text":"画像の保存","id":"画像の保存"},{"text":"関連情報","id":"関連情報"}],"summary":"これまで、キャンバスの実際のピクセルは見てきませんでした。 ImageData オブジェクトを使用して、ピクセルデータを操作するためにデータ配列へ直接読み取りや書き込みを行うことが可能です。また、画像のスムージング（アンチエイリアシング）の制御方法やキャンバスの画像を保存する方法も見ていきます。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Pixel manipulation with canvas","locale":"en-US","native":"English (US)"},{"title":"Pixel manipulation with canvas","locale":"es","native":"Español"},{"title":"Manipulation de pixels avec canvas","locale":"fr","native":"Français"},{"title":"Пиксельная манипуляция с холстом","locale":"ru","native":"Русский"},{"title":"像素操作","locale":"zh-CN","native":"中文 (简体)"},{"title":"Pixel manipulation with canvas","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/canvas_api/tutorial/pixel_manipulation_with_canvas","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/canvas_api/tutorial/pixel_manipulation_with_canvas/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Canvas_API","title":"キャンバス API"},{"uri":"/ja/docs/Web/API/Canvas_API/Tutorial","title":"Canvas チュートリアル"},{"uri":"/ja/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas","title":"キャンバスとピクセル操作"}],"pageTitle":"キャンバスとピクセル操作 - Web API | MDN","noIndexing":false}}