{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"マルチタッチ操作","mdn_url":"/ja/docs/Web/API/Pointer_events/Multi-touch_interaction","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Pointer_events\">Pointer events</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/Pointer_events/Using_Pointer_Events\">Using Pointer Events</a></li><li><a href=\"/ja/docs/Web/API/Pointer_events/Multi-touch_interaction\">Multi-touch interaction</a></li><li><a href=\"/ja/docs/Web/API/Pointer_events/Pinch_zoom_gestures\">Pinch zoom gestures</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Navigator/maxTouchPoints\"><code>Navigator.maxTouchPoints</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Element/setPointerCapture\"><code>Element.setPointerCapture()</code></a></li><li><a href=\"/ja/docs/Web/API/Element/releasePointerCapture\"><code>Element.releasePointerCapture()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/HTMLElement/gotpointercapture_event\"><code>HTMLElement</code>: <code>gotpointercapture</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/lostpointercapture_event\"><code>HTMLElement</code>: <code>lostpointercapture</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointercancel_event\"><code>HTMLElement</code>: <code>pointercancel</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerdown_event\"><code>HTMLElement</code>: <code>pointerdown</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerenter_event\"><code>HTMLElement</code>: <code>pointerenter</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerleave_event\"><code>HTMLElement</code>: <code>pointerleave</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointermove_event\"><code>HTMLElement</code>: <code>pointermove</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerout_event\"><code>HTMLElement</code>: <code>pointerout</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerover_event\"><code>HTMLElement</code>: <code>pointerover</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerup_event\"><code>HTMLElement</code>: <code>pointerup</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>ポインターイベントは DOM 入力イベントを拡張して、マウスだけでなくペン/スタイラスやタッチ画面などのさまざまなポインティング入力デバイスをサポートします。<em>ポインター</em>は、特定の画面座標セットをターゲットにできるハードウェアにとらわれないデバイスです。 ポインターに単一のイベントモデルを使用すると、ウェブサイト、ウェブアプリの作成が簡単になり、ユーザーのハードウェアに関係なく優れたユーザーエクスペリエンスを提供できます。</p>\n<p>ポインターイベントはマウスイベントと多くの類似点がありますが、タッチ画面上の複数の指など、複数同時のポインターをサポートしています。 この追加機能は、より豊富なユーザー操作モデルを提供するために使用できますが、マルチタッチ操作 (multi-touch interaction) の処理がさらに複雑になります。 このドキュメントは、異なるマルチタッチ操作を持つポインターイベントを使用して、コード例を介して説明します。</p>\n<p>このアプリのライブ版は <a href=\"https://mdn.github.io/dom-examples/pointerevents/Multi-touch_interaction.html\" class=\"external\" rel=\" noopener\">Github</a> で利用できます。 <a href=\"https://github.com/mdn/dom-examples/blob/master/pointerevents/Multi-touch_interaction.html\" class=\"external\" rel=\" noopener\">ソースコードは Github で入手できます</a>。 プルリクエストや<a href=\"https://github.com/mdn/dom-examples/issues\" class=\"external\" rel=\" noopener\">バグレポート</a>は大歓迎です。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>この例では、さまざまなマルチタッチ操作にポインターイベントのさまざまなイベントタイプ（<a href=\"/ja/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a>, <a href=\"/ja/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a>, <a href=\"/ja/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> <a href=\"/ja/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a> など）を使用する方法を示します。</p>"}},{"type":"prose","value":{"id":"タッチターゲットの定義","title":"タッチターゲットの定義","isH3":true,"content":"<p>アプリは <a href=\"/ja/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> を使用して 3 つの異なるタッチターゲット領域を定義します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0em<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 2em<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">#target1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">#target2</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">#target3</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"グローバルな状態","title":"グローバルな状態","isH3":true,"content":"<p>マルチタッチ操作に対応するには、さまざまなイベントフェーズの間にポインターのイベント状態を維持することが必要です。 このアプリは、イベント状態をキャッシュするために、ターゲット要素ごとに 1 つのキャッシュで、 3 つの配列を使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// イベントログフラグ</span>\n<span class=\"token keyword\">var</span> logEvents <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// タッチターゲットごとに 1 つのイベントキャッシュ</span>\n<span class=\"token keyword\">var</span> evCache1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> evCache2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> evCache3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"イベントハンドラーの登録","title":"イベントハンドラーの登録","isH3":true,"content":"<p>イベントハンドラーは <a href=\"/ja/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a>, <a href=\"/ja/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a>, <a href=\"/ja/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> のポインターイベントに登録します。 <a href=\"/ja/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> のハンドラーは <a href=\"/ja/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a>, <a href=\"/ja/docs/Web/API/Element/pointerout_event\" title=\"pointerout\"><code>pointerout</code></a>, <a href=\"/ja/docs/Web/API/Element/pointerleave_event\" title=\"pointerleave\"><code>pointerleave</code></a> のイベントにも使用します。これら 4 つのイベントは、このアプリでは同じ意味を持っているからです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">set_handlers</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// 指定された要素にイベントハンドラーをインストールする</span>\n <span class=\"token keyword\">var</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n el<span class=\"token punctuation\">.</span>onpointerdown <span class=\"token operator\">=</span> pointerdown_handler<span class=\"token punctuation\">;</span>\n el<span class=\"token punctuation\">.</span>onpointermove <span class=\"token operator\">=</span> pointermove_handler<span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// pointer{up,cancel,out,leave} イベントの意味は - このアプリでは -</span>\n <span class=\"token comment\">// 同じであるため、これらのイベントに同じハンドラーを使用する。</span>\n el<span class=\"token punctuation\">.</span>onpointerup <span class=\"token operator\">=</span> pointerup_handler<span class=\"token punctuation\">;</span>\n el<span class=\"token punctuation\">.</span>onpointercancel <span class=\"token operator\">=</span> pointerup_handler<span class=\"token punctuation\">;</span>\n el<span class=\"token punctuation\">.</span>onpointerout <span class=\"token operator\">=</span> pointerup_handler<span class=\"token punctuation\">;</span>\n el<span class=\"token punctuation\">.</span>onpointerleave <span class=\"token operator\">=</span> pointerup_handler<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token function\">set_handlers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">set_handlers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">set_handlers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ポインターダウン","title":"ポインターダウン","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a> イベントは、ポインター（マウス、ペン/スタイラス、タッチ画面上のタッチ点）が<em>接触面</em>に接触したときに発生します。 このダウンイベントがマルチタッチ操作の一部である場合、イベントの状態をキャッシュしなければなりません。</p>\n<p>このアプリでは、要素の上にポインターを置いてダウンすると、その要素が持つアクティブなタッチ点の数に応じて、要素の背景色が変わります。 色の変更に関する詳細は <a href=\"#%E8%83%8C%E6%99%AF%E8%89%B2%E3%81%AE%E6%9B%B4%E6%96%B0\"><code>update_background</code></a> 関数を参照してください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">pointerdown_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// pointerdown イベントは、タッチ操作の開始を知らせます。</span>\n <span class=\"token comment\">// このイベントを後で処理するために保存し（これはマルチタッチ</span>\n <span class=\"token comment\">// 操作の一部になる可能性があります）、背景色を更新します</span>\n <span class=\"token function\">push_event</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logEvents<span class=\"token punctuation\">)</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerDown: name = \"</span> <span class=\"token operator\">+</span> ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">update_background</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ポインター移動","title":"ポインター移動","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a> ハンドラーは、ポインターが移動したときに呼び出されます。 別のイベントタイプが発生する前に（例えば、ユーザーがポインターを移動した場合など）複数回呼び出されることがあります。</p>\n<p>このアプリでは、ポインターの移動は、要素がこのイベントを受け取ったことを明確に視覚的に示すために、ターゲットの境界線（<code>border</code>）を破線（<code>dashed</code>）にすることで表します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">pointermove_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// 注: ユーザーが複数の「同時」タッチを行うと、ほとんどのブラウザーは少なくとも1つの</span>\n <span class=\"token comment\">// pointermove イベントを発生させ、一部はいくつかの pointermove イベントを発生させます。</span>\n <span class=\"token comment\">//</span>\n <span class=\"token comment\">// この関数は、ターゲットが移動イベントを受け取ったことを視覚的に示すために、</span>\n <span class=\"token comment\">// ターゲット要素の border を \"dashed\" に設定します。</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logEvents<span class=\"token punctuation\">)</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerMove\"</span><span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">update_background</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token string\">\"dashed\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ポインターアップ","title":"ポインターアップ","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> イベントは、ポインターが<em>接触面</em>から上がると発生します。 これが発生すると、そのイベントは関連付けられているイベントキャッシュから削除されます。</p>\n<p>このアプリでは、このハンドラーは <a href=\"/ja/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a>、<a href=\"/ja/docs/Web/API/Element/pointerleave_event\" title=\"pointerleave\"><code>pointerleave</code></a>、<a href=\"/ja/docs/Web/API/Element/pointerout_event\" title=\"pointerout\"><code>pointerout</code></a> のイベントにも使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">pointerup_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logEvents<span class=\"token punctuation\">)</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// このタッチ点をキャッシュから削除し、</span>\n  <span class=\"token comment\">// ターゲットの背景色と境界線をリセットします</span>\n  <span class=\"token function\">remove_event</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">update_background</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token string\">\"1px solid black\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"アプリの_ui","title":"アプリの UI","isH3":true,"content":"<p>アプリは、タッチ領域に <a href=\"/ja/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> 要素を使用し、ログ記録を有効にするボタンとログを消去するためのボタンを提供します。</p>\n<p>ブラウザーの既定のタッチの振る舞いが、このアプリのポインター処理をオーバーライドしないようにするために、<a href=\"/ja/docs/Web/CSS/touch-action\"><code>touch-action</code></a> プロパティを <a href=\"/ja/docs/Web/HTML/Element/body\"><code>&lt;body&gt;</code></a> 要素に適用しています。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">touch-action</span><span class=\"token punctuation\">:</span>none</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Tap, Hold or Swipe me 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Tap, Hold or Swipe me 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Tap, Hold or Swipe me 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n <span class=\"token comment\">&lt;!-- UI for logging/debugging --&gt;</span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">enableLog</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Start/Stop event logging<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>clearlog<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">clearLog</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Clear the log<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>output</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>output</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"その他の関数","title":"その他の関数","isH3":true,"content":"<p>これらの関数はアプリをサポートしますが、イベントの流れに直接は関係しません。</p>\n<h4 id=\"キャッシュ管理\">キャッシュ管理</h4>\n<p>これらの関数は、グローバルイベントキャッシュの <code>evCache1</code>、<code>evCache2</code>、<code>evCache3</code> を管理します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">get_cache</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// このイベントのターゲット要素のキャッシュを返す</span>\n <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">case</span> <span class=\"token string\">\"target1\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> evCache1<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">case</span> <span class=\"token string\">\"target2\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> evCache2<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">case</span> <span class=\"token string\">\"target3\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> evCache3<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error with cache handling\"</span><span class=\"token punctuation\">,</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">push_event</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// このイベントをターゲットのキャッシュに保存する</span>\n <span class=\"token keyword\">var</span> cache <span class=\"token operator\">=</span> <span class=\"token function\">get_cache</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n cache<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">remove_event</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// このイベントをターゲットのキャッシュから削除する</span>\n <span class=\"token keyword\">var</span> cache <span class=\"token operator\">=</span> <span class=\"token function\">get_cache</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> cache<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pointerId <span class=\"token operator\">==</span> ev<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     cache<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"背景色の更新\">背景色の更新</h4>\n<p>タッチ領域の背景色は次のように変わります。 アクティブなタッチがない場合は白（<code>white</code>）です。 1つのアクティブなタッチは黄色（<code>yellow</code>）です。 2つ同時のタッチはピンク（<code>pink</code>）で、3つ以上同時のタッチは水色（<code>lightblue</code>）です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">update_background</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// 現在ダウンしている同時タッチ/ポインターの数に基づいて</span>\n <span class=\"token comment\">// 次のように背景色を変更します</span>\n <span class=\"token comment\">//   white - ターゲット要素にタッチ点がない。 つまり、ポインターのダウンがない。</span>\n <span class=\"token comment\">//   yellow - 1つのポインターのダウン</span>\n <span class=\"token comment\">//   pink - 2つのポインターのダウン</span>\n <span class=\"token comment\">//   lightblue - 3つ以上のポインターのダウン</span>\n <span class=\"token keyword\">var</span> evCache <span class=\"token operator\">=</span> <span class=\"token function\">get_cache</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>evCache<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n     <span class=\"token comment\">// ターゲット要素にタッチ点がない</span>\n     ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n     <span class=\"token comment\">// 単独のタッチ点</span>\n     ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n     <span class=\"token comment\">// 2 つ同時のタッチ点</span>\n     ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"pink\"</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n     <span class=\"token comment\">// 3 つ以上同時のタッチ</span>\n     ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"lightblue\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"イベントログ\">イベントログ</h4>\n<p>これらの関数は、アプリのウィンドウへのイベント活動の送信に使用されます（デバッグとイベントの流れに関する学習をサポートするため）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// イベントログフラグ</span>\n<span class=\"token keyword\">var</span> logEvents <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">enableLog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  logEvents <span class=\"token operator\">=</span> logEvents <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\": pointerID = \"</span> <span class=\"token operator\">+</span> ev<span class=\"token punctuation\">.</span>pointerId <span class=\"token operator\">+</span>\n                <span class=\"token string\">\" ; pointerType = \"</span> <span class=\"token operator\">+</span> ev<span class=\"token punctuation\">.</span>pointerType <span class=\"token operator\">+</span>\n                <span class=\"token string\">\" ; isPrimary = \"</span> <span class=\"token operator\">+</span> ev<span class=\"token punctuation\">.</span>isPrimary<span class=\"token punctuation\">;</span>\n  o<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> s <span class=\"token operator\">+</span> \"\n\"<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">clearLog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n o<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}}],"toc":[{"text":"例","id":"例"}],"summary":"ポインターイベントは DOM 入力イベントを拡張して、マウスだけでなくペン/スタイラスやタッチ画面などのさまざまなポインティング入力デバイスをサポートします。ポインターは、特定の画面座標セットをターゲットにできるハードウェアにとらわれないデバイスです。 ポインターに単一のイベントモデルを使用すると、ウェブサイト、ウェブアプリの作成が簡単になり、ユーザーのハードウェアに関係なく優れたユーザーエクスペリエンスを提供できます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Multi-touch interaction","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/pointer_events/multi-touch_interaction","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/pointer_events/multi-touch_interaction/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Pointer_events","title":"ポインターイベント"},{"uri":"/ja/docs/Web/API/Pointer_events/Multi-touch_interaction","title":"マルチタッチ操作"}],"pageTitle":"マルチタッチ操作 - Web API | MDN","noIndexing":false}}