{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ポインターイベント","mdn_url":"/ja/docs/Web/API/Pointer_events","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Pointer_events\">Pointer events</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/Pointer_events/Using_Pointer_Events\">Using Pointer Events</a></li><li><a href=\"/ja/docs/Web/API/Pointer_events/Multi-touch_interaction\">Multi-touch interaction</a></li><li><a href=\"/ja/docs/Web/API/Pointer_events/Pinch_zoom_gestures\">Pinch zoom gestures</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Navigator/maxTouchPoints\"><code>Navigator.maxTouchPoints</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Element/setPointerCapture\"><code>Element.setPointerCapture()</code></a></li><li><a href=\"/ja/docs/Web/API/Element/releasePointerCapture\"><code>Element.releasePointerCapture()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/HTMLElement/gotpointercapture_event\"><code>HTMLElement</code>: <code>gotpointercapture</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/lostpointercapture_event\"><code>HTMLElement</code>: <code>lostpointercapture</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointercancel_event\"><code>HTMLElement</code>: <code>pointercancel</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerdown_event\"><code>HTMLElement</code>: <code>pointerdown</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerenter_event\"><code>HTMLElement</code>: <code>pointerenter</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerleave_event\"><code>HTMLElement</code>: <code>pointerleave</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointermove_event\"><code>HTMLElement</code>: <code>pointermove</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerout_event\"><code>HTMLElement</code>: <code>pointerout</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerover_event\"><code>HTMLElement</code>: <code>pointerover</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerup_event\"><code>HTMLElement</code>: <code>pointerup</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>今日のウェブコンテンツの多くは、ユーザーのポインティング機器がマウスであることを前提としています。しかし、多くの端末がペンやスタイラス、タッチ面のような他の種類のポインティング入力機器に対応しているので、既存のポインティング機器のイベントモデルへの拡張が必要であり、そして<a href=\"#%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88\">ポインターイベント</a>はその必要性に応じます。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> ポインターイベントは<a href=\"/ja/docs/Web/API/Web_Workers_API\">ウェブワーカー</a>では<em>利用できません</em>。</p>\n</div>\n<p>ポインターイベントは、ポインティング機器に対して発生する DOM イベントです。 これらは、マウス、ペンやスタイラス、（1 本以上の指でなどの）タッチなどのポインティング入力機器を処理する単一の DOM イベントモデルを作成するように設計されています。</p>\n<p><a href=\"#%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC\">ポインター</a>は、特定の画面座標セットをターゲットにできるハードウェアにとらわれない機器です。 ポインターに単一のイベントモデルを使用すると、ウェブサイトやウェブアプリの作成が簡単になり、ユーザーのハードウェアに関係なく優れた使い勝手を提供できます。しかし、機器固有の処理が必要なシナリオのために、ポインターイベントはイベントを生成した機器の種類を調べるための <a href=\"/ja/docs/Web/API/PointerEvent/pointerType\" title=\"pointerType\"><code>pointerType</code></a> プロパティを定義しています。</p>\n<p>一般的なポインター入力を処理するために必要なイベントは、<a href=\"/ja/docs/Web/API/MouseEvent\" title=\"マウスイベント\"><code>マウスイベント</code></a>に似ています（<code>mousedown</code>/<code>pointerdown</code>、<code>mousemove</code>/<code>pointermove</code> など）。 したがって、ポインターイベント種別は意図的にマウスイベント種別と似せています。</p>\n<p>さらに、ポインターイベントには、マウスイベントに存在する通常のプロパティ（クライアント座標、ターゲット要素、ボタンの状態など）、およびその他の入力形式のための新しいプロパティ（圧力、接触ジオメトリー、傾きなど）が含まれています。 実際、<a href=\"/ja/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> インターフェイスはすべての <a href=\"/ja/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a> のプロパティを継承しているため、マウスイベントからポインターイベントへのコンテンツの移行は容易です。</p>"}},{"type":"prose","value":{"id":"用語","title":"用語","isH3":false,"content":""}},{"type":"prose","value":{"id":"アクティブボタン状態","title":"アクティブボタン状態","isH3":true,"content":"<p><a href=\"#%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC\">ポインター</a>が <code>buttons</code> プロパティに対してゼロ以外の値を持つ場合の条件。 例えば、ペンの場合は、ペンがデジタイザーと物理的に接触しているか、ホバー中に少なくとも 1 つのボタンが押されているときです。</p>"}},{"type":"prose","value":{"id":"アクティブポインター","title":"アクティブポインター","isH3":true,"content":"<p>イベントを生成できる任意の<a href=\"#%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC\">ポインター</a>の入力機器。 ポインターがそれ以上のイベントを生成する可能性がある場合、ポインターはアクティブと見なされます。 例えば、ペンが持ち上げられたり動かされたりすると追加のイベントが発生する可能性があるため、ペンがダウン状態であるとアクティブであると見なされます。</p>"}},{"type":"prose","value":{"id":"デジタイザー","title":"デジタイザー","isH3":true,"content":"<p>接触を検出できる表面を備えた検知機器。 最も一般的な検知機器は、ペン、スタイラス、または指などの入力機器からの入力を検知することができるタッチ対応画面です。 検知機器の中には、入力機器の近接を検出できるものもあり、その状態をマウスにならってホバーと表現します。</p>"}},{"type":"prose","value":{"id":"ヒットテスト","title":"ヒットテスト","isH3":true,"content":"<p>ブラウザーがポインターイベントのターゲット要素を決定するために使用するプロセス。 通常、これはポインターの位置と、画面媒体上の文書内の要素の視覚的なレイアウトを考慮して決定されます。</p>"}},{"type":"prose","value":{"id":"ポインター","title":"ポインター","isH3":true,"content":"<p>画面上の特定の座標（または座標のセット）をターゲットにできる、入力機器のハードウェアにとらわれない表現。 ポインター入力機器の例としては、マウス、ペン/スタイラス、タッチ接触などがあります。</p>"}},{"type":"prose","value":{"id":"ポインターキャプチャ","title":"ポインターキャプチャ","isH3":true,"content":"<p>ポインターキャプチャでは、ポインターイベントをポインターの位置による通常のヒットテストの結果以外の特定の要素にターゲットしなおすことができます。</p>"}},{"type":"prose","value":{"id":"ポインターイベント","title":"ポインターイベント","isH3":true,"content":"<p><a href=\"#%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC\">ポインター</a>に対して発生した DOM <a href=\"/ja/docs/Web/API/PointerEvent\" title=\"イベント\"><code>イベント</code></a>。</p>"}},{"type":"prose","value":{"id":"インターフェイス","title":"インターフェイス","isH3":false,"content":"<p>主なインターフェイスは <a href=\"/ja/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> インターフェイスで、これには<a href=\"/ja/docs/Web/API/PointerEvent/PointerEvent\" title=\"コンストラクター\">コンストラクター</a>といくつかのイベント種別および関連するグローバルイベントハンドラーがあります。</p>\n<p>この標準には、 <a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a> および <a href=\"/ja/docs/Web/API/Navigator\"><code>Navigator</code></a> インターフェイスの拡張も含まれています。</p>\n<p>以下の項では、各インターフェイスとプロパティについて簡単に説明します。</p>"}},{"type":"prose","value":{"id":"pointerevent_インターフェイス","title":"PointerEvent インターフェイス","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> インターフェイスは <a href=\"/ja/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a> インターフェイスを拡張したもので、以下のプロパティがあります。（以下のプロパティはすべて <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span> です。）</p>\n<dl>\n  <dt id=\"pointerid\"><a href=\"/ja/docs/Web/API/PointerEvent/pointerId\" title=\"pointerId\"><code>pointerId</code></a></dt>\n  <dd>\n    <p>イベントの原因となっているポインターの一意の識別子。</p>\n  </dd>\n  <dt id=\"width\"><a href=\"/ja/docs/Web/API/PointerEvent/width\" title=\"width\"><code>width</code></a></dt>\n  <dd>\n    <p>ポインターの接触ジオメトリーの幅（X 軸上の大きさ、CSS ピクセル単位）。</p>\n  </dd>\n  <dt id=\"height\"><a href=\"/ja/docs/Web/API/PointerEvent/height\" title=\"height\"><code>height</code></a></dt>\n  <dd>\n    <p>ポインターの接触ジオメトリーの高さ（Y 軸上の大きさ、CSS ピクセル単位）。</p>\n  </dd>\n  <dt id=\"pressure\"><a href=\"/ja/docs/Web/API/PointerEvent/pressure\" title=\"pressure\"><code>pressure</code></a></dt>\n  <dd>\n    <p>0 から 1 までの範囲のポインター入力の正規化された圧力。 ここで、0 と 1 は、それぞれハードウェアが検出できる最小圧力と最大圧力を表します。</p>\n  </dd>\n  <dt id=\"tangentialpressure\"><a href=\"/ja/docs/Web/API/PointerEvent/tangentialPressure\" title=\"tangentialPressure\"><code>tangentialPressure</code></a></dt>\n  <dd>\n    <p>ポインター入力の正規化された接線圧力（バレル圧力またはシリンダー応力（cylinder stress）とも呼ばれます）は -1 から 1 の範囲で、0 はコントロールの中立位置です。</p>\n  </dd>\n  <dt id=\"tiltx\"><a href=\"/ja/docs/Web/API/PointerEvent/tiltX\" title=\"tiltX\"><code>tiltX</code></a></dt>\n  <dd>\n    <p>Y-Z 平面と、ポインター（ペン/スタイラスなど）の軸と Y 軸の両方を含む平面との間の平面角度（度単位で、 <code>-90</code> から <code>90</code> の範囲）。</p>\n  </dd>\n  <dt id=\"tilty\"><a href=\"/ja/docs/Web/API/PointerEvent/tiltY\" title=\"tiltY\"><code>tiltY</code></a></dt>\n  <dd>\n    <p>X-Z 平面と、ポインター（ペン/スタイラスなど）の軸と X 軸の両方を含む平面との間の平面角度（度単位で、 <code>-90</code> から <code>90</code> の範囲）。</p>\n  </dd>\n  <dt id=\"twist\"><a href=\"/ja/docs/Web/API/PointerEvent/twist\" title=\"twist\"><code>twist</code></a></dt>\n  <dd>\n    <p>ポインター（ペン/スタイラスなど）の長軸を中心とした時計回りの回転の角度（<code>0</code> から <code>359</code> の範囲の値）。</p>\n  </dd>\n  <dt id=\"pointertype\"><a href=\"/ja/docs/Web/API/PointerEvent/pointerType\" title=\"pointerType\"><code>pointerType</code></a></dt>\n  <dd>\n    <p>イベントの原因となった機器タイプ（マウス、ペン、タッチなど）を示します。</p>\n  </dd>\n  <dt id=\"isprimary\"><a href=\"/ja/docs/Web/API/PointerEvent/isPrimary\" title=\"isPrimary\"><code>isPrimary</code></a></dt>\n  <dd>\n    <p>ポインターがこのポインタータイプの主ポインターを表すかどうかを示します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"イベント種別とグローバルイベントハンドラー","title":"イベント種別とグローバルイベントハンドラー","isH3":true,"content":"<p>ポインターイベントには 10​ ​のイベント種別があり、そのうち 7 つ（<code>down</code>、<code>up</code>、<code>move</code>、<code>over</code>、<code>out</code>、<code>enter</code>、<code>leave</code>）はマウスイベントと同等の意味を持ちます。</p>\n<p>以下は、各イベント種別とそれに関連する<a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\">グローバルイベントハンドラー</a>の簡単な説明です。</p>\n<table class=\"no-markdown\">\n  <thead>\n    <tr>\n      <th scope=\"col\">イベント</th>\n      <th scope=\"col\">On イベントハンドラー</th>\n      <th scope=\"col\">説明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerover_event\" title=\"pointerover\"><code>pointerover</code></a></td>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerover_event\" title=\"onpointerover\"><code>onpointerover</code></a></td>\n      <td>ポインターが要素の<a href=\"#ヒットテスト\">ヒットテスト</a>境界内に移動したときに発生します。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerenter_event\" title=\"pointerenter\"><code>pointerenter</code></a></td>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerenter_event\" title=\"onpointerenter\"><code>onpointerenter</code></a></td>\n      <td>ポインターが要素またはその子孫の 1 つの<a href=\"#ヒットテスト\">ヒットテスト</a>境界内に移動したときに発生します。 これには、ホバーに対応していない機器からの <code>pointerdown</code> イベントの結果も含まれます（<code>pointerdown</code> を参照）。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a></td>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerdown_event\" title=\"onpointerdown\"><code>onpointerdown</code></a></td>\n      <td>ポインターが<em>アクティブボタン状態</em>になったときに発生します。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a></td>\n      <td><a href=\"/ja/docs/Web/API/Element/pointermove_event\" title=\"onpointermove\"><code>onpointermove</code></a></td>\n      <td>ポインターが座標を変更したときに発生します。 また、ポインターの状態の変化がこれ以外のイベントで報告できない場合もこのイベントが使われます。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a></td>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerup_event\" title=\"onpointerup\"><code>onpointerup</code></a></td>\n      <td>ポインターが<em>アクティブボタン状態</em>でなくなったときに発生します。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a></td>\n      <td><a href=\"/ja/docs/Web/API/Element/pointercancel_event\" title=\"onpointercancel\"><code>onpointercancel</code></a></td>\n      <td>ブラウザーは、ポインターがイベントを生成できなくなったと判断した場合（例えば、関連機器が無効になった場合）、このイベントを発行します。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerout_event\" title=\"pointerout\"><code>pointerout</code></a></td>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerout_event\" title=\"onpointerout\"><code>onpointerout</code></a></td>\n      <td>いくつかの理由で発生します。ポインターが要素の<a href=\"#ヒットテスト\">ヒットテスト</a>境界外に移動した場合、ホバーに対応していない機器で pointerup イベントが発生した場合（pointerup を参照）、 <code>pointercancel</code> イベントの発生後（<code>pointercancel</code> を参照）、ペン/スタイラスがデジタイザーで検出可能なホバー範囲を離脱したときなどです。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerleave_event\" title=\"pointerleave\"><code>pointerleave</code></a></td>\n      <td><a href=\"/ja/docs/Web/API/Element/pointerleave_event\" title=\"onpointerleave\"><code>onpointerleave</code></a></td>\n      <td>ポインターが要素の<a href=\"#ヒットテスト\">ヒットテスト</a>境界外に移動したときに発生します。ペン機器の場合、このイベントは、スタイラスがデジタイザーで検出可能なホバー範囲を離脱したときに発生します。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element/gotpointercapture_event\" title=\"gotpointercapture\"><code>gotpointercapture</code></a></td>\n      <td><a href=\"/ja/docs/Web/API/Element/gotpointercapture_event\" title=\"ongotpointercapture\"><code>ongotpointercapture</code></a></td>\n      <td>要素がポインターキャプチャを受け取ったときに発生します。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element/lostpointercapture_event\" title=\"lostpointercapture\"><code>lostpointercapture</code></a></td>\n      <td><a href=\"/ja/docs/Web/API/Element/lostpointercapture_event\" title=\"onlostpointercapture\"><code>onlostpointercapture</code></a></td>\n      <td>ポインターに対するポインターキャプチャが解放された後に発生します。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"element_の拡張","title":"Element の拡張","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a> インターフェイスには次の 3 つの拡張があります。</p>\n<dl>\n  <dt id=\"setpointercapture\"><a href=\"/ja/docs/Web/API/Element/setPointerCapture\" title=\"setPointerCapture()\"><code>setPointerCapture()</code></a></dt>\n  <dd>\n    <p>このメソッドは、将来のポインターイベントの<em>キャプチャターゲット</em>として特定の要素を指定します。</p>\n  </dd>\n  <dt id=\"releasepointercapture\"><a href=\"/ja/docs/Web/API/Element/releasePointerCapture\" title=\"releasePointerCapture()\"><code>releasePointerCapture()</code></a></dt>\n  <dd>\n    <p>このメソッドは、特定のポインターイベントに対して以前に設定された<em>ポインターキャプチャ</em>を解放（停止）します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"navigator_の拡張","title":"Navigator の拡張","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/Navigator/maxTouchPoints\"><code>Navigator.maxTouchPoints</code></a> プロパティは、任意の時点で対応している同時タッチポイントの最大数を決定するために使用します。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>この節では、ポインターイベントのインターフェイスを使用した基本的な使い方の例を紹介します。</p>"}},{"type":"prose","value":{"id":"イベントハンドラーの登録","title":"イベントハンドラーの登録","isH3":true,"content":"<p>この例では、特定の要素のすべてのイベント種別に対してハンドラーを登録します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">over_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">enter_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">down_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">move_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">up_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">cancel_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">out_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">leave_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">gotcapture_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">lostcapture_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ポインターイベントハンドラーの登録</span>\n      el<span class=\"token punctuation\">.</span>onpointerover <span class=\"token operator\">=</span> over_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointerenter <span class=\"token operator\">=</span> enter_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointerdown <span class=\"token operator\">=</span> down_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointermove <span class=\"token operator\">=</span> move_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointerup <span class=\"token operator\">=</span> up_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointercancel <span class=\"token operator\">=</span> cancel_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointerout <span class=\"token operator\">=</span> out_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointerleave <span class=\"token operator\">=</span> leave_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>gotpointercapture <span class=\"token operator\">=</span> gotcapture_handler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>lostpointercapture <span class=\"token operator\">=</span> lostcapture_handler<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Touch me ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"イベントのプロパティ","title":"イベントのプロパティ","isH3":true,"content":"<p>この例では、ポインターイベントのすべてのプロパティにアクセスする方法を示します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_id</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// イベントの識別子に基づいて、このイベントを処理する</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_mouse</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// マウスポインターイベントを処理する</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_pen</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ペンポインターイベントを処理する</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_touch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// タッチポインターイベントを処理する</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_tilt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tiltX<span class=\"token punctuation\">,</span> tiltY</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 傾斜データハンドラー</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_pressure</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pressure</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 圧力ハンドラー</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">process_non_primary</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 非主ハンドラー</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">down_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// タッチポイントの接触面積を計算する</span>\n      <span class=\"token keyword\">var</span> area <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> ev<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// キャッシュされた id とこのイベントの id を比較し、それに応じて処理する</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> ev<span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">)</span> <span class=\"token function\">process_id</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// 適切なポインタータイプのハンドラーを呼び出す</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>pointerType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"mouse\"</span><span class=\"token operator\">:</span>\n          <span class=\"token function\">process_mouse</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"pen\"</span><span class=\"token operator\">:</span>\n          <span class=\"token function\">process_pen</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">\"touch\"</span><span class=\"token operator\">:</span>\n          <span class=\"token function\">process_touch</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerType \"</span> <span class=\"token operator\">+</span> ev<span class=\"token punctuation\">.</span>pointerType <span class=\"token operator\">+</span> <span class=\"token string\">\" には対応していません\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// 傾斜ハンドラーを呼び出す</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>tiltX <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> ev<span class=\"token punctuation\">.</span>tiltY <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">process_tilt</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>tiltX<span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">.</span>tiltY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// 圧力ハンドラーを呼び出す</span>\n      <span class=\"token function\">process_pressure</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>pressure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// このイベントが主ではない場合は、非主ハンドラーを呼び出す</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ev<span class=\"token punctuation\">.</span>isPrimary<span class=\"token punctuation\">)</span> <span class=\"token function\">process_non_primary</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> el<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// pointerdown ハンドラーの登録</span>\n      el<span class=\"token punctuation\">.</span>onpointerdown <span class=\"token operator\">=</span> down_handler<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Touch me ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"主ポインターの決定","title":"主ポインターの決定","isH3":false,"content":"<p>シナリオによっては、複数のポインター（例えば、タッチ画面とマウスの両方を備えた機器）やポインターが複数の接触点に対応している（例えば、複数の指でのタッチに対応しているタッチ画面）ことがあります。 アプリは、<a href=\"/ja/docs/Web/API/PointerEvent/isPrimary\" title=\"isPrimary\"><code>isPrimary</code></a> プロパティを使用して、各ポインタータイプの<em>アクティブポインター</em>のセットの中からマスターポインターを識別できます。 アプリが主ポインターのみに対応したい場合は、主ではないすべてのポインターイベントを無視することできます。</p>\n<p>マウスの場合、ポインターは 1 つだけなので、常に主ポインターになります。 タッチ入力の場合、他にアクティブなタッチがなかったときにユーザーが画面にタッチした場合、ポインターは主と見なされます。ペンとスタイラスの入力では、他のアクティブなペンが画面に接触していないときにユーザーのペンが最初に画面に接触した場合、ポインターは主と見なされます。</p>"}},{"type":"prose","value":{"id":"ボタンの状態の判断","title":"ボタンの状態の判断","isH3":false,"content":"<p>マウスやペンなどの一部のポインター機器は複数のボタンに対応しており、ボタンの押下で<em>和音を弾く</em>ことができます。 すなわち、ポインター機器上の別のボタンが既に押されている間に、追加のボタンを押すことができます。</p>\n<p>ボタンが押された状態を判断するために、ポインターイベントは（<a href=\"/ja/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a> の継承元の）<a href=\"/ja/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a> インターフェイスの <a href=\"/ja/docs/Web/API/MouseEvent/button\" title=\"button\"><code>button</code></a> プロパティおよび <a href=\"/ja/docs/Web/API/MouseEvent/buttons\" title=\"buttons\"><code>buttons</code></a> プロパティを使用します。</p>\n<p>次の表は、さまざまな機器ボタンの状態に対応する <code>button</code> および <code>buttons</code> の値を示しています。</p>\n<table>\n  <thead>\n    <tr>\n      <th>機器のボタンの状態</th>\n      <th>button</th>\n      <th>buttons</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>最後のイベント以降、ボタンもタッチ/ペンの接触も変化がなかった</td>\n      <td><code>-1</code></td>\n      <td>—</td>\n    </tr>\n    <tr>\n      <td>ボタンを押さずにマウスを動かした、ボタンを押さずにホバー中にペンを動かした</td>\n      <td>—</td>\n      <td><code>0</code></td>\n    </tr>\n    <tr>\n      <td>マウスの左ボタン、タッチ接触、ペン接触</td>\n      <td><code>0</code></td>\n      <td><code>1</code></td>\n    </tr>\n    <tr>\n      <td>マウスの中ボタン</td>\n      <td><code>1</code></td>\n      <td><code>4</code></td>\n    </tr>\n    <tr>\n      <td>マウスの右ボタン、ペンのバレルボタン</td>\n      <td><code>2</code></td>\n      <td><code>2</code></td>\n    </tr>\n    <tr>\n      <td>マウスの X1 （戻る）ボタン</td>\n      <td><code>3</code></td>\n      <td><code>8</code></td>\n    </tr>\n    <tr>\n      <td>マウスの X2 （進む）ボタン</td>\n      <td><code>4</code></td>\n      <td><code>16</code></td>\n    </tr>\n    <tr>\n      <td>ペンの消しゴムボタン</td>\n      <td><code>5</code></td>\n      <td><code>32</code></td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <code>button</code> プロパティは、ボタンの状態の変化を示していることに注意してください。ただし、タッチの場合のように、 1 つのイベントに伴って複数のイベントが発生する場合は、それらはすべて同じ値になります。</p>\n</div>"}},{"type":"prose","value":{"id":"ポインターキャプチャ_2","title":"ポインターキャプチャ","isH3":false,"content":"<p>ポインターキャプチャは、特定の<a href=\"/ja/docs/Web/API/PointerEvent\" title=\"ポインターイベント\">ポインターイベント</a>に対するイベントを、ポインターの位置で通常の<a href=\"#%E3%83%92%E3%83%83%E3%83%88%E3%83%86%E3%82%B9%E3%83%88\">ヒットテスト</a>を行う代わりに、特定の要素に再ターゲットすることを可能にします。これは、ポインターデバイスの接点が要素から（スクロールなどで）移動しても、要素がポインターイベントを受信し続けることを保証するために使用できます。</p>\n<p>次の例では、要素にポインターキャプチャを設定しています。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">function</span> <span class=\"token function\">downHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 要素 'target' はそれ以上のイベントを受信/キャプチャします</span>\n    el<span class=\"token punctuation\">.</span><span class=\"token function\">setPointerCapture</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    el<span class=\"token punctuation\">.</span>onpointerdown <span class=\"token operator\">=</span> downHandler<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Touch me ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>次の例は、（<a href=\"/ja/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a> イベントが発生したときに）ポインターキャプチャを解放しています。 <a href=\"/ja/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> イベントや <a href=\"/ja/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a> イベントが発生すると、ブラウザーはこれを自動的に行います。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">downHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 要素 \"target\" はそれ以上のイベントを受信/キャプチャします</span>\n      el<span class=\"token punctuation\">.</span><span class=\"token function\">setPointerCapture</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">cancelHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// ポインターキャプチャを解放する</span>\n      el<span class=\"token punctuation\">.</span><span class=\"token function\">releasePointerCapture</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// pointerdown と pointercancel のハンドラーの登録</span>\n      el<span class=\"token punctuation\">.</span>onpointerdown <span class=\"token operator\">=</span> downHandler<span class=\"token punctuation\">;</span>\n      el<span class=\"token punctuation\">.</span>onpointercancel <span class=\"token operator\">=</span> cancelHandler<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> Touch me ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"touch-action_プロパティ","title":"touch-action プロパティ","isH3":false,"content":"<p>CSS の <a href=\"/ja/docs/Web/CSS/touch-action\"><code>touch-action</code></a> プロパティは、ブラウザーが既定の（*ネイティブの）タッチの振る舞い（ズームやパンなど）を領域に適用するかどうかを指定するために使用します。 このプロパティは、置換されていないインライン要素、テーブル行、行グループ、テーブル列、および列グループを除くすべての要素に適用できます。</p>\n<p><code>auto</code> の値は、ブラウザーがその既定のタッチの振る舞いを（指定された領域に）自由に適用できることを意味し、<code>none</code> の値はブラウザーのその領域に対する既定のタッチの振る舞いを無効にします。 値 <code>pan-x</code> および <code>pan-y</code> は、指定された領域で始まるタッチがそれぞれ水平スクロールおよび垂直スクロール専用であることを意味します。 値 <code>manipulation</code> は、ブラウザーがその要素から始まるタッチをスクロールとズームのみを考慮していることを意味します。</p>\n<p>次の例では、ブラウザーの既定のタッチの振る舞いは <code>div</code> 要素に対して無効になります。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">touch-action</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Can't touch this ... <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>次の例では、一部の <code>button</code> 要素では既定のタッチの振る舞いが無効になります。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">button#tiny</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">touch-action</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>次の例では、<code>target</code> 要素にタッチすると、水平方向にのみパンします。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">#target</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">touch-action</span><span class=\"token punctuation\">:</span> pan-x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"マウスイベントとの互換性","title":"マウスイベントとの互換性","isH3":false,"content":"<p>ポインターイベントのインターフェイスを使用すると、アプリはポインター対応機器で高度なユーザーエクスペリエンスを作成できますが、現実での今日のウェブコンテンツの大部分はマウス入力でのみ機能するように設計されています。 その結果、ブラウザーがポインターイベントをサポートしていても、マウスのみの入力が直接変更せずにそのまま機能することを前提として、ブラウザーはマウスイベントを処理する必要があります。 理想的には、ポインター対応アプリはマウス入力を明示的に処理する必要はありません。 ただし、ブラウザーはマウスイベントを処理する必要があるため、対処する必要がある互換性の問題がいくつかあるかもしれません。 この節では、ポインターイベントとマウスイベントの相互作用、およびアプリ開発者への影響について説明します。</p>\n<p>ブラウザーは、<em>マウスベースのコンテンツとの互換性のために、汎用ポインター入力をマウスイベントにマッピングすることができます</em>。 このイベントのマッピングは、<em>互換性マウスイベント</em>と呼ばれます。 作成者は <code>pointerdown</code> イベントをキャンセルすることで特定の互換性マウスイベントの生成を防ぐことができますが、次の点に注意してください。</p>\n<ul>\n  <li>マウスイベントは、ポインターがダウンしているときにのみ防ぐことができます。</li>\n  <li>ホバーしているポインター（例えばボタンが押されていないマウス）は、それらのマウスイベントを防ぐことができません。</li>\n  <li><code>mouseover</code>、<code>mouseout</code>、<code>mouseenter</code>、<code>mouseleave</code> の各イベントが防止されることはありません（ポインターがダウンしている場合でも）。</li>\n</ul>"}},{"type":"prose","value":{"id":"ベストプラクティス","title":"ベストプラクティス","isH3":false,"content":"<p>ポインターイベントを使用する際に考慮すべき、いくつかの<em>ベストプラクティス</em>は次のとおりです。</p>\n<ul>\n  <li>イベントハンドラーで行われる作業量を最小限に抑えます。</li>\n  <li>イベントハンドラーを特定のターゲット要素に追加します（ドキュメント全体またはドキュメントツリーの上位のノードではなく）。</li>\n  <li>ターゲット要素（ノード）は、（通常は指で触れた）最大接触表面積を収容するのに十分な大きさであるべきです。 ターゲット領域が小さすぎる場合、それに触れると隣接する要素に対して他のイベントが発生する可能性があります。</li>\n</ul>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/pointerevents/\" class=\"external\" rel=\" noopener\">Pointer Events</a></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.PointerEvent","dataURL":"/ja/docs/Web/API/Pointer_events/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/CSS/touch-action\"><code>css touch-action</code></a> プロパティにいくつかの新しい値が <a href=\"https://w3c.github.io/pointerevents/\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"Pointer Events – Level 3の仕様書\" rel=\" noopener\">Pointer Events – Level 3</a> 仕様の一部として定義されていますが、現在それらの新しい値は実装のサポートが限定されています。</p>"}},{"type":"prose","value":{"id":"デモと例","title":"デモと例","isH3":false,"content":"<ul>\n  <li><a href=\"http://patrickhlauke.github.io/touch/\" class=\"external\" rel=\" noopener\">タッチ/ポインターのテストとデモ</a>（Patrick H. Lauke 著、英語）</li>\n</ul>"}},{"type":"prose","value":{"id":"コミュニティ","title":"コミュニティ","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/w3c/pointerevents\" class=\"external\" rel=\" noopener\">ポインターイベントのワーキンググループ</a>（英語）</li>\n  <li><a href=\"https://lists.w3.org/Archives/Public/public-pointer-events/\" class=\"external\" rel=\" noopener\">メールリスト</a>（英語）</li>\n  <li><a href=\"irc://irc.w3.org:6667/\">W3C の #pointerevents IRC チャンネル</a>（英語）</li>\n</ul>"}},{"type":"prose","value":{"id":"関連トピックとリソース","title":"関連トピックとリソース","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.w3.org/TR/touch-events/\" class=\"external\" rel=\" noopener\">タッチイベント標準</a>（英語）</li>\n</ul>"}}],"toc":[{"text":"用語","id":"用語"},{"text":"インターフェイス","id":"インターフェイス"},{"text":"例","id":"例"},{"text":"主ポインターの決定","id":"主ポインターの決定"},{"text":"ボタンの状態の判断","id":"ボタンの状態の判断"},{"text":"ポインターキャプチャ","id":"ポインターキャプチャ_2"},{"text":"touch-action プロパティ","id":"touch-action_プロパティ"},{"text":"マウスイベントとの互換性","id":"マウスイベントとの互換性"},{"text":"ベストプラクティス","id":"ベストプラクティス"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"デモと例","id":"デモと例"},{"text":"コミュニティ","id":"コミュニティ"},{"text":"関連トピックとリソース","id":"関連トピックとリソース"}],"summary":"今日のウェブコンテンツの多くは、ユーザーのポインティング機器がマウスであることを前提としています。しかし、多くの端末がペンやスタイラス、タッチ面のような他の種類のポインティング入力機器に対応しているので、既存のポインティング機器のイベントモデルへの拡張が必要であり、そしてポインターイベントはその必要性に応じます。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Pointer events","locale":"en-US","native":"English (US)"},{"title":"Événements de pointeur","locale":"fr","native":"Français"},{"title":"События указателя","locale":"ru","native":"Русский"},{"title":"Pointer events 指针事件","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/pointer_events","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/pointer_events/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Pointer_events","title":"ポインターイベント"}],"pageTitle":"ポインターイベント - Web API | MDN","noIndexing":false}}