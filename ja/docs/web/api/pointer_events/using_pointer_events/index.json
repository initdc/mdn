{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ポインターイベントの使用","mdn_url":"/ja/docs/Web/API/Pointer_events/Using_Pointer_Events","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Pointer_events\">Pointer events</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/Pointer_events/Using_Pointer_Events\">Using Pointer Events</a></li><li><a href=\"/ja/docs/Web/API/Pointer_events/Multi-touch_interaction\">Multi-touch interaction</a></li><li><a href=\"/ja/docs/Web/API/Pointer_events/Pinch_zoom_gestures\">Pinch zoom gestures</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Navigator/maxTouchPoints\"><code>Navigator.maxTouchPoints</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Element/setPointerCapture\"><code>Element.setPointerCapture()</code></a></li><li><a href=\"/ja/docs/Web/API/Element/releasePointerCapture\"><code>Element.releasePointerCapture()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/HTMLElement/gotpointercapture_event\"><code>HTMLElement</code>: <code>gotpointercapture</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/lostpointercapture_event\"><code>HTMLElement</code>: <code>lostpointercapture</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointercancel_event\"><code>HTMLElement</code>: <code>pointercancel</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerdown_event\"><code>HTMLElement</code>: <code>pointerdown</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerenter_event\"><code>HTMLElement</code>: <code>pointerenter</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerleave_event\"><code>HTMLElement</code>: <code>pointerleave</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointermove_event\"><code>HTMLElement</code>: <code>pointermove</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerout_event\"><code>HTMLElement</code>: <code>pointerout</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerover_event\"><code>HTMLElement</code>: <code>pointerover</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement/pointerup_event\"><code>HTMLElement</code>: <code>pointerup</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>このガイドでは、<a href=\"/ja/docs/Web/API/Pointer_events\">ポインターイベント</a>と HTML の <a href=\"/ja/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 要素を使用してマルチタッチ対応の描画アプリを作成する方法について説明します。この例は、<a href=\"/ja/docs/Web/API/PointerEvent\" title=\"ポインターイベント\">ポインターイベント</a>の入力イベントモデルを使用する点を除いて、<a href=\"/ja/docs/Web/API/Touch_events\">タッチイベントの概要</a>の例に基づいています。 もう 1 つの違いは、ポインターイベントはポインターデバイスに依存しないため、アプリは同じコードを使用してマウス、ペン、または指先からの座標ベースの入力を受け入れることです。</p>\n<p>このアプリは、ポインターイベントに対応しているブラウザーでのみ動作します。</p>\n<p>このアプリのライブ版は <a href=\"https://mdn.github.io/dom-examples/pointerevents/Using_Pointer_Events.html\" class=\"external\" rel=\" noopener\">GitHub</a> で利用できます。 <a href=\"https://github.com/mdn/dom-examples/blob/master/pointerevents/Using_Pointer_Events.html\" class=\"external\" rel=\" noopener\">ソースコードは Github で入手でき</a>、プルリクエストやバグレポートは大歓迎です。</p>"}},{"type":"prose","value":{"id":"定義","title":"定義","isH3":false,"content":"<dl>\n  <dt id=\"表面\">表面</dt>\n  <dd>\n    <p>タッチを感知できる表面。 これは、トラックパッド、タッチ画面、あるいは物理的な画面とユーザーの机の表面（またはマウスパッド）の仮想的なマッピングかもしれません。</p>\n  </dd>\n  <dt id=\"タッチ点\">タッチ点</dt>\n  <dd>\n    <p>表面との接点。 これは、指（または肘、耳、鼻など何でも、しかし通常は指）、スタイラス、マウス、または表面上の単一の点を指定するための他の任意の方法かもしれません。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 以下のテキストでは、表面との接触を説明するときに「指」という用語を使用していますが、もちろんスタイラス、マウス、その他の場所を指す方法でもかまいません。</p>\n</div>"}},{"type":"prose","value":{"id":"キャンバスの作成","title":"キャンバスの作成","isH3":true,"content":"<p>ブラウザーが既定のタッチの振る舞いをアプリに適用しないようにするには、<a href=\"/ja/docs/Web/CSS/touch-action\"><code>touch-action</code></a> プロパティを <code>none</code> に設定します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span>solid black 1px<span class=\"token punctuation\">;</span> <span class=\"token property\">touch-action</span><span class=\"token punctuation\">:</span>none</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  お使いのブラウザーは canvas 要素に対応していません。\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">startup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Initialize<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\nLog: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #ccc<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"イベントハンドラーの設定","title":"イベントハンドラーの設定","isH3":true,"content":"<p>ページが読み込まれると、以下に示す <code>startup()</code> 関数が <a href=\"/ja/docs/Web/HTML/Element/body\"><code>&lt;body&gt;</code></a> 要素の <code>onload</code> 属性によって呼び出されます（ただし、MDN ライブサンプルシステムの制限により、この例ではボタンを使用して起動します）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">startup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerdown\"</span><span class=\"token punctuation\">,</span> handleStart<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerup\"</span><span class=\"token punctuation\">,</span> handleEnd<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointercancel\"</span><span class=\"token punctuation\">,</span> handleCancel<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointermove\"</span><span class=\"token punctuation\">,</span> handleMove<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"初期化されました。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これは単に <a href=\"/ja/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 要素のすべてのイベントリスナーを設定するので、タッチイベントが発生したときに処理できます。</p>"}},{"type":"prose","value":{"id":"新しいタッチの追跡","title":"新しいタッチの追跡","isH3":true,"content":"<p>進行中のタッチを追跡します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> ongoingTouches <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"/ja/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a> イベントが発生すると、表面上で新しいタッチが発生したことを示し、次の <code>handleStart()</code> 関数が呼び出されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleStart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerdown.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerdown: id = \"</span> <span class=\"token operator\">+</span> evt<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">copyTouch</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// a circle at the start</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// a circle at the start</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>イベントの処理の一部を後で処理するために <code>ongoingTouches</code> に格納した後、開始点を小さな円として描画します。 4 ピクセル幅の線を使用しているので、 4 ピクセルの半径の円が見栄えよく表示されます。</p>\n<h4 id=\"ポインターの動きに合わせて描画\">ポインターの動きに合わせて描画</h4>\n<p>1つ以上のポインターが移動するたびに、 <a href=\"/ja/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a> イベントが配信され、その結果、次の <code>handleMove()</code> 関数が呼び出されます。 この例におけるその役割は、キャッシュされたタッチ情報を更新し、各タッチの前の位置から現在の位置まで線を引くことです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"continuing touch: idx =  \"</span> <span class=\"token operator\">+</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ctx.moveTo(\"</span> <span class=\"token operator\">+</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY <span class=\"token operator\">+</span> <span class=\"token string\">\");\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ctx.lineTo(\"</span> <span class=\"token operator\">+</span> evt<span class=\"token punctuation\">.</span>clientX <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> evt<span class=\"token punctuation\">.</span>clientY <span class=\"token operator\">+</span> <span class=\"token string\">\");\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">copyTouch</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// swap in the new touch record</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"can't figure out which touch to continue: idx = \"</span> <span class=\"token operator\">+</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この関数はキャッシュされたタッチ情報配列で各タッチに関する以前の情報を探して、描画する各タッチの新しい線分の開始点を決定します。 これは各タッチの <a href=\"/ja/docs/Web/API/PointerEvent/pointerId\"><code>PointerEvent.pointerId</code></a> プロパティを見ることによって行われます。 このプロパティは、各ポインターイベントに対して一意の整数であり、各指が表面と接触している間、各イベントに対して一貫性を保ちます。</p>\n<p>これにより、各タッチの前の位置の座標を取得し、適切なコンテキストメソッドを使用して 2 つの位置を結ぶ線分を描画できます。</p>\n<p>線を描画した後、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.splice()</code></a> を呼び出して、<code>ongoingTouches</code> 配列内のタッチ点に関する以前の情報を現在の情報に置き換えます。</p>"}},{"type":"prose","value":{"id":"タッチの終わりの処理","title":"タッチの終わりの処理","isH3":true,"content":"<p>ユーザーが表面から指を離すと、 <a href=\"/ja/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> イベントが送信されます。 次の <code>handleEnd()</code> 関数を呼び出すことによってこのイベントを処理します。 その仕事は終わったタッチのための最後の線分を引き、進行中のタッチリストからタッチ点を取り除くことです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleEnd</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerup\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>clientX <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>clientY <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// and a square at the end</span>\n    ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// remove it; we're done</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"can't figure out which touch to end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これは前の関数と非常によく似ています。 唯一の大きな違いは、終わりを示すために小さな正方形を描くことと、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.splice()</code></a> を呼び出すときに、更新された情報を追加せずに、進行中のタッチリストから古い項目を削除することです。 その結果、そのタッチ点の追跡をやめます。</p>\n<h4 id=\"キャンセルされたタッチの処理\">キャンセルされたタッチの処理</h4>\n<p>ユーザーの指がブラウザーの UI にぶつかったり、あるいはタッチをキャンセルする必要がある場合は、 <a href=\"/ja/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a> イベントが送信され、次の <code>handleCancel()</code> 関数を呼び出します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleCancel</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointercancel: id = \"</span> <span class=\"token operator\">+</span> evt<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// remove it; we're done</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>タッチを即座に中止するため、最後の線分を描かずに進行中のタッチリストから削除しています。</p>"}},{"type":"prose","value":{"id":"便利な関数","title":"便利な関数","isH3":true,"content":"<p>この例では、コードの残りの部分をより明確にするために簡単に説明する必要がある、いくつかの便利な関数を使用しています。</p>\n<h4 id=\"タッチごとの色の選択\">タッチごとの色の選択</h4>\n<p>各タッチの描画を異なるように見せるために、 <code>colorForTouch()</code> 関数を使用して、タッチの一意の識別子に基づいて色を選びます。 この識別子は不透明な数字ですが、少なくとも現在アクティブなタッチ間で異なることを頼れます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">touch</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> touch<span class=\"token punctuation\">.</span>pointerId <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>pointerId <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>pointerId <span class=\"token operator\">/</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n  r <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// make it a hex digit</span>\n  g <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// make it a hex digit</span>\n  b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// make it a hex digit</span>\n  <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"#\"</span> <span class=\"token operator\">+</span> r <span class=\"token operator\">+</span> g <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color for touch with identifier \"</span> <span class=\"token operator\">+</span> touch<span class=\"token punctuation\">.</span>pointerId <span class=\"token operator\">+</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">+</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この関数の結果は、描画色を設定するために <a href=\"/ja/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> の関数を呼び出すときに使用できる文字列です。 例えば、<a href=\"/ja/docs/Web/API/PointerEvent/pointerId\"><code>PointerEvent.pointerId</code></a> の値が <code>10</code> の場合、結果の文字列は <code>\"#aaa\"</code> です。</p>\n<h4 id=\"タッチオブジェクトのコピー\">タッチオブジェクトのコピー</h4>\n<p>ブラウザーによっては、イベント間でタッチオブジェクトを再利用することがあるので、オブジェクト全体を参照するのではなく、気になる部分をコピーするのが最善です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">copyTouch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">touch</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">identifier</span><span class=\"token operator\">:</span> touch<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">pageX</span><span class=\"token operator\">:</span> touch<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">pageY</span><span class=\"token operator\">:</span> touch<span class=\"token punctuation\">.</span>clientY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"進行中のタッチの検索\">進行中のタッチの検索</h4>\n<p>次の <code>ongoingTouchIndexById()</code> 関数は、<code>ongoingTouches</code> 配列をスキャンして、指定された識別子と一致するタッチを見つけ、そのタッチの配列におけるインデックスを返します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">idToFind</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> ongoingTouches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> ongoingTouches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> idToFind<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// not found</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"何が起こっているのかを示す\">何が起こっているのかを示す</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  p<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table class=\"no-markdown\">\n  <tbody>\n    <tr>\n      <th scope=\"col\">仕様書</th>\n      <th scope=\"col\">状態</th>\n      <th scope=\"col\">備考</th>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.w3.org/TR/pointerevents2/#pointerevent-interface\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Pointer Events – Level 2<br><small lang=\"ja\">PointerEvent の定義</small></a></td>\n      <td><span class=\"spec-rec\">勧告</span></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.w3.org/TR/pointerevents1/#pointerevent-interface\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Pointer Events<br><small lang=\"ja\">PointerEvent の定義</small></a></td>\n      <td><span class=\"spec-obsolete\">廃止</span></td>\n      <td>初回定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"ブラウザーの互換性","title":"ブラウザーの互換性","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"PointerEvent インターフェイス","id":"pointerevent_インターフェイス","isH3":false,"query":"api.PointerEvent","dataURL":"/ja/docs/Web/API/Pointer_events/Using_Pointer_Events/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Pointer_events\">ポインターイベント</a></li>\n  <li><a href=\"/ja/docs/Web/API/Touch_events\">タッチイベント</a></li>\n</ul>"}}],"toc":[{"text":"定義","id":"定義"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"PointerEvent インターフェイス","id":"pointerevent_インターフェイス"},{"text":"関連情報","id":"関連情報"}],"summary":"このガイドでは、ポインターイベントと HTML の <canvas> 要素を使用してマルチタッチ対応の描画アプリを作成する方法について説明します。この例は、ポインターイベントの入力イベントモデルを使用する点を除いて、タッチイベントの概要の例に基づいています。 もう 1 つの違いは、ポインターイベントはポインターデバイスに依存しないため、アプリは同じコードを使用してマウス、ペン、または指先からの座標ベースの入力を受け入れることです。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using Pointer Events","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/pointer_events/using_pointer_events","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/pointer_events/using_pointer_events/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Pointer_events","title":"ポインターイベント"},{"uri":"/ja/docs/Web/API/Pointer_events/Using_Pointer_Events","title":"ポインターイベントの使用"}],"pageTitle":"ポインターイベントの使用 - Web API | MDN","noIndexing":false}}