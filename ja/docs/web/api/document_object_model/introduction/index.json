{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"DOM の紹介","mdn_url":"/ja/docs/Web/API/Document_Object_Model/Introduction","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/Document_Object_Model/Introduction\">Introduction to the DOM</a></li><li><a href=\"/ja/docs/Web/API/Document_object_model/Using_the_W3C_DOM_Level_1_Core\">Using the W3C DOM Level 1 Core</a></li><li><a href=\"/ja/docs/Web/API/Document_Object_Model/Traversing_an_HTML_table_with_JavaScript_and_DOM_Interfaces\">Traversing an HTML table with JavaScript and DOM Interfaces</a></li><li><a href=\"/ja/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors\">Locating DOM elements using selectors</a></li><li><a href=\"/ja/docs/Web/API/Document_object_model/How_to_create_a_DOM_tree\">How to create a DOM tree</a></li><li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li><li><a href=\"/ja/docs/Web/API/Document_Object_Model/Whitespace\">How whitespace is handled by HTML, CSS, and in the DOM</a></li><li><a href=\"/ja/docs/Web/API/Document_Object_Model/Examples\">Examples of web and XML development using the DOM</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/ja/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/ja/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a href=\"/ja/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/ja/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/ja/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/ja/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/ja/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/ja/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/ja/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/ja/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/ja/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/ja/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/ja/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/ja/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/ja/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/ja/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/ja/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/ja/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/ja/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/ja/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/ja/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/ja/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/ja/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/ja/docs/Web/API/Range\"><code>Range</code></a></li><li><a href=\"/ja/docs/Web/API/StaticRange\"><code>StaticRange</code></a></li><li><a href=\"/ja/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/ja/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/ja/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/ja/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/ja/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>ドキュメントオブジェクトモデル</strong> (Document Object Model, <em>DOM</em>) は、ウェブ上の文書のコンテンツと構造からなるオブジェクトのデータ表現です。このガイドでは、簡単に DOM を紹介します。 DOM がどのようにメモリー内で <a href=\"/ja/docs/Glossary/HTML\">HTML</a> 文書を表現するか、どのように API を使用してウェブコンテンツやアプリケーションを作成するのかを見てみます。</p>"}},{"type":"prose","value":{"id":"dom_とは","title":"DOM とは","isH3":false,"content":"<p>ドキュメントオブジェクトモデル (DOM) はウェブ文書のためのプログラミングインターフェイスです。ページを表現するため、プログラムが文書構造、スタイル、内容を変更することができます。 DOM は文書をノードとオブジェクトで表現します。そうやって、プログラミング言語をページに接続することができます。</p>\n<p>ウェブページは、ブラウザーのウィンドウに表示したり、 HTML ソースとして表示したりすることが可能な文書です。どちらの場合も同じ文書であり、ドキュメントオブジェクトモデル (DOM) で操作することができます。 DOM はウェブページの完全なオブジェクト指向の表現で、 JavaScript のようなスクリプト言語から変更することができます。</p>\n<p>例えば、 DOM はこのコードスニペット内にある <code>querySelectorAll</code> メソッドが、文書内にあるすべての <a href=\"/ja/docs/Web/HTML/Element/p\"><code>&lt;p&gt;</code></a> 要素のリストを返さなければならないと定義しています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> paragraphs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// paragraphs[0] は最初の &lt;p&gt; 要素</span>\n<span class=\"token comment\">// paragraphs[1] は 2 番目の &lt;p&gt; 要素、など</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>paragraphs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>ウェブページを操作したり、作成したりするために用意されているすべてのプロパティ、メソッド、イベントは、オブジェクトにまとめられています。例えば、文書自身を表現する <code>document</code> オブジェクトや、 HTML のテーブルにアクセスするための特別な <a href=\"/ja/docs/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a> DOM インターフェイスを実装した <code>table</code> オブジェクト、などがあります。</p>\n<p>\n  現在の DOM は協調して動作する複数 API によって構築されています。\n  コア <a href=\"/ja/docs/Web/API/Document_Object_Model\">DOM</a> は、文書やその中のオブジェクトを基礎的に記述するオブジェクトを定義しています。\n  これは必要に応じて DOM に新しい機能や能力を追加する他の API によって拡張されます。\n  例えば、 <a href=\"/en-US/docs/Web/API/HTML_DOM_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">HTML DOM API (en-US)</a> はコア DOM に HTML 文書の表現の対応を、 SVG API は SVG 文書の表現の対応を追加しています。\n</p>"}},{"type":"prose","value":{"id":"dom_と_javascript","title":"DOM と JavaScript","isH3":false,"content":"<p>ほぼすべての例と同様に、上の短い例は <a href=\"/ja/docs/Glossary/JavaScript\">JavaScript</a> です。つまり、 JavaScript で<em>書かれて</em>いますが、しかし DOM を<em>使用</em>してウェブページとその要素にアクセスしています。 DOM はプログラミング言語ではありませんが、これがないと、 JavaScript 言語はウェブページ、 HTML 文書、 SVG 文書、およびその構成部品のモデルや記法を持っていません。文書内のすべての要素 — 全体としての文書、 head、文書内の表、表の見出し、表のセル内のテキスト — は、その文書のドキュメントオブジェクトモデルの一部ですので、 DOM と JavaScript のようなスクリプト言語を通してそれらすべてにアクセスし、操作することができます。</p>\n<p>\n  DOM は JavaScript 言語の一部ではなく、ウェブサイトを構築するために使用される Web API の 1 つです。\n  JavaScript は他のコンテキストで使われることもあります。\n  例えば、 Node.js はコンピュータ上で JavaScript プログラムを実行しますが、異なる API のセットを提供しており、 DOM API は Node.js ランタイムのコア部分にはなりません。\n</p>\n<p>\n  DOM は、特定のプログラミング言語から独立し、文書の構造表現を単一の一貫した API から利用できるように設計されています。\n  ほとんどのウェブ開発者が JavaScript でしか DOM を使用しないとしても、この Python の例が示すように、 DOM の実装はどの言語でも構築することができます。\n</p>\n<div class=\"code-example\"><pre class=\"brush: python notranslate\"><code><span class=\"token comment\"># Python DOM example</span>\n<span class=\"token keyword\">import</span> xml<span class=\"token punctuation\">.</span>dom<span class=\"token punctuation\">.</span>minidom <span class=\"token keyword\">as</span> m\ndoc <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">(</span><span class=\"token string\">r\"C:\\Projects\\Py\\chap1.xml\"</span><span class=\"token punctuation\">)</span>\ndoc<span class=\"token punctuation\">.</span>nodeName <span class=\"token comment\"># DOM property of document object</span>\np_list <span class=\"token operator\">=</span> doc<span class=\"token punctuation\">.</span>getElementsByTagName<span class=\"token punctuation\">(</span><span class=\"token string\">\"para\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>ウェブで JavaScript を書くためにどのような技術が使われるのかについての詳細は、 <a href=\"/ja/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript 技術概要</a>をご覧ください。</p>"}},{"type":"prose","value":{"id":"dom_へのアクセス","title":"DOM へのアクセス","isH3":false,"content":"<p>\n  DOM を使い始めるのに、特別なものは必要ありません。\n  ブラウザーで実行されるプログラムである<em>スクリプト</em>と呼ばれるものの中から、 JavaScript で直接 API を使用するのです。\n</p>\n<p>スクリプトを作成すると、インラインの <code>&lt;script&gt;</code> 要素であろうと、ウェブページに含まれていようと、すぐに <a href=\"/ja/docs/Web/API/Document\"><code>document</code></a> や <a href=\"/ja/docs/Web/API/Window\" title=\"window\"><code>window</code></a> オブジェクトの API を使って、文書自体やウェブページ内の様々な要素（文書の子孫要素）を操作し始めることができるようになるのです。 DOM プログラミングは、次の例のように、 <a href=\"/ja/docs/Web/API/console/log\"><code>console.log()</code></a> 関数を使ってコンソールにメッセージを表示させるような簡単なものであってもかまいません。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ホームページへようこそ!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>一般に、ページの構造（HTML で記述）と DOM の操作（JavaScript で記述）を混在させることは推奨されないため、ここでは JavaScript 部分をまとめ、 HTML とは切り離して記述することにします。</p>\n<p>例えば、次の関数は、新しい <a href=\"/ja/docs/Web/HTML/Element/Heading_Elements\"><code>&lt;h1&gt;</code></a> 要素を生成し、その要素にテキストを追加し、文書ツリーに追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n       <span class=\"token comment\">// この関数は文書が読み込まれた時に実行される</span>\n       window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n         <span class=\"token comment\">// create a couple of elements in an otherwise empty HTML page</span>\n         <span class=\"token keyword\">const</span> heading <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">const</span> heading_text <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Big Head!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         heading<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>heading_text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>heading<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"基本的なデータ型","title":"基本的なデータ型","isH3":false,"content":"<p>このページでは、様々なオブジェクトと型をなるべく簡単な方法で説明します。しかし、API に渡される、注意しなければならないデータ型はたくさんあります。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> DOM を使用するコードの大部分は HTML 文書の操作を中心としているため、DOM 内のノードを<strong>要素</strong>と呼ぶのが一般的ですが、厳密にはすべてのノードが要素というわけではありません。</p>\n</div>\n<p>以下の表はこれらのデータの種類を簡単に説明しています。</p>\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th>データ型 (インターフェイス)</th>\n      <th>説明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a></td>\n      <td>メンバーが <code>document</code> 型のオブジェクトを返すときは（例えば、要素の <code>ownerDocument</code> 属性はそれが属する <code>document</code> を返します）、このオブジェクトはルートの <code>document</code> 要素自身になります。 <a href=\"/ja/docs/Web/API/Document\">DOM <code>document</code> リファレンス</a>の章では <code>document</code> オブジェクトを説明しています。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Node\"><code>Node</code></a></td>\n      <td>文書内にあるすべてのオブジェクトは何らかの種類のノードです。 HTML 文書では、オブジェクトは要素ノードだけでなく、テキストノードや属性ノードもあります。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a></td>\n      <td>\n        <code>element</code> 型は <code>node</code> に基づいています。これは要素、すなわち DOM API のメンバーから返される <code>element</code> 型のノードを表します。例えば <a href=\"/ja/docs/Web/API/Document/createElement\"><code>document.createElement()</code></a> メソッドは <code>node</code> へのオブジェクト参照を返すというより、このメソッドは単に DOM によって生成された <code>element</code> を返すと言えます。\n        <code>element</code> オブジェクトは DOM の <code>Element</code> インターフェイスと、もっと基本的な <code>Node</code> インターフェイスも実装しており、両方がこの参照に含まれます。 HTML 文書では、要素はさらに HTML DOM API の <a href=\"/ja/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a> インターフェイスや、特定の種類の要素における能力を記述するためのその他のインターフェイス（例えば <a href=\"/ja/docs/Web/HTML/Element/table\"><code>&lt;table&gt;</code></a> 要素における <a href=\"/ja/docs/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a>）によって更に拡張されています。\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/NodeList\"><code>NodeList</code></a></td>\n      <td><code>nodeList</code> は要素の配列で、例えば <a href=\"/ja/docs/Web/API/Document/querySelectorAll\"><code>document.querySelectorAll()</code></a> で返されるものなどです。 <code>nodeList</code> の中の項目は、添字を使って以下の 2 通りの方法で取得できます。\n        <ul>\n          <li>list.item(1)</li>\n          <li>list[1]</li>\n        </ul>この二つの方法は等価です。最初の方法では、 <code>item()</code> は <code>nodeList</code> オブジェクトの一つの関数です。後者の方は、一般的な配列の構文を使い、リスト中の二つ目の項目を取得しています。\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/Attr\"><code>Attr</code></a></td>\n      <td><code>attribute</code> が（<code>createAttribute()</code> メソッドなどの）メンバーから返されたとき、属性のための特別な（ただし、小さな）インターフェイスを実装したオブジェクトの参照です。属性は要素のような DOM のノードですが、さほど使われません。</td>\n    </tr>\n    <tr>\n      <td><a href=\"/ja/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></td>\n      <td><code>namedNodeMap</code> は配列のようですが、名前または添字によって項目にアクセスできますが、後者は項目がリスト中に特定の順番で並んでいる訳ではないので、列挙するのに便利であるだけです。このために <code>namedNodeMap</code> には <code>item()</code> メソッドがあり、 <code>namedNodeMap</code> に項目を追加したり、削除したりすることができます。</td>\n    </tr>\n  </tbody>\n</table>\n<p>注意すべき用語の使い方がいくつかあります。例えば、ある <a href=\"/ja/docs/Web/API/Attr\"><code>Attr</code></a> ノードを参照するのに単に <code>attribute</code> と呼んだり、 DOM ノードの配列を参照するのに <code>nodeList</code> と呼んだりします。このような用語は文書を通して紹介され使用されているのが分かるでしょう。</p>"}},{"type":"prose","value":{"id":"dom_インタフェース","title":"DOM インタフェース","isH3":false,"content":"<p>このガイドは、 DOM 階層構造を操作するために利用できるオブジェクトと、実際の<em>もの</em>について触れます。どのように動作するかを理解する上で、混乱を催すかもしれない点がたくさんあります。例えば、 HTML の <code>form</code> 要素を表すオブジェクトには、 <code>name</code> プロパティが <code>HTMLFormElement</code> インターフェイスにある一方、 <code>className</code> プロパティが <code>HTMLElement</code> インターフェイスにあります。どちらにしても、求めるプロパティはその form オブジェクトの中にあります。</p>\n<p>しかし、 DOM で実装されているオブジェクトとインターフェイスの関係は複雑なので、この節では、 DOM の仕様での実際のインターフェイスとそれがどのように利用できるかについて少し説明しようと思います。</p>"}},{"type":"prose","value":{"id":"インターフェイスとオブジェクト","title":"インターフェイスとオブジェクト","isH3":true,"content":"<p>多くのオブジェクトは複数のインターフェイスを受けついでいます。例えば、 table オブジェクトでは、特別な <a href=\"/ja/docs/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a> インターフェイスを実装しており、そのインターフェイスは <code>createCaption</code> や <code>insertRow</code> などのメソッドを含んでいます。しかし、 <code>table</code> は HTML の要素でもあるので、 DOM の <a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a> リファレンスの章で説明している <code>Element</code> インターフェイスも実装しています。さらには、 HTML の要素は、 DOM を考慮する限り、ウェブページや XML ページのオブジェクトモデルを作りあげるノードのツリー内にあるノードもであるので、 table オブジェクトはより基本的な <code>Node</code> インターフェイスを、 <code>Element</code> から継承して実装しています。</p>\n<p>次の例のように、 <code>table</code> オブジェクトの参照を入手したときは、おそらく無意識に、このオブジェクトの三つのインターフェイスをごく普通に交互に使います。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> table <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"table\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> tableAttrs <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Node/Element インターフェイス</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> tableAttrs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// HTMLTableElement インターフェイス: border 属性</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tableAttrs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"border\"</span><span class=\"token punctuation\">)</span>\n    table<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// HTMLTableElement インターフェイス: summary 属性</span>\ntable<span class=\"token punctuation\">.</span>summary <span class=\"token operator\">=</span> <span class=\"token string\">\"note: increased border\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"dom_の中で核となるインターフェイス","title":"DOM の中で核となるインターフェイス","isH3":true,"content":"<p>この節では、 DOM の中で最もよく使われるインターフェイスを列挙します。API がここで何をしているか記述するのではなく、DOM の中で非常に良く使われる関数や属性をちょっと示すのが狙いです。これらよく使われる API はこの本の最後の <a href=\"/ja/docs/Web/API/Document_Object_Model/Examples\">DOM の例</a>の章のより長い例の中で使われています。</p>\n<p><code>document</code> と <code>window</code> オブジェクトが一般的に DOM プログラミングの中で最もよく使われます。簡単に言うと、 <code>window</code> オブジェクトはブラウザーのようなものを表現し、 <code>document</code> オブジェクトは文書のルート自身です。 <code>Element</code> は一般的な <code>Node</code> インターフェイスを継承していて、あわせてこの 2 つのインターフェイスはここの要素で使われる多くの関数と属性を提供します。前節での <code>table</code> オブジェクトの例のように、これの要素はそれぞれが持つデータを扱うための特定のインターフェイスを持っている場合があります。</p>\n<p>以下は、 DOM を使うウェブや XML ページのスクリプトでよく使われる API の簡単な一覧です。</p>\n<ul>\n  <li><code><a href=\"/ja/docs/Web/API/Document/querySelector\">document.querySelector</a>(selector)</code></li>\n  <li><code><a href=\"/ja/docs/Web/API/Document/querySelectorAll\">document.querySelectorAll</a>(name)</code></li>\n  <li><code><a href=\"/ja/docs/Web/API/Document/createElement\">document.createElement</a>(name)</code></li>\n  <li><code>parentNode.<a href=\"/ja/docs/Web/API/Node/appendChild\" title=\"appendChild\">appendChild</a>(node)</code></li>\n  <li><code>element.<a href=\"/ja/docs/Web/API/Element/innerHTML\" title=\"innerHTML\">innerHTML</a></code></li>\n  <li><code>element.<a href=\"/ja/docs/Web/API/HTMLElement/style\" title=\"style\">style</a>.left</code></li>\n  <li><code>element.<a href=\"/ja/docs/Web/API/Element/setAttribute\" title=\"setAttribute\">setAttribute</a>()</code></li>\n  <li><code>element.<a href=\"/ja/docs/Web/API/Element/getAttribute\" title=\"getAttribute\">getAttribute</a>()</code></li>\n  <li><code>element.<a href=\"/ja/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener\">addEventListener</a>()</code></li>\n  <li><code><a href=\"/ja/docs/Web/API/Window/content\">window.content</a></code></li>\n  <li><code><a href=\"/ja/docs/Web/API/Window/load_event\">GlobalEventHandlers/onload</a></code></li>\n  <li><code><a href=\"/ja/docs/Web/API/Window/scrollTo\">window.scrollTo</a>()</code></li>\n</ul>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の簡単な例では、 DOM の <a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a> API の使用方法を説明します。具体的には、<a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a> API の <a href=\"/ja/docs/Web/API/Document/body\" title=\"body\"><code>body</code></a> プロパティを使用して以下のものを変更する例を示しています。</p>\n<ul>\n  <li>文書のテキスト色</li>\n  <li>文書の背景色</li>\n  <li>文書のリンク色 (すなわち、文書内のあらゆる場所のハイパーテキストリンクの色）</li>\n</ul>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Simple Document API example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setBodyAttr</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">attr<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">[</span>attr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">else</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no support\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code</span><span class=\"token punctuation\">&gt;</span></span>text<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onChange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">setBodyAttr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>black<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>red<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code</span><span class=\"token punctuation\">&gt;</span></span>bgColor<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onChange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">setBodyAttr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bgColor'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>white<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>white<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lightgrey<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>gray<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>code</span><span class=\"token punctuation\">&gt;</span></span>link<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>code</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onChange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">setBodyAttr</span><span class=\"token punctuation\">(</span><span class=\"token string\">'link'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selectedIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>blue<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>green<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>green<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>small</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://some.website.tld/page.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sample<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n          (sample link)\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>small</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"結果","title":"結果","isH3":true,"content":"<iframe class=\"sample-code-frame\" title=\"例\" id=\"frame_example\" width=\"85ch\" height=\"263px\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Document_Object_Model/Introduction/_sample_.example.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://dom.spec.whatwg.org/\" class=\"external\" rel=\" noopener\">DOM Living Standard</a></td>\n    </tr>\n  </tbody>\n</table>"}}],"toc":[{"text":"DOM とは","id":"dom_とは"},{"text":"DOM と JavaScript","id":"dom_と_javascript"},{"text":"DOM へのアクセス","id":"dom_へのアクセス"},{"text":"基本的なデータ型","id":"基本的なデータ型"},{"text":"DOM インタフェース","id":"dom_インタフェース"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"}],"summary":"ドキュメントオブジェクトモデル (Document Object Model, DOM) は、ウェブ上の文書のコンテンツと構造からなるオブジェクトのデータ表現です。このガイドでは、簡単に DOM を紹介します。 DOM がどのようにメモリー内で HTML 文書を表現するか、どのように API を使用してウェブコンテンツやアプリケーションを作成するのかを見てみます。","popularity":0.0012,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Introduction to the DOM","locale":"en-US","native":"English (US)"},{"title":"Introducción","locale":"es","native":"Español"},{"title":"Introduction","locale":"fr","native":"Français"},{"title":"DOM 소개","locale":"ko","native":"한국어"},{"title":"Introdução ao DOM","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Введение","locale":"ru","native":"Русский"},{"title":"DOM 概述","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/document_object_model/introduction","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/document_object_model/introduction/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Document_Object_Model","title":"ドキュメントオブジェクトモデル (DOM)"},{"uri":"/ja/docs/Web/API/Document_Object_Model/Introduction","title":"DOM の紹介"}],"pageTitle":"DOM の紹介 - Web API | MDN","noIndexing":false}}