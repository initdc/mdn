{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Blob","mdn_url":"/ja/docs/Web/API/Blob","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/File_API\">File API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/Blob/Blob\"><code>Blob()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Blob/size\"><code>size</code></a></li><li><a href=\"/ja/docs/Web/API/Blob/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Blob/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/ja/docs/Web/API/Blob/slice\"><code>slice()</code></a></li><li><a href=\"/ja/docs/Web/API/Blob/stream\"><code>stream()</code></a></li><li><a href=\"/ja/docs/Web/API/Blob/text\"><code>text()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>File API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/File\"><code>File</code></a></li><li><a href=\"/ja/docs/Web/API/FileList\"><code>FileList</code></a></li><li><a href=\"/ja/docs/Web/API/FileReader\"><code>FileReader</code></a></li><li><a href=\"/ja/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a></li><li><a href=\"/ja/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></li><li><a href=\"/ja/docs/Web/API/URL/revokeObjectURL\"><code>URL.revokeObjectURL()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Blob</code></strong> オブジェクトは blob、すなわち不変の生データであるファイルのようなオブジェクトを表します。テキストやバイナリーデータとして読み込んだり、<a href=\"/ja/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> に変換してそのメソッドを使ったデータ処理をしたりすることができます。</p>\n<p>Blob が表現することができるデータは必ずしも JavaScript ネイティブ形式である必要はありません。<a href=\"/ja/docs/Web/API/File\"><code>File</code></a> インターフェイスは Blob をベースにしており、 Blob の機能を継承してユーザーのシステム上のファイルをサポートするように拡張しています。</p>"}},{"type":"prose","value":{"id":"blob_の使用","title":"Blob の使用","isH3":false,"content":"<p>他の Blob 以外のオブジェクトやデータから <code>Blob</code> を作成するには、<a href=\"/ja/docs/Web/API/Blob/Blob\" title=\"Blob()\"><code>Blob()</code></a> コンストラクターを使用します。他の Blob のデータのサブセットを含む Blob を作成するには、 <a href=\"/ja/docs/Web/API/Blob/slice\" title=\"slice()\"><code>slice()</code></a> メソッドを使用します。ユーザーのファイルシステム上のファイルの <code>Blob</code> オブジェクトを取得するには、 <a href=\"/ja/docs/Web/API/File\"><code>File</code></a> のドキュメントを参照してください。</p>\n<p><code>Blob</code> オブジェクトを受け入れる API も、 <a href=\"/ja/docs/Web/API/File\"><code>File</code></a> のドキュメントに掲載しています。</p>"}},{"type":"prose","value":{"id":"コンストラクター","title":"コンストラクター","isH3":false,"content":"<dl>\n  <dt id=\"blob\"><a href=\"/ja/docs/Web/API/Blob/Blob\" title=\"Blob()\"><code>Blob()</code></a></dt>\n  <dd>\n    <p>コンストラクターに渡された配列内のすべてのデータを連結したものを含む、新しく作成された <code>Blob</code> オブジェクトを返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"インスタンスプロパティ","title":"インスタンスプロパティ","isH3":false,"content":"<dl>\n  <dt id=\"blob.prototype.size\"><a href=\"/ja/docs/Web/API/Blob/size\"><code>Blob.prototype.size</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p><code>Blob</code> オブジェクトに含まれるデータのサイズ (バイト単位)。</p>\n  </dd>\n  <dt id=\"blob.prototype.type\"><a href=\"/ja/docs/Web/API/Blob/type\"><code>Blob.prototype.type</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p><code>Blob</code> に含まれるデータの MIME タイプを示す文字列。タイプが不明な場合、この文字列は空です。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"インスタンスメソッド","title":"インスタンスメソッド","isH3":false,"content":"<dl>\n  <dt id=\"blob.prototype.arraybuffer\"><a href=\"/ja/docs/Web/API/Blob/arrayBuffer\"><code>Blob.prototype.arrayBuffer()</code></a></dt>\n  <dd>\n    <p><code>Blob</code> の全内容をバイナリーデータとして含む <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> で解決するプロミスを返します。</p>\n  </dd>\n  <dt id=\"blob.prototype.slice\"><a href=\"/ja/docs/Web/API/Blob/slice\"><code>Blob.prototype.slice()</code></a></dt>\n  <dd>\n    <p>呼び出された Blob の指定されたバイト数範囲のデータを含む新しい <code>Blob</code> オブジェクトを返します。</p>\n  </dd>\n  <dt id=\"blob.prototype.stream\"><a href=\"/ja/docs/Web/API/Blob/stream\"><code>Blob.prototype.stream()</code></a></dt>\n  <dd>\n    <p><code>Blob</code> の内容を読み込むために使用できる <a href=\"/ja/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> を返します。</p>\n  </dd>\n  <dt id=\"blob.prototype.text\"><a href=\"/ja/docs/Web/API/Blob/text\"><code>Blob.prototype.text()</code></a></dt>\n  <dd>\n    <p>UTF-8 テキストとして解釈された Blob の内容全体を含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a> で解決する Promise を返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"blob_の作成","title":"Blob の作成","isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/Blob/Blob\" title=\"Blob()\"><code>Blob()</code></a> コンストラクターは、他のオブジェクトから Blob を作成することができます。たとえば、JSON 文字列から Blob を作成するには、次のようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">hello</span><span class=\"token operator\">:</span> <span class=\"token string\">'world'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span> <span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"型付き配列の内容を表す_url_の作成","title":"型付き配列の内容を表す URL の作成","isH3":true,"content":"<p>次のコードは、JavaScript の[型付き配列](/ja/docs/Web/JavaScript/Typed_arrays)を作成し、型付き配列のデータを含む新しい `Blob` を作成します。次に、<a href=\"/ja/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a> を呼び出して、Blob を <a href=\"/ja/docs/Glossary/URL\">URL</a> に変換します。</p>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>この例では、スペース文字から文字 Z までの ASCII コードを含む型付けされた配列を作成し、それをオブジェクト URL に変換します。\nそのオブジェクト URL を開くためのリンクが作成されます。\nリンクをクリックすると、デコードされたオブジェクト URL が表示されます。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<p>このコードの例示のための主要な部分は <code>typedArrayToURL()</code> 関数で、与えられた型付き配列から <code>Blob</code> を作成し、それに対するオブジェクト URL を返します。データをオブジェクト URL に変換した後は、要素の <a href=\"/ja/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> 属性の値として含む、さまざまな方法で使用することができます (もちろん、データに画像が含まれていることを前提としています)。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">typedArrayToURL</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">typedArray<span class=\"token punctuation\">,</span> mimeType</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>typedArray<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> mimeType<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">59</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">59</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  bytes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token function\">typedArrayToURL</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span> <span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlink<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\nlink<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">'Open the array URL'</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"結果\">結果</h4>\n<p>例のリンクをクリックすると、ブラウザーがオブジェクトの URL をデコードしているのがわかります。</p><iframe class=\"sample-code-frame\" title=\"型付き配列の内容を表す URL の作成\" id=\"frame_creating_a_url_representing_the_contents_of_a_typed_array\" width=\"600\" height=\"200\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Blob/_sample_.creating_a_url_representing_the_contents_of_a_typed_array.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"blob_からデータを抽出する","title":"Blob からデータを抽出する","isH3":true,"content":"<p><code>Blob</code> から内容を読み込む方法の 1 つは、<a href=\"/ja/docs/Web/API/FileReader\"><code>FileReader</code></a> を使用することです。次のコードは、<code>Blob</code> の内容を型付き配列として読み込みます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nreader<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loadend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// reader.result には blob の内容が型付き配列として格納されます。</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nreader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsArrayBuffer</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>Blob</code> から内容を読み込む別の方法としては、 <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> を使用する方法があります。次のコードは、<code>Blob</code> の内容をテキストとして読み取るものです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Response</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>または、<a href=\"/ja/docs/Web/API/Blob/text\"><code>Blob.prototype.text()</code></a> を使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blob<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>FileReader</code> の他のメソッドを使用することで、Blob の内容を文字列またはデータ URL として読み込むことができます。</p>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/FileAPI/#blob-section","title":"File API"}],"query":"api.Blob"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.Blob","dataURL":"/ja/docs/Web/API/Blob/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Blob\" aria-current=\"page\"><code>BlobBuilder</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/FileReader\"><code>FileReader</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/File\"><code>File</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/File_API/Using_files_from_web_applications\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">ウェブアプリケーションからのファイルの使用 (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"Blob の使用","id":"blob_の使用"},{"text":"コンストラクター","id":"コンストラクター"},{"text":"インスタンスプロパティ","id":"インスタンスプロパティ"},{"text":"インスタンスメソッド","id":"インスタンスメソッド"},{"text":"例","id":"例"},{"text":"Blob の作成","id":"blob_の作成"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Blob オブジェクトは blob、すなわち不変の生データであるファイルのようなオブジェクトを表します。テキストやバイナリーデータとして読み込んだり、ReadableStream に変換してそのメソッドを使ったデータ処理をしたりすることができます。","popularity":0.0013,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Blob","locale":"en-US","native":"English (US)"},{"title":"Blob","locale":"es","native":"Español"},{"title":"Blob","locale":"fr","native":"Français"},{"title":"Blob","locale":"ko","native":"한국어"},{"title":"Blob","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Blob","locale":"ru","native":"Русский"},{"title":"Blob","locale":"zh-CN","native":"中文 (简体)"},{"title":"Blob","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/blob","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/blob/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Blob","title":"Blob"}],"pageTitle":"Blob - Web API | MDN","noIndexing":false}}