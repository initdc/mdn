{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"複数のアイテムのドラッグ＆ドロップ","mdn_url":"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Multiple_items","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API\">HTML Drag and Drop API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop\">File drag and drop</a></li><li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations\">Drag operations</a></li><li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Multiple_items\">Dragging and Dropping Multiple Items</a></li><li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">Recommended Drag Types</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a></li><li><a href=\"/ja/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a></li><li><a href=\"/ja/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a></li><li><a href=\"/ja/docs/Web/API/DragEvent\"><code>DragEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/Document/drag_event\"><code>Document</code>: <code>drag</code></a></li><li><a href=\"/ja/docs/Web/API/Document/dragend_event\"><code>Document</code>: <code>dragend</code></a></li><li><a href=\"/ja/docs/Web/API/Document/dragenter_event\"><code>Document</code>: <code>dragenter</code></a></li><li><a href=\"/ja/docs/Web/API/Document/dragleave_event\"><code>Document</code>: <code>dragleave</code></a></li><li><a href=\"/ja/docs/Web/API/Document/dragover_event\"><code>Document</code>: <code>dragover</code></a></li><li><a href=\"/ja/docs/Web/API/Document/dragstart_event\"><code>Document</code>: <code>dragstart</code></a></li><li><a href=\"/ja/docs/Web/API/Document/drop_event\"><code>Document</code>: <code>drop</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>Warning:</strong> <strong>moz</strong> の接頭辞がついたメソッドやプロパティ（<strong>mozSetDataAt()</strong> など）は Gecko 固有のインターフェイスです。これらのインターフェイスは Gecko ベースのブラウザーで<strong>しか</strong>動作しません。</p>\n</div>\n<p>Mozilla はいくつかの標準外の機能を使用した、複数のアイテムのドラッグができる機能に対応しています。これは <a href=\"/ja/docs/Web/API/DataTransfer/types\" title=\"types\"><code>types</code></a> プロパティと、同様に <a href=\"/ja/docs/Web/API/DataTransfer/getData\" title=\"getData()\"><code>getData()</code></a>, <a href=\"/ja/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a>, <a href=\"/ja/docs/Web/API/DataTransfer/clearData\" title=\"clearData()\"><code>clearData()</code></a> メソッドを反映したものですが、取得、修正、削除するアイテムの位置を指定する追加の引数を取ります。</p>\n<p>この記事で説明するドラッグ処理は、 <a href=\"/ja/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> インターフェイスを利用します．この処理は <a href=\"/ja/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> インターフェイスおよび <a href=\"/ja/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a> インターフェイスは使用しません。</p>"}},{"type":"prose","value":{"id":"位置を使用した設定および取得","title":"位置を使用した設定および取得","isH3":false,"content":"<p>\n  <a href=\"/ja/docs/Web/API/DataTransfer/mozSetDataAt\" title=\"mozSetDataAt()\"><code>mozSetDataAt()</code></a> メソッドで、 <a href=\"/ja/docs/Web/API/HTMLElement/dragstart_event\" title=\"dragstart\"><code>dragstart</code></a> イベントの間に\n  複数のアイテムを追加することができます。これは <a href=\"/ja/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a> と似ています。\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> dt <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">mozSetDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ドラッグされるデータ\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">mozSetDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ドラッグされる 2 つ目のデータ\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この例では 2 つのドラッグアイテムを追加しています。最後の引数は追加するアイテムの位置を示しています。これらのアイテムは 0 番から順番に登録する必要があり、最後の方（位置の大きなもの）から逆順に登録することはできません。また、すでにデータが登録されている位置を指定してもう一度データを登録すると、前に登録したデータを置き換えることができます。位置として 0 を指定すると、 <a href=\"/ja/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a> を呼び出すことと同等になります。</p>\n<p>アイテムを削除するには、 <a href=\"/ja/docs/Web/API/DataTransfer/mozClearDataAt\" title=\"mozClearDataAt()\"><code>mozClearDataAt()</code></a> メソッドを使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">mozClearDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>注意: ある位置で示されるアイテムについて、最後のデータ形式の削除によってアイテム全体を削除すると、残りのアイテムが繰り上がってアイテムの位置が変わることに注意してください。例えば、次のようのコードを見てください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> dt <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">mozSetDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"URL1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">mozSetDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span>    <span class=\"token string\">\"URL1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">mozSetDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"URL2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">mozSetDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span>    <span class=\"token string\">\"URL2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">mozSetDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"URL3\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">mozSetDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span>    <span class=\"token string\">\"URL3\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [item1] data=URL1, index=0</span>\n<span class=\"token comment\">// [item2] data=URL2, index=1</span>\n<span class=\"token comment\">// [item3] data=URL3, index=2</span>\n</code></pre></div>\n<p>このように 2 つの異なる形式による 3 つのアイテムを登録した後で、</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>dt<span class=\"token punctuation\">.</span><span class=\"token function\">mozClearDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">mozClearDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このように 2 番目のアイテムについてすべての形式のデータを削除すると、 3 番目だったアイテムが繰り上がって 2 番目になり、位置が 2 から 1 に変わります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// [item1] data=URL1, index=0</span>\n<span class=\"token comment\">// [item2] data=URL3, index=1</span>\n</code></pre></div>\n<p>幸いなことに、通常はアイテムを削除する必要がある場合は希で、それよりも、必要に応じてアイテムを追加するだけの場合の方がずっと多いです。</p>\n<p>複数のアイテムのドラッグが使われる場合の代表例は、複数のファイルやブックマークをドラッグする時です。この場合には、適切な形式でそれらのアイテムを追加してください。また必須ではありませんが、それぞれのアイテムは常に同じ形式でデータを追加するべきです。これによりドロップ対象は、一貫したデータの受け取りを期待できます。</p>\n<p>複数のファイルがドラッグされているかどうかを確認するには、 <a href=\"/ja/docs/Web/API/DataTransfer/mozItemCount\" title=\"mozItemCount\"><code>mozItemCount</code></a> プロパティを調べます。このプロパティにはドラッグされているアイテムの数がセットされます。もしそのドロップ先が 1 つのアイテムのドロップだけを受け付ける場合には、ドラッグされたアイテムすべてを拒否することもできますし、最初のアイテムだけを受け取ることもできます。複数のアイテムの受け取りを拒否するには、 <a href=\"/ja/docs/Web/API/HTMLElement/dragover_event\" title=\"dragover\"><code>dragover</code></a> イベントをキャンセルしないか、 <a href=\"/ja/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> プロパティに <code>none</code> を指定します。他のイベントリスナーがすでにイベントをキャンセルしている場合に備えて、両方を実行しても構いません。</p>\n<p>ドロップされたアイテムのうち最初のアイテムだけを扱う場合は、 1 つだけのアイテムのドラッグの場合と同様に <a href=\"/ja/docs/Web/API/DataTransfer/getData\" title=\"getData()\"><code>getData()</code></a> を使います。これは、何も追加の処理が必要ないドロップアイテムを1つだけ受け取るドロップ対象のために有用です。</p>\n<p>それに対して、任意の位置のアイテムをデータトランスファーから取得するには <a href=\"/ja/docs/Web/API/DataTransfer/mozGetDataAt\" title=\"mozGetDataAt()\"><code>mozGetDataAt()</code></a> メソッドを使います。以下の例は、ドラッグされたファイルを取得し、それらを配列に追加するものです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">onDrop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> files <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> dt <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dt<span class=\"token punctuation\">.</span>mozItemCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    files<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">.</span><span class=\"token function\">mozGetDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/x-moz-file\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><a href=\"/ja/docs/Web/API/DataTransfer/mozTypesAt\" title=\"mozTypesAt\"><code>mozTypesAt</code></a> メソッドを使って、望んでいる形式のデータが存在しているかどうかを確かめたくなるかもしれません。 <a href=\"/ja/docs/Web/API/DataTransfer/types\" title=\"types\"><code>types</code></a> プロパティと同様に、このメソッドは、そのアイテムが保持しているデータの型の文字列を返します。 <a href=\"/ja/docs/Web/API/DataTransfer/types\" title=\"types\"><code>types</code></a> プロパティを取得する事は、位置が 0 のアイテムの型のリストを取得する事に等しくなります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> types <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">mozTypesAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"文字列でないデータのドラッグ","title":"文字列でないデータのドラッグ","isH3":false,"content":"<p>上で解説した追加のメソッドが扱えるデータは文字列に限定されず、どんな種類のデータでも指定することができます。例えば、ファイルは <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\">application/x-moz-file</a> 型で <code>nsIFile</code> のオブジェクトとして保持されてドラッグされます。 <a href=\"/ja/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a> メソッドは文字列しか対応しておらず、 ドラッグするファイルを指定するのには利用できないため、代わりに <a href=\"/ja/docs/Web/API/DataTransfer/mozSetDataAt\" title=\"mozSetDataAt()\"><code>mozSetDataAt()</code></a> メソッドを使わなくてはなりません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>dt<span class=\"token punctuation\">.</span><span class=\"token function\">mozSetDataAt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/x-moz-file\"</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>複数のアイテムを扱う必要がない場合でも、このメソッドを使うことによって任意のオブジェクトをデータに指定できます。この場合には、位置として 0 を指定しておきます。</p>\n<p>同様に、ファイルやその他のオブジェクトを取得するには <a href=\"/ja/docs/Web/API/DataTransfer/mozGetDataAt\" title=\"mozGetDataAt()\"><code>mozGetDataAt()</code></a> メソッドを使う必要があります。もし <a href=\"/ja/docs/Web/API/DataTransfer/getData\" title=\"getData()\"><code>getData()</code></a> を使った場合は、値が文字列でない型のデータは空文字として取得されます。ただし、数値のような単純な型のデータについては文字列に変換できるため、この場合は <a href=\"/ja/docs/Web/API/DataTransfer/getData\" title=\"getData()\"><code>getData()</code></a> を使っても問題ありません。</p>"}},{"type":"prose","value":{"id":"複数アイテムのドロップの例","title":"複数アイテムのドロップの例","isH3":false,"content":"<p>次の例では、ドロップしたアイテムとフォーマットのリストが表示されるボックスが用意されています。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">dodrop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> dt <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> dt<span class=\"token punctuation\">.</span>mozItemCount<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Items: \"</span> <span class=\"token operator\">+</span> count <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" Item \"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\":\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> types <span class=\"token operator\">=</span> dt<span class=\"token punctuation\">.</span><span class=\"token function\">mozTypesAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">&lt;</span> types<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"  \"</span> <span class=\"token operator\">+</span> types<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> dt<span class=\"token punctuation\">.</span><span class=\"token function\">mozGetDataAt</span><span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\") : &lt;\"</span> <span class=\"token operator\">+</span> data <span class=\"token operator\">+</span> <span class=\"token string\">\" &gt;\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;&lt;error&gt;&gt;\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> text<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span> <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> pre<span class=\"token punctuation\">;</span> <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span>\n      <span class=\"token attr-name\">ondragenter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>document.getElementById(<span class=\"token punctuation\">'</span>output<span class=\"token punctuation\">'</span>).textContent = <span class=\"token punctuation\">'</span><span class=\"token punctuation\">'</span>; event.stopPropagation(); event.preventDefault();<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">ondragover</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>event.stopPropagation(); event.preventDefault();<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">ondrop</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>event.stopPropagation(); event.preventDefault(); dodrop(event);<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n  Fix<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>この例では、 <a href=\"/ja/docs/Web/API/HTMLElement/dragenter_event\" title=\"dragenter\"><code>dragenter</code></a> と <code><a href=\"/ja/docs/Web/API/HTMLElement/dragover_event\" title=\"dragover\"><code>dragover</code></a></code> の両イベントを <a href=\"/ja/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> メソッドでキャンセルします。これにより、要素の上でのドロップが可能になっています。</p>\n<p>アイテムをドロップした時に、 <code>dodrop</code> イベントハンドラーが呼び出されます。この関数は <a href=\"/ja/docs/Web/API/DataTransfer/mozItemCount\" title=\"mozItemCount\"><code>mozItemCount</code></a> プロパティを見て、いくつのアイテムがドロップされたのかを調べ、それらに繰り返し処理を行います。それぞれのアイテムについて、型の一覧を得るために <a href=\"/ja/docs/Web/API/DataTransfer/mozTypesAt\" title=\"mozTypesAt\"><code>mozTypesAt</code></a> メソッドが呼ばれます。この一覧の生成処理は、ドラッグに対して関連づけられたすべてのデータに対して繰り返されます。</p>\n<p>この例は、あるドラッグ操作が保持しているデータを確かめたい時に便利です。ただアイテムをこの例のドロップ対象にドロップするだけで、ドラッグされたどのアイテムがどんな形式でどのようなデータを保持しているのかを見ることができます。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API\">HTML ドラッグ＆ドロップ API （概要）</a></li>\n  <li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations\">ドラッグ操作</a></li>\n  <li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">推奨されるドラッグ型</a></li>\n  <li><a href=\"https://html.spec.whatwg.org/multipage/interaction.html#dnd\" class=\"external\" rel=\" noopener\">HTML5 Living Standard: Drag and Drop</a></li>\n</ul>"}}],"toc":[{"text":"位置を使用した設定および取得","id":"位置を使用した設定および取得"},{"text":"文字列でないデータのドラッグ","id":"文字列でないデータのドラッグ"},{"text":"複数アイテムのドロップの例","id":"複数アイテムのドロップの例"},{"text":"関連情報","id":"関連情報"}],"summary":"Mozilla はいくつかの標準外の機能を使用した、複数のアイテムのドラッグができる機能に対応しています。これは types プロパティと、同様に getData(), setData(), clearData() メソッドを反映したものですが、取得、修正、削除するアイテムの位置を指定する追加の引数を取ります。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Dragging and Dropping Multiple Items","locale":"en-US","native":"English (US)"},{"title":"拖拽和放置多个项目","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/html_drag_and_drop_api/multiple_items","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/html_drag_and_drop_api/multiple_items/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/HTML_Drag_and_Drop_API","title":"HTML ドラッグ＆ドロップ API"},{"uri":"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Multiple_items","title":"複数のアイテムのドラッグ＆ドロップ"}],"pageTitle":"複数のアイテムのドラッグ＆ドロップ - Web API | MDN","noIndexing":false}}