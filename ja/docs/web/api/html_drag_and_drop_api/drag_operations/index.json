{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ドラッグ操作","mdn_url":"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API\">HTML Drag and Drop API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop\">File drag and drop</a></li><li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations\">Drag operations</a></li><li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Multiple_items\">Dragging and Dropping Multiple Items</a></li><li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">Recommended Drag Types</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a></li><li><a href=\"/ja/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a></li><li><a href=\"/ja/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a></li><li><a href=\"/ja/docs/Web/API/DragEvent\"><code>DragEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/Document/drag_event\"><code>Document</code>: <code>drag</code></a></li><li><a href=\"/ja/docs/Web/API/Document/dragend_event\"><code>Document</code>: <code>dragend</code></a></li><li><a href=\"/ja/docs/Web/API/Document/dragenter_event\"><code>Document</code>: <code>dragenter</code></a></li><li><a href=\"/ja/docs/Web/API/Document/dragleave_event\"><code>Document</code>: <code>dragleave</code></a></li><li><a href=\"/ja/docs/Web/API/Document/dragover_event\"><code>Document</code>: <code>dragover</code></a></li><li><a href=\"/ja/docs/Web/API/Document/dragstart_event\"><code>Document</code>: <code>dragstart</code></a></li><li><a href=\"/ja/docs/Web/API/Document/drop_event\"><code>Document</code>: <code>drop</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>以下は、ドラッグ＆ドロップ操作が行われる時の各段階についての解説です。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> この文書で記述されているドラッグ操作は <a href=\"/ja/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> インターフェイスを使用します。この文書では <a href=\"/ja/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a> インターフェイスや <a href=\"/ja/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a> インターフェイスは説明<em>しません</em>。</p>\n</div>"}},{"type":"prose","value":{"id":"draggable_属性","title":"draggable 属性","isH3":false,"content":"<p>ウェブページにおいては、既定のドラッグ＆ドロップの挙動が使われる場合がいくつかあります。文字列の選択範囲、画像、リンクなどのドラッグなどがこれにあたります。画像かリンクがドラッグされた時は、画像もしくはリンク先の URL がドラッグデータとして設定され、ドラッグ操作が始まります。その他の要素は、既定のドラッグ操作が行われるためには選択範囲に含まれていなければなりません。実際の様子を確認するには、ウェブページの一部を選択して、その上でマウスのボタンを押下し、そのまま選択範囲をドラッグしてください。ドラッグ中、選択範囲の内容を半透明で描画した物がマウスポインターに伴って表示されるでしょう。ただしこの挙動は、ドラッグされたデータを加工するイベントリスナーが存在しない場合の、既定のドラッグの挙動によるものです。</p>\n<p>HTML では、画像、リンク、選択範囲の上での既定の動作を除くと、既定でドラッグ可能な他の要素はありません。</p>\n<p>上記以外の他の HTML 要素をドラッグできるようにするには、以下の 3 つのことをしなくてはなりません。</p>\n<ul>\n  <li>ドラッグできるようにしたい要素の <code><a href=\"/ja/docs/Web/HTML/Global_attributes#attr-draggable\"><code>draggable</code></a></code> 属性の値を \"<code>true</code>\" に設定する。</li>\n  <li><code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code></code> イベントにリスナーを設定し、そのリスナーの中でドラッグデータを設定する。</li>\n  <li>上記で定義されたリスナーの中で<a href=\"/ja/docs/Web/API/DataTransfer/setData\">ドラッグデータを設定する</a>。</li>\n</ul>\n<p>以下は、コンテンツの一部がドラッグできるようにする例です。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">draggable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ondragstart</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>event.dataTransfer.setData(<span class=\"token punctuation\">'</span>text/plain<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>この文字列はドラッグができます<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  この文字列はドラッグが<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span>できます<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span>。\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p><code><a href=\"/ja/docs/Web/HTML/Global_attributes#attr-draggable\"><code>draggable</code></a></code> 属性を <code>\"true\"</code> に設定すると、その要素はドラッグできるようになります。この属性が設定されていない、あるいは false に設定されている場合、その要素をドラッグする事はできず、代わりにテキストが選択されるでしょう。</p>\n<p><code><a href=\"/ja/docs/Web/HTML/Global_attributes#attr-draggable\"><code>draggable</code></a></code> 属性は画像やリンクを含めてあらゆる要素に設定できます。ただし、画像とリンクについてだけは既定値が <code>true</code>となっていますので、実際にこれらの要素で使う場合は、要素をドラッグできないようにするために <code><a href=\"/ja/docs/Web/HTML/Global_attributes#attr-draggable\"><code>draggable</code></a></code> 属性に <code>false</code> を設定するという場合がほとんどでしょう。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 要素がドラッグ可能になった場合、文字列やその要素に含まれている他の要素が、マウスによるクリックやドラッグなどの通常の操作では選択する事ができなくなることに注意してください。ユーザーが文字列を選択するには、通常の操作の代わりに、 <kbd>Alt</kbd> キーを押しながらマウスで選択するか、キーボードで操作を行う必要があります。</p>\n</div>"}},{"type":"prose","value":{"id":"ドラッグ操作の開始","title":"ドラッグ操作の開始","isH3":false,"content":"<p>この例では、 <code><a href=\"/ja/docs/Web/API/HTMLElement/dragstart_event\" title=\"ondragstart\"><code>ondragstart</code></a></code> 属性を使って、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code> イベントのためのリスナーが追加されています。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">draggable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ondragstart</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>event.dataTransfer.setData(<span class=\"token punctuation\">'</span>text/plain<span class=\"token punctuation\">'</span>, <span class=\"token punctuation\">'</span>この文字列はドラッグができます<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  この文字列はドラッグが<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span>できます<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span>。\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>ユーザーがドラッグを開始しようとした時、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code> イベントが発行されます。</p>\n<p>この例では <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code> のリスナーは、ドラッグされる要素自身に追加されていますが、他の多くのイベントがそうであるようにドラッグイベントもバブリングしますので、より上位の祖先要素でイベントを監視することもできます。</p>\n<p><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code> イベントでは、以下で解説している<strong>ドラッグデータ</strong>、<strong>フィードバック画像</strong>、<strong>ドラッグの効果</strong>を設定することができます。ドラッグデータの指定は必須ですが、多くの状況では、フィードバック画像とドラッグの種類は既定のもので問題ありません。</p>"}},{"type":"prose","value":{"id":"ドラッグデータ","title":"ドラッグデータ","isH3":false,"content":"<p>すべての<a href=\"/ja/docs/Web/API/DragEvent\" title=\"ドラッグイベント\"><code>ドラッグイベント</code></a>は、ドラッグデータを保持するための <a href=\"/ja/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a> と呼ばれるプロパティを持っています (<code>dataTransfer</code> は <a href=\"/ja/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> オブジェクトの一つです)。</p>\n<p>ドラッグが行われた際には、何をドラッグするのかを識別するためのデータをドラッグに関連付ける必要があります。例えば、テキストボックス内で選択されたテキストがドラッグされた場合、ドラッグデータアイテムに関連付けられたデータはテキストそのものです。同様に、ウェブページ上のリンクがドラッグされた場合、ドラッグデータにはリンクの URL が含まれます。</p>\n<p><a href=\"/ja/docs/Web/API/DataTransfer\" title=\"ドラッグデータ\"><code>ドラッグデータ</code></a>には、データの型 (または形式) とデータの値の 2 つの情報が含まれています。形式は型の文字列 (テキストデータの場合は <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#text\"><code>text/plain</code></a> など) で、値はテキストの文字列です。ドラッグの開始時に、型とデータを指定してデータを追加します。ドラッグ中、 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> および <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> イベントのイベントリスナーでは、ドラッグされるデータのデータ型を使って、ドロップが許可されているかどうかをチェックします。たとえば、リンクを受け付けるドロップターゲットでは、 <a href=\"/ja_docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#link\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">text/uri-list</a> というデータ型がチェックされます。ドロップイベントが発生すると、リスナーはドラッグされたデータを取得し、ドロップ位置に挿入します。</p>\n<p><a href=\"/ja/docs/Web/API/DataTransfer\" title=\"ドラッグデータ\"><code>ドラッグデータ</code></a>の <a href=\"/ja/docs/Web/API/DataTransfer/types\" title=\"types\"><code>types</code></a> プロパティは、 <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#text\"><code>text/plain</code></a> や <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#image\"><code>image/jpeg</code></a> のような MIME タイプの <a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a> のリストを返します。独自の型を作成することもできます。よく使用される型は、<a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">推奨されるドラッグ型</a>の記事に記載されています。</p>\n<p>一つのドラッグ操作で、複数の異なる形式のデータを提供できます。この仕組みにより、独自の形式や、その形式のデータを受け取れない要素向けのフォールバック用の形式など、データをより適切な形式で引き渡すことができます。通常、最後のフォールバック先として使われる形式は、 <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#text\"><code>text/plain</code></a> 型として表される普通のテキストデータです。このデータは元のテキストの単純な文字列となるでしょう。</p>\n<p>データを <a href=\"/ja/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a> に設定するには、 <a href=\"/ja/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a> メソッドを使います。このメソッドは、次の例のようにデータの型とデータの値の 2 つの引数を取ります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ドラッグされたテキスト\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この例では、データの値は「ドラッグされたテキスト」で、形式は <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#text\"><code>text/plain</code></a> です。</p>\n<p>データは複数の形式で提供できます。これを実現するには、異なる形式を指定して <a href=\"/ja/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a> メソッドを複数回呼び出します。最も具体的な形式から、具体的でない形式に向けて呼び出します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> dt <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/x.bookmark\"</span><span class=\"token punctuation\">,</span> bookmarkString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://www.mozilla.org\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndt<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://www.mozilla.org\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これは、 3 つの異なる型のデータを追加する例です。最初の型の <code>application/x.bookmark</code> は独自の型です。他のアプリケーションはこの型に対応していないでしょうが、同じウェブサイトやアプリケーションの中の領域同士でのドラッグでは、このような独自の形式を利用できます。</p>\n<p>また、他の型でもデータを提供することで、このような独自形式に対応していない他のアプリケーション向けにも、代替の形式でドラッグできるようになります。 <code>application/x.bookmark</code> 型はそのアプリケーションの中ではより使いやすく詳細な情報を提供できますが、他の型で渡されるデータは、単純な 1 つの URL もしくは文字列となります。</p>\n<p>なお、この例では <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#link\"><code>text/uri-list</code></a> と <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#text\"><code>text/plain</code></a> も同じデータを含んでいます。このようにすることが多いのですが、こうしなければならない訳ではありません。</p>\n<p>同じ形式で 2 回データを登録すると、古いデータは新しいデータによって置き換えられますが、データの形式の登録の順番自体は古いデータを登録した時のままになります。</p>\n<p>登録したデータは <a href=\"/ja/docs/Web/API/DataTransfer/clearData\" title=\"clearData()\"><code>clearData()</code></a> メソッドによって削除できます。このメソッドは、削除するデータの形式を引数として求めます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">clearData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><a href=\"/ja/docs/Web/API/DataTransfer/clearData\" title=\"clearData()\"><code>clearData()</code></a> メソッドの引数によるデータ形式の指定は省略可能です。データの形式が指定されなかった時は、すべての型のデータが削除されます。ドラッグ開始時にデータが 1 つも登録されなかった場合、もしくは後の処理で全てのデータが削除された場合、ドラッグ操作は発生しません。</p>"}},{"type":"prose","value":{"id":"ドラッグのフィードバック画像の設定","title":"ドラッグのフィードバック画像の設定","isH3":false,"content":"<p>ドラッグが行われた時、ドラッグ元 (<code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code> イベントが発行された要素) を元にして OS によって画像が生成され (例えば Windows では半透明の画像になります)、ドラッグしている間マウスポインターと一緒に表示されます。この画像は自動的に生成されるため、あなたが用意する必要はありません。しかし、 <a href=\"/ja/docs/Web/API/DataTransfer/setDragImage\" title=\"setDragImage()\"><code>setDragImage()</code></a> によって、独自のドラッグ中のフィードバック画像を指定することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">setDragImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> xOffset<span class=\"token punctuation\">,</span> yOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>3 つの引数が必要です。一つ目は、画像への参照です。この参照は、通常は <code>&lt;img&gt;</code> 要素ですが、 <code>&lt;canvas&gt;</code> やその他の要素でもよいでしょう。フィードバック画像は、画像が画面上でどのように見えるかを考慮して生成されますが、画像の場合は、元のサイズで描画されます。 <a href=\"/ja/docs/Web/API/DataTransfer/setDragImage\" title=\"setDragImage()\"><code>setDragImage()</code></a> メソッドの第 2、第 3 引数には、マウスポインターに対する相対的な画像の表示位置を指定します。</p>\n<p>文書中に存在しないものをフィードバック画像として使うために、以下の例のようにして、画像や canvas を利用することもできます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">dragWithCustomImage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> dt <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">;</span>\n  dt<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ドラッグされるデータ'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  dt<span class=\"token punctuation\">.</span><span class=\"token function\">setDragImage</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この例では、 canvas の大きさは <code>50</code>×<code>50</code> ピクセルで、オフセット値はそれぞれの半分の値 (<code>25</code>) となっており、画像はマウスポインターの中央に表示されます (マウスポインターが画像の中央に表示されます)。</p>"}},{"type":"prose","value":{"id":"ドラッグの効果","title":"ドラッグの効果","isH3":false,"content":"<p>ドラッグを行う時の操作には、いくつかの種類があります。 <code>copy</code> (コピー) はドラッグされているデータが現在の場所からドロップ先の場所にコピーされることを示します。 <code>move</code> (移動) はドラッグされているデータがドロップ先に移動されることを示し、 <code>link</code> (リンク) はドラッグ元とドロップ先の場所との間に何らかの形での関連付けや繋がりが作られることを示します。</p>\n<p><code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code></code> イベントのリスナーにおいて、 <a href=\"/ja/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> プロパティに値を設定することで、 ドラッグ元について上記の 3 つの操作のうちどれが許可されているのかを示すことができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>effectAllowed <span class=\"token operator\">=</span> <span class=\"token string\">\"copy\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この例では、コピー (<strong>copy</strong>) のみが許可されています。</p>\n<p>複数の種類の操作を組み合わせることもできます。</p>\n<dl>\n  <dt id=\"none\"><code>none</code></dt>\n  <dd>\n    <p>どの操作も許可されていない（ドロップを禁止）。</p>\n  </dd>\n  <dt id=\"copy\"><code>copy</code></dt>\n  <dd>\n    <p>コピーのみが許可されている。</p>\n  </dd>\n  <dt id=\"move\"><code>move</code></dt>\n  <dd>\n    <p>移動のみが許可されている。</p>\n  </dd>\n  <dt id=\"link\"><code>link</code></dt>\n  <dd>\n    <p>リンクのみが許可されている。</p>\n  </dd>\n  <dt id=\"copymove\"><code>copyMove</code></dt>\n  <dd>\n    <p>コピーまたは移動のみが許可されている。</p>\n  </dd>\n  <dt id=\"copylink\"><code>copyLink</code></dt>\n  <dd>\n    <p>コピーまたはリンクのみが許可されている。</p>\n  </dd>\n  <dt id=\"linkmove\"><code>linkMove</code></dt>\n  <dd>\n    <p>リンクまたは移動のみが許可されている。</p>\n  </dd>\n  <dt id=\"all\"><code>all</code></dt>\n  <dd>\n    <p>コピー、移行、リンクの全ての操作が許可されている。</p>\n  </dd>\n  <dt id=\"初期化されていない場合\">初期化されていない場合</dt>\n  <dd>\n    <p>既定値は <code>all</code> です。</p>\n  </dd>\n</dl>\n<p>上に列挙されている値のいずれかと全く等しい値だけが利用可能であることに注意してください。 <a href=\"/ja/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> プロパティを <code>copyMove</code> に設定すると、コピーや移動の操作を許可しますが、ユーザーがリンク操作を行うことを防ぐことができます。 <a href=\"/ja/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> プロパティを変更しない場合、「all」が指定された時と同様に、すべての操作が許可されます。ですので、特定の種類の操作を除外したい場合を除いて、プロパティの値を手動で設定する必要はありません。</p>\n<p>ドラッグ操作の間、 <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code></code> または <code><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code></code> イベントのリスナーは、操作が許可されているかどうかを確かめるために <a href=\"/ja/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> プロパティを参照できます。これらのイベントにおいて、関連するプロパティである <a href=\"/ja/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> プロパティへ、実際に行われる操作の種類 1 つだけが指定されるべきです。 <a href=\"/ja/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> プロパティの値として妥当なものは、<code>none</code>、<code>copy</code>、<code>move</code>、または <code>link</code> のみです。このプロパティへは、複数の操作を組み合わせた値は指定できません。</p>\n<p><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code> および <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code> イベントにおいて、 <a href=\"/ja/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> プロパティはユーザーが要求している操作に初期化されます。ユーザーは操作の種類を修飾キーを押すことにより変更することができます。実際に使用されるキーはプラットフォームごとに異なりますが、大抵の場合は <kbd>Shift</kbd> キーと <kbd>Control</kbd> キーが、コピー・移動・リンクの各操作の切り替えに使われるでしょう。マウスポインターはどの操作が望まれているのかを示すために、例えば <code>copy</code> ならカーソルの横に「＋」記号が表示される、といった風に変化するでしょう。</p>\n<p><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code> または <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code> イベントの間に <a href=\"/ja/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> プロパティの値を変更すると、ユーザーが選択した操作の種類を上書きし、特定のドロップ操作を強制することができます。この時に指定できる操作の種類は、 <a href=\"/ja/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> プロパティの値として列挙されている操作に含まれていなくてはならないことに注意してください。それ以外の値を設定した場合は、許可されている操作の中から代わりの値が設定されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>dropEffect <span class=\"token operator\">=</span> <span class=\"token string\">\"copy\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この例では、「コピー」が行なわれる効果です。</p>\n<p>その場所へのドロップが禁止されていることを示すために、値として <code>none</code> を設定することもできます。</p>\n<p><code><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">drop (en-US)</a></code> および <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code> イベントの中では、 <a href=\"/ja/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> プロパティをチェックすることで最終的に選択されている効果を特定できます。選択された効果が \"<code>move</code>\" であれば、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code> イベントの中でドラッグ元から元のデータを削除するべきです。</p>"}},{"type":"prose","value":{"id":"ドロップ先の指定","title":"ドロップ先の指定","isH3":false,"content":"<p><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code> および <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code> イベントのリスナーは、ドラッグされている項目がどの場所にドロップされようとしているのかを正確に示す働きをすることが多いです。ウェブページやアプリケーションのほとんどの領域は、ドロップデータを受け取る場所としては不適切です。従って、これらのイベントに対する既定の動作はドロップを禁止する働きをします。</p>\n<p>ドロップを許可したい場合は、 <code>dragenter</code> および <code>dragover</code> イベントの両方をキャンセルして、既定の処理を防ぐ必要があります。これを行うには、属性に定義されたイベントリスナーから <code>false</code> を返すか、イベントの <a href=\"/ja/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> メソッドを呼び出す必要があります。独立したスクリプトで定義した関数では、後者の方が実現性が高いかもしれません。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ondragover</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>return false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ondragover</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>event.preventDefault()<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p><a href=\"/ja/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> メソッドを呼び出すと、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code> および <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code> イベントのどちらにおいても、 その場所がドロップ可能な場所であるということを示します。多くの場合は、例えばリンクがドラッグされている時だけなど、特定の状況でのみ <a href=\"/ja/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> メソッドを呼び出したいと思うでしょう。</p>\n<p>これを実現するには、条件を確かめて、条件が満たされている時だけイベントをキャンセルするような関数を使って下さい。条件が満たされていない時はイベントをキャンセルしないでおけば、ユーザーがマウスのボタンを放してもその場所へのドロップは行われません。</p>\n<p>ドロップを受け付けるか拒絶するかを決める最も一般的な方法は、データ転送の仕組みに含まれているドラッグデータの型を判別するものです。例えば、画像やリンク、もしくはその両方のみを受け付けるといった事ができます。これを実現するには、イベントの <a href=\"/ja/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a> (プロパティ) の <a href=\"/ja/docs/Web/API/DataTransfer/types\" title=\"types\"><code>types</code></a> プロパティを確認します。 types プロパティはドラッグが開始された時に登録されたタイプ文字列のリストで、最も適切なものから最も適切でないものの順で並んでいます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">doDragOver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isLink <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLink<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この例では、型のリストの中に <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#link\">text/uri-list</a> 型があるかどうかを確認するために <code>contains</code> メソッドを使用しています。もし条件が真であれば、イベントはキャンセルされて、ドロップが許可されるでしょう。もしドラッグデータがリンクを含んでいなければ、イベントはキャンセルされず、その場所でのドロップも行われません。</p>\n<p>実際に行われる処理の種類をより適切に示すために、 <a href=\"/ja/docs/Web/API/DataTransfer/effectAllowed\" title=\"effectAllowed\"><code>effectAllowed</code></a> や <a href=\"/ja/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> プロパティのいずれか、あるいはその両方に値を指定したいと思う事もあるでしょう。当然ですが、イベントをキャンセルするのを忘れると、これらのプロパティの値を変えても何も起こりません。</p>"}},{"type":"prose","value":{"id":"ドロップのフィードバック","title":"ドロップのフィードバック","isH3":false,"content":"<p>その場所へのドロップが許可されていることをユーザーに示す方法はいくつかあります。マウスポインターは <a href=\"/ja/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> プロパティの値に応じて適切なものに変化します。</p>\n<p>実際の正確な表示のされ方はユーザーのプラットフォームに依存しますが、通常は例えば「コピー」に対しては「＋」記号が表示され、また、ドロップが許可されていない時は「ここにはドロップできません」という意味のアイコンが表示されるでしょう。多くの場合において、このポインターによるフィードバックは十分に役立ちます。</p>\n<p>それ以外にも必要に応じて、ユーザーインターフェースを更新して挿入箇所を示したりハイライト表示したりすることもできます。単にハイライト表示するだけであれば、ドロップ対象において CSS の <code>-moz-drag-over</code> 擬似クラスが利用できます。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.droparea:-moz-drag-over</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">outline</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この例において<code>droparea</code>クラスの要素は、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code> イベントの中で <a href=\"/ja/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> メソッドが呼ばれて有効なドロップ対象となっている間、 1 ピクセルの黒い枠が表示されます。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> この擬似クラスは <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code> イベントでの状態の変化には反応しませんので、この擬似クラスでの指定を適用させるには <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code> イベントをキャンセルしなくてはならない事に注意してください。</p>\n</div>\n<p>より凝った視覚効果のために、例えばドロップが行われる位置に要素を挿入するなど、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code> イベントの間に他の操作をすることもできます。この例なら、挿入される要素は、挿入箇所を示すマーカーあるいはドラッグされている要素が新しい位置に挿入された時の状態のプレビューなどとして利用できるでしょう。このような効果は、例えば <a href=\"/ja/XUL/image\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">image</a> または <a href=\"/ja/XUL/separator\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">separator</a> 要素を生成して、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code> イベントの処理中にドキュメント中に単に挿入するだけで実現できます。</p>\n<p><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code> イベントは、マウスポインターが現在指している要素において発行されます。挿入点のマーカーを <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code> イベントの発行に応じて移動させたいと思うのは自然な欲求でしょう。そのような場合には、他のマウスイベントでマウスポインターの位置を取得するために使われるのと同じ要領で、イベントの <a href=\"/ja/docs/Web/API/MouseEvent/clientX\" title=\"clientX\"><code>clientX</code></a> と <a href=\"/ja/docs/Web/API/MouseEvent/clientY\" title=\"clientY\"><code>clientY</code></a> プロパティを利用できます。</p>\n<p>最後に、ドラッグ中にマウスポインターが要素の上を離れる時、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragleave_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragleave (en-US)</a></code> イベントが発行されます。これは挿入点のマーカーやハイライト表示を消すのにちょうどいいタイミングです。このイベントをキャンセルする必要はありません。 <code>-moz-drag-over</code> 擬似クラスを使って指定されたハイライト表示やその他の視覚効果は、すべて自動的に消去されます。 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragleave_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragleave (en-US)</a></code> イベントは、ドラッグがキャンセルされた時でも常に発行されますので、このイベントによって、挿入点の消去などを確実に行うことができます。</p>"}},{"type":"prose","value":{"id":"ドロップの実行","title":"ドロップの実行","isH3":false,"content":"<p>ユーザーがマウスのボタンを離した時、ドラッグ＆ドロップの操作は終了します。</p>\n<p>有効なドロップ対象となっている要素の上でマウスのボタンが離された場合、最後の <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragenter_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragenter (en-US)</a></code> と <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code> イベントはキャンセルされて、ドロップが成功し、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">drop (en-US)</a></code> イベントがそのドロップ対象において発行されます。それ以外の場所でボタンが放された場合は、ドラッグ操作はキャンセルされ、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">drop (en-US)</a></code> イベントは発行されません。</p>\n<p><code><a href=\"/en-US/docs/Web/API/HTMLElement/drop_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">drop (en-US)</a></code> イベントの間、あなたはドロップされたデータをイベントから取得して、ドロップ位置に挿入することになります。どのドラッグ＆ドロップ操作が望まれていたのかは、 <a href=\"/ja/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> プロパティで判別することができます。</p>\n<p>すべてのドラッグ＆ドロップ関連のイベントにおいて、イベントの <a href=\"/ja/docs/Web/API/DragEvent/dataTransfer\" title=\"dataTransfer\"><code>dataTransfer</code></a> プロパティはドラッグされた対象に関するデータを保持しています。データの取得には <a href=\"/ja/docs/Web/API/DataTransfer/getData\" title=\"getData()\"><code>getData()</code></a> メソッドを利用することになるでしょう。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">onDrop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><a href=\"/ja/docs/Web/API/DataTransfer/getData\" title=\"getData()\"><code>getData()</code></a> メソッドは、取得したいデータの型を引数として取ります。実行すると、ドラッグ操作の開始時に <a href=\"/ja/docs/Web/API/DataTransfer/setData\" title=\"setData()\"><code>setData()</code></a> メソッドによって登録された値が文字列として返されます。その型に対するデータが存在しない場合は、空文字が返されます。当然ながら、直前の <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragover_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragover (en-US)</a></code> イベントでの処理においてチェックした時と同様に、あなたはデータの正しい形式が利用可能かどうかを知りたいと思うでしょう。</p>\n<p>上記の例では、まずデータを取得し、ドロップ対象の内容テキストとしてそれを挿入しています。これは <code>p</code> 要素や <code>div</code> 要素がドロップ対象の領域として使われる事を想定しており、ドラッグされたテキストをドロップ位置に挿入するという効果をもたらします。</p>\n<p>ウェブページにおいては、ドロップを受け付けた場合、イベントの <a href=\"/ja/docs/Web/API/Event/preventDefault\" title=\"preventDefault()\"><code>preventDefault()</code></a> メソッドを呼び出すべきです。これによって、ブラウザ内でのドロップ時の既定の挙動がキャンセルされます。例えば、リンクがウェブページにドロップされた場合、 Firefox はそのリンク先を読み込もうとします。イベントをキャンセルすることで、この動作は抑止されます。</p>\n<p>他の形式でデータを取得することもできます。データがリンクであった場合、そのデータは <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#link\"><code>text/uri-list</code></a> 型でも提供されているでしょう。その場合、リンクを内容に挿入することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">doDrop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> lines <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lines<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">line</span> <span class=\"token operator\">=&gt;</span> <span class=\"token operator\">!</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">line</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> line<span class=\"token punctuation\">;</span>\n      link<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> line<span class=\"token punctuation\">;</span>\n      event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この例は、ドラッグされたデータからリンクを挿入します。名前から想像できる通り、 <a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#link\"><code>text/uri-list</code></a> 型は実際に複数の URL の改行区切りのリストを含んでいる場合があります。このコードでは、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String/split\"><code>split</code></a> を使って文字列を行ごとに分割し、各行に繰り返し処理を行って、それぞれをリンクとして文書中に挿入しています。ナンバー記号 (<code>#</code>) で始まるものはコメントとして除外していることに注意してください。</p>\n<p>単純な使い方として、リストの中の最初の有効な URL を取得するために、特別な型 <code>URL</code> も利用できます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"URL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これによって、コメントの除外などの処理は一切不要になります。しかし、これはリストの中の最初の URL だけしか取得できないという制限があります。</p>\n<p><code>URL</code> 型は特別な省略表記用の型で、 <a href=\"/ja/docs/Web/API/DataTransfer/types\" title=\"types\"><code>types</code></a> プロパティで取得できる型のリストには列挙されません。</p>\n<p>時には、複数の形式をサポートして、そのうち最も適切な形式で提供されたデータを取得したいと思う事もあるでしょう。以下の例では、3 つの形式がドロップ対象によってサポートされています。</p>\n<p>以下の例は、提供されたデータの中で最も適切なデータを返す例です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">doDrop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> supportedTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"application/x-moz-file\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/uri-list\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> types <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">type</span> <span class=\"token operator\">=&gt;</span> supportedTypes<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>types<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ドラッグの終了","title":"ドラッグの終了","isH3":false,"content":"<p>ドラッグ操作が終了すると、 <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code> イベントがドラッグ元 (<code><a href=\"/en-US/docs/Web/API/HTMLElement/dragstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragstart (en-US)</a></code> イベントが発行されるのと同じ要素) において発行されます。このイベントは、ドラッグ操作が成功したかキャンセルされたかに関わらず発行されます。どの操作が行われたのかは、 <a href=\"/ja/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> プロパティを参照して知ることができます。</p>\n<p><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code> イベントにおいて <a href=\"/ja/docs/Web/API/DataTransfer/dropEffect\" title=\"dropEffect\"><code>dropEffect</code></a> プロパティの値が<code>none</code>である場合、ドラッグ操作がキャンセルされたことを意味します。それ以外の場合は、プロパティの値は実際に行われた操作の種類を示します。ドラッグ元はこの情報に基づいて、ドラッグされた項目を「移動」の操作の後に元の場所から削除することができます。 <a href=\"/ja/docs/Web/API/DataTransfer/mozUserCancelled\" title=\"mozUserCancelled\"><code>mozUserCancelled</code></a> プロパティの値は、ユーザーが（Escape キーを押すなどして）ドラッグ操作をキャンセルした場合は true となり、不正なドロップ先だった場合などの他の理由でドラッグ操作がキャンセルされた場合や、ドロップに成功した場合は false となります。</p>\n<p>ドロップ操作は同じウィンドウの中または他のアプリケーションの上で行われ得ます。いずれの場合も常に <code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code> イベントは発行されます。このイベントの <a href=\"/ja/docs/Web/API/MouseEvent/screenX\" title=\"screenX\"><code>screenX</code></a> および <a href=\"/ja/docs/Web/API/MouseEvent/screenY\" title=\"screenY\"><code>screenY</code></a> プロパティの値には、ドロップが行われたときの画面上での座標が設定されます。</p>\n<p><code><a href=\"/en-US/docs/Web/API/HTMLElement/dragend_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">dragend (en-US)</a></code> イベントの伝搬が終了した後、ドラッグ＆ドロップの操作は完了します。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API\">HTML ドラッグ＆ドロップ API (概要)</a></li>\n  <li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Multiple_items\">複数の項目のドラッグ＆ドロップ</a></li>\n  <li><a href=\"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">推奨されるドラッグ型</a></li>\n  <li><a href=\"https://html.spec.whatwg.org/multipage/interaction.html#dnd\" class=\"external\" rel=\" noopener\">HTML5 Living Standard: Drag and Drop</a></li>\n</ul>"}}],"toc":[{"text":"draggable 属性","id":"draggable_属性"},{"text":"ドラッグ操作の開始","id":"ドラッグ操作の開始"},{"text":"ドラッグデータ","id":"ドラッグデータ"},{"text":"ドラッグのフィードバック画像の設定","id":"ドラッグのフィードバック画像の設定"},{"text":"ドラッグの効果","id":"ドラッグの効果"},{"text":"ドロップ先の指定","id":"ドロップ先の指定"},{"text":"ドロップのフィードバック","id":"ドロップのフィードバック"},{"text":"ドロップの実行","id":"ドロップの実行"},{"text":"ドラッグの終了","id":"ドラッグの終了"},{"text":"関連情報","id":"関連情報"}],"summary":"以下は、ドラッグ＆ドロップ操作が行われる時の各段階についての解説です。","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Drag operations","locale":"en-US","native":"English (US)"},{"title":"Opérations de glissement","locale":"fr","native":"Français"},{"title":"Drag Operations","locale":"ko","native":"한국어"},{"title":"Drag Operations","locale":"ru","native":"Русский"},{"title":"拖拽操作","locale":"zh-CN","native":"中文 (简体)"},{"title":"拖曳操作","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/html_drag_and_drop_api/drag_operations","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/html_drag_and_drop_api/drag_operations/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/HTML_Drag_and_Drop_API","title":"HTML ドラッグ＆ドロップ API"},{"uri":"/ja/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations","title":"ドラッグ操作"}],"pageTitle":"ドラッグ操作 - Web API | MDN","noIndexing":false}}