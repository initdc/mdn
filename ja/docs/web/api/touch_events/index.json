{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"タッチイベント","mdn_url":"/ja/docs/Web/API/Touch_events","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Touch_events\">Touch events</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/Touch_events/Using_Touch_Events\">Using Touch Events</a></li><li><a href=\"/ja/docs/Web/API/Touch_events/Multi-touch_interaction\">Multi-touch interaction</a></li><li><a href=\"/ja/docs/Web/API/Pointer_events\">Pointer events</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/Touch\"><code>Touch</code></a></li><li><a href=\"/ja/docs/Web/API/TouchEvent\"><code>TouchEvent</code></a></li><li><a href=\"/ja/docs/Web/API/TouchList\"><code>TouchList</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/Element/touchcancel_event\"><code>Element</code>: <code>touchcancel</code></a></li><li><a href=\"/ja/docs/Web/API/Element/touchend_event\"><code>Element</code>: <code>touchend</code></a></li><li><a href=\"/ja/docs/Web/API/Element/touchmove_event\"><code>Element</code>: <code>touchmove</code></a></li><li><a href=\"/ja/docs/Web/API/Element/touchstart_event\"><code>Element</code>: <code>touchstart</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>タッチベースのユーザーインターフェイスを高度にサポートするため、端末やトラックパッドでの指 (あるいはスタイラス) の動きを解釈する機能を、タッチイベントが提供します。</p>\n<p>タッチイベントのインターフェイスは、2 本の指によるジェスチャーなどアプリケーション固有のマルチタッチ操作に対応するために使用できる、比較的低レベルの API です。マルチタッチ操作は、1 本の指 (またはスタイラス) が始めにタッチ面へタッチしたときから始まります。その後に他の指をタッチすることができ、さらに任意でサーフェス上で動かします。指をサーフェスから離すと、操作が終了します。操作している間、アプリケーションは開始・移動・終了の各段階中にタッチイベントを受け取ります。</p>\n<p>タッチイベントはマウスイベントに似ていますが、タッチサーフェス上の異なる場所で同時に発生するタッチに対応することが異なります。<a href=\"/ja/docs/Web/API/TouchEvent\"><code>TouchEvent</code></a> インターフェイスは、現在アクティブなすべてのタッチ箇所を包含します。<a href=\"/ja/docs/Web/API/Touch\"><code>Touch</code></a> インターフェイスはひとつのタッチ箇所を表し、ブラウザのビューポートを基準にしたタッチ個所の位置などの情報を含みます。</p>"}},{"type":"prose","value":{"id":"定義","title":"定義","isH3":false,"content":"<dl>\n  <dt id=\"タッチ面\">タッチ面</dt>\n  <dd>\n    <p>タッチに反応する面。画面であったりトラックパッドであったりする可能性があります。</p>\n  </dd>\n</dl><!---->\n<dl>\n  <dt id=\"タッチ箇所\">タッチ箇所</dt>\n  <dd>\n    <p>タッチ面に接触した点。これは指 (あるいはひじ、耳、鼻などでもよいのですが、たいてい指でしょう) またはスタイラスでしょう。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"インターフェイス","title":"インターフェイス","isH3":false,"content":"<dl>\n  <dt id=\"touchevent\"><a href=\"/ja/docs/Web/API/TouchEvent\"><code>TouchEvent</code></a></dt>\n  <dd>\n    <p>タッチ面でタッチ状態が変化したときに発生するイベントを表します。</p>\n  </dd>\n  <dt id=\"touch\"><a href=\"/ja/docs/Web/API/Touch\"><code>Touch</code></a></dt>\n  <dd>\n    <p>ユーザーとタッチタッチ面が接した点 1 個を表します。</p>\n  </dd>\n  <dt id=\"touchlist\"><a href=\"/ja/docs/Web/API/TouchList\"><code>TouchList</code></a></dt>\n  <dd>\n    <p>タッチのグループを表します。例えば、ユーザーが複数の指を同時にタッチ面上に置いた場合に使用します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>ここでは一度に複数のタッチ箇所を取得しており、ユーザーが一度に複数の指で <a href=\"/ja/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> に描くことができるようになっています。このサンプルはタッチイベントに対応するブラウザーのみで動作します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> ここからはタッチ面への接触を表すときに \"指\" という表現を使用しますが、当然ながらスタイラスなど他の接触法も使用できます。</p>\n</div>"}},{"type":"prose","value":{"id":"canvas_を生成する","title":"canvas を生成する","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>600<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span>solid black 1px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  Your browser does not support canvas element.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span>\nLog: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #ccc<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"イベントハンドラーの設定","title":"イベントハンドラーの設定","isH3":true,"content":"<p>ページを読み込むとき、以下の <code>startup()</code> 関数が呼び出されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">startup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span> handleStart<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchend\"</span><span class=\"token punctuation\">,</span> handleEnd<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchcancel\"</span><span class=\"token punctuation\">,</span> handleCancel<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchmove\"</span><span class=\"token punctuation\">,</span> handleMove<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DOMContentLoaded\"</span><span class=\"token punctuation\">,</span> startup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これは単に <a href=\"/ja/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 要素へすべてのイベントリスナーを設定している関数であり、タッチイベントの発生に応じて扱うことができるようになります。</p>\n<h4 id=\"新たなタッチの追跡\">新たなタッチの追跡</h4>\n<p>進行中のタッチを追跡し続けます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> ongoingTouches <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>タッチ面上で新たなタッチが発生したことを示す <code><a href=\"/en-US/docs/Web/API/Element/touchstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchstart (en-US)</a></code> イベントが発生すると、<code>handleStart()</code> 関数を呼び出します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleStart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> touches <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> touches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart:\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">copyTouch</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// a circle at the start</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchstart:\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ここでは、ブラウザーがタッチイベントの処理を続けないようにするため <a href=\"/ja/docs/Web/API/Event/preventDefault\"><code>event.preventDefault()</code></a> を呼び出します (また、マウスイベントの伝達も抑止します)。そしてコンテキストを取得して、イベントの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/TouchEvent/changedTouches\"><code>TouchEvent.changedTouches</code> <small>(en-US)</small></a> プロパティから変化したタッチ箇所のリストを取り込みます。</p>\n<p>その後に、リスト内のすべての <a href=\"/ja/docs/Web/API/Touch\"><code>Touch</code></a> オブジェクトを走査してアクティブなタッチ箇所の配列に送り込み、描画を開始する位置に小さな丸印を描画します。この例では 4 ピクセル幅の線を使用しますので、半径 4 ピクセルの円がきれいに見えます。</p>\n<h4 id=\"タッチの移動に合わせた描画\">タッチの移動に合わせた描画</h4>\n<p>1 本以上の指が移動するたびに <a href=\"/ja/docs/Web/API/Element/touchmove_event\" title=\"touchmove\"><code>touchmove</code></a> イベントが発生しますので、その結果 <code>handleMove()</code> 関数が呼び出されます。これはキャッシュしたタッチ情報を更新して、タッチごとに以前の位置から現在の位置まで線を描画する役割を担っています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> touches <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> touches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"continuing touch \"</span><span class=\"token operator\">+</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ctx.moveTo(\"</span> <span class=\"token operator\">+</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY <span class=\"token operator\">+</span> <span class=\"token string\">\");\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ctx.lineTo(\"</span> <span class=\"token operator\">+</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY <span class=\"token operator\">+</span> <span class=\"token string\">\");\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">copyTouch</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// swap in the new touch record</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"can't figure out which touch to continue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これは同様に変更されたタッチに対して走査していますが、各タッチで新たに描画する線分の開始点を検出するために、各タッチの以前の情報についてキャッシュしたタッチ情報の配列を参照しています。これは、各タッチの <a href=\"/ja/docs/Web/API/Touch/identifier\"><code>Touch.identifier</code></a> プロパティを確認して行います。このプロパティは各タッチで一意の識別子であり、指とタッチ面との接触が続いている間、値が固定されます。</p>\n<p>これにより各タッチの前の位置の座標を取得して、2 つの点を結ぶ線分を描画するために適切なコンテキストメソッドを使用できます。</p>\n<p>線分を描画した後、前のタッチ箇所の情報を <code>ongoingTouches</code> 配列内にある現在の情報に置き換えるため、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.splice()</code></a> を呼び出します。</p>\n<h4 id=\"タッチの終了を制御する\">タッチの終了を制御する</h4>\n<p>ユーザーがタッチ面から指を離すと <a href=\"/ja/docs/Web/API/Element/touchend_event\" title=\"touchend\"><code>touchend</code></a> イベントが発生します。私たちはこれらの両方を、以下の <code>handleEnd()</code> 関数を呼び出すというひとつの方法で扱います。この関数の役割は、終了したタッチについて最後の線分を描画することと、継続中のタッチのリストからタッチ箇所を削除することです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleEnd</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchend\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> touches <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> touches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>idx <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> ongoingTouches<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pageY <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// and a square at the end</span>\n      ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// remove it; we're done</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"can't figure out which touch to end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これは前の関数にとても似ていますが、終端を表す小さな四角形を描画することと、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.splice()</code></a> を呼び出して、更新後の情報を追加せずに継続中のタッチリストから古い項目を削除することが異なります。この結果、タッチ箇所の追跡を停止します。</p>\n<h4 id=\"取り消されたタッチを制御する\">取り消されたタッチを制御する</h4>\n<p>ユーザーの指がブラウザーの UI に入り込んだり、その他にタッチをキャンセルしなければならないときには <a href=\"/ja/docs/Web/API/Element/touchcancel_event\" title=\"touchcancel\"><code>touchcancel</code></a> イベントが発生して、以下の <code>handleCancel()</code> 関数が実行されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleCancel</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"touchcancel.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> touches <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> touches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> idx <span class=\"token operator\">=</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ongoingTouches<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// remove it; we're done</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>即座にタッチを取り消すという考え方から最終の線分を描画せずに、継続中のタッチリストから単純にタッチを削除します。</p>"}},{"type":"prose","value":{"id":"便利な関数","title":"便利な関数","isH3":true,"content":"<p>この例ではコードの残りの部分をより明確にすることを助ける、簡単に見ておくべきである 2 つの便利な関数を使用しています。</p>\n<h4 id=\"それぞれのタッチの色を選択する\">それぞれのタッチの色を選択する</h4>\n<p>それぞれのタッチの外見を区別して描画するために、タッチの一意な識別子を元に色を選択する <code>colorForTouch()</code> 関数を使用します。この識別子は不明瞭な数値ですが、少なくとも現在アクティブなタッチを区別することはできます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">colorForTouch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">touch</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> touch<span class=\"token punctuation\">.</span>identifier <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>identifier <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>identifier <span class=\"token operator\">/</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n  r <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// make it a hex digit</span>\n  g <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// make it a hex digit</span>\n  b <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// make it a hex digit</span>\n  <span class=\"token keyword\">var</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"#\"</span> <span class=\"token operator\">+</span> r <span class=\"token operator\">+</span> g <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color for touch with identifier \"</span> <span class=\"token operator\">+</span> touch<span class=\"token punctuation\">.</span>identifier <span class=\"token operator\">+</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">+</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この関数の返値は、描画色を設定するために <a href=\"/ja/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 関数を呼び出すときに使用できる文字列です。例えば <a href=\"/ja/docs/Web/API/Touch/identifier\"><code>Touch.identifier</code></a> の値が 10 であれば、戻り値は文字列 \"#aaa\" になります。</p>\n<h4 id=\"touch_オブジェクトのコピー\">touch オブジェクトのコピー</h4>\n<p>一部のブラウザー (例えばモバイル版 Safari) はイベント間で touch オブジェクトを再使用するため、オブジェクト全体を参照するよりも、関心がある部分をコピーするほうが最善です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">copyTouch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> identifier<span class=\"token punctuation\">,</span> pageX<span class=\"token punctuation\">,</span> pageY <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> identifier<span class=\"token punctuation\">,</span> pageX<span class=\"token punctuation\">,</span> pageY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"継続中のタッチを発見する\">継続中のタッチを発見する</h4>\n<p>以下の <code>ongoingTouchIndexById()</code> 関数は、指定した識別にマッチするタッチを見つけるために配列 <code>ongoingTouches</code> を探索して、そのタッチの配列内における添字を返します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">ongoingTouchIndexById</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">idToFind</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> ongoingTouches<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> ongoingTouches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>identifier<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">==</span> idToFind<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// not found</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"何を行っているか表示する\">何を行っているか表示する</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  p<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> msg <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ブラウザーが対応していれば、<a href=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Touch_events/_sample_.Example.html\" class=\"external\" rel=\" noopener\">実際に試す</a> ことができます。</p>\n<p><a href=\"http://jsfiddle.net/Darbicus/z3Xdx/10/\" class=\"external\" rel=\" noopener\">jsFiddle example</a></p>"}},{"type":"prose","value":{"id":"追加の豆知識","title":"追加の豆知識","isH3":false,"content":"<p>この章ではウェブアプリケーションでタッチイベントを扱う方法について、追加の豆知識を紹介します。</p>"}},{"type":"prose","value":{"id":"クリックを制御する","title":"クリックを制御する","isH3":true,"content":"<p><code><a href=\"/en-US/docs/Web/API/Element/touchstart_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">touchstart (en-US)</a></code> あるいは一連の中で最初の <a href=\"/ja/docs/Web/API/Element/touchmove_event\" title=\"touchmove\"><code>touchmove</code></a> で <code>preventDefault()</code> を呼び出すと対応するマウスイベントの発生を抑制できるため、 <code>touchstart</code> よりも <code>touchmove</code> で <code>preventDefault()</code> を呼び出すことが一般的です。この方法では従来どおりマウスイベントが発生して、リンクなどが引き続き動作します。代わりに一部のフレームワークでは同様の目的で、タッチイベントをマウスイベントとして再発生させています。(この例は過度に単純化しており、奇妙な動作になるかもしれません。ガイドとして掲載しているに過ぎません。)</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">onTouch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>touches<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>type <span class=\"token operator\">==</span> <span class=\"token string\">\"touchend\"</span> <span class=\"token operator\">&amp;&amp;</span> evt<span class=\"token punctuation\">.</span>touches<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> newEvt <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MouseEvents\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> touch <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"touchstart\"</span><span class=\"token operator\">:</span>\n      type <span class=\"token operator\">=</span> <span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">;</span>\n      touch <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"touchmove\"</span><span class=\"token operator\">:</span>\n      type <span class=\"token operator\">=</span> <span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">;</span>\n      touch <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"touchend\"</span><span class=\"token operator\">:</span>\n      type <span class=\"token operator\">=</span> <span class=\"token string\">\"mouseup\"</span><span class=\"token punctuation\">;</span>\n      touch <span class=\"token operator\">=</span> evt<span class=\"token punctuation\">.</span>changedTouches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  newEvt<span class=\"token punctuation\">.</span><span class=\"token function\">initMouseEvent</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>originalTarget<span class=\"token punctuation\">.</span>ownerDocument<span class=\"token punctuation\">.</span>defaultView<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    touch<span class=\"token punctuation\">.</span>screenX<span class=\"token punctuation\">,</span> touch<span class=\"token punctuation\">.</span>screenY<span class=\"token punctuation\">,</span> touch<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> touch<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">,</span>\n    evt<span class=\"token punctuation\">.</span>ctrlKey<span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>altKey<span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>shiftKey<span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span>metaKey<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  evt<span class=\"token punctuation\">.</span>originalTarget<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>newEvt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"2_番目のタッチのみで_preventdefault_を呼び出す","title":"2 番目のタッチのみで preventDefault() を呼び出す","isH3":true,"content":"<p>ページ上で <code>pinchZoom</code> と言った操作を防ぐテクニックのひとつとして、一連のタッチの 2 番目で <code>preventDefault()</code> を呼び出す方法があります。この動作はタッチイベントの仕様書で明示されておらず、ブラウザーによって結果が異なります (iOS ではズームを防ぎますが、パンは可能です。Android はズームが可能ですが、パンはできません。Opera および Firefox は現状、パンもズームも防ぎます)。現在、このケースで特定の動作に依存することは推奨されず、メタビューポートのズームを防ぐと考えてください。</p>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>状態</th>\n      <th>備考</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/touch-events/#touch-interface\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Touch Events – Level 2<br><small lang=\"ja\">Touch の定義</small></a></td>\n      <td><span class=\"spec-draft\">ドラフト</span></td>\n      <td><code>radiusX</code>, <code>radiusY</code>, <code>rotationAngle</code>, <code>force</code> プロパティを追加。</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.w3.org/TR/touch-events/#touch-interface\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Touch Events<br><small lang=\"ja\">Touch の定義</small></a></td>\n      <td><span class=\"spec-rec\">勧告</span></td>\n      <td>初回定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"ブラウザーの互換性","title":"ブラウザーの互換性","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"Touch","id":"touch_2","isH3":true,"query":"api.Touch","dataURL":"/ja/docs/Web/API/Touch_events/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>タッチイベントは通常、タッチ画面を備えた端末で使用できますが、多くのブラウザーは、タッチ画面を備えたものであっても、すべてのデスクトップ端末でタッチイベント API をできないようにしています。</p>\n<p>これは、一部のウェブサイトで、タッチイベント API の一部が利用できることが、ブラウザーがモバイル端末で実行されていることを示す指標として使用されているためです。タッチイベント API が利用可能な場合、これらのウェブサイトはモバイル端末を想定し、モバイルに最適化されたコンテンツを配信します。その結果、タッチ画面を搭載したデスクトップ端末のユーザーにとっては、使い勝手が悪くなる可能性があります。</p>\n<p>すべての種類の端末でタッチとマウスの両方に対応するには、代わりに<a href=\"/ja/docs/Web/API/Pointer_events\">ポインターイベント</a>を使用してください。</p>"}},{"type":"prose","value":{"id":"firefox_のタッチイベントとマルチプロセス_e10s","title":"Firefox のタッチイベントとマルチプロセス (e10s)","isH3":true,"content":"<p>Firefox では、 e10s (electrolysis; <a href=\"/ja/docs/Mozilla/Firefox/Multiprocess_Firefox\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">multiprocess Firefox</a>) が無効になっていると、タッチイベントは無効になります。 Firefox では e10s が既定ででオンになっていますが、 e10s が機能しないようにする必要がある特定のアクセシビリティツールや Firefox アドオンがインストールされている場合など、特定の状況で無効になることがあります。つまり、タッチ画面対応のデスクトップ/ノートパソコンでも、タッチイベントは有効になりません。</p>\n<p>e10s が無効になっているかどうかをテストするには、 <code>about:support</code> に移動し、 \"Application Basics\" セクションの \"Multiprocess Windows\" エントリを調べます。 1/1 は有効、 0/1 は無効を意味します。</p>\n<p>タッチイベントの対応を明示的に再度有効にするために e10s を強制的にオンにしたい場合は、 <code>about:config</code> に移動して新しいブール設定 <code>browser.tabs.remote.force-enable</code> を作成する必要があります。 <code>true</code> に設定してブラウザーを再起動すると、他の設定に関係なく e10s が有効になります。</p>"}}],"toc":[{"text":"定義","id":"定義"},{"text":"インターフェイス","id":"インターフェイス"},{"text":"例","id":"例"},{"text":"追加の豆知識","id":"追加の豆知識"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"タッチベースのユーザーインターフェイスを高度にサポートするため、端末やトラックパッドでの指 (あるいはスタイラス) の動きを解釈する機能を、タッチイベントが提供します。","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Touch events","locale":"en-US","native":"English (US)"},{"title":"Eventos de toque","locale":"es","native":"Español"},{"title":"Évènements tactiles","locale":"fr","native":"Français"},{"title":"Touch events","locale":"ko","native":"한국어"},{"title":"Eventos do Toque","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"События касаний (тач-события)","locale":"ru","native":"Русский"},{"title":"触摸事件","locale":"zh-CN","native":"中文 (简体)"},{"title":"觸控事件","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/touch_events","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/touch_events/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Touch_events","title":"タッチイベント"}],"pageTitle":"タッチイベント - Web API | MDN","noIndexing":false}}