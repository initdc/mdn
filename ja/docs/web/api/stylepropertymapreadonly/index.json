{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"StylePropertyMapReadOnly","mdn_url":"/ja/docs/Web/API/StylePropertyMapReadOnly","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/CSS_Typed_OM_API\">CSS Typed OM API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/size\"><code>size</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/entries\"><code>entries()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/forEach\"><code>forEach()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/get\"><code>get()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/getAll\"><code>getAll()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/has\"><code>has()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/keys\"><code>keys()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/values\"><code>values()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>CSS Typed Object Model API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/CSSImageValue\"><code>CSSImageValue</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSKeywordValue\"><code>CSSKeywordValue</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSPositionValue\"><code>CSSPositionValue</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StylePropertyMap\"><code>StylePropertyMap</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>これは<a href=\"/ja/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">実験的な機能</a>です。</strong><br>本番で使用する前に<a href=\"#browser_compatibility\">ブラウザー互換性一覧表</a>をチェックしてください。</p></div>\n<p><strong><code>StylePropertyMapReadOnly</code></strong> は <a href=\"/ja/docs/Web/API/CSS_Object_Model#CSS_Typed_Object_Model\">CSS 型付きオブジェクトモデル API</a> のインターフェイスで、 <a href=\"/ja/docs/Web/API/CSSStyleDeclaration\"><code>CSSStyleDeclaration</code></a> の代替となる読み取り専用の CSS 宣言ブロックの表現を提供します。このインターフェイスのインスタンスを取得するには、 <a href=\"/ja/docs/Web/API/Element/computedStyleMap\" title=\"Element.computedStyleMap()\"><code>Element.computedStyleMap()</code></a> を使用してください。</p>"}},{"type":"prose","value":{"id":"プロパティ","title":"プロパティ","isH3":false,"content":"<dl>\n  <dt id=\"stylepropertymapreadonly.size\"><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/size\"><code>StylePropertyMapReadOnly.size</code></a></dt>\n  <dd>\n    <p><code>StylePropertyMapReadOnly</code> オブジェクトの大きさを、符号なし長整数値で返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":"<dl>\n  <dt id=\"stylepropertymapreadonly.entries\"><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/entries\"><code>StylePropertyMapReadOnly.entries()</code></a></dt>\n  <dd>\n    <p>このオブジェクト自身の列挙可能なプロパティ <code>[key, value]</code> の組を、 <a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for...in\"><code>for...in</code></a> ループが提供するものと同じ順序で配列として返します（違いは、 for-in ループがプロトタイプチェーン内のプロパティも列挙することです）。</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.foreach\"><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/forEach\"><code>StylePropertyMapReadOnly.forEach()</code></a></dt>\n  <dd>\n    <p>指定された関数を <code>StylePropertyMapReadOnly</code> のそれぞれの要素について 1 回ずつ実行します。</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.get\"><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/get\"><code>StylePropertyMapReadOnly.get()</code></a></dt>\n  <dd>\n    <p>指定されたプロパティの値を返します。</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.getall\"><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/getAll\"><code>StylePropertyMapReadOnly.getAll()</code></a></dt>\n  <dd>\n    <p>指定されたプロパティの値を含む <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code> <small>(en-US)</small></a> オブジェクトの配列を返します。</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.has\"><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/has\"><code>StylePropertyMapReadOnly.has()</code></a></dt>\n  <dd>\n    <p>指定されたプロパティが <code>StylePropertyMapReadOnly</code> オブジェクトにあるかどうかを示します。</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.keys\"><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/keys\"><code>StylePropertyMapReadOnly.keys()</code></a></dt>\n  <dd>\n    <p><code>StylePropertyMapReadOnly</code> 内のそれぞれの項目のキーを含む新しい<em>配列反復子</em>を返します。</p>\n  </dd>\n  <dt id=\"stylepropertymapreadonly.values\"><a href=\"/ja/docs/Web/API/StylePropertyMapReadOnly/values\"><code>StylePropertyMapReadOnly.values()</code></a></dt>\n  <dd>\n    <p><code>StylePropertyMapReadOnly</code> 内のそれぞれの項目の値を含む新しい<em>配列反復子</em>を返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>観察するための要素を用意します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n   これは、いくつかのテキストを含む段落です。 CSS を追加することもできますし、しないこともできます。スタイルマップには、既定のものと継承されたすべての CSS プロパティ値が含まれます。\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>出力をよりよくするに、カスタムプロパティで CSS を少々追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">--someVariable</span><span class=\"token punctuation\">:</span> 1.6em<span class=\"token punctuation\">;</span>\n   <span class=\"token property\">--someOtherVariable</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span>33vw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token property\">--anotherVariable</span><span class=\"token punctuation\">:</span> 42<span class=\"token punctuation\">;</span>\n   <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--someVariable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>JavaScript を追加して段落を取得し、 <a href=\"/ja/docs/Web/API/Element/computedStyleMap\"><code>Element.computedStyleMap()</code></a> を使って、すべての既定の CSS プロパティ値の定義リストを返します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 要素を取得</span>\n<span class=\"token keyword\">const</span> myElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 入力する &lt;dl&gt; を取得</span>\n<span class=\"token keyword\">const</span> stylesList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#output'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// computedStyleMap() ですべての計算済みスタイルを取得</span>\n<span class=\"token keyword\">const</span> stylePropertyMap <span class=\"token operator\">=</span> myElement<span class=\"token punctuation\">.</span><span class=\"token function\">computedStyleMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// すべてのプロパティと値のマップを反復処理して、それぞれ &lt;dt&gt; と &lt;dd&gt; を追加</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> stylePropertyMap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// プロパティ</span>\n  <span class=\"token keyword\">const</span> cssProperty <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cssProperty<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> prop<span class=\"token punctuation\">;</span>\n  stylesList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>cssProperty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 値</span>\n  <span class=\"token keyword\">const</span> cssValue <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cssValue<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n  stylesList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>cssValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"例\" id=\"frame_examples\" width=\"120\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/StylePropertyMapReadOnly/_sample_.examples.html\" loading=\"lazy\"></iframe>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://drafts.css-houdini.org/css-typed-om/#the-stylepropertymap","title":"CSS Typed OM Level 2"}],"query":"api.StylePropertyMapReadOnly"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.StylePropertyMapReadOnly","dataURL":"/ja/docs/Web/API/StylePropertyMapReadOnly/bcd.json"}}],"toc":[{"text":"プロパティ","id":"プロパティ"},{"text":"メソッド","id":"メソッド"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"StylePropertyMapReadOnly は CSS 型付きオブジェクトモデル API のインターフェイスで、 CSSStyleDeclaration の代替となる読み取り専用の CSS 宣言ブロックの表現を提供します。このインターフェイスのインスタンスを取得するには、 Element.computedStyleMap() を使用してください。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"StylePropertyMapReadOnly","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/stylepropertymapreadonly","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/stylepropertymapreadonly/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/StylePropertyMapReadOnly","title":"StylePropertyMapReadOnly"}],"pageTitle":"StylePropertyMapReadOnly - Web API | MDN","noIndexing":false}}