{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"DOMParser","mdn_url":"/ja/docs/Web/API/DOMParser","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/DOMParser\"><code>DOMParser</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMParser/DOMParser\"><code>DOMParser()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMParser/parseFromString\"><code>parseFromString()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>DOM に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/ja/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/ja/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/ja/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/ja/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/ja/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/ja/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/ja/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/ja/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/ja/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/ja/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/ja/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/ja/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/ja/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/ja/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/ja/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/ja/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/ja/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/ja/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/ja/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/ja/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/ja/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/ja/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/ja/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/ja/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/ja/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>DOMParser</code></strong> インターフェイスは、 <a href=\"/ja/docs/Glossary/XML\">XML</a> や <a href=\"/ja/docs/Glossary/HTML\">HTML</a> ソースコードを文字列から DOM の <a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a> に解釈する機能を提供します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> は URL で指すことができるリソースから直接 XML や HTML を解釈することができ、 <code>Document</code> を <a href=\"/ja/docs/Web/API/XMLHttpRequest/response\" title=\"response\"><code>response</code></a> プロパティでを返します。</p>\n</div>\n<p><a href=\"/ja/docs/Web/API/XMLSerializer\"><code>XMLSerializer</code></a> インターフェイスを使い、DOM ツリーを XML もしく HTML ソースに転換する、逆の操作を行うことができます。</p>\n<p>HTML 文書の場合、<a href=\"/ja/docs/Web/API/Element/innerHTML\"><code>Element.innerHTML</code></a> や <a href=\"/ja/docs/Web/API/Element/outerHTML\" title=\"outerHTML\"><code>outerHTML</code></a> プロパティの値を設定することで、HTML から構築された新しい DOM ツリーに一部分を置き換えることもできます。DOM のサブツリーに対応した HTML の要素を取り込むために、これらのプロパティを読み込むことも可能です。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">let domparser = new DOMParser()​​\n</pre>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":""}},{"type":"prose","value":{"id":"domparser.parsefromstring_en-us","title":"<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DOMParser/parseFromString\">DOMParser.parseFromString() <small>(en-US)</small></a>","isH3":true,"content":"<h4 id=\"構文_2\">構文</h4>\n<pre class=\"notranslate\">let doc = domparser.parseFromString(string, mimeType)\n</pre>\n<h4 id=\"返値\">返値</h4>\n<p><strong><a href=\"#argument02\"><code>mimeType</code></a></strong> 引数に依存した <a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a> もしくは <a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a>。</p>\n<h4 id=\"引数\">引数</h4>\n<p>このメソッドには 2 つの引数があります (両方とも必須):</p>\n<dl>\n  <dt id=\"string\"><code>string</code></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a> にパースされます。<a href=\"/ja/docs/Glossary/HTML\">HTML</a>、<a href=\"/ja/docs/Glossary/XML\">xml</a>、<a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\">xhtml+xml</a> もしくは <a href=\"/ja/docs/Glossary/SVG\">svg</a> 文書が含まれなければなりません。</p>\n  </dd>\n  <dt id=\"mimetype\"><code>mimeType</code></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a>。この文字列はメソッドの戻り値のクラスを決定します。メソッドの戻り値は下記の通りです:</p>\n    <table>\n      <thead>\n        <tr>\n          <th><code>mimeType</code></th>\n          <th><code>doc.constructor</code></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><code>text/html</code></td>\n          <td><code><a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a></code></td>\n        </tr>\n        <tr>\n          <td><code>text/xml</code></td>\n          <td><code><a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></code></td>\n        </tr>\n        <tr>\n          <td><code>application/xml</code></td>\n          <td><code><a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></code></td>\n        </tr>\n        <tr>\n          <td><code>application/xhtml+xml</code></td>\n          <td><code><a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></code></td>\n        </tr>\n        <tr>\n          <td><code>image/svg+xml</code></td>\n          <td><code><a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></code></td>\n        </tr>\n      </tbody>\n    </table>\n  </dd>\n</dl>","titleAsText":"DOMParser.parseFromString() (en-US)"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"xml_のパース","title":"XML のパース","isH3":true,"content":"<p>パーサーオブジェクトを作成すると、<code>parseFromString()</code> メソッドを用いて 文字列から XML をパースすることができます:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> parser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> doc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingXMLSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/xml\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h4 id=\"エラーのハンドリング\">エラーのハンドリング</h4>\n<p>現在は、パース処理に失敗した場合、<code>DOMParser</code> は例外をスローせず、代わりにエラー文書を返すという点に注意して下さい:</p>\n<div class=\"code-example\"><pre class=\"brush: xml notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>parsererror</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.mozilla.org/newlayout/xml/parsererror.xml<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  (error description)\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sourcetext</span><span class=\"token punctuation\">&gt;</span></span>(a snippet of the source XML)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sourcetext</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>parsererror</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>パースエラーは、ソースのエラー同様、<a href=\"/ja/docs/Error_Console\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">エラーコンソール</a> にもエラーの発生した文書の URI (後述) とともに表示されます。</p>"}},{"type":"prose","value":{"id":"svg_および_html_文書のパース","title":"SVG および HTML 文書のパース","isH3":true,"content":"<p><code>DOMParser</code> は SVG 文書のパース (Firefox 10.0 / Thunderbird 10.0 / SeaMonkey 2.7)、そして HTML 文書のパース (Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9) にも用いることができます。指定された MIME type によって 3 つの異なる結果となります。</p>\n<ol>\n  <li>MIME type が <code>text/xml</code> の場合、<code>XMLDocument</code> が返されます。</li>\n  <li>MIME type が <code>image/svg+xml</code> の場合、<code>SVGDocument</code> が返されます。</li>\n  <li>MIME type が <code>text/html</code> の場合、<code>HTMLDocument</code> が返されます。</li>\n</ol>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> parser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> doc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingXMLSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/xml\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Document を返しますが、 SVGDocument でも HTMLDocument でもありません</span>\n\nparser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndoc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingSVGSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"image/svg+xml\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// SVGDocument を返しますが、これも Document です。</span>\n\nparser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndoc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>stringContainingHTMLSource<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// HTMLDocument を返しますが、これも Document です。</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"domparser_html_拡張機能","title":"DOMParser HTML 拡張機能","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/*\n * DOMParser HTML extension\n * 2012-09-04\n *\n * By Eli Grey, http://eligrey.com\n * Public domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */</span>\n\n<span class=\"token comment\">/*! @source https://gist.github.com/1129031 */</span>\n<span class=\"token comment\">/*global document, DOMParser*/</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">DOMParser</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> proto <span class=\"token operator\">=</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">,</span>\n  nativeParse <span class=\"token operator\">=</span> proto<span class=\"token punctuation\">.</span>parseFromString<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Firefox/Opera/IE throw errors on unsupported types</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// WebKit returns null on unsupported types</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// text/html parsing is natively supported</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  proto<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">parseFromString</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">markup<span class=\"token punctuation\">,</span> type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s*text\\/html\\s*(?:;|$)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> doc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>implementation<span class=\"token punctuation\">.</span><span class=\"token function\">createHTMLDocument</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>markup<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;!doctype'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          doc<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> markup<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          doc<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> markup<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> doc<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">nativeParse</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span>DOMParser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>状態</th>\n      <th>備考</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://html.spec.whatwg.org/multipage/#dom-parsing-and-serialization\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">HTML Living Standard<br><small lang=\"ja\">DOM parsing の定義</small></a></td>\n      <td><span class=\"spec-living\">現行の標準</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.DOMParser","dataURL":"/ja/docs/Web/API/DOMParser/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/Guide/Parsing_and_serializing_XML\">XML のパースとシリアライズ</a></li>\n  <li><a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/XMLSerializer\"><code>XMLSerializer</code></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> - <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a> 文書での同様のページ</li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"メソッド","id":"メソッド"},{"text":"例","id":"例"},{"text":"DOMParser HTML 拡張機能","id":"domparser_html_拡張機能"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"DOMParser インターフェイスは、 XML や HTML ソースコードを文字列から DOM の Document に解釈する機能を提供します。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"DOMParser","locale":"en-US","native":"English (US)"},{"title":"DOMParser","locale":"es","native":"Español"},{"title":"DOMParser","locale":"fr","native":"Français"},{"title":"DOMParser","locale":"ko","native":"한국어"},{"title":"DOMParser","locale":"ru","native":"Русский"},{"title":"DOMParser","locale":"zh-CN","native":"中文 (简体)"},{"title":"DOMParser","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/domparser","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/domparser/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/DOMParser","title":"DOMParser"}],"pageTitle":"DOMParser - Web API | MDN","noIndexing":false}}