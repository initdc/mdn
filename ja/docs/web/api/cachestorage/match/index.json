{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CacheStorage.match()","mdn_url":"/ja/docs/Web/API/CacheStorage/match","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/CacheStorage/delete\"><code>delete()</code></a></li><li><a href=\"/ja/docs/Web/API/CacheStorage/has\"><code>has()</code></a></li><li><a href=\"/ja/docs/Web/API/CacheStorage/keys\"><code>keys()</code></a></li><li><em><code>match()</code></em></li><li><a href=\"/ja/docs/Web/API/CacheStorage/open\"><code>open()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/ja/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/ja/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/ja/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/ja/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/ja/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/ja/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/ja/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a> インターフェイスの <strong><code>match()</code></strong> メソッドは、所与の <a href=\"/ja/docs/Web/API/Request\"><code>Request</code></a> または URL 文字列が保存された <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> のキーであるかどうかをチェックします。 このメソッドは、<a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>、または一致が見つからない場合に <code>undefined</code> に解決される <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。</p>\n<p>グローバルな <a href=\"/ja/docs/Web/API/caches\" title=\"caches\"><code>caches</code></a> プロパティを介して <code>CacheStorage</code> にアクセスできます。</p>\n<p><code>Cache</code> オブジェクトは作成順に検索されます。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <a href=\"/ja/docs/Web/API/CacheStorage/match\" title=\"caches.match()\" aria-current=\"page\"><code>caches.match()</code></a> は便利なメソッドです。 同等の機能は、<a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> が返されるまで、（<a href=\"/ja/docs/Web/API/CacheStorage/keys\" title=\"caches.keys()\"><code>caches.keys()</code></a> によって返される順序で）各キャッシュで <a href=\"/ja/docs/Web/API/Cache/match\"><code>cache.match()</code></a> を呼び出すことです。</p>\n</div>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">caches.match(request, options).then(function(response) {\n  // response で何かをする\n});\n</pre>"}},{"type":"prose","value":{"id":"パラメーター","title":"パラメーター","isH3":true,"content":"<dl>\n  <dt id=\"request\">request</dt>\n  <dd>\n    <p>一致させたい <a href=\"/ja/docs/Web/API/Request\"><code>Request</code></a>。 これは、<a href=\"/ja/docs/Web/API/Request\"><code>Request</code></a> オブジェクトまたは URL 文字列にすることができます。</p>\n  </dd>\n  <dt id=\"options\">options <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p><code>match</code> 操作での照合方法を制御するプロパティを持つオブジェクト。 利用可能なオプションは次のとおりです。</p>\n    <ul>\n      <li><code>ignoreSearch</code>: 照合方法が URL のクエリ文字列を無視するかどうかを指定する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>。 例えば、<code>true</code> に設定すると、<code>http://foo.com/?value=bar</code> の <code>?value=bar</code> 部分は、照合するときに無視されます。 デフォルトは <code>false</code> です。</li>\n      <li><code>ignoreMethod</code>: <code>true</code> に設定すると、照合方法が <a href=\"/ja/docs/Web/API/Request\"><code>Request</code></a> <code>http</code> メソッドを検証できないようにする <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>（通常は <code>GET</code> と <code>HEAD</code> のみが許可されます）。 デフォルトは <code>false</code> です。</li>\n      <li><code>ignoreVary</code>: <code>true</code> に設定された場合、<code>VARY</code> ヘッダーの照合をしないように照合方法に指示する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>。 つまり、URL が一致する場合、<a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> オブジェクトに <code>VARY</code> ヘッダーがあるかどうかに関係なく一致します。 デフォルトは <code>false</code> です。</li>\n      <li><code>cacheName</code>: 検索する特定のキャッシュを表す <a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a>。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"戻り値","title":"戻り値","isH3":true,"content":"<p>一致する <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> に解決される <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>。 指定されたリクエストに対する一致するレスポンスが見つからない場合、<code>Promise</code> は <code>undefined</code> に解決されます。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>この例は MDN の <a href=\"https://github.com/mdn/sw-test/\" class=\"external\" rel=\" noopener\">sw-test の例</a>からのものです（<a href=\"https://mdn.github.io/sw-test/\" class=\"external\" rel=\" noopener\">sw-test をライブで</a>見る）。 ここでは、<a href=\"/ja/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> が発生するのを待ちます。 次のようなカスタムレスポンスを作成します。</p>\n<ol>\n  <li><a href=\"/ja/docs/Web/API/CacheStorage/match\" title=\"CacheStorage.match()\" aria-current=\"page\"><code>CacheStorage.match()</code></a> を使用して、<a href=\"/ja/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a> でリクエストの一致が見つかったかどうかを確認します。 もしそうなら、それを提供します。</li>\n  <li>そうでない場合は、<code>open()</code> を使用して <code>v1</code> キャッシュを開き、<a href=\"/ja/docs/Web/API/Cache/put\" title=\"Cache.put()\"><code>Cache.put()</code></a> を使用してデフォルトのネットワークリクエストをキャッシュに入れ、<code>return response.clone()</code> を使用してデフォルトのネットワークリクエストのクローンを返します。 <code>put()</code> がレスポンスのボディを消費するため、最後が必要です。</li>\n  <li>これが失敗した場合（例えば、ネットワークがダウンしているため）、フォールバックレスポンスを返します。</li>\n</ol>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>self<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span>caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// caches.match() は常に解決します</span>\n    <span class=\"token comment\">// ただし、成功の場合はレスポンスに値があります</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// レスポンスは1回のみ使用できます</span>\n        <span class=\"token comment\">// クローンを保存して、1番目のコピーをキャッシュに入れ、</span>\n        <span class=\"token comment\">// 2番目のコピーを提供する必要があります</span>\n        <span class=\"token keyword\">let</span> responseClone <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> responseClone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/ServiceWorker/#dom-cachestorage-match\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"ja\">CacheStorage: match の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>初期定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.CacheStorage.match","dataURL":"/ja/docs/Web/API/CacheStorage/match/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Service worker の使用</a></li>\n  <li><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/caches\"><code>WindowOrWorkerGlobalScope.caches</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"CacheStorage インターフェイスの match() メソッドは、所与の Request または URL 文字列が保存された Response のキーであるかどうかをチェックします。 このメソッドは、Response の Promise、または一致が見つからない場合に undefined に解決される Promise を返します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CacheStorage.match()","locale":"en-US","native":"English (US)"},{"title":"CacheStorage.match()","locale":"fr","native":"Français"},{"title":"CacheStorage.match()","locale":"ru","native":"Русский"},{"title":"CacheStorage.match()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/cachestorage/match","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/cachestorage/match/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/CacheStorage","title":"CacheStorage"},{"uri":"/ja/docs/Web/API/CacheStorage/match","title":"CacheStorage.match()"}],"pageTitle":"CacheStorage.match() - Web API | MDN","noIndexing":false}}