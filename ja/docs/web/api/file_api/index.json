{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ファイル API","mdn_url":"/ja/docs/Web/API/File_API","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/File_API\">File API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/File_API/Using_files_from_web_applications\">Using files from web applications</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a></li><li><a href=\"/ja/docs/Web/API/File\"><code>File</code></a></li><li><a href=\"/ja/docs/Web/API/FileList\"><code>FileList</code></a></li><li><a href=\"/ja/docs/Web/API/FileReader\"><code>FileReader</code></a></li><li><a href=\"/ja/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></li><li><a href=\"/ja/docs/Web/API/URL/revokeObjectURL\"><code>URL.revokeObjectURL()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":"概念と使い方","title":"概念と使い方","isH3":false,"content":"<p>ファイル API は、ウェブアプリケーションがファイルとそのコンテンツにアクセスできるようにするためのものです。</p>\n<p>ウェブアプリケーションは、ユーザーがファイルを利用可能にしたとき、すなわち <a href=\"/ja/docs/Web/HTML/Element/input/file\">file 型の <code>&lt;input&gt;</code> 要素</a>を使用するか、<a href=\"/ja/docs/Web/API/DataTransfer/files\">ドラッグ＆ドロップを介する</a>かのどちらかでファイルにアクセスすることができるようになります。</p>\n<p>このようにして利用可能になった一連のファイルは <a href=\"/ja/docs/Web/API/FileList\"><code>FileList</code></a> オブジェクトとして表され、ウェブアプリケーションが個々の <a href=\"/ja/docs/Web/API/File\"><code>File</code></a> オブジェクトを取得することができるようになっています。そして、 <a href=\"/ja/docs/Web/API/File\"><code>File</code></a> オブジェクトから、ファイル名、サイズ、型、最終更新日時などのメタデータにアクセスすることができます。</p>\n<p><a href=\"/ja/docs/Web/API/File\"><code>File</code></a> オブジェクトを <a href=\"/ja/docs/Web/API/FileReader\"><code>FileReader</code></a> オブジェクトに渡すことで、ファイルの内容にアクセスすることができます。 <a href=\"/ja/docs/Web/API/FileReader\"><code>FileReader</code></a> インターフェイスは非同期ですが、<a href=\"/ja/docs/Web/API/Web_Workers_API\">ウェブワーカー</a>でのみ利用できる同期バージョンが <a href=\"/ja/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a> インターフェイスで提供されています。</p>"}},{"type":"prose","value":{"id":"インターフェイス","title":"インターフェイス","isH3":false,"content":"<dl>\n  <dt id=\"blob\"><a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a></dt>\n  <dd>\n    <p>\"Binary Large Object\" を表し、不変の生データを持つファイルのようなオブジェクトを意味します。 <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> はテキストまたはバイナリーデータとして読み込むことができ、そのメソッドを使用してデータを処理できるように <a href=\"/ja/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> に変換されることがあります。</p>\n  </dd>\n  <dt id=\"file\"><a href=\"/ja/docs/Web/API/File\"><code>File</code></a></dt>\n  <dd>\n    <p>ファイルに関する情報を提供し、ウェブページ内の JavaScript がそのコンテンツにアクセスできるようにします。</p>\n  </dd>\n  <dt id=\"filelist\"><a href=\"/ja/docs/Web/API/FileList\"><code>FileList</code></a></dt>\n  <dd>\n    <p>HTML の <a href=\"/ja/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> 要素の <code>files</code> プロパティが返す値です。これにより、 <code>&lt;input type=\"file\"&gt;</code> 要素で選択されたファイルのリストにアクセスすることができます。また、ドラッグ＆ドロップ API を用いてウェブコンテンツにドロップされたファイルのリストにも使用されます。この使用方法の詳細については、 <a href=\"/ja/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> オブジェクトを参照してください。</p>\n  </dd>\n  <dt id=\"filereader\"><a href=\"/ja/docs/Web/API/FileReader\"><code>FileReader</code></a></dt>\n  <dd>\n    <p>ウェブアプリケーションが、ユーザーのコンピューターに保存されているファイル（または生データバッファー）の内容を、 <a href=\"/ja/docs/Web/API/File\"><code>File</code></a> または <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> オブジェクトを使って非同期に読み込むことができるようにするもので、ファイルまたはデータを指定して読み込みます。</p>\n  </dd>\n  <dt id=\"filereadersync\"><a href=\"/ja/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a></dt>\n  <dd>\n    <p>ウェブアプリケーションが、ユーザーのコンピューターに保存されているファイル（または生データバッファー）の内容を、 <a href=\"/ja/docs/Web/API/File\"><code>File</code></a> または <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> オブジェクトを使って同期的に読み込むことができるようにするもので、ファイルまたはデータを指定して読み込みます。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"他のインターフェイスの拡張","title":"他のインターフェイスの拡張","isH3":true,"content":"<dl>\n  <dt id=\"url.createobjecturl\"><a href=\"/ja/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/File\"><code>File</code></a> または <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> オブジェクトを取得するために使用できる URL を作成します。</p>\n  </dd>\n  <dt id=\"url.revokeobjecturl\"><a href=\"/ja/docs/Web/API/URL/revokeObjectURL\"><code>URL.revokeObjectURL()</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a> を呼び出して作成された既存のオブジェクト URL を解放します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"ファイルの読み取り","title":"ファイルの読み取り","isH3":true,"content":"<p>この例では、 <a href=\"/ja/docs/Web/HTML/Element/input/file\">file 型の <code>&lt;input&gt;</code> 要素</a>を用意しており、ユーザーがファイルを選択すると、最初に選択したファイルの内容をテキストとして読み込み、結果を <a href=\"/ja/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> で表示します。</p>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"css\">CSS</h4>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.output</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> scroll<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 1rem 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> fileInput <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input[type=file]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.output'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfileInput<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>file<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fileInput<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reader<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      output<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsText</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"結果","title":"結果","isH3":true,"content":"<iframe class=\"sample-code-frame\" title=\"例\" id=\"frame_reading_a_file\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/File_API/_sample_.reading_a_file.html\" loading=\"lazy\"></iframe>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/FileAPI/","title":"File API"}],"query":"undefined"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/HTML/Element/input/file\"><code>&lt;input type=\"file\"&gt;</code></a>: file 型の入力要素</li>\n  <li><a href=\"/ja/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a> インターフェイス</li>\n</ul>"}}],"toc":[{"text":"概念と使い方","id":"概念と使い方"},{"text":"インターフェイス","id":"インターフェイス"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"関連情報","id":"関連情報"}],"summary":"ファイル API は、ウェブアプリケーションがファイルとそのコンテンツにアクセスできるようにするためのものです。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"File API","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/file_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/file_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/File_API","title":"ファイル API"}],"pageTitle":"ファイル API - Web API | MDN","noIndexing":false}}