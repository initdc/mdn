{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ServiceWorkerGlobalScope: message event","mdn_url":"/ja/docs/Web/API/ServiceWorkerGlobalScope/message_event","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope/clients\"><code>clients</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope/registration\"><code>registration</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/fetch_event\"><code>ServiceWorkerGlobalScope: fetch event</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting\"><code>skipWaiting()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope/activate_event\"><code>activate</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/contentdelete_event\"><code>contentdelete</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope/install_event\"><code>install</code></a></li><li><em><code>message</code></em></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope/notificationclick_event\"><code>notificationclick</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope/notificationclose_event\"><code>notificationclose</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope/push_event\"><code>push</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope/pushsubscriptionchange_event\"><code>pushsubscriptionchange</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  <a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> インターフェイスの <strong><code>message</code></strong> イベントは、着信メッセージを受信したときに発生します。 制御されたページは、<a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>ServiceWorker.postMessage()</code></a> メソッドを使用して、サービスワーカーにメッセージを送信できます。\n  サービスワーカーは、任意で、制御されたページに対応する <a href=\"/ja/docs/Web/API/Client/postMessage\"><code>Client.postMessage()</code></a> を介して返信することができます。\n</p>\n<table class=\"properties\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">バブリング</th>\n      <td>なし</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">キャンセル</th>\n      <td>不可</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">インターフェイス</th>\n      <td><a href=\"/ja/docs/Web/API/ExtendableMessageEvent\"><code>ExtendableMessageEvent</code></a></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">イベントハンドラープロパティ</th>\n      <td><code><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope/message_event\">onmessage</a></code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>以下の例では、ページが <a href=\"/ja/docs/Web/API/ServiceWorkerRegistration/active\"><code>ServiceWorkerRegistration.active</code></a> を介して <a href=\"/ja/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> オブジェクトへのハンドルを取得し、その <code>postMessage()</code> 関数を呼び出します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 制御されているページ内</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'service-worker.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// event は MessageEvent オブジェクトです</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The service worker sent me a message: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span>ready<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">registration</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    registration<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi service worker\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>次のように、サービスワーカーは、<code>message</code> イベントをリッスンしてメッセージを受信できます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// サービスワーカー内</span>\n<span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// event は ExtendableMessageEvent オブジェクトです</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The client sent me a message: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  event<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi client\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/ServiceWorker/#eventdef-serviceworkerglobalscope-message\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"ja\">message の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.ServiceWorkerGlobalScope.message_event","dataURL":"/ja/docs/Web/API/ServiceWorkerGlobalScope/message_event/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Service worker の使用</a></li>\n  <li><a href=\"https://github.com/mdn/sw-test\" class=\"external\" rel=\" noopener\">サービスワーカーの基本的なコード例</a>（英語）</li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">ServiceWorker の準備はできていますか？</a>（英語）</li>\n  <li><a href=\"/ja/docs/Web/API/Web_Workers_API/Using_web_workers\">Web worker の使用</a></li>\n</ul>"}}],"toc":[{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"ServiceWorkerGlobalScope インターフェイスの message イベントは、着信メッセージを受信したときに発生します。 制御されたページは、ServiceWorker.postMessage() メソッドを使用して、サービスワーカーにメッセージを送信できます。\n  サービスワーカーは、任意で、制御されたページに対応する Client.postMessage() を介して返信することができます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ServiceWorkerGlobalScope: message event","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/serviceworkerglobalscope/message_event","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/serviceworkerglobalscope/message_event/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/ServiceWorkerGlobalScope","title":"ServiceWorkerGlobalScope"},{"uri":"/ja/docs/Web/API/ServiceWorkerGlobalScope/message_event","title":"ServiceWorkerGlobalScope: message event"}],"pageTitle":"ServiceWorkerGlobalScope: message event - Web API | MDN","noIndexing":false}}