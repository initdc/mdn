{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"FetchEvent.respondWith()","mdn_url":"/ja/docs/Web/API/FetchEvent/respondWith","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FetchEvent/FetchEvent\"><code>FetchEvent()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/FetchEvent/clientId\"><code>clientId</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/FetchEvent/isReload\"><code>isReload</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/FetchEvent/PreloadResponse\"><code>preloadResponse</code></a></li><li><a href=\"/ja/docs/Web/API/FetchEvent/replacesClientId\"><code>replacesClientId</code></a></li><li><a href=\"/ja/docs/Web/API/FetchEvent/request\"><code>request</code></a></li><li><a href=\"/ja/docs/Web/API/FetchEvent/resultingClientId\"><code>resultingClientId</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><em><code>respondWith()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/ja/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/ja/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/ja/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/ja/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/ja/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/ja/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/ja/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> インターフェイスの <strong><code>respondWith()</code></strong> メソッドは、ブラウザー既定の fetch ハンドリングを抑止して、あなたが <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> 用の Promise を提供できるようにします。</p>\n<p>たいていの場合、あなたは受け手が理解できるどんなレスポンスでも提供できます。例えば、<a href=\"/ja/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> がリクエストを開始する場合、レスポンスボディには画像データが必要です。セキュリティの理由から、少しのグローバルルールがあります:</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/FetchEvent/request\"><code>fetchEvent.request</code></a> オブジェクトの <a href=\"/ja/docs/Web/API/Request/mode\" title=\"mode\"><code>mode</code></a> が \"<code>no-cors</code>\" の場合にだけ、\"<code>opaque</code>\" <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/type\"><code>type</code> <small>(en-US)</small></a> (不透明型) の <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> オブジェクトを返すことができます。これはプライベートなデータの漏えいを防ぎます。</li>\n  <li><a href=\"/ja/docs/Web/API/FetchEvent/request\"><code>fetchEvent.request</code></a> オブジェクトの <a href=\"/ja/docs/Web/API/Request/mode\" title=\"mode\"><code>mode</code></a> が \"<code>manual</code>\" の場合にだけ \"<code>opaqueredirect</code>\" <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/type\"><code>type</code> <small>(en-US)</small></a> (不透明なリダイレクト型) の <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> オブジェクトを返すことができます。</li>\n  <li><a href=\"/ja/docs/Web/API/FetchEvent/request\"><code>fetchEvent.request</code></a> オブジェクトの <a href=\"/ja/docs/Web/API/Request/mode\" title=\"mode\"><code>mode</code></a> が \"<code>same-origin</code>\" の場合、\"<code>cors</code>\" <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/type\"><code>type</code> <small>(en-US)</small></a> の <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> オブジェクトを返すことはできません。</li>\n</ul>"}},{"type":"prose","value":{"id":"リソースの最終_url_を指定する","title":"リソースの最終 URL を指定する","isH3":true,"content":"<p>Firefox 59 以降では、サービスワーカーが <a href=\"/ja/docs/Web/API/FetchEvent/respondWith\" aria-current=\"page\"><code>FetchEvent.respondWith()</code></a> に <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> を渡すとき、その <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/url\"><code>Response.url</code> <small>(en-US)</small></a> の値がインターセプトされたネットワークリクエストの最終 URL として伝搬します。<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/url\"><code>Response.url</code> <small>(en-US)</small></a> の値が空文字の場合は、<a href=\"/ja/docs/Web/API/Request/url\" title=\"FetchEvent.request.url\"><code>FetchEvent.request.url</code></a> が最終 URL として利用されます。</p>\n<p>かつては <a href=\"/ja/docs/Web/API/Request/url\" title=\"FetchEvent.request.url\"><code>FetchEvent.request.url</code></a> がすべての場合に最終 URL として使われていました。与えられた <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/url\"><code>Response.url</code> <small>(en-US)</small></a> は実際には無視されていました。</p>\n<p>つまり、例えば、サービスワーカーがスタイルシートや Worker スクリプトをインターセプトすると、与えられた <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/url\"><code>Response.url</code> <small>(en-US)</small></a> が、サブリソースが読み込む相対的な <a href=\"/ja/docs/Web/CSS/@import\"><code>@import</code></a> や <a href=\"/ja/docs/Web/API/WorkerGlobalScope/importScripts\" title=\"importScripts()\"><code>importScripts()</code></a> の代わりに使われます (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1222008\" class=\"external\" rel=\" noopener\">バグ&nbsp;1222008</a>)。</p>\n<p>たいていのネットワークリクエストに対して、最終 URL を観測できないためこの変更は影響ありません。しかし、少しだけ関係する場合があります:</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/fetch\" title=\"fetch()\"><code>fetch()</code></a> がインターセプトされた場合、結果の <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/url\"><code>Response.url</code> <small>(en-US)</small></a>で最終 URL を観測できます。</li>\n  <li><a href=\"/ja/docs/Web/API/Web_Workers_API\">Worker</a> スクリプトがインターセプトされた場合、最終 URL は <a href=\"/ja/docs/Web/API/WorkerGlobalScope/location\"><code>self.location</code></a> をセットするのに使われ、Worker スクリプトの相対 URL の代わりのベース URL として使われます。</li>\n  <li>スタイルシートがインターセプトされた場合、最終 URL は相対的な <a href=\"/ja/docs/Web/CSS/@import\"><code>@import</code></a> 読み込みの代わりのベース URL として使われます。</li>\n</ul>\n<p><a href=\"/ja/docs/Web/API/Window\" title=\"Window\"><code>Window</code></a> と <a href=\"/ja/docs/Web/API/HTMLIFrameElement\" title=\"iframe\"><code>iframe</code></a> のナビゲーションリクエストはこの最終 URL を使わ「ない」ことに注意してください。HTML 仕様のナビゲーションのリダイレクトの処理方法では、<a href=\"/ja/docs/Web/API/Window/location\"><code>Window.location</code></a> のためにリクエスト URL を使います。これは、オフラインの時に、ユーザーに見える URL を変更することなくサイトが「代替の」ウェブページを提供できるということを意味します。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>fetchEvent<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// Response に解決される Promise。</span>\n​<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"パラメーター","title":"パラメーター","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> または <code>Response</code> に解決される <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>。それ以外の場合は、ネットワークエラーが Fetch に返されます。</p>"}},{"type":"prose","value":{"id":"返り値","title":"返り値","isH3":true,"content":"<p><code>undefined</code>。</p>"}},{"type":"prose","value":{"id":"例外","title":"例外","isH3":true,"content":"<table>\n  <thead>\n    <tr>\n      <th>例外</th>\n      <th>注記</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>NetworkError</code></td>\n      <td>上記の \"グローバルルール\" にヒントがあるように、ネットワークエラーは <a href=\"/ja/docs/Web/API/Request/mode\" title=\"FetchEvent.request.mode\"><code>FetchEvent.request.mode</code></a> と <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/type\"><code>Response.type</code> <small>(en-US)</small></a> の値の組み合わせでトリガーされます。</td>\n    </tr>\n    <tr>\n      <td><code>InvalidStateError</code></td>\n      <td>イベントがディスパッチされていないか、<code>respondWith()</code> が既に呼び出されています。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>この fetch イベントはキャッシュ API からのレスポンスを返そうとし、ない場合にはネットワークにフォールバックします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// デフォルトを抑止し、リクエストを自分で処理します。</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// キャッシュからレスポンスを取得しようとします。</span>\n    <span class=\"token keyword\">const</span> cachedResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 見つかったらそれを返します。</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cachedResponse<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> cachedResponse<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// キャッシュ内に一致するものが見つからなかった場合は、ネットワークを使用します。</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/ServiceWorker/#fetch-event-respondwith-method\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"ja\">respondWith() の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>初期定義。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザー実装状況","id":"ブラウザー実装状況","isH3":false,"query":"api.FetchEvent.respondWith","dataURL":"/ja/docs/Web/API/FetchEvent/respondWith/bcd.json"}},{"type":"prose","value":{"id":"関連項目","title":"関連項目","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Service Worker の使用</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">ServiceWorker の準備はできていますか？</a>（英語）</li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/Fetch_API\">Fetch API</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザー実装状況","id":"ブラウザー実装状況"},{"text":"関連項目","id":"関連項目"}],"summary":"FetchEvent インターフェイスの respondWith() メソッドは、ブラウザー既定の fetch ハンドリングを抑止して、あなたが Response 用の Promise を提供できるようにします。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"FetchEvent.respondWith()","locale":"en-US","native":"English (US)"},{"title":"FetchEvent.respondWith()","locale":"ko","native":"한국어"},{"title":"FetchEvent.respondWith()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/fetchevent/respondwith","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/fetchevent/respondwith/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/FetchEvent","title":"FetchEvent"},{"uri":"/ja/docs/Web/API/FetchEvent/respondWith","title":"FetchEvent.respondWith()"}],"pageTitle":"FetchEvent.respondWith() - Web API | MDN","noIndexing":false}}