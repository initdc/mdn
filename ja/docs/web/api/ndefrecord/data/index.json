{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"NDEFRecord.data","mdn_url":"/ja/docs/Web/API/NDEFRecord/data","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/NDEFRecord\"><code>NDEFRecord</code></a></strong></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>安全なコンテキスト用:</strong> この機能は一部またはすべての<a href=\"#browser_compatibility\">対応しているブラウザー</a>において、<a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a> (HTTPS) でのみ利用できます。</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>これは<a href=\"/ja/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">実験的な機能</a>です。</strong><br>本番で使用する前に<a href=\"#browser_compatibility\">ブラウザー互換性一覧表</a>をチェックしてください。</p></div>\n<p><strong><code>data</code></strong> は <a href=\"/ja/docs/Web/API/NDEFRecord\"><code>NDEFRecord</code></a> インターフェイスのプロパティで、このレコードのペイロードの生のバイト列が入った <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a> を返します。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>NDEFRecord<span class=\"token punctuation\">.</span>data\n</code></pre></div>"}},{"type":"prose","value":{"id":"値","title":"値","isH3":true,"content":"<p>エンコードしたこのレコードのペイロードをの入った <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a> を返します。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の例は <a href=\"/ja/docs/Web/API/NDEFReadingEvent/message\"><code>NDEFReadingEvent.message</code></a> から取得した <a href=\"/ja/docs/Web/API/NDEFMessage\"><code>NDEFMessage</code></a> オブジェクト内のレコードを反復処理します。 <a href=\"/ja/docs/Web/API/NDEFRecord/mediaType\" title=\"mediaType\"><code>mediaType</code></a> に基づいてレコードを選択すると、次に <code>data</code> プロパティに格納されているものをデコードします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> ndef <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NDEFReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> ndef<span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ndef<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreading</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> record <span class=\"token keyword\">of</span> event<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>mediaType <span class=\"token operator\">===</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> article <span class=\"token operator\">=</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[aeio]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"an\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>json<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>article<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>json<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/web-nfc/#dom-ndefrecord-data","title":"Web NFC API"}],"query":"api.NDEFRecord.data"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.NDEFRecord.data","dataURL":"/ja/docs/Web/API/NDEFRecord/data/bcd.json"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"data は NDEFRecord インターフェイスのプロパティで、このレコードのペイロードの生のバイト列が入った DataView を返します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"NDEFRecord.data","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/ndefrecord/data","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/ndefrecord/data/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/NDEFRecord","title":"NDEFRecord"},{"uri":"/ja/docs/Web/API/NDEFRecord/data","title":"NDEFRecord.data"}],"pageTitle":"NDEFRecord.data - Web API | MDN","noIndexing":false}}