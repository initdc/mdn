{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"NDEFReader.write()","mdn_url":"/ja/docs/Web/API/NDEFReader/write","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/NDEFReader\"><code>NDEFReader</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/NDEFReader/NDEFReader\"><code>NDEFReader()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/NDEFReader/readingerror_event\"><code>readingerror</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/NDEFReader/scan\"><code>scan()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>write()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/NDEFReader/reading_event\"><code>reading</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/ja/docs/Web/API/NDEFReader/readingerror_event\"><code>readingerror</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>安全なコンテキスト用:</strong> この機能は一部またはすべての<a href=\"#browser_compatibility\">対応しているブラウザー</a>において、<a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a> (HTTPS) でのみ利用できます。</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>これは<a href=\"/ja/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">実験的な機能</a>です。</strong><br>本番で使用する前に<a href=\"#browser_compatibility\">ブラウザー互換性一覧表</a>をチェックしてください。</p></div>\n<p><code>write()</code> は <a href=\"/ja/docs/Web/API/NDEFReader\"><code>NDEFReader</code></a> インターフェイスのプロパティで、タグに NDEF メッセージを書き込むことを試みます。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返し、これはタグにメッセージが書き込まれると解決し、ハードウェアや権限のエラーが発生すると拒否されます。このメソッドは、 \"nfc\" の権限が事前に許可されていない場合は、許可を問い合わせるプロンプトを起動します。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>NDEFReader<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  NDEFReader<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"message\"><code>message</code></dt>\n  <dd>\n    <p>\n      書き込まれるメッセージで、 <a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a>,\n      <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>BufferSource</code></a>, レコードの配列の何れかです。レコードには以下のメンバーがあります。\n    </p>\n    <dl>\n      <dt id=\"data\"><code>data</code> <span class=\"badge inline optional\">省略可</span></dt>\n      <dd>\n        <p>転送されるデータが入ります。文字列、<a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>BufferSource</code></a>、ネストしたレコードの配列の何れかです。</p>\n      </dd>\n      <dt id=\"encoding\"><code>encoding</code> <span class=\"badge inline optional\">省略可</span></dt>\n      <dd>\n        <p>文字列で、このレコードのエンコーディングを指定します。</p>\n      </dd>\n      <dt id=\"id\"><code>id</code> <span class=\"badge inline optional\">省略可</span></dt>\n      <dd>\n        <p>このレコードの開発者が定義した識別子です。</p>\n      </dd>\n      <dt id=\"lang\"><code>lang</code> <span class=\"badge inline optional\">省略可</span></dt>\n      <dd>\n        <p><a href=\"https://datatracker.ietf.org/doc/html/rfc5646\" class=\"external\" rel=\" noopener\">RFC 5646: Tags for Identifying Languages （または BCP 47）</a>による有効な言語タグです。</p>\n      </dd>\n      <dt id=\"mediatype\"><code>mediaType</code> <span class=\"badge inline optional\">省略可</span></dt>\n      <dd>\n        <p>有効な <a href=\"/ja/docs/Web/HTTP/Basics_of_HTTP/MIME_types\">MIME タイプ</a>です。</p>\n      </dd>\n      <dt id=\"recordtype\"><code>recordType</code></dt>\n      <dd>\n        <p>文字列で、 <code>data</code> に格納されたデータの型を示します。以下の値の何れかになります。</p>\n        <dl>\n          <dt id=\"absolute-url\"><code>\"absolute-url\"</code></dt>\n          <dd>\n            <p>データへの絶対 URL です。</p>\n          </dd>\n          <dt id=\"empty\"><code>\"empty\"</code></dt>\n          <dd>\n            <p>空の <a href=\"/ja/docs/Web/API/NDEFRecord\"><code>NDEFRecord</code></a> です。</p>\n          </dd>\n          <dt id=\"mime\"><code>\"mime\"</code></dt>\n          <dd>\n            <p>有効な <a href=\"/ja/docs/Web/HTTP/Basics_of_HTTP/MIME_types\">MIME タイプ</a>です。</p>\n          </dd>\n          <dt id=\"smart-poster\"><code>\"smart-poster\"</code></dt>\n          <dd>\n            <p><a href=\"https://w3c.github.io/web-nfc/#bib-ndef-smartposter\" class=\"external\" rel=\" noopener\">NDEF-SMARTPOSTER</a> 仕様書で定義されているスマートポスターです。</p>\n          </dd>\n          <dt id=\"text\"><code>\"text\"</code></dt>\n          <dd>\n            <p><a href=\"https://w3c.github.io/web-nfc/#bib-ndef-text\" class=\"external\" rel=\" noopener\">NDEF-TEXT</a> 仕様書で定義されているテキストです。</p>\n          </dd>\n          <dt id=\"unknown\"><code>\"unknown\"</code></dt>\n          <dd>\n            <p>レコード型が不明です。</p>\n          </dd>\n          <dt id=\"url\"><code>\"URL\"</code></dt>\n          <dd>\n            <p><a href=\"https://w3c.github.io/web-nfc/#bib-ndef-uri\" class=\"external\" rel=\" noopener\">NDEF-URI</a> 仕様書で定義されている URL です。</p>\n          </dd>\n        </dl>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>以下のプロパティを持つオブジェクトです。</p>\n    <ul>\n      <li><code>overwrite</code> -- 既存のレコードが存在した場合、上書きするかどうかを指定する論理値です。</li>\n      <li><code>signal</code> -- オプションの <a href=\"/ja/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> で、現在の書き込み操作をキャンセルすることができます。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> で、メッセージがタグに書き込まれたら解決し、ハードウェアまたは権限のエラーが発生した場合は拒否されます。</p>"}},{"type":"prose","value":{"id":"例外","title":"例外","isH3":false,"content":"<p>このメソッドからは例外は発生しません。代わりに返されるプロミスが拒否され、 <a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a> が <code>name</code> を何れかの一つとして渡されます。</p>\n<dl>\n  <dt id=\"aborterror\"><code>AbortError</code></dt>\n  <dd>\n    <p><code>options</code> 引数で渡された <a href=\"/ja/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> によってスキャン操作が中止された。</p>\n  </dd>\n  <dt id=\"notallowederror\"><code>NotAllowedError</code></dt>\n  <dd>\n    <p>この操作の権限が拒否されたか、 <code>overwrite</code> が <code>false</code> であり、既にタグにそのレコードがあった。</p>\n  </dd>\n  <dt id=\"notsupportederror\"><code>NotSupportedError</code></dt>\n  <dd>\n    <p>ウェブ NFC と互換性のある NFC アダプターがない、または利用可能な NFC アダプターがプッシュメッセージに対応していない、または接続が確立できなかった。</p>\n  </dd>\n  <dt id=\"notreadableerror\"><code>NotReadableError</code></dt>\n  <dd>\n    <p>UA が接続されている NFC アラプターにアクセスできなかった（例えば、ユーザー設定のため）。</p>\n  </dd>\n  <dt id=\"networkerror\"><code>NetworkError</code></dt>\n  <dd>\n    <p>開始された後で転送に失敗した（例えば、タグがリーダーから取り外された）。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"テキスト文字列の書き込み","title":"テキスト文字列の書き込み","isH3":true,"content":"<p>以下の例では、 <a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a> を NFC タグへ書き込み、発生するエラーを処理する方法を示します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> ndef <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NDEFReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nndef<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"Hello World\"</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Message written.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Write failed :-( try again: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"url_の書き込み","title":"URL の書き込み","isH3":true,"content":"<p>次の例は、 NFC タグにレコードオブジェクト（上記）を書き込み、発生したエラーを処理する方法を示しています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> ndef <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NDEFReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> ndef<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">records</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">recordType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"url\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://example.com/\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write failed :-( try again.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"タイムアウトで書き込みをスケジューリング","title":"タイムアウトで書き込みをスケジューリング","isH3":true,"content":"<p>書き込み操作に時間制限を設けると便利な場合があります。例えば、ユーザーにタグをタッチするように要求し、一定時間内にタグが見つからなかったら、タイムアウトするようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> ndef <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NDEFReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nndef<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreading</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"We read a tag!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> timeout <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> ctlr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctlr<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onabort</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Time is up, bailing out!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> ctlr<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ndef<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reading\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      ndef<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">signal</span><span class=\"token operator\">:</span> ctlr<span class=\"token punctuation\">.</span>signal <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">once</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">await</span> ndef<span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Let's wait for 5 seconds only.</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">5_000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Something went wrong\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"We wrote to a tag!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/web-nfc/#dom-ndefreader-write","title":"Web NFC API"}],"query":"api.NDEFReader.write"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.NDEFReader.write","dataURL":"/ja/docs/Web/API/NDEFReader/write/bcd.json"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例外","id":"例外"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"write() は NDEFReader インターフェイスのプロパティで、タグに NDEF メッセージを書き込むことを試みます。 Promise を返し、これはタグにメッセージが書き込まれると解決し、ハードウェアや権限のエラーが発生すると拒否されます。このメソッドは、 \"nfc\" の権限が事前に許可されていない場合は、許可を問い合わせるプロンプトを起動します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"NDEFReader.write()","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/ndefreader/write","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/ndefreader/write/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/NDEFReader","title":"NDEFReader"},{"uri":"/ja/docs/Web/API/NDEFReader/write","title":"NDEFReader.write()"}],"pageTitle":"NDEFReader.write() - Web API | MDN","noIndexing":false}}