{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"SubtleCrypto.digest()","mdn_url":"/ja/docs/Web/API/SubtleCrypto/digest","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Web_Crypto_API\">Web Crypto API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/decrypt\"><code>decrypt()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/deriveBits\"><code>deriveBits()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/deriveKey\"><code>deriveKey()</code> <small>(en-US)</small></a></li><li><em><code>digest()</code></em></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/encrypt\"><code>encrypt()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/exportKey\"><code>exportKey()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/generateKey\"><code>generateKey()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/importKey\"><code>importKey()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/sign\"><code>sign()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/unwrapKey\"><code>unwrapKey()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/verify\"><code>verify()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/wrapKey\"><code>wrapKey()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Crypto API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/Crypto\"><code>Crypto</code></a></li><li><a href=\"/ja/docs/Web/API/CryptoKey\"><code>CryptoKey</code></a></li><li><a href=\"/ja/docs/Web/API/crypto_property\"><code>crypto_property</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>安全なコンテキスト用:</strong> この機能は一部またはすべての<a href=\"#browser_compatibility\">対応しているブラウザー</a>において、<a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a> (HTTPS) でのみ利用できます。</p></div>\n<p><a href=\"/ja/docs/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a> インターフェースの <strong><code>digest()</code></strong> メソッドは、指定されたデータの <a href=\"/ja/docs/Glossary/Digest\">digest</a> を返します。ダイジェストとは、可変長の入力に由来する固定長の短い値です。暗号的ダイジェスト値は耐衝突性を示すため、同じダイジェスト値を持つ 2 つの異なる入力を見つけるのは非常に困難です。</p>\n<p>引数として、使用するダイジェストアルゴリズムの識別子とダイジェスト値の元となるデータを受け取ります。ダイジェスト値で解決される <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">const digest = crypto.subtle.digest(algorithm, data);\n</pre>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<ul>\n  <li><code>algorithm</code> は、使用するダイジェストアルゴリズムを定義する <a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a> です。サポートされる値は次のとおりです:\n    <ul>\n      <li><code>SHA-1</code> (暗号化アプリケーションではこれを使用しないでください)</li>\n      <li><code>SHA-256</code></li>\n      <li><code>SHA-384</code></li>\n      <li><code>SHA-512</code></li>\n    </ul>\n  </li>\n  <li><code>data</code> は、ダイジェスト値の元となるデータを含む <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> もしくは <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>ArrayBufferView</code> <small>(en-US)</small></a> です。</li>\n</ul>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<ul>\n  <li><code>digest</code> は <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> であり、ダイジェスト値を含む <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> で解決されます。</li>\n</ul>"}},{"type":"prose","value":{"id":"対応しているアルゴリズム","title":"対応しているアルゴリズム","isH3":false,"content":"<p>ダイジェストアルゴリズムは <a href=\"/ja/docs/Glossary/Cryptographic_hash_function\">暗号ハッシュ関数</a> とも呼ばれ、任意の大きなデータブロックを固定サイズの出力 (通常は入力よりもはるかに短い出力) に変換します。暗号化にはさまざまな用途があります。</p>"}},{"type":"prose","value":{"id":"sha-1","title":"SHA-1","isH3":true,"content":"<p>このアルゴリズムは <a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\" class=\"external\" rel=\" noopener\">FIPS 180-4</a>, section 6.1 で定義されており、160 bit 長の出力を生成します。</p>\n<div class=\"notecard warning\" id=\"sect2\">\n  <p><strong>Warning:</strong> このアルゴリズムは現在脆弱であると見なされているため、暗号化アプリケーションには使用しないでください。</p>\n</div>"}},{"type":"prose","value":{"id":"sha-256","title":"SHA-256","isH3":true,"content":"<p>このアルゴリズムは <a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\" class=\"external\" rel=\" noopener\">FIPS 180-4</a>, section 6.2 で定義されており、256 bit 長の出力を生成します。</p>"}},{"type":"prose","value":{"id":"sha-384","title":"SHA-384","isH3":true,"content":"<p>このアルゴリズムは <a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\" class=\"external\" rel=\" noopener\">FIPS 180-4</a>, section 6.5 で定義されており、384 bit 長の出力を生成します。</p>"}},{"type":"prose","value":{"id":"sha-512","title":"SHA-512","isH3":true,"content":"<p>このアルゴリズムは <a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\" class=\"external\" rel=\" noopener\">FIPS 180-4</a>, section 6.4 で定義されており、512 bit 長の出力を生成します。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> ヒント: キー付きハッシュメッセージ認証コード (<a href=\"/ja/docs/Glossary/HMAC\">HMAC</a>), の作成方法をここで探している場合は、代わりに <a href=\"/en-US/docs/Web/API/SubtleCrypto/sign\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">SubtleCrypto.sign() (en-US)</a> を使用する必要があります。</p>\n</div>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"基本的な例","title":"基本的な例","isH3":true,"content":"<p>この例では、メッセージをエンコードし、 SHA-256 ダイジェスト値を計算して、ダイジェスト長を記録します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token string\">'An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth.'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">digestMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> hash <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> crypto<span class=\"token punctuation\">.</span>subtle<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SHA-256'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> hash<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> digestBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">digestMessage</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>digestBuffer<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ダイジェスト値を_16_進文字列に変換する","title":"ダイジェスト値を 16 進文字列に変換する","isH3":true,"content":"<p>ダイジェストは<code>ArrayBuffer</code>として返されますが、比較および表示のために、ダイジェスト値は多くの場合 16 進文字列として表されます。 この例では、ダイジェストを計算し、<code>ArrayBuffer</code>を 16 進文字列に変換します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token string\">'An obscure body in the S-K System, your majesty. The inhabitants refer to it as the planet Earth.'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">digestMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> msgUint8 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\">// encode as (utf-8) Uint8Array</span>\n  <span class=\"token keyword\">const</span> hashBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> crypto<span class=\"token punctuation\">.</span>subtle<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SHA-256'</span><span class=\"token punctuation\">,</span> msgUint8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// hash the message</span>\n  <span class=\"token keyword\">const</span> hashArray <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>hashBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// convert buffer to byte array</span>\n  <span class=\"token keyword\">const</span> hashHex <span class=\"token operator\">=</span> hashArray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span> <span class=\"token operator\">=&gt;</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// convert bytes to hex string</span>\n  <span class=\"token keyword\">return</span> hashHex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> digestHex <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">digestMessage</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>digestHex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>状態</th>\n      <th>備考</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.w3.org/TR/WebCryptoAPI/#dfn-SubtleCrypto-method-digest\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Web Cryptography API<br><small lang=\"ja\">SubtleCrypto.digest() の定義</small></a></td>\n      <td><span class=\"spec-rec\">勧告</span></td>\n      <td>初回定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.SubtleCrypto.digest","dataURL":"/ja/docs/Web/API/SubtleCrypto/digest/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> Chrome 60 では、 TLS 接続出ない場合に crypto.subtle を無効化する機能が追加されました。</p>\n</div>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\" class=\"external\" rel=\" noopener\">Chromium secure origins specification</a></li>\n  <li><a href=\"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\" class=\"external\" rel=\" noopener\">FIPS 180-4</a> specifies the SHA family of digest algorithms.</li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"対応しているアルゴリズム","id":"対応しているアルゴリズム"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"SubtleCrypto インターフェースの digest() メソッドは、指定されたデータの digest を返します。ダイジェストとは、可変長の入力に由来する固定長の短い値です。暗号的ダイジェスト値は耐衝突性を示すため、同じダイジェスト値を持つ 2 つの異なる入力を見つけるのは非常に困難です。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"SubtleCrypto.digest()","locale":"en-US","native":"English (US)"},{"title":"SubtleCrypto.digest()","locale":"es","native":"Español"},{"title":"SubtleCrypto.digest()","locale":"fr","native":"Français"}],"source":{"folder":"ja/web/api/subtlecrypto/digest","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/subtlecrypto/digest/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/SubtleCrypto","title":"SubtleCrypto"},{"uri":"/ja/docs/Web/API/SubtleCrypto/digest","title":"SubtleCrypto.digest()"}],"pageTitle":"SubtleCrypto.digest() - Web API | MDN","noIndexing":false}}