{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Clients","mdn_url":"/ja/docs/Web/API/Clients","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/Clients\"><code>Clients</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Clients/claim\"><code>claim()</code></a></li><li><a href=\"/ja/docs/Web/API/Clients/get\"><code>get()</code></a></li><li><a href=\"/ja/docs/Web/API/Clients/matchAll\"><code>matchAll()</code></a></li><li><a href=\"/ja/docs/Web/API/Clients/openWindow\"><code>openWindow()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/ja/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/ja/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/ja/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/ja/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/ja/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/ja/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/ja/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>Clients</code></strong> インターフェイスは、<a href=\"/ja/docs/Web/API/Client\"><code>Client</code></a> オブジェクトへのアクセスを提供します。 これは、<a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー</a>内で <a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\" title=\"self\"><code>self</code></a><code>.clients</code> を介してアクセスします。</p>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":"<dl>\n  <dt id=\"clients.get\"><a href=\"/ja/docs/Web/API/Clients/get\"><code>Clients.get()</code></a></dt>\n  <dd>\n    <p>指定された <a href=\"/ja/docs/Web/API/Client/id\" title=\"id\"><code>id</code></a> に一致する <a href=\"/ja/docs/Web/API/Client\"><code>Client</code></a> の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。</p>\n  </dd>\n  <dt id=\"clients.matchall\"><a href=\"/ja/docs/Web/API/Clients/matchAll\"><code>Clients.matchAll()</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/Client\"><code>Client</code></a> オブジェクトの配列の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。 options 引数を使用すると、返されるクライアントの種類を制御できます。</p>\n  </dd>\n  <dt id=\"clients.openwindow\"><a href=\"/ja/docs/Web/API/Clients/openWindow\"><code>Clients.openWindow()</code></a></dt>\n  <dd>\n    <p>指定された URL の新しいブラウザーウィンドウを開き、新しい <a href=\"/ja/docs/Web/API/WindowClient\"><code>WindowClient</code></a> の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。</p>\n  </dd>\n  <dt id=\"clients.claim\"><a href=\"/ja/docs/Web/API/Clients/claim\"><code>Clients.claim()</code></a></dt>\n  <dd>\n    <p>アクティブなサービスワーカーが自身の <a href=\"/ja/docs/Web/API/ServiceWorkerRegistration/scope\" title=\"scope\"><code>scope</code></a> 内のすべてのクライアントの <a href=\"/ja/docs/Web/API/ServiceWorkerContainer/controller\" title=\"controller\"><code>controller</code></a> として自分自身を設定できるようにします。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の例は、ユーザーが通知をクリックしたときに既存のチャットウィンドウを表示するか、新しいチャットウィンドウを作成します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'notificationclick'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> allClients <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> clients<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">includeUncontrolled</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> chatClient<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// チャットウィンドウが既に開いているかどうかを確認します。</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> client <span class=\"token keyword\">of</span> allClients<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">==</span> <span class=\"token string\">'/chat/'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// よし、使ってみよう！</span>\n        client<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        chatClient <span class=\"token operator\">=</span> client<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 既存のチャットウィンドウが見つからなかった場合、</span>\n    <span class=\"token comment\">// 新しいウィンドウを開きます。</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>chatClient<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      chatClient <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> clients<span class=\"token punctuation\">.</span><span class=\"token function\">openWindow</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/chat/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// クライアントにメッセージを送ります。</span>\n    chatClient<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新しいチャットメッセージ！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/ServiceWorker/#clients\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"ja\">Clients の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>初期定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.Clients","dataURL":"/ja/docs/Web/API/Clients/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Service worker の使用</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">ServiceWorker の準備はできていますか？</a>（英語）</li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></li>\n</ul>"}}],"toc":[{"text":"メソッド","id":"メソッド"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Clients インターフェイスは、Client オブジェクトへのアクセスを提供します。 これは、サービスワーカー内で self.clients を介してアクセスします。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Clients","locale":"en-US","native":"English (US)"},{"title":"Clients","locale":"fr","native":"Français"},{"title":"Clients","locale":"ko","native":"한국어"},{"title":"Clients","locale":"ru","native":"Русский"},{"title":"Clients","locale":"zh-CN","native":"中文 (简体)"},{"title":"Clients","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/clients","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/clients/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Clients","title":"Clients"}],"pageTitle":"Clients - Web API | MDN","noIndexing":false}}