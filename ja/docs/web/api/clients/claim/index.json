{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Clients.claim()","mdn_url":"/ja/docs/Web/API/Clients/claim","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Clients\"><code>Clients</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><em><code>claim()</code></em></li><li><a href=\"/ja/docs/Web/API/Clients/get\"><code>get()</code></a></li><li><a href=\"/ja/docs/Web/API/Clients/matchAll\"><code>matchAll()</code></a></li><li><a href=\"/ja/docs/Web/API/Clients/openWindow\"><code>openWindow()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/Clients\"><code>Clients</code></a> インターフェイスの <strong><code>claim()</code></strong> メソッドを使用すると、アクティブなサービスワーカーが自身のスコープ（<a href=\"/ja/docs/Web/API/ServiceWorkerRegistration/scope\" title=\"scope\"><code>scope</code></a>）内のすべてのクライアントのコントローラー（<a href=\"/ja/docs/Web/API/ServiceWorkerContainer/controller\" title=\"controller\"><code>controller</code></a>）として自分自身を設定できます。 これにより、このサービスワーカーによって制御されるようになるクライアントの <a href=\"/ja/docs/Web/API/ServiceWorkerContainer\" title=\"navigator.serviceWorker\"><code>navigator.serviceWorker</code></a> で <code>\"controllerchange\"</code> イベントがトリガーされます。</p>\n<p>サービスワーカーが最初に登録されると、ページは次に読み込まれるまでそれを使用しません。 <code>claim()</code> メソッドを使用すると、これらのページがすぐに制御されます。 これにより、サービスワーカーがネットワークを介して、または別のサービスワーカーを介して定期的に読み込まれるページを制御することに注意してください。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">await clients.claim();\n</pre>"}},{"type":"prose","value":{"id":"パラメーター","title":"パラメーター","isH3":true,"content":"<p>なし。</p>"}},{"type":"prose","value":{"id":"戻り値","title":"戻り値","isH3":true,"content":"<p><code>undefined</code> に解決される <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の例では、サービスワーカーの <code>\"activate\"</code> イベントリスナー内で <code>claim()</code> を使用しているため、同じスコープに読み込まれたクライアントは、フェッチがこのサービスワーカーを通過する前に再読み込みする必要がありません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>self<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'activate'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span>clients<span class=\"token punctuation\">.</span><span class=\"token function\">claim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/ServiceWorker/#clients-claim\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"ja\">claim() の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>初期定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.Clients.claim","dataURL":"/ja/docs/Web/API/Clients/claim/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Service worker の使用</a></li>\n  <li><a href=\"https://developers.google.com/web/fundamentals/instant-and-offline/service-worker/lifecycle\" class=\"external\" rel=\" noopener\">Service Worker のライフサイクル</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">ServiceWorker の準備はできていますか？</a>（英語）</li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promises</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting\" title=\"self.skipWaiting()\"><code>self.skipWaiting()</code></a> - サービスワーカーの待機フェーズをスキップする</li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Clients インターフェイスの claim() メソッドを使用すると、アクティブなサービスワーカーが自身のスコープ（scope）内のすべてのクライアントのコントローラー（controller）として自分自身を設定できます。 これにより、このサービスワーカーによって制御されるようになるクライアントの navigator.serviceWorker で \"controllerchange\" イベントがトリガーされます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Clients.claim()","locale":"en-US","native":"English (US)"},{"title":"Clients.claim()","locale":"fr","native":"Français"},{"title":"Clients.claim()","locale":"ko","native":"한국어"},{"title":"Clients.claim()","locale":"ru","native":"Русский"},{"title":"Clients.claim()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/clients/claim","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/clients/claim/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Clients","title":"Clients"},{"uri":"/ja/docs/Web/API/Clients/claim","title":"Clients.claim()"}],"pageTitle":"Clients.claim() - Web API | MDN","noIndexing":false}}