{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"NavigationPreloadManager","mdn_url":"/ja/docs/Web/API/NavigationPreloadManager","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/NavigationPreloadManager\"><code>NavigationPreloadManager</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NavigationPreloadManager/disable\"><code>disable()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NavigationPreloadManager/enable\"><code>enable()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NavigationPreloadManager/getState\"><code>getState()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NavigationPreloadManager/setHeaderValue\"><code>setHeaderValue()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/ja/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/ja/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/ja/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/ja/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/ja/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/ja/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/ja/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/ja/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/Service_Worker_API\">Service Worker API</a> の <strong><code>NavigationPreloadManager</code></strong> インターフェイスは、サービスワーカーによるリソースのプリロード（事前読み込み）を管理するためのメソッドを提供します。</p>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":"<dl>\n  <dt id=\"navigationpreloadmanager.enable_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NavigationPreloadManager/enable\"><code>NavigationPreloadManager.enable()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>ナビゲーションのプリロードを有効にし、解決する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。</p>\n  </dd>\n  <dt id=\"navigationpreloadmanager.disable_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NavigationPreloadManager/disable\"><code>NavigationPreloadManager.disable()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>ナビゲーションのプリロードを無効にし、解決する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。</p>\n  </dd>\n  <dt id=\"navigationpreloadmanager.setheadervalue_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NavigationPreloadManager/setHeaderValue\"><code>NavigationPreloadManager.setHeaderValue()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p><code>Service-Worker-Navigation-Preload</code> ヘッダーの値を設定し、空の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。</p>\n  </dd>\n  <dt id=\"navigationpreloadmanager.getstate_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/NavigationPreloadManager/getState\"><code>NavigationPreloadManager.getState()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>プリロードが有効かどうかと、<code>Service-Worker-Navigation-Preload</code> の内容を示すプロパティを持つオブジェクトに解決する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<h4 id=\"ナビゲーションのプリロードの機能を検出して有効化\">ナビゲーションのプリロードの機能を検出して有効化</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'activate'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>registration<span class=\"token punctuation\">.</span>navigationPreload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ナビゲーションのプリロードを有効にします！</span>\n      <span class=\"token keyword\">await</span> self<span class=\"token punctuation\">.</span>registration<span class=\"token punctuation\">.</span>navigationPreload<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"プリロードされたレスポンスの使用\">プリロードされたレスポンスの使用</h4>\n<p>次の例は、プリロードされたレスポンスを使用する fetch イベントの実装を示しています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 可能なら、キャッシュから応答します</span>\n    <span class=\"token keyword\">const</span> cachedResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cachedResponse<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> cachedResponse<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// それがなく、プリロードされたレスポンスがあれば、それを使用します</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> event<span class=\"token punctuation\">.</span>preloadResponse<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// それもなければ、ネットワークを試します。</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/ServiceWorker/#navigation-preload-manager\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"ja\">NavigationPreloadManager の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>初期定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.NavigationPreloadManager","dataURL":"/ja/docs/Web/API/NavigationPreloadManager/bcd.json"}}],"toc":[{"text":"メソッド","id":"メソッド"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"Service Worker API の NavigationPreloadManager インターフェイスは、サービスワーカーによるリソースのプリロード（事前読み込み）を管理するためのメソッドを提供します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"NavigationPreloadManager","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/navigationpreloadmanager","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/navigationpreloadmanager/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/NavigationPreloadManager","title":"NavigationPreloadManager"}],"pageTitle":"NavigationPreloadManager - Web API | MDN","noIndexing":false}}