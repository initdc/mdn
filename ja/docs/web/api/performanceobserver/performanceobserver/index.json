{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"PerformanceObserver()","mdn_url":"/ja/docs/Web/API/PerformanceObserver/PerformanceObserver","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Performance_Timeline\">Performance Timeline</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><em><code>PerformanceObserver()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PerformanceObserver/supportedEntryTypes\"><code>supportedEntryTypes</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/PerformanceObserver/disconnect\"><code>disconnect()</code></a></li><li><a href=\"/ja/docs/Web/API/PerformanceObserver/observe\"><code>observe()</code></a></li><li><a href=\"/ja/docs/Web/API/PerformanceObserver/takeRecords\"><code>takeRecords()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Performance Timeline API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/ja/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/ja/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></li><li><a href=\"/ja/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/ja/docs/Web/API/performance_property\"><code>performance_property</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>PerformanceObserver()</code></strong> コンストラクターは、指定された observer <code>callback</code> を使用して新しい <a href=\"/ja/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> オブジェクトを作成します。observer callback は、<a href=\"/ja/docs/Web/API/PerformanceObserver/observe\" title=\"observe()\"><code>observe()</code></a> メソッドを介して、登録された <a href=\"/ja/docs/Web/API/PerformanceEntry/entryType\" title=\"エントリタイプ\">エントリタイプ</a> に対して <a href=\"/ja/docs/Web/API/PerformanceEntry\" title=\"パフォーマンスエントリイベント\">パフォーマンスエントリイベント</a> が記録されたときに呼び出されます。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">var observer = new PerformanceObserver(callback);\n</pre>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"callback\"><em><code>callback</code></em></dt>\n  <dd>\n    <p>監視対象のパフォーマンスイベントが記録されたときに呼び出される <code>PerformanceObserverCallback</code> コールバック。コールバックが呼び出されるとき、その最初の引数は <a href=\"/ja/docs/Web/API/PerformanceObserverEntryList\" title=\"パフォーマンスオブザーバエントリのリスト\">パフォーマンスオブザーバエントリのリスト</a> で、2 番目の引数は <a href=\"/ja/docs/Web/API/PerformanceObserver\" title=\"observer\"><code>observer</code></a> オブジェクトです。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>監視対象のパフォーマンスイベントが発生したときに指定された <code>callback</code> を呼び出す新しい <a href=\"/ja/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> オブジェクト。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> entries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> entries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Process \"mark\" and \"frame\" events</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"frame\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">perf_observer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Process the \"measure\" event</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> observer2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span>perf_observer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver2<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"measure\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>ステータス</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/performance-timeline/#idl-def-performanceobservercallback\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Performance Timeline Level 2<br><small lang=\"ja\">PerformanceObserver() の定義</small></a></td>\n      <td><span class=\"spec-cr\">勧告候補</span></td>\n      <td><code>PerformanceObserver()</code> コンストラクターの初期定義。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.PerformanceObserver.PerformanceObserver","dataURL":"/ja/docs/Web/API/PerformanceObserver/PerformanceObserver/bcd.json"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"PerformanceObserver() コンストラクターは、指定された observer callback を使用して新しい PerformanceObserver オブジェクトを作成します。observer callback は、observe() メソッドを介して、登録された エントリタイプ に対して パフォーマンスエントリイベント が記録されたときに呼び出されます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"PerformanceObserver()","locale":"en-US","native":"English (US)"},{"title":"PerformanceObserver()","locale":"fr","native":"Français"},{"title":"PerformanceObserver()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/performanceobserver/performanceobserver","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/performanceobserver/performanceobserver/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/PerformanceObserver","title":"PerformanceObserver"},{"uri":"/ja/docs/Web/API/PerformanceObserver/PerformanceObserver","title":"PerformanceObserver()"}],"pageTitle":"PerformanceObserver() - Web API | MDN","noIndexing":false}}