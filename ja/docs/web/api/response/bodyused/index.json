{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Response.bodyUsed","mdn_url":"/ja/docs/Web/API/Response/bodyUsed","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/Response/Response\"><code>Response()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Response/body\"><code>body</code></a></li><li><em><code>bodyUsed</code></em></li><li><a href=\"/ja/docs/Web/API/Response/headers\"><code>headers</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/ok\"><code>ok</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/redirected\"><code>redirected</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/status\"><code>status</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/statusText\"><code>statusText</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/type\"><code>type</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/url\"><code>url</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Response/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/ja/docs/Web/API/Response/blob\"><code>blob()</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Response/clone\"><code>clone()</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Response/error\"><code>error()</code></a></li><li><a href=\"/ja/docs/Web/API/Response/formData\"><code>formData()</code></a></li><li><a href=\"/ja/docs/Web/API/Response/json\"><code>json()</code></a></li><li><a href=\"/ja/docs/Web/API/Response/redirect\"><code>redirect()</code></a></li><li><a href=\"/ja/docs/Web/API/Response/text\"><code>text()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>bodyUsed</code></strong> は <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> インターフェイスの読み取り専用プロパティで、本文が読取済みであるかどうかを示す論理値です。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>response<span class=\"token punctuation\">.</span>bodyUsed<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"値","title":"値","isH3":true,"content":"<p>論理値。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p><a href=\"https://github.com/mdn/fetch-examples/tree/master/fetch-request\" class=\"external\" rel=\" noopener\">Fetch リクエストの例</a>（<a href=\"https://mdn.github.io/fetch-examples/fetch-request/\" class=\"external\" rel=\" noopener\">Fetch リクエストをライブで</a>実行）では、 <a href=\"/ja/docs/Web/API/Request/Request\" title=\"Request()\"><code>Request()</code></a> コンストラクターを使用して新しいリクエストを作成し、それを使用して JPG を読み取ります。読み取りが成功したら、<code>blob()</code> を使用してレスポンスから <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> を読み取り、<a href=\"/ja/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL</code></a> を使用してオブジェクト URL に格納し、その URL を <a href=\"/ja/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> 要素のソースとして設定して画像を表示します。</p>\n<p><code>response.bodyUsed</code> を <code>response.blob()</code> の呼び出し前後にコンソールに記録していることに注目してください。 その時点で本文が読み取られたかによるため、これは呼び出し前では <code>false</code> を返し、その後では <code>true</code> を返します。</p>"}},{"type":"prose","value":{"id":"html_コンテンツ","title":"HTML コンテンツ","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://wikipedia.org/static/images/project-logos/frwiki-1.5x.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"js_コンテンツ","title":"JS コンテンツ","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://upload.wikimedia.org/wikipedia/commons/7/77/Delete_key1.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>bodyUsed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> res <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>bodyUsed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> objectURL <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> objectURL<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"例 sample\" id=\"frame_例\" width=\"100%\" height=\"250px\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Response/bodyUsed/_sample_.%E4%BE%8B.html\" loading=\"lazy\"></iframe>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#ref-for-dom-body-bodyused①","title":"Fetch Standard"}],"query":"api.Response.bodyUsed"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.Response.bodyUsed","dataURL":"/ja/docs/Web/API/Response/bodyUsed/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API\">ServiceWorker API</a></li>\n  <li><a href=\"/ja/docs/Web/HTTP/CORS\">HTTP アクセス制御 (CORS)</a></li>\n  <li><a href=\"/ja/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"bodyUsed は Response インターフェイスの読み取り専用プロパティで、本文が読取済みであるかどうかを示す論理値です。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Response.bodyUsed","locale":"en-US","native":"English (US)"},{"title":"Response.bodyUsed","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/response/bodyused","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/response/bodyused/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Response","title":"Response"},{"uri":"/ja/docs/Web/API/Response/bodyUsed","title":"Response.bodyUsed"}],"pageTitle":"Response.bodyUsed - Web API | MDN","noIndexing":false}}