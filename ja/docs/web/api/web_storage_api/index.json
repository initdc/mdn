{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Web Storage API","mdn_url":"/ja/docs/Web/API/Web_Storage_API","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Web_Storage_API\">Web Storage API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\">Using the Web Storage API</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/Storage\"><code>Storage</code></a></li><li><a href=\"/ja/docs/Web/API/StorageEvent\"><code>StorageEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Window/sessionStorage\"><code>Window.sessionStorage</code></a></li><li><a href=\"/ja/docs/Web/API/Window/localStorage\"><code>Window.localStorage</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/Window/storage_event\"><code>Window</code>: <code>storage</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Web Storage API</strong> は、<a href=\"/ja/docs/Glossary/Cookie\">クッキー</a>を使用するよりも直感的な方法で、ブラウザーがキーと値のペアを保存できる仕組みを提供します。</p>"}},{"type":"prose","value":{"id":"web_storage_の概念と使用方法","title":"Web Storage の概念と使用方法","isH3":false,"content":"<p>Web Storage には、以下の 2 種類の仕組みがあります:</p>\n<ul>\n  <li><code>sessionStorage</code> は、ページのセッション中 (ページの再読み込みや復元を含む、ブラウザーを開いている間) に使用可能な、<a href=\"/ja/docs/Glossary/Origin\">オリジン</a>ごとに区切られた保存領域を管理します。\n    <ul>\n      <li>セッションデータのみを保存します。つまり、データはブラウザ（またはタブ）が閉じられるまで保存されます。</li>\n      <li>データがサーバに転送されることはありません。</li>\n      <li>ストレージの制限がクッキーよりも大きいです（最大 5MB ）。</li>\n    </ul>\n  </li>\n  <li><code>localStorage</code> も同様ですが、こちらはブラウザーを閉じたり再び開いたりしても持続します。\n    <ul>\n      <li>有効期限なしでデータを保存し、 JavaScript を介してクリアされます。もしくは、ブラウザキャッシュ/ローカルに保存したデータのクリアによりクリアされます。</li>\n      <li>ストレージ制限は 3 つの中で最大です。</li>\n    </ul>\n  </li>\n</ul>\n<p>これらの仕組みは <a href=\"/ja/docs/Web/API/Window/sessionStorage\"><code>Window.sessionStorage</code></a> および <a href=\"/ja/docs/Web/API/Window/localStorage\"><code>Window.localStorage</code></a> プロパティ (正確には、サポートするブラウザーは <code>Window</code> オブジェクトが <code>WindowLocalStorage</code> および <code>WindowSessionStorage</code> オブジェクトを実装しており、これらに <code>localStorage</code> および <code>sessionStorage</code> プロパティがあります) を通して使用でき、いずれかのプロパティを使用すると <a href=\"/ja/docs/Web/API/Storage\"><code>Storage</code></a> オブジェクトのインスタンスを生成して、データアイテムの保存、取り出し、削除ができます。 同じオリジンに対して <code>sessionStorage</code> と <code>localStorage</code> は、別の Storage オブジェクトを使用します。 これらは別々に制御されて機能します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Firefox 45 より、ブラウザーがクラッシュまたは再起動したとき、オリジンごとに保存されるデータ量は 10MB に制限されます。 Web Storage の使用量が過大であることによって発生するメモリの問題を避けるために、制限を設定しました。</p>\n</div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> ユーザーが<a href=\"https://support.mozilla.org/kb/disable-third-party-cookies\" class=\"external\" rel=\" noopener\">サードパーティのクッキーを禁止している</a>（英語）場合は、サードパーティの iframe から Web Storage にアクセスできません (<a href=\"/ja/docs/Mozilla/Firefox/Releases/43\">Firefox 43</a> から、この動作を実装しています)。</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> Web Storage は、<a href=\"/ja/docs/Storage\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">mozStorage</a> (SQLite 用の、Mozilla の XPCOM インターフェイス) や <a href=\"/ja/docs/Session_store_API\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Session store API</a> (拡張機能で使用するための、<a href=\"/ja/docs/XPCOM\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">XPCOM</a> ストレージユーティリティ) とは異なります。</p>\n</div>"}},{"type":"prose","value":{"id":"web_storage_インターフェイス","title":"Web Storage インターフェイス","isH3":false,"content":"<dl>\n  <dt id=\"storage\"><a href=\"/ja/docs/Web/API/Storage\"><code>Storage</code></a></dt>\n  <dd>\n    <p>特定のドメインおよびストレージタイプ (session または local) に対して、データを保存、取り出し、削除できます。</p>\n  </dd>\n  <dt id=\"window\"><a href=\"/ja/docs/Web/API/Window\"><code>Window</code></a></dt>\n  <dd>\n    <p>Web Storage API は <a href=\"/ja/docs/Web/API/Window\"><code>Window</code></a> オブジェクトを、<a href=\"/ja/docs/Web/API/Window/sessionStorage\"><code>Window.sessionStorage</code></a> および <a href=\"/ja/docs/Web/API/Window/localStorage\"><code>Window.localStorage</code></a> という新たなプロパティで拡張します。 これらは、それぞれ現在のドメインの session および local <a href=\"/ja/docs/Web/API/Storage\"><code>Storage</code></a> オブジェクトへのアクセス手段を提供します。 また、保存領域が変更される (例えば新たなアイテムを保存する) と発生する、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Window/storage_event\"><code>Window.onstorage</code> <small>(en-US)</small></a> イベントハンドラもあります。</p>\n  </dd>\n  <dt id=\"storageevent\"><a href=\"/ja/docs/Web/API/StorageEvent\"><code>StorageEvent</code></a></dt>\n  <dd>\n    <p><code>storage</code> イベントは、保存領域が変更されたときにドキュメントの <code>Window</code> オブジェクトで発生します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>Web Storage の典型的な使用法を示すため、想像力豊かに <a href=\"https://github.com/mdn/dom-examples/tree/master/web-storage\" class=\"external\" rel=\" noopener\">Web Storage Demo</a> と名づけたシンプルな例を作成しました。<a href=\"https://mdn.github.io/dom-examples/web-storage/\" class=\"external\" rel=\" noopener\">ランディングページ</a>には、色、フォント、装飾画像をカスタマイズするためのコントロールがあります。 別の選択肢を選ぶと、即座にページが更新されます。 さらに、選択内容を <code>localStorage</code> に保存しますので、別のページに移動した後に再びこのページを読み込むと、選択内容が維持されています。</p>\n<p>また、<a href=\"https://mdn.github.io/dom-examples/web-storage/event.html\" class=\"external\" rel=\" noopener\">event output ページ</a>も提供します。 このページを別のタブで開くと、ランディングページで選択肢を変更したときに <a href=\"/ja/docs/Web/API/StorageEvent\"><code>StorageEvent</code></a> が発生するのに応じて、更新されたストレージの情報が出力されるのを確認できます。</p>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>策定状況</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://html.spec.whatwg.org/multipage/webstorage.html#webstorage\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"HTML Living Standardの仕様書\" rel=\" noopener\">HTML Living Standard</a></td>\n      <td><span class=\"spec-living\">現行の標準</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"ブラウザー実装状況","title":"ブラウザー実装状況","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"Window.localStorage","id":"window.localstorage","isH3":true,"query":"api.Window.localStorage","dataURL":"/ja/docs/Web/API/Web_Storage_API/bcd.json"}},{"type":"browser_compatibility","value":{"title":"Window.sessionStorage","id":"window.sessionstorage","isH3":true,"query":"api.Window.sessionStorage","dataURL":"/ja/docs/Web/API/Web_Storage_API/bcd-2.json"}},{"type":"prose","value":{"id":"プライベートブラウジング_シークレットモード","title":"プライベートブラウジング / シークレットモード","isH3":false,"content":"<p>ほとんどの現行ブラウザーは 'シークレット' や 'プライベートブラウジング' などと呼ばれる、履歴やクッキーといったデータを保存しないプライバシーモードをサポートしています。 これらは明白な理由で、Web Storage とは根本的に互換性がありません。 それでもブラウザーベンダーは、この非互換性をどのように扱うかを、さまざまなシナリオで実験しています。</p>\n<p>ほとんどのブラウザーは Storage API を有効にして、見かけ上完全に機能する方針をとっていますが、保存したデータはすべて、ブラウザーを閉じた後に消去されることが大きな違いです。 これらのブラウザーでは、既存の保存済みデータ (通常のブラウジングセッションで保存したもの) をどう扱うかについて、まださまざまな解釈が存在します。 このデータはプライベートモードで読み出せるべきでしょうか? 一部のブラウザー、特に Safari ではストレージは使用できますが空であり、また割り当てられたクォータが 0 バイトであるため事実上データを書き込めないという解決策をとっています。</p>\n<p>開発者はこれらのさまざまな実装を意識して、Web Storage API に依存する Web サイトを開発する際に考慮するべきです。 詳しくはこのトピックを扱った、<a href=\"https://blog.whatwg.org/tag/localstorage\" class=\"external\" rel=\" noopener\">WHATWG のブログ記事</a>（英語）をご覧ください。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\">Web Storage API を使用する</a></li>\n  <li><a href=\"/ja/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria\">ブラウザーのストレージ制限と削除基準</a></li>\n  <li><a href=\"https://medium.com/@ramsunvtech/onfocus-html5-storage-apis-b45d92aa424b\" class=\"external\" rel=\" noopener\">HTML5 Storage API By Venkatraman</a></li>\n</ul>"}}],"toc":[{"text":"Web Storage の概念と使用方法","id":"web_storage_の概念と使用方法"},{"text":"Web Storage インターフェイス","id":"web_storage_インターフェイス"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザー実装状況","id":"ブラウザー実装状況"},{"text":"プライベートブラウジング / シークレットモード","id":"プライベートブラウジング_シークレットモード"},{"text":"関連情報","id":"関連情報"}],"summary":"Web Storage API は、クッキーを使用するよりも直感的な方法で、ブラウザーがキーと値のペアを保存できる仕組みを提供します。","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Web Storage API","locale":"en-US","native":"English (US)"},{"title":"API de almacenamiento web","locale":"es","native":"Español"},{"title":"Web Storage API","locale":"fr","native":"Français"},{"title":"Web Storage API","locale":"ko","native":"한국어"},{"title":"API de Armazenamento na Web","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Веб хранилище (API)","locale":"ru","native":"Русский"},{"title":"Web Storage API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/web_storage_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/web_storage_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Web_Storage_API","title":"Web Storage API"}],"pageTitle":"Web Storage API - Web API | MDN","noIndexing":false}}