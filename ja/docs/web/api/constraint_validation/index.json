{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"制約検証 API","mdn_url":"/ja/docs/Web/API/Constraint_validation","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Constraint_validation\"><code>Constraint_validation</code></a></strong></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>制約検証 (Constraint Validation) API により、ユーザーがフォームコントロールに入力した値を、サーバーに値を送信する前にチェックすることができます。</p>"}},{"type":"prose","value":{"id":"概念と使用方法","title":"概念と使用方法","isH3":false,"content":"<p><a href=\"/ja/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>、<a href=\"/ja/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>、<a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> などの特定の HTML フォームコントロールは、 <code>required</code> や <code>pattern</code> などの属性を使用して基本的な制約を設定し、許容される値の形式を制限することができます。</p>\n<p>しかし、より複雑な制約を課したい場合や、検証失敗の報告を既定のものよりも分かりやすくしたい場合もあるでしょう。このような場合には、制約検証 API を使用します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> クライアント側の制約検証は、サーバー側での検証の必要性をなくすものではありません。クライアント側の検証によって、一般的な多くの種類の無効な値を防ぐことができても、古いブラウザーやウェブアプリケーションを騙そうとする攻撃者によって、無効な値が送信されることがあります。そのため、クライアント側で行っていることと矛盾しない方法で、サーバー側でも入力値を検証する必要があります。クライアント側の検証は、ユーザーにすばやくフィードバックを与えるためのツールです。サーバーが受信したデータを完全に無害化するためにこれに依存してはいけません。</p>\n</div>\n<p>制約検証 API による制約検証は、単一のフォーム要素で行われたり、フォームレベルでは <a href=\"/ja/docs/Web/HTML/Element/form\"><code>&lt;form&gt;</code></a> 要素自体で行われたりします。</p>"}},{"type":"prose","value":{"id":"制約検証のインターフェイス","title":"制約検証のインターフェイス","isH3":false,"content":"<dl>\n  <dt id=\"validitystate\"><a href=\"/ja/docs/Web/API/ValidityState\">ValidityState</a></dt>\n  <dd>\n    <p>ValidityState インターフェイスは、フォームコントロール要素がその定義された制約に対して取り得る<em>有効性の状態</em>を表します。また、要素の値が検証に失敗するかどうか、またその理由を説明するのにも役立ちます。</p>\n  </dd>\n  <dt id=\"invalid\"><a href=\"/ja/docs/Web/API/HTMLInputElement/invalid_event\">invalid</a> イベント</dt>\n  <dd>\n    <p>このイベント型は、フォームコントロール要素が制約を満たさない場合に、フォームコントロール要素で発生します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"他のインターフェイスの拡張","title":"他のインターフェイスの拡張","isH3":true,"content":"<p>制約検証 API は、下記のフォーム関連要素のインターフェイスを、数多くの新しいプロパティとメソッドで拡張します (フォームの所有者を示す <code>form</code> 属性を持つことができる要素です)。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/HTMLButtonElement\"><strong><code>HTMLButtonElement</code></strong></a></li>\n  <li><a href=\"/ja/docs/Web/API/HTMLFieldSetElement\"><strong><code>HTMLFieldsetElement</code></strong></a></li>\n  <li><a href=\"/ja/docs/Web/API/HTMLInputElement\"><strong><code>HTMLInputElement</code></strong></a></li>\n  <li><a href=\"/ja/docs/Web/API/HTMLObjectElement\"><strong><code>HTMLObjectElement</code></strong></a></li>\n  <li><a href=\"/ja/docs/Web/API/HTMLOutputElement\"><strong><code>HTMLOutputElement</code></strong></a></li>\n  <li><a href=\"/ja/docs/Web/API/HTMLSelectElement\"><strong><code>HTMLSelectElement</code></strong></a></li>\n  <li><a href=\"/ja/docs/Web/API/HTMLTextAreaElement\"><strong><code>HTMLTextAreaElement</code></strong></a></li>\n</ul>\n<h4 id=\"プロパティ\">プロパティ</h4>\n<dl>\n  <dt id=\"validity\"><a href=\"/ja/docs/Web/API/HTMLObjectElement/validity\" title=\"validity\"><code>validity</code></a></dt>\n  <dd>\n    <p>読み取り専用のプロパティで、 <a href=\"/ja/docs/Web/API/ValidityState\"><code>ValidityState</code></a> オブジェクトを返します。そのプロパティは、その要素の値に対する検証エラーを表します。</p>\n  </dd>\n  <dt id=\"validationmessage\"><a href=\"/ja/docs/Web/API/HTMLObjectElement/validationMessage\" title=\"validationMessage\"><code>validationMessage</code></a></dt>\n  <dd>\n    <p>読み取り専用のプロパティで、その要素が制約検証の候補になっていない場合は空の文字列を、その要素の値が妥当な場合はその値を返します。要素の値が妥当でない場合は、ローカライズされた検証メッセージを返します。これは、要素が有効性に問題のある唯一のフォームコントロールである場合、 UI に表示されます。 <a href=\"/ja/docs/Web/API/HTMLObjectElement/setCustomValidity\" title=\"setCustomValidity()\"><code>setCustomValidity()</code></a> を使用してカスタムエラーメッセージが設定されている場合、これが表示されます。</p>\n  </dd>\n  <dt id=\"willvalidate\"><a href=\"/ja/docs/Web/API/HTMLObjectElement/willValidate\" title=\"willValidate\"><code>willValidate</code></a></dt>\n  <dd>\n    <p>読み取り専用の boolean プロパティで、その要素が制約検証の候補である場合は <code>true</code> を、それ以外の場合は <code>false</code> を返します。 <code>HTMLObjectElement</code> インターフェイスを持つ要素は、制約検証の候補になることはありません。その他の要素は、特定の条件によって制約検証から除外されることがあります。</p>\n  </dd>\n</dl>\n<h4 id=\"メソッド\">メソッド</h4>\n<dl>\n  <dt id=\"checkvalidity\"><a href=\"/ja/docs/Web/API/HTMLObjectElement/checkValidity\" title=\"checkValidity()\"><code>checkValidity()</code></a></dt>\n  <dd>\n    <p>要素の値とその制約をチェックします。値が無効な場合は、要素に <a href=\"/ja/docs/Web/API/HTMLInputElement/invalid_event\">invalid</a> イベントを発生させて <code>false</code> を返し、それ以外の場合は <code>true</code> を返します。</p>\n  </dd>\n  <dt id=\"reportvalidity\"><a href=\"/ja/docs/Web/API/HTMLFormElement/reportValidity\" title=\"reportValidity()\"><code>reportValidity()</code></a> (HTMLFormElement のメソッド)</dt>\n  <dd>\n    <p>要素の値をその制約と照合し、有効性の状態を報告します。値が無効な場合は、要素で <a href=\"/ja/docs/Web/API/HTMLInputElement/invalid_event\">invalid</a> イベントを発生させて <code>false</code> を返し、ユーザーエージェントが利用可能な方法でユーザーに有効性の状態を報告します。それ以外の場合は、 <code>true</code> を返します。</p>\n  </dd>\n  <dt id=\"setcustomvaliditymessage\"><a href=\"/ja/docs/Web/API/HTMLObjectElement/setCustomValidity\" title=\"setCustomValidity(<em>message</em>)\"><code>setCustomValidity(<em>message</em>)</code></a></dt>\n  <dd>\n    <p>値が有効でない理由を説明するカスタムエラーメッセージ文字列を設定し、これがフォームの送信時にユーザーに表示されます。メッセージが設定されると、有効性の状態が無効に設定されます。この状態を解除するには、引数に空の文字列を渡してこの関数を呼び出ししてください。この場合、カスタムエラーメッセージは消去され、要素は有効とみなされ、メッセージは表示されません。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>以下のフォームを取り上げてみましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>ユーザー名を入力してください (英大文字と小文字で): <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span> <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>[A-Za-z]+<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">&gt;</span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>HTML フォームの基本的な検証機能により、有効な値が入力されていなかったり、または <a href=\"/ja/docs/Web/HTML/Attributes/pattern\"><code>pattern</code></a> に一致しない値を入力したりしてフォームを送信しようとすると、既定のエラーメッセージが表示されます。</p>\n<p>代わりに独自のエラーメッセージを表示させたい場合は、以下のような JavaScript を使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> nameInput <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> form <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnameInput<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  nameInput<span class=\"token punctuation\">.</span><span class=\"token function\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  nameInput<span class=\"token punctuation\">.</span><span class=\"token function\">checkValidity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnameInput<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'invalid'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nameInput<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    nameInput<span class=\"token punctuation\">.</span><span class=\"token function\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ユーザー名を入力してください！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    nameInput<span class=\"token punctuation\">.</span><span class=\"token function\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ユーザー名は英大文字と小文字のみしか入れられません。やり直してください！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この例は次のように表示されます。</p><iframe class=\"sample-code-frame\" title=\"例\" id=\"frame_examples\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Constraint_validation/_sample_.examples.html\" loading=\"lazy\"></iframe>\n<p>要点:</p>\n<ul>\n  <li>input 要素の値が変更されるたびに、 <code>input</code> イベントハンドラーから <code>checkValidity()</code> メソッドを実行して、入力要素の有効状態をチェックしています。</li>\n  <li>値が無効な場合は、 <code>invalid</code> イベントが発生し、 <code>invalid</code> イベントハンドラー関数が実行されます。この関数の中では、値が空であるために無効なのか、パターンに一致しないために無効なのかを、 <code>if()</code> ブロックを使って判断し、独自の検証エラーメッセージを設定します。</li>\n  <li>その結果、送信ボタンが押されたときに入力値が無効であれば、カスタムエラーメッセージのいずれかが表示されます。</li>\n  <li>有効であれば、期待通りに送信されます。そのためには、空の文字列値で <code>setCustomValidity()</code> を呼び出すことによって、カスタム検証をキャンセルしなければなりません。そのため、 <code>input</code> イベントが発生するたびにこれを行います。これを行わず、以前にカスタム検証が設定されていた場合、送信時に現在有効な値を含んでいても、入力は無効と登録されてしまいます。</li>\n</ul>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Firefox は、多くのバージョンで <code>x-moz-errormessage</code> という独自のエラー属性に対応しており、同様の方法で独自のエラーメッセージを設定することができました。これはバージョン 66 で削除されました (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1513890\" class=\"external\" rel=\" noopener\">バグ 1513890</a> 参照)。</p>\n</div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>状態</th>\n      <th>備考</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://html.spec.whatwg.org/multipage/forms.html#the-constraint-validation-api\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">HTML Living Standard<br><small lang=\"ja\">constraint validation API の定義</small></a></td>\n      <td><span class=\"spec-living\">現行の標準</span></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.w3.org/TR/html51/sec-forms.html#the-constraint-validation-api\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">HTML 5.1<br><small lang=\"ja\">constraint validation API の定義</small></a></td>\n      <td><span class=\"spec-rec\">勧告</span></td>\n      <td>前回のスナップショット <a href=\"https://www.w3.org/TR/html52/\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"HTML5の仕様書\" rel=\" noopener\">HTML5</a> から変更なし。</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.w3.org/TR/html52/forms.html#the-constraint-validation-api\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">HTML5<br><small lang=\"ja\">constraint validation API の定義</small></a></td>\n      <td><span class=\"spec-rec\">勧告</span></td>\n      <td>このインターフェイスを含む <a href=\"https://html.spec.whatwg.org/multipage/\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"HTML Living Standardの仕様書\" rel=\" noopener\">HTML Living Standard</a> の最初のスナップショット。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a></li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a></li>\n  <li><a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a></li>\n  <li><code><a href=\"/ja/docs/Web/API/ValidityState\"><code>ValidityState</code></a></code> のプロパティ: <a href=\"/ja/docs/Web/API/ValidityState/badInput\" title=\"badInput\"><code>badInput</code></a>, <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>customError</code></a>, <a href=\"/ja/docs/Web/API/ValidityState/patternMismatch\" title=\"patternMismatch\"><code>patternMismatch</code></a>, <a href=\"/ja/docs/Web/API/ValidityState/rangeOverflow\" title=\"rangeOverflow\"><code>rangeOverflow</code></a>, <a href=\"/ja/docs/Web/API/ValidityState/rangeUnderflow\" title=\"rangeUnderflow\"><code>rangeUnderflow</code></a>, <a href=\"/ja/docs/Web/API/ValidityState/stepMismatch\" title=\"stepMismatch\"><code>stepMismatch</code></a>, <a href=\"/ja/docs/Web/API/ValidityState/tooLong\" title=\"tooLong\"><code>tooLong</code></a>, <a href=\"/ja/docs/Web/API/ValidityState/tooShort\" title=\"tooShort\"><code>tooShort</code></a>, <a href=\"/ja/docs/Web/API/ValidityState/typeMismatch\" title=\"typeMismatch\"><code>typeMismatch</code></a>, <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>valid</code></a>, <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>valueMissing</code></a></li>\n</ul>"}}],"toc":[{"text":"概念と使用方法","id":"概念と使用方法"},{"text":"制約検証のインターフェイス","id":"制約検証のインターフェイス"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"関連情報","id":"関連情報"}],"summary":"制約検証 (Constraint Validation) API により、ユーザーがフォームコントロールに入力した値を、サーバーに値を送信する前にチェックすることができます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Constraint validation API","locale":"en-US","native":"English (US)"},{"title":"Constraint validation API","locale":"ru","native":"Русский"}],"source":{"folder":"ja/web/api/constraint_validation","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/constraint_validation/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Constraint_validation","title":"制約検証 API"}],"pageTitle":"制約検証 API - Web API | MDN","noIndexing":false}}