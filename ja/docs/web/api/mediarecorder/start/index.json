{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MediaRecorder.start()","mdn_url":"/ja/docs/Web/API/MediaRecorder/start","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/MediaStream_Recording_API\">MediaStream Recording API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/MediaRecorder/MediaRecorder\"><code>MediaRecorder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/audioBitsPerSecond\"><code>audioBitsPerSecond</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/mimeType\"><code>mimeType</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/warning_event\"><code>onwarning</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/state\"><code>state</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/stream\"><code>stream</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond\"><code>videoBitsPerSecond</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/MediaRecorder/isTypeSupported\"><code>isTypeSupported()</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/pause\"><code>pause()</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/requestData\"><code>requestData()</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/resume\"><code>resume()</code></a></li><li><em><code>start()</code></em></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/stop\"><code>stop()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/MediaRecorder/dataavailable_event\"><code>dataavailable</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/error_event\"><code>error</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/pause_event\"><code>pause</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/resume_event\"><code>resume</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/start_event\"><code>start</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/stop_event\"><code>stop</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>MediaStream Recording に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/BlobEvent\"><code>BlobEvent</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorderErrorEvent\"><code>MediaRecorderErrorEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>MediaStream Recording API の一部である <a href=\"/ja/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a> のメソッド <strong><code>start()</code></strong> は、1 つ以上の <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> オブジェクトへのメディアの記録を開始します。 メディアの全期間を単一の <code>Blob</code> に（または <a href=\"/ja/docs/Web/API/MediaRecorder/requestData\" title=\"requestData()\"><code>requestData()</code></a> を呼び出すまで）記録することも、一度に記録するミリ秒数を指定することもできます。 その後、その量のメディアが記録されるたびに、記録されたメディアに対応できるようにイベントが配信され、その間に、メディアの次のスライスを記録するための新しい <code>Blob</code> が作成されます。</p>\n<p><code>MediaRecorder</code> の <a href=\"/ja/docs/Web/API/MediaRecorder/state\" title=\"state\"><code>state</code></a> が <code>\"inactive\"</code> であると仮定すると、<code>start()</code> は <code>state</code> を <code>\"recording\"</code> に設定してから、入力ストリームからメディアのキャプチャを開始します。 タイムスライス期間が経過するか、ソースメディアが終了するまで、<code>Blob</code> が作成され、そこにデータが収集されます。 <code>Blob</code> がその時点まで満たされるたびに（タイムスライス期間または、スライス期間が指定されていない場合はメディアの終わり）、<code><a href=\"/ja/docs/Web/Reference/Events/dataavailable\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">dataavailable</a></code> イベントが記録されたデータとともに <code>MediaRecorder</code> に送られます。 ソースがまだ再生中の場合は、新しい <code>Blob</code> が作成され、そこに記録が続きます。</p>\n<p>ソースストリームが終了すると、<code>state</code> は <code>\"inactive\"</code> に設定され、データ収集は停止します。 最後の <code><a href=\"/ja/docs/Web/Reference/Events/dataavailable\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">dataavailable</a></code> イベントが <code>MediaRecorder</code> に送られ、その後に <code><a href=\"/ja/docs/Web/Reference/Events/stop\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">stop</a></code> イベントが続きます。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> ブラウザーが記録を開始または記録を続行できない場合は、<a href=\"/ja/docs/Web/API/DOMError\"><code>DOMError</code></a> イベントを発生<em>させよう</em>とし、続いて収集した Blob を含む <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>MediaRecorder.dataavailable</code></a> イベントと <a href=\"/ja/docs/Web/API/MediaRecorder/stop\"><code>MediaRecorder.stop</code></a> イベントを発生<em>させよう</em>とします。</p>\n</div>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">MediaRecorder.start(timeslice)\n</pre>"}},{"type":"prose","value":{"id":"パラメーター","title":"パラメーター","isH3":true,"content":"<dl>\n  <dt id=\"timeslice\"><code>timeslice</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>各 <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> に記録するミリ秒数。 このパラメータが含まれていない場合は、<a href=\"/ja/docs/Web/API/MediaRecorder/requestData\" title=\"requestData()\"><code>requestData()</code></a> メソッドが呼び出されて <code>Blob</code> が取得され、メディアの記録を継続する新しい <code>Blob</code> の作成のきっかけがない限り、メディア期間全体が単一の <code>Blob</code> に記録されます。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"戻り値","title":"戻り値","isH3":true,"content":"<p><code>undefined</code>.</p>"}},{"type":"prose","value":{"id":"例外","title":"例外","isH3":true,"content":"<p>すぐに検出できるエラーは DOM 例外としてスローされます。 他のすべてのエラーは、<code>MediaRecorder</code> オブジェクトに送られた <code><a href=\"/ja/docs/Web/API/Element/error_event\" title=\"/ja/docs/Web/Reference/Events/error\">error</a></code> イベントを通じて報告されます。 これらのエラーに対応するために <a href=\"/ja/docs/Web/API/MediaRecorder/error_event\" title=\"onerror\"><code>onerror</code></a> イベントハンドラを実装できます。</p>\n<dl>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code></dt>\n  <dd>\n    <p><code>MediaRecorder</code> は <code>inactive</code> 状態ではありません。 すでに記録中の場合は、メディアの記録を開始できません。 <a href=\"/ja/docs/Web/API/MediaRecorder/state\" title=\"state\"><code>state</code></a> プロパティを参照してください。</p>\n  </dd>\n  <dt id=\"securityerror\"><code>SecurityError</code></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/MediaStream\"><code>MediaStream</code></a> は記録を禁止するように設定されています。 これは、例えば、ユーザーが入力デバイスを使用するパーミッションを拒否したときに <a href=\"/ja/docs/Web/API/MediaDevices/getUserMedia\" title=\"getUserMedia()\"><code>getUserMedia()</code></a> を使用して取得されたソースの場合などです。 これは、ソースストリームの <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>peerIdentity</code></a> 制約により、ストリーム内の <a href=\"/ja/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> が <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>isolated</code></a> としてマークされている場合にも発生します。 この例外は、記録開始後にソースメディアのセキュリティオプションが変更された場合にも <code><a href=\"/ja/docs/Web/API/Element/error_event\" title=\"/ja/docs/Web/Reference/Events/error\">error</a></code> イベントとして配信される可能性があります。</p>\n  </dd>\n  <dt id=\"unknownerror\"><code>UnknownError</code></dt>\n  <dd>\n    <p>記録処理中に何か他の問題が発生しました。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">...</span>\n\n  record<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    mediaRecorder<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"レコーダー起動\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">...</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/mediacapture-record/#widl-MediaRecorder-start-void-long-timeslice\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">MediaStream Recording<br><small lang=\"ja\">MediaRecorder.start() の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>初期定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.MediaRecorder.start","dataURL":"/ja/docs/Web/API/MediaRecorder/start/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\">Media​Stream Recording API の使用</a></li>\n  <li><a href=\"https://mdn.github.io/web-dictaphone/\" class=\"external\" rel=\" noopener\">ウェブディクタフォン</a>: MediaRecorder + getUserMedia + Web Audio API 可視化デモ、<a href=\"https://twitter.com/chrisdavidmills\" class=\"external\" rel=\" noopener\">Chris Mills</a> 著（<a href=\"https://github.com/mdn/web-dictaphone/\" class=\"external\" rel=\" noopener\">Github のソース</a>）。（英語）</li>\n  <li><a href=\"https://simpl.info/mediarecorder/\" class=\"external\" rel=\" noopener\">simpl.info の MediaStream Recording のデモ</a>、<a href=\"https://twitter.com/sw12\" class=\"external\" rel=\" noopener\">Sam Dutton</a> 著。（英語）</li>\n  <li><a href=\"/ja/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"MediaStream Recording API の一部である MediaRecorder のメソッド start() は、1 つ以上の Blob オブジェクトへのメディアの記録を開始します。 メディアの全期間を単一の Blob に（または requestData() を呼び出すまで）記録することも、一度に記録するミリ秒数を指定することもできます。 その後、その量のメディアが記録されるたびに、記録されたメディアに対応できるようにイベントが配信され、その間に、メディアの次のスライスを記録するための新しい Blob が作成されます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MediaRecorder.start()","locale":"en-US","native":"English (US)"},{"title":"MediaRecorder.start()","locale":"ru","native":"Русский"}],"source":{"folder":"ja/web/api/mediarecorder/start","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/mediarecorder/start/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/MediaRecorder","title":"MediaRecorder"},{"uri":"/ja/docs/Web/API/MediaRecorder/start","title":"MediaRecorder.start()"}],"pageTitle":"MediaRecorder.start() - Web API | MDN","noIndexing":false}}