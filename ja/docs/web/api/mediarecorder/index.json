{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MediaRecorder","mdn_url":"/ja/docs/Web/API/MediaRecorder","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\">Media Recorder API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/MediaRecorder/MediaRecorder\"><code>MediaRecorder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/audioBitsPerSecond\"><code>audioBitsPerSecond</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/mimeType\"><code>mimeType</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/warning_event\"><code>onwarning</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/state\"><code>state</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/stream\"><code>stream</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond\"><code>videoBitsPerSecond</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/MediaRecorder/isTypeSupported\"><code>isTypeSupported()</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/pause\"><code>pause()</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/requestData\"><code>requestData()</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/resume\"><code>resume()</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/start\"><code>start()</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/stop\"><code>stop()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/MediaRecorder/dataavailable_event\"><code>dataavailable</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/error_event\"><code>error</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/pause_event\"><code>pause</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/resume_event\"><code>resume</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/start_event\"><code>start</code></a></li><li><a href=\"/ja/docs/Web/API/MediaRecorder/stop_event\"><code>stop</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Media Recorder API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/BlobEvent\"><code>BlobEvent</code></a></li><li><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>window.MediaRecorder</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/MediaStream_Recording_API\">MediaStream Recording API</a> の <strong><code>MediaRecorder</code></strong> インターフェイスは、メディアを簡単に記録するための機能を提供します。 これは、<a href=\"/ja/docs/Web/API/MediaRecorder/MediaRecorder\" title=\"MediaRecorder()\"><code>MediaRecorder()</code></a> コンストラクタを使用して作成します。</p>"}},{"type":"prose","value":{"id":"コンストラクタ","title":"コンストラクタ","isH3":false,"content":"<dl>\n  <dt id=\"mediarecorder\"><a href=\"/ja/docs/Web/API/MediaRecorder/MediaRecorder\" title=\"MediaRecorder()\"><code>MediaRecorder()</code></a></dt>\n  <dd>\n    <p>記録する <a href=\"/ja/docs/Web/API/MediaStream\"><code>MediaStream</code></a> を指定して、新しい <code>MediaRecorder</code> オブジェクトを作成します。 コンテナの MIME タイプ（ <code>\"video/webm\"</code> や <code>\"video/mp4\"</code> など）、音声トラックと動画トラックのビットレート、または単一の全体的なビットレートの設定などを行うためのオプションがあります。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"mediarecorder.mimetype\"><a href=\"/ja/docs/Web/API/MediaRecorder/mimeType\"><code>MediaRecorder.mimeType</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p><code>MediaRecorder</code> オブジェクトの作成時にその記録コンテナとして選択した MIME タイプを返します。</p>\n  </dd>\n  <dt id=\"mediarecorder.state\"><a href=\"/ja/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p><code>MediaRecorder</code> オブジェクトの現在の状態（<code>inactive</code>（非活動）、<code>recording</code>（記録中）、<code>paused</code>（一時停止中））を返します。</p>\n  </dd>\n  <dt id=\"mediarecorder.stream\"><a href=\"/ja/docs/Web/API/MediaRecorder/stream\"><code>MediaRecorder.stream</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p><code>MediaRecorder</code> を作成したときにコンストラクタに渡したストリームを返します。</p>\n  </dd>\n  <dt id=\"mediarecorder.ignoremutedmedia\"><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>MediaRecorder.ignoreMutedMedia</code></a></dt>\n  <dd>\n    <p>入力 <a href=\"/ja/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> がミュートされたときに <code>MediaRecorder</code> インスタンスが入力を記録するかどうかを示します。 この属性が <code>false</code> の場合、<code>MediaRecorder</code> は音声には無音を、動画には黒のフレームを記録します。 デフォルトは <code>false</code> です。</p>\n  </dd>\n  <dt id=\"mediarecorder.videobitspersecond_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond\"><code>MediaRecorder.videoBitsPerSecond</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>使用中の動画エンコードビットレートを返します。 これは、コンストラクタで指定したビットレートとは異なる場合があります（指定した場合）。</p>\n  </dd>\n  <dt id=\"mediarecorder.audiobitspersecond_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/audioBitsPerSecond\"><code>MediaRecorder.audioBitsPerSecond</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>使用中の音声エンコードビットレートを返します。 これは、コンストラクタで指定したビットレートとは異なる場合があります（指定した場合）。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":"<dl>\n  <dt id=\"mediarecorder.istypesupported_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaRecorder/isTypeSupported\"><code>MediaRecorder.isTypeSupported()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>与えられた MIME タイプを現在のユーザーエージェントがサポートしているかどうかを示す <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> 値を返します。</p>\n  </dd>\n  <dt id=\"mediarecorder.pause\"><a href=\"/ja/docs/Web/API/MediaRecorder/pause\"><code>MediaRecorder.pause()</code></a></dt>\n  <dd>\n    <p>メディアの記録を一時停止します。</p>\n  </dd>\n  <dt id=\"mediarecorder.requestdata\"><a href=\"/ja/docs/Web/API/MediaRecorder/requestData\"><code>MediaRecorder.requestData()</code></a></dt>\n  <dd>\n    <p>これまでに受信した保存データを含む <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> を要求します（または最後に <code>requestData()</code> が呼び出されてから受信した）。 このメソッドを呼び出した後、記録は続行されますが、新しい <code>Blob</code> に格納されます。</p>\n  </dd>\n  <dt id=\"mediarecorder.resume\"><a href=\"/ja/docs/Web/API/MediaRecorder/resume\"><code>MediaRecorder.resume()</code></a></dt>\n  <dd>\n    <p>一時停止したメディアの記録を再開します。</p>\n  </dd>\n  <dt id=\"mediarecorder.start\"><a href=\"/ja/docs/Web/API/MediaRecorder/start\"><code>MediaRecorder.start()</code></a></dt>\n  <dd>\n    <p>メディアの記録を開始します。 このメソッドには、オプションで、ミリ秒単位の値を指定して <code>timeslice</code> 引数を渡すことができます。 これが指定されている場合、メディアは単一の大きなチャンクにメディアを記録するというデフォルトのふるまいではなく、その期間の別々のチャンクにキャプチャされます。</p>\n  </dd>\n  <dt id=\"mediarecorder.stop\"><a href=\"/ja/docs/Web/API/MediaRecorder/stop\"><code>MediaRecorder.stop()</code></a></dt>\n  <dd>\n    <p>記録を停止します。 この時点で、保存したデータの最後の <code>Blob</code> を含む <code><a href=\"/ja/docs/Web/Reference/Events/dataavailable\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">dataavailable</a></code> イベントが発生します。 これ以上記録は行われません。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"イベントハンドラ","title":"イベントハンドラ","isH3":false,"content":"<dl>\n  <dt id=\"mediarecorder.ondataavailable\"><a href=\"/ja/docs/Web/API/MediaRecorder/dataavailable_event\"><code>MediaRecorder.ondataavailable</code></a></dt>\n  <dd>\n    <p><code>timeslice</code> のミリ秒単位のメディアが記録されるたびに（または <code>timeslice</code> が指定されていない場合はメディア全体が記録されると）定期的にトリガされる <code><a href=\"/ja/docs/Web/Reference/Events/dataavailable\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">dataavailable</a></code> イベントを処理するために呼び出されます。 <a href=\"/ja/docs/Web/API/BlobEvent\"><code>BlobEvent</code></a> 型のイベントには、<a href=\"/ja/docs/Web/API/BlobEvent/data\" title=\"data\"><code>data</code></a> プロパティに記録済みメディアが含まれています。 その後、このイベントハンドラを使用して、その記録済みメディアのデータを収集して操作することができます。</p>\n  </dd>\n  <dt id=\"mediarecorder.onerror\"><a href=\"/ja/docs/Web/API/MediaRecorder/error_event\"><code>MediaRecorder.onerror</code></a></dt>\n  <dd>\n    <p>メディアの記録で発生したエラーの報告など、<code><a href=\"/ja/docs/Web/API/Element/error_event\" title=\"/ja/docs/Web/Reference/Events/error\">error</a></code> イベントを処理するために呼び出される <code><a href=\"/ja/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code> です。 これらは記録を停止する致命的なエラーです。 受信したイベントは <a href=\"/ja/docs/Web/API/MediaRecorderErrorEvent\"><code>MediaRecorderErrorEvent</code></a> インターフェイスに基づいていて、その <a href=\"/ja/docs/Web/API/MediaRecorderErrorEvent/error\" title=\"error\"><code>error</code></a> プロパティには、発生した実際のエラーを説明する <a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a> が含まれています。</p>\n  </dd>\n  <dt id=\"mediarecorder.onpause\"><a href=\"/ja/docs/Web/API/MediaRecorder/pause_event\"><code>MediaRecorder.onpause</code></a></dt>\n  <dd>\n    <p>メディアの記録が一時停止したときに発生する <code><a href=\"/en-US/docs/Web/API/HTMLMediaElement/pause_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">pause (en-US)</a></code> イベントを処理するために呼び出される <code><a href=\"/ja/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code> です。</p>\n  </dd>\n  <dt id=\"mediarecorder.onresume\"><a href=\"/ja/docs/Web/API/MediaRecorder/resume_event\"><code>MediaRecorder.onresume</code></a></dt>\n  <dd>\n    <p>メディアの記録が一時停止後に再開したときに発生する <code><a href=\"/ja/docs/Web/Reference/Events/resume\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">resume</a></code> イベントを処理するために呼び出される <code><a href=\"/ja/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code> です。</p>\n  </dd>\n  <dt id=\"mediarecorder.onstart\"><a href=\"/ja/docs/Web/API/MediaRecorder/start_event\"><code>MediaRecorder.onstart</code></a></dt>\n  <dd>\n    <p>メディアの記録を開始したときに発生する <code><a href=\"/ja/docs/Web/Reference/Events/start\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">start</a></code> イベントを処理するために呼び出される <code><a href=\"/ja/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code> です。</p>\n  </dd>\n  <dt id=\"mediarecorder.onstop\"><a href=\"/ja/docs/Web/API/MediaRecorder/stop_event\"><code>MediaRecorder.onstop</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/MediaStream\"><code>MediaStream</code></a> の終了時、または <a href=\"/ja/docs/Web/API/MediaRecorder/stop\"><code>MediaRecorder.stop()</code></a> メソッドの呼び出し後のいずれかに、メディアの記録が終了したときに発生する <code><a href=\"/ja/docs/Web/Reference/Events/stop\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">stop</a></code> イベントを処理するために呼び出される <code><a href=\"/ja/docs/Web/Reference/Events/Event_handlers\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">event handler</a></code> です。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"イベント","title":"イベント","isH3":false,"content":"<p><code>addEventListener()</code> を使用するか、このインタフェースの <code>oneventname</code> プロパティにイベントリスナを割り当てることによって、これらのイベントを監視します。</p>\n<dl>\n  <dt id=\"error\"><a href=\"/ja/docs/Web/API/MediaRecorder/error_event\"><code>error</code></a></dt>\n  <dd>\n    <p>\n      エラーが発生したときに発生します。 例えば、記録が許可されていないか、サポートされていないコーデックを使用して試行したためです。\n      <a href=\"/ja/docs/Web/API/MediaRecorder/error_event\"><code>onerror</code></a> プロパティからも入手できます。\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getUserMedia supported.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> constraints <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> chunks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span>constraints<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> mediaRecorder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaRecorder</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">visualize</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    record<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      mediaRecorder<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mediaRecorder<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"recorder started\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      record<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>\n      record<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    stop<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      mediaRecorder<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mediaRecorder<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"recorder stopped\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      record<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n      record<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    mediaRecorder<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstop</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data available after MediaRecorder.stop() called.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">var</span> clipName <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Enter a name for your sound clip'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">var</span> clipContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'article'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> clipLabel <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> audio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> deleteButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      clipContainer<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clip'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      audio<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'controls'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      deleteButton<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"Delete\"</span><span class=\"token punctuation\">;</span>\n      clipLabel<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> clipName<span class=\"token punctuation\">;</span>\n\n      clipContainer<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      clipContainer<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>clipLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      clipContainer<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>deleteButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      soundClips<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>clipContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      audio<span class=\"token punctuation\">.</span>controls <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span>chunks<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'type'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'audio/ogg; codecs=opus'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      chunks <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> audioURL <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      audio<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> audioURL<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"recorder stopped\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      deleteButton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        evtTgt <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n        evtTgt<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>evtTgt<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    mediaRecorder<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondataavailable</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      chunks<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The following error occurred: '</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> このコードサンプルは、ウェブディクタフォン（Web Dictaphone）のデモから着想を得たものです。 簡潔にするために一部の行は省略されています。 完全なコードについては<a href=\"https://github.com/mdn/web-dictaphone/\" class=\"external\" rel=\" noopener\">ソースを参照</a>してください。</p>\n</div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/mediacapture-record/#MediaRecorderAPI\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"MediaStream Recordingの仕様書\" rel=\" noopener\">MediaStream Recording</a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>初期定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.MediaRecorder","dataURL":"/ja/docs/Web/API/MediaRecorder/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\">Media​Stream Recording API の使用</a></li>\n  <li><a href=\"https://mdn.github.io/web-dictaphone/\" class=\"external\" rel=\" noopener\">ウェブディクタフォン</a>: MediaRecorder + getUserMedia + Web Audio API 可視化デモ、<a href=\"https://twitter.com/chrisdavidmills\" class=\"external\" rel=\" noopener\">Chris Mills</a> 著（<a href=\"https://github.com/mdn/web-dictaphone/\" class=\"external\" rel=\" noopener\">Github のソース</a>）。（英語）</li>\n  <li><a href=\"/ja/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element\">メディア要素の記録</a></li>\n  <li><a href=\"https://simpl.info/mediarecorder/\" class=\"external\" rel=\" noopener\">simpl.info の MediaStream Recording のデモ</a>、<a href=\"https://twitter.com/sw12\" class=\"external\" rel=\" noopener\">Sam Dutton</a>　著。（英語）</li>\n  <li><a href=\"/ja/docs/Web/API/MediaDevices/getUserMedia\" title=\"navigator.mediaDevices.getUserMedia()\"><code>navigator.mediaDevices.getUserMedia()</code></a></li>\n  <li><a href=\"https://github.com/chrisjohndigital/OpenLang\" class=\"external\" rel=\" noopener\">OpenLang</a>: MediaDevices と MediaStream Recording API を動画の録画に使用する HTML5 動画言語ラボウェブアプリ（<a href=\"https://github.com/chrisjohndigital/OpenLang\" class=\"external\" rel=\" noopener\">GitHub のソース</a>）（英語）</li>\n</ul>"}}],"toc":[{"text":"コンストラクタ","id":"コンストラクタ"},{"text":"Properties","id":"properties"},{"text":"メソッド","id":"メソッド"},{"text":"イベントハンドラ","id":"イベントハンドラ"},{"text":"イベント","id":"イベント"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"MediaStream Recording API の MediaRecorder インターフェイスは、メディアを簡単に記録するための機能を提供します。 これは、MediaRecorder() コンストラクタを使用して作成します。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MediaRecorder","locale":"en-US","native":"English (US)"},{"title":"MediaRecorder","locale":"ru","native":"Русский"},{"title":"MediaRecorder","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/mediarecorder","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/mediarecorder/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/MediaRecorder","title":"MediaRecorder"}],"pageTitle":"MediaRecorder - Web API | MDN","noIndexing":false}}