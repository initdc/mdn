{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Node.insertBefore()","mdn_url":"/ja/docs/Web/API/Node/insertBefore","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/Node\"><code>Node</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Node/baseURI\"><code>baseURI</code></a></li><li><a href=\"/ja/docs/Web/API/Node/childNodes\"><code>childNodes</code></a></li><li><a href=\"/ja/docs/Web/API/Node/firstChild\"><code>firstChild</code></a></li><li><a href=\"/ja/docs/Web/API/Node/isConnected\"><code>isConnected</code></a></li><li><a href=\"/ja/docs/Web/API/Node/lastChild\"><code>lastChild</code></a></li><li><a href=\"/ja/docs/Web/API/Node/nextSibling\"><code>nextSibling</code></a></li><li><a href=\"/ja/docs/Web/API/Node/nodeName\"><code>nodeName</code></a></li><li><a href=\"/ja/docs/Web/API/Node/nodeType\"><code>nodeType</code></a></li><li><a href=\"/ja/docs/Web/API/Node/nodeValue\"><code>nodeValue</code></a></li><li><a href=\"/ja/docs/Web/API/Node/ownerDocument\"><code>ownerDocument</code></a></li><li><a href=\"/ja/docs/Web/API/Node/parentElement\"><code>parentElement</code></a></li><li><a href=\"/ja/docs/Web/API/Node/parentNode\"><code>parentNode</code></a></li><li><a href=\"/ja/docs/Web/API/Node/previousSibling\"><code>previousSibling</code></a></li><li><a href=\"/ja/docs/Web/API/Node/textContent\"><code>textContent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Node/appendChild\"><code>appendChild()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/cloneNode\"><code>cloneNode()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/compareDocumentPosition\"><code>compareDocumentPosition()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/contains\"><code>contains()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/getRootNode\"><code>getRootNode()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/hasChildNodes\"><code>hasChildNodes()</code></a></li><li><em><code>insertBefore()</code></em></li><li><a href=\"/ja/docs/Web/API/Node/isDefaultNamespace\"><code>isDefaultNamespace()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/isEqualNode\"><code>isEqualNode()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/isSameNode\"><code>isSameNode()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/Node/isSupported\"><code>isSupported()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/lookupNamespaceURI\"><code>lookupNamespaceURI()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/lookupPrefix\"><code>lookupPrefix()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/normalize\"><code>normalize()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/removeChild\"><code>removeChild()</code></a></li><li><a href=\"/ja/docs/Web/API/Node/replaceChild\"><code>replaceChild()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/Node/selectstart_event\"><code>selectstart</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>DOM に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/ja/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/ja/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/ja/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/ja/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/ja/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/ja/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/ja/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/ja/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/ja/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/ja/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/ja/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/ja/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/ja/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/ja/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/ja/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/ja/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/ja/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/ja/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/ja/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/ja/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/ja/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/ja/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/ja/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/ja/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/ja/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>insertBefore()</code></strong> は <a href=\"/ja/docs/Web/API/Node\"><code>Node</code></a> インターフェイスのメソッドで、<em>参照先ノード</em>の前にこの<em>親ノード</em>の子としてノードを挿入します。</p>\n<p>指定されたノードが既に文書中に存在した場合、 <code>insertBefore()</code> はこれを現在の位置から新しい位置に移動します。（つまり、既存の親ノードから自動的に削除され、指定された新しい親に追加されます。）</p>\n<p>これは、 1 つのノードが文書中に同時に 2 か所に存在できないことを意味します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <a href=\"/ja/docs/Web/API/Node/cloneNode\"><code>Node.cloneNode()</code></a> を使用すると、ノードを新しい親の下に追加する前に複製を作成することができます。なお、 <code>cloneNode()</code> で作成された複製は自動的には同期されません。</p>\n</div>\n<p>指定された子が <a href=\"/ja/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> である場合、 <code>DocumentFragment</code> の内容全体が指定された親ノードの子リストに移動されます。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> referenceNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"newnode\"><code>newNode</code></dt>\n  <dd>\n    <p>挿入するノードです。</p>\n  </dd>\n  <dt id=\"referencenode\"><code>referenceNode</code></dt>\n  <dd>\n    <p><code>newNode</code> が挿入される位置の前にあるノードです。このノードが <code>null</code> である場合は、 <code>newNode</code> はこのノードの子ノードの末尾に挿入されます。</p>\n    <div class=\"notecard note\" id=\"sect2\">\n      <p>\n        <strong>Note:</strong> <code>referenceNode</code> は省略可能な引数では<strong>ありません</strong>。\n        明示的に <a href=\"/ja/docs/Web/API/Node\"><code>Node</code></a> または <code>null</code> を渡す必要があります。\n        渡さなかった場合や無効な値を渡した場合の<a href=\"https://code.google.com/p/chromium/issues/detail?id=419780\" class=\"external\" rel=\" noopener\">動作</a>は、ブラウザーのバージョンによって<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=119489\" class=\"external\" rel=\" noopener\">異なる</a>可能性があります。\n      </p>\n    </div>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":false,"content":"<p>追加された子ノードを返します（ただし <code>newNode</code> が <a href=\"/ja/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> の場合は、空の <a href=\"/ja/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> を返します）。</p>"}},{"type":"prose","value":{"id":"例外","title":"例外","isH3":true,"content":"<p>挿入前の検証</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"例_1","title":"例 1","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parentElement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>childElement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>foo bar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token comment\">// 挿入する新しいノードを作成する</span>\n<span class=\"token keyword\">let</span> newNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 親ノードの参照を取得する</span>\n<span class=\"token keyword\">let</span> parentDiv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"childElement\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>parentNode\n\n<span class=\"token comment\">// テストケース [ 1 ] 開始: 既存の childElement (すべて正しく動作)</span>\n<span class=\"token keyword\">let</span> sp2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"childElement\"</span><span class=\"token punctuation\">)</span>\nparentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// テストケース [ 1 ] 終了</span>\n\n<span class=\"token comment\">// テストケース [ 2 ] 開始: childElement が undefined 型の場合</span>\n<span class=\"token keyword\">let</span> sp2 <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span> <span class=\"token comment\">// \"childElement\" の ID を持つノードが存在しない</span>\nparentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Node 型に暗黙に動的型変換</span>\n<span class=\"token comment\">// テストケース [ 2 ] 終了</span>\n\n<span class=\"token comment\">// テストケース [ 3 ] 開始: childElement が \"undefined\" (文字列) の場合</span>\n<span class=\"token keyword\">let</span> sp2 <span class=\"token operator\">=</span> <span class=\"token string\">\"undefined\"</span> <span class=\"token comment\">// \"childElement\" の ID を持つノードが存在しない</span>\nparentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Generates \"Type Error: Invalid Argument\"</span>\n<span class=\"token comment\">// テストケース [ 3 ] 終了</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例_2","title":"例 2","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parentElement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>childElement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>foo bar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token comment\">// 新しい只の &lt;span&gt; 要素を作成</span>\n<span class=\"token keyword\">let</span> sp1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 参照要素を取得</span>\n<span class=\"token keyword\">let</span> sp2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"childElement\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 親要素を取得</span>\n<span class=\"token keyword\">let</span> parentDiv <span class=\"token operator\">=</span> sp2<span class=\"token punctuation\">.</span>parentNode\n\n<span class=\"token comment\">// 新しい要素を sp2 の手前に挿入</span>\nparentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>sp1<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p>\n    <strong>Note:</strong> <code>insertAfter()</code> メソッドはありません。\n    これは <code>insertBefore</code> メソッドと <a href=\"/ja/docs/Web/API/Node/nextSibling\"><code>Node.nextSibling</code></a> の組み合わせでエミュレートできます。\n  </p>\n  <p>前の例では、 <code>sp1</code> は以下のようにして <code>sp2</code> の後に挿入することができます。</p>\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>parentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>sp1<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">.</span>nextSibling<span class=\"token punctuation\">)</span>\n</code></pre></div>\n  <p><code>sp2</code> に次の兄弟ノードがない場合、これが最後の子ノードです。 — <code>sp2.nextSibling</code> は <code>null</code> を返し、 <code>sp1</code> は子ノードリストの末尾（<code>sp2</code> の直後）に挿入されます。</p>\n</div>"}},{"type":"prose","value":{"id":"例_3","title":"例 3","isH3":true,"content":"<p>要素を最初の子要素の前に挿入するために、 <a href=\"/ja/docs/Web/API/Node/firstChild\" title=\"firstChild\"><code>firstChild</code></a> プロパティを使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 親ノードを取得</span>\n<span class=\"token keyword\">let</span> parentElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'parentElement'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 親ノードの最初の子ノードを取得</span>\n<span class=\"token keyword\">let</span> theFirstChild <span class=\"token operator\">=</span> parentElement<span class=\"token punctuation\">.</span>firstChild\n\n<span class=\"token comment\">// 新しい要素を取得</span>\n<span class=\"token keyword\">let</span> newElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 最初の子ノードの前に新しい要素を挿入</span>\nparentElement<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newElement<span class=\"token punctuation\">,</span> theFirstChild<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>要素に最初の子ノードがない場合、 <code>firstChild</code> は <code>null</code> になります。その場合も、要素は親ノードの最後の子ノードの後に追加されます。</p>\n<p>親要素に最初の子ノードがない場合は、最後の子ノードもありません。結果的に、新しく挿入された要素は<strong>唯一の</strong>要素になります。</p>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#dom-node-insertbefore","title":"DOM Standard"}],"query":"api.Node.insertBefore"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.Node.insertBefore","dataURL":"/ja/docs/Web/API/Node/insertBefore/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Node/removeChild\"><code>Node.removeChild()</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/Node/replaceChild\"><code>Node.replaceChild()</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/Node/appendChild\"><code>Node.appendChild()</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/Node/hasChildNodes\"><code>Node.hasChildNodes()</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/Element/insertAdjacentElement\"><code>Element.insertAdjacentElement()</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/Element/prepend\"><code>Element.prepend()</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/Element/before\"><code>Element.before()</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/Element/after\"><code>Element.after()</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"返値","id":"返値"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"insertBefore() は Node インターフェイスのメソッドで、参照先ノードの前にこの親ノードの子としてノードを挿入します。","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Node.insertBefore()","locale":"en-US","native":"English (US)"},{"title":"Node.insertBefore()","locale":"es","native":"Español"},{"title":"element.insertBefore","locale":"fr","native":"Français"},{"title":"Node.insertBefore()","locale":"ko","native":"한국어"},{"title":"Node.insertBefore","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Node.insertBefore()","locale":"ru","native":"Русский"},{"title":"Node.insertBefore()","locale":"zh-CN","native":"中文 (简体)"},{"title":"Node.insertBefore()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/node/insertbefore","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/node/insertbefore/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Node","title":"Node"},{"uri":"/ja/docs/Web/API/Node/insertBefore","title":"Node.insertBefore()"}],"pageTitle":"Node.insertBefore() - Web API | MDN","noIndexing":false}}