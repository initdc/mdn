{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ConvolverNode","mdn_url":"/ja/docs/Web/API/ConvolverNode","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode/ConvolverNode\"><code>ConvolverNode()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode/buffer\"><code>buffer</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode/normalize\"><code>normalize</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Audio API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/ja/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/ja/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/ja/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/ja/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>ConvolverNode</code> は <a href=\"/ja/docs/Web/API/AudioNode\"><code>AudioNode</code></a> の一種で、与えられた <a href=\"/ja/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a> を用いて線形畳み込みを行います。リバーブの実装によく用いられます。 <code>ConvolverNode</code> は常に 1 つの入力と、1 つの出力を持ちます。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 線形畳み込みの理論的な側面については、<a href=\"https://ja.wikipedia.org/wiki/%E7%95%B3%E3%81%BF%E8%BE%BC%E3%81%BF\" class=\"external\" rel=\" noopener\">Wikipedia の「畳み込み」</a>を参照してください。</p>\n</div><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/ja/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/ja/docs/Web/API/AudioNode\">\n    <rect x=\"118\" y=\"0\" width=\"75\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"155.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      AudioNode\n    </text>\n  </a>\n  <line x1=\"193\" y1=\"14\" x2=\"223\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"193,14 203,9 203,19 193,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/ja/docs/Web/API/ConvolverNode\" aria-current=\"page\">\n    <rect x=\"223\" y=\"0\" width=\"104\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"275\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      ConvolverNode\n    </text>\n  </a></svg>\n<table class=\"properties\">\n  <tbody>\n    <tr>\n      <th scope=\"row\">入力数</th>\n      <td><code>1</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">出力数</th>\n      <td><code>1</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">チャンネルカウントモード</th>\n      <td><code>\"clamped-max\"</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">チャンネル数</th>\n      <td><code>1</code>, <code>2</code>, <code>4</code></td>\n    </tr>\n    <tr>\n      <th scope=\"row\">チャンネルの解釈</th>\n      <td><code>\"speakers\"</code></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"コンストラクター","title":"コンストラクター","isH3":false,"content":"<dl>\n  <dt id=\"convolvernode_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode/ConvolverNode\"><code>ConvolverNode()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p><code>ConvolverNode</code> オブジェクトの新しいインスタンスを生成します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"プロパティ","title":"プロパティ","isH3":false,"content":"<p><em>親である <a href=\"/ja/docs/Web/API/AudioNode\"><code>AudioNode</code></a> からプロパティを継承しています</em>。</p>\n<dl>\n  <dt id=\"convolvernode.buffer_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode/buffer\"><code>ConvolverNode.buffer</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>モノラル、ステレオ、 4 チャンネルの <em><a href=\"/ja/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></em> で、 <code>ConvolververNode</code> がリバーブ効果を生成するために使用する（おそらくマルチチャンネルの）インパルス応答を含みます。</p>\n  </dd>\n  <dt id=\"convolvernode.normalize_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode/normalize\"><code>ConvolverNode.normalize</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>論理値で、 <code>buffer</code> 属性が設定されているときに、バッファーからのインパルス応答を等力正規化でスケーリングするかどうかを制御します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":"<p><em>固有のメソッドはありません。親である <a href=\"/ja/docs/Web/API/AudioNode\"><code>AudioNode</code></a> からメソッドを継承しています</em>。</p>"}},{"type":"prose","value":{"id":"convolvernode_の例","title":"ConvolverNode の例","isH3":false,"content":"<p>次の例は、コンボルバーノードを作成するための AudioContext の基本的な使い方を示しています。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 以下の例を完成させるために、インパルス応答を求める必要があります。応用例はこちらの <a href=\"https://codepen.io/DonKarlssonSan/pen/doVKRE\" class=\"external\" rel=\" noopener\">Codepen</a> をご覧ください。</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">window<span class=\"token punctuation\">.</span>AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createReverb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> convolver <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createConvolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// load impulse response from file</span>\n    <span class=\"token keyword\">let</span> response     <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path/to/impulse-response.wav\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> arraybuffer  <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">arrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    convolver<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">decodeAudioData</span><span class=\"token punctuation\">(</span>arraybuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> convolver<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">let</span> reverb <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">createReverb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// someOtherAudioNode -&gt; reverb -&gt; destination</span>\nsomeOtherAudioNode<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>reverb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nreverb<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>audioCtx<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#ConvolverNode","title":"Web Audio API"}],"query":"api.ConvolverNode"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.ConvolverNode","dataURL":"/ja/docs/Web/API/ConvolverNode/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">ウェブ音声 API の使用</a></li>\n</ul>"}}],"toc":[{"text":"コンストラクター","id":"コンストラクター"},{"text":"プロパティ","id":"プロパティ"},{"text":"メソッド","id":"メソッド"},{"text":"ConvolverNode の例","id":"convolvernode_の例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"ConvolverNode は AudioNode の一種で、与えられた AudioBuffer を用いて線形畳み込みを行います。リバーブの実装によく用いられます。 ConvolverNode は常に 1 つの入力と、1 つの出力を持ちます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"ConvolverNode","locale":"en-US","native":"English (US)"},{"title":"ConvolverNode","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/convolvernode","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/convolvernode/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/ConvolverNode","title":"ConvolverNode"}],"pageTitle":"ConvolverNode - Web API | MDN","noIndexing":false}}