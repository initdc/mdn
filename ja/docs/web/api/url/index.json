{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"URL","mdn_url":"/ja/docs/Web/API/URL","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/URL_API\">URL API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/URL\"><code>URL</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/URL/URL\"><code>URL()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/URL/hash\"><code>hash</code></a></li><li><a href=\"/ja/docs/Web/API/URL/host\"><code>host</code></a></li><li><a href=\"/ja/docs/Web/API/URL/hostname\"><code>hostname</code></a></li><li><a href=\"/ja/docs/Web/API/URL/href\"><code>href</code></a></li><li><a href=\"/ja/docs/Web/API/URL/origin\"><code>origin</code></a></li><li><a href=\"/ja/docs/Web/API/URL/password\"><code>password</code></a></li><li><a href=\"/ja/docs/Web/API/URL/pathname\"><code>pathname</code></a></li><li><a href=\"/ja/docs/Web/API/URL/port\"><code>port</code></a></li><li><a href=\"/ja/docs/Web/API/URL/protocol\"><code>protocol</code></a></li><li><a href=\"/ja/docs/Web/API/URL/search\"><code>search</code></a></li><li><a href=\"/ja/docs/Web/API/URL/searchParams\"><code>searchParams</code></a></li><li><a href=\"/ja/docs/Web/API/URL/username\"><code>username</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/URL/createObjectURL\"><code>createObjectURL()</code></a></li><li><a href=\"/ja/docs/Web/API/URL/revokeObjectURL\"><code>revokeObjectURL()</code></a></li><li><a href=\"/ja/docs/Web/API/URL/toJSON\"><code>toJSON()</code></a></li><li><a href=\"/ja/docs/Web/API/URL/toString\"><code>toString()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>URL API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>URL</code></strong> インターフェイスは、<a href=\"/ja/docs/Glossary/URL\">URL</a> の解析、構築、正規化、およびエンコードに使用します。 URL のコンポーネントを簡単に読み取って変更できるプロパティを提供することで機能します。 通常、新しい <code>URL</code> オブジェクトを作成するにはコンストラクターを呼び出すときに URL を文字列として指定するか、相対 URL とベース URL を指定します。その後、解析された URL のコンポーネントを簡単に読み取ったり、URL を変更したりすることができます。</p>\n<p>ブラウザーがまだ <a href=\"/ja/docs/Web/API/URL/URL\" title=\"URL()\"><code>URL()</code></a> コンストラクターをサポートしていない場合は、<a href=\"/ja/docs/Web/API/Window\"><code>Window</code></a> インターフェイスの <a href=\"/ja/docs/Web/API/URL\" aria-current=\"page\"><code>Window.URL</code></a> プロパティを使用して <code>URL</code> オブジェクトにアクセスできます。 対象とするブラウザーのいずれかに、この接頭辞を付ける必要があるかどうかを確認してください。</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>注:</strong> この機能は <a href=\"/ja/docs/Web/API/Web_Workers_API\">Web Worker</a> 内で利用可能です</p>\n</div>"}},{"type":"prose","value":{"id":"コンストラクター","title":"コンストラクター","isH3":false,"content":"<dl>\n  <dt id=\"new_url\"><a href=\"/ja/docs/Web/API/URL/URL\" title=\"new URL()\"><code>new URL()</code></a></dt>\n  <dd>\n    <p>絶対 URL 文字列、または相対 URL 文字列とベース URL 文字列を使用して指定された URL を参照する <code>URL</code> オブジェクトを作成して返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"プロパティ","title":"プロパティ","isH3":false,"content":"<dl>\n  <dt id=\"hash\"><a href=\"/ja/docs/Web/API/URL/hash\" title=\"hash\"><code>hash</code></a></dt>\n  <dd>\n    <p><code>'#'</code> に続いて URL のフラグメント識別子を含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a>。</p>\n  </dd>\n  <dt id=\"host\"><a href=\"/ja/docs/Web/API/URL/host\" title=\"host\"><code>host</code></a></dt>\n  <dd>\n    <p>ドメイン（<em>ホスト名</em>）に続いて（ポートが指定されている場合）、<code>':'</code> と URL の<em>ポート</em>を含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a>。</p>\n  </dd>\n  <dt id=\"hostname\"><a href=\"/ja/docs/Web/API/URL/hostname\" title=\"hostname\"><code>hostname</code></a></dt>\n  <dd>\n    <p>URL のドメインを含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a>。</p>\n  </dd>\n  <dt id=\"href\"><a href=\"/ja/docs/Web/API/URL/href\" title=\"href\"><code>href</code></a></dt>\n  <dd>\n    <p>URL 全体を含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a> を返す文字列化関数です。</p>\n  </dd>\n  <dt id=\"origin\"><a href=\"/ja/docs/Web/API/URL/origin\" title=\"origin\"><code>origin</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>URL のオリジン、つまりそのスキーム、ドメイン、およびポートを含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a> を返します。</p>\n  </dd>\n  <dt id=\"password\"><a href=\"/ja/docs/Web/API/URL/password\" title=\"password\"><code>password</code></a></dt>\n  <dd>\n    <p>ドメイン名の前に指定されたパスワードを含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a>。</p>\n  </dd>\n  <dt id=\"pathname\"><a href=\"/ja/docs/Web/API/URL/pathname\" title=\"pathname\"><code>pathname</code></a></dt>\n  <dd>\n    <p>最初の <code>'/'</code> に続いて URL のパスを含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a>。</p>\n  </dd>\n  <dt id=\"port\"><a href=\"/ja/docs/Web/API/URL/port\" title=\"port\"><code>port</code></a></dt>\n  <dd>\n    <p>URL のポート番号を含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a>。</p>\n  </dd>\n  <dt id=\"protocol\"><a href=\"/ja/docs/Web/API/URL/protocol\" title=\"protocol\"><code>protocol</code></a></dt>\n  <dd>\n    <p>最後の <code>':'</code> までを含めた URL のプロトコルスキームを含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a>。</p>\n  </dd>\n  <dt id=\"search\"><a href=\"/ja/docs/Web/API/URL/search\" title=\"search\"><code>search</code></a></dt>\n  <dd>\n    <p>URL 引数文字列を示す <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a>。 引数が指定されている場合、この文字列には先頭の <code>?</code> 文字で始まるすべての引数が含まれます。</p>\n  </dd>\n  <dt id=\"searchparams\"><a href=\"/ja/docs/Web/API/URL/searchParams\" title=\"searchParams\"><code>searchParams</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p><code>search</code> で見つかった個々のクエリー引数にアクセスするために使用できる <a href=\"/ja/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a> オブジェクト。</p>\n  </dd>\n  <dt id=\"username\"><a href=\"/ja/docs/Web/API/URL/username\" title=\"username\"><code>username</code></a></dt>\n  <dd>\n    <p>ドメイン名の前に指定されたユーザー名を含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":"<dl>\n  <dt id=\"tostring\"><a href=\"/ja/docs/Web/API/URL/toString\" title=\"toString()\"><code>toString()</code></a></dt>\n  <dd>\n    <p>URL 全体を含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a> を返します。 <a href=\"/ja/docs/Web/API/URL/href\"><code>URL.href</code></a> と同義ですが、値の変更に使用することはできません。</p>\n  </dd>\n  <dt id=\"tojson\"><a href=\"/ja/docs/Web/API/URL/toJSON\" title=\"toJSON()\"><code>toJSON()</code></a></dt>\n  <dd>\n    <p>URL 全体を含む <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a> を返します。 <code>href</code> プロパティと同じ文字列を返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"静的メソッド","title":"静的メソッド","isH3":false,"content":"<dl>\n  <dt id=\"createobjecturl\"><a href=\"/ja/docs/Web/API/URL/createObjectURL\" title=\"createObjectURL()\"><code>createObjectURL()</code></a></dt>\n  <dd>\n    <p>一意の blob URL を含む <a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a> を返します。 これは、スキームとして <code>blob:</code> を含む URL で、その後にブラウザー内のオブジェクトを一意に識別する不透明な文字列が続きます。</p>\n  </dd>\n  <dt id=\"revokeobjecturl\"><a href=\"/ja/docs/Web/API/URL/revokeObjectURL\" title=\"revokeObjectURL()\"><code>revokeObjectURL()</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a> を使用して以前に生成したオブジェクト URL を取り消します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"使用上の注意","title":"使用上の注意","isH3":false,"content":"<p>コンストラクターは、<code>url</code> 引数と、<code>url</code> 引数が相対 URL の場合にベースとして使用するオプションの <code>base</code> 引数を受け取ります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../cats'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://www.example.com/dogs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"www.example.com\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"/cats\"</span>\n</code></pre></div>\n<p>URL を構築するために URL のプロパティを設定できます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>url<span class=\"token punctuation\">.</span>hash <span class=\"token operator\">=</span> <span class=\"token string\">'tabby'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"http://www.example.com/cats#tabby\"</span>\n</code></pre></div>\n<p>URL は、<a href=\"https://datatracker.ietf.org/doc/html/rfc3986\" class=\"external\" rel=\" noopener\">RFC 3986</a> にあるルールに従ってエンコードされます。 例えば、次のとおりです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>url<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">=</span> <span class=\"token string\">'démonstration.html'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"http://www.example.com/d%C3%A9monstration.html\"</span>\n</code></pre></div>\n<p>URL のクエリー文字列を構築および操作するために、<a href=\"/ja/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a> インターフェイスを使用できます。</p>\n<p>現在のウィンドウの URL から検索引数を取得するには、次のようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// https://some.site/?id=123</span>\n<span class=\"token keyword\">const</span> parsedUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>parsedUrl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"123\"</span>\n</code></pre></div>\n<p>URL の <code>toString()</code> メソッドは <code>href</code> プロパティの値を返すだけなので、コンストラクターを使用して URL を直接に正規化およびエンコードできます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://www.example.com/démonstration.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>状態</th>\n      <th>備考</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/FileAPI/#creating-revoking\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">File API<br><small lang=\"ja\">URL の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>静的メソッドの <code>URL.createObjectURL()</code> と <code>URL.revokeObjectURL()</code> の追加。</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://url.spec.whatwg.org/#api\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">URL<br><small lang=\"ja\">API の定義</small></a></td>\n      <td><span class=\"spec-living\">現行の標準</span></td>\n      <td>初回定義 (<code>URLUtils</code> を実装)。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.URL","dataURL":"/ja/docs/Web/API/URL/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/URL_API\">URL API</a></li>\n  <li><a href=\"/ja/docs/Learn/Common_questions/What_is_a_URL\">URL とは何か</a></li>\n  <li><code>URL</code> オブジェクトを取得するプロパティ: <a href=\"/ja/docs/Web/API/URL\" aria-current=\"page\"><code>Window.URL</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a></li>\n</ul>"}}],"toc":[{"text":"コンストラクター","id":"コンストラクター"},{"text":"プロパティ","id":"プロパティ"},{"text":"メソッド","id":"メソッド"},{"text":"静的メソッド","id":"静的メソッド"},{"text":"使用上の注意","id":"使用上の注意"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"URL インターフェイスは、URL の解析、構築、正規化、およびエンコードに使用します。 URL のコンポーネントを簡単に読み取って変更できるプロパティを提供することで機能します。 通常、新しい URL オブジェクトを作成するにはコンストラクターを呼び出すときに URL を文字列として指定するか、相対 URL とベース URL を指定します。その後、解析された URL のコンポーネントを簡単に読み取ったり、URL を変更したりすることができます。","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"URL","locale":"en-US","native":"English (US)"},{"title":"URL","locale":"es","native":"Español"},{"title":"URL","locale":"fr","native":"Français"},{"title":"URL","locale":"ko","native":"한국어"},{"title":"URL","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"URL","locale":"ru","native":"Русский"},{"title":"URL","locale":"zh-CN","native":"中文 (简体)"},{"title":"URL","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/url","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/url/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/URL","title":"URL"}],"pageTitle":"URL - Web API | MDN","noIndexing":false}}