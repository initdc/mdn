{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Pointer Lock API","mdn_url":"/ja/docs/Web/API/Pointer_Lock_API","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Pointer_Lock_API\">Pointer Lock API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Document/pointerLockElement\"><code>Document.pointerLockElement</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Element/requestPointerLock\"><code>Element.requestPointerLock()</code></a></li><li><a href=\"/ja/docs/Web/API/Document/exitPointerLock\"><code>Document.exitPointerLock()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/Document/pointerlockchange_event\"><code>Document</code>: <code>pointerlockchange</code></a></li><li><a href=\"/ja/docs/Web/API/Document/pointerlockerror_event\"><code>Document</code>: <code>pointerlockerror</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Pointer Lock API</strong> (以前は <em>Mouse Lock API</em> と呼ばれていました) は、ビューポート内のマウスカーソルの絶対位置だけでなく、時間の経過に伴うマウスの動き (すなわち、デルタ) に基づく入力方法を提供します。これにより、マウスの動きそのものを知る、マウスイベントのターゲットをひとつの要素にロックする、マウスが一方向へどれだけ移動できるかの制限を除去する、視野からカーソルを取り除くことができます。これらは、本人視点の 3D ゲームなどで理想的です。</p>\n<p>さらにこの API は、動きのコントロールやオブジェクトの回転、エントリーの変更にかなりのマウス操作が必要になるアプリケーションで役立ちます。例えばなんらかのボタンをクリックすることなく、マウスを動かすだけで視野角を制御できます。ボタンは他の操作のために使用できます。また、地図や衛星画像を見るアプリでも役に立ちます。</p>\n<p>Pointer Lock では、カーソルがブラウザーやスクリーンの境界を通り過ぎるときでもマウスイベントにアクセスできます。例えばユーザーは限りなくマウスを動かすことで、3D モデルの回転や操作を続けることができます。Pointer Lock がなければ、ポインターがブラウザーまたはスクリーンの端に達したときに回転や操作が止まります。ゲームのプレイヤーはマウスカーソルがゲームのプレイ領域から外れて、別のアプリケーションを意図せずクリックしてゲームからマウスのフォーカスが外れてしまうことを心配せずに、熱中してボタンのクリックやマウスカーソルをあちこちに動かすことができるようになります。</p>"}},{"type":"prose","value":{"id":"基本概念","title":"基本概念","isH3":false,"content":"<p>Pointer Lock は <a href=\"/ja/docs/Web/API/Element/setCapture\">マウスキャプチャ</a> と関係があります。マウスキャプチャはマウスのドラッグ中にターゲットの要素へ継続的にイベントを提供しますが、マウスのボタンを離すとイベントが停止します。Pointer Lock とマウスキャプチャの違いは以下のとおりです:</p>\n<ul>\n  <li>Pointer Lock は永続的です。明示的に API が呼び出されるかユーザーが特定の解放ジェスチャを行うまで、マウスを解放しません。</li>\n  <li>Pointer Lock はブラウザーまたはスクリーンの境界に制限されません。</li>\n  <li>Pointer Lock はマウスボタンの状態に関係なく、イベントが発生し続けます。</li>\n  <li>Pointer Lock はカーソルを隠します。</li>\n</ul>"}},{"type":"prose","value":{"id":"メソッドプロパティの概要","title":"メソッド/プロパティの概要","isH3":false,"content":"<p>ここでは、Pointer Lock 仕様に関係するプロパティやメソッドを簡単に説明します。</p>"}},{"type":"prose","value":{"id":"requestpointerlock","title":"requestPointerLock()","isH3":true,"content":"<p>Pointer Lock API は <a href=\"/en-US/docs/Web/API/Fullscreen_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Fullscreen API (en-US)</a> と同様に、新たなメソッド <a href=\"/ja/docs/Web/API/Element/requestPointerLock\" title=\"requestPointerLock()\"><code>requestPointerLock()</code></a> を追加することで DOM 要素を拡張しています。なお現在は、ベンダー接頭辞を付加しています。接頭辞が最近削除されましたので、例えば <code>canvas</code> 要素で Pointer Lock を要求したい場合は、現在は以下のように宣言します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>canvas<span class=\"token punctuation\">.</span>requestPointerLock <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>requestPointerLock <span class=\"token operator\">||</span>\n                            canvas<span class=\"token punctuation\">.</span>mozRequestPointerLock<span class=\"token punctuation\">;</span>\n\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">requestPointerLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"pointerlockelement_と_exitpointerlock","title":"pointerLockElement と exitPointerLock()","isH3":true,"content":"<p>Pointer Lock API は <a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a> インターフェイスも拡張しており、新たなプロパティやメソッドを追加しています。新たなプロパティ <a href=\"/ja/docs/Web/API/Document/pointerLockElement\" title=\"pointerLockElement\"><code>pointerLockElement</code></a> は、現在ロックしている要素がある場合に、その要素へアクセスするために使用します。また、<a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a> 新たなメソッドである <a href=\"/ja/docs/Web/API/Document/exitPointerLock\" title=\"exitPointerLock()\"><code>exitPointerLock()</code></a> は、名前がほのめかすとおり Pointer Lock を終えるために使用します。</p>\n<p><a href=\"/ja/docs/Web/API/Document/pointerLockElement\" title=\"pointerLockElement\"><code>pointerLockElement</code></a> プロパティは要素が現在 Pointer Locked 状態であるかを判断する (例えば真偽チェックを行う) ために、またはロックされた要素があればその要素への参照を得るために有用です。</p>\n<p><code>pointerLockElement</code> の使用例を示します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>pointerLockElement <span class=\"token operator\">===</span> canvas <span class=\"token operator\">||</span>\n  document<span class=\"token punctuation\">.</span>mozPointerLockElement <span class=\"token operator\">===</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The pointer lock status is now locked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The pointer lock status is now unlocked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><a href=\"/ja/docs/Web/API/Document/exitPointerLock\"><code>Document.exitPointerLock()</code></a> メソッドは Pointer Lock を終えるために使用され、<a href=\"/ja/docs/Web/API/Element/requestPointerLock\" title=\"requestPointerLock\"><code>requestPointerLock</code></a> と同様に <code><a href=\"/en-US/docs/Web/API/Document/pointerlockchange_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">pointerlockchange (en-US)</a></code> イベントや <code><a href=\"/en-US/docs/Web/API/Document/pointerlockerror_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">pointerlockerror (en-US)</a></code> イベントを用いて非同期的に動作します。使用例は以下のとおりです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span>exitPointerLock <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>exitPointerLock    <span class=\"token operator\">||</span>\n                           document<span class=\"token punctuation\">.</span>mozExitPointerLock<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ロック解除を試みる</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">exitPointerLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"pointerlockchange_イベント","title":"pointerlockchange イベント","isH3":false,"content":"<p>Pointer Lock の状態が変化したとき、例えば <a href=\"/ja/docs/Web/API/Element/requestPointerLock\" title=\"requestPointerLock()\"><code>requestPointerLock()</code></a> や <a href=\"/ja/docs/Web/API/Document/exitPointerLock\" title=\"exitPointerLock()\"><code>exitPointerLock()</code></a> を呼び出したときや、ユーザーが ESC キーを押下したときなどに、<code><a href=\"/en-US/docs/Web/API/Document/pointerlockchange_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">pointerlockchange (en-US)</a></code> イベントが <code>document</code> に発生します。これはシンプルなイベントであり、付加的なデータは含まれません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"onpointerlockchange\"</span> <span class=\"token keyword\">in</span> document<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointerlockchange'</span><span class=\"token punctuation\">,</span> lockChangeAlert<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"onmozpointerlockchange\"</span> <span class=\"token keyword\">in</span> document<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mozpointerlockchange'</span><span class=\"token punctuation\">,</span> lockChangeAlert<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">lockChangeAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>pointerLockElement <span class=\"token operator\">===</span> canvas <span class=\"token operator\">||</span>\n  document<span class=\"token punctuation\">.</span>mozPointerLockElement <span class=\"token operator\">===</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The pointer lock status is now locked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 応答として役に立つ処理</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The pointer lock status is now unlocked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 応答として役に立つ処理</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"pointerlockerror_イベント","title":"pointerlockerror イベント","isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/Element/requestPointerLock\" title=\"requestPointerLock()\"><code>requestPointerLock()</code></a> または <a href=\"/ja/docs/Web/API/Document/exitPointerLock\" title=\"exitPointerLock()\"><code>exitPointerLock()</code></a> の呼び出しによりエラーが発生したときは、<code><a href=\"/en-US/docs/Web/API/Document/pointerlockerror_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">pointerlockerror (en-US)</a></code> イベントが <code>document</code> に発生します。これはシンプルなイベントであり、付加的なデータは含まれません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointerlockerror'</span><span class=\"token punctuation\">,</span> lockError<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mozpointerlockerror'</span><span class=\"token punctuation\">,</span> lockError<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">lockError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pointer lock failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Firefox 50 まで、上記のイベントは <code>moz</code> 接頭辞を付加していました。</p>\n</div>"}},{"type":"prose","value":{"id":"mouse_イベントの拡張","title":"Mouse イベントの拡張","isH3":false,"content":"<p>Pointer Lock API は通常の <a href=\"/ja/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a> インターフェイスを、movement 属性で拡張します。新たな 2 つの属性 <a href=\"/ja/docs/Web/API/MouseEvent/movementX\" title=\"movementX\"><code>movementX</code></a> および <a href=\"/ja/docs/Web/API/MouseEvent/movementY\" title=\"movementY\"><code>movementY</code></a> が、マウスポインタの位置の変化を提供します。パラメーターの値は <a href=\"/ja/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a> のプロパティである <a href=\"/ja/docs/Web/API/MouseEvent/screenX\" title=\"screenX\"><code>screenX</code></a> および <a href=\"/ja/docs/Web/API/MouseEvent/screenY\" title=\"screenY\"><code>screenY</code></a> の値同士の差と同じであり、それらのプロパティは 2 つ続いて発生する <code><a href=\"/en-US/docs/Web/API/Element/mousemove_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">mousemove (en-US)</a></code> イベント <code>eNow</code> および <code>ePrevious</code> に保存されます。言い換えると、Pointer Lock のパラメーター <code>movementX</code> は、<code>eNow.screenX - ePrevious.screenX</code> になります。</p>"}},{"type":"prose","value":{"id":"ロックされた状態","title":"ロックされた状態","isH3":true,"content":"<p>Pointer Lock が有効であるとき、標準 <a href=\"/ja/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a> のプロパティである <a href=\"/ja/docs/Web/API/MouseEvent/clientX\" title=\"clientX\"><code>clientX</code></a>、<a href=\"/ja/docs/Web/API/MouseEvent/clientY\" title=\"clientY\"><code>clientY</code></a>、<a href=\"/ja/docs/Web/API/MouseEvent/screenX\" title=\"screenX\"><code>screenX</code></a>、<a href=\"/ja/docs/Web/API/MouseEvent/screenY\" title=\"screenY\"><code>screenY</code></a> は、マウスが動いていないかのように値が固定されます。<a href=\"/ja/docs/Web/API/MouseEvent/movementX\" title=\"movementX\"><code>movementX</code></a> プロパティおよび <a href=\"/ja/docs/Web/API/MouseEvent/movementY\" title=\"movementY\"><code>movementY</code></a> プロパティが、マウスの位置の変化を提供し続けます。マウスが一方向へ連続的に移動するとしても、<a href=\"/ja/docs/Web/API/MouseEvent/movementX\" title=\"movementX\"><code>movementX</code></a> および <a href=\"/ja/docs/Web/API/MouseEvent/movementY\" title=\"movementY\"><code>movementY</code></a> の値に制限はありません。マウスカーソルは存在せず、ウィンドウから外れたりスクリーンの端で止まったりしないという考え方です。</p>"}},{"type":"prose","value":{"id":"ロックが解除された状態","title":"ロックが解除された状態","isH3":true,"content":"<p>パラメーター <a href=\"/ja/docs/Web/API/MouseEvent/movementX\" title=\"movementX\"><code>movementX</code></a> および <a href=\"/ja/docs/Web/API/MouseEvent/movementY\" title=\"movementY\"><code>movementY</code></a> はマウスのロック状態にかかわらず有効であり、ロックされていない状態でも利便性のために使用できます。</p>\n<p>マウスのロックが解除されると、システムカーソルが存在するようになり、ブラウザーがウィンドウ表示に戻ります。このとき、<a href=\"/ja/docs/Web/API/MouseEvent/movementX\" title=\"movementX\"><code>movementX</code></a> および <a href=\"/ja/docs/Web/API/MouseEvent/movementY\" title=\"movementY\"><code>movementY</code></a> は 0 に設定されるかもしれません。</p>"}},{"type":"prose","value":{"id":"シンプルな例のウォークスルー","title":"シンプルな例のウォークスルー","isH3":false,"content":"<p>Pointer Lock の使用方法やシンプルな制御システムの設定方法を示すため、<a href=\"https://mdn.github.io/dom-examples/pointer-lock/\" class=\"external\" rel=\" noopener\">シンプルな Pointer Lock のデモ</a> を作成しました (<a href=\"https://github.com/mdn/dom-examples/tree/master/pointer-lock\" class=\"external\" rel=\" noopener\">ソースコードを確認する</a>)。デモは以下のようなものです:</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/7953/pointer-lock.png\" alt=\"A red circle on top of a black background.\" loading=\"lazy\">\n</p>\n<p>このデモでは、JavaScript を使用して <a href=\"/ja/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> 要素上にボールを描画します。canvas をクリックすると Pointer Lock がマウスポインターを取り除いて、マウスを使用してボールを直接動かすことができます。このデモの仕組みを見ていきましょう。</p>\n<p>canvas 内の、x および y の初期位置を設定します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>現在は Pointer Lock のメソッドに接頭辞がついていますので、ブラウザー実装ごとに処理を分けています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>canvas<span class=\"token punctuation\">.</span>requestPointerLock <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>requestPointerLock <span class=\"token operator\">||</span>\n                            canvas<span class=\"token punctuation\">.</span>mozRequestPointerLock<span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span>exitPointerLock <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>exitPointerLock <span class=\"token operator\">||</span>\n                           document<span class=\"token punctuation\">.</span>mozExitPointerLock<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>canvas がクリックされたときに、canvas で <code>requestPointerLock()</code> メソッドを実行するイベントリスナーを設定します。これは、Pointer Lock を開始します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>canvas<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  canvas<span class=\"token punctuation\">.</span><span class=\"token function\">requestPointerLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Pointer Lock イベント <code>pointerlockchange</code> のイベントリスナーを設定します。イベントが発生したら、Pointer Lock の変更を制御するために <code>lockChangeAlert()</code> という名前の関数を実行します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Pointer Lock のイベントリスナー</span>\n\n<span class=\"token comment\">// さまざまなブラウザ向けに、Pointer Lock の状態変化イベントをフックする</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointerlockchange'</span><span class=\"token punctuation\">,</span> lockChangeAlert<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mozpointerlockchange'</span><span class=\"token punctuation\">,</span> lockChangeAlert<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この関数は、pointLockElement プロパティが canvas を示しているかを確認します。示している場合は、マウスの移動を扱うためにイベントリスナーへ <code>updatePosition()</code> 関数を設定します。示していない場合は、イベントリスナーを再び削除します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">lockChangeAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>pointerLockElement <span class=\"token operator\">===</span> canvas <span class=\"token operator\">||</span>\n      document<span class=\"token punctuation\">.</span>mozPointerLockElement <span class=\"token operator\">===</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The pointer lock status is now locked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">,</span> updatePosition<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The pointer lock status is now unlocked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">,</span> updatePosition<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>updatePosition() 関数が、canvas 内のボールの位置 (<code>x</code> および <code>y</code>) を更新します。また、ボールが canvas の端からはみ出すかをチェックする <code>if()</code> 文が含まれています。ボールがはみ出す場合は、反対側の端にボールを描画します。また、<a href=\"/ja/docs/Web/API/Window/requestAnimationFrame\"><code>requestAnimationFrame()</code></a> がすでに呼び出されたかを確認しており、呼び出された場合は必要に応じて再び呼び出して、canvas のシーンを更新するために <code>canvasDraw()</code> 関数を呼び出します。さらに、参照用に X および Y の位置を表示するための tracker も設定します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> tracker <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tracker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> animation<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">updatePosition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  x <span class=\"token operator\">+=</span> e<span class=\"token punctuation\">.</span>movementX<span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">+=</span> e<span class=\"token punctuation\">.</span>movementY<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> <span class=\"token constant\">RADIUS</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token constant\">RADIUS</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">+</span> <span class=\"token constant\">RADIUS</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    y <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token constant\">RADIUS</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token constant\">RADIUS</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    x <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> <span class=\"token constant\">RADIUS</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token constant\">RADIUS</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    y <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">+</span> <span class=\"token constant\">RADIUS</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  tracker<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"X position: \"</span> <span class=\"token operator\">+</span> x <span class=\"token operator\">+</span> <span class=\"token string\">\", Y position: \"</span> <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>animation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    animation <span class=\"token operator\">=</span> <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animation <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">canvasDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>canvasDraw()</code> 関数は、現在の <code>x</code> および <code>y</code> の位置にボールを描画します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">canvasDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">\"#f00\"</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token constant\">RADIUS</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">degToRad</span><span class=\"token punctuation\">(</span><span class=\"token number\">360</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"iframe_の制限","title":"iframe の制限","isH3":false,"content":"<p>Pointer Lock は一度に 1 つだけの iframe をロックできます。iframe をひとつロックすると、別の iframe をロックしてターゲットを切り替えようとすることはできません。Pointer Lock はエラーになります。この制限を避けるため、始めにロックされた iframe のロックを解除してから別の iframe をロックしてください。</p>\n<p>iframe の既定の動作では、\"サンドボックス化された\" iframe が Pointer Lock をブロックします。<code>&lt;iframe sandbox=\"allow-pointer-lock\"&gt;</code> という属性/値の組み合わせによってこの制限を避けられることが、Chrome でまもなく可能になる予定です。</p>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>策定状況</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/pointerlock/\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"Pointer Lockの仕様書\" rel=\" noopener\">Pointer Lock</a></td>\n      <td><span class=\"spec-cr\">勧告候補</span></td>\n      <td>最初の仕様</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザー実装状況","id":"ブラウザー実装状況","isH3":false,"query":"api.Element.requestPointerLock","dataURL":"/ja/docs/Web/API/Pointer_Lock_API/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a></li>\n</ul>"}}],"toc":[{"text":"基本概念","id":"基本概念"},{"text":"メソッド/プロパティの概要","id":"メソッドプロパティの概要"},{"text":"pointerlockchange イベント","id":"pointerlockchange_イベント"},{"text":"pointerlockerror イベント","id":"pointerlockerror_イベント"},{"text":"Mouse イベントの拡張","id":"mouse_イベントの拡張"},{"text":"シンプルな例のウォークスルー","id":"シンプルな例のウォークスルー"},{"text":"iframe の制限","id":"iframe_の制限"},{"text":"仕様","id":"仕様"},{"text":"ブラウザー実装状況","id":"ブラウザー実装状況"},{"text":"関連情報","id":"関連情報"}],"summary":"Pointer Lock API (以前は Mouse Lock API と呼ばれていました) は、ビューポート内のマウスカーソルの絶対位置だけでなく、時間の経過に伴うマウスの動き (すなわち、デルタ) に基づく入力方法を提供します。これにより、マウスの動きそのものを知る、マウスイベントのターゲットをひとつの要素にロックする、マウスが一方向へどれだけ移動できるかの制限を除去する、視野からカーソルを取り除くことができます。これらは、本人視点の 3D ゲームなどで理想的です。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Pointer Lock API","locale":"en-US","native":"English (US)"},{"title":"API Pointer Lock","locale":"es","native":"Español"},{"title":"Pointer Lock API","locale":"fr","native":"Français"},{"title":"Pointer Lock API","locale":"ru","native":"Русский"},{"title":"Pointer Lock API","locale":"zh-CN","native":"中文 (简体)"},{"title":"Pointer Lock API","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/pointer_lock_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/pointer_lock_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Pointer_Lock_API","title":"Pointer Lock API"}],"pageTitle":"Pointer Lock API - Web API | MDN","noIndexing":false}}