{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CSS.registerProperty()","mdn_url":"/ja/docs/Web/API/CSS/RegisterProperty","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>これは<a href=\"/ja/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">実験的な機能</a>です。</strong><br>本番で使用する前に<a href=\"#browser_compatibility\">ブラウザー互換性一覧表</a>をチェックしてください。</p></div>\n<p><strong><code>CSS.registerProperty()</code></strong> メソッドは<a href=\"/ja/docs/Web/CSS/--*\"><code>カスタムプロパティ</code></a>を登録し、プロパティ型のチェック、既定値、値の継承の有無の指定を行うことができます。</p>\n<p>カスタムプロパティを登録すると、許される型は何か、その値を継承するかどうか、既定値は何かといったカスタムプロパティの動作ををブラウザーに指示することができます。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerProperty</span><span class=\"token punctuation\">(</span>PropertyDefinition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<p>次のメンバーを設定することができる <code>PropertyDefinition</code> 辞書オブジェクトです。</p>\n<dl>\n  <dt id=\"name\"><code>name</code></dt>\n  <dd>\n    <p>定義しているプロパティの名前を示す <a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a>。</p>\n  </dd>\n  <dt id=\"syntax\"><code>syntax</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>定義されたプロパティの期待される構文を表す <a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a>。 既定値は <code>\"*\"</code> です。</p>\n  </dd>\n  <dt id=\"inherits\"><code>inherits</code></dt>\n  <dd>\n    <p>定義されたプロパティを継承する必要があるか (<code>true</code>)、否か (<code>false</code>) を定義する論理値。 既定値は <code>false</code> です。</p>\n  </dd>\n  <dt id=\"initialvalue\"><code>initialValue</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>定義されたプロパティの初期値を表す <a href=\"/ja/docs/Glossary/String\"><code>DOMString</code></a>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p><code>undefined</code> です。</p>"}},{"type":"prose","value":{"id":"例外","title":"例外","isH3":true,"content":"<dl>\n  <dt id=\"invalidmodificationerror\"><code>InvalidModificationError</code></dt>\n  <dd>\n    <p>指定された <code>name</code> がすでに登録されている場合。</p>\n  </dd>\n  <dt id=\"syntaxerror\"><code>SyntaxError</code></dt>\n  <dd>\n    <p>指定された <code>name</code> が（<code>--foo</code> のように、 2 つのダッシュで始まる）有効なカスタムプロパティ名ではない場合。</p>\n  </dd>\n  <dt id=\"typeerror\"><code>TypeError</code></dt>\n  <dd>\n    <p>必須の辞書メンバーの <code>name</code> または <code>inherits</code>、あるいはその両方が指定されていない場合。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の例では、<a href=\"/ja/docs/Web/CSS/--*\"><code>カスタムプロパティ</code></a>の <code>--my-color</code> を、 <code>registerProperty()</code> を使用して色として登録し、既定値を指定して、その値を継承しないようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'--my-color'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">syntax</span><span class=\"token operator\">:</span> <span class=\"token string\">'&lt;color&gt;'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">inherits</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">initialValue</span><span class=\"token operator\">:</span> <span class=\"token string\">'#c0ffee'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この例では、カスタムプロパティ <code>--my-color</code> が構文 <code>&lt;color&gt;</code> を使用して登録されます。 これで、このプロパティを使用して、ポインターを当てたりフォーカスを与えたりするとグラデーションをトランジションで変化させることができます。 登録されたプロパティではトランジションが機能しますが、未登録のプロパティでは機能しないことに注意してください。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.registered</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--my-color</span><span class=\"token punctuation\">:</span> #c0ffee<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to right<span class=\"token punctuation\">,</span> #fff<span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--my-color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> --my-color 1s ease-in-out<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.registered:hover,\n.registered:focus</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--my-color</span><span class=\"token punctuation\">:</span> #b4d455<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.unregistered</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--unregistered</span><span class=\"token punctuation\">:</span> #c0ffee<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">linear-gradient</span><span class=\"token punctuation\">(</span>to right<span class=\"token punctuation\">,</span> #fff<span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--unregistered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> --unregistered 1s ease-in-out<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.unregistered:hover,\n.unregistered:focus</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--unregistered</span><span class=\"token punctuation\">:</span> #b4d455<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 3vw<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これらのスタイルをいくつかのボタンに追加できます。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>registered<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Background Registered<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>unregistered<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Background Not Registered<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"例\" id=\"frame_examples\" width=\"320\" height=\"320\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/CSS/RegisterProperty/_sample_.examples.html\" loading=\"lazy\"></iframe>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://drafts.css-houdini.org/css-properties-values-api/#the-registerproperty-function","title":"CSS Properties and Values API Level 1"}],"query":"api.CSS.registerProperty"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.CSS.registerProperty","dataURL":"/ja/docs/Web/API/CSS/RegisterProperty/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/CSS_Properties_and_Values_API/guide\">CSS properties and values API の使用</a></li>\n  <li><a href=\"/ja/docs/Web/API/CSS\"><code>CSS</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/CSS/supports\"><code>CSS.supports()</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/CSS/escape\"><code>CSS.escape()</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/CSS/factory_functions\" title=\"CSS ファクトリー関数\"><code>CSS ファクトリー関数</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"CSS.registerProperty() メソッドはカスタムプロパティを登録し、プロパティ型のチェック、既定値、値の継承の有無の指定を行うことができます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CSS.registerProperty()","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/css/registerproperty","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/css/registerproperty/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/CSS","title":"CSS"},{"uri":"/ja/docs/Web/API/CSS/RegisterProperty","title":"CSS.registerProperty()"}],"pageTitle":"CSS.registerProperty() - Web API | MDN","noIndexing":false}}