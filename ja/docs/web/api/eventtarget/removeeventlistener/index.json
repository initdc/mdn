{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"EventTarget.removeEventListener()","mdn_url":"/ja/docs/Web/API/EventTarget/removeEventListener","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget/EventTarget\"><code>EventTarget()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a></li><li><a href=\"/ja/docs/Web/API/EventTarget/dispatchEvent\"><code>dispatchEvent()</code></a></li><li><em><code>removeEventListener()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>DOM に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/ja/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/ja/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/ja/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/ja/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/ja/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/ja/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/ja/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/ja/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/ja/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/ja/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/ja/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/ja/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/ja/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/ja/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/ja/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/ja/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/ja/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/ja/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/ja/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/ja/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/ja/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/ja/docs/Web/API/Range\"><code>Range</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/ja/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/ja/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/ja/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/ja/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/ja/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  <strong><code>removeEventListener()</code></strong> は <a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a> インターフェイスのメソッドで、以前に <a href=\"/ja/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a> で登録されたイベントリスナーを取り外します。\n  取り外されるイベントリスナーはイベントの型、イベントリスナー関数そのもの、照合プロセスに影響を与えるさまざまな任意のオプションを使用して識別します。\n  <a href=\"#%E5%8F%96%E3%82%8A%E5%A4%96%E3%81%99%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%83%AA%E3%82%B9%E3%83%8A%E3%83%BC%E3%81%AE%E7%85%A7%E5%90%88\">取り外すイベントリスナーの照合</a>を参照してください。\n</p>\n<p><code>removeEventListener()</code> を呼び出したときの引数で <code>EventTarget</code> に登録されている <a href=\"/ja/docs/conflicting/Web/API/EventTarget/addEventListener_380cb5f366307beb2c072f74e561ee98\"><code>EventListener</code></a> が特定できなかった場合は、何も起こりません。</p>\n<p><a href=\"/ja/docs/conflicting/Web/API/EventTarget/addEventListener_380cb5f366307beb2c072f74e561ee98\"><code>EventListener</code></a> が <a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a> の他のリスナーのイベント処理中に外された場合、イベントによって起動させることはありません。しかし、再接続は可能です。</p>\n<div class=\"notecard warning\" id=\"sect1\">\n  <p><strong>Warning:</strong> リスナーが <em>capture</em> フラグを設定したものと設定しないものの 2 つ登録されている場合、それぞれを別々に取り外す必要があります。キャプチャするリスナーを取り外しても、同じリスナーのキャプチャしないバージョンには影響しませんし、その逆も同様です。</p>\n</div>\n<p>イベントリスナーを取り外すには、 <a href=\"/ja/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> を <a href=\"/ja/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a> に渡して、後でそのシグナルを所有するコントローラーで <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AbortController/abort\"><code>abort()</code> <small>(en-US)</small></a> を呼び出して行うことも可能です。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">,</span> useCapture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"type\"><code>type</code></dt>\n  <dd>\n    <p>文字列で、イベントリスナーを取り外すイベントの種類を表します。</p>\n  </dd>\n  <dt id=\"listener\"><code>listener</code></dt>\n  <dd>\n    <p>イベントターゲットから取り外すイベントハンドラーの <a href=\"/ja/docs/conflicting/Web/API/EventTarget/addEventListener_380cb5f366307beb2c072f74e561ee98\"><code>EventListener</code></a> 関数です。</p>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>イベントリスナーに関する特性を指定する、オプションのオブジェクトです。</p>\n    <p>次のオプションが使用できます。</p>\n    <ul>\n      <li><code>capture</code>: 論理値で、取り外す <a href=\"/ja/docs/conflicting/Web/API/EventTarget/addEventListener_380cb5f366307beb2c072f74e561ee98\"><code>EventListener</code></a> がキャプチャリスナーとして登録されているか否かを指定します。この引数がない場合、既定の値として <code>false</code> が想定される。</li>\n    </ul>\n  </dd>\n  <dt id=\"usecapture\"><code>useCapture</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>取り外す <a href=\"/ja/docs/conflicting/Web/API/EventTarget/addEventListener_380cb5f366307beb2c072f74e561ee98\"><code>EventListener</code></a> がキャプチャリスナーとして登録されているかを指定します。この引数を省略した場合は、既定値の <code>false</code> であるとみなします。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>なし。</p>"}},{"type":"prose","value":{"id":"取り外すイベントリスナーの照合","title":"取り外すイベントリスナーの照合","isH3":true,"content":"<p>以前に <a href=\"/ja/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a> を呼び出して追加したイベントリスナーがある場合、最終的にそれを取り外す必要がある場合があります。当然ながら、同じ <code>type</code> と <code>listener</code> 引数を <code>removeEventListener()</code> には指定する必要があります。しかし、 <code>options</code> や <code>useCapture</code> 引数はどうでしょうか。</p>\n<p><code>addEventListener()</code> は、オプションが異なれば同じリスナーを同じ種類に複数回追加することができますが、 <code>removeEventListener()</code> がチェックするオプションは <code>capture</code>/<code>useCapture</code> フラグのみとなります。この値は <code>removeEventListener()</code> で一致するためには一致していなければなりませんが、他の値は一致していなくてもかまいません。</p>\n<p>例えば、以下の <code>addEventListener()</code> で考えましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>そして、以下 2 つの <code>removeEventListener()</code> の呼び出しについて考えましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 失敗</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 成功</span>\n</code></pre></div>\n<p>1 番目の呼び出しは、 <code>useCapture</code> の値が異なるため失敗します。2 番目は、<code>useCapture</code> が一致するので成功します。</p>\n<p>次に、以下の呼び出しを考えましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">passive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>ここでは <code>options</code> で <code>passive</code> を <code>true</code> に設定して指定していますが、他のオプションは既定値の <code>false</code> のままです。</p>\n<p>では、以下の <code>removeEventListener()</code> の呼び出しについて、順番に見ていきましょう。<code>capture</code> または <code>useCapture</code> が <code>true</code> であるものは失敗して、そのほかは成功します。</p>\n<p><code>capture</code> の設定だけが <code>removeEventListener()</code> に関与します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">passive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 成功</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capture</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 成功</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">capture</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 失敗</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">passive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 成功</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 成功</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> handleMouseDown<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">// 失敗</span>\n</code></pre></div>\n<p>この点については、いくつかのブラウザのリリースで一貫性がないことに注意してください。特に理由がない限り、<code>addEventListener()</code> の呼び出しで使用したのと同じ値を <code>removeEventListener()</code> の呼び出しでも使用することが賢明でしょう。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>この例は、<code>mouseover</code> ベースのイベントリスナーを追加して <code>click</code> ベースのイベントリスナーを取り外す方法を示します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> clickTarget <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click-target'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> mouseOverTarget <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouse-over-target'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> toggle <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">makeBackgroundYellow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>toggle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    body<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  toggle <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>toggle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nclickTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>\n  makeBackgroundYellow<span class=\"token punctuation\">,</span>\n  <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmouseOverTarget<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseover'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  clickTarget<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>\n    makeBackgroundYellow<span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#ref-for-dom-eventtarget-removeeventlistener②","title":"DOM Standard"}],"query":"api.EventTarget.removeEventListener"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.EventTarget.removeEventListener","dataURL":"/ja/docs/Web/API/EventTarget/removeEventListener/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"removeEventListener() は EventTarget インターフェイスのメソッドで、以前に EventTarget.addEventListener() で登録されたイベントリスナーを取り外します。\n  取り外されるイベントリスナーはイベントの型、イベントリスナー関数そのもの、照合プロセスに影響を与えるさまざまな任意のオプションを使用して識別します。\n  取り外すイベントリスナーの照合を参照してください。","popularity":0.001,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"EventTarget.removeEventListener()","locale":"en-US","native":"English (US)"},{"title":"EventTarget.removeEventListener()","locale":"es","native":"Español"},{"title":"element.removeEventListener","locale":"fr","native":"Français"},{"title":"EventTarget.removeEventListener()","locale":"ko","native":"한국어"},{"title":"EventTarget.removeEventListener()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Метод EventTarget.removeEventListener()","locale":"ru","native":"Русский"},{"title":"EventTarget.removeEventListener()","locale":"zh-CN","native":"中文 (简体)"},{"title":"EventTarget.removeEventListener()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/eventtarget/removeeventlistener","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/eventtarget/removeeventlistener/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/EventTarget","title":"EventTarget"},{"uri":"/ja/docs/Web/API/EventTarget/removeEventListener","title":"EventTarget.removeEventListener()"}],"pageTitle":"EventTarget.removeEventListener() - Web API | MDN","noIndexing":false}}