{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"MutationObserver.disconnect()","mdn_url":"/ja/docs/Web/API/MutationObserver/disconnect","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/MutationObserver/MutationObserver\"><code>MutationObserver()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><em><code>disconnect()</code></em></li><li><a href=\"/ja/docs/Web/API/MutationObserver/observe\"><code>observe()</code></a></li><li><a href=\"/ja/docs/Web/API/MutationObserver/takeRecords\"><code>takeRecords()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a> の <strong><code>disconnect()</code></strong> メソッドは、オブザーバーに変更の監視を停止させます。 オブザーバーは、 <a href=\"/ja/docs/Web/API/MutationObserver/observe\" title=\"observe()\"><code>observe()</code></a> メソッドを再度呼び出すことで再利用できます。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">mutationObserver.disconnect()\n</pre>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<p>なし</p>"}},{"type":"prose","value":{"id":"戻り値","title":"戻り値","isH3":true,"content":"<p><code>undefined</code></p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> すでに検知されているものの、まだオブザーバーに報告されていない変更の通知は、すべて破棄されます。</p>\n</div>"}},{"type":"prose","value":{"id":"使用における注意点","title":"使用における注意点","isH3":false,"content":"<p>監視されている要素が DOM から削除され、その後ブラウザのガベージコレクション機構によって解放された場合、<code>MutationObserver</code> も同様に削除されます。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>この例では、オブザーバを作成してから切断し、再利用できるようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> targetNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#someElement\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> observerOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">childList</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">attributes</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MutationObserver</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>targetNode<span class=\"token punctuation\">,</span> observerOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* some time later... */</span>\n\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>Specification</th>\n      <th>Status</th>\n      <th>Comment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://dom.spec.whatwg.org/#dom-mutationobserver-disconnect\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">DOM<br><small lang=\"ja\">MutationObserver.disconnect() の定義</small></a></td>\n      <td><span class=\"spec-living\">現行の標準</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザ互換性","id":"ブラウザ互換性","isH3":false,"query":"api.MutationObserver.disconnect","dataURL":"/ja/docs/Web/API/MutationObserver/disconnect/bcd.json"}}],"toc":[{"text":"構文","id":"構文"},{"text":"使用における注意点","id":"使用における注意点"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザ互換性","id":"ブラウザ互換性"}],"summary":"MutationObserver の disconnect() メソッドは、オブザーバーに変更の監視を停止させます。 オブザーバーは、 observe() メソッドを再度呼び出すことで再利用できます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"MutationObserver.disconnect()","locale":"en-US","native":"English (US)"},{"title":"MutationObserver.disconnect()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/mutationobserver/disconnect","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/mutationobserver/disconnect/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/MutationObserver","title":"MutationObserver"},{"uri":"/ja/docs/Web/API/MutationObserver/disconnect","title":"MutationObserver.disconnect()"}],"pageTitle":"MutationObserver.disconnect() - Web API | MDN","noIndexing":false}}