{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"KeyboardEvent.key","mdn_url":"/ja/docs/Web/API/KeyboardEvent/key","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/UI_Events\">UI Events <small>(en-US)</small></a></strong></li><li><strong><a href=\"/ja/docs/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/KeyboardEvent/altKey\"><code>altKey</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/charCode\"><code>charCode</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/code\"><code>code</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/ctrlKey\"><code>ctrlKey</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/isComposing\"><code>isComposing</code></a></li><li><em><code>key</code></em></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/keyCode\"><code>keyCode</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/keyIdentifier\"><code>keyIdentifier</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/location\"><code>location</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/metaKey\"><code>metaKey</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/repeat\"><code>repeat</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/shiftKey\"><code>shiftKey</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/KeyboardEvent/getModifierState\"><code>getModifierState()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>initKeyboardEvent()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>initKeyEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>UI Events に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/CompositionEvent\"><code>CompositionEvent</code></a></li><li><a href=\"/ja/docs/Web/API/FocusEvent\"><code>FocusEvent</code></a></li><li><a href=\"/ja/docs/Web/API/InputEvent\"><code>InputEvent</code></a></li><li><a href=\"/ja/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MouseScrollEvent\"><code>MouseScrollEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationEvent\"><code>MutationEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/ja/docs/Web/API/WheelEvent\"><code>WheelEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a> インターフェイスの <strong><code>key</code></strong> プロパティは読み取り専用で、ユーザーが押したキーの値を、 <kbd>Shift</kbd> キーなどの修飾キーやキーボードのロケールやレイアウトを考慮した値で返します。</p>"}},{"type":"prose","value":{"id":"値","title":"値","isH3":false,"content":"<p>文字列です。</p>\n<p>この値は、以下のように決定されます。</p>\n<ul>\n  <li>押されたキーが表示可能なものである場合、返される値は、そのキーの表示可能な表現を含む空でない Unicode 文字列になります。</li>\n  <li>押されたキーが制御文字や特殊文字の場合、返される値は<a href=\"/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">事前に定義されたキー値 (en-US)</a>のいずれかになります。</li>\n  <li>もし <code>KeyboardEvent</code> が<a href=\"https://wikipedia.org/wiki/Dead_key\" class=\"external\" rel=\" noopener\">デッドキー</a>が押されたことを表している場合は、キー値は \"<code>Dead</code>\" になります。</li>\n  <li>一部の特殊なキーボードのキー（マルチメディアキーボードでメディアを制御するための拡張キーなど）は、 Windows ではキーコードを生成しません。その代わりに、 <code>WM_APPCOMMAND</code> イベントが発生します。これらのイベントは DOM キーボードイベントにマッピングされ、 Windows の「仮想キーコード」にリストアップされます（実際にはキーコードではありませんが）。</li>\n  <li>キーを特定できない場合、返される値は <code>Unidentified</code> になります。</li>\n</ul>\n<div class=\"callout\" id=\"sect1\">\n  <p><a href=\"/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">キー値の完全なリスト (en-US)</a>をご覧ください。</p>\n</div>"}},{"type":"prose","value":{"id":"keyboardevent_の順序","title":"KeyboardEvent の順序","isH3":false,"content":"<p>それぞれの <code>KeyboardEvent</code> はあらかじめ定められた順序で発生します。キーが押された場合、発生する一連の <code>KeyboardEvent</code> は <a href=\"/ja/docs/Web/API/Event/preventDefault\"><code>Event.preventDefault</code></a> が呼び出されないと仮定すれば次のようになります。</p>\n<ol>\n  <li>最初に <a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a> イベントが発生します。キーがそれ以上押され続けてそのキーが文字を入力する場合は、イベントはプラットフォームの実装に依存した間隔で発生し続け、読み取り専用の <a href=\"/ja/docs/Web/API/KeyboardEvent/repeat\"><code>KeyboardEvent.repeat</code></a> プロパティが <code>true</code> に設定されます。</li>\n  <li>もしキー入力が <a href=\"/ja/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>、<a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>もしくは<a href=\"/ja/docs/Web/API/HTMLElement/contentEditable\"><code>HTMLElement.contentEditable</code></a> が <code>true</code> の要素に文字を挿入する場合は、 <a href=\"/ja/docs/Web/API/HTMLElement/beforeinput_event\" title=\"beforeinput\"><code>beforeinput</code></a> と <a href=\"/ja/docs/Web/API/HTMLElement/input_event\" title=\"input\"><code>input</code></a> イベント型がその順番で発生します。一部の他の実装では、 <a href=\"/ja/docs/Web/API/Element/keypress_event\" title=\"keypress\"><code>keypress</code></a> イベントを実装していれば発生する可能性があることに注意してください。イベントはキーが押されている間、連続で発生します。</li>\n  <li>キーを離した際に <a href=\"/ja/docs/Web/API/Element/keyup_event\" title=\"keyup\"><code>keyup</code></a> イベントが発生します。これで一連の処理は終わりです。</li>\n</ol>\n<p>1 と 3 の処理で、 <code>KeyboardEvent.key</code> 属性が定義され、先ほど定義したルールに則って値が設定されます。</p>"}},{"type":"prose","value":{"id":"一連の_keyboardevent_の例","title":"一連の KeyboardEvent の例","isH3":false,"content":"<p>米国キーボードレイアウトで <kbd>Shift</kbd> キーと <kbd>2</kbd> キーを使用した場合と、英国キーボードレイアウトで使用した場合のイベントシーケンスについて考えてみましょう。</p>\n<p>以下の 2 つのテストケースを使用して実験してみてください。</p>\n<ol>\n  <li><kbd>Shift</kbd> キーを押しながら、 <kbd>2</kbd> キーを押して離します。次に <kbd>Shift</kbd> キーを離します。</li>\n  <li><kbd>Shift</kbd> キーを押しながら、 <kbd>2</kbd> を押し続けます。 <kbd>Shift</kbd> キーを離します。最後に <kbd>2</kbd> を離します。</li>\n</ol>"}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test-target<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>test-target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-reset<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-reset<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Reset<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>flex<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>console-log<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"css","title":"CSS","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.fx</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">-webkit-display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> -20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> -20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.fx &gt; div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.fx &gt; div:first-child</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 30%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.flex</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">-webkit-flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#test-target</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> textarea <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test-target'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nconsoleLog <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console-log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nbtnReset <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn-reset'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  consoleLog<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> message <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keydown'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>repeat<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" pressed [event: keydown]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span>\n    <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" repeating [event: keydown]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'beforeinput'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" about to be input [event: beforeinput]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" input [event: input]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntextarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logMessage</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" released [event: keyup]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbtnReset<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> child <span class=\"token operator\">=</span> consoleLog<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   consoleLog<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   child <span class=\"token operator\">=</span> consoleLog<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  textarea<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"結果","title":"結果","isH3":true,"content":"<iframe class=\"sample-code-frame\" title=\"一連の KeyboardEvent の例\" id=\"frame_keyboardevent_sequence_example\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/KeyboardEvent/key/_sample_.keyboardevent_sequence_example.html\" loading=\"lazy\"></iframe>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <a href=\"/ja/docs/Web/API/HTMLElement/beforeinput_event\" title=\"beforeinput\"><code>beforeinput</code></a> と <a href=\"/ja/docs/Web/API/HTMLElement/input_event\" title=\"input\"><code>input</code></a> イベントで使用されている <a href=\"/ja/docs/Web/API/InputEvent\"><code>InputEvent</code></a> インターフェイスを完全に実装していないブラウザーでは、誤ったログ出力をする可能性があります。</p>\n</div>"}},{"type":"prose","value":{"id":"ケース_1","title":"ケース 1","isH3":true,"content":"<p>Shift キーが押されると、まず <a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a> イベントが発行され、 <code>key</code> プロパティの値として文字列 <code>Shift</code> が設定されます。このキーを押し続けても、文字が発生しないので <a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a> イベントが繰り返し発行され続けるわけではありません。</p>\n<p><code>2 キー</code>が押されると、この新しいキー押下に対して別の <a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a> イベントが発行され、修飾キー <code>shift</code> が有効なので、このイベントの <code>key</code> プロパティ値には米国のキーボード型の場合は <code>@</code> 、英国のキーボード型の場合は <code>\"</code> という文字列が設定されます。文字キーが生成されたので、次に <a href=\"/ja/docs/Web/API/HTMLElement/beforeinput_event\" title=\"beforeinput\"><code>beforeinput</code></a> と <a href=\"/ja/docs/Web/API/HTMLElement/input_event\" title=\"input\"><code>input</code></a> イベントが発行されます。</p>\n<p><code>2 キー</code>を離すと、<a href=\"/ja/docs/Web/API/Element/keyup_event\" title=\"keyup\"><code>keyup</code></a> イベントが発行され、<code>key</code> プロパティにはそれぞれ異なるキーボードレイアウト用の <code>@</code> と <code>\"</code> という文字列が保持されるようになります。</p>\n<p>最後に <code>shift</code> キーを離すと、別の <a href=\"/ja/docs/Web/API/Element/keyup_event\" title=\"keyup\"><code>keyup</code></a> イベントが発行され、 key 属性の値は <code>Shift</code> のまま残ります。</p>"}},{"type":"prose","value":{"id":"ケース_2","title":"ケース 2","isH3":true,"content":"<p>Shift キーが押されると、まず <a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a> イベントが発行され、<code>key</code> プロパティの値として文字列 <code>Shift</code> がセットされます。このキーを押し続けても、文字キーは生成されないので、 keydown イベントは繰り返し発行され続けることはありません。</p>\n<p><code>2 キー</code>が押されると、この新しいキー押下に対して別の <a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a> イベントが発行され、修飾キー <code>shift</code> が有効になっているので、そのイベントの <code>key</code> プロパティの値は、米国キーボード型の場合は <code>@</code> 、英国キーボード型の場合は <code>\"</code> という文字列に設定されています。文字が生成されたので、次に <a href=\"/ja/docs/Web/API/HTMLElement/beforeinput_event\" title=\"beforeinput\"><code>beforeinput</code></a> と <a href=\"/ja/docs/Web/API/HTMLElement/input_event\" title=\"input\"><code>input</code></a> イベントが発行されています。キーを押し続けると、<a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a> イベントが繰り返し発行され、<a href=\"/ja/docs/Web/API/KeyboardEvent/repeat\"><code>KeyboardEvent.repeat</code></a>プロパティは <code>true</code> にセットされています。同様に <a href=\"/ja/docs/Web/API/HTMLElement/beforeinput_event\" title=\"beforeinput\"><code>beforeinput</code></a> と <a href=\"/ja/docs/Web/API/HTMLElement/input_event\" title=\"input\"><code>input</code></a> イベントが繰り返し発行されています。</p>\n<p><code>Shift</code> キーを離すと、それに対して <a href=\"/ja/docs/Web/API/Element/keyup_event\" title=\"keyup\"><code>keyup</code></a> イベントが発行され、キー属性の値は <code>Shift</code> のままとなります。このとき、修飾キー <code>shift</code> は有効ではなくなるので、<code>2 キー</code>を押したときの keydown イベントを繰り返すための <code>key</code> プロパティの値が \"2\" になっていることに注目してください。同じことが <a href=\"/ja/docs/Web/API/HTMLElement/beforeinput_event\" title=\"beforeinput\"><code>beforeinput</code></a> と <a href=\"/ja/docs/Web/API/HTMLElement/input_event\" title=\"input\"><code>input</code></a> イベントの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InputEvent/data\"><code>InputEvent.data</code> <small>(en-US)</small></a> プロパティにも当てはまります。</p>\n<p>最後に <code>2 キー</code>を離すと、<a href=\"/ja/docs/Web/API/Element/keyup_event\" title=\"keyup\"><code>keyup</code></a> イベントが発行されますが、修飾キー <code>shift</code> はもはやアクティブではないので、<code>key</code> プロパティはどちらのキーボードレイアウトでも、文字列値 <code>2</code> に設定されます。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>この例では <a href=\"/ja/docs/Web/API/EventTarget/addEventListener\"><code>EventTarget.addEventListener()</code></a> を使用して <a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a> イベントを待ち受けています。イベントが発生すると、キーの値がチェックされ、コードが関心を持つキーの一つであるかどうかが確認され、もしそうであれば、何らかの方法で処理されます（宇宙船の操縦や、スプレッドシートの選択セルの変更など）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keydown\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>defaultPrevented<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Do nothing if the event was already processed</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Down\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// IE/Edge specific value</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowDown\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"down arrow\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Up\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// IE/Edge specific value</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowUp\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"up arrow\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Left\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// IE/Edge specific value</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowLeft\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"left arrow\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Right\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// IE/Edge specific value</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowRight\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"right arrow\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Enter\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"enter\" or \"return\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Esc\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// IE/Edge specific value</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Escape\"</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Do something for \"esc\" key press.</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Quit when this doesn't handle the key event.</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Cancel the default action to avoid it being handled twice</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/uievents/#dom-keyboardevent-key","title":"UI Events"}],"query":"api.KeyboardEvent.key"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.KeyboardEvent.key","dataURL":"/ja/docs/Web/API/KeyboardEvent/key/bcd.json"}}],"toc":[{"text":"値","id":"値"},{"text":"KeyboardEvent の順序","id":"keyboardevent_の順序"},{"text":"一連の KeyboardEvent の例","id":"一連の_keyboardevent_の例"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"KeyboardEvent インターフェイスの key プロパティは読み取り専用で、ユーザーが押したキーの値を、 Shift キーなどの修飾キーやキーボードのロケールやレイアウトを考慮した値で返します。","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"KeyboardEvent.key","locale":"en-US","native":"English (US)"},{"title":"KeyboardEvent.key","locale":"fr","native":"Français"},{"title":"KeyboardEvent.key","locale":"ko","native":"한국어"},{"title":"KeyboardEvent.key","locale":"ru","native":"Русский"},{"title":"KeyboardEvent.key","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/keyboardevent/key","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/keyboardevent/key/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/KeyboardEvent","title":"KeyboardEvent"},{"uri":"/ja/docs/Web/API/KeyboardEvent/key","title":"KeyboardEvent.key"}],"pageTitle":"KeyboardEvent.key - Web API | MDN","noIndexing":false}}