{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"KeyboardEvent.getModifierState()","mdn_url":"/ja/docs/Web/API/KeyboardEvent/getModifierState","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/UI_Events\">UI Events <small>(en-US)</small></a></strong></li><li><strong><a href=\"/ja/docs/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/KeyboardEvent/altKey\"><code>altKey</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/charCode\"><code>charCode</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/code\"><code>code</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/ctrlKey\"><code>ctrlKey</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/isComposing\"><code>isComposing</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/key\"><code>key</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/keyCode\"><code>keyCode</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/keyIdentifier\"><code>keyIdentifier</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/location\"><code>location</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/metaKey\"><code>metaKey</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/repeat\"><code>repeat</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/shiftKey\"><code>shiftKey</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><em><code>getModifierState()</code></em></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>initKeyboardEvent()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>initKeyEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>UI Events に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/CompositionEvent\"><code>CompositionEvent</code></a></li><li><a href=\"/ja/docs/Web/API/FocusEvent\"><code>FocusEvent</code></a></li><li><a href=\"/ja/docs/Web/API/InputEvent\"><code>InputEvent</code></a></li><li><a href=\"/ja/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MouseScrollEvent\"><code>MouseScrollEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationEvent\"><code>MutationEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/ja/docs/Web/API/WheelEvent\"><code>WheelEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>KeyboardEvent.getModifierState()</code></strong> メソッドは、指定された修飾キーの現在の状態を返します。修飾キーが有効な場合（すなわち修飾キーが押されているかロックされている場合）は <code>true</code>、そうでなければ <code>false</code> になります。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"key\"><code>key</code></dt>\n  <dd>\n    <p>修飾キーの値。値は修飾キーを表す <a href=\"/ja/docs/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code></a> 値のいずれか、または文字列 <code>\"Accel\"</code> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> でなければなりません。これは大文字と小文字を区別します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>論理値です。</p>"}},{"type":"prose","value":{"id":"internet_explorer_での修飾キー","title":"Internet Explorer での修飾キー","isH3":false,"content":"<p>\n  IE9 は <code>\"Scroll\"</code> が <code>\"ScrollLock\"</code> を、 <code>\"Win\"</code> が\n  <code>\"OS\"</code> を表します。\n</p>"}},{"type":"prose","value":{"id":"gecko_での修飾キー","title":"Gecko での修飾キー","isH3":false,"content":"<p>Gecko で <code>getModifierState()</code> が true を返すときです。</p>\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"row\"></th>\n      <th scope=\"col\">Windows</th>\n      <th scope=\"col\">Linux (GTK)</th>\n      <th scope=\"col\">Mac</th>\n      <th scope=\"col\">Android 2.3</th>\n      <th scope=\"col\">Android 3.0 or latter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\"><code>\"Alt\"</code></th>\n      <td><kbd>Alt</kbd> キーか <kbd>AltGr</kbd> キーが押されている</td>\n      <td><kbd>Alt</kbd> キーが押されている</td>\n      <td><kbd>⌥ Option</kbd> キーが押されている</td>\n      <td colspan=\"2\"><kbd>Alt</kbd> キーか <kbd>option</kbd> キーが押されている</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"AltGraph\"</code></th>\n      <td>\n        <p><kbd>Alt</kbd> と <kbd>Ctrl</kbd> の両方のキーが押されている、または <kbd>AltGr</kbd> キーが押されている</p>\n      </td>\n      <td><kbd>Level 3 Shift</kbd> キー（または <kbd>Level 5 Shift</kbd> キー）が押されている</td>\n      <td><kbd>⌥ Option</kbd> キーが押されている</td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"CapsLock\"</code></th>\n      <td colspan=\"3\"><kbd>⇪ Caps Lock</kbd> の LED がオンになっている間</td>\n      <td>❌ <em>未対応</em></td>\n      <td><kbd>CapsLock</kbd> がロックされている間</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"Control\"</code></th>\n      <td><kbd>Ctrl</kbd> キーか <kbd>AltGr</kbd> キーが押されている</td>\n      <td><kbd>Ctrl</kbd> キーが押されている</td>\n      <td><kbd>control</kbd> キーが押されている</td>\n      <td><kbd>menu</kbd> キーが押されている</td>\n      <td><kbd>Ctrl</kbd> キー、 <kbd>control</kbd> キー、 <kbd>menu</kbd> キーの何れかが押されている</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"Fn\"</code></th>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td><kbd>Function</kbd> キーが押されているが、どのキーが修飾状態をアクティブにするのかが分からない。 Mac のキーボードの <kbd>Fn</kbd> キーでは、このアクティブな状態は発生しません。</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"FnLock\"</code></th>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"Hyper\"</code></th>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"Meta\"</code></th>\n      <td>❌ <em>未対応</em></td>\n      <td><kbd>Meta</kbd> キーが押されている</td>\n      <td><kbd>⌘ Command</kbd> キーが押されている</td>\n      <td>❌ <em>未対応</em></td>\n      <td><kbd>⊞ Windows ロゴ</kbd> キーまたは <kbd>command</kbd> キーが押されている</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"NumLock\"</code></th>\n      <td colspan=\"2\"><kbd>Num Lock</kbd> の LED がオンになっている間</td>\n      <td>A key on numpad pressed</td>\n      <td>❌ <em>未対応</em></td>\n      <td><kbd>NumLock</kbd> がロックされている間</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"OS\"</code></th>\n      <td><kbd>⊞ Windows ロゴ</kbd> キーが押されている</td>\n      <td><kbd>Super</kbd> キーまたは <kbd>Hyper</kbd> キーが押されている（ふつう、 <kbd>⊞ Windows ロゴ</kbd> キーに割り当てられている）</td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"ScrollLock\"</code></th>\n      <td><kbd>Scroll Lock</kbd> の LED がオンになっている間</td>\n      <td><kbd>Scroll Lock</kbd> の LED がオンになっている間、ただしふつうはプラットフォームが対応していない</td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td><kbd>ScrollLock</kbd> がロックされている間</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"Shift\"</code></th>\n      <td colspan=\"5\"><kbd>⇧ Shift</kbd> キーが押されている</td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"Super\"</code></th>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"Symbol\"</code></th>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n    </tr>\n    <tr>\n      <th scope=\"row\"><code>\"SymbolLock\"</code></th>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n      <td>❌ <em>未対応</em></td>\n    </tr>\n  </tbody>\n</table>\n<ul>\n  <li>その他のプラットフォームでは、 \"Alt\", \"Control\", \"Shift\" に対応する場合があります。</li>\n  <li>すべての修飾子（Gecko がこれを実装した後に定義された <code>\"FnLock\"</code>, <code>\"Hyper\"</code>, <code>\"Super\"</code>, <code>\"Symbol\"</code>）が、Gecko 上の信頼されないイベントに対して常にサポートされます。これはプラットフォームには依存しません。</li>\n</ul>"}},{"type":"prose","value":{"id":"accel_仮想修飾子","title":"<code>\"Accel\"</code> 仮想修飾子","isH3":false,"content":"<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>\"Accel\"</code> 仮想修飾子は、 DOM3 Events 仕様の現在のドラフトでは、事実上<strong>非推奨</strong>とされています。</p>\n</div>\n<p><code>getModifierState()</code> は <code>\"Accel\"</code> という名前の非推奨の仮想修飾子も受け入れます。<code>event.getModifierState(\"Accel\")</code> は <a href=\"/ja/docs/Web/API/KeyboardEvent/ctrlKey\"><code>KeyboardEvent.ctrlKey</code></a> または <a href=\"/ja/docs/Web/API/KeyboardEvent/metaKey\"><code>KeyboardEvent.metaKey</code></a> の少なくともどちらかが <code>true</code> である場合に <code>true</code> を返します。</p>\n<p>\n  古い実装や古い仕様では、ショートカットキーの代表的な修飾キーで修飾されていたときに <code>true</code> を返していました。例えば、 Windows では、 <kbd>Ctrl</kbd> キーを押すと、<code>true</code>を返すことがあります。\n  しかし、 Mac では、 <kbd>⌘ Command</kbd> キーを押すと、 <code>true</code> を返すかもしれません。\n  どの修飾キーで true を返すかは、プラットフォーム、ブラウザー、ユーザーの設定に依存することに注意してください。例えば、 Firefox の場合、 <code>\"ui.key.accelKey\"</code> という設定項目でカスタマイズすることができます。\n</p>","titleAsText":"\"Accel\" 仮想修飾子"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Ignore if following modifier is active.</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fn\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hyper\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OS\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Super\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Win\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* hack for IE */</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Also ignore if two or more modifiers except Shift are active.</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Control\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Alt\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Meta\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Handle shortcut key with standard modifier</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Accel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"c\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Shift\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Handle Accel + Shift + C</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// consume the key event</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"k\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Shift\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Handle Accel + K</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// consume the key event</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Do something different for arrow keys if ScrollLock is locked.</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ScrollLock\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n       event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Scroll\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">/* hack for IE */</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Control\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Alt\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getModifierState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Meta\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowDown\"</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Down\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// hack for IE and old Gecko</span>\n      event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// consume the key event</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowLeft\"</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Left\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// hack for IE and old Gecko</span>\n      <span class=\"token comment\">// Do something different if ScrollLock is locked.</span>\n      event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// consume the key event</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowRight\"</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Right\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// hack for IE and old Gecko</span>\n      <span class=\"token comment\">// Do something different if ScrollLock is locked.</span>\n      event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// consume the key event</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"ArrowUp\"</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"Up\"</span><span class=\"token operator\">:</span> <span class=\"token comment\">// hack for IE and old Gecko</span>\n      <span class=\"token comment\">// Do something different if ScrollLock is locked.</span>\n      event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// consume the key event</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p>\n    <strong>Note:</strong> この例は <code>.getModifierState()</code> を <code>\"Alt\"</code>,\n    <code>\"Control\"</code>, <code>\"Meta\"</code>, <code>\"Shift\"</code> で使用していますが、\n    <code>event.altKey</code>, <code>event.ctrlKey</code>, <code>event.metaKey</code>,\n    <code>event.shiftKey</code> の方がよりお勧めです。\n  </p>\n</div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/uievents/#dom-keyboardevent-getmodifierstate","title":"UI Events"}],"query":"api.KeyboardEvent.getModifierState"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.KeyboardEvent.getModifierState","dataURL":"/ja/docs/Web/API/KeyboardEvent/getModifierState/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li>このメソッドの所属先の <a href=\"/ja/docs/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/MouseEvent/getModifierState\"><code>MouseEvent.getModifierState</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"Internet Explorer での修飾キー","id":"internet_explorer_での修飾キー"},{"text":"Gecko での修飾キー","id":"gecko_での修飾キー"},{"text":"<code>\"Accel\"</code> 仮想修飾子","id":"accel_仮想修飾子"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"KeyboardEvent.getModifierState() メソッドは、指定された修飾キーの現在の状態を返します。修飾キーが有効な場合（すなわち修飾キーが押されているかロックされている場合）は true、そうでなければ false になります。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"KeyboardEvent.getModifierState()","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/keyboardevent/getmodifierstate","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/keyboardevent/getmodifierstate/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/KeyboardEvent","title":"KeyboardEvent"},{"uri":"/ja/docs/Web/API/KeyboardEvent/getModifierState","title":"KeyboardEvent.getModifierState()"}],"pageTitle":"KeyboardEvent.getModifierState() - Web API | MDN","noIndexing":false}}