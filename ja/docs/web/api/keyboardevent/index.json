{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"KeyboardEvent","mdn_url":"/ja/docs/Web/API/KeyboardEvent","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/UI_Events\">UI Events <small>(en-US)</small></a></strong></li><li><strong><a href=\"/ja/docs/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/KeyboardEvent/KeyboardEvent\"><code>KeyboardEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/KeyboardEvent/altKey\"><code>altKey</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/charCode\"><code>charCode</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/code\"><code>code</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/ctrlKey\"><code>ctrlKey</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/isComposing\"><code>isComposing</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/key\"><code>key</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/keyCode\"><code>keyCode</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/keyIdentifier\"><code>keyIdentifier</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/location\"><code>location</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/metaKey\"><code>metaKey</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/repeat\"><code>repeat</code></a></li><li><a href=\"/ja/docs/Web/API/KeyboardEvent/shiftKey\"><code>shiftKey</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/KeyboardEvent/getModifierState\"><code>getModifierState()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>initKeyboardEvent()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>initKeyEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>UI Events に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/CompositionEvent\"><code>CompositionEvent</code></a></li><li><a href=\"/ja/docs/Web/API/FocusEvent\"><code>FocusEvent</code></a></li><li><a href=\"/ja/docs/Web/API/InputEvent\"><code>InputEvent</code></a></li><li><a href=\"/ja/docs/Web/API/MouseEvent\"><code>MouseEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MouseScrollEvent\"><code>MouseScrollEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MutationEvent\"><code>MutationEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/UIEvent\"><code>UIEvent</code></a></li><li><a href=\"/ja/docs/Web/API/WheelEvent\"><code>WheelEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>KeyboardEvent</code></strong> オブジェクトは、キーボードによるユーザーの操作を示します。個々のイベントがユーザーとキーとの間の単一の操作（または修飾キーとの組み合わせ）を表します。イベントの種類 (<a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a>, <a href=\"/ja/docs/Web/API/Element/keypress_event\" title=\"keypress\"><code>keypress</code></a>, <a href=\"/ja/docs/Web/API/Element/keyup_event\" title=\"keyup\"><code>keyup</code></a>) はキーボード操作が発生した種類を識別します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>KeyboardEvent</code> は、単にユーザーがキーボードのキーで行った操作が何であるかを低水準で示すものであり、その操作のその場面における意味は持ちません。テキストの入力を処理したい場合は、代わりに <a href=\"/ja/docs/Web/API/HTMLElement/input_event\" title=\"input\"><code>input</code></a> イベントを使用してください。ユーザーが他の種類のテキスト入力、例えば、タブレット端末やタブレット機器による手書き入力システムなどを使用している場合、キーボードイベントが発生することはありません。</p>\n</div><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/ja/docs/Web/API/Event\">\n    <rect x=\"0\" y=\"0\" width=\"75\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"37.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      Event\n    </text>\n  </a>\n  <line x1=\"75\" y1=\"14\" x2=\"105\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"75,14 85,9 85,19 75,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/ja/docs/Web/API/UIEvent\">\n    <rect x=\"105\" y=\"0\" width=\"75\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"142.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      UIEvent\n    </text>\n  </a>\n  <line x1=\"180\" y1=\"14\" x2=\"210\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"180,14 190,9 190,19 180,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/ja/docs/Web/API/KeyboardEvent\" aria-current=\"page\">\n    <rect x=\"210\" y=\"0\" width=\"104\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"262\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      KeyboardEvent\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"コンストラクター","title":"コンストラクター","isH3":false,"content":"<dl>\n  <dt id=\"keyboardevent\"><a href=\"/ja/docs/Web/API/KeyboardEvent/KeyboardEvent\" title=\"KeyboardEvent()\"><code>KeyboardEvent()</code></a></dt>\n  <dd>\n    <p><code>KeyboardEvent</code> オブジェクトを生成します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"定数","title":"定数","isH3":false,"content":"<p><code>KeyboardEvent</code> インターフェースは、以下の定数を定義しています。</p>"}},{"type":"prose","value":{"id":"キーボード上の位置","title":"キーボード上の位置","isH3":true,"content":"<p>以下の定数は、キーイベントがキーボードのどの部分から発生したかを識別します。これらは、<code>KeyboardEvent.DOM_KEY_LOCATION_STANDARD</code> などとしてアクセスされます。</p>\n<table class=\"standard-table\">\n  <caption>キーボード上の位置の識別子</caption>\n  <thead>\n    <tr>\n      <th scope=\"col\">定数</th>\n      <th scope=\"col\">値</th>\n      <th scope=\"col\">説明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>DOM_KEY_LOCATION_STANDARD</code></td>\n      <td>0x00</td>\n      <td>\n        <p>このイベントによって記述されたキーは、キーボードの特定の範囲にあるものではないことを表します。テンキー上にあるわけでもなく（NumLock キーでない限り）、キーボードの左右で重複しているキーについては、何らかの理由でその位置と関連付けないことになっています。</p>\n        <p>例としては、標準的な PC 101 US キーボードの英数字キー、 NumLock キー、スペースバーなどがあります。</p>\n      </td>\n    </tr>\n    <tr>\n      <td><code>DOM_KEY_LOCATION_LEFT</code></td>\n      <td>0x01</td>\n      <td>\n        <p>このキーは、キーボード上の複数の位置に存在する可能性があるものであり、この場合は、キーボードの左側にあるものです。</p>\n        <p>例としては、左の Ctrl キー、 Macintosh キーボードの左の Command キー、左の Shift キーなどがあります。</p>\n      </td>\n    </tr>\n    <tr>\n      <td><code>DOM_KEY_LOCATION_RIGHT</code></td>\n      <td>0x02</td>\n      <td>\n        <p>このキーは、キーボード上の複数の位置に存在する可能性があるものであり、この場合は、キーボードの右側にあるものです。</p>\n        <p>例としては、右の Shift キーや右の Alt キー（Mac キーボードの Option キー）などがあります。</p>\n      </td>\n    </tr>\n    <tr>\n      <td><code>DOM_KEY_LOCATION_NUMPAD</code></td>\n      <td>0x03</td>\n      <td>\n        <p>このキーは、テンキー上に配置されているか、キーが複数の場所から発信される場合は、テンキーに関連付けられた仮想キーとなります。 NumLock キーはこのグループには該当せず、常に位置を <code>DOM_KEY_LOCATION_STANDARD</code> として符号化されます。</p>\n        <p>例としては、テンキーの数字、テンキー側の Enter キー、テンキー側の小数点などがあります。</p>\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"プロパティ","title":"プロパティ","isH3":false,"content":"<p><em>このインターフェイスには、親である <a href=\"/ja/docs/Web/API/UIEvent\"><code>UIEvent</code></a> および <a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a> から継承したプロパティもあります。</em></p>\n<dl>\n  <dt id=\"keyboardevent.altkey\"><a href=\"/ja/docs/Web/API/KeyboardEvent/altKey\"><code>KeyboardEvent.altKey</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>論理値で、このキーイベントが発生した際に <kbd>Alt</kbd> （macOS の場合は <kbd>Option</kbd> または <kbd>⌥</kbd>）キーが押されていれば <code>true</code> を返します。</p>\n  </dd>\n  <dt id=\"keyboardevent.code\"><a href=\"/ja/docs/Web/API/KeyboardEvent/code\"><code>KeyboardEvent.code</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>文字列で、このイベントが表す物理キーのコード値を返します。</p>\n    <div class=\"notecard warning\" id=\"sect2\">\n      <p><strong>Warning:</strong> これはユーザーのキーボードレイアウトを無視します。つまり、ユーザーが QWERTY キーボードレイアウトの \"Y\" の位置（ホーム行の上の行の中央付近）でキーを押した場合、ユーザーが QWERTZ キーボード（これはユーザーが \"Z\" を期待し、他のすべてのプロパティが \"Z\" を示すことになる）または Dvorak キーボードレイアウト（これはユーザーが \"F\" を期待する）であっても、常に \"KeyY\" を返します。ユーザーに正しいキーストロークを表示したい場合は、 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/Keyboard/getLayoutMap\"><code>Keyboard.getLayoutMap()</code> <small>(en-US)</small></a> を使用してください。</p>\n    </div>\n  </dd>\n  <dt id=\"keyboardevent.ctrlkey\"><a href=\"/ja/docs/Web/API/KeyboardEvent/ctrlKey\"><code>KeyboardEvent.ctrlKey</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>論理値で、そのキーイベントが発生した際に <kbd>Ctrl</kbd> キーが押されていれば <code>true</code> を返します。</p>\n  </dd>\n  <dt id=\"keyboardevent.iscomposing\"><a href=\"/ja/docs/Web/API/KeyboardEvent/isComposing\"><code>KeyboardEvent.isComposing</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>論理値で、このイベントが <code>compositionstart</code> と <code>compositionend</code> の間に発生したものであれば <code>true</code> を返します。</p>\n  </dd>\n  <dt id=\"keyboardevent.key\"><a href=\"/ja/docs/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>文字列で、このイベントが表すキーのキー値を表します。</p>\n  </dd>\n  <dt id=\"keyboardevent.locale\"><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>KeyboardEvent.locale</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>文字列で、キーボードに設定されているロケールを示すロケール文字列を返します。ブラウザーや端末がキーボードのロケールを知らない場合は空文字列となります。</p>\n    <div class=\"notecard note\" id=\"sect3\">\n      <p><strong>Note:</strong> このプロパティは入力データのロケールを表すわけではありません。例えば、ユーザーが使用するキーボードレイアウトと入力テキストとで言語が異なる場合があります。</p>\n    </div>\n  </dd>\n  <dt id=\"keyboardevent.location\"><a href=\"/ja/docs/Web/API/KeyboardEvent/location\"><code>KeyboardEvent.location</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>数値で、キーボードなどの入力機器上のキーの位置を表す値を返します。位置を特定する定数の一覧は、上記の<a href=\"#%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89%E4%B8%8A%E3%81%AE%E4%BD%8D%E7%BD%AE\">キーボード上の位置</a>にあります。</p>\n  </dd>\n  <dt id=\"keyboardevent.metakey\"><a href=\"/ja/docs/Web/API/KeyboardEvent/metaKey\"><code>KeyboardEvent.metaKey</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>論理値で、このキーイベントが発生した際に <kbd>Meta</kbd> キー（Mac キーボードでは <kbd>⌘ Command</kbd> キー、 Windows キーボードでは Windows キー (<kbd>⊞</kbd>)）が押されていれば <code>true</code> を返します。</p>\n  </dd>\n  <dt id=\"keyboardevent.repeat\"><a href=\"/ja/docs/Web/API/KeyboardEvent/repeat\"><code>KeyboardEvent.repeat</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>論理値で、このキーが押し続けられて自動リピートしている場合に <code>true</code> を返します。</p>\n  </dd>\n  <dt id=\"keyboardevent.shiftkey\"><a href=\"/ja/docs/Web/API/KeyboardEvent/shiftKey\"><code>KeyboardEvent.shiftKey</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>論理値で、このキーイベントが発生した際に <kbd>Shift</kbd> キーが押されていれば <code>true</code> を返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":"<p><em>このインターフェイスには、親である <a href=\"/ja/docs/Web/API/UIEvent\"><code>UIEvent</code></a> および <a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a> から継承したメソッドもあります。</em></p>\n<dl>\n  <dt id=\"keyboardevent.getmodifierstate\"><a href=\"/ja/docs/Web/API/KeyboardEvent/getModifierState\"><code>KeyboardEvent.getModifierState()</code></a></dt>\n  <dd>\n    <p>そのイベントが発生した際に修飾キー (<kbd>Alt</kbd> / <kbd>Shift</kbd> / <kbd>Ctrl</kbd> / <kbd>Meta</kbd>) が押されていたかどうかを表す論理値を返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"廃止されたメソッド","title":"廃止されたメソッド","isH3":false,"content":"<dl>\n  <dt id=\"keyboardevent.initkeyevent\"><a href=\"/ja/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>KeyboardEvent.initKeyEvent()</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p><code>KeyboardEvent</code> オブジェクトを初期化します。これは Firefox でのみ実装されていたものですが、もう Firefox でも対応していません。代わりに <a href=\"/ja/docs/Web/API/KeyboardEvent/KeyboardEvent\" title=\"KeyboardEvent()\"><code>KeyboardEvent()</code></a> コンストラクターを使用してください。</p>\n  </dd>\n  <dt id=\"keyboardevent.initkeyboardevent\"><a href=\"/ja/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>KeyboardEvent.initKeyboardEvent()</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p><code>KeyboardEvent</code> オブジェクトを初期化します。これは非推奨になりました。代わりに <a href=\"/ja/docs/Web/API/KeyboardEvent/KeyboardEvent\" title=\"KeyboardEvent()\"><code>KeyboardEvent()</code></a> コンストラクターを使用してください。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"廃止されたプロパティ","title":"廃止されたプロパティ","isH3":false,"content":"<dl>\n  <dt id=\"keyboardevent.char\"><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>KeyboardEvent.char</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>このキーの文字値を表す文字列を返します。キーが表示可能な文字に対応している場合、この値はその文字を含む空でない Unicode 文字列となります。キーが表示可能な表現を持たない場合は、これは空文字列です。</p>\n    <div class=\"notecard note\" id=\"sect4\">\n      <p><strong>Note:</strong> キーが複数の文字を挿入するマクロとして使用されている場合、この属性の値は最初の文字だけでなく文字列全体となります。</p>\n    </div>\n  </dd>\n  <dt id=\"keyboardevent.charcode\"><a href=\"/ja/docs/Web/API/KeyboardEvent/charCode\"><code>KeyboardEvent.charCode</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>このキーの Unicode 参照番号を表す数値を返します。この属性は、<code>keypress</code> イベントでのみ使用されます。 <code>char</code> 属性が複数の文字を含むキーの場合、これはその属性の最初の文字の Unicode 値となります。Firefox 26 では、これは表示可能な文字のコードを返します。</p>\n    <div class=\"notecard warning\" id=\"sect5\">\n      <p><strong>Warning:</strong> この属性は非推奨です。可能であれば、代わりに <a href=\"/ja/docs/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code></a> を使用してください。</p>\n    </div>\n  </dd>\n  <dt id=\"keyboardevent.keycode\"><a href=\"/ja/docs/Web/API/KeyboardEvent/keyCode\"><code>KeyboardEvent.keyCode</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>押されたキーの修飾されていない値を示す、 システムや実装に依存した数値コードを数値で返します。</p>\n    <div class=\"notecard warning\" id=\"sect6\">\n      <p><strong>Warning:</strong> この属性は非推奨です。可能であれば、代わりに <a href=\"/ja/docs/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code></a> を使用してください。</p>\n    </div>\n  </dd>\n  <dt id=\"keyboardevent.keyidentifier\"><a href=\"/ja/docs/Web/API/KeyboardEvent/keyIdentifier\"><code>KeyboardEvent.keyIdentifier</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>このプロパティは標準外であり、<a href=\"/ja/docs/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code></a> に置き換えられ非推奨になりました。これは DOM Level 3 Events の古い版に含まれていました。</p>\n  </dd>\n  <dt id=\"keyboardevent.keylocation\"><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>KeyboardEvent.keyLocation</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>これは <a href=\"/ja/docs/Web/API/KeyboardEvent/location\"><code>KeyboardEvent.location</code></a> の標準外で非推奨の別名です。これは DOM Level 3 Events の古い版に含まれていました。</p>\n  </dd>\n  <dt id=\"keyboardevent.which_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/UIEvent/which\"><code>KeyboardEvent.which</code> <small>(en-US)</small></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>押されたキーの修飾されていない値を示す、 システムや実装に依存した数値コードを数値で返します。これは通常 <code>keyCode</code> と同じです。</p>\n    <div class=\"notecard warning\" id=\"sect7\">\n      <p><strong>Warning:</strong> この属性は非推奨です。可能であれば、代わりに <a href=\"/ja/docs/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code></a> を使用してください。</p>\n    </div>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"イベント","title":"イベント","isH3":false,"content":"<p>以下のイベントは <code>KeyboardEvent</code> 型に基づいています。これらのイベントは <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>GlobalEventHandlers</code></a> を実装している任意のオブジェクト、たとえば <a href=\"/ja/docs/Web/API/Element\"><code>Element</code></a>、<a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a>、<a href=\"/ja/docs/Web/API/Window\"><code>Window</code></a> に配信することができます。以下のリストでは、各イベントは、そのイベントの <code>Element</code> のハンドラーのドキュメントにリンクしおり、これは一般的にすべての宛先に適用されます。</p>\n<dl>\n  <dt id=\"keydown\"><a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a></dt>\n  <dd>\n    <p>キーが押されました。</p>\n  </dd>\n  <dt id=\"keyup\"><a href=\"/ja/docs/Web/API/Element/keyup_event\" title=\"keyup\"><code>keyup</code></a></dt>\n  <dd>\n    <p>キーが離されました。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"廃止されたイベント","title":"廃止されたイベント","isH3":true,"content":"<dl>\n  <dt id=\"keypress\"><a href=\"/ja/docs/Web/API/Element/keypress_event\" title=\"keypress\"><code>keypress</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>通常は文字値を生成するキーが押されました。このイベントは端末への依存度が高いため、廃止されました。使用すべきではありません。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"使用上の注意","title":"使用上の注意","isH3":false,"content":"<p>イベントには <a href=\"/ja/docs/Web/API/Element/keydown_event\" title=\"keydown\"><code>keydown</code></a>, <a href=\"/ja/docs/Web/API/Element/keypress_event\" title=\"keypress\"><code>keypress</code></a>, <a href=\"/ja/docs/Web/API/Element/keyup_event\" title=\"keyup\"><code>keyup</code></a> の 3 種類があります。 Gecko ではほとんどのキーにおいて、以下のようにキーイベントが連続して発生します。</p>\n<ol>\n  <li>そのキーが最初に押された時点で <code>keydown</code> イベントが発生します。</li>\n  <li>そのキーが修飾キーでなかった場合、 <code>keypress</code> イベントが発生します。</li>\n  <li>ユーザーがキーから指を離した時点で <code>keyup</code> イベントが発生します。</li>\n</ol>"}},{"type":"prose","value":{"id":"特殊な場合","title":"特殊な場合","isH3":true,"content":"<p>Caps Lock や Num Lock、 Scroll Lock などのキーは LED 表示も切り替わります。 Windows と Linux では、このようなキーは <code>keydown</code> と <code>keyup</code> イベントのみが発生します。</p>\n<div class=\"notecard note\" id=\"sect8\">\n  <p><strong>Note:</strong> Linux の Firefox 12 以前では <code>keypress</code> イベントも発生していました。</p>\n</div>\n<p>しかし Mac OS X のイベントモデルに関する制約から、Mac OS X の Caps Lock は <code>keydown</code> イベントのみが発生します。（2007 年モデル以前の）ノート型では Num Lock にも対応していましたが、今日の Mac OS X では外部キーボードにおいても Num Lock に対応していません。 Num Lock キーがある古い MacBook 上では、Num Lock キーによってイベントは何も発生しません。また、 F14 キーが接続されている外部キーボードであれば、 Gecko は Scroll Lock に対応しています。古い特定のバージョンの Firefox では、このキーによって <code>keypress</code> イベントが発生していました。この矛盾する挙動は <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=602812\" class=\"external\" rel=\" noopener\">バグ&nbsp;602812</a> で修正されました。</p>"}},{"type":"prose","value":{"id":"自動リピートの扱い","title":"自動リピートの扱い","isH3":true,"content":"<p>キーが押されたままになると自動リピートが始まります。これによって以下のようにイベントが連続して発生します。</p>\n<ol>\n  <li><code>keydown</code></li>\n  <li><code>keypress</code></li>\n  <li><code>keydown</code></li>\n  <li><code>keypress</code></li>\n  <li>&lt;&lt;ユーザーがキーから指を離すまで繰り返し&gt;&gt;</li>\n  <li><code>keyup</code></li>\n</ol>\n<p>この流れは DOM Level 3 仕様書に定義されているものです。しかし、これには以下のような注意点があります。</p>\n<h4 id=\"ubuntu_9.4_など一部の_gtk_環境における自動リピート\">Ubuntu 9.4 など一部の GTK 環境における自動リピート</h4>\n<p>GTK を用いた環境の中には、自動リピート時にネイティブの key-up イベントが発生するものがあります。このため、キーが連続して押されているのか自動リピートなのかを Gecko 側から認識することはできません。そのようなプラットフォームでの自動リピート時では、以下のようにキーイベントが連続して発生します。</p>\n<ol>\n  <li><code>keydown</code></li>\n  <li><code>keypress</code></li>\n  <li><code>keyup</code></li>\n  <li><code>keydown</code></li>\n  <li><code>keypress</code></li>\n  <li><code>keyup</code></li>\n  <li>&lt;&lt;ユーザーがキーから指を離すまで繰り返し&gt;&gt;</li>\n  <li><code>keyup</code></li>\n</ol>\n<p>こういった環境では残念ながら、自動リピートなのか連打されただけなのかをウェブコンテンツ側から区別することはできません。</p>\n<h4 id=\"gecko_5.0_以前の自動リピートの扱い\">Gecko 5.0 以前の自動リピートの扱い</h4>\n<p>Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2) 以前では、プラットフォーム間でキーボードのイベントの扱いに差異が生じていました。</p>\n<dl>\n  <dt id=\"windows\">Windows</dt>\n  <dd>\n    <p>自動リピートの挙動に関して Gecko 4.0 とそれ以降で変化はありません。</p>\n  </dd>\n  <dt id=\"mac\">Mac</dt>\n  <dd>\n    <p>最初に keydown イベントが発生した後、 keyup イベントが発生するまでは keypress イベントのみが発生します。断続的に keydown イベントが発生することはありません。</p>\n  </dd>\n  <dt id=\"linux\">Linux</dt>\n  <dd>\n    <p>イベントの挙動はプラットフォームによって異なります。ネイティブのイベントモデルによって、 Windows のような挙動を示したり、 Mac のような挙動を示すものがあります。</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect9\">\n  <p><strong>Note:</strong> 手動でイベントを発生させても、関連する既定のアクションは<em>生じません</em>。例えば、手動でキーイベントを発生させても、その文字がテキストとして入力されることはありません。このような UI イベントの挙動は、セキュリティを意識して設計されています。この設計により、ブラウザーとやり取りするユーザー操作をスクリプトが模倣できないようにしています。</p>\n</div>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keydown'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> keyName <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>keyName <span class=\"token operator\">===</span> <span class=\"token string\">'Control'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do not alert when only Control key is pressed.</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>ctrlKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Even though event.key is not 'Control' (e.g., 'a' is pressed),</span>\n    <span class=\"token comment\">// event.ctrlKey may be true if Ctrl key is pressed at the same time.</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Combination of ctrlKey + </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>keyName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Key pressed </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>keyName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> keyName <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// As the user releases the Ctrl key, the key is no longer active,</span>\n  <span class=\"token comment\">// so event.ctrlKey is false.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>keyName <span class=\"token operator\">===</span> <span class=\"token string\">'Control'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Control key was released'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/uievents/#interface-keyboardevent","title":"UI Events"}],"query":"api.KeyboardEvent"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>KeyboardEvent</code> インターフェイスの草案は数多く提案されてきました。まず最初は DOM Events Level 2 でしたが意見がまとまらず破棄され、続いて DOM Events Level 3 が提案されました。これにより、標準外な初期化メソッドが実装されてしまいました (Gecko では DOM Events Level 2 の初期に定義されていた <a href=\"/ja/docs/Web/API/KeyboardEvent/initKeyEvent\"><code>KeyboardEvent.initKeyEvent()</code></a> が、他のブラウザーでは DOM Events Level 3 の初期に定義されていた <a href=\"/ja/docs/Web/API/KeyboardEvent/initKeyboardEvent\"><code>KeyboardEvent.initKeyboardEvent()</code></a> です)。しかし両者のメソッドは、現代的なコンストラクターである <a href=\"/ja/docs/Web/API/KeyboardEvent/KeyboardEvent\" title=\"KeyboardEvent()\"><code>KeyboardEvent()</code></a> で置き換えられてました。</p>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.KeyboardEvent","dataURL":"/ja/docs/Web/API/KeyboardEvent/bcd.json"}},{"type":"prose","value":{"id":"互換性のメモ","title":"互換性のメモ","isH3":true,"content":"<ul>\n  <li>Firefox 65 では、 <code>keypress</code> イベントは<a href=\"/ja/docs/Web/API/KeyboardEvent/keyCode#non-printable_keys_(function_keys)\">表示可能でないキー</a>では発生しなくなりました（<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=968056\" class=\"external\" rel=\" noopener\">バグ&nbsp;968056</a>）が、 <kbd>Enter</kbd> キー、 <kbd>Shift</kbd> + <kbd>Enter</kbd> キー、 <kbd>Ctrl</kbd> + <kbd>Enter</kbd> キーの組み合わせでは発生します (これらはブラウザー間の互換性の目的のために維持されています)。</li>\n</ul>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/KeyboardEvent/code\"><code>KeyboardEvent.code</code></a>.</li>\n  <li><a href=\"/ja/docs/Web/API/KeyboardEvent/key\"><code>KeyboardEvent.key</code></a>.</li>\n  <li><a href=\"/ja/docs/Web/API/KeyboardEvent/getModifierState\"><code>KeyboardEvent.getModifierState()</code></a></li>\n</ul>"}}],"toc":[{"text":"コンストラクター","id":"コンストラクター"},{"text":"定数","id":"定数"},{"text":"プロパティ","id":"プロパティ"},{"text":"メソッド","id":"メソッド"},{"text":"廃止されたメソッド","id":"廃止されたメソッド"},{"text":"廃止されたプロパティ","id":"廃止されたプロパティ"},{"text":"イベント","id":"イベント"},{"text":"使用上の注意","id":"使用上の注意"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"KeyboardEvent オブジェクトは、キーボードによるユーザーの操作を示します。個々のイベントがユーザーとキーとの間の単一の操作（または修飾キーとの組み合わせ）を表します。イベントの種類 (keydown, keypress, keyup) はキーボード操作が発生した種類を識別します。","popularity":0.0007,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"KeyboardEvent","locale":"en-US","native":"English (US)"},{"title":"KeyboardEvent","locale":"es","native":"Español"},{"title":"KeyboardEvent","locale":"fr","native":"Français"},{"title":"KeyboardEvent","locale":"ko","native":"한국어"},{"title":"KeyboardEvent","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"KeyboardEvent","locale":"ru","native":"Русский"},{"title":"KeyboardEvent","locale":"zh-CN","native":"中文 (简体)"},{"title":"KeyboardEvent","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/keyboardevent","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/keyboardevent/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/KeyboardEvent","title":"KeyboardEvent"}],"pageTitle":"KeyboardEvent - Web API | MDN","noIndexing":false}}