{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Clipboard.read()","mdn_url":"/ja/docs/Web/API/Clipboard/read","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Clipboard_API\">Clipboard API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/Clipboard\"><code>Clipboard</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><em><code>read()</code></em></li><li><a href=\"/ja/docs/Web/API/Clipboard/readText\"><code>readText()</code></a></li><li><a href=\"/ja/docs/Web/API/Clipboard/write\"><code>write()</code></a></li><li><a href=\"/ja/docs/Web/API/Clipboard/writeText\"><code>writeText()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Clipboard API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/ClipboardEvent\"><code>ClipboardEvent</code></a></li><li><a href=\"/ja/docs/Web/API/ClipboardItem\"><code>ClipboardItem</code></a></li><li><a href=\"/ja/docs/Web/API/Navigator/clipboard\"><code>Navigator.clipboard</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>read()</code></strong> は <a href=\"/ja/docs/Web/API/Clipboard\"><code>Clipboard</code></a> インターフェイスのメソッドで、クリップボードの内容のコピーを要求し、返されたプロミス (<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>) が解決されるとそのデータを取得できます。 <a href=\"/ja/docs/Web/API/Clipboard/readText\" title=\"readText()\"><code>readText()</code></a> とは異なり、 <code>read()</code> メソッドは画像など任意のデータを取得することができます。</p>\n<p>クリップボードから読み込みを行うためには、まず <code>\"clipboard-read\"</code> 権限を取得する必要があります。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 非同期のクリップボード API と<a href=\"/ja/docs/Web/API/Permissions_API\">権限 API</a> は、ほとんどのブラウザーでは組み込み途中の状態です。そのため、権限などが公式仕様とは異なっていることがよくあります。これらのメソッドを使う前に<a href=\"#%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%83%BC%E3%81%AE%E4%BA%92%E6%8F%9B%E6%80%A7\">互換性一覧表</a>を確認してください。</p>\n</div>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<p>なし。</p>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>クリップボードの内容を保持する <a href=\"/ja/docs/Web/API/ClipboardItem\"><code>ClipboardItem</code></a> の配列に解決されるプロミス (<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>)。クリップボードへのアクセスが許可されない場合、このプロミスは拒否されます。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"画像データの読み取り","title":"画像データの読み取り","isH3":true,"content":"<p>この例では <code>read()</code> を使用して、画像データをクリップボードから読み取ります。</p>\n<p>左側の蝶の画像をコンテキストメニューの「画像のコピー」でコピーし、右側の空の枠内をクリックしてみてください。</p>\n<p>この例では、クリップボードの読み取りを確認または許可して、画像データを取得し、空のフレームに画像データを表示します。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 現時点では、Firefoxは <code>read()</code> を実装していますが、 <code>\"clipboard-read\"</code> 権限を認識しないため、<a href=\"/ja/docs/Web/API/Permissions_API\">権限 API</a> を使ってアクセス管理をしようとしてもうまくいきません。</p>\n</div>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>source<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>butterfly.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>A butterfly<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>destination<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"css\">CSS</h4>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 1rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> destinationImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#destination'</span><span class=\"token punctuation\">)</span>\ndestinationImage<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> pasteImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">pasteImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> permission <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>permissions<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'clipboard-read'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>permission<span class=\"token punctuation\">.</span>state <span class=\"token operator\">===</span> <span class=\"token string\">'denied'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Not allowed to read clipboard.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> clipboardContents <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> clipboardContents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>item<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Clipboard contains non-image data.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> item<span class=\"token punctuation\">.</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      destinationImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"結果\">結果</h4><iframe class=\"sample-code-frame\" title=\"画像データの読み取り\" id=\"frame_reading_image_data\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Clipboard/read/_sample_.reading_image_data.html\" loading=\"lazy\"></iframe>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/clipboard-apis/#dom-clipboard-read","title":"Clipboard API and events"}],"query":"api.Clipboard.read"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.Clipboard.read","dataURL":"/ja/docs/Web/API/Clipboard/read/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Clipboard_API\">クリップボード API</a></li>\n  <li><a href=\"https://async-clipboard-api.glitch.me/\" class=\"external\" rel=\" noopener\">Async Clipboard API demo on Glitch</a></li>\n  <li><a href=\"https://web.dev/async-clipboard/\" class=\"external\" rel=\" noopener\">Image support for Async Clipboard article</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"read() は Clipboard インターフェイスのメソッドで、クリップボードの内容のコピーを要求し、返されたプロミス (Promise) が解決されるとそのデータを取得できます。 readText() とは異なり、 read() メソッドは画像など任意のデータを取得することができます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Clipboard.read()","locale":"en-US","native":"English (US)"},{"title":"Clipboard.read()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/clipboard/read","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/clipboard/read/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Clipboard","title":"Clipboard"},{"uri":"/ja/docs/Web/API/Clipboard/read","title":"Clipboard.read()"}],"pageTitle":"Clipboard.read() - Web API | MDN","noIndexing":false}}