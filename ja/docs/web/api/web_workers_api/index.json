{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ウェブワーカー API","mdn_url":"/ja/docs/Web/API/Web_Workers_API","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Web_Workers_API\">Web Workers API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/Web_Workers_API/Using_web_workers\">Using Web Workers</a></li><li><a href=\"/ja/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\">Functions and classes available to Web Workers</a></li><li><a href=\"/ja/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">The structured clone algorithm</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></li><li><a href=\"/ja/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/Worker\"><code>Worker</code></a></li><li><a href=\"/ja/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code></a></li><li><a href=\"/ja/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>ウェブワーカー</strong> (Web Worker) とは、ウェブアプリケーションにおけるスクリプトの処理をメインとは別のスレッドに移し、バックグラウンドでの実行を可能にする仕組みのことです。時間のかかる処理を別のスレッドに移すことが出来るため、 UI を担当するメインスレッドの処理を中断・遅延させずに実行できるという利点があります。</p>"}},{"type":"prose","value":{"id":"ウェブワーカーの概念と使い方","title":"ウェブワーカーの概念と使い方","isH3":false,"content":"<p>ワーカーオブジェクトはコンストラクター（<a href=\"/ja/docs/Web/API/Worker/Worker\" title=\"Worker()\"><code>Worker()</code></a> など）を用いて生成され、名前を持つ JavaScript ファイルを実行します。このファイルにはワーカースレッドで実行されるコードが書かれています。</p>\n<p>ワーカースレッドの中では、 <a href=\"/ja/docs/Web/JavaScript\">JavaScript</a> の標準の一連の関数（<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a>、など）に加え、任意のコードのほとんどを実行することができます。いくつかの例外があります。例えば、ワーカー内から直接 DOM を操作することはできません。また、 <a href=\"/ja/docs/Web/API/Window\"><code>window</code></a> オブジェクトの既定のメソッドやプロパティには使用できないものがあります。実行できるコードについては、以下の<a href=\"#%E3%83%AF%E3%83%BC%E3%82%AB%E3%83%BC%E3%82%B0%E3%83%AD%E3%83%BC%E3%83%90%E3%83%AB%E3%82%B3%E3%83%B3%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%81%A8%E9%96%A2%E6%95%B0\">ワーカーグローバルコンテキストと関数</a>や<a href=\"#%E5%88%A9%E7%94%A8%E5%8F%AF%E8%83%BD%E3%81%AA_web_api\">利用可能な Web API</a> を参照してください。</p>\n<p>ワーカーとメインスレッドとの間では、メッセージのシステムを通してデータがやり取りされます。両者は <code>postMessage()</code> メソッドを使ってメッセージを送信したり、受け取ったメッセージには <code>onmessage</code> イベントハンドラーで返信したりします（メッセージは<a href=\"/ja/docs/Web/API/Worker/message_event\" title=\"メッセージ\"><code>メッセージ</code></a>イベントの <code>data</code> 属性に格納されます）。なお、データは共有されるのではなく複製されます。</p>\n<p>ワーカーが親ページと同じ<a href=\"/ja/docs/Glossary/Origin\">オリジン</a>内でホスティングされるのであれば、新しいワーカーをいくつも起動することができます。また、ワーカーはネットワーク I/O において <a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> を使用しますが、 <code>XMLHttpRequest</code> における <code>responseXML</code> および <code>channel</code> 属性は必ず <code>null</code> を返す点が通常と異なります。</p>"}},{"type":"prose","value":{"id":"ワーカーの種類","title":"ワーカーの種類","isH3":true,"content":"<p>ワーカーにはいくつもの種類があります。</p>\n<ul>\n  <li>専用ワーカー (dedicated worker) は、単一のスクリプトで利用されるワーカーです。このコンテキストは <a href=\"/ja/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a> オブジェクトで表現されます。</li>\n  <li><a href=\"/ja/docs/Web/API/SharedWorker\" title=\"共有ワーカー\">共有ワーカー</a> (shared worker) は、ワーカーと同じドメイン内にある限り、異なるウィンドウや iframe などで動作する複数のスクリプトで利用できるワーカーです。専用ワーカーよりも少し複雑で、スクリプトはアクティブなポートを介して通信する必要があります。</li>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー</a>は、基本的に複数のウェブアプリケーション間やブラウザー、（利用可能なら）ネットワークの間でプロキシーサーバーとして動くものです。他にも、効果的なオフライン操作を実現したり、ネットワークリクエストを遮断してネットワークが利用できるかどうかで適切なアクションを取ったり、サーバーにある資産を更新したりすることなどを目的としています。また、プッシュ通知やバックグラウンド同期APIへのアクセスも可能になる予定です。</li>\n</ul>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <a href=\"https://html.spec.whatwg.org/multipage/workers.html#runtime-script-errors-2\" class=\"external\" rel=\" noopener\">Web workers 仕様書</a>によれば、ワーカーのエラーイベントはバブリングすべきではありません（<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1188141\" class=\"external\" rel=\" noopener\">バグ&nbsp;1188141</a> を参照。これは Firefox 42 で実装されました）。</p>\n</div>"}},{"type":"prose","value":{"id":"ワーカーグローバルコンテキストと関数","title":"ワーカーグローバルコンテキストと関数","isH3":true,"content":"<p>ワーカーは現在の <a href=\"/ja/docs/Web/API/Window\"><code>window</code></a> とは異なるグローバルなコンテキストで実行されます。 <a href=\"/ja/docs/Web/API/Window\"><code>Window</code></a> はワーカーから直接利用できませんが、同じメソッドの多くは共有されるミックスイン (<code>WindowOrWorkerGlobalScope</code>) で定義され、各自の <a href=\"/ja/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> から派生したコンテキストを通じてワーカーが利用できるようにします。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a> （専用ワーカー向け）</li>\n  <li><a href=\"/ja/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a> （共有ワーカー向け）</li>\n  <li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> （<a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー</a>向け）</li>\n</ul>\n<p>すべてのワーカーとメインスレッドで共通の関数（<code>WindowOrWorkerGlobalScope</code> からのもの）には、<a href=\"/ja/docs/Web/API/atob\" title=\"atob()\"><code>atob()</code></a>、<a href=\"/ja/docs/Web/API/btoa\" title=\"btoa()\"><code>btoa()</code></a>、<a href=\"/ja/docs/Web/API/clearInterval\" title=\"clearInterval()\"><code>clearInterval()</code></a>、<a href=\"/ja/docs/Web/API/clearTimeout\"><code>clearTimeout()</code></a>、<a href=\"/ja/docs/Web/API/Window/dump\" title=\"dump()\"><code>dump()</code></a> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg>、<a href=\"/ja/docs/Web/API/setInterval\"><code>setInterval()</code></a>、<a href=\"/ja/docs/Web/API/setTimeout\"><code>setTimeout()</code></a> などがあります。</p>\n<p>以下の関数はワーカーでのみ利用することができます。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/WorkerGlobalScope/importScripts\" title=\"WorkerGlobalScope.importScripts()\"><code>WorkerGlobalScope.importScripts()</code></a> （すべてのワーカー）</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DedicatedWorkerGlobalScope/postMessage\"><code>DedicatedWorkerGlobalScope.postMessage</code> <small>(en-US)</small></a> （専用ワーカーのみ）</li>\n</ul>"}},{"type":"prose","value":{"id":"利用可能な_web_api","title":"利用可能な Web API","isH3":true,"content":"<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 掲載されている API が特定のバージョンのプラットフォームで対応している場合、一般的にウェブワーカーでも利用可能とみなされます。また、 <a href=\"https://worker-playground.glitch.me/\" class=\"external\" rel=\" noopener\">https://worker-playground.glitch.me/</a> を使用して特定のオブジェクト/関数の 対応をテストすることもできます。</p>\n</div>\n<p>ワーカーで利用可能な Web APIは、<a href=\"/ja/docs/Web/API/Barcode_Detection_API\" title=\"バーコード検出 API\">バーコード検出 API</a>、<a href=\"/ja/docs/Web/API/Broadcast_Channel_API\" title=\"放送チャンネル API\">放送チャンネル API</a>、<a href=\"/ja/docs/Web/API/Cache\" title=\"キャッシュ API\">キャッシュ API</a>、<a href=\"/ja/docs/Web/API/Channel_Messaging_API\" title=\"チャンネルメッセージ API\">チャンネルメッセージ API</a>、<a href=\"/ja/docs/Web/API/Console_API\" title=\"コンソール API\">コンソール API</a>, <a href=\"/ja/docs/Web/API/Web_Crypto_API\">ウェブ暗号化 API</a> (<a href=\"/ja/docs/Web/API/Crypto\"><code>Crypto</code></a>)、<a href=\"/ja/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a>、<a href=\"/ja/docs/Web/API/Encoding_API\" title=\"エンコーディング API\">エンコーディング API</a> (<a href=\"/ja/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a>、<a href=\"/ja/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a>、など）、<a href=\"/ja/docs/Web/API/Fetch_API\" title=\"フェッチ API\">フェッチ API</a>、<a href=\"/ja/docs/Web/API/FileReader\"><code>FileReader</code></a>、<a href=\"/ja/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a> （ワーカーでのみ動作）、<a href=\"/ja/docs/Web/API/FormData\"><code>FormData</code></a>、<a href=\"/ja/docs/Web/API/ImageData\"><code>ImageData</code></a>、<a href=\"/ja/docs/Web/API/IndexedDB_API\" title=\"IndexedDB\"><code>IndexedDB</code></a>, <a href=\"/ja/docs/Web/API/Network_Information_API\">ネットワーク情報 API</a>, <a href=\"/ja/docs/Web/API/Notifications_API\" title=\"通知 API\">通知 API</a>、<a href=\"/ja/docs/Web/API/Performance_API\" title=\"パフォーマンス API\">パフォーマンス API</a> （<a href=\"/ja/docs/Web/API/Performance\"><code>Performance</code></a>、<a href=\"/ja/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a>、<a href=\"/ja/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code></a>、<a href=\"/ja/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code></a>、<a href=\"/ja/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a>、<a href=\"/ja/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a>、など)、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>、<a href=\"/ja/docs/Web/API/Server-sent_events\">サーバー送信イベント</a>、<a href=\"/ja/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a>、<a href=\"/ja/docs/Web/API/URL_API\" title=\"URL API\">URL API</a> （<a href=\"/ja/docs/Web/API/URL\"><code>URL</code></a> など)、<a href=\"/ja/docs/Web/API/WebGL_API\">WebGL</a> （<a href=\"/ja/docs/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a> による）、<a href=\"/ja/docs/Web/API/WebSocket\"><code>WebSocket</code></a>、<a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> です。</p>\n<p>ワーカーは他のワーカーを起動することができ、そのために <a href=\"/ja/docs/Web/API/Worker\"><code>Worker</code></a>、<a href=\"/ja/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a>、<a href=\"/ja/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code></a>、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code> <small>(en-US)</small></a> も利用可能です。</p>"}},{"type":"prose","value":{"id":"ウェブワーカーのインターフェイス","title":"ウェブワーカーのインターフェイス","isH3":false,"content":"<dl>\n  <dt id=\"worker\"><a href=\"/ja/docs/Web/API/Worker\"><code>Worker</code></a></dt>\n  <dd>\n    <p>実行しているワーカーのスレッドを表します。実行しているワーカーのコードへメッセージを送る際に用います。</p>\n  </dd>\n  <dt id=\"workerlocation\"><a href=\"/ja/docs/Web/API/WorkerLocation\"><code>WorkerLocation</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/Worker\"><code>Worker</code></a> で実行されるスクリプトの絶対位置を定義します。</p>\n  </dd>\n  <dt id=\"sharedworker\"><a href=\"/ja/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a></dt>\n  <dd>\n    <p>複数の<a href=\"/ja/docs/Glossary/Browsing_context\">閲覧コンテキスト</a>（すなわちウィンドウ、タブ、iframe）や他のワーカーからアクセス可能な特定の種類のワーカーを表します。</p>\n  </dd>\n  <dt id=\"workerglobalscope\"><a href=\"/ja/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></dt>\n  <dd>\n    <p>あらゆるワーカーの一般的なスコープを表します（通常のウェブコンテンツに対して <a href=\"/ja/docs/Web/API/Window\"><code>Window</code></a> が行うのと同じ役割をします）。それぞれの種類のワーカーには、このインターフェイスを継承し、より具体的な機能を追加したスコープオブジェクトがあります。</p>\n  </dd>\n  <dt id=\"dedicatedworkerglobalscope\"><a href=\"/ja/docs/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a></dt>\n  <dd>\n    <p>専用ワーカーのスコープを表します。 <a href=\"/ja/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> を継承しており、独自の機能がいくつか加えられています。</p>\n  </dd>\n  <dt id=\"sharedworkerglobalscope\"><a href=\"/ja/docs/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a></dt>\n  <dd>\n    <p>共有ワーカーのスコープを表します。 <a href=\"/ja/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> を継承しており、独自の機能がいくつか加えられています。</p>\n  </dd>\n  <dt id=\"workernavigator_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WorkerNavigator\"><code>WorkerNavigator</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>ユーザーエージェント（クライアント）に関する識別名と状態を表します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>簡単なデモと基本的な使い方は以下を参照してください。</p>\n<ul>\n  <li><a href=\"https://github.com/mdn/dom-examples/tree/main/web-workers/simple-web-worker\" class=\"external\" rel=\" noopener\">基本的な専用ワーカーの例</a>（<a href=\"https://mdn.github.io/dom-examples/web-workers/simple-web-worker/\" class=\"external\" rel=\" noopener\">専用ワーカーを実行</a>）</li>\n  <li><a href=\"https://github.com/mdn/dom-examples/tree/main/web-workers/simple-shared-worker\" class=\"external\" rel=\" noopener\">基本的な共有ワーカーの例</a>（<a href=\"https://mdn.github.io/dom-examples/web-workers/simple-shared-worker/\" class=\"external\" rel=\" noopener\">共有ワーカーを実行</a>）</li>\n  <li><a href=\"https://github.com/mdn/dom-examples/tree/main/web-workers/offscreen-canvas-worker\" class=\"external\" rel=\" noopener\">OffscreenCanvas ワーカーの例</a>（<a href=\"https://mdn.github.io/dom-examples/web-workers/offscreen-canvas-worker/\" class=\"external\" rel=\" noopener\">OffscreenCanvas ワーカーを実行</a>）</li>\n</ul>\n<p>これらのデモの動く仕組みを詳しく知りたい場合は。<a href=\"/ja/docs/Web/API/Web_Workers_API/Using_web_workers\">ウェブワーカーの使用</a>を参照してください。</p>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/workers.html#workers","title":"HTML Standard"}],"query":"undefined"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Web_Workers_API/Using_web_workers\">ウェブワーカーの使用</a></li>\n  <li><a href=\"/ja/docs/Web/API/Worker\"><code>Worker</code></a> インターフェイス</li>\n  <li><a href=\"/ja/docs/Web/API/SharedWorker\"><code>SharedWorker</code></a> インターフェイス</li>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API\">サービスワーカー API</a></li>\n</ul>"}}],"toc":[{"text":"ウェブワーカーの概念と使い方","id":"ウェブワーカーの概念と使い方"},{"text":"ウェブワーカーのインターフェイス","id":"ウェブワーカーのインターフェイス"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"関連情報","id":"関連情報"}],"summary":"ウェブワーカー (Web Worker) とは、ウェブアプリケーションにおけるスクリプトの処理をメインとは別のスレッドに移し、バックグラウンドでの実行を可能にする仕組みのことです。時間のかかる処理を別のスレッドに移すことが出来るため、 UI を担当するメインスレッドの処理を中断・遅延させずに実行できるという利点があります。","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Web Workers API","locale":"en-US","native":"English (US)"},{"title":"Web Workers API","locale":"es","native":"Español"},{"title":"API Web Workers","locale":"fr","native":"Français"},{"title":"Web Workers API","locale":"ko","native":"한국어"},{"title":"Web Workers API","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Web Workers API","locale":"ru","native":"Русский"},{"title":"Web Workers API","locale":"zh-CN","native":"中文 (简体)"},{"title":"Web Workers API","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/web_workers_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/web_workers_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Web_Workers_API","title":"ウェブワーカー API"}],"pageTitle":"ウェブワーカー API - Web API | MDN","noIndexing":false}}