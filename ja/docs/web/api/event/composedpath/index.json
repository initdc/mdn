{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Event.composedPath()","mdn_url":"/ja/docs/Web/API/Event/composedPath","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/Event/Event\"><code>Event()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Event/bubbles\"><code>bubbles</code></a></li><li><a href=\"/ja/docs/Web/API/Event/cancelable\"><code>cancelable</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/Event/cancelBubble\"><code>cancelBubble</code></a></li><li><a href=\"/ja/docs/Web/API/Event/composed\"><code>composed</code></a></li><li><a href=\"/ja/docs/Web/API/Event/currentTarget\"><code>currentTarget</code></a></li><li><a href=\"/ja/docs/Web/API/Event/defaultPrevented\"><code>defaultPrevented</code></a></li><li><a href=\"/ja/docs/Web/API/Event/eventPhase\"><code>eventPhase</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/API/Event/explicitOriginalTarget\"><code>explicitOriginalTarget</code></a></li><li><a href=\"/ja/docs/Web/API/Event/isTrusted\"><code>isTrusted</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/API/Event/originalTarget\"><code>originalTarget</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/Event/returnValue\"><code>returnValue</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/Event/srcElement\"><code>srcElement</code></a></li><li><a href=\"/ja/docs/Web/API/Event/target\"><code>target</code></a></li><li><a href=\"/ja/docs/Web/API/Event/timeStamp\"><code>timeStamp</code></a></li><li><a href=\"/ja/docs/Web/API/Event/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><em><code>composedPath()</code></em></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/Event/initEvent\"><code>initEvent()</code></a></li><li><a href=\"/ja/docs/Web/API/Event/preventDefault\"><code>preventDefault()</code></a></li><li><a href=\"/ja/docs/Web/API/Event/stopImmediatePropagation\"><code>stopImmediatePropagation()</code></a></li><li><a href=\"/ja/docs/Web/API/Event/stopPropagation\"><code>stopPropagation()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>composedPath()</code></strong> は <a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a> インターフェイスのメソッドで、イベントの経路をリスナーが呼び出されるオブジェクトの配列で返します。シャドウルートが <a href=\"/ja/docs/Web/API/ShadowRoot/mode\"><code>ShadowRoot.mode</code></a> が closed の状態で作成された場合、シャドウツリーのノードは含まれません。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> composed <span class=\"token operator\">=</span> Event<span class=\"token punctuation\">.</span><span class=\"token function\">composedPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<p>なし。</p>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a> オブジェクトの配列で、イベントリスナーが呼び出される予定の一連のオブジェクトを表します。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の例は、 <a href=\"https://mdn.github.io/web-components-examples/composed-composed-path/\" class=\"external\" rel=\" noopener\">https://mdn.github.io/web-components-examples/composed-composed-path/</a> を試すもので、 <code>&lt;open-shadow&gt;</code> と <code>&lt;closed-shadow&gt;</code> という 2 つの些細なカスタム要素を定義しています。どちらも text 属性の内容を <code>&lt;p&gt;</code> 要素のテキストコンテンツとして、要素のシャドウ DOM に挿入します。両者の唯一の違いは、シャドウルートがそれぞれ <code>open</code> と <code>closed</code> に設定された状態で取り付けられることです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>customElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open-shadow'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> HTMLElement <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> pElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      pElem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> shadowRoot <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shadowRoot<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>pElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'closed-shadow'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> HTMLElement <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> pElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      pElem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> shadowRoot <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'closed'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shadowRoot<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>pElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>それからそれぞれの要素を 1 つずつをページに挿入します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>open-shadow</span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>I have an open shadow root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>open-shadow</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>closed-shadow</span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>I have a closed shadow root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>closed-shadow</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>それから click イベントリスナーを <code>&lt;html&gt;</code> 要素に設定します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>composed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">composedPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>まず <code>&lt;open-shadow&gt;</code> 要素をクリックし、次に <code>&lt;closed-shadow&gt;</code> 要素をクリックすると、 2 つのことに気がつきます。第 1 に、 <code>click</code> イベントは常にシャドウの境界を越えて伝搬することができるため、 <code>composed</code> プロパティは <code>true</code> を返します。第 2 に、 2 つの要素の <code>composedPath</code> の値に違いがあります。</p>\n<p><code>&lt;open-shadow&gt;</code> 要素の合成パスは次の通りです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Array <span class=\"token punctuation\">[</span> p<span class=\"token punctuation\">,</span> ShadowRoot<span class=\"token punctuation\">,</span> open<span class=\"token operator\">-</span>shadow<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">,</span> HTMLDocument https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>mdn<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>web<span class=\"token operator\">-</span>components<span class=\"token operator\">-</span>examples<span class=\"token operator\">/</span>composed<span class=\"token operator\">-</span>composed<span class=\"token operator\">-</span>path<span class=\"token operator\">/</span><span class=\"token punctuation\">,</span> Window <span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>それに対して <code>&lt;closed-shadow&gt;</code> 要素の合成パスは次の通りです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Array <span class=\"token punctuation\">[</span> closed<span class=\"token operator\">-</span>shadow<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">,</span> HTMLDocument https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>mdn<span class=\"token punctuation\">.</span>github<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>web<span class=\"token operator\">-</span>components<span class=\"token operator\">-</span>examples<span class=\"token operator\">/</span>composed<span class=\"token operator\">-</span>composed<span class=\"token operator\">-</span>path<span class=\"token operator\">/</span><span class=\"token punctuation\">,</span> Window <span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>2 番目の場合、イベントリスナーは <code>&lt;closed-shadow&gt;</code> 要素自身までしか伝搬せず、シャドウ境界の内側のノードには伝搬しません。</p>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#ref-for-dom-event-composedpath①","title":"DOM Standard"}],"query":"api.Event.composedPath"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.Event.composedPath","dataURL":"/ja/docs/Web/API/Event/composedPath/bcd.json"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"composedPath() は Event インターフェイスのメソッドで、イベントの経路をリスナーが呼び出されるオブジェクトの配列で返します。シャドウルートが ShadowRoot.mode が closed の状態で作成された場合、シャドウツリーのノードは含まれません。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Event.composedPath()","locale":"en-US","native":"English (US)"},{"title":"Event.composedPath()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/event/composedpath","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/event/composedpath/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Event","title":"Event"},{"uri":"/ja/docs/Web/API/Event/composedPath","title":"Event.composedPath()"}],"pageTitle":"Event.composedPath() - Web API | MDN","noIndexing":false}}