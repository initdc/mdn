{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"performance.getEntries()","mdn_url":"/ja/docs/Web/API/Performance/getEntries","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Performance_Timeline\">Performance Timeline</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/Performance\"><code>Performance</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/Performance/navigation\"><code>navigation</code></a></li><li><a href=\"/ja/docs/Web/API/Performance/timeOrigin\"><code>timeOrigin</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/Performance/timing\"><code>timing</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Performance/clearMarks\"><code>clearMarks()</code></a></li><li><a href=\"/ja/docs/Web/API/Performance/clearMeasures\"><code>clearMeasures()</code></a></li><li><a href=\"/ja/docs/Web/API/Performance/clearResourceTimings\"><code>clearResourceTimings()</code></a></li><li><em><code>getEntries()</code></em></li><li><a href=\"/ja/docs/Web/API/Performance/getEntriesByName\"><code>getEntriesByName()</code></a></li><li><a href=\"/ja/docs/Web/API/Performance/getEntriesByType\"><code>getEntriesByType()</code></a></li><li><a href=\"/ja/docs/Web/API/Performance/mark\"><code>mark()</code></a></li><li><a href=\"/ja/docs/Web/API/Performance/measure\"><code>measure()</code></a></li><li><a href=\"/ja/docs/Web/API/Performance/now\"><code>now()</code></a></li><li><a href=\"/ja/docs/Web/API/Performance/setResourceTimingBufferSize\"><code>setResourceTimingBufferSize()</code></a></li><li><a href=\"/ja/docs/Web/API/Performance/toJSON\"><code>toJSON()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/Performance/resourcetimingbufferfull_event\"><code>resourcetimingbufferfull</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Performance Timeline API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/ja/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li><li><a href=\"/ja/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></li><li><a href=\"/ja/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/ja/docs/Web/API/performance_property\"><code>performance_property</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>getEntries()</code></strong> メソッドは、そのページのすべての <a href=\"/ja/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a> オブジェクトのリストを返します。リストのメンバー（エントリー）は、明示的な時点でパフォーマンスマークまたはメジャーを作成することで（たとえば <a href=\"/ja/docs/Web/API/Performance/mark\" title=\"mark()\"><code>mark()</code></a> メソッドを呼び出すことで）作成できます。特定の種類のパフォーマンスエントリーや特定の名前のパフォーマンスエントリーにのみ関心がある場合は、 <a href=\"/ja/docs/Web/API/Performance/getEntriesByType\" title=\"getEntriesByType()\"><code>getEntriesByType()</code></a> と <a href=\"/ja/docs/Web/API/Performance/getEntriesByName\" title=\"getEntriesByName()\"><code>getEntriesByName()</code></a> を参照してください。</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>注:</strong> この機能は <a href=\"/ja/docs/Web/API/Web_Workers_API\">Web Worker</a> 内で利用可能です</p>\n</div>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<p>一般的な構文:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>entries <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<dl>\n  <dt id=\"entries\">entries</dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a> オブジェクトの配列。項目はエントリー '<a href=\"/ja/docs/Web/API/PerformanceEntry/startTime\" title=\"startTime\"><code>startTime</code></a> に基づいて時系列に並んでいます。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">use_PerformanceEntry_methods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PerformanceEntry tests ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>performance<span class=\"token punctuation\">.</span>mark <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... performance.mark Not supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Create some performance entries via the mark() method</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Begin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">do_work</span><span class=\"token punctuation\">(</span><span class=\"token number\">50000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Begin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">do_work</span><span class=\"token punctuation\">(</span><span class=\"token number\">100000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">do_work</span><span class=\"token punctuation\">(</span><span class=\"token number\">200000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  performance<span class=\"token punctuation\">.</span><span class=\"token function\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"End\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Use getEntries() to iterate through the each entry</span>\n  <span class=\"token keyword\">let</span> p <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Entry[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">check_PerformanceEntry</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Use getEntriesByType() to get all \"mark\" entries</span>\n  p <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Mark only entry[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"]: name = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span>\n         <span class=\"token string\">\"; startTime = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>startTime <span class=\"token operator\">+</span>\n         <span class=\"token string\">\"; duration  = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Use getEntriesByName() to get all \"mark\" entries named \"Begin\"</span>\n  p <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Begin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Mark and Begin entry[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"]: name = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span>\n         <span class=\"token string\">\"; startTime = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>startTime <span class=\"token operator\">+</span>\n         <span class=\"token string\">\"; duration  = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/performance-timeline/#dom-performance-getentries","title":"Performance Timeline"}],"query":"api.Performance.getEntries"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.Performance.getEntries","dataURL":"/ja/docs/Web/API/Performance/getEntries/bcd.json"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"getEntries() メソッドは、そのページのすべての PerformanceEntry オブジェクトのリストを返します。リストのメンバー（エントリー）は、明示的な時点でパフォーマンスマークまたはメジャーを作成することで（たとえば mark() メソッドを呼び出すことで）作成できます。特定の種類のパフォーマンスエントリーや特定の名前のパフォーマンスエントリーにのみ関心がある場合は、 getEntriesByType() と getEntriesByName() を参照してください。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"performance.getEntries()","locale":"en-US","native":"English (US)"},{"title":"performance.getEntries()","locale":"fr","native":"Français"},{"title":"Performance.getEntries()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/performance/getentries","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/performance/getentries/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Performance","title":"Performance"},{"uri":"/ja/docs/Web/API/Performance/getEntries","title":"performance.getEntries()"}],"pageTitle":"performance.getEntries() - Web API | MDN","noIndexing":false}}