{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"XMLHttpRequest.send()","mdn_url":"/ja/docs/Web/API/XMLHttpRequest/send","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/XMLHttpRequest\"><code>XMLHttpRequest()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/API/XMLHttpRequest/channel\"><code>channel</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/API/XMLHttpRequest/mozAnon\"><code>mozAnon</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/API/XMLHttpRequest/mozBackgroundRequest\"><code>mozBackgroundRequest</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/API/XMLHttpRequest/mozSystem\"><code>mozSystem</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLHttpRequest/msCaching\"><code>msCaching</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/readyState\"><code>readyState</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/response\"><code>response</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/responseText\"><code>responseText</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/responseType\"><code>responseType</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/responseURL\"><code>responseURL</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/responseXML\"><code>responseXML</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/status\"><code>status</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/statusText\"><code>statusText</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/timeout\"><code>timeout</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/upload\"><code>upload</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/withCredentials\"><code>withCredentials</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/abort\"><code>abort()</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\"><code>getAllResponseHeaders()</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/getResponseHeader\"><code>getResponseHeader()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XMLHttpRequest/msCachingEnabled\"><code>msCachingEnabled()</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/open\"><code>open()</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/overrideMimeType\"><code>overrideMimeType()</code></a></li><li><em><code>send()</code></em></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/setRequestHeader\"><code>setRequestHeader()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/abort_event\"><code>abort</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/error_event\"><code>error</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/load_event\"><code>load</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/loadend_event\"><code>loadend</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/loadstart_event\"><code>loadstart</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/progress_event\"><code>progress</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/readystatechange_event\"><code>readystatechange</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequest/timeout_event\"><code>timeout</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/XMLHttpRequestEventTarget\"><code>XMLHttpRequestEventTarget</code></a></li><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>XMLHttpRequest に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/FormData\"><code>FormData</code></a></li><li><a href=\"/ja/docs/Web/API/ProgressEvent\"><code>ProgressEvent</code></a></li><li><a href=\"/ja/docs/Web/API/XMLHttpRequestEventTarget\"><code>XMLHttpRequestEventTarget</code></a></li><li><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>XMLHttpRequestUpload</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> の <strong><code>send()</code></strong> メソッドは、リクエストをサーバーに送信します。</p>\n<p>リクエストが非同期の場合 (これが既定)、このメソッドはリクエストが送信されるとすぐに戻り、結果はイベントを用いて配信されます。リクエストが同期の場合、このメソッドはレスポンスが到着するまで戻りません。</p>\n<p><code>send()</code> はリクエストの本文を示す引数を一つ受け取ることができます。これは主に <a href=\"/ja/docs/Web/HTTP/Methods/PUT\"><code>PUT</code></a> のようなリクエストに使用されます。リクエストメソッドが <a href=\"/ja/docs/Web/HTTP/Methods/GET\"><code>GET</code></a> あｍたは <a href=\"/ja/docs/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a> であれば、 <code>body</code> 引数は無視され、リクエストの本文は <code>null</code> に設定されます。</p>\n<p><a href=\"/ja/docs/Web/HTTP/Headers/Accept\"><code>Accept</code></a> ヘッダーを <a href=\"/ja/docs/Web/API/XMLHttpRequest/setRequestHeader\" title=\"setRequestHeader()\"><code>setRequestHeader()</code></a> を使用して設定しなかった場合、 <code>Accept</code> ヘッダーは <code>\"*/*\"</code> 型 (任意の型) が送信されます。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>XMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"body\"><code>body</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>XHR のリクエストの中で送られる本文データです。次のものが使用できます。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a>: 送信前にシリアライズされている場合。</li>\n      <li><code>BodyInit</code>: <a href=\"https://fetch.spec.whatwg.org/#typedefdef-xmlhttprequestbodyinit\" class=\"external\" rel=\" noopener\">Fetch の仕様書</a>によれば、 <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a>, <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>BufferSource</code></a>, <a href=\"/ja/docs/Web/API/FormData\"><code>FormData</code></a>, <a href=\"/ja/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, <a href=\"/ja/docs/Glossary/String\"><code>USVString</code></a> のオブジェクトが利用できます。</li>\n      <li><code>null</code></li>\n    </ul>\n    <p>body に値が設定されていない場合、既定値の <code>null</code> が使用されます。</p>\n  </dd>\n</dl>\n<p>バイナリコンテンツの送信 (例えばファイルのアップロード) の最適な方法は、 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>ArrayBufferView</code> <small>(en-US)</small></a> または <a href=\"/ja/docs/Web/API/Blob\"><code>Blob</code></a> と <code>send()</code> メソッドを組み合わせることです。</p>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p><code>undefined</code></p>"}},{"type":"prose","value":{"id":"例外","title":"例外","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>このリクエストに対してすでに <code>send()</code> が呼び出されているか、リクエストが完了している。</p>\n  </dd>\n  <dt id=\"networkerror\"><code>NetworkError</code> <a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>読み込むリソースの型が Blob であり、メソッドが <code>GET</code> ではない。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"get_の例","title":"GET の例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/server'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nxhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// リクエストの終了。ここの処理を実行します。</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// xhr.send('string');</span>\n<span class=\"token comment\">// xhr.send(new Blob());</span>\n<span class=\"token comment\">// xhr.send(new Int8Array());</span>\n<span class=\"token comment\">// xhr.send(document);</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"post_の例","title":"POST の例","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/server'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//リクエストに従って正しいヘッダー情報を送信してください</span>\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/x-www-form-urlencoded\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nxhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 状態が変化すると関数が呼び出されます。</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">===</span> XMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token constant\">DONE</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// リクエストの終了。ここの処理を実行します。</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo=bar&amp;lorem=ipsum\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// xhr.send(new Int8Array());</span>\n<span class=\"token comment\">// xhr.send(document);</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://xhr.spec.whatwg.org/#the-send()-method","title":"XMLHttpRequest Standard"}],"query":"api.XMLHttpRequest.send"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.XMLHttpRequest.send","dataURL":"/ja/docs/Web/API/XMLHttpRequest/send/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\">XMLHttpRequest の使用</a></li>\n  <li><a href=\"/ja/docs/Web/API/XMLHttpRequest/HTML_in_XMLHttpRequest\">XMLHttpRequest における HTML の扱い</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"GET の例","id":"get_の例"},{"text":"POST の例","id":"post_の例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"XMLHttpRequest の send() メソッドは、リクエストをサーバーに送信します。","popularity":0.0006,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"XMLHttpRequest.send()","locale":"en-US","native":"English (US)"},{"title":"XMLHttpRequest.send()","locale":"fr","native":"Français"},{"title":"XMLHttpRequest.send()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"XMLHttpRequest.send()","locale":"ru","native":"Русский"},{"title":"XMLHttpRequest.send()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/xmlhttprequest/send","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/xmlhttprequest/send/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/XMLHttpRequest","title":"XMLHttpRequest"},{"uri":"/ja/docs/Web/API/XMLHttpRequest/send","title":"XMLHttpRequest.send()"}],"pageTitle":"XMLHttpRequest.send() - Web API | MDN","noIndexing":false}}