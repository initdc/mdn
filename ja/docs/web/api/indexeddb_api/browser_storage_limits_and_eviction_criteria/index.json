{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ブラウザーのストレージ制限と削除基準","mdn_url":"/ja/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Using IndexedDB</a></li><li><a href=\"/ja/docs/Web/API/IndexedDB_API/Basic_Terminology\">IndexedDB key characteristics and basic terminology</a></li><li><a href=\"/ja/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria\">Browser storage limits and eviction criteria</a></li><li><a href=\"/ja/docs/Web/API/IndexedDB_API/Checking_when_a_deadline_is_due\">Checking when a deadline is due</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li><li><a href=\"/ja/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a></li><li><a href=\"/ja/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/ja/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/ja/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/ja/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/ja/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li><li><a href=\"/ja/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/ja/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/ja/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li><li><a href=\"/ja/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>クライアント側 (すなわちローカルディスク) に何らかのデータを保存するウェブ技術は何種類かがあります。ブラウザーがどれだけの容量をウェブデータストレージに割り当てるかや、容量の上限に達したときにどのデータを削除するかのプロセスは単純ではなく、またブラウザーにより異なります。この記事では、必要なローカルストレージの容量を確保するために、いつどのローカルコンテンツを破棄するのかをどうやって特定するのかを説明します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 以下の情報はほとんどの最新ブラウザーではおおむね正確ですが、ブラウザー固有の注意事項も知られています。 Opera と Chrome は、すべての場合において同じ動作になるでしょう。 <a href=\"https://www.opera.com/mobile/mini\" class=\"external\" rel=\" noopener\">Opera Mini</a> (Presto ベースで、サーバー側でレンダリングする) は、クライアントにデータを保存しません。</p>\n</div>"}},{"type":"prose","value":{"id":"ブラウザーのデータストレージを使用する技術は何か","title":"ブラウザーのデータストレージを使用する技術は何か?","isH3":false,"content":"<p>Firefox では以下の技術が、必要なデータを保存するためにブラウザーのデータストレージを使用します。ここではこれらの技術を「クォータクライアント」と呼びます。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n  <li><a href=\"http://asmjs.org/\" class=\"external\" rel=\" noopener\">asm.js</a> のキャッシュ</li>\n  <li><a href=\"/ja/docs/Web/API/Cache\">Cache API</a></li>\n  <li>Cookies</li>\n</ul>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Firefox では、<a href=\"/ja/docs/Web/API/Web_Storage_API\">ウェブストレージ</a>もまもなく同じストレージ管理ツールを使い始めます。それはこの文書で記述します。</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> プライベートブラウジングモードは、大半のデータストレージに対応していません。ローカルストレージのデータと Cookie は保存されますが、短命です。 — 最後のプライベートブラウジングウィンドウを閉じた時にデータは消去されます。</p>\n</div>\n<p>オリジンの「最終アクセス日時」はこれらのうちの何れかがアクティブ化/非アクティブ化されたときに更新されます。オリジン立ち退き (origin eviction) によって、すべてのクォータクライアントでデータ削除が行われたときに更新されます。</p>\n<p>Chrome/Opera では、 Quota Management API が <a href=\"/ja/docs/Web/HTML/Using_the_application_cache\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">AppCache</a>, <a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB</a>, WebSQL, <a href=\"/ja/docs/Web/API/File_and_Directory_Entries_API\">File System API</a> のクォータ管理を制御しています。</p>"}},{"type":"prose","value":{"id":"さまざまな種類のデータストレージ","title":"さまざまな種類のデータストレージ","isH3":false,"content":"<p>同じブラウザー内で同じ保存方法を使用していても、解釈されるデータストレージの種類はさまざまです。この章では、さまざまなブラウザーで見つけられる多様なストレージについて説明します。</p>\n<p>ストレージは 2 種類に分けられます。</p>\n<ul>\n  <li>永続的なもの。長期間保存されることを意図したデータです。これは、ユーザーが選択した場合にのみ削除されます (たとえば、Firefox では、<em>設定</em>に進み、<em>プライバシーとセキュリティ &gt; Cookie とサイトデータ</em>のオプションを使用することで、すべての保存データを削除するか、または選択したオリジンからの保存データのみを削除するかを選択できます)。</li>\n  <li>一時的なもの。長期間にわたって維持する必要がないデータです。<a href=\"#storage_limits\">ストレージの容量制限</a>に達すると、 <a href=\"#lru_policy\">LRU ポリシー</a>によりもっとも古く使用されたものから削除されます。</li>\n</ul>\n<p>Firefox では、永続的なストレージが使用されると、ユーザーにはデータが永続的になることを警告するポップアップが表示され、それが良いかどうかを尋ねます。一時的データストレージは明示的にユーザーにプロンプトを表示しません。</p>\n<p>ストレージは既定では一時的です。開発者は <a href=\"/ja/docs/Web/API/Storage_API\">Storage API</a> で利用できる <a href=\"/ja/docs/Web/API/StorageManager/persist\"><code>StorageManager.persist()</code></a> メソッドを使用して永続的なストレージにすることができます。</p>"}},{"type":"prose","value":{"id":"データの保存先は","title":"データの保存先は?","isH3":false,"content":"<p>それぞれのストレージ種別は、個別のリポジトリーを表します。以下は、ユーザーの Firefox プロファイル下のディレクトリにおける実際のマッピングです (他のブラウザーでは若干異なる場合があります)。</p>\n<ul>\n  <li><code>&lt;profile&gt;/storage</code> — クォータマネージャー (後述) に管理されている、ストレージの主要な最上位ディレクトリーです。</li>\n  <li><code>&lt;profile&gt;/storage/permanent</code> — 永続的なデータストレージのリポジトリーです。</li>\n  <li><code>&lt;profile&gt;/storage/temporary</code> — 一時的なデータストレージのリポジトリーです。</li>\n  <li><code>&lt;profile&gt;/storage/default</code> — 既定のデータストレージのリポジトリーです。</li>\n</ul>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> <a href=\"/ja/docs/Web/API/Storage_API\">Storage API</a> の導入後は、\"permanent\" フォルダーは廃止されると考えられます。\"permanent\" フォルダーは IndexedDB の永続的な種類のデータベースのみ保存します。ボックスモードが \"best-effort\" や \"persistent\" であっても、データは &lt;profile&gt;/storage/default 以下に保存されます。</p>\n</div>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>Note:</strong> Firefox では URL バーに <code>about:support</code> と入力して移動して、<em>プロファイルフォルダー</em> の隣にある <em>フォルダーを開く</em> ボタン (Mac OS X では <em>Finder で開く</em>) を押下すると、プロファイルのフォルダーを見つけることができます。</p>\n</div>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>Note:</strong> プロファイルフォルダーでデータを保存する場所を見ていると、第 4 のフォルダー <code>persistent</code> が見つかるかもしれません。本来は更新や移行を単純化するため、少し前に <code>persistent</code> フォルダーを <code>permanent</code> フォルダーに改名しました。</p>\n</div>\n<div class=\"notecard note\" id=\"sect7\">\n  <p><strong>Note:</strong> ユーザーが <code>&lt;profile&gt;/storage</code> の配下に、独自のディレクトリーやファイルを作成すべきではありません。このようなことを行うと、ストレージの初期化に失敗します。例えば、<a href=\"/ja/docs/Web/API/IDBFactory/open\" title=\"open()\"><code>open()</code></a> でエラーイベントが発生します。</p>\n</div>"}},{"type":"prose","value":{"id":"ストレージの制限","title":"ストレージの制限","isH3":false,"content":"<p>ブラウザーのストレージの最大容量は動的であり、ハードドライブのサイズに応じて変わります。<strong>グローバルリミット</strong>はディスクの空き量量の 50% に決められます。Firefox では、クォータマネージャーと飛ばれる内部のブラウザーツールがオリジンごとにどれだけディスク容量を使用しているかを絶えず注視しており、必要に応じてデータを削除します。</p>\n<p>従ってハードドライブの空き容量が 500GB であれば、ブラウザーの合計ストレージサイズは 250GB になります。上限に達すると<strong>オリジン立ち退き (origin eviction)</strong> と呼ばれる処理を実行して、ストレージの総量が再び上限を下回るまで、オリジン全体に相当するデータを削除します。オリジン内の一部分を削除するような縮小法はありません。オリジン内のデータベースをひとつだけ削除すると、矛盾が発生するおそれがあります。</p>\n<p>また、<strong>グループリミット</strong>というもうひとつの制限もあります。これは、グローバルリミットの 20% として定義されます。それぞれのオリジンは、グループ (オリジンのグループ) の一部です。グループは、eTLD+1 ドメインごとに 1 つ作られます。例えば次の通りです。</p>\n<ul>\n  <li><code>mozilla.org</code> — グループ 1、オリジン 1</li>\n  <li><code>www.mozilla.org</code> — グループ 1、オリジン 2</li>\n  <li><code>joe.blogs.mozilla.org</code> — グループ 1、オリジン 3</li>\n  <li><code>firefox.com</code> — グループ 2、オリジン 4</li>\n</ul>\n<p>このグループでは <code>mozilla.org</code>、<code>www.mozilla.org</code>、<code>joe.blogs.mozilla.org</code> が、合わせてグローバルリミットの 20% を上限としてストレージを使用できます。<code>firefox.com</code> は、別に 20% の上限を持ちます。</p>\n<p>これら 2 種類の制限は、制限に達したときの動作が異なります。</p>\n<ul>\n  <li>グループリミットは「ハードリミット」とも呼ばれます。オリジン立ち退きを発生させません。</li>\n  <li>グローバルリミットは、いくらかの領域が解放されて処理を継続できる可能性がありますので「ソフトリミット」です。</li>\n</ul>\n<div class=\"notecard note\" id=\"sect8\">\n  <p><strong>Note:</strong> グループリミットは、上記で触れた最小のグループリミットにかかわらず、グローバルリミットより大きくすることはできません。グローバルリミットが 8MB といった本当にメモリーが少ない状況では、グループリミットも 8MB となります。</p>\n</div>\n<div class=\"notecard note\" id=\"sect9\">\n  <p><strong>Note:</strong> グループリミットに達したとき、あるいはオリジン立ち退きで十分な空き容量を確保できないときは、ブラウザーで <code>QuotaExceededError</code> が発生します。</p>\n</div>\n<div class=\"notecard note\" id=\"sect10\">\n  <p><strong>Note:</strong> Chrome では、ソフトおよびハードのストレージのクォータの限界が <strong>M66</strong> から変更されました。詳しい情報は<a href=\"https://chromium.googlesource.com/chromium/src/+/refs/heads/master/storage/browser/quota/quota_settings.cc#68\" class=\"external\" rel=\" noopener\">こちら</a>にあります。</p>\n</div>"}},{"type":"prose","value":{"id":"lru_ポリシー","title":"LRU ポリシー","isH3":false,"content":"<p>使用可能なディスク領域がすべて埋まったときは、クォータマネージャーが LRU ポリシーに基づいてデータの削除処理を始めます。もっとも過去に使用されたオリジンのデータが始めに削除され、上限に達しなくなるなるまで削除を繰り返します。</p>\n<p>一時的なストレージを使用して、オリジンごとに「最終アクセス日時」を記録しています。一時的なストレージがグローバルリミットに達する (後に上限をさらに超える) と、現在使用していない (すなわち、データストアを開き続けているタブやアプリがない) オリジンをすべて発見しようとします。これらは、「最終アクセス日時」によって整列されます。オリジン立ち退きを発生させたリクエストを満たすのに十分な領域を確保するまで、もっとも過去に使用されたオリジンを削除し続けます。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.html5rocks.com/en/tutorials/offline/quota-research/\" class=\"external\" rel=\" noopener\">Working with quota on mobile browsers</a>, by <a href=\"https://blog.agektmr.com\" class=\"external\" rel=\" noopener\">Eiji Kitamura.</a> モバイルブラウザーのクライアント側ストレージについて詳しく分析した記事。</li>\n  <li><a href=\"https://developers.google.com/web/updates/2011/11/Quota-Management-API-Fast-Facts\" class=\"external\" rel=\" noopener\">Quota Management API: Fast Facts</a>, by<a href=\"https://blog.agektmr.com\" class=\"external\" rel=\" noopener\">Eiji Kitamura.</a> Chrome/Blink (Opera も含まれるでしょう) の Quota Management API について見ていく記事。</li>\n</ul>"}}],"toc":[{"text":"ブラウザーのデータストレージを使用する技術は何か?","id":"ブラウザーのデータストレージを使用する技術は何か"},{"text":"さまざまな種類のデータストレージ","id":"さまざまな種類のデータストレージ"},{"text":"データの保存先は?","id":"データの保存先は"},{"text":"ストレージの制限","id":"ストレージの制限"},{"text":"LRU ポリシー","id":"lru_ポリシー"},{"text":"関連情報","id":"関連情報"}],"summary":"クライアント側 (すなわちローカルディスク) に何らかのデータを保存するウェブ技術は何種類かがあります。ブラウザーがどれだけの容量をウェブデータストレージに割り当てるかや、容量の上限に達したときにどのデータを削除するかのプロセスは単純ではなく、またブラウザーにより異なります。この記事では、必要なローカルストレージの容量を確保するために、いつどのローカルコンテンツを破棄するのかをどうやって特定するのかを説明します。","popularity":0.0004,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Browser storage limits and eviction criteria","locale":"en-US","native":"English (US)"},{"title":"Limites de stockage du navigateur et critères d'éviction","locale":"fr","native":"Français"},{"title":"Browser storage limits and eviction criteria","locale":"ru","native":"Русский"},{"title":"IndexedDB 浏览器存储限制和清理标准","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/indexeddb_api/browser_storage_limits_and_eviction_criteria","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/indexeddb_api/browser_storage_limits_and_eviction_criteria/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/IndexedDB_API","title":"IndexedDB API"},{"uri":"/ja/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria","title":"ブラウザーのストレージ制限と削除基準"}],"pageTitle":"ブラウザーのストレージ制限と削除基準 - Web API | MDN","noIndexing":false}}