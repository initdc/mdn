{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"IndexedDB の主な特徴と基本用語","mdn_url":"/ja/docs/Web/API/IndexedDB_API/Basic_Terminology","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Using IndexedDB</a></li><li><a href=\"/ja/docs/Web/API/IndexedDB_API/Basic_Terminology\">IndexedDB key characteristics and basic terminology</a></li><li><a href=\"/ja/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria\">Browser storage limits and eviction criteria</a></li><li><a href=\"/ja/docs/Web/API/IndexedDB_API/Checking_when_a_deadline_is_due\">Checking when a deadline is due</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li><li><a href=\"/ja/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a></li><li><a href=\"/ja/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/ja/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/ja/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/ja/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/ja/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li><li><a href=\"/ja/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/ja/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/ja/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li><li><a href=\"/ja/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>この記事では IndexedDB の主な特徴を説明し、IndexedDB API の理解に関連する重要な用語を紹介しています。</p>\n<p>また、以下の記事も参考になるでしょう。</p>\n<ul>\n  <li>API の使用方法に関する詳細なチュートリアルについては、<a href=\"/ja/docs/Web/API/IndexedDB_API/Using_IndexedDB\">IndexedDB の使用</a>を参照してください。</li>\n  <li>IndexedDB API のリファレンス文書については、<a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB API</a> のメイン記事と、IndexedDB で使用されるオブジェクトの型を記したそのサブページを参照してください。</li>\n  <li>ブラウザーがバックグラウンドでデータを保存する方法の詳細については、<a href=\"/ja/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria\">ブラウザーのストレージ制限と削除基準</a>を参照してください。</li>\n</ul>"}},{"type":"prose","value":{"id":"主な特徴","title":"主な特徴","isH3":false,"content":"<p>IndexedDB は、ユーザーのブラウザー内にデータを永続的に保存するための方法です。ネットワークの利用可否にかかわらず、豊富なクエリー機能を備えたウェブアプリケーションを作成できるため、オンラインでもオフラインでも動作します。IndexedDB は、大量のデータを保存するアプリケーション (貸し出し用図書館の DVD カタログなど) や、インターネットへの持続的な接続を必要としないアプリケーション (メールクライアント、ToDo リスト、メモ帳など) に有効です。</p>\n<p>IndexedDB では、「キー」に基づいてインデックス化されたオブジェクトを保存・取得することができます。データベースへの変更は、すべてトランザクション内で行われます。多くのウェブストレージ技術と同様に、IndexedDB は<a href=\"https://www.w3.org/Security/wiki/Same_Origin_Policy\" class=\"external\" rel=\" noopener\">同一オリジンポリシー</a>に従っています。そのため、ドメイン内の保存データにはアクセスできますが、異なるドメイン間のデータにはアクセスできません。</p>\n<p>他の種類のデータベースでの作業を前提としていると、IndexedDB での作業に戸惑うことがあるかもしれません。そのため、以下のような IndexedDB の主な特徴を覚えておくことが重要です。</p>\n<ul>\n  <li><strong>IndexedDB データベースは、キーと値の組を格納します。</strong> 値は複雑な構造のオブジェクトで、キーはそのオブジェクトのプロパティです。オブジェクトの任意のプロパティを使用するインデックスを作成して、迅速な検索や並べ替えされた列挙を行うことができます。キーにはバイナリーオブジェクトを使用することができます。</li>\n  <li>\n    <strong>IndexedDB は、トランザクションデータベースモデルに基づいて構築されています。</strong> IndexedDB で行うことは、常に<a href=\"#gloss_transaction\">トランザクション</a>のコンテキストで行われます。IndexedDB API には、インデックス、テーブル、カーソルなどを表す多くのオブジェクトが用意されていますが、これらはそれぞれ特定のトランザクションに関連付けられています。そのため、トランザクションの外でコマンドを実行したり、カーソルを開いたりすることはできません。トランザクションには十分に定義された有効期間があるため、トランザクションが完了した後に使用しようとすると、例外が発生します。また、トランザクションは自動コミットされ、手動でコミットすることはできません。\n    このトランザクションモデルは、ユーザーがウェブアプリケーションの 2 つのインスタンスを 2 つの異なるタブで同時に開いた場合のことを考えると、とても有用です。トランザクション操作がなければ、 2 つのインスタンスが互いの変更に干渉してしまう可能性があります。データベースのトランザクションに慣れていない方は、<a href=\"https://ja.wikipedia.org/wiki/%E3%83%88%E3%83%A9%E3%83%B3%E3%82%B6%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3\" class=\"external\" rel=\" noopener\">Wikipedia のトランザクションに関する記事</a>をご覧ください。また、「定義」の章の<a href=\"#gloss_transaction\">トランザクション</a>もご覧ください。\n  </li>\n  <li><strong>IndexedDB API は、ほとんどが非同期です。</strong> API は値を返すことでデータを提供するわけではありません。コールバック関数を渡す必要があります。同期的な方法でデータベースに値を「格納」したり、データベースから値を「取り出す」ことはしません。代わりに、データベース操作を「リクエスト」します。操作が終了すると DOM イベントで通知され、そのイベントの種類によって操作が成功したか失敗したかが分かります。最初は少し複雑に聞こえるかもしれませんが、そこには健全性を保つための対策が組み込まれています。これは、<a href=\"/ja/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a> が動作する方法と大きな違いはありません。</li>\n  <li><strong>IndexedDB は多くのリクエストを使用します。</strong> リクエストは、前述の成功または失敗の DOM イベントを受け取るオブジェクトです。このオブジェクトには <code>onsuccess</code> と <code>onerror</code> のプロパティがあり、<code>addEventListener()</code> と <code>removeEventListener()</code> を呼び出すことができます。また、<code>readyState</code>、<code>result</code>、<code>errorCode</code> の各プロパティがあり、リクエストの状態を知ることができます。<code>result</code> プロパティは、リクエストの生成方法 (例えば <code>IDBCursor</code> インスタンスや、データベースに挿入したばかりの値のキー) に応じて、さまざまなものになるため、特に魔法のようなものです。</li>\n  <li><strong>IndexedDB は DOM イベントを使って、結果が利用可能になったことを通知します。</strong> DOM イベントには、必ず <code>type</code> プロパティがあります (IndexedDB では、最も一般的に <code>\"success\"</code> または <code>\"error\"</code> に設定されます)。また、DOM イベントには、イベントの目的地を示す <code>target</code> プロパティがあります。ほとんどの場合、イベントの <code>target</code> は、何らかのデータベース操作の結果として生成された <code>IDBRequest</code> オブジェクトです。成功イベントはバブルアップしませんし、キャンセルもできません。一方、エラーイベントはバブリングします、キャンセルも可能です。これは非常に重要なことで、エラーイベントはキャンセルされない限り、実行中のトランザクションを中断します。</li>\n  <li>\n    <strong>IndexedDB はオブジェクト指向です。</strong> IndexedDB は、行と列の集合体であるテーブルを持つリレーショナルデータベースではありません。この重要かつ根本的な違いは、アプリケーションの設計・構築方法に影響します。\n    従来のリレーショナルデータストアでは、データの行と名前の付いたデータの列の集合体を格納するテーブルがあります。一方、IndexedDB では、データの種類に応じてオブジェクトストアを作成し、そのストアに JavaScript オブジェクトを永続化する必要があります。各オブジェクトストアには、クエリや反復処理を効率的に行うためのインデックスのコレクションを持つことができます。オブジェクト指向データベース管理システムに慣れていない方は、<a href=\"https://ja.wikipedia.org/wiki/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9\" class=\"external\" rel=\" noopener\">Wikipedia のオブジェクトデータベースの記事</a>をお読みください。\n  </li>\n  <li><strong>IndexedDB は Structured Query Language (SQL) を使用しません。</strong> インデックスに対するクエリーを使用してカーソルを生成し、そのカーソルを使用して結果セットを反復処理します。NoSQL システムについてよく知らない方は、<a href=\"https://ja.wikipedia.org/wiki/NoSQL\" class=\"external\" rel=\" noopener\">Wikipedia の NoSQL に関する記事</a>をご覧ください。</li>\n  <li>\n    <strong>IndexedDB は、同一オリジンポリシーを採用しています</strong>。オリジンとは、スクリプトを実行している文書の URL のドメイン、アプリケーション層のプロトコル、およびポートのことです。各オリジンには、それぞれ関連するデータベースのセットがあります。すべてのデータベースには、オリジン内で識別するための名前があります。\n    IndexedDB にはセキュリティ境界が課せられており、アプリケーションが異なるオリジンのデータにアクセスすることを防ぎます。例えば、<a href=\"https://www.example.com/app/\" class=\"external\" rel=\" noopener\">http://www.example.com/app/</a> のアプリやページは、<a href=\"https://www.example.com/dir/\" class=\"external\" rel=\" noopener\">http://www.example.com/dir/</a> からはオリジンが同じであるためデータを取得することができますが、<a href=\"https://www.example.com:8080/dir/\" class=\"external\" rel=\" noopener\">http://www.example.com:8080/dir/</a> (ポートが異なる) や <a href=\"https://www.example.com/dir/\" class=\"external\" rel=\" noopener\">https://www.example.com/dir/</a> (プロトコルが異なる) からは、オリジンが異なるためデータを取得することはできません。\n    <div class=\"notecard note\" id=\"sect1\">\n      <p><strong>Note:</strong> サードパーティのウィンドウコンテンツ (例: <a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> コンテンツ) は、ブラウザーがサードパーティのクッキーを受け入れないように設定されていない限り、埋め込まれたオリジンの IndexedDB ストアにアクセスすることができます (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1147821\" class=\"external\" rel=\" noopener\">バグ&nbsp;1147821</a> を参照)。</p>\n    </div>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"制限事項","title":"制限事項","isH3":true,"content":"<p>IndexedDB は、クライアントサイドのストレージを必要とするほとんどのケースをカバーするように設計されています。しかし、以下のようないくつかのケースには対応していません。</p>\n<ul>\n  <li>国際化に対応した並べ替え。すべての言語で文字列が同じように並べ替えされるわけではないので、国際化に対応した並べ替えには対応していません。データベースは特定の国際化に対応した順序でデータを保存することはできませんが、データベースから読み取ったデータを自分で並べ替えすることはできます。ただし、Firefox 43 以降、実験的なフラグを有効にすることで、<a href=\"/ja/docs/Web/API/IndexedDB_API/Using_IndexedDB#locale-aware_sorting\">ロケールを考慮した並べ替え</a>が可能になっています (現在は Firefox のみ)。</li>\n  <li>同期。この API は、サーバー側のデータベースとの同期を行うようには設計されていません。クライアント側の indexedDB データベースとサーバー側のデータベースを同期させるコードを書く必要があります。</li>\n  <li>全文検索。この API には、 SQL の <code>LIKE</code> 演算子に相当するものがありません。</li>\n</ul>\n<p>また、以下のような条件でブラウザーがデータベースを消去することがあるので注意が必要です。</p>\n<ul>\n  <li>ユーザーが消去を要求した場合。多くのブラウザーには、Cookie、ブックマーク、保存されたパスワード、IndexedDB データなど、特定のウェブサイトに保存されたすべてのデータを消去できる設定があります。</li>\n  <li>ブラウザーがプライベートブラウジングモードになっている場合。一部のブラウザーには、「プライベートブラウジング」 (Firefox) または「シークレット」 (Chrome) モードがあります。セッションの終了時に、ブラウザーはデータベースを消去します。</li>\n  <li>ディスクまたはクォータの容量の上限に達した場合。</li>\n  <li>データが破損した場合。</li>\n  <li>この機能に対して互換性のない変更が行われた場合。</li>\n</ul>\n<p>正確な状況やブラウザーの機能は時間とともに変化しますが、ブラウザーベンダーの一般的な考え方は、可能な限りデータを残すために最善の努力をするというものです。</p>"}},{"type":"prose","value":{"id":"主な用語","title":"主な用語","isH3":false,"content":"<p>この節では、IndexedDB API の理解に関連する主な用語を定義および説明します。</p>"}},{"type":"prose","value":{"id":"データベース","title":"データベース","isH3":true,"content":"<dl>\n  <dt id=\"データベース_database\">データベース (database)</dt>\n  <dd>\n    <p>普通 1 つ以上の<a href=\"#gloss_object_store\"><em>オブジェクトストア</em></a>で構成される、情報の格納庫です。それぞれのデータベースには以下のものがあります。</p>\n    <ul>\n      <li>名前。これは、特定のオリジン内でデータベースを識別し、その生涯を通じて一定です。名前は任意の文字列値 (空文字列を含む) とすることができます。</li>\n      <li>現在の<a href=\"#gloss_version\"><em>バージョン</em></a>。データベースが最初に作成されたとき、特に指定がなければそのバージョンは整数の 1 です。各データベースは、常に 1 つのバージョンしか持つことができません。</li>\n    </ul>\n  </dd>\n  <dt id=\"永続性_durable\">永続性 (durable)</dt>\n  <dd>\n    <p>Firefox では、IndexedDB は以前は<strong>永続性</strong>がありました。つまり、読み書きトランザクションにおいて、すべてのデータがディスクにフラッシュされたことが保証されたときにのみ、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/complete_event\"><code>IDBTransaction.oncomplete</code> <small>(en-US)</small></a> が発行されていました。</p>\n    <p>Firefox 40 では、IndexedDB トランザクションは、パフォーマンスを向上させるために、他の IndexedDB に対応するブラウザーと同様に永続性の保証を緩和しています (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1112702\" class=\"external\" rel=\" noopener\">バグ&nbsp;1112702</a> を参照)。この場合、 <code><a href=\"/en-US/docs/Web/API/OfflineAudioContext/complete_event\" title=\"Currently only available in English (US)\" class=\"only-in-en-us\">complete (en-US)</a></code> イベントは、OS がデータの書き込みを指示した後に発生しますが、そのデータが実際にディスクにフラッシュされる前に発生する可能性もあります。そのため、イベントは以前よりも早く配信されるかもしれませんが、データがディスクにフラッシュされる前に OS がクラッシュしたり、システムの電源が切れたりすると、トランザクション全体が失われてしまう可能性がわずかながらあります。このような致命的な事象は稀であるため、ほとんどの人はこれ以上気にする必要はありません。</p>\n    <div class=\"notecard note\" id=\"sect2\">\n      <p><strong>Note:</strong> Firefox では、何らかの理由で永続性を確保したい場合 (たとえば、後で再計算できない重要なデータを保存している場合)、実験的な (標準外の) <code>readwriteflush</code> モードを使用してトランザクションを作成することで、<code>complete</code> イベントを配信する前にトランザクションをディスクに強制的にフラッシュさせることができます(<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/transaction\"><code>IDBDatabase.transaction</code> <small>(en-US)</small></a> を参照)。これは現在実験的なものであり、<code>about:config</code> で <code>dom.indexedDB.experimental</code> 設定項目が <code>true</code> に設定されている場合にのみ使用できます。</p>\n    </div>\n  </dd>\n  <dt id=\"オブジェクトストア_object_store\">オブジェクトストア (object store)</dt>\n  <dd>\n    <p>データベースにデータを保存する仕組みです。オブジェクトストアはレコードを持続的に保持しており、これはキーと値の組です。オブジェクトストア内のレコードは、<em><a href=\"#gloss_key\">キー</a></em> によって昇順に整列して保存されています。</p>\n    <p>すべてのオブジェクトストアには、そのデータベース内で一意となる名前が必要です。オブジェクトストアは、オプションで <em><a href=\"#gloss_keygenerator\">キージェネレーター</a></em> と <em><a href=\"#gloss_keypath\">キーパス</a></em> を持つことができます。オブジェクトストアにキーパスがある場合は <em><a href=\"#gloss_inline_key\">インラインキー</a></em>、ない場合は <em><a href=\"#gloss_outofline_key\">アウトオブラインキー</a></em> が使用されます。</p>\n    <p>オブジェクトストアのリファレンス文書は、 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code> <small>(en-US)</small></a> を参照してください。</p>\n  </dd>\n  <dt id=\"バージョン_version\">バージョン (version)</dt>\n  <dd>\n    <p>始めにデータベースを生成したとき、バージョンは整数の 1 になります。それぞれのデータベースは、一度に 1 つのバージョンを持ちます。一度に複数のバージョンを持つことはできません。バージョンを変更する唯一の方法は、現在のバージョンより大きなバージョンでデータベースを開くことです。</p>\n  </dd>\n  <dt id=\"データベース接続_database_connection\">データベース接続 (database connection)</dt>\n  <dd>\n    <p><em><a href=\"#gloss_database\">データベース</a></em> を開くことで生成される操作です。データベースは同時に複数の接続を持つことができます。</p>\n  </dd>\n  <dt id=\"トランザクション_transaction\">トランザクション (transaction)</dt>\n  <dd>\n    <p>特定のデータベースで行う、原子性を持つデータアクセスやデータ変更の操作のセットです。これは、データベース内のデータと対話する手段です。実際は、データベース内のデータの読み取りや変更はトランザクション内で実施しなければなりません。</p>\n    <p>書き込みトランザクションの<a href=\"#scope\"><em>スコープ</em></a>が重ならない限り、ひとつのデータベース接続で同時に複数のアクティブなトランザクションが存在できます。トランザクションのスコープは生成時に定義され、トランザクションがどのオブジェクトストアと対話できるかや、トランザクションの持続期間にわたって保持し続けるかを示します。よって例えば、データベース接続で <code>flyingMonkey</code> オブジェクトストアのみ対象とするスコープを持つ書き込みトランザクションがすでに存在するとき、<code>unicornCentaur</code> オブジェクトストアや <code>unicornPegasus</code> オブジェクトストアをスコープで持つ別のトランザクションを開始できます。読み取りトランザクションは、スコープが重なっていても複数実行できます。</p>\n    <p>トランザクションは持続期間が短いものを除き、長時間のトランザクションがストレージ資源をロックする状況から解放するために、ブラウザーが終了させることができます。トランザクションは中止させることができ、トランザクションによるデータベースの変更箇所はロールバックされます。また、開始するトランザクションや中止するトランザクションを待つ必要はありません。</p>\n    <p>トランザクションには <code>readwrite</code>、<code>readonly</code>、<code>versionchange</code> の 3 つのモードがあります。オブジェクトストアやインデックスの生成および削除は、<a href=\"/en-US/docs/Web/API/IDBDatabase/versionchange_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">versionchange (en-US)</a> トランザクションを使用する場合に限り実行できます。トランザクションのタイプについて詳しくは、<a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB</a> のリファレンスをご覧ください。</p>\n    <p>すべての操作はトランザクション内で発生しますので、トランザクションは IndexedDB の重要な概念です。トランザクションについて、特にバージョン付けとの関係については、<a href=\"/ja/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a> および関連文書をご覧ください。ここにリファレンス文書もあります。</p>\n  </dd>\n  <dt id=\"リクエスト_request\">リクエスト (request)</dt>\n  <dd>\n    <p>データベースの読み書きを実施する操作です。すべてのリクエストは、ひとつの読み取りまたは書き込みの操作を表します。</p>\n  </dd>\n  <dt id=\"インデックス_index\">インデックス (index)</dt>\n  <dd>\n    <p>インデックスは<em>参照先オブジェクトストア (referenced object store)</em> から呼び出されて、別のオブジェクトストアのレコードを検索するための特別なオブジェクトストアです。インデックスは持続的なキーと値のストレージであり、インデックスのレコードの値は、参照先オブジェクトストアのレコードのキーです。インデックス内のレコードは、参照先オブジェクトストアでレコードが挿入、更新、削除されるたびに、自動的に収集されます。インデックス内の各レコードは参照先オブジェクトストア内のレコードをひとつだけ示すことができますが、複数のインデックスが同一のオブジェクトストアを参照することもできます。オブジェクトストアが変更されると、そのオブジェクトストアを参照するすべてのインデックスが自動的に更新されます。</p>\n    <p>代わりに、<a href=\"#gloss_key\">キー</a>を使用してオブジェクトストア内のレコードを検索することもできます。</p>\n    <p>インデックスの使用法について詳しくは、<a href=\"/ja/docs/Web/API/IndexedDB_API/Using_IndexedDB#using_an_index\">IndexedDB を使用する</a>をご覧ください。インデックスのリファレンス文書として、<a href=\"/en-US/docs/Web/API/IDBKeyRange\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">IDBKeyRange (en-US)</a> をご覧ください。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"キーと値","title":"キーと値","isH3":true,"content":"<dl>\n  <dt id=\"キー_key\">キー (key)</dt>\n  <dd>\n    <p>オブジェクトストアに保存された値は、このデータ値によって編成および取り出しされます。オブジェクトストアは <strong><a href=\"#gloss_keygenerator\">キージェネレーター</a></strong>、<em><a href=\"#gloss_keypath\">キーパス</a></em>、明示的に指定した値の、3 種類の生成源のいずれかからキーを得られます。キーは、自身の前にあるものより大きな数値を持つデータ型であることが必要です。オブジェクトストア内の各レコードはオブジェクトストア内で一意のキーを持たなければならず、オブジェクトストア内で複数のレコードが同じキーを持つことはできません。</p>\n    <p>キーは <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String\">文字列</a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\">date</a>、浮動小数点数値、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\">配列</a>のいずれかの型を使用できます。配列では、キーは空の値から無限大までの範囲を使用できます。また、配列の中に配列を含めることができます。文字列または整数値のキーしか使用できないという条件はありません。</p>\n    <p>代わりに、<a href=\"#gloss_index\">インデックス</a>を使用してオブジェクトストア内のレコードを検索することもできます。_</p>\n  </dd>\n  <dt id=\"キージェネレーター_key_generator\">キージェネレーター (key generator)</dt>\n  <dd>\n    <p>指定した順序で新たなキーを生成する仕組みです。オブジェクトストアがキージェネレーターを持たない場合は、保存するレコードのキーをアプリケーションが提供しなければなりません。ジェネレーターはストア間で共有しません。これはむしろブラウザーの実装の細部であり、Web 開発において実際にはキージェネレーターの生成やアクセスは行いません。</p>\n  </dd>\n  <dt id=\"インラインキー_in-line_key\">インラインキー (in-line key)</dt>\n  <dd>\n    <p>保存される値の一部として保存されるキーです。これは <strong>キーパス</strong> を使用して見つけます。インラインキーは、ジェネレーターを使用して生成できます。キーが生成されると、キーパスを使用してキーを値の中に保存したり、キーとして使用したりすることができます。</p>\n  </dd>\n  <dt id=\"アウトオブラインキー_out-of-line_key\">アウトオブラインキー (out-of-line key)</dt>\n  <dd>\n    <p>保存する値とは別に保存されるキーです。</p>\n  </dd>\n  <dt id=\"キーパス_key_path\">キーパス (key path)</dt>\n  <dd>\n    <p>オブジェクトストアやインデックスのどこからブラウザーがキーを取り出すべきかを定義します。有効なキーパスは空文字列、JavaScript の識別子、ピリオドで区切られた複数の JavaScript の識別子、あるいはそれらを収めた配列のいずれかを含むことができます。空白を含むことはできません。</p>\n  </dd>\n  <dt id=\"値_value\">値 (value)</dt>\n  <dd>\n    <p>それぞれのレコードは値を持っており、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">論理値</a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\">数値</a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String\">文字列</a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\">date</a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\">オブジェクト</a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\">配列</a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">正規表現</a>、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a>、null を含む、JavaScript で表現可能なものをどれでも含むことができます。</p>\n    <p>オブジェクトまたは配列を保存する場合は、それらのプロパティや値もまた、有効な値をどれでも持つことができます。</p>\n    <p>また、<a href=\"/ja/docs/Web/API/Blob\">Blob</a> やファイルも保存可能です。<a href=\"https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html\" class=\"external\" rel=\" noopener\">仕様書</a> をご覧ください。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"レンジとスコープ","title":"レンジとスコープ","isH3":true,"content":"<dl>\n  <dt id=\"スコープ_scope\">スコープ (scope)</dt>\n  <dd>\n    <p>トランザクションの適用先であるオブジェクトストアやインデックスのセットです。読み取りのみのトランザクションのスコープは、同時に重ね合ったり実行することができます。一方、書き込みトランザクションのスコープは重ね合うことができません。同時に同一のスコープで複数のトランザクションを開始することはできますが、それらはキューに収められ、順番に実行されます。</p>\n  </dd>\n  <dt id=\"カーソル_cursor\">カーソル (cursor)</dt>\n  <dd>\n    <p><em>キーレンジ</em>に属する複数のレコードにわたって反復処理を行うための仕組みです。カーソルは、反復処理を行うインデックスやオブジェクトストアがどれかを示す source を持ちます。またレンジ内の位置や、レコードキーの順序について増加方向に移動しているか減少方向に移動しているかの情報も持ちます。カーソルのリファレンス文書として、<a href=\"/ja/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a> をご覧ください。</p>\n  </dd>\n  <dt id=\"キーレンジ_key_range\">キーレンジ (key range)</dt>\n  <dd>\n    <p>\n      キーとして使用する、何らかのデータ型の連続的な区間です。キーまたはキーレンジを使用して、オブジェクトストアやインデックスからレコードを取り出すことができます。下限または上限を使用して、レンジを制限またはフィルターリングできます。例えばキーが x から y の間であるすべての値に対して、反復処理を行うことができます。\n      キーレンジのリファレンス文書として、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code> <small>(en-US)</small></a> をご覧ください。\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"次のステップ","title":"次のステップ","isH3":false,"content":"<p>IndexedDB の主な特徴と主要な用語を理解できたら、より具体的な作業に入ることができます。API の使い方のチュートリアルについては、<a href=\"/ja/docs/Web/API/IndexedDB_API/Using_IndexedDB\">IndexedDB の使用</a>をご覧ください。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://www.w3.org/TR/IndexedDB/\" class=\"external\" rel=\" noopener\">Indexed Database API 仕様書</a></li>\n  <li><a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB API リファレンス</a></li>\n  <li><a href=\"/ja/docs/Web/API/IndexedDB_API/Using_IndexedDB\">IndexedDB の使用</a></li>\n  <li><a href=\"https://msdn.microsoft.com/en-us/scriptjunkie/gg679063.aspx\" class=\"external\" rel=\" noopener\">IndexedDB — The Store in Your Browser</a></li>\n</ul>"}}],"toc":[{"text":"主な特徴","id":"主な特徴"},{"text":"主な用語","id":"主な用語"},{"text":"次のステップ","id":"次のステップ"},{"text":"関連情報","id":"関連情報"}],"summary":"この記事では IndexedDB の主な特徴を説明し、IndexedDB API の理解に関連する重要な用語を紹介しています。","popularity":0.0003,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"IndexedDB key characteristics and basic terminology","locale":"en-US","native":"English (US)"},{"title":"Caractéristiques clés et terminologie d'IndexedDB","locale":"fr","native":"Français"}],"source":{"folder":"ja/web/api/indexeddb_api/basic_terminology","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/indexeddb_api/basic_terminology/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/IndexedDB_API","title":"IndexedDB API"},{"uri":"/ja/docs/Web/API/IndexedDB_API/Basic_Terminology","title":"IndexedDB の主な特徴と基本用語"}],"pageTitle":"IndexedDB の主な特徴と基本用語 - Web API | MDN","noIndexing":false}}