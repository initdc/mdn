{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CustomElementRegistry.define()","mdn_url":"/ja/docs/Web/API/CustomElementRegistry/define","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><em><code>define()</code></em></li><li><a href=\"/ja/docs/Web/API/CustomElementRegistry/get\"><code>get()</code></a></li><li><a href=\"/ja/docs/Web/API/CustomElementRegistry/upgrade\"><code>upgrade()</code></a></li><li><a href=\"/ja/docs/Web/API/CustomElementRegistry/whenDefined\"><code>whenDefined()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>define()</code></strong> は <a href=\"/ja/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a> インターフェイスのメソッドで、新しいカスタム要素を定義します。</p>\n<p>作成することができるのは、次の 2 種類のカスタム要素です。</p>\n<ul>\n  <li><strong>自律カスタム要素</strong> (Autonomous custom element): 独立した要素です。組み込みの HTML 要素を継承していません。</li>\n  <li><strong>カスタム組み込み要素</strong> (Customized built-in element): 組み込みの HTML 要素を継承し、拡張した要素です。</li>\n</ul>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>customElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> constructor<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<ul>\n  <li>name\n    <ul>\n      <li>: 新しいカスタム要素の名前です。カスタム要素の名前は、少なくとも 1 つのハイフンを含まなければならないことに注意してください。</li>\n    </ul>\n  </li>\n  <li>constructor\n    <ul>\n      <li>: 新しいカスタム要素のコンストラクターです。</li>\n    </ul>\n  </li>\n  <li>options <span class=\"badge inline optional\">省略可</span>\n    <ul>\n      <li>: 要素の定義の仕方を制御するオブジェクト。現在は、次の 1 つのオプションのみに対応しています。</li>\n    </ul>\n  </li>\n  <li><code>extends</code>: 拡張する組み込み要素の名前を示す文字列。<em>カスタム組み込み要素</em>を作成するのに使われる。</li>\n</ul>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>なし。</p>"}},{"type":"prose","value":{"id":"例外","title":"例外","isH3":true,"content":"<dl>\n  <dt id=\"notsupportederror\"><code>NotSupportedError</code> <a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a> に既に同じ名前の項目または同じコンストラクターが含まれている（または既に定義されている）、または <code>extends</code> で<a href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\" class=\"external\" rel=\" noopener\">有効なカスタム要素名</a>が指定されていた場合、または <code>extends</code> で未知の要素を拡張しようとした場合に発生します。</p>\n  </dd>\n  <dt id=\"syntaxerror\"><code>SyntaxError</code> <a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>指定された名前が<a href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\" class=\"external\" rel=\" noopener\">有効なカスタム要素名</a>ではなかった場合に発生します。</p>\n  </dd>\n  <dt id=\"typeerror\"><code>TypeError</code> <a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>参照されたコンストラクターがコンストラクターではなかった場合に発生します。</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>NotSupportedError</code> 例外が多く発生する場合、 <code>define()</code> が失敗しているように思えるかもしれませんが、多くの場合は <a href=\"/ja/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a> に問題があります。</p>\n</div>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"自律カスタム要素","title":"自律カスタム要素","isH3":true,"content":"<p>\n  以下のコードは <a href=\"https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component\" class=\"external\" rel=\" noopener\">popup-info-box-web-component</a>\n  の例から取ったものです (<a href=\"https://mdn.github.io/web-components-examples/popup-info-box-web-component/\" class=\"external\" rel=\" noopener\">ライブでもご覧ください</a>)。\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 要素のクラスを作成</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PopUpInfo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// コンストラクターでは常に super を最初に呼び出す</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// シャドウルートを生成</span>\n    <span class=\"token keyword\">var</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// span を生成</span>\n    <span class=\"token keyword\">var</span> wrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'wrapper'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> icon <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    icon<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'icon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    icon<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabindex'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> info <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'info'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 属性の中身を取り出し、 info の span の中に入れる</span>\n    <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// アイコンを挿入</span>\n    <span class=\"token keyword\">var</span> imgUrl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      imgUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      imgUrl <span class=\"token operator\">=</span> <span class=\"token string\">'img/default.png'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> imgUrl<span class=\"token punctuation\">;</span>\n    icon<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// いくらかの CSS を生成してシャドウ DOM に適用</span>\n    <span class=\"token keyword\">var</span> style <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    style<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'.wrapper {'</span> <span class=\"token operator\">+</span>\n                           <span class=\"token string\">'position: relative;'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token string\">'}'</span> <span class=\"token operator\">+</span>\n\n                         <span class=\"token string\">'.info {'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'font-size: 0.8rem;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'width: 200px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'display: inline-block;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'border: 1px solid black;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'padding: 10px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'background: white;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'border-radius: 10px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'opacity: 0;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'transition: 0.6s all;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'position: absolute;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'bottom: 20px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'left: 10px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'z-index: 3;'</span> <span class=\"token operator\">+</span>\n                          <span class=\"token string\">'}'</span> <span class=\"token operator\">+</span>\n\n                          <span class=\"token string\">'img {'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'width: 1.2rem'</span> <span class=\"token operator\">+</span>\n                          <span class=\"token string\">'}'</span> <span class=\"token operator\">+</span>\n\n                          <span class=\"token string\">'.icon:hover + .info, .icon:focus + .info {'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'opacity: 1;'</span> <span class=\"token operator\">+</span>\n                          <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 生成された要素をシャドウ DOM に取り付ける</span>\n\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>icon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 新しい要素を定義</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'popup-info'</span><span class=\"token punctuation\">,</span> PopUpInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>popup-info</span> <span class=\"token attr-name\">img</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img/alt.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Your card validation code (CVC) is an extra\n                                    security feature — it is the last 3 or 4\n                                    numbers on the back of your card.<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 自律カスタム要素のコンストラクターは <a href=\"/ja/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a> を継承していなければなりません。</p>\n</div>"}},{"type":"prose","value":{"id":"カスタム組み込み要素","title":"カスタム組み込み要素","isH3":true,"content":"<p>\n  以下のコードは <a href=\"https://github.com/mdn/web-components-examples/tree/master/word-count-web-component\" class=\"external\" rel=\" noopener\">word-count-web-component</a>\n  の例から取ったものです (<a href=\"https://mdn.github.io/web-components-examples/word-count-web-component/\" class=\"external\" rel=\" noopener\">ライブでもご覧ください</a>)。\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// 要素のクラスを作成</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WordCount</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLParagraphElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// コンストラクターでは常に super を最初に呼び出す</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 要素の親要素の語数を数える</span>\n    <span class=\"token keyword\">var</span> wcParent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>textContent\n      <span class=\"token keyword\">return</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token string\">'語数: '</span> <span class=\"token operator\">+</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span>wcParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// シャドウルートを生成</span>\n    <span class=\"token keyword\">var</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// テキストノードを生成し、語数を追加</span>\n    <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// シャドウルートに追加</span>\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 要素の内容が変化した際に語数を更新</span>\n    <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token string\">'語数: '</span> <span class=\"token operator\">+</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span>wcParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      text<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 新しい要素を定義</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'word-count'</span><span class=\"token punctuation\">,</span> WordCount<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token string\">'p'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>word-count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"シャドウルートを取り付けられないようにする要素の作成","title":"シャドウルートを取り付けられないようにする要素の作成","isH3":true,"content":"<p>要素に使用されているクラスが、文字列 `shadow` を返す静的プロパティ <code>disabledFeatures</code> を含んでいる場合、 <a href=\"/ja/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a> は <a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a> の <code>NotSupportedError</code> を返すようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">PopUpInfo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">disabledFeatures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'shadow'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// これは要素が定義されたときにエラーが発生するようになります。</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/custom-elements.html#dom-customelementregistry-define-dev","title":"HTML Standard"}],"query":"api.CustomElementRegistry.define"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.CustomElementRegistry.define","dataURL":"/ja/docs/Web/API/CustomElementRegistry/define/bcd.json"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"define() は CustomElementRegistry インターフェイスのメソッドで、新しいカスタム要素を定義します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CustomElementRegistry.define()","locale":"en-US","native":"English (US)"},{"title":"CustomElementRegistry.define()","locale":"es","native":"Español"},{"title":"CustomElementRegistry.define()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"CustomElementRegistry.define()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/customelementregistry/define","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/customelementregistry/define/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/CustomElementRegistry","title":"CustomElementRegistry"},{"uri":"/ja/docs/Web/API/CustomElementRegistry/define","title":"CustomElementRegistry.define()"}],"pageTitle":"CustomElementRegistry.define() - Web API | MDN","noIndexing":false}}