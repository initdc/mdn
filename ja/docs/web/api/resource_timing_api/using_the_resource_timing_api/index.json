{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Using the Resource Timing API","mdn_url":"/ja/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Resource_Timing_API\">Resource Timing API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API\">Using the Resource Timing API</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/ja/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/ja/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/performance_property\"><code>performance_property</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Resource Timing API</strong> は、アプリケーションのリソースのロードに関する詳細なネットワークタイミングデータを取得して分析する方法を提供します。アプリケーションはタイミングメトリックを使用して、たとえば、<a href=\"/ja/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a>、<a href=\"/ja/docs/Web/SVG/Element/svg\"><code>&lt;SVG&gt;</code></a>、画像、スクリプトなど特定のリソースを取得するのにかかる時間を判断できます。</p>\n<p>The interface's properties create a <em>resource loading timeline</em> with <a href=\"/ja/docs/Web/API/DOMHighResTimeStamp\" title=\"high-resolution timestamps\"><code>high-resolution timestamps</code></a> for network events such as redirect start and end times, fetch start, DNS lookup start and end times, response start and end times, etc. The interface also includes other properties that provide data about the size of the fetched resource as well as the <em>type</em> of resource that initiated the fetch.</p>\n<p>This document shows the use of Resource Timing interfaces. For more details about the interfaces, including examples, see each interface's reference page and the references in the <a href=\"#see_also\">See also</a> section.</p>\n<p>A <em>live</em> version of the examples is available on <a href=\"https://mdn.github.io/dom-examples/performance-apis/Using_the_Resource_Timing_API.html\" class=\"external\" rel=\" noopener\">Github</a>, as is the <a href=\"https://github.com/mdn/dom-examples/blob/master/performance-apis/Using_the_Resource_Timing_API.html\" class=\"external\" rel=\" noopener\">source code</a>. Pull requests and <a href=\"https://github.com/mdn/dom-examples/issues\" class=\"external\" rel=\" noopener\">bug reports</a> are welcome.</p>"}},{"type":"prose","value":{"id":"resource_loading_phases","title":"Resource loading phases","isH3":false,"content":"<p>An application can get timestamps for the various phases of resource loading such as redirection, DNS lookup, and TCP connection setup. Those phases and their property names are illustrated in Figure 1.</p>\n<p>\n  <img src=\"https://mdn.mozillademos.org/files/12093/ResourceTiming-TimeStamps.jpg\" alt=\"Graphic of Resource Timing timestamps\" loading=\"lazy\">\n  Figure 1. Resource timing properties\n</p>\n<p>An application developer can use the property values to calculate the length of time a phase takes and that information can help diagnose performance issues.</p>"}},{"type":"prose","value":{"id":"timing_resource_loading_phases","title":"Timing resource loading phases","isH3":false,"content":"<p>The following example illustrates using the resource timing properties to calculate the amount of time the following phases take: redirection (<a href=\"/ja/docs/Web/API/PerformanceResourceTiming/redirectStart\" title=\"redirectStart\"><code>redirectStart</code></a> and <a href=\"/ja/docs/Web/API/PerformanceResourceTiming/redirectEnd\" title=\"redirectEnd\"><code>redirectEnd</code></a> ), DNS lookup (<a href=\"/ja/docs/Web/API/PerformanceResourceTiming/domainLookupStart\" title=\"domainLookupStart\"><code>domainLookupStart</code></a> and <a href=\"/ja/docs/Web/API/PerformanceResourceTiming/domainLookupEnd\" title=\"domainLookupEnd\"><code>domainLookupEnd</code></a>), TCP handshake (<a href=\"/ja/docs/Web/API/PerformanceResourceTiming/connectStart\" title=\"connectStart\"><code>connectStart</code></a> and <a href=\"/ja/docs/Web/API/PerformanceResourceTiming/connectEnd\" title=\"connectEnd\"><code>connectEnd</code></a>), and response (<a href=\"/ja/docs/Web/API/PerformanceResourceTiming/responseStart\" title=\"responseStart\"><code>responseStart</code></a> and <a href=\"/ja/docs/Web/API/PerformanceResourceTiming/responseEnd\" title=\"responseEnd\"><code>responseEnd</code></a>). This example also calculates the time from the start of the fetch and request start phases (<a href=\"/ja/docs/Web/API/PerformanceResourceTiming/fetchStart\" title=\"fetchStart\"><code>fetchStart</code></a> and <a href=\"/ja/docs/Web/API/PerformanceResourceTiming/requestStart\" title=\"requestStart\"><code>requestStart</code></a>, respectively), until the response has ended (<a href=\"/ja/docs/Web/API/PerformanceResourceTiming/responseEnd\" title=\"responseEnd\"><code>responseEnd</code></a>). This timing data provides a detailed profile of the resource loading phases and this data can be used to help identify performance bottlenecks.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">calculate_load_times</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Check performance support</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>performance <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"= Calculate Load Times: performance NOT supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Get a list of \"resource\" performance entries</span>\n  <span class=\"token keyword\">var</span> resources <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resource\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resources <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">||</span> resources<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"= Calculate Load Times: there are NO `resource` performance records\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"= Calculate Load Times\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> resources<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"== Resource[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"] - \"</span> <span class=\"token operator\">+</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Redirect time</span>\n    <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>redirectEnd <span class=\"token operator\">-</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>redirectStart<span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Redirect time = \"</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// DNS time</span>\n    t <span class=\"token operator\">=</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>domainLookupEnd <span class=\"token operator\">-</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>domainLookupStart<span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... DNS lookup time = \"</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// TCP handshake time</span>\n    t <span class=\"token operator\">=</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>connectEnd <span class=\"token operator\">-</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>connectStart<span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... TCP time = \"</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Secure connection time</span>\n    t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>secureConnectionStart <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>connectEnd <span class=\"token operator\">-</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>secureConnectionStart<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Secure connection time = \"</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Response time</span>\n    t <span class=\"token operator\">=</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>responseEnd <span class=\"token operator\">-</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>responseStart<span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Response time = \"</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Fetch until response end</span>\n    t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fetchStart <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>responseEnd <span class=\"token operator\">-</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fetchStart<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Fetch until response end time = \"</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Request start until reponse end</span>\n    t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>requestStart <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>responseEnd <span class=\"token operator\">-</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>requestStart<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Request start until response end time = \"</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Start until reponse end</span>\n    t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>startTime <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>responseEnd <span class=\"token operator\">-</span> resources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>startTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Start until response end time = \"</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"size_matters","title":"Size matters?","isH3":false,"content":"<p>アプリケーションのリソースのサイズはアプリケーションのパフォーマンスに影響を与える可能性があるため、リソースサイズに関する正確なデータを取得することが重要になる可能性があります（特に非ホストリソースの場合）。<a href=\"/ja/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a> インターフェースには、リソースに関するサイズデータを取得するために使用できる 3 つのプロパティがあります。 <a href=\"/ja/docs/Web/API/PerformanceResourceTiming/transferSize\" title=\"transferSize\"><code>transferSize</code></a> プロパティは、レスポンスヘッダフィールドとレスポンスペイロードボディを含む、取得したリソースのサイズ（オクテット単位）を返します。<a href=\"/ja/docs/Web/API/PerformanceResourceTiming/encodedBodySize\" title=\"encodedBodySize\"><code>encodedBodySize</code></a> プロパティは、適用されたコンテンツコーディングを削除する前に、フェッチ（HTTP またはキャッシュ）から受け取ったサイズ（オクテット単位）を返します。<a href=\"/ja/docs/Web/API/PerformanceResourceTiming/decodedBodySize\" title=\"decodedBodySize\"><code>decodedBodySize</code></a> は、適用されたコンテンツコーディングを削除した後、メッセージ本文のフェッチ（HTTP またはキャッシュ）から受け取ったサイズ（オクテット単位）を返します。</p>\n<p>次の例は、これら 3 つのプロパティの使い方を示しています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">display_size_data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Check for support of the PerformanceResourceTiming.*size properties and print their values</span>\n  <span class=\"token comment\">// if supported.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>performance <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"= Display Size Data: performance NOT supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resource\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"= Display Size Data: performance.getEntriesByType() is  NOT supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// For each \"resource\", display its *Size property values</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"= Display Size Data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"== Resource[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"] - \"</span> <span class=\"token operator\">+</span> list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"decodedBodySize\"</span> <span class=\"token keyword\">in</span> list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... decodedBodySize[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"] = \"</span> <span class=\"token operator\">+</span> list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>decodedBodySize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... decodedBodySize[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"] = NOT supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"encodedBodySize\"</span> <span class=\"token keyword\">in</span> list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... encodedBodySize[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"] = \"</span> <span class=\"token operator\">+</span> list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>encodedBodySize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... encodedBodySize[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"] = NOT supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"transferSize\"</span> <span class=\"token keyword\">in</span> list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... transferSize[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"] = \"</span> <span class=\"token operator\">+</span> list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>transferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... transferSize[\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\"] = NOT supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"managing_the_resource_buffer","title":"Managing the resource buffer","isH3":false,"content":"<p>ブラウザは、リソースタイミングバッファ内で少なくとも 150 のリソースタイミングパフォーマンスエントリをサポートする必要がありますが、アプリケーションによっては、その制限を超えるリソースを使用することがあります。開発者がバッファサイズを管理しやすくするために、Resource Timing は<a href=\"/ja/docs/Web/API/Performance\"><code>Performance</code></a>インターフェースを拡張する 2 つのメソッドを定義します。<a href=\"/ja/docs/Web/API/Performance/clearResourceTimings\" title=\"clearResourceTimings()\"><code>clearResourceTimings()</code></a> メソッドは、ブラウザのリソースパフォーマンスエントリバッファからすべての \"リソース\"タイプのパフォーマンスエントリを削除します。 <a href=\"/ja/docs/Web/API/Performance/setResourceTimingBufferSize\" title=\"setResourceTimingBufferSize()\"><code>setResourceTimingBufferSize()</code></a> メソッドは、リソースパフォーマンスエントリのバッファサイズを、指定された数のリソースに設定します<a href=\"/ja/docs/Web/API/PerformanceEntry\" title=\"performance entries\"><code>performance entries</code></a>.。</p>\n<p>次の例は、これら 2 つの方法の使用方法を示しています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">clear_resource_timings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>performance <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"= performance.clearResourceTimings(): peformance NOT supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Check if Performance.clearResourceTiming() is supported</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"= Print performance.clearResourceTimings()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> supported <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> performance<span class=\"token punctuation\">.</span>clearResourceTimings <span class=\"token operator\">==</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>supported<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Performance.clearResourceTimings() = supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    performance<span class=\"token punctuation\">.</span><span class=\"token function\">clearResourceTimings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Performance.clearResourceTiming() = NOT supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// getEntries should now return zero</span>\n  <span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resource\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Performance data buffer cleared\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Performance data buffer NOT cleared (still have `\"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token string\">\"` items\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">set_resource_timing_buffer_size</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>performance <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"= performance.setResourceTimingBufferSize(): peformance NOT supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Check if Performance.setResourceTimingBufferSize() is supported</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"= performance.setResourceTimingBufferSize()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> supported <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> performance<span class=\"token punctuation\">.</span>setResourceTimingBufferSize <span class=\"token operator\">==</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>supported<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Performance.setResourceTimingBufferSize() = supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    performance<span class=\"token punctuation\">.</span><span class=\"token function\">setResourceTimingBufferSize</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"... Performance.setResourceTimingBufferSize() = NOT supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>The <a href=\"/ja/docs/Web/API/Performance\"><code>Performance</code></a> interface has a <a href=\"/ja/docs/Web/API/Performance/resourcetimingbufferfull_event\" title=\"onresourcetimingbufferfull\"><code>onresourcetimingbufferfull</code></a> event handler that gets called (with an <a href=\"/ja/docs/Web/API/Event\"><code>Event</code></a> of type <a href=\"/ja/docs/Web/API/Event/type\"><code>Event.type</code></a> of \"<code><a href=\"/ja/docs/Web/Reference/Events/resourcetimingbufferfull\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">resourcetimingbufferfull</a></code>\") when the browser's resource performance entry buffer is full. The following code example sets a <a href=\"/ja/docs/Web/API/Performance/resourcetimingbufferfull_event\" title=\"onresourcetimingbufferfull\"><code>onresourcetimingbufferfull</code></a> event callback in the <code>init()</code> function.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">buffer_full</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WARNING: Resource Timing Buffer is FULL!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">set_resource_timing_buffer_size</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// load some image to trigger \"resource\" fetch events</span>\n  <span class=\"token keyword\">var</span> image1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  image1<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"https://developer.mozilla.org/static/img/opengraph-logo.png\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> image2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  image2<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"http://mozorg.cdn.mozilla.net/media/img/firefox/firefox-256.e2c1fc556816.jpg\"</span>\n\n  <span class=\"token comment\">// Set a callback if the resource buffer becomes filled</span>\n  performance<span class=\"token punctuation\">.</span>onresourcetimingbufferfull <span class=\"token operator\">=</span> buffer_full<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"coping_with_cors","title":"Coping with CORS","isH3":false,"content":"<p>When <a href=\"/ja/docs/Glossary/CORS\">CORS</a> is in effect, many of the timing properties' values are returned as zero unless the server's access policy permits these values to be shared. This requires the server providing the resource to send the <a href=\"/ja/docs/Web/HTTP/Headers/Timing-Allow-Origin\"><code>Timing-Allow-Origin</code></a> HTTP response header with a value specifying the origin or origins which are allowed to get the restricted timestamp values.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> The properties which are returned as 0 by default when loading a resource from a domain other than the one of the web page itself: <code>redirectStart</code>, <code>redirectEnd</code>, <code>domainLookupStart</code>, <code>domainLookupEnd</code>, <code>connectStart</code>, <code>connectEnd</code>, <code>secureConnectionStart</code>, <code>requestStart</code>, and <code>responseStart</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"あわせて参照","title":"あわせて参照","isH3":false,"content":"<ul>\n  <li><a href=\"https://firefox-source-docs.mozilla.org/devtools-user/performance/index.html\" class=\"external\" rel=\" noopener\">Firefox Performance Tool</a></li>\n  <li><a href=\"https://w3c.github.io/resource-timing/\" class=\"external\" rel=\" noopener\">Resource Timing Standard</a>; W3C Editor's Draft</li>\n  <li><a href=\"https://www.stevesouders.com/blog/2014/08/21/resource-timing-practical-tips/\" class=\"external\" rel=\" noopener\">Resource Timing practical tips</a>; Steve Souders; 2014 August 21</li>\n  <li><a href=\"https://googledevelopers.blogspot.ca/2013/12/measuring-network-performance-with.html\" class=\"external\" rel=\" noopener\">Measuring network performance with Resource Timing API</a>; Ilya Grigorik; 2013 December 11</li>\n</ul>"}}],"toc":[{"text":"Resource loading phases","id":"resource_loading_phases"},{"text":"Timing resource loading phases","id":"timing_resource_loading_phases"},{"text":"Size matters?","id":"size_matters"},{"text":"Managing the resource buffer","id":"managing_the_resource_buffer"},{"text":"Coping with CORS","id":"coping_with_cors"},{"text":"あわせて参照","id":"あわせて参照"}],"summary":"Resource Timing API は、アプリケーションのリソースのロードに関する詳細なネットワークタイミングデータを取得して分析する方法を提供します。アプリケーションはタイミングメトリックを使用して、たとえば、XMLHttpRequest、<SVG>、画像、スクリプトなど特定のリソースを取得するのにかかる時間を判断できます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using the Resource Timing API","locale":"en-US","native":"English (US)"},{"title":"Using the Resource Timing API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/resource_timing_api/using_the_resource_timing_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/resource_timing_api/using_the_resource_timing_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Resource_Timing_API","title":"Resource Timing API"},{"uri":"/ja/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API","title":"Using the Resource Timing API"}],"pageTitle":"Using the Resource Timing API - Web API | MDN","noIndexing":false}}