{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CSS Painting APIを使用する","mdn_url":"/ja/docs/Web/API/CSS_Painting_API/Guide","locale":"ja","native":"日本語","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>CSS Paint API を用いると開発者がプログラムで画像を定義できます。CSS の <a href=\"/ja/docs/Web/CSS/background-image\"><code>background-image</code></a>, <a href=\"/ja/docs/Web/CSS/border-image-source\"><code>border-image</code></a>, <a href=\"/ja/docs/Web/CSS/mask-image\"><code>mask-image</code></a> など CSS 画像を呼び出せる場所ならどこでも使用できるように設計されています。</p>\n<p>CSS スタイルシートで使用される画像をプログラムで作成するには、いくつかのステップを踏む必要があります:</p>\n<ol>\n  <li><a href=\"/en-US/docs/Web/API/PaintWorklet/registerPaint\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">registerPaint() (en-US)</a> 関数を用いたペイント Worklet を定義します</li>\n  <li>その Worklet を登録します</li>\n  <li><code><a href=\"/ja/docs/Web/CSS/image/paint\"><code>paint()</code></a></code> という CSS 関数を読み込みます</li>\n</ol>\n<p>これらの手順を詳しく説明するために、このヘッダーのようなハーフハイライトの背景を作成することから始めます:</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/CSS_Painting_API/Guide/mycoolheader.png\" alt=\"Text reading 'My Cool Header' with a solid yellow background image block on the bottom left two thirds of the header\" width=\"239\" height=\"54\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"css_paint_worklet","title":"CSS paint worklet","isH3":false,"content":"<p>外部スクリプトファイルでは、<a href=\"/en-US/docs/Web/API/PaintWorklet/registerPaint\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">registerPaint() (en-US)</a> 関数を使用して <a href=\"/en-US/docs/Web/API/PaintWorklet\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">CSS Paint worklet (en-US)</a> の名前をつけています。この関数には 2 つの引数が必要です。最初の引数はその Worklet の名前です — これは CSS で要素にスタイルを適用する際に <code>paint()</code> 関数のパラメーターとして渡されます。2 つ目の引数は、すべての魔法を行うクラスで、その中でコンテキストオプションと、イメージとなる 2 次元キャンバスに何を描画するかを定義します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">registerPaint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'headerHighlight'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">/*\n       アルファ透明度を許可するかどうかを定義します。既定では true にします。\n       false に設定した場合、すべてのキャンバスに\n       使用されている色は完全に不透明になります。\n    */</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">contextOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">alpha</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/*\n        ctx は 2D の描画コンテキストで\n        HTML5 Canvas API のサブセットです。\n    */</span>\n  <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'hsla(55, 90%, 60%, 1.0)'</span><span class=\"token punctuation\">;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">/* 順序: x, y, w, h */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このクラスの例では、<code>contextOptions()</code> を用いて 1 つだけコンテキストオプションを定義しています。そこではアルファ透明度を許可するシンプルなオブジェクトを返しています。</p>\n<p>それでは <code>paint()</code> 関数を用いてキャンバスに描画していきます。</p>\n<p><code>paint()</code> 関数は 3 つの引数を持てます。ここでは最初の引数だけ渡していて、それはレンダリングコンテキスト(後ほど詳しく説明します)といい、ふつう <code>ctx</code> という変数名で表されます。2D レンダリングコンテキストは <a href=\"/ja/docs/Web/API/Canvas_API\">HTML5 Canvas API</a> のサブセットで、Houdini (<code>PaintRenderingContext2D</code>と呼ばれる) で利用可能なバージョンは Canvas API のほとんどすべての機能を含むサブセットですが、そのうち <code>CanvasImageData</code>, <code>CanvasUserInterface</code>, <code>CanvasText</code>, <code>CanvasTextDrawingStyles</code> の各 API は <a href=\"https://drafts.css-houdini.org/css-paint-api-1/#2d-rendering-context)\" class=\"external\" rel=\" noopener\">除かれています</a>。</p>\n<p>黄色の影をつくるために <a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/fillStyle\"><code>fillStyle</code></a> を <code>hsla(55, 90%, 60%, 1.0)</code> と定義し、その色の矩形を作成するために <code>fillRect()</code> を呼び出します。<a href=\"/ja/docs/Web/API/CanvasRenderingContext2D/fillRect\"><code>fillRect()</code></a> のパラメータは、順に x 軸原点、y 軸原点、幅、高さです。<code>fillRect(0, 15, 200, 20)</code> は、幅 200 単位、高さ 20 単位の矩形を、コンテンツボックスの左端から 0 単位、上端から 15 単位に作成します。</p>\n<p>CSS の <a href=\"/ja/docs/Web/CSS/background-size\"><code>background-size</code></a> と <a href=\"/ja/docs/Web/CSS/background-position\"><code>background-position</code></a> プロパティを使用して、この背景画像のサイズを変更したり、再配置したりすることができますが、これは描画 Worklet で作成した黄色のボックスのデフォルトのサイズと配置です。</p>\n<p>この例はシンプルなものにしてみました。より多くのオプションについては、<a href=\"/ja/docs/Web/HTML/Element/canvas\">canvas のドキュメント</a>を参照してください。また、このチュートリアルの後半では、少し複雑さを追加しています。</p>"}},{"type":"prose","value":{"id":"描画_worklet_を使用する","title":"描画 Worklet を使用する","isH3":false,"content":"<p>描画 Worklet を使用するためには、<a href=\"/ja/docs/Web/API/Worklet/addModule\"><code>addModule()</code></a> を用いて登録し、HTML 内の目的の DOM ノードに適用される CSS セレクターのスタイルに含める必要があります。</p>"}},{"type":"prose","value":{"id":"worklet_を登録する","title":"Worklet を登録する","isH3":true,"content":"<p>描画 Worklet とデザインは、上に示した外部スクリプトで行われました。この <a href=\"/en-US/docs/Web/API/PaintWorklet\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">Worklet (en-US)</a> をメインスクリプトから登録する必要があります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>paintWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nameOfPaintWorkletFile.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これは、メイン HTML 内の <code>&lt;script&gt;</code> またはドキュメントからリンクされた外部 JavaScript ファイル内の、描画 Worklet の <code>addModule()</code> メソッドを使用して行うことができます。</p>\n<p>以下の例では、描画 Worklet は Github でホストしています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>paintWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://mdn.github.io/houdini-examples/cssPaint/intro/01partOne/header-highlight.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"css_で描画_worklet_を参照する","title":"CSS で描画 Worklet を参照する","isH3":true,"content":"<p>登録された描画 Worklet ができたら、それを CSS で使用することができます。他の <code>&lt;image&gt;</code> タイプと同様に CSS の <code>paint()</code> 関数を使用し、 描画 Worklet の <code>registerPaint()</code> 関数でセットしたのと同じ文字列識別子を使用してください。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.fancy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>headerHighlight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"一緒につかう","title":"一緒につかう","isH3":true,"content":"<p>そして、ページ上の任意の要素に fancy クラスを追加して、背景として黄色のボックスを追加することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fancy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>My Cool Header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>以下の例は、<a href=\"/ja/docs_Web/API/PaintWorklet#browser_compatibility\">CSS Painting API をサポートしているブラウザー</a>では上の画像のようになります。</p><iframe class=\"sample-code-frame\" title=\"一緒につかう\" id=\"frame_paintapi\" width=\"120\" height=\"120\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/CSS_Painting_API/Guide/_sample_.paintapi.html\" loading=\"lazy\"></iframe>\n<p>ワークレットのスクリプトを弄ることはできませんが、背景画像のサイズと位置を変更するために、<code>background-size</code> と <code>background-position</code> を変更することができます。</p>"}},{"type":"prose","value":{"id":"paintsize","title":"PaintSize","isH3":false,"content":"<p>上の例では、20×200 の単位のボックスを作成し、要素の上端から 15 単位を塗りつぶしました。これは要素の大きさに関係なく同じです。テキストが小さい場合、黄色のボックスは巨大なアンダーラインのように見えます。文字が大きい場合は、最初の 3 文字の上にバーがあるように見えるかもしれません。 背景画像が要素のサイズと相対的なものであればより良いでしょう — 要素の <code>paintSize</code> プロパティを使用して、背景画像が要素のボックスモデルのサイズに比例するようにすることができます。</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/CSS_Painting_API/Guide/mycoolheadersized.png\" alt=\"The background is 50% of the height and 60% of the width of the element\" width=\"554\" height=\"148\" loading=\"lazy\">\n</p>\n<p>上の画像では、背景は要素の大きさに比例しています。3 番目の例では、ブロックレベルの要素に <code>width: 50%</code>; を設定しているため、要素が狭くなり、その結果、背景画像が狭くなります。</p>\n<p>これを行うためのコードは次のようになります:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">registerPaint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'headerHighlight'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">contextOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">alpha</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/*\n        ctx は 2D 描画コンテキスト\n        size は paintSize, 描画するボックスの高さ(height)と幅(width)を持つ\n    */</span>\n\n  <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'hsla(55, 90%, 60%, 1.0)'</span><span class=\"token punctuation\">;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.6</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このコード例は、最初の例とは 2 つの違いがあります:</p>\n<ol>\n  <li><code>paint()</code> の第 2 引数として描画サイズを使用しています。</li>\n  <li>矩形の寸法と位置を、絶対値ではなく、要素ボックスのサイズに相対するように変更しました。</li>\n</ol>\n<p><code>paint()</code> に第 2 引数を渡すことで、<code>.width</code> と <code>.height</code> プロパティを使って要素の幅と高さにアクセスすることができます。</p>\n<p>私たちのヘッダーは、サイズに応じてハイライトが変化するようになりました。</p>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>paintWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://mdn.github.io/houdini-examples/cssPaint/intro/02partTwo/header-highlight.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: css hidden notranslate\"><code><span class=\"token selector\">.fancy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>headerHighlight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.half</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fancy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Largest Header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h6</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fancy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Smallest Header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h6</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fancy half<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>50% width header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>Worklet のスクリプトをいじることはできませんが、要素の <code>font-size</code> と <code>width</code> を変更して背景画像のサイズを変更できます。</p>\n<p>以下の例は、CSS Painting API をサポートしているブラウザーでは上の画像のようになります。</p><iframe class=\"sample-code-frame\" title=\"PaintSize\" id=\"frame_example2\" width=\"300\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/CSS_Painting_API/Guide/_sample_.example2.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"カスタムプロパティ","title":"カスタムプロパティ","isH3":false,"content":"<p>Worklet は、要素のサイズにアクセスするだけでなく、CSS のカスタムプロパティや通常の CSS プロパティにもアクセスすることができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">registerPaint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cssPaintFunctionName'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">inputProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'PropertyName1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--customPropertyName2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n     <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">inputArguments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'&lt;color&gt;'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n     <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">contextOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">alpha</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n     <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">drawingContext<span class=\"token punctuation\">,</span> elementSize<span class=\"token punctuation\">,</span> styleMap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token comment\">// 描画コードはここに書く</span>\n     <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>paint()</code> 関数の 3 つの引数には、描画コンテキスト、描画サイズ、プロパティが含まれます。プロパティにアクセスできるようにするために、静的な <code>inputProperties()</code> メソッドをインクルードしています。これは、通常のプロパティや<a href=\"/ja/docs/Web/CSS/CSS_Variables\">カスタムプロパティ</a>を含む CSS プロパティへの動的なアクセスを提供し、プロパティ名の <a href=\"/ja/docs/Glossary/array\"><code>array</code></a> を返します。最後に<code>inputArguments</code> について見ていきます。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":true,"content":"<p>3 種類の色と 3 種類の幅の間で周回する背景画像を使って、項目一覧を作成してみましょう。</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/CSS_Painting_API/Guide/boxbg.png\" alt=\"The width and color of the background image changes based on the custom properties\" width=\"739\" height=\"255\" loading=\"lazy\">\n</p>\n<p>この CSS では、<code>--boxColor</code> と <code>--widthSubtractor</code> のカスタム プロパティを使用して、作成した背景ボックスの色と幅の減算器を指定しています。</p>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 13<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 14<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 15<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 17<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>paintWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://mdn.github.io/houdini-examples/cssPaint/intro/worklets/boxbg.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">li</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>boxbg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token property\">--boxColor</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>55<span class=\"token punctuation\">,</span> 90%<span class=\"token punctuation\">,</span> 60%<span class=\"token punctuation\">,</span> 1.0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">li:nth-of-type(3n)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">--boxColor</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>155<span class=\"token punctuation\">,</span> 90%<span class=\"token punctuation\">,</span> 60%<span class=\"token punctuation\">,</span> 1.0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token property\">--widthSubtractor</span><span class=\"token punctuation\">:</span> 20<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">li:nth-of-type(3n+1)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">--boxColor</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 90%<span class=\"token punctuation\">,</span> 60%<span class=\"token punctuation\">,</span> 1.0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token property\">--widthSubtractor</span><span class=\"token punctuation\">:</span> 40<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Worklet ではこれらのカスタムプロパティを参照することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">registerPaint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'boxbg'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">contextOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">alpha</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/*\n     この関数を使用して、要素に対して定義されているカスタムプロパティ (または 'height' のような\n     通常のプロパティ) を取得します。指定された配列で返します。\n  */</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">inputProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'--boxColor'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--widthSubtractor'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/*\n       ctx -&gt; 描画コンテキスト\n       size -&gt; paintSize: 幅と高さ\n       props -&gt; properties: get() メソッド\n    */</span>\n\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--boxColor'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>height<span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.4</span> <span class=\"token operator\">-</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--widthSubtractor'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>height<span class=\"token operator\">*</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code>registerPaint()</code> に渡すクラスの <code>inputProperties()</code> メソッドを使用して、<code>boxbg</code> が適用されている要素に設定されている 2 つのカスタムプロパティの値を取得しました。そしてそれらを <code>paint()</code> 関数内で使用します。<code>inputProperties()</code> メソッドは、カスタムプロパティだけでなく、要素に影響するすべてのプロパティを返すことができます。</p>\n<p><code>&lt;script&gt;</code> 内で Worklet を登録するには以下のようにします:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>paintWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://mdn.github.io/houdini-examples/cssPaint/intro/worklet/boxbg.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"例\" id=\"frame_example3\" width=\"300\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/CSS_Painting_API/Guide/_sample_.example3.html\" loading=\"lazy\"></iframe>\n<p>Worklet のスクリプトをいじることはできませんが、カスタムプロパティの値を変更して背景画像の色や幅を変更することはできます。</p>"}},{"type":"prose","value":{"id":"より複雑にしてみる","title":"より複雑にしてみる","isH3":false,"content":"<p>これまでの例は、例えば装飾的に<a href=\"/ja/docs/Learn/CSS/Howto/Generated_content\">生成されたコンテンツ</a>を <a href=\"/ja/docs/Web/CSS/::before\"><code>::before</code></a> で配置したり、<code>background: linear-gradient(yellow, yellow) 0 15px / 200px 20px no-repeat;</code> とするなど、既存の CSS プロパティを使用する方法で再現することができるので、あまり刺激的には見えないかもしれません。CSS Painting API が面白くて強力なのは、変数を渡して自動的にサイズを変更する複雑な画像を作成できることです。</p>\n<p>それではもっと複雑な例を見てみましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">registerPaint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'headerHighlight'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">inputProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'--highColour'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">contextOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">alpha</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">/* どの場所からハイライトを始めるか、寸法をセットする */</span>\n    <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> blockWidth <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> <span class=\"token number\">0.33</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> highlightHeight <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.85</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--highColour'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> blockWidth<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> blockWidth <span class=\"token operator\">+</span> highlightHeight<span class=\"token punctuation\">,</span> highlightHeight <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> x<span class=\"token punctuation\">,</span> highlightHeight <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* 破線を作成 */</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> start <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>blockWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>blockWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>blockWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>highlightHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> highlightHeight <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>blockWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>highlightHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> highlightHeight <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>blockWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token comment\">// paint</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>ここで作られる画像を背景とする小さな HTML を用意します:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fancy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Largest Header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fancy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Medium size header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h6</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fancy<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Smallest Header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h6</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>それぞれのヘッダーは、それぞれ異なった値の <code>--highColor</code> <a href=\"/ja/docs/Web/CSS/CSS_Variables\">カスタムプロパティ</a>を持つことができます。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.fancy</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>headerHighlight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">--highColour</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>155<span class=\"token punctuation\">,</span> 90%<span class=\"token punctuation\">,</span> 60%<span class=\"token punctuation\">,</span> 0.7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h3</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">--highColour</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 90%<span class=\"token punctuation\">,</span> 60%<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h6</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">--highColour</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>355<span class=\"token punctuation\">,</span> 90%<span class=\"token punctuation\">,</span> 60%<span class=\"token punctuation\">,</span> 0.3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>そして、Worklet を登録します</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>paintWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://mdn.github.io/houdini-examples/cssPaint/intro/03partThree/header-highlight.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"より複雑にしてみる\" id=\"frame_example4\" width=\"300\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/CSS_Painting_API/Guide/_sample_.example4.html\" loading=\"lazy\"></iframe>\n<p>この Worklet そのものを編集することはできませんが、CSS や HTML をいじることはできます。ヘッダーの <a href=\"/ja/docs/Web/CSS/float\"><code>float</code></a> と <a href=\"/ja/docs/Web/CSS/clear\"><code>clear</code></a> を試してみるのはどうでしょう？</p>\n<p>上記の背景画像を CSS paint API を使わずに作ってみるのもいいかもしれません。これは可能ですが、作成したい色ごとに異なる、かなり複雑な線形グラデーションを宣言しなければなりません。CSS paint API を使えば、1 つの Worklet を再利用することができ、その場合でも異なる色を渡すことができます。</p>"}},{"type":"prose","value":{"id":"パラメーターを渡す","title":"パラメーターを渡す","isH3":false,"content":"<p>CSS Paint API を使用すると、カスタムプロパティや通常のプロパティにアクセスできるだけでなく、カスタム引数を <code>paint()</code> 関数に渡すこともできます。</p>\n<p>CSS で関数を呼び出すときに、これらの引数を追加することができます。例えばある時、背景を塗りつぶすのではなく、背景をなぞるようにしたいとしましょう — そのために追加の引数を加えておきましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">li</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>hollowHighlights<span class=\"token punctuation\">,</span> stroke<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これで、<code>registerPaint()</code> に渡されるクラスの <code>inputArguments()</code> メソッドを使用して、<code>paint()</code> 関数に追加したカスタム引数にアクセスできるようになりました。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">inputArguments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>実際にアクセスするにはこうします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// カスタム引数を使う</span>\n  <span class=\"token keyword\">const</span> hasStroke <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// stroke 引数が 'stroke' の場合は塗りつぶしはしません</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasStroke <span class=\"token operator\">===</span> <span class=\"token string\">'stroke'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'transparent'</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> colour<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>2 つ以上の引数も渡せます。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">li</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>hollowHighlights<span class=\"token punctuation\">,</span> stroke<span class=\"token punctuation\">,</span> 10px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>また、特定のタイプの引数を指定することもできます。引数の値をリストで <code>get</code> する際に、特に <code>&lt;length&gt;</code> で単位を指定します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">inputArguments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;length&gt;'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この場合は <code>&lt;length&gt;</code> 属性を要求しました。返される配列の最初の要素は <a href=\"/ja/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a> です。2 番目の要素は <a href=\"/en-US/docs/Web/API/CSSStyleValue\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">CSSStyleValue (en-US)</a> です。</p>\n<p>カスタム引数がユニットなどの CSS 値である場合、<code>registerPaint()</code> 関数で取得する際に value type キーワードを使用することで、Typed OM CSSStyleValue クラス (およびサブクラス) を呼び出すことができます。</p>\n<p>それではストロークの幅を何ピクセルにするか、2 番目の引数を追加してみましょう:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">li</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>hollowHighlights<span class=\"token punctuation\">,</span> stroke<span class=\"token punctuation\">,</span> 10px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>引数の値をリストで <code>get</code> する際に、<code>&lt;length&gt;</code> 単位を要求します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">inputArguments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;length&gt;'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これで型と値のプロパティにアクセスできるようになりました。つまり箱から出してすぐにピクセル数と数値型を取得できるということです。(確かに <code>ctx.lineWidth</code> は、長さの単位を持つ値ではなく float を値として受け取りますが、これは例ですから...)</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">const</span> strokeWidth <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>strokeWidth<span class=\"token punctuation\">.</span>unit <span class=\"token operator\">===</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> strokeWidth<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この Worklet のさまざまな部分を制御するためにカスタムプロパティを使用することと、ここに記載されている引数との違いに注目する価値があります。カスタムプロパティ (および実際にはスタイルマップ上のすべてのプロパティ) はグローバルなもので、CSS (および JS) 内の他の場所で使用することができます。</p>\n<p>例えば <code>paint()</code> 関数内で色を設定するために <code>--mainColor</code> を用意するのは便利ですが、これは CSS の他の場所で色を設定するのにも使えます。これを paint のためだけに特別に変更したい場合は、かなり難しいかもしれません。そこで便利なのがカスタム引数です。もう一つの考え方としては、引数は実際に描画するものを制御するために設定され、プロパティはスタイルを制御するために設定されるということです。</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/CSS_Painting_API/Guide/hollowfilled.png\" alt=\"The list items have a background image that is either pink, purple or green, with different stroke widths, and the green one being filled.\" width=\"327\" height=\"292\" loading=\"lazy\">\n</p>\n<p>これでこの API の本当のメリットが見えてきました。カスタムプロパティと <code>paint()</code> 関数の引数の両方を使って CSS から無数の描画パラメータを制御できるようになれば、再利用可能で制御性の高いスタイリング関数を作り始めることができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">registerPaint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hollowHighlights'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">inputProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'--boxColor'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// `paint` 関数に渡されるカスタム引数</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">inputArguments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">contextOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">alpha</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ctx   -&gt; 描画コンテキスト</span>\n    <span class=\"token comment\">// size  -&gt; 描画したいボックスの大きさ</span>\n    <span class=\"token comment\">// props -&gt; 要素に存在するカスタププロパティのリスト</span>\n  <span class=\"token comment\">// args  -&gt; cssから paint() 関数を呼ばれた際のカスタム引数のリスト</span>\n\n    <span class=\"token comment\">// どの場所からハイライトを始めるか、寸法</span>\n    <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> blockWidth <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> <span class=\"token number\">0.33</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> blockHeight <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.85</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// CSS から paint() 関数に渡された値</span>\n    <span class=\"token keyword\">const</span> colour <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'--boxColor'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> strokeType <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> strokeWidth <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\">// 線幅を設定する</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> strokeWidth <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> strokeWidth<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 塗りつぶしタイプを設定する</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> strokeType <span class=\"token operator\">===</span> <span class=\"token string\">'stroke'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'transparent'</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> colour<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> strokeType <span class=\"token operator\">===</span> <span class=\"token string\">'filled'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> colour<span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> colour<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>strokeStyle <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 四角</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> blockWidth<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> blockWidth <span class=\"token operator\">+</span> blockHeight<span class=\"token punctuation\">,</span> blockHeight <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> x<span class=\"token punctuation\">,</span> blockHeight <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> x<span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 破線</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> start <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span> blockWidth <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> blockWidth <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> blockWidth <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span> <span class=\"token operator\">+</span> blockHeight<span class=\"token punctuation\">,</span> blockHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> blockWidth <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> blockHeight<span class=\"token punctuation\">,</span> blockHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span> blockWidth <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">closePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">stroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token punctuation\">}</span> <span class=\"token comment\">// paint</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>私たちは、異なる色、線幅を設定し、背景画像が塗りつぶされるべきか、中空になるべきかを選択することができます:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">li</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">--boxColor</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>155<span class=\"token punctuation\">,</span> 90%<span class=\"token punctuation\">,</span> 60%<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>hollowHighlights<span class=\"token punctuation\">,</span> stroke<span class=\"token punctuation\">,</span> 5px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">li:nth-of-type(3n)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">--boxColor</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 90%<span class=\"token punctuation\">,</span> 60%<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>hollowHighlights<span class=\"token punctuation\">,</span> filled<span class=\"token punctuation\">,</span>  3px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">li:nth-of-type(3n+1)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">--boxColor</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hsla</span><span class=\"token punctuation\">(</span>355<span class=\"token punctuation\">,</span> 90%<span class=\"token punctuation\">,</span> 60%<span class=\"token punctuation\">,</span> 0.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>hollowHighlights<span class=\"token punctuation\">,</span> stroke<span class=\"token punctuation\">,</span> 1px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 13<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 14<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 15<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item 17<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>item<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>私たちの作った Worklet を登録するには以下のようにします:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>paintWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://mdn.github.io/houdini-examples/cssPaint/intro/worklets/hollow.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"パラメーターを渡す\" id=\"frame_example5\" width=\"300\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/CSS_Painting_API/Guide/_sample_.example5.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/CSS_Painting_API\">CSS Painting API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/CSS_Typed_OM_API\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">CSS Typed Object Model API (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"CSS paint worklet","id":"css_paint_worklet"},{"text":"描画 Worklet を使用する","id":"描画_worklet_を使用する"},{"text":"PaintSize","id":"paintsize"},{"text":"カスタムプロパティ","id":"カスタムプロパティ"},{"text":"より複雑にしてみる","id":"より複雑にしてみる"},{"text":"パラメーターを渡す","id":"パラメーターを渡す"},{"text":"関連情報","id":"関連情報"}],"summary":"CSS Paint API を用いると開発者がプログラムで画像を定義できます。CSS の background-image, border-image, mask-image など CSS 画像を呼び出せる場所ならどこでも使用できるように設計されています。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Using the CSS Painting API","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/css_painting_api/guide","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/css_painting_api/guide/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/CSS_Painting_API","title":"CSS Painting API"},{"uri":"/ja/docs/Web/API/CSS_Painting_API/Guide","title":"CSS Painting APIを使用する"}],"pageTitle":"CSS Painting APIを使用する - Web API | MDN","noIndexing":false}}