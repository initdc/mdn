{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Cache.put()","mdn_url":"/ja/docs/Web/API/Cache/put","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Cache/add\"><code>add()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/addAll\"><code>addAll()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/delete\"><code>delete()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/keys\"><code>keys()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/match\"><code>match()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/matchAll\"><code>matchAll()</code></a></li><li><em><code>put()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/ja/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/ja/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/ja/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/ja/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/ja/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/ja/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/ja/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a> インターフェイスの <strong><code>put()</code></strong> メソッドを使用すると、キーと値のペアを現在の <a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a> オブジェクトに追加できます。</p>\n<p>多くの場合、1 つ以上のリクエストを <a href=\"/ja/docs/Web/API/fetch\" title=\"fetch()\"><code>fetch()</code></a> して、その結果を直接キャッシュに追加したいだけです。 そのような場合、<a href=\"/ja/docs/Web/API/Cache/add\" title=\"Cache.add()\"><code>Cache.add()</code></a> や <a href=\"/ja/docs/Web/API/Cache/addAll\" title=\"Cache.addAll()\"><code>Cache.addAll()</code></a> を使用する方がよいでしょう。 これらは、1 つ以上のそれらの操作の一括指定関数であるためです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bad response status'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>put()</code> は、リクエストに一致する、以前にキャッシュに保存されたキーと値のペアを上書きします。</p>\n</div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <a href=\"/ja/docs/Web/API/Cache/add\"><code>Cache.add</code></a> や <a href=\"/ja/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a> は、200 の範囲にない <code>Response.status</code> 値を持つレスポンスをキャッシュしませんが、<a href=\"/ja/docs/Web/API/Cache/put\" aria-current=\"page\"><code>Cache.put</code></a> では、リクエストとレスポンスのペアを格納できます。 その結果、<a href=\"/ja/docs/Web/API/Cache/put\" aria-current=\"page\"><code>Cache.put</code></a> では可能ですが、<a href=\"/ja/docs/Web/API/Cache/add\"><code>Cache.add</code></a> や <a href=\"/ja/docs/Web/API/Cache/addAll\"><code>Cache.addAll</code></a> は不透明なレスポンスを格納するために使用できません。</p>\n</div>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">cache.put(request, response).then(function() {\n  // リクエストとレスポンスのペアがキャッシュに追加されました\n});\n</pre>"}},{"type":"prose","value":{"id":"パラメーター","title":"パラメーター","isH3":true,"content":"<dl>\n  <dt id=\"request\">request</dt>\n  <dd>\n    <p>キャッシュに追加する <a href=\"/ja/docs/Web/API/Request\"><code>Request</code></a> オブジェクトまたは URL。</p>\n  </dd>\n  <dt id=\"response\">response</dt>\n  <dd>\n    <p>リクエストと合う <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a>。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"戻り値","title":"戻り値","isH3":true,"content":"<p><code>undefined</code> で解決する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> URL スキームが <code>http</code> または <code>https</code> でない場合、Promise は <code>TypeError</code> で拒否します。</p>\n</div>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>この例は、MDN の <a href=\"https://github.com/mdn/sw-test/\" class=\"external\" rel=\" noopener\">sw-test の例</a>からのものです（<a href=\"https://mdn.github.io/sw-test/\" class=\"external\" rel=\" noopener\">sw-test をライブで</a>見る）。 ここでは、<a href=\"/ja/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> が発生するのを待ちます。 次のようなカスタムレスポンスを作成します。</p>\n<ol>\n  <li><a href=\"/ja/docs/Web/API/CacheStorage/match\" title=\"CacheStorage.match()\"><code>CacheStorage.match()</code></a> を使用して、リクエストの一致が <a href=\"/ja/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a> にあるかどうかを確認します。 もしそうなら、それを提供します。</li>\n  <li>そうでない場合は、<code>open()</code> を使用して <code>v1</code> キャッシュを開き、<a href=\"/ja/docs/Web/API/Cache/put\" title=\"Cache.put()\" aria-current=\"page\"><code>Cache.put()</code></a> を使用してデフォルトのネットワークリクエストをキャッシュに入れ、 <code>return response.clone()</code> を使用してデフォルトのネットワークリクエストのクローンを返します。 <code>put()</code> がレスポンスのボディを消費するため、クローンが必要です。</li>\n  <li>これが失敗した場合（ネットワークがダウンしているなど）、フォールバックレスポンスを返します。</li>\n</ol>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> response<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cachedResponse <span class=\"token operator\">=</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  response <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n  caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw-test/gallery/myLittleVader.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/ServiceWorker/#dom-cache-put\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"ja\">Cache: put の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>初期定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.Cache.put","dataURL":"/ja/docs/Web/API/Cache/put/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Service worker の使用</a></li>\n  <li><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/caches\"><code>WorkerGlobalScope.caches</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Cache インターフェイスの put() メソッドを使用すると、キーと値のペアを現在の Cache オブジェクトに追加できます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Cache.put()","locale":"en-US","native":"English (US)"},{"title":"Cache.put()","locale":"fr","native":"Français"},{"title":"Cache.put()","locale":"ko","native":"한국어"},{"title":"Cache.put()","locale":"ru","native":"Русский"},{"title":"Cache.put()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/cache/put","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/cache/put/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Cache","title":"Cache"},{"uri":"/ja/docs/Web/API/Cache/put","title":"Cache.put()"}],"pageTitle":"Cache.put() - Web API | MDN","noIndexing":false}}