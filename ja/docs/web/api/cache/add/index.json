{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Cache.add()","mdn_url":"/ja/docs/Web/API/Cache/add","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><em><code>add()</code></em></li><li><a href=\"/ja/docs/Web/API/Cache/addAll\"><code>addAll()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/delete\"><code>delete()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/keys\"><code>keys()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/match\"><code>match()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/matchAll\"><code>matchAll()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/put\"><code>put()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/ja/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/ja/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/ja/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/ja/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/ja/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/ja/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/ja/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a> インターフェイスの <strong><code>add()</code></strong> メソッドは、URL を受け取り、取得して、指定されたキャッシュに結果のレスポンスオブジェクトを追加します。 <code>add()</code> メソッドは、機能的に次の例と同じです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bad response status'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>より複雑な操作では、 <a href=\"/ja/docs/Web/API/Cache/put\" title=\"Cache.put()\"><code>Cache.put()</code></a> を直接使用する必要があります。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>add()</code> は、リクエストにマッチする、前にキャッシュに保存されたキー/値の組を上書きます。</p>\n</div>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>cache<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// リクエストはすでに cahce に追加されている。</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"request\">request</dt>\n  <dd>\n    <p>キャッシュに加えるリクエスト。 <a href=\"/ja/docs/Web/API/Request\"><code>Request</code></a> オブジェクトか URL を指定できる。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p><code>undefined</code> で解決する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>。</p>"}},{"type":"prose","value":{"id":"例外","title":"例外","isH3":true,"content":"<table>\n  <thead>\n    <tr>\n      <th><strong>例外</strong></th>\n      <th><strong>発生条件</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>TypeError</code></td>\n      <td>URL スキームが <code>http</code> や <code>https</code> ではありません。レスポンスステータスが 200 番台（つまり、成功レスポンス）ではありません。これはリクエストが成功を返さない場合や、リクエストがオリジン間の CORS ではないリクエスト (<em>cross-origin no-cors</em> request) の場合も発生します (この場合、ステータスが常に 0 で報告されます)。</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>このコードブロックは、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a> が発火するのを待ってから、アプリにインストールプロセスを処理するために、<a href=\"/ja/docs/Web/API/ExtendableEvent/waitUntil\" title=\"waitUntil\"><code>waitUntil</code></a> を実行します。この処理は、新しい cache を作成するための <a href=\"/ja/docs/Web/API/CacheStorage/open\"><code>CacheStorage.open</code></a> の呼び出しと、資産を追加するための <a href=\"/ja/docs/Web/API/Cache/add\" aria-current=\"page\"><code>Cache.add</code></a> の使用で構成されています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'install'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw-test/index.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様策定状況","title":"仕様策定状況","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>策定状況</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/ServiceWorker/#dom-cache-add\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"ja\">Cache: add の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>初回定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの対応","id":"ブラウザーの対応","isH3":false,"query":"api.Cache.add","dataURL":"/ja/docs/Web/API/Cache/add/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API/Using_Service_Workers\">サービスワーカーの使用</a></li>\n  <li><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/caches\"><code>WorkerGlobalScope.caches</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様策定状況","id":"仕様策定状況"},{"text":"ブラウザーの対応","id":"ブラウザーの対応"},{"text":"関連情報","id":"関連情報"}],"summary":"Cache インターフェイスの add() メソッドは、URL を受け取り、取得して、指定されたキャッシュに結果のレスポンスオブジェクトを追加します。 add() メソッドは、機能的に次の例と同じです。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Cache.add()","locale":"en-US","native":"English (US)"},{"title":"Cache.add()","locale":"fr","native":"Français"},{"title":"Cache.add()","locale":"ru","native":"Русский"},{"title":"Cache.add()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/cache/add","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/cache/add/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Cache","title":"Cache"},{"uri":"/ja/docs/Web/API/Cache/add","title":"Cache.add()"}],"pageTitle":"Cache.add() - Web API | MDN","noIndexing":false}}