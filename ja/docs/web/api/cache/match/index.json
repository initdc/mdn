{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Cache.match()","mdn_url":"/ja/docs/Web/API/Cache/match","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/Cache/add\"><code>add()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/addAll\"><code>addAll()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/delete\"><code>delete()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/keys\"><code>keys()</code></a></li><li><em><code>match()</code></em></li><li><a href=\"/ja/docs/Web/API/Cache/matchAll\"><code>matchAll()</code></a></li><li><a href=\"/ja/docs/Web/API/Cache/put\"><code>put()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Service Workers API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/ja/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/ja/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/ja/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/ja/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/ja/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/ja/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/ja/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/ja/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a> インターフェイスの <strong><code>match()</code></strong> メソッドは、<a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a> オブジェクトで最初に一致したリクエストに関連付けられた <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> に解決される <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> を返します。 一致が見つからない場合、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> は <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> に解決されます。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<pre class=\"notranslate\">cache.match(request, {options}).then(function(response) {\n  // レスポンスで何かをします\n});\n</pre>"}},{"type":"prose","value":{"id":"パラメーター","title":"パラメーター","isH3":true,"content":"<dl>\n  <dt id=\"request\">request</dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a> 内でレスポンスを見つけようとしている <a href=\"/ja/docs/Web/API/Request\"><code>Request</code></a>。 これは、<a href=\"/ja/docs/Web/API/Request\"><code>Request</code></a> オブジェクトまたは URL です。</p>\n  </dd>\n  <dt id=\"options\">options <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p><code>match</code> 操作のオプションを設定するオブジェクト。 使用可能なオプションは次のとおりです。</p>\n    <ul>\n      <li><code>ignoreSearch</code>: URL のクエリ文字列を無視するかどうかを指定する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>。 例えば、<code>true</code> に設定すると、<code>http://foo.com/?value=bar</code> の <code>?value=bar</code> の部分は、照合の実行時に無視されます。 デフォルトは <code>false</code> です。</li>\n      <li><code>ignoreMethod</code>: <code>true</code> に設定すると、照合操作が <a href=\"/ja/docs/Web/API/Request\"><code>Request</code></a> <code>HTTP</code> メソッドを検証しないようにする <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>（通常、<code>GET</code> および <code>HEAD</code> のみが許可されます）。 デフォルトは <code>false</code> です。</li>\n      <li><code>ignoreVary</code>: <code>true</code> に設定すると、<code>VARY</code> ヘッダーの照合を実行しないように照合操作に指示する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>。 つまり、URL が一致する場合、<a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> オブジェクトに <code>VARY</code> ヘッダーがあるかどうかに関係なく一致します。 デフォルトは <code>false</code> です。</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"戻り値","title":"戻り値","isH3":true,"content":"<p>リクエストに一致する最初の <a href=\"/ja/docs/Web/API/Response\"><code>Response</code></a> に解決する、または一致が見つからない場合は <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> に解決する <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>注</code>: <code>Cache.match()</code> は、一致するすべてのレスポンスの配列で解決するのではなく、最初に一致するレスポンスのみ（つまり、<code>response[0]</code>）で解決することを除いて、基本的に <a href=\"/ja/docs/Web/API/Cache/matchAll\"><code>Cache.matchAll()</code></a> と同じです。</p>\n</div>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>この例は、<a href=\"https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/custom-offline-page/service-worker.js\" class=\"external\" rel=\" noopener\">カスタムオフラインページ</a>の例（<a href=\"https://googlechrome.github.io/samples/service-worker/custom-offline-page/index.html\" class=\"external\" rel=\" noopener\">ライブデモ</a>）からの引用です。 リクエストが失敗した場合、キャッシュを使用して選択したデータを提供します。 <code>catch()</code> 句は、<code>fetch()</code> の呼び出しが例外をスローしたときにトリガーされます。 <code>catch()</code> 句の内部では、 <code>match()</code> を使用して正しいレスポンスを返します。</p>\n<p>この例では、GET HTTP 動詞で取得された HTML 文書のみがキャッシュされます。 <code>if()</code> 条件が false の場合、このフェッチハンドラーはリクエストをインターセプトしません。 他のフェッチハンドラーが登録されている場合、それらは <code>event.respondWith()</code> を呼び出す機会を得ます。 フェッチハンドラーが <code>event.respondWith()</code> を呼び出さない場合、リクエストはブラウザーによって処理され、サービスワーカーが関与していないかのように処理されます。 <code>fetch()</code> が 4xx または 5xx の範囲のレスポンスコードで有効な HTTP レスポンスを返す場合、<code>catch()</code> は呼び出されません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>self<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// これが HTML 文書に対する GET リクエストである場合のみ、event.respondWith() を呼び出します。</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">===</span> <span class=\"token string\">'GET'</span> <span class=\"token operator\">&amp;&amp;</span>\n      event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'accept'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text/html'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'フェッチイベントの処理: '</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'フェッチ失敗、代わりにオフラインページに戻ります。'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token constant\">OFFLINE_CACHE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> cache<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token constant\">OFFLINE_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/ServiceWorker/#dom-cache-match\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Service Workers<br><small lang=\"ja\">Cache match の定義</small></a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td>初期定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.Cache.match","dataURL":"/ja/docs/Web/API/Cache/match/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Service worker の使用</a></li>\n  <li><a href=\"/ja/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/caches\"><code>WorkerGlobalScope.caches</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様","id":"仕様"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"Cache インターフェイスの match() メソッドは、Cache オブジェクトで最初に一致したリクエストに関連付けられた Response に解決される Promise を返します。 一致が見つからない場合、Promise は undefined に解決されます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Cache.match()","locale":"en-US","native":"English (US)"},{"title":"Cache.match()","locale":"fr","native":"Français"},{"title":"Cache.match()","locale":"ru","native":"Русский"},{"title":"Cache.match()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/cache/match","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/cache/match/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Cache","title":"Cache"},{"uri":"/ja/docs/Web/API/Cache/match","title":"Cache.match()"}],"pageTitle":"Cache.match() - Web API | MDN","noIndexing":false}}