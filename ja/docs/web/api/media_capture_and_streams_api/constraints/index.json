{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"能力、制約、そして設定","mdn_url":"/ja/docs/Web/API/Media_Capture_and_Streams_API/Constraints","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Media_Capture_and_Streams_API\">Media Capture and Streams API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/Media_Capture_and_Streams_API/Constraints\">Capabilities, constraints, and settings</a></li><li><a href=\"/ja/docs/Web/API/Media_Capture_and_Streams_API/Taking_still_photos\">Taking still photos with getUserMedia()</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/CanvasCaptureMediaStreamTrack\"><code>CanvasCaptureMediaStreamTrack</code></a></li><li><a href=\"/ja/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></li><li><a href=\"/ja/docs/Web/API/MediaStream\"><code>MediaStream</code></a></li><li><a href=\"/ja/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a></li><li><a href=\"/ja/docs/Web/API/MediaStreamTrackEvent\"><code>MediaStreamTrackEvent</code></a></li><li><a href=\"/ja/docs/Web/API/MediaTrackCapabilities\"><code>MediaTrackCapabilities</code></a></li><li><a href=\"/ja/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code></a></li><li><a href=\"/ja/docs/Web/API/MediaTrackSettings\"><code>MediaTrackSettings</code></a></li><li><a href=\"/ja/docs/Web/API/MediaTrackSupportedConstraints\"><code>MediaTrackSupportedConstraints</code></a></li><li><a href=\"/ja/docs/Web/API/VideoStreamTrack\"><code>VideoStreamTrack</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/HTMLCanvasElement/captureStream\"><code>HTMLCanvasElement.captureStream()</code></a></li><li><a href=\"/ja/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/HTMLMediaElement/ended_event\"><code>HTMLMediaElement</code>: <code>ended</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLMediaElement/ratechange_event\"><code>HTMLMediaElement</code>: <code>ratechange</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>歴史的に、Web API と密接に連携するウェブ用のスクリプトを作成することには、よく知られた課題がありました。 多くの場合、コードは、API が存在するかどうか、存在する場合は、それを実行している<a href=\"/ja/docs/Glossary/User_agent\">ユーザーエージェント</a>の制限を知る必要があります。 これを理解するのは難しい場合が多く、通常、実行している<a href=\"/ja/docs/Glossary/User_agent\">ユーザーエージェント</a>（またはブラウザー）とそのバージョンの組み合わせを調べ、特定のオブジェクトが存在するかどうかを確認したり、さまざまなものが機能するかどうかを確認したり、どのエラーが発生したかを判断したりする必要がありました。 その結果、非常に脆弱なコードが大量に発生するか、このような問題を解決するライブラリに依存したり、<a href=\"/ja/docs/Glossary/Polyfill\">ポリフィル</a>を実装して実装の穴にパッチを当てたりしました。</p>\n<p><strong>制約</strong>（constraints）と<strong>能力</strong>（capabilities）の双子の概念により、ブラウザーとウェブサイトまたはアプリは、ブラウザーの実装がサポートする<strong>制約可能なプロパティ</strong>（constrainable properties）と、それぞれに対してサポートする値に関する情報を交換できます。 この記事では、能力と制約およびメディアの設定について説明し、<a href=\"#example_constraint_exerciser\">制約エクササイザー</a>（Constraint Exerciser）と呼ばれる例を含みます。 制約エクササイザーを使用すると、コンピューターの A/V 入力デバイス（ウェブカメラやマイクなど）からの音声トラックと動画トラックに適用されるさまざまな制約セットの結果を試すことができます。</p>"}},{"type":"prose","value":{"id":"概要","title":"概要","isH3":false,"content":"<p>プロセスは次のように動作します（例として <a href=\"/ja/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> を使用）。</p>\n<ol>\n  <li>必要に応じて、<a href=\"/ja/docs/Web/API/MediaDevices/getSupportedConstraints\"><code>MediaDevices.getSupportedConstraints()</code></a> を呼び出して、<strong>サポートしている制約</strong>（supported constraints）のリストを取得します。 これにより、ブラウザーが知っている制約可能なプロパティがわかります。 これは必ずしも必要なわけではありません。 知らないものは指定すると単に無視されるためです。 ただし、それなしでは手に入らないものがある場合は、リストに載っていることを確認することから始めることができます。</li>\n  <li>使用したいプロパティをサポートしているかどうかをスクリプトが認識すると、トラックの <code>getCapabilities()</code> メソッドによって返されたオブジェクトを調べることにより、API とその実装の<strong>能力</strong>を確認できます。 このオブジェクトは、サポートしている各制約と、サポートしている値または値の範囲をリストします。</li>\n  <li>最後に、トラックの <code>applyConstraints()</code> メソッドを呼び出して、好みの制約可能なプロパティに使用する値または値の範囲を指定することにより、必要に応じて API を構成します。</li>\n  <li>トラックの <code>getConstraints()</code> メソッドは、<code>applyConstraints()</code> の最新の呼び出しに渡された制約セットを返します。 これは、要求された値を調整する必要があるプロパティと、プラットフォームのデフォルト値が表されていないため、トラックの実際の現在の状態を表していない場合があります。 トラックの現在の構成を完全に表現するには、<code>getSettings()</code> を使用します。</li>\n</ol>\n<p>Media Stream API では、<a href=\"/ja/docs/Web/API/MediaStream\"><code>MediaStream</code></a> と <a href=\"/ja/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> の両方に制約可能なプロパティがあります。</p>"}},{"type":"prose","value":{"id":"制約をサポートしているかどうかの判断","title":"制約をサポートしているかどうかの判断","isH3":false,"content":"<p>特定の制約をユーザーエージェントがサポートしているかどうかを知る必要がある場合は、次のように <a href=\"/ja/docs/Web/API/MediaDevices/getSupportedConstraints\" title=\"navigator.mediaDevices.getSupportedConstraints()\"><code>navigator.mediaDevices.getSupportedConstraints()</code></a> を呼び出して、ブラウザーが知っている制約可能なプロパティのリストを取得します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> supported <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getSupportedConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"frameRateSlider\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>supported<span class=\"token punctuation\">[</span><span class=\"token string\">\"frameRate\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この例では、サポートしている制約を取得し、<code>frameRate</code> 制約をサポートしていない場合、ユーザーがフレームレートを構成できるコントロールを無効にします。</p>"}},{"type":"prose","value":{"id":"制約の定義方法","title":"制約の定義方法","isH3":false,"content":"<p>単一の制約は、目的の値または値の範囲が指定されている制約可能なプロパティと名前が一致するオブジェクトです。 このオブジェクトには、0 個以上の個別の制約と、<code>advanced</code> というオプションのサブオブジェクトが含まれます。 このサブオブジェクトには、ユーザーエージェントが可能な限り満たす必要がある 0 個以上の制約の別のセットが含まれます。 ユーザーエージェントは、制約セットで指定された順序で制約を満たすことを試みます。</p>\n<p>理解すべき最も重要なことは、ほとんどの制約は必要条件ではないということです。 それよりむしろ、それらは要求です。 例外があり、すぐにそれらに到達します。</p>"}},{"type":"prose","value":{"id":"設定に特定の値を要求","title":"設定に特定の値を要求","isH3":true,"content":"<p>最も簡単には、各制約は、設定に必要な値を示す特定の値である場合があります。 例えば、次のようにです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> constraints <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">1080</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">aspectRatio</span><span class=\"token operator\">:</span> <span class=\"token number\">1.777777778</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyTrack<span class=\"token punctuation\">.</span><span class=\"token function\">applyConstraints</span><span class=\"token punctuation\">(</span>constraints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この場合、制約は、ほぼすべてのプロパティで任意の値が適切であることを示しますが、標準の 16：9 アスペクト比で標準の高解像度（HD）動画サイズが望ましいことを示します。 結果のトラックがこれらのいずれかに一致するという保証はありませんが、ユーザーエージェントは可能な限り一致するように最善を尽くす必要があります。</p>\n<p>プロパティの優先順位付けは簡単です。 2 つのプロパティの要求値が相互に排他的である場合、制約セットの最初にリストされている値を使用します。 例として、上記のコードを実行しているブラウザーは 1920x1080 のトラックを提供できないが、1920x900 を提供できる場合、それを提供します。</p>\n<p>単一の値を指定するこれらのような単純な制約は、常に必須でないものとして扱われます。 ユーザーエージェントは、あなたが要求したものを提供しようとしますが、あなたが得るものが一致することを保証しません。 しかしながら、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/applyConstraints\"><code>MediaStreamTrack.applyConstraints()</code> <small>(en-US)</small></a> を呼び出すときにプロパティに単純な値を使用すると、これらの値は必要条件ではなく要求と見なされるため、要求は常に成功します。</p>"}},{"type":"prose","value":{"id":"値の範囲の指定","title":"値の範囲の指定","isH3":true,"content":"<p>場合によっては、範囲内の任意の値がプロパティの値として受け入れられることがあります。 範囲は、最小値（<code>min</code>）と最大値（<code>max</code>）のいずれかまたは両方を指定でき、必要に応じて範囲内で理想的な値（<code>ideal</code>）を最終結果として指定できます。 理想的な値を指定すると、ブラウザーは、指定された他の制約に応じて、その値にできるだけ一致するように近づけようとします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> supports <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getSupportedConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>supports<span class=\"token punctuation\">[</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>supports<span class=\"token punctuation\">[</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>supports<span class=\"token punctuation\">[</span><span class=\"token string\">\"frameRate\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>supports<span class=\"token punctuation\">[</span><span class=\"token string\">\"facingMode\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 必要なプロパティが不足しているため、そのエラーを処理します。</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> constraints <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">ideal</span><span class=\"token operator\">:</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">max</span><span class=\"token operator\">:</span> <span class=\"token number\">1920</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">ideal</span><span class=\"token operator\">:</span> <span class=\"token number\">1080</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">aspectRatio</span><span class=\"token operator\">:</span> <span class=\"token number\">1.777777778</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">frameRate</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">max</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">facingMode</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">exact</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user\"</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  myTrack<span class=\"token punctuation\">.</span><span class=\"token function\">applyConstraints</span><span class=\"token punctuation\">(</span>constraints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 制約が正常に適用されたら何かをする */</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reason</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 制約を適用できませんでした。 reason が理由 */</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ここでは、一致を見つける必要のある制約可能なプロパティ（<code>width</code>、<code>height</code>、<code>frameRate</code>、<code>facingMode</code>）がサポートされていることを確認した後、幅は 640 以上 1920 以下（できれば 1920）、高さは 400 以上（理想的には 1080）、アスペクト比は 16：9（1.777777778）、フレームレートは 30 フレーム/秒以下を要求する制約を設定します。 さらに、唯一の許容可能な入力デバイスは、ユーザーに面したカメラ（自撮りカメラ）です。 <code>width</code>、<code>height</code>、<code>frameRate</code>、または <code>facingMode</code> の制約が満たされない場合、<code>applyConstraints()</code> によって返された promise は拒否されます。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <code>max</code>、<code>min</code>、<code>exact</code> のいずれかまたはすべてを使用して指定された制約は、常に必須として扱われます。 <code>applyConstraints()</code> を呼び出して、使用する制約を 1 つ以上を満たすことができない場合、promise は拒否されます。</p>\n</div>"}},{"type":"prose","value":{"id":"高度な制約","title":"高度な制約","isH3":true,"content":"<p><code>advanced</code> プロパティを制約セットに追加すると、いわゆる高度な制約が作成されます。 このプロパティの値は、オプションと見なされる追加の制約セットの配列です。 この機能のユースケースはほとんどなく、仕様から取り除くことに関心があるため、ここでは説明しません。 詳細については、<a href=\"https://www.w3.org/TR/mediacapture-streams/#idl-def-Constraints\" class=\"external\" rel=\" noopener\">Media Capture and Streams 仕様のセクション 11、過去の例 2</a> を参照してください。</p>"}},{"type":"prose","value":{"id":"能力の確認","title":"能力の確認","isH3":false,"content":"<p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/getCapabilities\"><code>MediaStreamTrack.getCapabilities()</code> <small>(en-US)</small></a> を呼び出して、サポートしているすべての能力と、そのそれぞれが現在のプラットフォームとユーザーエージェントで受け入れられる値または値の範囲のリストを取得できます。 この関数は、ブラウザーがサポートしている各制約可能なプロパティと、それらのプロパティのそれぞれがサポートしている値または値の範囲をリストする <a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>MediaTrackCapabilities</code></a> オブジェクトを返します。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <code>getCapabilities()</code> は、まだすべての主要なブラウザーで実装されていません。 とりあえず、あなたは必要なものを手に入れようとする必要があり、もしそれができなければ、その時点で何をすべきかを決定します。 例えば、<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1179084\" class=\"external\" rel=\" noopener\">バグ&nbsp;1179084</a> を参照してください。</p>\n</div>"}},{"type":"prose","value":{"id":"制約の適用","title":"制約の適用","isH3":false,"content":"<p>制約を使用する最初の最も一般的な方法は、次のように <a href=\"/ja/docs/Web/API/MediaDevices/getUserMedia\" title=\"getUserMedia()\"><code>getUserMedia()</code></a> を呼び出すときに制約を指定することです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">640</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">ideal</span><span class=\"token operator\">:</span> <span class=\"token number\">1920</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">min</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">ideal</span><span class=\"token operator\">:</span> <span class=\"token number\">1080</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">aspectRatio</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ideal</span><span class=\"token operator\">:</span> <span class=\"token number\">1.7777777778</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">sampleSize</span><span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">channelCount</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  videoElement<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>handleError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この例では、<code>getUserMedia()</code> の時点で制約が適用され、動画のためのフォールバックを備えた理想的なオプションのセットが要求されます。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> 1 つ以上のメディア入力デバイス ID を指定して、入力ソースが許可される制限を設定できます。 利用可能なデバイスのリストを収集するには、<a href=\"/ja/docs/Web/API/MediaDevices/enumerateDevices\" title=\"navigator.mediaDevices.enumerateDevices()\"><code>navigator.mediaDevices.enumerateDevices()</code></a> を呼び出してから、目的の条件を満たす各デバイスに対して、その <code>deviceId</code> を <code>MediaConstraints</code> オブジェクトに追加して、最終的に <code>getUserMedia()</code> に渡します。</p>\n</div>\n<p>次のようにトラックの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/applyConstraints\"><code>applyConstraints()</code> <small>(en-US)</small></a> メソッドを呼び出し、トラックに適用する制約を表すオブジェクトを渡すことで、既存の <a href=\"/ja/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> の制約を臨機応変に変更することもできます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>videoTrack<span class=\"token punctuation\">.</span><span class=\"token function\">applyConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">1080</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このスニペットでは、<code>videoTrack</code> が参照する動画トラックが更新され、その解像度が可能な限り 1920x1080 ピクセル（1080p 高解像度）に一致するようになります。</p>"}},{"type":"prose","value":{"id":"現在の制約と設定の取得","title":"現在の制約と設定の取得","isH3":false,"content":"<p><strong>制約</strong>と<strong>設定</strong>（settings）の違いを覚えておくことは重要です。 制約は、（<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code> <small>(en-US)</small></a> のドキュメントで説明されているように）さまざまな制約可能なプロパティに必要な値、希望する値、および受け入れる値を指定する方法です。 一方、設定は現在の各制約可能なプロパティの実際の値です。</p>"}},{"type":"prose","value":{"id":"実施されている制約の取得","title":"実施されている制約の取得","isH3":true,"content":"<p>現在メディアに適用されている制約セットを取得する必要がある場合は、次の例に示すように、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/getConstraints\"><code>MediaStreamTrack.getConstraints()</code> <small>(en-US)</small></a> を呼び出すことでその情報を取得できます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">switchCameras</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">track<span class=\"token punctuation\">,</span> camera</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> constraints <span class=\"token operator\">=</span> track<span class=\"token punctuation\">.</span><span class=\"token function\">getConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  constraints<span class=\"token punctuation\">.</span>facingMode <span class=\"token operator\">=</span> camera<span class=\"token punctuation\">;</span>\n  track<span class=\"token punctuation\">.</span><span class=\"token function\">applyConstraints</span><span class=\"token punctuation\">(</span>constraints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この関数は、<a href=\"/ja/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> と使用するカメラに面するモードを示す文字列を受け入れ、現在の制約を取得し、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaTrackConstraints/facingMode\"><code>MediaTrackConstraints.facingMode</code> <small>(en-US)</small></a> の値を指定された値に設定し、更新された制約セットを適用します。</p>"}},{"type":"prose","value":{"id":"トラックの現在の設定の取得","title":"トラックの現在の設定の取得","isH3":true,"content":"<p>厳密な制約（<code>exact</code>）のみを使用しない限り（これは非常に制限的ですので、それの意味することを確認してください！）、制約が適用された後に実際に何が得られるかを保証するものではありません。 結果のメディアに実際に存在する制約可能なプロパティの値は、設定と呼ばれます。 メディアの実際の形式やその他のプロパティを知る必要がある場合は、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/getSettings\"><code>MediaStreamTrack.getSettings()</code> <small>(en-US)</small></a> を呼び出してこれらの設定を取得できます。 これは、ディクショナリ <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaTrackSettings\"><code>MediaTrackSettings</code> <small>(en-US)</small></a> に基づくオブジェクトを返します。 例えば次のようにです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">whichCamera</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">track</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> track<span class=\"token punctuation\">.</span><span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>facingMode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この関数は、<code>getSettings()</code> を使用して、トラックの制約可能なプロパティの現在使用中の値を取得し、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaTrackSettings/facingMode\"><code>facingMode</code> <small>(en-US)</small></a> の値を返します。</p>"}},{"type":"prose","value":{"id":"例_制約エクササイザー","title":"例: 制約エクササイザー","isH3":false,"content":"<p>この例では、音声トラックと動画トラックの制約セットを記述するソースコードを編集して、メディアの制約を試すことができるエクササイザーを作成します。 その後、これらの変更を適用して、ストリームの外観や、新しい制約を適用した後の実際のメディア設定の両方を含む結果を確認できます。</p>\n<p>この例の HTML と CSS は非常に単純であり、ここには示されていません。 <a href=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Media_Capture_and_Streams_API/Constraints/_sample_.Example_Constraint_exerciser.html\" class=\"external\" rel=\" noopener\">ここをクリックする</a>と、完全な例を見ることができます。</p>"}},{"type":"prose","value":{"id":"html_content","title":"HTML content","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>メディアの制約を試してください！ 左側の編集ボックスで動画トラックと音声トラックの制約セットを編集し、[制約の適用] ボタンをクリックして試してください。 ブラウザーが選択して使用している実際の設定は、右側のボックスに表示されます。 そのすべての下に、動画自体が表示されます。\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>[動画の開始] ボタンをクリックして開始します。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>使用できる制約可能なプロパティ:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>supportedConstraints<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>startButton<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  動画の開始\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>leftside<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>要求した動画の制約:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>videoConstraintEditor<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>32</span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>8</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rightside<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>実際の動画の設定:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>videoSettingsText<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>32</span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>8</span> <span class=\"token attr-name\">disabled</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>leftside<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>要求した音声の制約:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audioConstraintEditor<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>32</span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>8</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rightside<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>実際の音声の設定:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audioSettingsText<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cols</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>32</span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>8</span> <span class=\"token attr-name\">disabled</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>applyButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  制約の適用\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoplay</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stopButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  動画の停止\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"css_content","title":"CSS content","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: css hidden notranslate\"><code><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> 14px <span class=\"token string\">\"Open Sans\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Arial\"</span><span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">video</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 150px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> darkgreen<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.wrapper</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> grid<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> 1fr 1fr<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-gap</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">gap</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> min-content<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">textarea</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span> <span class=\"token punctuation\">:</span> 270px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">h3</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#supportedConstraints</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">column-count</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-moz-column-count</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#log</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript_content","title":"JavaScript content","isH3":true,"content":"<p>Now let's take a look at the JavaScript code that makes everything work.</p>\n<h4 id=\"デフォルトと変数\">デフォルトと変数</h4>\n<p>最初に、文字列としてデフォルトの制約セットがあります。 これらの文字列は編集可能な <a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> に表示されますが、これはストリームの初期構成です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> videoDefaultConstraintString <span class=\"token operator\">=</span> <span class=\"token string\">'{\\n  \"width\": 320,\\n  \"height\": 240,\\n  \"frameRate\": 30\\n}'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> audioDefaultConstraintString <span class=\"token operator\">=</span> <span class=\"token string\">'{\\n  \"sampleSize\": 16,\\n  \"channelCount\": 2,\\n  \"echoCancellation\": false\\n}'</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これらのデフォルトは、かなり一般的なカメラ構成を要求しますが、特に重要なプロパティであることを主張しません。 ブラウザーは、これらの設定に一致するように最善を尽くす必要がありますが、近い一致と見なされるものなら何でもそれで解決します。</p>\n<p>次に、動画トラックおよび音声トラックの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code> <small>(en-US)</small></a> オブジェクトを保持する変数と、動画トラックおよび音声トラック自体への参照を保持する変数を <code>null</code> に初期化します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> videoConstraints <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> audioConstraints <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> audioTrack <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> videoTrack <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>そして、アクセスする必要のあるすべての要素への参照を取得します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> videoElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> logElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> supportedConstraintList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"supportedConstraints\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> videoConstraintEditor <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"videoConstraintEditor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> audioConstraintEditor <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"audioConstraintEditor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> videoSettingsText <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"videoSettingsText\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> audioSettingsText <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"audioSettingsText\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これらの要素は次のとおりです。</p>\n<dl>\n  <dt id=\"videoelement\"><code>videoElement</code></dt>\n  <dd>\n    <p>ストリームを表示する <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素。</p>\n  </dd>\n  <dt id=\"logelement\"><code>logElement</code></dt>\n  <dd>\n    <p>エラーメッセージやその他のログの種類の出力が書き込まれる <a href=\"/ja/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a>。</p>\n  </dd>\n  <dt id=\"supportedconstraintlist\"><code>supportedConstraintList</code></dt>\n  <dd>\n    <p>ユーザーのブラウザーがサポートしている各制約可能なプロパティの名前をプログラムで追加する <a href=\"/ja/docs/Web/HTML/Element/ul\"><code>&lt;ul&gt;</code></a>（順序なしリスト）。</p>\n  </dd>\n  <dt id=\"videoconstrainteditor\"><code>videoConstraintEditor</code></dt>\n  <dd>\n    <p>ユーザーが動画トラックの制約セットのコードを編集できるようにする <a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> 要素。</p>\n  </dd>\n  <dt id=\"audioconstrainteditor\"><code>audioConstraintEditor</code></dt>\n  <dd>\n    <p>ユーザーが音声トラックの制約セットのコードを編集できるようにする <a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> 要素。</p>\n  </dd>\n  <dt id=\"videosettingstext\"><code>videoSettingsText</code></dt>\n  <dd>\n    <p>動画トラックの制約可能なプロパティの現在の設定を表示する <a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>（常に <code>disabled</code>）。</p>\n  </dd>\n  <dt id=\"audiosettingstext\"><code>audioSettingsText</code></dt>\n  <dd>\n    <p>音声トラックの制約可能なプロパティの現在の設定を表示する <a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>（常に <code>disabled</code>）。</p>\n  </dd>\n</dl>\n<p>最後に、2 つの制約セットエディター要素の現在の内容をデフォルトに設定します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>videoConstraintEditor<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> videoDefaultConstraintString<span class=\"token punctuation\">;</span>\naudioConstraintEditor<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> audioDefaultConstraintString<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"設定の表示の更新\">設定の表示の更新</h4>\n<p>各制約セットエディターの右側には、トラックの構成可能なプロパティの現在の構成を表示するために使用する 2 番目のテキストボックスがあります。 この表示を関数 <code>getCurrentSettings()</code> で更新します。 この関数は、音声トラックと動画トラックの現在の設定を取得し、<a href=\"/ja/docs/Web/HTML/Element/textarea#attr-value\"><code>value</code></a> を設定することで対応するコードをトラックの設定表示ボックスに挿入します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">getCurrentSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>videoTrack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    videoSettingsText<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>videoTrack<span class=\"token punctuation\">.</span><span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>audioTrack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    audioSettingsText<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>audioTrack<span class=\"token punctuation\">.</span><span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これは、以下に示すように、更新した制約を適用するときだけでなく、ストリームの最初の起動後にも呼び出されます。</p>\n<h4 id=\"トラックの制約セットオブジェクトの構築\">トラックの制約セットオブジェクトの構築</h4>\n<p><code>buildConstraints()</code> 関数は、2 つのトラックの制約セット編集ボックス内のコードを使用して、音声トラックと動画トラックの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code> <small>(en-US)</small></a> オブジェクトを構築します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">buildConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    videoConstraints <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>videoConstraintEditor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    audioConstraints <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>audioConstraintEditor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">handleError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これは <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>JSON.parse()</code></a> を使用して、各エディター内のコードをオブジェクトに解析します。 <code>JSON.parse()</code> の呼び出しのどちらかが例外をスローした場合、<code>handleError()</code> が呼び出されてエラーメッセージがログに出力されます。</p>\n<h4 id=\"ストリームの構成と開始\">ストリームの構成と開始</h4>\n<p><code>startVideo()</code> メソッドは、動画ストリームのセットアップと開始を処理します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">startVideo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">buildConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> videoConstraints<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> audioConstraints\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> audioTracks <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span><span class=\"token function\">getAudioTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> videoTracks <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    videoElement<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>audioTracks<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        audioTrack <span class=\"token operator\">=</span> audioTracks<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>videoTracks<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        videoTrack <span class=\"token operator\">=</span> videoTracks<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      videoElement<span class=\"token punctuation\">.</span>onloadedmetadata <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getCurrentSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>handleError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ここには、次のようないくつかの手順があります。</p>\n<ol>\n  <li><code>buildConstraints()</code> を呼び出して、編集ボックス内のコードから 2 つのトラックの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code> <small>(en-US)</small></a> オブジェクトを作成します。</li>\n  <li><a href=\"/ja/docs/Web/API/MediaDevices/getUserMedia\" title=\"navigator.mediaDevices.getUserMedia()\"><code>navigator.mediaDevices.getUserMedia()</code></a> を呼び出し、動画トラックおよび音声トラックの制約オブジェクトを渡します。 これにより、入力に一致するソースからの音声と動画を含む <a href=\"/ja/docs/Web/API/MediaStream\"><code>MediaStream</code></a> が返されます（通常はウェブカメラですが、適切な制約を指定すると他のソースからメディアを取得できます）。</li>\n  <li>ストリームを取得したら、画面に表示されるように <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素に添付し、音声トラックと動画トラックを変数 <code>audioTrack</code> と <code>videoTrack</code> に取り込みます。</li>\n  <li>次に、動画要素で <code><a href=\"/ja/docs/Web/Reference/Events/onloadedmetadata\" title=\"This is a link to an unwritten page\" class=\"page-not-created\">onloadedmetadata</a></code> イベントが発生したときに解決する promise を設定します。</li>\n  <li>それが起こると、動画の再生を開始したことがわかるので、<code>getCurrentSettings()</code> 関数（上記を参照）を呼び出して、制約とハードウェアの能力を考慮した後にブラウザーが決定した実際の設定を表示します。</li>\n  <li>エラーが発生した場合は、この記事のもっと下で説明する <code>handleError()</code> メソッドを使用してログに記録します。</li>\n</ol>\n<p>また、[動画の開始] ボタンがクリックされるのを監視するイベントリスナーを設定する必要があります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"startButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">startVideo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"制約セットの更新の適用\">制約セットの更新の適用</h4>\n<p>次に、[制約の適用] ボタンのイベントリスナーを設定します。 クリックされ、まだ使用中のメディアがない場合は、<code>startVideo()</code> を呼び出し、指定された設定でストリームを開始する機能をその関数に処理させます。 それ以外の場合は、次の手順に従って、更新済みの制約を既にアクティブなストリームに適用します。</p>\n<ol>\n  <li><code>buildConstraints()</code> を、音声トラック（<code>audioConstraints</code>）および動画トラック（<code>videoConstraints</code>）の更新された <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code> <small>(en-US)</small></a> オブジェクトを構築するために呼び出します。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/applyConstraints\"><code>MediaStreamTrack.applyConstraints()</code> <small>(en-US)</small></a> を、新しい <code>videoConstraints</code> を適用するために動画トラック（存在する場合）で呼び出します。 これが成功したら、動画トラックの現在の設定ボックスの内容を、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/getSettings\"><code>getSettings()</code> <small>(en-US)</small></a> メソッドを呼び出した結果に基づいて更新します。</li>\n  <li>それが完了すると、新しい音声制約を適用するために、<code>applyConstraints()</code> を音声トラック（存在する場合）で呼び出します。 これが成功したら、音声トラックの現在の設定ボックスの内容を、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/getSettings\"><code>getSettings()</code> <small>(en-US)</small></a> メソッドを呼び出した結果に基づいて更新しす。</li>\n  <li>いずれかの制約セットを適用してエラーが発生した場合、<code>handleError()</code> を使用してメッセージをログに出力します。</li>\n</ol>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applyButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>videoTrack <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>audioTrack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">startVideo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">buildConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>videoTrack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      videoTrack<span class=\"token punctuation\">.</span><span class=\"token function\">applyConstraints</span><span class=\"token punctuation\">(</span>videoConstraints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        videoSettingsText<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>videoTrack<span class=\"token punctuation\">.</span><span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>handleError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>audioTrack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      audioTrack<span class=\"token punctuation\">.</span><span class=\"token function\">applyConstraints</span><span class=\"token punctuation\">(</span>audioConstraints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        audioSettingsText<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>audioTrack<span class=\"token punctuation\">.</span><span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>handleError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"停止ボタンの処理\">停止ボタンの処理</h4>\n<p>次に、[動画の停止] ボタンのハンドラーを設定します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stopButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>videoTrack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    videoTrack<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>audioTrack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    audioTrack<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  videoTrack <span class=\"token operator\">=</span> audioTrack <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  videoElement<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これは単にアクティブなトラックを停止し、<code>videoTrack</code> 変数と <code>audioTrack</code> 変数を <code>null</code> に設定してそれらがなくなったことがわかるようにし、<a href=\"/ja/docs/Web/API/HTMLMediaElement/srcObject\"><code>HTMLMediaElement.srcObject</code></a> を <code>null</code> に設定して <a href=\"/ja/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> 要素からストリームを取り除きます。</p>\n<h4 id=\"エディターでの単純な_tab_のサポート\">エディターでの単純な <kbd>tab</kbd> のサポート</h4>\n<p>このコードは、いずれかの制約編集ボックスがフォーカスされているときに <kbd>tab</kbd> キーで 2 つのスペース文字を挿入することにより、<a href=\"/ja/docs/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a> 要素に <kbd>tab</kbd> の単純なサポートを追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">keyDownHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token string\">\"Tab\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> elem<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> position <span class=\"token operator\">=</span> elem<span class=\"token punctuation\">.</span>selectionStart<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> newStr <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"  \"</span> <span class=\"token operator\">+</span>\n            str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    elem<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newStr<span class=\"token punctuation\">;</span>\n    elem<span class=\"token punctuation\">.</span>selectionStart <span class=\"token operator\">=</span> elem<span class=\"token punctuation\">.</span>selectionEnd <span class=\"token operator\">=</span> position <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nvideoConstraintEditor<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keydown\"</span><span class=\"token punctuation\">,</span> keyDownHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\naudioConstraintEditor<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keydown\"</span><span class=\"token punctuation\">,</span> keyDownHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"ブラウザーがサポートする制約可能なプロパティの表示\">ブラウザーがサポートする制約可能なプロパティの表示</h4>\n<p>パズルの最後の重要な部分: ユーザーの参照用に、ブラウザーがサポートする制約可能なプロパティのリストを表示するコード。 各プロパティは、ユーザーの利便性のために MDN のドキュメントへのリンクです。 このコードの動作の詳細については、<a href=\"/ja/docs/Web/API/MediaDevices/getSupportedConstraints#example\"><code>MediaDevices.getSupportedConstraints()</code> の例</a>を参照してください。</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> もちろん、このリストには非標準のプロパティが含まれている場合があります。 その場合、ドキュメントのリンクはあまり役に立たないでしょう。</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> supportedConstraints <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getSupportedConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> constraint <span class=\"token keyword\">in</span> supportedConstraints<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>supportedConstraints<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>constraint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;code&gt;&lt;a href='https://developer.mozilla.org/docs/Web/API/MediaTrackSupportedConstraints/\"</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>constraint<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"' target='_blank'&gt;\"</span> <span class=\"token operator\">+</span> constraint <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/a&gt;&lt;/code&gt;\"</span><span class=\"token punctuation\">;</span>\n    supportedConstraintList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"エラー処理\">エラー処理</h4>\n<p>また、いくつかの簡単なエラー処理コードがあります。 <code>handleError()</code> は失敗したプロミスを処理するために呼び出され、<code>log()</code> 関数は動画の下の特別なロギング <a href=\"/ja/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> ボックスにエラーメッセージを追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  logElement<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>msg <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;br&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleError</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reason</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error &lt;code&gt;\"</span> <span class=\"token operator\">+</span> reason<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span>\n      <span class=\"token string\">\"&lt;/code&gt; in constraint &lt;code&gt;\"</span> <span class=\"token operator\">+</span> reason<span class=\"token punctuation\">.</span>constraint <span class=\"token operator\">+</span>\n      <span class=\"token string\">\"&lt;/code&gt;: \"</span> <span class=\"token operator\">+</span> reason<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"結果","title":"結果","isH3":true,"content":"<p>ここで、実際の完全な例を見ることができます。</p><iframe class=\"sample-code-frame\" title=\"例: 制約エクササイザー\" id=\"frame_example_constraint_exerciser\" width=\"650\" height=\"800\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Media_Capture_and_Streams_API/Constraints/_sample_.example_constraint_exerciser.html\" allow=\"microphone; camera\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"仕様","title":"仕様","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様</th>\n      <th>状態</th>\n      <th>コメント</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/mediacapture-main/#constrainable-interface\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Media Capture and Streams<br><small lang=\"ja\">Constrainable pattern の定義</small></a></td>\n      <td><span class=\"spec-cr\">勧告候補</span></td>\n      <td>初期定義</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"ブラウザーの互換性","title":"ブラウザーの互換性","isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"MediaDevices.getSupportedConstraints","id":"mediadevices.getsupportedconstraints","isH3":true,"query":"api.MediaDevices.getSupportedConstraints","dataURL":"/ja/docs/Web/API/Media_Capture_and_Streams_API/Constraints/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Media_Capture_and_Streams_API\">Media Capture and Streams API</a></li>\n  <li><a class=\"page-not-created\" title=\"この項目についての文書はまだ書かれていません。書いてみませんか？\"><code>MediaTrackCapabilities</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code> <small>(en-US)</small></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaTrackSettings\"><code>MediaTrackSettings</code> <small>(en-US)</small></a></li>\n  <li><a href=\"/ja/docs/Web/API/MediaDevices/getSupportedConstraints\"><code>MediaDevices.getSupportedConstraints()</code></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/applyConstraints\"><code>MediaStreamTrack.applyConstraints()</code> <small>(en-US)</small></a></li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamTrack/getSettings\"><code>MediaStreamTrack.getSettings()</code> <small>(en-US)</small></a></li>\n</ul>"}}],"toc":[{"text":"概要","id":"概要"},{"text":"制約をサポートしているかどうかの判断","id":"制約をサポートしているかどうかの判断"},{"text":"制約の定義方法","id":"制約の定義方法"},{"text":"能力の確認","id":"能力の確認"},{"text":"制約の適用","id":"制約の適用"},{"text":"現在の制約と設定の取得","id":"現在の制約と設定の取得"},{"text":"例: 制約エクササイザー","id":"例_制約エクササイザー"},{"text":"仕様","id":"仕様"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"歴史的に、Web API と密接に連携するウェブ用のスクリプトを作成することには、よく知られた課題がありました。 多くの場合、コードは、API が存在するかどうか、存在する場合は、それを実行しているユーザーエージェントの制限を知る必要があります。 これを理解するのは難しい場合が多く、通常、実行しているユーザーエージェント（またはブラウザー）とそのバージョンの組み合わせを調べ、特定のオブジェクトが存在するかどうかを確認したり、さまざまなものが機能するかどうかを確認したり、どのエラーが発生したかを判断したりする必要がありました。 その結果、非常に脆弱なコードが大量に発生するか、このような問題を解決するライブラリに依存したり、ポリフィルを実装して実装の穴にパッチを当てたりしました。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Capabilities, constraints, and settings","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/media_capture_and_streams_api/constraints","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/media_capture_and_streams_api/constraints/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Media_Capture_and_Streams_API","title":"Media Capture and Streams API (Media Streams)"},{"uri":"/ja/docs/Web/API/Media_Capture_and_Streams_API/Constraints","title":"能力、制約、そして設定"}],"pageTitle":"能力、制約、そして設定 - Web API | MDN","noIndexing":false}}