{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"IDBTransaction","mdn_url":"/ja/docs/Web/API/IDBTransaction","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/db\"><code>db</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/durability\"><code>durability</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/error\"><code>error</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/mode\"><code>mode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/ObjectStoreNames\"><code>objectStoreNames</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/abort\"><code>abort()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/commit\"><code>commit()</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/objectStore\"><code>objectStore()</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/abort_event\"><code>abort</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/IDBTransaction/complete_event\"><code>complete</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/error_event\"><code>error</code> <small>(en-US)</small></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>IndexedDB に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/ja/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBIndex\"><code>IDBIndex</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>IDBTransaction</code></strong> は <a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB API</a> のインターフェイスで、イベントハンドラー属性を使用してデータベース上の静的で非同期のトランザクションを提供します。すべてのデータの読み書きはトランザクション内で行われます。 <a href=\"/ja/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a> を使用してトランザクションを開始し、 <a href=\"/ja/docs/Web/API/IDBTransaction\" aria-current=\"page\"><code>IDBTransaction</code></a> を使用してトランザクションのモードを設定し (例 <code>readonly</code> または <code>readwrite</code>)、 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code> <small>(en-US)</small></a> にアクセスしてリクエストを作成します。 <code>IDBTransaction</code> オブジェクトを使用してトランザクションを中止することもできます。</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>注:</strong> この機能は <a href=\"/ja/docs/Web/API/Web_Workers_API\">Web Worker</a> 内で利用可能です</p>\n</div>\n<svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/ja/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/ja/docs/Web/API/IDBTransaction\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"112\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"174\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      IDBTransaction\n    </text>\n  </a></svg>\n<p>トランザクションは、最初のリクエストが発行された時ではなく、トランザクションが生成されたときに開始します。例えば、次のものを考えてください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> trans1 <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> trans2 <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> objectStore2 <span class=\"token operator\">=</span> trans2<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> objectStore1 <span class=\"token operator\">=</span> trans1<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span>\nobjectStore2<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobjectStore1<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"key\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このコードが実行された後で、オブジェクトストアには \"2\" が含まれているはずであり、これは <code>trans2</code> が <code>trans1</code> の後に実行されるからです。</p>"}},{"type":"prose","value":{"id":"トランザクションの失敗","title":"トランザクションの失敗","isH3":false,"content":"<p>トランザクションは一定数の理由で失敗することがあり、 (ユーザーエージェントのクラッシュを除いて) すべての場合に abort コールバックを起動します。</p>\n<ul>\n  <li>Abort due to bad requests, e.g. trying to <code>add()</code> the same key twice, or <code>put()</code> with the same index key with a uniqueness constraint. This causes an error on the request, which can bubble up to an error on the transaction, which aborts the transaction. This can be prevented by using <code>preventDefault()</code> on the error event on the request.</li>\n  <li>An explicit <code>abort()</code> call from script.</li>\n  <li>An uncaught exception in the request's <code>success</code>/<code>error</code> handler.</li>\n  <li>An I/O error (e.g. an actual failure to write to disk, or other OS/hardware failure).</li>\n  <li>Quota exceeded.</li>\n  <li>A user agent crash.</li>\n</ul>"}},{"type":"prose","value":{"id":"firefox_durability_guarantees","title":"Firefox durability guarantees","isH3":false,"content":"<p>Note that as of Firefox 40, IndexedDB transactions have relaxed durability guarantees to increase performance (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1112702\" class=\"external\" rel=\" noopener\">バグ&nbsp;1112702</a>.) Previously in a <code>readwrite</code> transaction <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/complete_event\"><code>IDBTransaction.oncomplete</code> <small>(en-US)</small></a> was fired only when all data was guaranteed to have been flushed to disk. In Firefox 40+ the <code>complete</code> event is fired after the OS has been told to write the data but potentially before that data has actually been flushed to disk. The <code>complete</code> event may thus be delivered quicker than before, however, there exists a small chance that the entire transaction will be lost if the OS crashes or there is a loss of system power before the data is flushed to disk. Since such catastrophic events are rare, most consumers should not need to concern themselves further.</p>\n<p>If you must ensure durability for some reason (e.g. you're storing critical data that cannot be recomputed later) you can force a transaction to flush to disk before delivering the <code>complete</code> event by creating a transaction using the experimental (non-standard) <code>readwriteflush</code> mode (see <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBDatabase/transaction\"><code>IDBDatabase.transaction</code> <small>(en-US)</small></a>.</p>"}},{"type":"prose","value":{"id":"プロパティ","title":"プロパティ","isH3":false,"content":"<dl>\n  <dt id=\"idbtransaction.db_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/db\"><code>IDBTransaction.db</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>The database connection with which this transaction is associated.</p>\n  </dd>\n  <dt id=\"idbtransaction.error_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/error\"><code>IDBTransaction.error</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/ja/docs/Web/API/DOMException\"><code>DOMException</code></a> indicating the type of error that occured when there is an unsuccessful transaction. This property is <code>null</code> if the transaction is not finished, is finished and successfully committed, or was aborted with the<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/abort\"><code>IDBTransaction.abort()</code> <small>(en-US)</small></a> function.</p>\n  </dd>\n  <dt id=\"idbtransaction.mode_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/mode\"><code>IDBTransaction.mode</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>The mode for isolating access to data in the object stores that are in the scope of the transaction. The default value is <a href=\"#const_read_only\"><code>readonly</code></a>.</p>\n  </dd>\n  <dt id=\"idbtransaction.objectstorenames_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/ObjectStoreNames\"><code>IDBTransaction.objectStoreNames</code> <small>(en-US)</small></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/ja/docs/Web/API/DOMStringList\"><code>DOMStringList</code></a> of the names of <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code> <small>(en-US)</small></a> objects associated with the transaction.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":"<p>Inherits from: <a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></p>\n<dl>\n  <dt id=\"idbtransaction.abort_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/abort\"><code>IDBTransaction.abort()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Rolls back all the changes to objects in the database associated with this transaction. If this transaction has been aborted or completed, this method fires an error event.</p>\n  </dd>\n  <dt id=\"idbtransaction.objectstore_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/objectStore\"><code>IDBTransaction.objectStore()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>Returns an <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code> <small>(en-US)</small></a> object representing an object store that is part of the scope of this transaction.</p>\n  </dd>\n  <dt id=\"idbtransaction.commit_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBTransaction/commit\"><code>IDBTransaction.commit()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>For an active transaction, commits the transaction. Note that this doesn't normally <em>have</em> to be called — a transaction will automatically commit when all outstanding requests have been satisfied and no new requests have been made. <code>commit()</code> can be used to start the commit process without waiting for events from outstanding requests to be dispatched.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"イベント","title":"イベント","isH3":false,"content":"<p>Listen to these events using <code>addEventListener()</code> or by assigning an event listener to the <code>oneventname</code> property of this interface.</p>\n<dl>\n  <dt id=\"abort\"><a href=\"/en-US/docs/Web/API/IDBTransaction/abort_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">abort (en-US)</a></dt>\n  <dd>\n    <p>\n      Fired when an <code>IndexedDB</code> transaction is aborted.\n      Also available via the <a href=\"/en-US/docs/Web/API/IDBTransaction/abort_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">onabort (en-US)</a> property.\n    </p>\n  </dd>\n  <dt id=\"complete\"><a href=\"/ja/docs/Web/API/IDBTransaction/complete_event\"><code>complete</code></a></dt>\n  <dd>\n    <p>\n      Fired when a transaction successfully completes.\n      Also available via the <a href=\"/en-US/docs/Web/API/IDBTransaction/complete_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">oncomplete (en-US)</a> property.\n    </p>\n  </dd>\n  <dt id=\"error\"><a href=\"/en-US/docs/Web/API/IDBTransaction/error_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">error (en-US)</a></dt>\n  <dd>\n    <p>\n      Fired when a request returns an error and the event bubbles up to the transaction object.\n      Also available via the <a href=\"/en-US/docs/Web/API/IDBTransaction/error_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">onerror (en-US)</a> property.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"mode_constants","title":"Mode constants","isH3":false,"content":"<div class=\"notecard deprecated\" id=\"sect2\"><p><strong>非推奨 Gecko 13 (Firefox 13 / Thunderbird 13 / SeaMonkey 2.10):</strong> この機能は非推奨になりました。まだ対応しているブラウザーがあるかもしれませんが、すでに関連するウェブ標準から削除されているか、削除の手続き中であるか、互換性のためだけに残されている可能性があります。使用を避け、できれば既存のコードは更新してください。このページの下部にある<a href=\"#browser_compatibility\">互換性一覧表</a>を見て判断してください。この機能は突然動作しなくなる可能性があることに注意してください。</p></div>\n<div class=\"notecard warning\" id=\"sect3\">\n  <p><strong>Warning:</strong> These constants are no longer available — they were removed in Gecko 25. You should use the string constants directly instead. (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=888598\" class=\"external\" rel=\" noopener\">バグ&nbsp;888598</a>)</p>\n</div>\n<p>Transactions can have one of three modes:</p>\n<table>\n  <thead>\n    <tr>\n      <th>定数</th>\n      <th>値</th>\n      <th>説明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"\"><code>READ_ONLY</code></a></td>\n      <td>\"readonly\"(0 in Chrome)</td>\n      <td>Allows data to be read but not changed.</td>\n    </tr>\n    <tr>\n      <td><a href=\"\"><code>READ_WRITE</code></a></td>\n      <td>\"readwrite\"(1 in Chrome)</td>\n      <td>Allows reading and writing of data in existing data stores to be changed.</td>\n    </tr>\n    <tr>\n      <td><a href=\"\"><code>VERSION_CHANGE</code></a></td>\n      <td>\"versionchange\"(2 in Chrome)</td>\n      <td>Allows any operation to be performed, including ones that delete and create object stores and indexes. This mode is for updating the version number of transactions that were started using the <a href=\"/en-US/docs/Web/API/IDBDatabase#setversion\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">setVersion() (en-US)</a> method of <a href=\"/en-US/docs/Web/API/IDBDatabase\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">IDBDatabase (en-US)</a> objects. Transactions of this mode cannot run concurrently with other transactions. Transactions in this mode are known as \"upgrade transactions.\"</td>\n    </tr>\n  </tbody>\n</table>\n<p>Even if these constants are now deprecated, you can still use them to provide backward compatibility if required (in Chrome <a href=\"https://peter.sh/2012/05/tab-sizing-string-values-for-indexeddb-and-chrome-21/\" class=\"external\" rel=\" noopener\">the change was made in version 21</a>). You should code defensively in case the object is not available anymore:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myIDBTransaction <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>IDBTransaction <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitIDBTransaction <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">READ_WRITE</span><span class=\"token operator\">:</span> <span class=\"token string\">\"readwrite\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. For a full working example, see our <a href=\"https://github.com/mdn/to-do-notifications/\" class=\"external\" rel=\" noopener\">To-do Notifications</a> app (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">view example live</a>.)</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Let us open our database</span>\n<span class=\"token keyword\">var</span> DBOpenRequest <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nDBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Database initialised.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// store the result of opening the database in the db</span>\n  <span class=\"token comment\">// variable. This is used a lot below</span>\n  db <span class=\"token operator\">=</span> DBOpenRequest<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Add the data to the database</span>\n  <span class=\"token function\">addData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create a new object to insert into the IDB</span>\n  <span class=\"token keyword\">var</span> newItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">taskTitle</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Walk dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">hours</span><span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">minutes</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">day</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">month</span><span class=\"token operator\">:</span> <span class=\"token string\">\"December\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">2013</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">notified</span><span class=\"token operator\">:</span> <span class=\"token string\">\"no\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// open a read/write db transaction, ready to add data</span>\n  <span class=\"token keyword\">var</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// report on the success of opening the transaction</span>\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncomplete</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction completed: database modification finished.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction not opened due to error. Duplicate items not allowed.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// create an object store on the transaction</span>\n  <span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// add our newItem object to the object store</span>\n  <span class=\"token keyword\">var</span> objectStoreRequest <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newItem<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  objectStoreRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// report the success of the request (this does not mean the item</span>\n    <span class=\"token comment\">// has been stored successfully in the DB - for that you need transaction.oncomplete)</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Request successful.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>状態</th>\n      <th>備考</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://www.w3.org/TR/IndexedDB/#transaction\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Indexed Database API 2.0<br><small lang=\"ja\">IDBTransaction の定義</small></a></td>\n      <td><span class=\"spec-rec\">勧告</span></td>\n      <td>初回定義</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://www.w3.org/TR/IndexedDB/#transaction\" hreflang=\"en\" lang=\"en\" class=\"external\" rel=\" noopener\">Indexed Database API 2.0<br><small lang=\"ja\">IDBTransaction の定義</small></a></td>\n      <td><span class=\"spec-rec\">勧告</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.IDBTransaction","dataURL":"/ja/docs/Web/API/IDBTransaction/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/IndexedDB_API/Using_IndexedDB\">IndexedDB の使用</a></li>\n  <li>トランザクションの開始: <a href=\"/ja/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li>\n  <li>トランザクションの仕様: <a href=\"/ja/docs/Web/API/IDBTransaction\" aria-current=\"page\"><code>IDBTransaction</code></a></li>\n  <li>キーの範囲の設定: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code> <small>(en-US)</small></a></li>\n  <li>データの受け取りや変更: <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code> <small>(en-US)</small></a></li>\n  <li>カーソルの使用: <a href=\"/ja/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li>\n  <li>リファレンスの例: <a href=\"https://github.com/mdn/to-do-notifications/tree/gh-pages\" class=\"external\" rel=\" noopener\">To-do Notifications</a> (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">view example live</a>.)</li>\n</ul>"}}],"toc":[{"text":"トランザクションの失敗","id":"トランザクションの失敗"},{"text":"Firefox durability guarantees","id":"firefox_durability_guarantees"},{"text":"プロパティ","id":"プロパティ"},{"text":"メソッド","id":"メソッド"},{"text":"イベント","id":"イベント"},{"text":"Mode constants","id":"mode_constants"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"IDBTransaction は IndexedDB API のインターフェイスで、イベントハンドラー属性を使用してデータベース上の静的で非同期のトランザクションを提供します。すべてのデータの読み書きはトランザクション内で行われます。 IDBDatabase を使用してトランザクションを開始し、 IDBTransaction を使用してトランザクションのモードを設定し (例 readonly または readwrite)、 IDBObjectStore (en-US) にアクセスしてリクエストを作成します。 IDBTransaction オブジェクトを使用してトランザクションを中止することもできます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"IDBTransaction","locale":"en-US","native":"English (US)"},{"title":"IDBTransaction","locale":"fr","native":"Français"},{"title":"IDBTransaction","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/idbtransaction","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/idbtransaction/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/IDBTransaction","title":"IDBTransaction"}],"pageTitle":"IDBTransaction - Web API | MDN","noIndexing":false}}