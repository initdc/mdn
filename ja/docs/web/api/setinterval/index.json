{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"setInterval()","mdn_url":"/ja/docs/Web/API/setInterval","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/HTML_DOM_API\">HTML DOM API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/setInterval\"><code>SetInterval</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>HTML DOM に関連するページ</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BeforeUnloadEvent\"><code>BeforeUnloadEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/DOMStringMap\"><code>DOMStringMap</code></a></li><li><a href=\"/ja/docs/Web/API/ErrorEvent\"><code>ErrorEvent</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLAnchorElement\"><code>HTMLAnchorElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLAreaElement\"><code>HTMLAreaElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLAudioElement\"><code>HTMLAudioElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLBRElement\"><code>HTMLBRElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLBaseElement\"><code>HTMLBaseElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLBodyElement\"><code>HTMLBodyElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLButtonElement\"><code>HTMLButtonElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLContentElement\"><code>HTMLContentElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDListElement\"><code>HTMLDListElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDataElement\"><code>HTMLDataElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDataListElement\"><code>HTMLDataListElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDivElement\"><code>HTMLDivElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDocument\"><code>HTMLDocument</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLEmbedElement\"><code>HTMLEmbedElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLFieldSetElement\"><code>HTMLFieldSetElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLFormControlsCollection\"><code>HTMLFormControlsCollection</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLFrameSetElement\"><code>HTMLFrameSetElement</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLHRElement\"><code>HTMLHRElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLHeadElement\"><code>HTMLHeadElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLHeadingElement\"><code>HTMLHeadingElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLHtmlElement\"><code>HTMLHtmlElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLInputElement\"><code>HTMLInputElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLKeygenElement\"><code>HTMLKeygenElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLLIElement\"><code>HTMLLIElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLLabelElement\"><code>HTMLLabelElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLLegendElement\"><code>HTMLLegendElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLLinkElement\"><code>HTMLLinkElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLMapElement\"><code>HTMLMapElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLMetaElement\"><code>HTMLMetaElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLMeterElement\"><code>HTMLMeterElement</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLModElement\"><code>HTMLModElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLOListElement\"><code>HTMLOListElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLOptGroupElement\"><code>HTMLOptGroupElement</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLOptionsCollection\"><code>HTMLOptionsCollection</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLOutputElement\"><code>HTMLOutputElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLParagraphElement\"><code>HTMLParagraphElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLPictureElement\"><code>HTMLPictureElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLPreElement\"><code>HTMLPreElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLProgressElement\"><code>HTMLProgressElement</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLQuoteElement\"><code>HTMLQuoteElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLScriptElement\"><code>HTMLScriptElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLSelectElement\"><code>HTMLSelectElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLShadowElement\"><code>HTMLShadowElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLSourceElement\"><code>HTMLSourceElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLSpanElement\"><code>HTMLSpanElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLStyleElement\"><code>HTMLStyleElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableCaptionElement\"><code>HTMLTableCaptionElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableCellElement\"><code>HTMLTableCellElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableColElement\"><code>HTMLTableColElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableRowElement\"><code>HTMLTableRowElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableSectionElement\"><code>HTMLTableSectionElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTextAreaElement\"><code>HTMLTextAreaElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTimeElement\"><code>HTMLTimeElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTitleElement\"><code>HTMLTitleElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTrackElement\"><code>HTMLTrackElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLUListElement\"><code>HTMLUListElement</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLUnknownElement\"><code>HTMLUnknownElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HashChangeEvent\"><code>HashChangeEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/History\"><code>History</code></a></li><li><a href=\"/ja/docs/Web/API/ImageData\"><code>ImageData</code></a></li><li><a href=\"/ja/docs/Web/API/Location\"><code>Location</code></a></li><li><a href=\"/ja/docs/Web/API/MessageChannel\"><code>MessageChannel</code></a></li><li><a href=\"/ja/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li><li><a href=\"/ja/docs/Web/API/MessagePort\"><code>MessagePort</code></a></li><li><a href=\"/ja/docs/Web/API/Navigator\"><code>Navigator</code></a></li><li><a href=\"/ja/docs/Web/API/PageTransitionEvent\"><code>PageTransitionEvent</code></a></li><li><a href=\"/ja/docs/Web/API/Plugin\"><code>Plugin</code></a></li><li><a href=\"/ja/docs/Web/API/PluginArray\"><code>PluginArray</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PopStateEvent\"><code>PopStateEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/PromiseRejectionEvent\"><code>PromiseRejectionEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RadioNodeList\"><code>RadioNodeList</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ValidityState\"><code>ValidityState</code></a></li><li><a href=\"/ja/docs/Web/API/Window\"><code>Window</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>setInterval()</code></strong> メソッドは <a href=\"/ja/docs/Web/API/Window\"><code>Window</code></a> および <a href=\"/ja/docs/Web/API/Worker\"><code>Worker</code></a> メソッドで提供され、一定の遅延間隔を置いて関数やコードスニペットを繰り返し呼び出します。</p>\n<p>このメソッド、インターバルを一意に識別するインターバル ID を返します。よって <a href=\"/ja/docs/Web/API/clearInterval\" title=\"clearInterval()\"><code>clearInterval()</code></a> を呼び出して、後でインターバルを削除できます。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span>\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span>\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span>\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">,</span> arg0<span class=\"token punctuation\">)</span>\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">,</span> arg0<span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">)</span>\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">,</span> arg0<span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">,</span> <span class=\"token comment\">/* ... ,*/</span> argN<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"func\"><code>func</code></dt>\n  <dd>\n    <p><code>delay</code> ミリ秒が経過するたびに実行する<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>関数</code></a>です。最初の実行は <code>delay</code> ミリ秒後に行われます。</p>\n  </dd>\n  <dt id=\"code\"><code>code</code></dt>\n  <dd>\n    <p>関数の代わりに文字列を含める構文も許容されており、 <code>delay</code> ミリ秒が経過するたびに文字列をコンパイルして実行します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a> の使用にリスクがあるのと同じ理由で、この構文は<strong>推奨しません</strong>。</p>\n  </dd>\n  <dt id=\"delay\"><code>delay</code><span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>指定した関数またはコードを実行する前にタイマーが待つべき時間をミリ秒 (1/1000 秒) 単位で指定します。引数が 10 より小さい場合は、10 を使用します。実際の遅延が長くなることがあります。例えば<a href=\"#%E9%81%85%E5%BB%B6%E3%81%AE%E5%88%B6%E7%B4%84\">遅延の制約</a>をご覧ください。</p>\n  </dd>\n  <dt id=\"arg0_..._argn\"><code>arg0, ..., argN</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>タイマーが満了したときに、 <em>func</em> で指定した関数に渡す追加の引数です。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p>返値 <code>intervalID</code> は 0 ではない正の整数値で、 <code>setInterval()</code> を呼び出して作成したタイマーを識別します。この値を <a href=\"/ja/docs/Web/API/clearInterval\"><code>clearInterval()</code></a> へ渡せば、インターバルを取り消すことができます。</p>\n<p><code>setInterval()</code> と <a href=\"/ja/docs/Web/API/setTimeout\"><code>setTimeout()</code></a> は同じ ID プールを共有しており、 <code>clearInterval()</code> と <a href=\"/ja/docs/Web/API/clearTimeout\" title=\"clearTimeout()\"><code>clearTimeout()</code></a> は技術的に入れ替えて使用できることを意識すると役に立つでしょう。ただし明快さのために、コードを整備するときは混乱を避けるため、常に一致させるようにするべきです。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 引数 <code>delay</code> は、符号付き 32 ビット整数に変換されます。 IDL における符号付き整数の定義によって、<code>delay</code> は事実上 2147483647ms に制限されます。</p>\n</div>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"例_1_基本的な構文","title":"例 1: 基本的な構文","isH3":true,"content":"<p>以下の例は、 <code>setInterval()</code> の基本的な構文を示します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> intervalID <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>myCallback<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Parameter 1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Parameter 2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">myCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// ここにコードを記述します。</span>\n <span class=\"token comment\">// 引数は完全に省略可能です。</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"例_2_2_つの色を切り替える","title":"例 2: 2 つの色を切り替える","isH3":true,"content":"<p>以下の例は停止ボタンを押すまで、1 秒おきに <code>flashtext()</code> 関数を呼び出します。</p>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my_box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>Hello World<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>start<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Start<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stop<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Stop<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"css\">CSS</h4>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.go</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.stop</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// intervalID を格納する変数</span>\n<span class=\"token keyword\">let</span> nIntervId<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 既にインターバルがセットアップされているかどうかを検査</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>nIntervId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    nIntervId <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>flashText<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">flashText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> oElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my_box\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oElem<span class=\"token punctuation\">.</span>className <span class=\"token operator\">===</span> <span class=\"token string\">\"go\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    oElem<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"stop\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    oElem<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">\"go\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">stopTextColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>nIntervId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 変数から intervalID を解放</span>\n  nIntervId <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> changeColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> stopTextColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"結果\">結果</h4><iframe class=\"sample-code-frame\" title=\"例 2: 2 つの色を切り替える\" id=\"frame_example_2_alternating_two_colors\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/setInterval/_sample_.example_2_alternating_two_colors.html\" loading=\"lazy\"></iframe>\n<p><a href=\"/ja/docs/Web/API/clearInterval\"><code>clearInterval()</code></a> も参照してください。</p>"}},{"type":"prose","value":{"id":"this_問題","title":"\"this\" 問題","isH3":false,"content":"<p><code>setInterval()</code> に（もっと言うと他のどんな関数でも）メソッドを渡すと、間違った <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/this\"><code>this</code></a> の値で呼び出されることがあります。この問題は <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/this#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%A8%E3%81%97%E3%81%A6\">JavaScript リファレンス</a>で詳しく説明しています。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":true,"content":"<p><code>setInterval()</code> によって実行されるコードは、呼び出し元とは別の実行コンテキスト内で実行されます。その結果、呼び出された関数の <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/this\"><code>this</code></a> キーワードは <code>window</code> （または <code>global</code>）オブジェクトに設定されます。これは <code>setTimeout</code> を呼び出した関数とは <code>this</code> の値が異なります。以下の例をご覧ください（ここでは <code>setInterval()</code> ではなく <code>setTimeout()</code> を使用していますが、どちらのタイマーでも問題は同じです）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">myMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>sProperty<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"zero,one,two\" と表示</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"one\" と表示</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[object Window]\" と 1 秒後に表示</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"undefined\" と 1.5 秒後に表示</span>\n<span class=\"token comment\">// passing the 'this' object with .call won't work</span>\n<span class=\"token comment\">// because this will change the value of this inside setTimeout itself</span>\n<span class=\"token comment\">// while we want to change the value of this inside myArray.myMethod</span>\n<span class=\"token comment\">// in fact, it will be an error because setTimeout code expects this to be the window object:</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// エラー: \"NS_ERROR_XPC_BAD_OP_ON_WN_PROTO: Illegal operation on WrappedNative prototype object\"</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同じエラー</span>\n</code></pre></div>\n<p>この例でわかるとおり、旧来の JavaScript でコールバック関数に <code>this</code> オブジェクトを渡す方法はありません。</p>"}},{"type":"prose","value":{"id":"取りうる解決策","title":"取りうる解決策","isH3":true,"content":"<p>最近の JavaScript ランタイムはすべて（ブラウザーとそそれ以外を含め）、<a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">アロー関数</a>と <code>this</code> 表記と組み合わせると、 <code>myArray</code> メソッドの内部にいる場合は <code>setInterval( () =&gt; this.myMethod)</code> と記述することが可能です。</p>\n<p>IE に対応する必要がある場合は、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a> メソッドを使用すると、与えられた関数へのすべての呼び出しに対して <code>this</code> として使用する値を指定することができます。これにより、関数が呼び出されたときのコンテキストによって <code>this</code> が何であるかが不明確な問題を簡単に回避することができます。</p>"}},{"type":"prose","value":{"id":"使用上のメモ","title":"使用上のメモ","isH3":false,"content":"<p><code>setInterval()</code> 関数は一般に、アニメーションのように何度も実行される関数に遅延をセットするのに使われます。 <a href=\"/ja/docs/Web/API/clearInterval\"><code>clearInterval()</code></a> を使ってインターバルを取り消すことができます。</p>\n<p>指定時間後に<em>一度</em>だけ関数を呼び出したい場合には、　<a href=\"/ja/docs/Web/API/setTimeout\"><code>setTimeout()</code></a> を使用してください。</p>"}},{"type":"prose","value":{"id":"遅延の制約","title":"遅延の制約","isH3":true,"content":"<p><code>setInterval()</code> のコールバックは順番に <code>setInterval()</code> を呼び出し、最初のインターバルがまだ進行中であっても、別のインターバルを開始させることができます。このことがパフォーマンスに与える潜在的な影響を軽減するために、インターバルが 5 レベルを超えてネストされると、ブラウザーは自動的にインターバルの最小値として 4 ミリ秒を強制するようになります。深くネストされた <code>setInterval()</code> の呼び出しで 4ms 未満の値を指定しようとすると、 4ms に固定されます。</p>\n<p>ブラウザーは、状況によってはさらに厳しい最小間隔値を強制するかもしれませんが、これは一般的なことではありません。また、コールバックの呼び出しの間に経過する実際の時間は、与えられた <code>delay</code> よりも長いかもしれないことに注意してください。例については<a href=\"/ja/docs/Web/API/setTimeout#%E9%81%85%E5%BB%B6%E3%81%8C%E6%8C%87%E5%AE%9A%E5%80%A4%E3%82%88%E3%82%8A%E9%95%B7%E3%81%84%E7%90%86%E7%94%B1\">遅延が指定値より長い理由</a>を参照してください。</p>"}},{"type":"prose","value":{"id":"実行時間をインターバルより確実に短くする","title":"実行時間をインターバルより確実に短くする","isH3":true,"content":"<p>ロジックの実行時間がインターバル時間より長くなる可能性がある場合は、<a href=\"/ja/docs/Web/API/setTimeout\"><code>setTimeout()</code></a> を使用して名前付き関数を再帰的に呼び出すことを推奨します。例えば 5 秒おきにリモートサーバーへ接続するために <code>setInterval()</code> を使用する場合、ネットワークの遅延やサーバーの応答がないなどさまざまな問題で、割り当てられた時間内にリクエストが完了しない可能性があります。そのため、必ずしも順番どおりには返らない XHR リクエストがキュー内にあることに気づくかもしれません。</p>\n<p>この場合は、再帰的な <code>setTimeout()</code> のパターンを推奨します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Your logic here</span>\n\n      <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このコードスニペットでは、名前付き関数 <code>loop()</code> を宣言して直ちに実行します。<code>loop()</code> はロジックが完全に実行された後に、内部の <code>setTimeout()</code> によって再帰呼び出しされます。このパターンは一定の間隔で呼び出すことが保証されませんが、再帰呼び出しの前に前の実行が完了することが保証されます。</p>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval-dev","title":"HTML Standard"}],"query":"api.setInterval"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.setInterval","dataURL":"/ja/docs/Web/API/setInterval/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#settimeout-and-setinterval\" class=\"external\" rel=\" noopener\">core-js にある <code>setInterval</code> のポリフィルで、コールバックに引数を渡すことができるもの</a></li>\n  <li><a href=\"/ja/docs/Web/API/setTimeout\"><code>setTimeout</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/clearTimeout\"><code>clearTimeout</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/clearInterval\"><code>clearInterval</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/Window/requestAnimationFrame\"><code>window.requestAnimationFrame</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"\"this\" 問題","id":"this_問題"},{"text":"使用上のメモ","id":"使用上のメモ"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"setInterval() メソッドは Window および Worker メソッドで提供され、一定の遅延間隔を置いて関数やコードスニペットを繰り返し呼び出します。","popularity":0.0022,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"setInterval()","locale":"en-US","native":"English (US)"},{"title":"setInterval()","locale":"es","native":"Español"},{"title":"WindowOrWorkerGlobalScope.setInterval()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"WindowOrWorkerGlobalScope.setInterval()","locale":"ru","native":"Русский"},{"title":"setInterval()","locale":"zh-CN","native":"中文 (简体)"},{"title":"setInterval()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/setinterval","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/setinterval/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/setInterval","title":"setInterval()"}],"pageTitle":"setInterval() - Web API | MDN","noIndexing":false}}