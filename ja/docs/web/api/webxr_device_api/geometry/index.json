{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebXR の形状と参照空間","mdn_url":"/ja/docs/Web/API/WebXR_Device_API/Geometry","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/WebXR_Device_API\">WebXR Device API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/WebXR_Device_API/Fundamentals\">Fundamentals of WebXR</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/XRAnchor\"><code>XRAnchor</code></a></li><li><a href=\"/ja/docs/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a></li><li><a href=\"/ja/docs/Web/API/XRCPUDepthInformation\"><code>XRCPUDepthInformation</code></a></li><li><a href=\"/ja/docs/Web/API/XRDepthInformation\"><code>XRDepthInformation</code></a></li><li><a href=\"/ja/docs/Web/API/XRFrame\"><code>XRFrame</code></a></li><li><a href=\"/ja/docs/Web/API/XRInputSource\"><code>XRInputSource</code></a></li><li><a href=\"/ja/docs/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a></li><li><a href=\"/ja/docs/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a></li><li><a href=\"/ja/docs/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a></li><li><a href=\"/ja/docs/Web/API/XRPose\"><code>XRPose</code></a></li><li><a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a></li><li><a href=\"/ja/docs/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a></li><li><a href=\"/ja/docs/Web/API/XRRenderState\"><code>XRRenderState</code></a></li><li><a href=\"/ja/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession\"><code>XRSession</code></a></li><li><a href=\"/ja/docs/Web/API/XRSessionEvent\"><code>XRSessionEvent</code></a></li><li><a href=\"/ja/docs/Web/API/XRSpace\"><code>XRSpace</code></a></li><li><a href=\"/ja/docs/Web/API/XRSystem\"><code>XRSystem</code></a></li><li><a href=\"/ja/docs/Web/API/XRView\"><code>XRView</code></a></li><li><a href=\"/ja/docs/Web/API/XRViewerPose\"><code>XRViewerPose</code></a></li><li><a href=\"/ja/docs/Web/API/XRViewport\"><code>XRViewport</code></a></li><li><a href=\"/ja/docs/Web/API/XRWebGLBinding\"><code>XRWebGLBinding</code></a></li><li><a href=\"/ja/docs/Web/API/XRWebGLDepthInformation\"><code>XRWebGLDepthInformation</code></a></li><li><a href=\"/ja/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Navigator/xr\"><code>Navigator.xr</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/WebGLRenderingContext/makeXRCompatible\"><code>WebGLRenderingContext.makeXRCompatible()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/XRReferenceSpace/reset_event\"><code>XRReferenceSpace</code>: <code>reset</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/end_event\"><code>XRSession</code>: <code>end</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/inputsourceschange_event\"><code>XRSession</code>: <code>inputsourceschange</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/select_event\"><code>XRSession</code>: <code>select</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/selectend_event\"><code>XRSession</code>: <code>selectend</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/selectstart_event\"><code>XRSession</code>: <code>selectstart</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/visibilitychange_event\"><code>XRSession</code>: <code>visibilitychange</code></a></li><li><a href=\"/ja/docs/Web/API/XRSystem/devicechange_event\"><code>XRSystem</code>: <code>devicechange</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>基本的なレベルでは、拡張現実または仮想現実のコンテキストでの <a href=\"/ja/docs/Web/API/WebXR_Device_API\">WebXR</a> プレゼンテーションのシーンのレンダリングは <a href=\"/ja/docs/Web/API/WebGL_API\">WebGL</a> を使用して実行されるため、 2 つの API は同じ設計言語の多くを共有します。ただし、XR ヘッドセットなどの機器を使用して真の三次元でシーンを提示する機能を提供するために、WebXR には理解する必要がある追加の概念があります。</p>\n<p>この記事では、 WebXR が WebGL の形状を拡張する方法と、オブジェクトの位置と方向（物理的および仮想的）が空間、特に参照空間を使用して相互にどのように記述されるかを紹介します。</p>\n<p><a href=\"/en-US/docs/Web/API/WebXR_Device_API/Spatial_tracking\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">WebXR での空間追跡 (en-US)</a>の記事は、ユーザーの頭の物理的な位置と向きだけでなく、手などの潜在的に身体の他の部分がデジタル世界にマッピングされ、物理オブジェクトと仮想オブジェクトの両方が動き回るときに追跡されるかをカバーするため、ここで提供される情報に基づいて、シーンを適切にレンダリングして合成できるようにします。</p>"}},{"type":"prose","value":{"id":"三次元形状の基礎","title":"三次元形状の基礎","isH3":true,"content":"<p>ここでは、仮想空間内のオブジェクトの位置、方向、動きを計算するために使用される必要な数学演算に加えて、シーンの人間のビューアーを混合物の中に統合する必要性について説明しますが、形状やシーンの三次元表現を管理するための行列とベクトルは、この記事で達成できることの範囲をはるかに超えています。 <a href=\"/ja/docs/Web/API/WebGL_API/Matrix_math_for_the_web\">ウェブの行列計算</a>で個々の演算について詳しく知ることができます。</p>"}},{"type":"prose","value":{"id":"単位","title":"単位","isH3":false,"content":"<p>WebXR で使用される 三次元空間の形状の詳細について説明する前に、三次元の世界に適用される測定単位を理解しておくと役に立ちます。</p>\n<h4 id=\"長さと距離\">長さと距離</h4>\n<p>WebGL はすべての距離と長さを<strong>メートル</strong> (meters) で測定します。 WebXR はこの標準を継承しています。 また、世界は幅 2 メートル、高さ 2 メートル、奥行き 2 メートルの立方体であるという事実も継承しています。 3 つの軸のそれぞれの最小値は -1.0、最大値は 1.0 で、立方体の中心は (0, 0, 0) にあります。</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/WebXR_Device_API/Geometry/defaultspacedimensions.svg\" alt=\"X、Y、Z 座標軸のそれぞれの最小値が -1、最大値が 1 である WebXR 空間を示す図。\" width=\"730\" height=\"438\" loading=\"lazy\">\n</p>\n<p>この 8 立方メートルの空間は、コードのために宇宙全体を囲んでいます。 描画するすべてのものは、コード内で明示的に、または変換を使用してすべての頂点の座標を調整することにより、この空間に収まるように座標をマッピングする必要があります。 もちろん、最も効率的な方法は、WebGL と同じ座標系を使用するようにオブジェクトとコードを設計することです。</p>\n<p>WebGL の座標と長さは、レンダリング時にシーンがレンダリングされているビューポートの大きさに自動的に変換されます。</p>\n<h4 id=\"角度\">角度</h4>\n<p>角度は <strong><a title=\"ラジアン\" href=\"https://ja.wikipedia.org/wiki/ラジアン\" class=\"external\" rel=\" noopener\">ラジアン</a></strong> (radians) を使用して指定します。 度をラジアンに変換するには、度の値に <code>π/180</code> を掛けるだけです。 次のコードスニペットは、 2 つの単純な関数、<code>degreesToRadians()</code> と <code>radiansToDegrees()</code> を示しています。 これらは、角度を測定するために2つの単位間で相互に変換します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> <span class=\"token constant\">RADIANS_PER_DEGREE</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">180.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">degreesToRadians</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">deg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> deg <span class=\"token operator\">*</span> <span class=\"token constant\">RADIANS_PER_DEGREE</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">radiansToDegrees</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">rad</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> rad <span class=\"token operator\">/</span> <span class=\"token constant\">RADIANS_PER_DEGREE</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"時刻と持続時間\">時刻と持続時間</h4>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> セキュリティ上の理由から、<code>DOMHighResTimeStamp</code> は通常、<a href=\"/en-US/docs/Web/Privacy\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">フィンガープリント (en-US)</a>やタイミングベースの攻撃で使用されないようにするために、クロックに少しの不正確さを導入します。</p>\n</div>\n<p>WebXR のすべての時刻と持続時間は、 <a href=\"/ja/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> 型を使用して測定します。 これは、開始時刻を基準にミリ秒単位で時刻を指定する倍精度浮動小数点値です。 値は浮動小数点数であるため、プラットフォームとハードウェアによっては、ミリ秒レベルよりも正確である場合があります。</p>\n<p>時刻は主に、シーンの前のアニメーションフレームが描画されてからの経過時間を決定するために使用します。 そのため、時刻は通常、ディスプレイのリフレッシュレートに同調し、パフォーマンスの問題によりフレームレートを制限する必要がある場合は、その一部に同調します。 これは、60 FPS のフレームレートを想定して、時刻は通常 1/60 秒の間隔で進むことを意味します。 計算すると、これは各フレームが 16.6667 ミリ秒間隔で理想的にレンダリングされることを意味することがわかります。</p>"}},{"type":"prose","value":{"id":"行列を使用した形状操作","title":"行列を使用した形状操作","isH3":true,"content":"<p>以下に、三次元シーンのレンダリング時に実行する必要がある3つの主要な変換に行列を使用する方法など、<a href=\"/ja/docs/Web/API/WebGL_API/Matrix_math_for_the_web\">三次元形状に関連する行列数学のガイド</a>を提供します。</p>\n<ul>\n  <li><strong><a href=\"/ja/docs/Web/API/WebGL_API/Matrix_math_for_the_web#translation_matrix\">平行移動</a></strong> (translation) は、仮想空間を介して点の位置をずらすための行列の使用です。この動きは、オブジェクトの軸のいずれか、またはそれらの任意の組み合わせに沿ったものにすることができます。</li>\n  <li><strong><a href=\"/ja/docs/Web/API/WebGL_API/Matrix_math_for_the_web#rotation_matrix\">回転</a></strong> (rotation) は、オブジェクトの座標系の原点を中心に点を回転させる行列の応用です。</li>\n  <li><strong><a href=\"/ja/docs/Web/API/WebGL_API/Matrix_math_for_the_web#scale_matrix\">拡大縮小</a></strong> (scaling) とは、行列を使用してオブジェクトの大きさを変更することです。</li>\n</ul>\n<p>変換が点に適用されると言うとき、その延長線上で考えると、点の<em>集まり</em>に適用できることに注意してください。 オブジェクトは空間内のいくつかの点で構成されるいくつかのポリゴンで表されるため、オブジェクトを構成するすべての点に同じ変換を適用すると、オブジェクト全体に同じ変換が適用されます。 ベクトルは座標値を使用して記述され、ベクトルの方向と大きさを定義するため、変換をベクトルに適用することもできます。</p>"}},{"type":"prose","value":{"id":"空間の原点について","title":"空間の原点について","isH3":false,"content":"<p>XR で表現されたシーンは、仮想であれ拡張であれ、 1 から数十フレームの参照情報を合成したものです。位置と方向のデータを WebXR システムと直接交換する必要があるシーン内の各オブジェクトは、シーン内の他のオブジェクトが理解できるように、必要に応じて理解および適応できる方法でその情報を報告できる必要があります。</p>\n<p>拡張現実 (AR) では、これは、仮想オブジェクトを現実の世界に挿入する必要があるためです。 仮想オブジェクトを正しく配置するだけでなく、ユーザーの視点が変化しても、仮想オブジェクトが自分でさまよっているように見えないようにします。 仮想現実 (VR) では、ユーザーの動きと仮想ディスプレイの映像が一致するような空間演出をすることで、違和感やズレを防ぐことが重要です。</p>\n<p>したがって、それは空間感覚を作り出すことがすべてです。 XR 開発者の観点から見ると、ステージの設計はユーザーにとって最も重要な部分です。 建築家やセットデザイナーのように、あなたは物理的な環境を通して気分や体験を生み出す力を持っています。 その空間をどのように構築するかは、ユーザーがどのように対話して探索できるかに依存し、影響を与えます。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 空間には通常、前景、中距離、背景の要素があります。 適切なバランスは、ユニークな存在感を生み出し、ユーザーを導くことができます。 前景には、直接対話できるオブジェクトとインターフェイスが含まれています。 中距離には、ある程度対話できるオブジェクト、またはより密接に調査して関与するために近づくことができるオブジェクトが含まれます。 一方、背景は通常、少なくともユーザーが中距離または前景の範囲に移動して近づくことができない限り、ほとんどまたは完全に非対話です。</p>\n</div>\n<p>WebXR では、（シーンが起こる座標空間など）<strong>空間</strong> (space) の基本的な概念は、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSpace\"><code>XRSpace</code> <small>(en-US)</small></a> のインスタンスによって表されます。 この空間は、ユーザーの環境内のオブジェクトと（光源やカメラなど）他のエンティティの相対位置と動きを決定するために使用します。</p>\n<p>三次元空間内の点は、前述のとおり、 3 つの成分で構成され、それぞれが 3 つの軸の 1 つに沿った点の距離を識別します。</p>\n<p>これは空間の<strong>ネイティブの原点</strong> (native origin) であり、ユーザーの環境内の特定の物理的な場所に対応しています。 各空間には、XR 機器の追跡システムによって追跡される独自のネイティブの原点があります。 これは、空間のローカル座標系の原点である<strong>実質的な原点</strong> (effective origin) とは異なる場合があります。</p>\n<p>座標系の方向性を次の図に示します。</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/WebXR_Device_API/Geometry/webgl_coordinates.svg\" alt=\"WebGL および WebXR で使用される座標系を示す図。\" width=\"487\" height=\"487\" loading=\"lazy\">\n</p>\n<p><strong>原点オフセット</strong> (origin offset) と呼ばれる <a href=\"/ja/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> を使用して、点を空間自体の実質的な座標系から XR 機器のネイティブ座標系に変換します。 通常、 2 つの原点は空間が最初に確立されるときに位置合わせされるため、原点オフセットは最初は単純に恒等変換です。 ただし、位置合わせの変化は時間とともに蓄積されるため、補正するために原点オフセットが変化する場合があります。</p>\n<p>原点に対する空間内の点の位置は、上の図に示す 3 つの空間軸のそれぞれに沿った点の距離を決定することによって決定されます。 空間の原点は、空間の中心にあり、各軸に沿ってゼロの位置にある点 (0, 0, 0) です。 具体的には、初期の開始条件の下で、空間に対する閲覧者の既定の向きを使用します。</p>\n<ul>\n  <li><strong>x 軸</strong> (x-axis) は原点から離れて左から右に水平方向に伸び、 +1.0 の x 座標は世界の右端にあります。 x の負の値は、原点から左に向かって伸び、空間の左端で -1.0 の値に達します。</li>\n  <li><strong>y 軸</strong> (y-axis) は正で、原点から画面の上部に向かって上向きに伸び、世界空間の上部で +1.0 に達します。 0 未満の y の値は原点の下にあり、画面の下部に向かって伸び、世界空間の下部で -1.0 に達します。</li>\n  <li><strong>z 軸</strong> (z-axis) は原点から画面の外側に伸び、その方向でユーザーに最も近い点で +1.0 に達します。 z の負の値は、ユーザーから離れて画面内に伸び、世界で最も離れた点の z は -1.0 になります。</li>\n</ul>\n<p>すべてのオブジェクトは、最も単純なレベルでは、三次元空間内の点とオフセット変換によって定義される一連のポリゴンであり、オブジェクトを移動および回転して空間内の目的の点に配置する方法を示します。 オフセット変換が単位行列の場合、オブジェクトは原点に配置されます。</p>\n<p>ただし、空間追跡やシーン形状に役立つためには、XR 機器の知覚位置を空間の座標系と相関させる必要があります。 そこで参照スペースの出番です。</p>"}},{"type":"prose","value":{"id":"参照空間","title":"参照空間","isH3":false,"content":"<p>さまざまな XR ハードウェアが利用可能であり、多くの開発者からさまざまなフォーム係数で提供されるため、開発者が使用している追跡技術と直接通信する必要があることを期待することは非現実的であり、拡張性がありません。 代わりに、<a href=\"/ja/docs/Web/API/WebXR_Device_API\">WebXR 機器 API</a> は、開発者がユーザーエクスペリエンスを計画し、それらのニーズを最もよく表す適切な参照空間を要求するように設計されています。 これは、<a href=\"/ja/docs/Glossary/User_agent\">ユーザーエージェント</a>に対してこれらのニーズに一致する <strong><a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a></strong> を要求することによって行われます。</p>\n<p><code>XRReferenceSpace</code> オブジェクトは、 1 つの座標系の基準系を別の座標系の基準系に適合させる手段として機能します。 ヘッドセットを装着した後、あなたの周りの仮想世界が、あなたの位置が (0, 0, 0) である座標系を持っていると考えてください。 つまり、あなたはすべての中心にいます。 それは力強さを感じませんか？ ヘッドセットに向かって 真正面が -Z 軸で、+Z が後ろにあります。 X は右が正、左が負です。 Y は下に行くと負、上に行くと正になります。 これは、XRシステムの使用開始時の空間におけるヘッドセットの位置を示し、原点 (0, 0, 0) は基本的には鼻筋に配置されています。 この空間が<strong>世界空間</strong> (world space) です。</p>\n<p>次に、左手にある XR コントローラーについて考えます。 動きとその向きを報告する機能がありますが、ヘッドセットの位置や、より重要なことに、その座標系については何も知りません。 ただし、コントローラーにはその位置をアプリに報告する方法が必要です。 したがって、独自の座標系があります。 これは、入力イベントが発生したときにアプリに提供される参照空間です。 この参照空間は、コントローラーの座標をヘッドセットの座標にマップする方法を内部的に認識しているため、WebXR は座標を相互に変換できます。</p>\n<p><code>XRReferenceSpace</code> を作成すると、モーションとオリエンテーションの追跡を一定レベル保証し、 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRViewerPose\"><code>XRViewerPose</code> <small>(en-US)</small></a>を取得する機構を提供します。この空間がユーザーのヘッドセット、観察者のヘッドセット、仮想カメラなどのビューアを表す場合、ワールド空間に対する位置と向きを表す行列を取得することができます。</p>\n<p>これはすべてブラウザーの処理責任であり、基盤となる各参照空間の能力に関係なく、一貫した振る舞いを提供します。 個々の XR 機器がどれほど強力であったりシンプルであっても、WebXR を使用して記述されたコードは、利用可能なハードウェアの制限内で機能します。</p>\n<p>選択する参照空間の種類に関係なく、その型は <a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> または <code>XRReferenceSpace</code> から派生した型です。 <a href=\"/ja/docs/Web/API/XRSession/requestReferenceSpace\"><code>XRReferenceSpaceType</code></a> 列挙で定義されている現在利用可能な参照空間型を以下に示します。</p>\n<dl>\n  <dt id=\"bounded-floor\"><code>bounded-floor</code></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a> で、 <code>local</code> 型と同様ですが、返されたオブジェクトの <a href=\"/ja/docs/Web/API/XRBoundedReferenceSpace/boundsGeometry\" title=\"boundsGeometry\"><code>boundsGeometry</code></a> によって指定された所定の境界の外にユーザーが移動することは想定されていません。</p>\n  </dd>\n  <dt id=\"local\"><code>local</code></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> で、セッションが作成された時の閲覧者の位置の近くに原点を持つ追跡空間です。正確な位置はプラットフォームと実装に依存します。ユーザーは開始位置からあまり動くことはないと思われますので、追跡はこの用途に最適化されています。 6 つの自由度 (6DoF) 追跡機能を持つ機器の場合、<code>local</code>参照空間は、環境に対して原点を安定に保とうとします。</p>\n  </dd>\n  <dt id=\"local-floor\"><code>local-floor</code></dt>\n  <dd>\n    <p><code>local</code> 型に似た <a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> で、開始位置が閲覧者が安全に立てる場所に置かれ、 y 軸の値が床面を 0 とすることを除きます。その床レベルが分からない場合、<a href=\"/ja/docs/Glossary/User_agent\">ユーザーエージェント</a>は床レベルを推定します。推定された床レベルが 0 でない場合、ブラウザーはフィンガープリントを避けるような方法でそれを（おそらく最も近いセンチメートルに）丸めることが期待されています。</p>\n  </dd>\n  <dt id=\"unbounded\"><code>unbounded</code></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> で、原点から非常に長い距離を自由に移動することができる追跡空間です。閲覧者は全く追跡されません。追跡はユーザーの現在位置の安定性のために最適化されており、ネイティブの原点はその必要性に応じてドリフトすることができます。</p>\n  </dd>\n  <dt id=\"viewer\"><code>viewer</code></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> で、閲覧者の位置と向きを原点として追跡する追跡空間です。これはユーザーが物理的に移動できる環境で使用され、没入型、インライン型問わず <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> の全てのインスタンスで対応していますが、インラインセッションで最も有用です。これは、閲覧者と入力の間の距離を決定するとき、またはオフセット空間を扱うときに特に便利です。それ以外では、通常、他の参照空間型のいずれかがより頻繁に使用されます。</p>\n  </dd>\n</dl>\n<p>このガイドの残りの部分では、アプリのニーズに適した参照空間を選択する方法について説明します。</p>"}},{"type":"prose","value":{"id":"参照空間を使用した空間関係の定義","title":"参照空間を使用した空間関係の定義","isH3":false,"content":"<p>環境に対するオブジェクトの位置と方向を参照したり、環境自体を制約したりするために一般的に使用される方法がいくつかあります。 そのために、WebXR は、<strong>参照空間</strong> (reference spaces) と呼ばれる標準空間のセットを定義します。 それぞれの標準空間は、ローカル空間の基準系の座標系を、それが存在する空間の座標系に関連付けるさまざまな手法をに対応しています。</p>\n<p>ただし、使用している参照空間の型に関係なく、同じ関数を使用して座標を空間から親空間に変換できます。</p>"}},{"type":"prose","value":{"id":"参照空間型の選択","title":"参照空間型の選択","isH3":false,"content":"<p>まず、使用する参照型を決定するプロセスの最も簡単なステップを説明しましょう。 使用する可能性が最も高い参照空間は、<code>local</code>、<code>local-floor</code>、<code>unbounded</code>、<code>bounded-floor</code> です。</p>\n<h4 id=\"床レベルの参照空間\">床レベルの参照空間</h4>\n<p>名前に <code>-floor</code> が含まれている参照空間型は、対応する非床空間と同じように機能しますが、ビューアーが地面またはその近く（常に上）の安全な場所に自動的に配置されるようにします。 これは、他に床が確立されていない限り、<code>y</code> 座標が常に 0 である平面です。 これらの空間型は、部屋の床が平らでない場合や、地上の高さが変化する床の場合、アバターの垂直位置の変更をに対応しないため、実行<em>できません</em>。</p>\n<h4 id=\"主な参照空間型\">主な参照空間型</h4>\n<p><code>viewer</code> 参照空間は、ビューアーの空間内の位置に対応します。 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRFrame\"><code>XRFrame</code> <small>(en-US)</small></a> メソッド <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRFrame/getViewerPose\"><code>getViewerPose()</code> <small>(en-US)</small></a> によって返される <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRViewerPose\"><code>XRViewerPose</code> <small>(en-US)</small></a> によって使用されます。 それ以外の場合、通常は直接使用されません。 唯一の実質的な例外は、ウェブコンテンツ内で XR シーンをインラインで実行するときに <code>viewer</code> 参照空間を使用する可能性が高いことです。</p>\n<p><code>local</code> 参照空間は、通常、シングルルームなどの比較的小さなエリアを記述するために使用されます。 没入型セッションモード（<code>immersive-vr</code> または <code>immersive-ar</code>）を使用している場合は常に使用できるだけでなく、新しいセッションを要求するときに常にオプション機能に含まれます。 したがって、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSystem/requestSession\"><code>navigator.xr.requestSession()</code> <small>(en-US)</small></a> によって作成されたすべてのセッションは、<code>local</code> 参照空間型をに対応します。</p>\n<p>複数の部屋が含まれる可能性のある大きな領域を表すには、ビューアーの動きに制約を指定しない <code>unbounded</code> 参照空間型を使用できます。 ユーザーが特定の領域に移動できないようにする場合は、自分で処理する必要があります。</p>\n<p><code>bounded-floor</code> 参照空間型には、対応する床に制限されない型はありません。 ユーザーの XR ハードウェアが現実世界の空間内を移動することを許可し、それが可能である場合、<code>bounded-floor</code> 参照空間を使用すると、通過が許可され安全な領域の境界を明確に定義できるため便利です。 制限付き参照空間の使用の詳細については、<a href=\"/en-US/docs/Web/API/WebXR_Device_API/Bounded_reference_spaces\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">制限付き参照空間の使用 (en-US)</a>の記事を参照してください。</p>\n<p>参照空間を使用してオブジェクトの位置と方向を記述することにより、WebXR は、基盤となる XR ハードウェアに関係なく、これらの記述に使用するデータの形式を標準化できます。 参照空間の構成は、空間のコンテンツを正しくレンダリングするために必要なビュー行列とオブジェクトポーズを提供します。</p>"}},{"type":"prose","value":{"id":"参照空間の確立","title":"参照空間の確立","isH3":true,"content":"<p>最上位の空間（<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> のメソッド <a href=\"/ja/docs/Web/API/XRSession/requestReferenceSpace\" title=\"requestReferenceSpace()\"><code>requestReferenceSpace()</code></a> を呼び出すことによって取得される空間）は、世界空間全体に使用される座標系を表します。 すべては基本的にこの座標系に関連付けられ、ユーザーの機器の位置と仮想世界の間の関係を表します。</p>\n<p>WebXR を使用して、アノテーションによる世界の拡張から 360°動画再生、科学シミュレーション、仮想現実トレーニングシステムなど、想像できるあらゆるものに対応できますが、三次元ビデオゲームを典型的な WebXR アプリケーションの例として取り上げましょう。 ゲーム世界の空間に立っているプレイヤーのアバターのモデルを考えてみましょう。 世界空間を基準にしてアバターを配置するには、世界の参照空間で定義された座標系を使用します。</p>\n<p>プレーヤーを新しい位置に移動するには、すべての座標を書き換えるか、移動するたびに手動で変換を適用しますが、参照空間とそれらを相互に作成できるため、より簡単な方法があります。 プレーヤーのアバターの新しい位置と方向を表す <a href=\"/ja/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> オブジェクトを作成してから、<a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> メソッド <a href=\"/ja/docs/Web/API/XRReferenceSpace/getOffsetReferenceSpace\" title=\"getOffsetReferenceSpace()\"><code>getOffsetReferenceSpace()</code></a> を使用して、新しい位置にアバターの視点を表す新しい参照空間を作成します。 これは、キーボードやマウスなどの非 XR 機器を使用してプレーヤーのアバターを世界中に移動するためのサポートを実装する場合に特に便利です。</p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/nVSlQkSSQeQ\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" loading=\"lazy\"></iframe>\n<p>新しく作成された参照空間を使用すると、アバターは同じ座標に留まることができますが、新しい位置に配置され（そして世界をその視点から見ることができるように）世界に現れます。 参照空間を使用してプレーヤーの視点を管理する方法の詳細については、の記事を参照してください。</p>\n<p>私たちのゲームアバターの例の場合、アバター（または他の動いているクリーチャーや機械）が世界中を滑走する単純なブロブになることはまれです。 それらは通常、追加の形だけでなく、動く脚、歩くときに揺れる腕、回転したり素早く上下する頭、動き回る武器などの内部の動きも持っています。 標準の WebGL 手法を使用してこれらを実現し、位置決め行列または <a href=\"/ja/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> オブジェクトで実質的な原点に対して正しい位置にシフトします。</p>"}},{"type":"prose","value":{"id":"参照空間に関するデバイスの制限","title":"参照空間に関するデバイスの制限","isH3":true,"content":"<p>一部の XR 機器は、API が不足している機能を補うために努力しているにもかかわらず、特定の体験をに対応するように作成できないものもあります。 例えば、GearVR デバイスなどの基本的なヘッドセットを、ユーザーが実質的な動きを追跡して環境を歩き回るのをに対応する必要があるアプリで機能させる方法はありません。</p>\n<p>プログレッシブエンハンスメントをに対応し、それによってアプリまたはサイトの可用性を広げるには、必要な機能の量が最も少ない参照空間を選択するか、参照空間の取得の失敗を検出し、あまり強力でない代替手段で再試行するフォールバックメカニズムを提供します。</p>\n<p>発生する互換性の問題は、VR のみのヘッドセットで <code>immersive-ar</code> モード（拡張現実セッション）をに対応できないのと同じくらい根本的なものであるか、XR セッションを作成しようとしたときに満たすことができない1つ以上の必須オプションの要求が含まれる場合があります。</p>\n<p>XR セッションは、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSystem/requestSession\"><code>navigator.xr.requestSession()</code> <small>(en-US)</small></a> メソッドを使用して作成します。 オプションの引数の 1 つは、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSystem/requestSession\"><code>XRSessionInit</code> <small>(en-US)</small></a> ディクショナリに準拠したオブジェクトであり、これを使用して、セッションが対応する必要がある（または理想的には対応すべき）必須またはオプションの機能を指定できます。 現在対応しているオプションは、標準参照空間を識別する文字列のみです。 これらを使用すると、コードを実行する前に、必要な、または優先する参照空間型をに対応できる WebXR セッションにアクセスできることを保証できます。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> 現在、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> を作成するときに使用できるオプションは、使用または優先する参照空間のみです。 将来的には、より多くのオプションが利用可能になる可能性があります。</p>\n</div>"}},{"type":"prose","value":{"id":"オブジェクトの配置と方向付け","title":"オブジェクトの配置と方向付け","isH3":false,"content":"<p>アプリと WebXR API の間で交換されるすべての空間（位置、方向、および動き）情報は、フレームのレンダリング時に特定の空間に関連して表現されます。 それ以上の位置と方向の管理はユーザーと WebGL の間で行われますが、オブジェクトを 三次元世界に正しく配置するために、参照空間からの原点オフセットを利用します。</p>\n<p>アニメーションフレームをレンダリングするときは、WebXR セッションの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> オブジェクトの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/requestAnimationFrame\"><code>requestAnimationFrame()</code> <small>(en-US)</small></a> メソッドを呼び出したときに指定されたコールバック関数が呼び出されます。 コールバックは、その引数の1つとして、フレームが発生する時刻を示すタイムスタンプを受け取り、対応するアニメーションフレームのすべてのレンダリングを実行する必要があります。</p>\n<p>時刻値を増やしながらコールバックが繰り返し呼び出されると、コールバックは XR ハードウェアを使用して提示される一連のフレームを生成し、それによって 三次元シーンがユーザーに表示されます。</p>\n<p>アニメーションプロセスの詳細については、<a href=\"/ja/docs/Web/API/WebXR_Device_API/Rendering\">レンダリングと WebXR フレームアニメーションコールバック</a>の記事を参照してください。</p>\n<p>仮想空間でオブジェクトを配置、方向付け、移動する方法の例と、コードレベルでの詳細な説明については、<a href=\"/ja/docs/Web/API/WebXR_Device_API/Movement_and_motion\">移動、向き、モーション</a>の記事を参照してください。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/WebXR_Device_API\">WebXR Device API</a></li>\n  <li><a href=\"/ja/docs/Web/API/WebGL_API\">WebGL: ウェブのための 2D および 三次元レンダリング</a></li>\n  <li><a href=\"/ja/docs/Web/API/WebGL_API/Matrix_math_for_the_web\">ウェブの行列計算</a></li>\n</ul>"}}],"toc":[{"text":"単位","id":"単位"},{"text":"空間の原点について","id":"空間の原点について"},{"text":"参照空間","id":"参照空間"},{"text":"参照空間を使用した空間関係の定義","id":"参照空間を使用した空間関係の定義"},{"text":"参照空間型の選択","id":"参照空間型の選択"},{"text":"オブジェクトの配置と方向付け","id":"オブジェクトの配置と方向付け"},{"text":"関連情報","id":"関連情報"}],"summary":"基本的なレベルでは、拡張現実または仮想現実のコンテキストでの WebXR プレゼンテーションのシーンのレンダリングは WebGL を使用して実行されるため、 2 つの API は同じ設計言語の多くを共有します。ただし、XR ヘッドセットなどの機器を使用して真の三次元でシーンを提示する機能を提供するために、WebXR には理解する必要がある追加の概念があります。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Geometry and reference spaces in WebXR","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/webxr_device_api/geometry","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/webxr_device_api/geometry/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/WebXR_Device_API","title":"WebXR Device API"},{"uri":"/ja/docs/Web/API/WebXR_Device_API/Geometry","title":"WebXR の形状と参照空間"}],"pageTitle":"WebXR の形状と参照空間 - Web API | MDN","noIndexing":false}}