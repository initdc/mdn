{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebXR セッションの起動と停止","mdn_url":"/ja/docs/Web/API/WebXR_Device_API/Startup_and_shutdown","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/WebXR_Device_API\">WebXR Device API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/WebXR_Device_API/Fundamentals\">Fundamentals of WebXR</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/XRAnchor\"><code>XRAnchor</code></a></li><li><a href=\"/ja/docs/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a></li><li><a href=\"/ja/docs/Web/API/XRCPUDepthInformation\"><code>XRCPUDepthInformation</code></a></li><li><a href=\"/ja/docs/Web/API/XRDepthInformation\"><code>XRDepthInformation</code></a></li><li><a href=\"/ja/docs/Web/API/XRFrame\"><code>XRFrame</code></a></li><li><a href=\"/ja/docs/Web/API/XRInputSource\"><code>XRInputSource</code></a></li><li><a href=\"/ja/docs/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a></li><li><a href=\"/ja/docs/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a></li><li><a href=\"/ja/docs/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a></li><li><a href=\"/ja/docs/Web/API/XRPose\"><code>XRPose</code></a></li><li><a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a></li><li><a href=\"/ja/docs/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a></li><li><a href=\"/ja/docs/Web/API/XRRenderState\"><code>XRRenderState</code></a></li><li><a href=\"/ja/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession\"><code>XRSession</code></a></li><li><a href=\"/ja/docs/Web/API/XRSessionEvent\"><code>XRSessionEvent</code></a></li><li><a href=\"/ja/docs/Web/API/XRSpace\"><code>XRSpace</code></a></li><li><a href=\"/ja/docs/Web/API/XRSystem\"><code>XRSystem</code></a></li><li><a href=\"/ja/docs/Web/API/XRView\"><code>XRView</code></a></li><li><a href=\"/ja/docs/Web/API/XRViewerPose\"><code>XRViewerPose</code></a></li><li><a href=\"/ja/docs/Web/API/XRViewport\"><code>XRViewport</code></a></li><li><a href=\"/ja/docs/Web/API/XRWebGLBinding\"><code>XRWebGLBinding</code></a></li><li><a href=\"/ja/docs/Web/API/XRWebGLDepthInformation\"><code>XRWebGLDepthInformation</code></a></li><li><a href=\"/ja/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/Navigator/xr\"><code>Navigator.xr</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/WebGLRenderingContext/makeXRCompatible\"><code>WebGLRenderingContext.makeXRCompatible()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>イベント</summary><ol><li><a href=\"/ja/docs/Web/API/XRReferenceSpace/reset_event\"><code>XRReferenceSpace</code>: <code>reset</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/end_event\"><code>XRSession</code>: <code>end</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/inputsourceschange_event\"><code>XRSession</code>: <code>inputsourceschange</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/select_event\"><code>XRSession</code>: <code>select</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/selectend_event\"><code>XRSession</code>: <code>selectend</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/selectstart_event\"><code>XRSession</code>: <code>selectstart</code></a></li><li><a href=\"/ja/docs/Web/API/XRSession/visibilitychange_event\"><code>XRSession</code>: <code>visibilitychange</code></a></li><li><a href=\"/ja/docs/Web/API/XRSystem/devicechange_event\"><code>XRSystem</code>: <code>devicechange</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>安全なコンテキスト用:</strong> この機能は一部またはすべての<a href=\"#browser_compatibility\">対応しているブラウザー</a>において、<a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a> (HTTPS) でのみ利用できます。</p></div>\n<p>すでに 3D グラフィックス全般、特に WebGL に精通していると想定すると、次の大胆なステップで複合現実を実現できます。 現実の世界に加えて、またはその代わりに人工の風景やオブジェクトを表示するという考え方は、それほど複雑ではありません。 拡張現実または仮想現実のシナリオのレンダリングを開始する前に、WebXR セッションを作成してセットアップする必要があります。 また、適切に停止する方法も知っておく必要があります。 この記事では、これらのことを行う方法を学びます。</p>"}},{"type":"prose","value":{"id":"webxr_api_へのアクセス","title":"WebXR API へのアクセス","isH3":false,"content":"<p>アプリによる WebXR API へのアクセスは、<a href=\"/ja/docs/Web/API/XRSystem\"><code>XRSystem</code></a> オブジェクトから始まります。 このオブジェクトは、ユーザーの機器で利用可能なハードウェアとドライバーを通じて利用可能な WebXR デバイススイート全体を表します。 <a href=\"/ja/docs/Web/API/Navigator\"><code>Navigator</code></a> のプロパティ <a href=\"/ja/docs/Web/API/Navigator/xr\" title=\"xr\"><code>xr</code></a> を介してドキュメントで使用できるグローバルな <code>XRSystem</code> オブジェクトがあります。 これは、使用可能なハードウェアとドキュメントの環境を考慮して、適切な XR ハードウェアが使用できる場合に <code>XRSystem</code> オブジェクトを返すプロパティです。</p>\n<p>したがって、<code>XRSystem</code> オブジェクトをフェッチする最も単純なコードは次のとおりです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> xr <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>xr<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>WebXR が利用できない場合、<code>xr</code> の値は <code>null</code> または <code>undefined</code> になります。</p>"}},{"type":"prose","value":{"id":"webxr_の可用性","title":"WebXR の可用性","isH3":true,"content":"<p>新しい、まだ開発中の API として、WebXR のサポートは特定のデバイスとブラウザーに限定されています。 そして、それらでさえ、デフォルトで有効にならないかもしれません。 ただし、互換性のあるシステムがない場合でも、WebXR を試すことができる選択肢がある場合があります。</p>\n<h4 id=\"webxr_ポリフィル\">WebXR ポリフィル</h4>\n<p>WebXR 仕様を設計しているチームは、WebXR API をサポートしていないブラウザーで WebXR をシミュレートするために使用できる <a href=\"https://github.com/immersive-web/webxr-polyfill\" class=\"external\" rel=\" noopener\">WebXR ポリフィル</a>を公開しています。 ブラウザーが古い <a href=\"/ja/docs/Web/API/WebVR_API\">WebVR API</a> をサポートしている場合は、それが使用されます。 それ以外の場合、ポリフィルは、Google の Cardboard VR API を使用する実装にフォールバックします。</p>\n<p>ポリフィルは仕様とともに維持され、仕様に合わせて最新に保たれます。 さらに、WebXR および WebXR に関連するその他のテクノロジーのサポートと、ポリフィルの変更の実装の経時的なサポートとして、ブラウザーとの互換性を維持するために更新されます。</p>\n<p>必ず readme を注意深く読んでください。 ポリフィルには、ターゲットブラウザーに含まれる新しい JavaScript 機能との互換性の程度に応じて、いくつかのバージョンがあります。</p>\n<h4 id=\"webxr_api_エミュレーター拡張機能\">WebXR API エミュレーター拡張機能</h4>\n<p><a href=\"https://mixedreality.mozilla.org/\" class=\"external\" rel=\" noopener\">Mozilla WebXR チーム</a>は、WebXR API をエミュレートし、HTC Vive、Oculus Go、Oculus Quest、Samsung Gear、Google Cardboard などの互換性のあるさまざまなデバイスをシミュレートする、Firefox と Chrome の両方と互換性のある <a href=\"https://blog.mozvr.com/webxr-emulator-extension/\" class=\"external\" rel=\" noopener\">WebXR API Emulator</a> ブラウザー拡張機能を作成しました。 拡張機能を配置すると、ヘッドセットと任意のハンドコントローラーの位置と向き、およびコントローラーのボタンを制御できる開発者ツールパネルを開くことができます。</p>\n<h5 id=\"エミュレーターの使用\">エミュレーターの使用</h5>\n<p>実際のヘッドセットを使用するのに比べて少し厄介ですが、これにより、WebXR が通常利用できないデスクトップコンピューターで WebXR のコードを試して開発することができます。 また、コードを実際のデバイスに取り込む前に、いくつかの基本的なテストを実行できます。 ただし、エミュレーターはまだすべての WebXR API を完全にエミュレートしていないため、予期しない問題が発生する可能性があることに注意してください。 ここでも、readme ファイルを注意深く読み、開始する前に制限事項を確認してください。</p>\n<p><strong>重要</strong>: 製品をリリースまたは出荷する前に、常に実際の AR や VR のハードウェアでコードをテストする必要があります。 エミュレート、シミュレーション、またはポリフィルされた環境は、物理デバイスでの実際のテストに代わる適切なものではありません。</p>\n<h5 id=\"拡張機能の取得\">拡張機能の取得</h5>\n<p>以下のサポートされているブラウザー用の WebXR API エミュレーターをダウンロードしてください。</p>\n<ul>\n  <li><a href=\"https://chrome.google.com/webstore/detail/webxr-api-emulator/mjddjgeghkdijejnciaefnkjmkafnnje\" class=\"external\" rel=\" noopener\">Google Chrome</a></li>\n  <li><a href=\"https://addons.mozilla.org/ja/firefox/addon/webxr-api-emulator/\" class=\"external\" rel=\" noopener\">Mozilla Firefox</a></li>\n</ul>\n<p><a href=\"https://github.com/MozillaReality/WebXR-emulator-extension\" class=\"external\" rel=\" noopener\">拡張機能のソースコード</a>は、GitHub で入手できます。</p>\n<h5 id=\"エミュレーターの問題とメモ\">エミュレーターの問題とメモ</h5>\n<p>これは拡張機能に関する完全な記事の場所ではありませんが、言及する価値のある特定の事項がいくつかあります。</p>\n<p>拡張機能のバージョン 0.4.0 は 2020 年 3 月 26 日に発表されました。 安定状態に近づいている <a href=\"https://www.w3.org/TR/webxr-ar-module-1/\" class=\"external\" rel=\" noopener\">WebXR AR モジュール</a>による拡張現実（AR）のサポートが導入されました。 AR のドキュメントは、近日中に MDN で公開されます。</p>\n<p>その他の改善には、エミュレーターを更新して <code>XR</code> インターフェイスの名前を <a href=\"/ja/docs/Web/API/XRSystem\"><code>XRSystem</code></a> に変更し、スクイーズ（グリップ）入力ソースのサポートを導入し、<a href=\"/ja/docs/Web/API/XRInputSource\"><code>XRInputSource</code></a> のプロパティ <a href=\"/ja/docs/Web/API/XRInputSource/profiles\" title=\"profiles\"><code>profiles</code></a> のサポートを追加します。</p>"}},{"type":"prose","value":{"id":"コンテキスト要件","title":"コンテキスト要件","isH3":true,"content":"<p>WebXR 互換環境は、安全にロードされたドキュメントから始まります。 ドキュメントは、ローカルドライブ（<code>http://localhost/...</code> などの URL を使用するなど）からロードするか、ページのロード時に <a href=\"/ja/docs/Glossary/https\">HTTPS</a> を使用する必要があります。 同様に、JavaScript コードは安全にロードされている必要があります。</p>\n<p>ドキュメントが安全にロードされなかった場合は、それほど遠くまで到達できません。 <a href=\"/ja/docs/Web/API/Navigator/xr\"><code>navigator.xr</code></a> プロパティは、ドキュメントが安全にロードされていない場合には存在しません。 これは、互換性のある XR ハードウェアが利用できない場合にも当てはまります。 どちらの場合でも、<code>xr</code> プロパティの欠如に備える必要があり、エラーを適切に処理するか、何らかの形式のフォールバックを提供する必要があります。</p>"}},{"type":"prose","value":{"id":"webxr_ポリフィルにフォールバック","title":"WebXR ポリフィルにフォールバック","isH3":true,"content":"<p>フォールバックの選択肢の 1 つは、WebXR 標準化プロセスを担当する <a href=\"https://www.w3.org/immersive-web/\" class=\"external\" rel=\" noopener\">Immersive Web ワーキンググループ</a>によって提供される <a href=\"https://github.com/immersive-web/webxr-polyfill/\" class=\"external\" rel=\" noopener\">WebXR ポリフィル</a>です。 <a href=\"/ja/docs/Glossary/Polyfill\">ポリフィル</a>は、WebXR をネイティブでサポートしていないブラウザーに WebXR のサポートを提供し、サポートしているブラウザーの実装間の不整合を解消するため、WebXR がネイティブで利用できる場合でも役立つ場合があります。</p>\n<p>ここでは、前の <a href=\"/ja/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> タグを使用してポリフィルが含まれている、またはロードされていると想定して、オプションでポリフィルをインストールした後に <a href=\"/ja/docs/Web/API/XRSystem\"><code>XRSystem</code></a> オブジェクトを返す <code>getXR()</code> 関数を定義します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> webxrPolyfill <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getXR</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">usePolyfill</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> tempXR<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>usePolyfill<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"if-needed\"</span><span class=\"token operator\">:</span>\n      tempXR <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>xr<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>tempXR<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        webxrPolyfill <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebXRPolyfill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tempXR <span class=\"token operator\">=</span> webxrPolyfill<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"yes\"</span><span class=\"token operator\">:</span>\n      webxrPolyfill <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebXRPolyfill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      tempXR <span class=\"token operator\">=</span> webxrPolyfill<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"no\"</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      tempXR <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>xr<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> tempXR<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> xr <span class=\"token operator\">=</span> <span class=\"token function\">getXR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// ネイティブの XRSystem オブジェクトを取得</span>\n<span class=\"token keyword\">const</span> xr <span class=\"token operator\">=</span> <span class=\"token function\">getXR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 常にポリフィルから XRSystem を返す</span>\n<span class=\"token keyword\">const</span> xr <span class=\"token operator\">=</span> <span class=\"token function\">getXR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"if-needed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// navigator.xr がない場合にのみポリフィルを使用</span>\n</code></pre></div>\n<p>返された <code>XRSystem</code> オブジェクトは、MDN で提供されているドキュメントに従って使用できます。 グローバル変数 <code>webxrPolyfill</code> は、ポリフィルへの参照を保持するためにのみ使用され、不要になるまでポリフィルを使用できるようにします。 これを <code>null</code> に設定すると、依存しているオブジェクトがそれを使用しなくなったときに、ポリフィルをガベージコレクションできることを示します。</p>\n<p>もちろん、必要に応じてこれを簡略化できます。 アプリはおそらくポリフィルを使用するかどうかについてあまり行き来しないので、これを必要な特定のケースに単純化できます。</p>"}},{"type":"prose","value":{"id":"権限とセキュリティ","title":"権限とセキュリティ","isH3":true,"content":"<p>WebXR を中心に展開する多くのセキュリティ対策があります。 まず、ユーザーの世界観を完全に置き換える <code>immersive-vr</code> モードを使用するには、<code>xr-spatial-tracking</code> <a href=\"/ja/docs/Web/HTTP/Feature_Policy\">機能ポリシー</a>を設定する必要があります。 それに加えて、ドキュメントは安全で現在フォーカスされている必要があります。 最後に、<a href=\"/ja/docs/Web/API/Element/click_event\" title=\"click\"><code>click</code></a> イベントのハンドラーなどのユーザーイベントハンドラーから <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSystem/requestSession\"><code>requestSession()</code> <small>(en-US)</small></a> を呼び出す必要があります。</p>\n<p>安全な WebXR の活動と使用方法の詳細については、<a href=\"/en-US/docs/Web/API/WebXR_Device_API/Permissions_and_security\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">WebXR の権限とセキュリティ (en-US)</a>の記事を参照してください。</p>"}},{"type":"prose","value":{"id":"必要なセッションタイプが利用可能であることの確認","title":"必要なセッションタイプが利用可能であることの確認","isH3":true,"content":"<p>新しい WebXR セッションを作成する前に、ユーザーのハードウェアとソフトウェアが使用したいプレゼンテーションモードをサポートしているかどうかを最初に確認するのがしばしば賢明です。 これは、たとえば、没入型プレゼンテーションとインラインプレゼンテーションのどちらを使用するかを決定するためにも使用できます。</p>\n<p>特定のモードがサポートされているかどうかを確認するには、<a href=\"/ja/docs/Web/API/XRSystem\"><code>XRSystem</code></a> のメソッド <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSystem/isSessionSupported\"><code>isSessionSupported()</code> <small>(en-US)</small></a> を呼び出します。 これは、指定されたタイプのセッションが使用できる場合は <code>true</code>、そうでない場合は <code>false</code> に解決される promise を返します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> immersiveOK <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>xr<span class=\"token punctuation\">.</span><span class=\"token function\">isSessionSupported</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"immersive-vr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>immersiveOK<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 没入型 VR セッションを作成して使用する</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 代わりにインラインセッションを作成するか、</span>\n  <span class=\"token comment\">// インラインが必要な場合は非互換性についてユーザーに伝えます</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"セッションの作成と開始","title":"セッションの作成と開始","isH3":false,"content":"<p>WebXR セッションは <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> オブジェクトによって表されます。 <code>XRSession</code> を取得するには、<a href=\"/ja/docs/Web/API/XRSystem\"><code>XRSystem</code></a> の <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSystem/requestSession\"><code>requestSession()</code> <small>(en-US)</small></a> メソッドを呼び出します。 このメソッドは、<code>XRSession</code> を正常に確立できる場合に <code>XRSession</code> で解決する promise を返します。 基本的には、次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>xr<span class=\"token punctuation\">.</span><span class=\"token function\">requestSession</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"immersive-vr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">session</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  xrSession <span class=\"token operator\">=</span> session<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* セッションのセットアップを続行します */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このコードスニペットの <code>requestSession()</code> に渡されるパラメーター <code>immersive-vr</code> に注意してください。 この文字列は、確立する WebXR セッションのタイプを指定します。 この場合は、完全に没入型の仮想現実体験です。 次の 3 つの選択肢があります。</p>\n<dl>\n  <dt id=\"immersive-vr\"><code>immersive-vr</code></dt>\n  <dd>\n    <p>ヘッドセットまたは同様のデバイスを使用した、完全に没入型の仮想現実セッション。 ユーザーの周りの世界をあなたが提示する画像で完全に置き換えます。</p>\n  </dd>\n  <dt id=\"immersive-ar\"><code>immersive-ar</code></dt>\n  <dd>\n    <p>ヘッドセットまたは類似の装置を使用して画像が現実世界に追加される拡張現実セッション。 <em>AR 仕様は流動的であるため、このオプションはまだ広くサポートされていません。</em></p>\n  </dd>\n  <dt id=\"inline\"><code>inline</code></dt>\n  <dd>\n    <p>ドキュメントウィンドウのコンテキスト内での XR 画像の画面表示。</p>\n  </dd>\n</dl>\n<p>機能ポリシーがその使用を禁止したり、ユーザーがヘッドセットの使用許可を拒否したりするなど、何らかの理由でセッションを作成できなかった場合、promise は拒否されます。 したがって、起動して WebXR セッションを返すより完全な関数は次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createImmersiveSession</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    session <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> xr<span class=\"token punctuation\">.</span><span class=\"token function\">requestSession</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"immersive-vr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> session<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この関数は、新しい <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> を返すか、セッションの作成中にエラーが発生した場合に例外をスローします。</p>"}},{"type":"prose","value":{"id":"セッションのカスタマイズ","title":"セッションのカスタマイズ","isH3":true,"content":"<p>表示モードに加えて、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSystem/requestSession\"><code>requestSession()</code> <small>(en-US)</small></a> メソッドは、セッションをカスタマイズするための初期化パラメーターを持つオプションのオブジェクトを取ります。 現在、セッションの構成可能な唯一の側面は、世界の座標系を表すためにどの参照空間を使用する必要があるかです。 必要な参照空間または使用したい参照空間と互換性のあるセッションを取得するために、必須またはオプションの参照空間を指定できます。</p>\n<p>たとえば、無制限（<code>unbounded</code>）の参照空間が必要な場合は、取得するセッションで無制限の空間を使用できるようにするために、それを必須機能として指定できます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createImmersiveSession</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    session <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> xr<span class=\"token punctuation\">.</span><span class=\"token function\">requestSession</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"immersive-vr\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">requiredFeatures</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"unbounded\"</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> session<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>一方、<em>インライン</em>セッションが必要で、ローカル（<code>local</code>）参照空間を使用する場合は、次のようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createInlineSession</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">xr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    session <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> xr<span class=\"token punctuation\">.</span><span class=\"token function\">requestSession</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inline\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">optionalFeatures</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"local\"</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> session<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この <code>createInlineSession()</code> 関数は、ローカル参照空間と互換性のあるインラインセッションを作成しようとします。 参照空間を作成する準備ができたら、ローカル空間を試すことができます。 それが失敗した場合は、すべてのデバイスがサポートする必要があるビューアー（<code>viewer</code>）参照空間にフォールバックします。</p>"}},{"type":"prose","value":{"id":"新しいセッションを使用するための準備","title":"新しいセッションを使用するための準備","isH3":true,"content":"<p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSystem/requestSession\"><code>requestSession()</code> <small>(en-US)</small></a> メソッドが返した promise が正常に解決されると、使用可能な WebXR セッションが手中にあることがわかります。 次に、セッションを使用できるように準備し、アニメーションを開始できます。</p>\n<p>セッションの構成を完了するために必要な（または必要になる可能性のある）主なことは、次のとおりです。</p>\n<ul>\n  <li>監視する必要があるイベントのハンドラーを追加します。 ほとんどの場合、これには <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/end_event\"><code>end</code> <small>(en-US)</small></a> が含まれるため、セッションの終了を検出できます。</li>\n  <li>XR 入力コントローラーを使用する場合は、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/inputsourceschange_event\"><code>inputsourceschange</code> <small>(en-US)</small></a> イベントを監視して、XR 入力コントローラーの追加または削除、およびさまざまな<a href=\"/en-US/docs/Web/API/WebXR_Device_API/Inputs\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">選択およびスクイーズのアクションイベント (en-US)</a>を検出します。</li>\n  <li><a href=\"/ja/docs/Web/API/XRSystem\"><code>XRSystem</code></a> のイベント <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSystem/devicechange_event\"><code>devicechange</code> <small>(en-US)</small></a> を監視して、利用可能な没入型デバイスのセットが変更されたときに通知を受けることができます。</li>\n  <li>ターゲットコンテキストで <a href=\"/ja/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> のメソッド <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLCanvasElement/getContext\"><code>getContext()</code> <small>(en-US)</small></a> を呼び出して、フレームをレンダリングする予定のキャンバスの WebGL コンテキストを取得します。</li>\n  <li>WebGL データとモデルを設定し、シーンをレンダリングする準備をします。</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code> <small>(en-US)</small></a> を作成し、セッションの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRRenderState\"><code>renderState</code> <small>(en-US)</small></a> のプロパティ <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRRenderState/baseLayer\"><code>baseLayer</code> <small>(en-US)</small></a> に値を渡して、XR システムのソースとして WebGL コンテキストを設定します。</li>\n  <li>必要に応じて、オブジェクトの初期位置と拡大縮小の計算を実行します。</li>\n  <li><a href=\"/ja/docs/Web/API/WebXR_Device_API/Rendering\">フレームレンダリングサイクル</a>を開始します。</li>\n</ul>\n<p>基本的な形式では、この最終的なセットアップを行うコードは次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">runSession</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">session</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> worldData<span class=\"token punctuation\">;</span>\n\n  session<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">,</span> onSessionEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">xrCompatible</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// WebGL データなどを設定する</span>\n\n  worldData <span class=\"token operator\">=</span> <span class=\"token function\">loadGLPrograms</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> <span class=\"token string\">\"worlddata.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>worldData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// WebGL の構成を完了する</span>\n\n  worldData<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">updateRenderState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">baseLayer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XRWebGLLayer</span><span class=\"token punctuation\">(</span>worldData<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// シーンのレンダリングを開始します</span>\n\n  referenceSpace <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> worldData<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">requestReferenceSpace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unbounded\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  worldData<span class=\"token punctuation\">.</span>referenceSpace <span class=\"token operator\">=</span> referenceSpace<span class=\"token punctuation\">.</span><span class=\"token function\">getOffsetReferenceSpace</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">XRRigidTransform</span><span class=\"token punctuation\">(</span>worldData<span class=\"token punctuation\">.</span>playerSpawnPosition<span class=\"token punctuation\">,</span> worldData<span class=\"token punctuation\">.</span>playerSpawnOrientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  worldData<span class=\"token punctuation\">.</span>animationFrameRequestID <span class=\"token operator\">=</span> worldData<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>onDrawFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> worldData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この例では、<code>worldData</code> という名前のオブジェクトを作成して、その世界とレンダリング環境に関するデータをカプセル化します。 これには、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> 自体、WebGL でシーンをレンダリングするために使用されるすべてのデータ、その世界の参照空間、および <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/requestAnimationFrame\"><code>requestAnimationFrame()</code> <small>(en-US)</small></a> によって返される ID が含まれます。</p>\n<p>最初に、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/end_event\"><code>end</code> <small>(en-US)</small></a> イベントのハンドラーが設定されます。 次に、レンダリングするキャンバスを取得し、その WebGL コンテキストへの参照を取得して、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLCanvasElement/getContext\"><code>getContext()</code> <small>(en-US)</small></a> を呼び出すときに <code>xrCompatible</code> オプションを指定します。</p>\n<p>次に、WebGL レンダラーに必要なデータとセットアップが実行されてから、WebGL が独自のフレームバッファーとして WebGL コンテキストのフレームバッファーを使用するように構成されます。 これは、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> のメソッド <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/updateRenderState\"><code>updateRenderState()</code> <small>(en-US)</small></a> を使用して行われ、レンダリング状態の <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRRenderState/baseLayer\"><code>baseLayer</code> <small>(en-US)</small></a> を、WebGL コンテキストをカプセル化する新しく作成された <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code> <small>(en-US)</small></a> に設定します。</p>"}},{"type":"prose","value":{"id":"シーンをレンダリングする準備","title":"シーンをレンダリングする準備","isH3":true,"content":"<p>この時点で、<code>XRSession</code> 自体が完全に構成されているため、レンダリングを開始できます。 まず、その世界の座標が記述される参照空間が必要です。 <code>XRSession</code> の <a href=\"/ja/docs/Web/API/XRSession/requestReferenceSpace\" title=\"requestReferenceSpace()\"><code>requestReferenceSpace()</code></a> メソッドを呼び出すことにより、セッションの初期参照空間を取得できます。 <code>requestReferenceSpace()</code> を呼び出すときに、必要な参照空間のタイプの名前を指定します。 この場合、<code>unbounded</code> です。 ニーズに応じて、<code>local</code> または <code>viewer</code> を簡単に指定できます。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> ニーズに合った適切な参照空間を選択する方法を理解するには、<a href=\"/ja/docs/Web/API/WebXR_Device_API/Geometry\">WebXR の幾何学と参照空間</a>の<a href=\"/ja/docs/Web/API/WebXR_Device_API/Geometry#selecting_the_reference_space_type\">参照空間タイプの選択</a>を参照してください。</p>\n</div>\n<p><code>requestReferenceSpace()</code> によって返される参照空間は、原点 (0, 0, 0) を空間の中心に配置します。 これは素晴らしいことです — プレイヤーの視点が世界の正確な中心から始まる場合は。 しかし、ほとんどの場合、そうではありません。 その場合は、最初の参照空間で <a href=\"/ja/docs/Web/API/XRReferenceSpace/getOffsetReferenceSpace\" title=\"getOffsetReferenceSpace()\"><code>getOffsetReferenceSpace()</code></a> を呼び出して、(0, 0, 0) がビューアーの位置に配置されるように<a href=\"/ja/docs/Web/API/WebXR_Device_API/Geometry#establishing_the_reference_space\">座標系をオフセット</a>し、同様に顔を望ましい方向にシフトする<em>新しい</em>参照空間を作成します。 <code>getOffsetReferenceSpace()</code> への入力値は、デフォルトの世界座標で指定されたプレーヤーの位置と方向をカプセル化する <a href=\"/ja/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> です。</p>\n<p>新しい参照空間が手中にあり、保管するために <code>worldData</code> オブジェクトに格納された状態で、セッションの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/requestAnimationFrame\"><code>requestAnimationFrame()</code> <small>(en-US)</small></a> メソッドを呼び出して、WebXR セッションのアニメーションの次のフレームをレンダリングするときにコールバックが実行されるようにスケジュールします。 戻り値は、必要に応じて後でリクエストをキャンセルするために使用できる ID であるため、<code>worldData</code> にも保存します。</p>\n<p>最後に、<code>worldData</code> オブジェクトが呼び出し元に返され、メインコードが後で必要なデータを参照できるようになります。 この時点で、セットアッププロセスが完了し、アプリケーションのレンダリング段階に入りました。 レンダリングの詳細については、<a href=\"/ja/docs/Web/API/WebXR_Device_API/Rendering\">レンダリングと WebXR フレームアニメーションコールバック</a>を参照してください。</p>"}},{"type":"prose","value":{"id":"運用の詳細について","title":"運用の詳細について","isH3":true,"content":"<p>明らかに、これはほんの一例です。 すべてを保存するために <code>worldData</code> オブジェクトは必要ありません。 あなたが好きな方法で維持するために必要な情報を保存できます。 別の情報が必要になったり、別の特定の要件が発生したりして、それはあなたが別の方法で、または別の順序で物事を行う原因となります。</p>\n<p>同様に、モデルやその他の情報を読み込んだり、WebGL データ（テクスチャ、頂点バッファー、シェーダーなど）を設定したりするために使用する特定の方法は、ニーズや使用しているフレームワークの状況などによって大きく異なります。</p>"}},{"type":"prose","value":{"id":"重要なセッション維持イベント","title":"重要なセッション維持イベント","isH3":false,"content":"<p>WebXR セッションの過程で、セッションの状態の変化を示す、またはセッションを適切に動作させ続けるために必要なことを通知するいくつかのイベントのいずれかを受け取る場合があります。</p>"}},{"type":"prose","value":{"id":"セッションの可視状態の変化の検出","title":"セッションの可視状態の変化の検出","isH3":true,"content":"<p><code>XRSession</code> の可視性の状態が変化すると（セッションが非表示または表示されたとき、またはユーザーが別のコンテキストにフォーカスしたときなど）、セッションは <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/visibilitychange_event\"><code>visibilitychange</code> <small>(en-US)</small></a> イベントを受け取ります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>session<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onvisibilitychange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>visibilityState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"hidden\"</span><span class=\"token operator\">:</span>\n      myFrameRate <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"blurred-visible\"</span><span class=\"token operator\">:</span>\n      myFrameRate <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"visible\"</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      myFrameRate <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>この例では、可視性の状態に応じて変数 <code>myFrameRate</code> を変更します。 おそらく、レンダラーはこの値を使用して、アニメーションループの進行に応じて新しいフレームをレンダリングする頻度を計算します。 したがって、シーンの「ぼかし（blurred）」が多くなるほどレンダリングの頻度は低くなります。</p>"}},{"type":"prose","value":{"id":"参照空間のリセットの検出","title":"参照空間のリセットの検出","isH3":true,"content":"<p>時折、ユーザーの世界での位置を追跡しているときに、<a href=\"/ja/docs/Web/API/WebXR_Device_API/Geometry#on_the_origins_of_spaces\">ネイティブの原点</a>に不連続またはジャンプが発生することがあります。 これが発生する最も一般的なシナリオは、ユーザーが XR デバイスの再キャリブレーションを要求したとき、または XR ハードウェアから受信した追跡データの流れに一時的な障害が発生したときです。 これらの状況により、ネイティブの原点は、ネイティブの原点をユーザーの位置と向きに合わせるために必要な距離と方向の角度で突然ジャンプします。</p>\n<p>これが発生すると、<a href=\"/ja/docs/Web/API/XRReferenceSpace/reset_event\" title=\"reset\"><code>reset</code></a> イベントがセッションの <a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> に送信されます。 イベントの <a href=\"/ja/docs/Web/API/XRReferenceSpaceEvent/transform\" title=\"transform\"><code>transform</code></a> プロパティは、ネイティブの原点を再調整するために必要な変換を詳述する <a href=\"/ja/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> です。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> <code>reset</code> イベントは <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> ではなく <a href=\"/ja/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> で発生することに注意してください。</p>\n</div>\n<p><code>reset</code> イベントのもう 1 つの一般的な原因は、制限付き参照空間（<a href=\"/ja/docs/Web/API/XRSession/requestReferenceSpace\"><code>XRReferenceSpaceType</code></a> が <code>bounded-floor</code> である参照空間）が、<a href=\"/ja/docs/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a> のプロパティ <a href=\"/ja/docs/Web/API/XRBoundedReferenceSpace/boundsGeometry\" title=\"boundsGeometry\"><code>boundsGeometry</code></a> の変更によって指定されたジオメトリを持っている場合です。</p>\n<p>参照空間のリセットのより一般的な原因と、詳細およびサンプルコードについては、<a href=\"/ja/docs/Web/API/XRReferenceSpace/reset_event\" title=\"reset\"><code>reset</code></a> イベントのドキュメントを参照してください。</p>"}},{"type":"prose","value":{"id":"webxr_入力コントロールの使用可能なセットが変更されたときの検出","title":"WebXR 入力コントロールの使用可能なセットが変更されたときの検出","isH3":true,"content":"<p>WebXR は、WebXR システムに固有の入力コントロールのリストを保持しています。 これらのデバイスには、ハンドヘルドコントローラー、モーションセンサーカメラ、モーションセンシティブグローブ、その他のフィードバックデバイスなどが含まれます。 ユーザーが WebXR コントローラーデバイスを接続または切断すると、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/inputsourceschange_event\"><code>inputsourceschange</code> <small>(en-US)</small></a> イベントが <code>XRSession</code> にディスパッチされます。 これは、デバイスの可用性をユーザーに通知する機会であり、デバイスの入力を監視し始め、構成オプションを提供するか、またはそれを使用するために必要なものを提供します。</p>"}},{"type":"prose","value":{"id":"webxr_セッションの終了","title":"WebXR セッションの終了","isH3":false,"content":"<p>ユーザーの VR または AR セッションが終了に近づくと、セッションは終了します。 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> の停止は、ユーザーがボタンをクリックしてセッションを終了したために停止する時であるとセッション自体が判断した場合（ユーザーが XR デバイスをオフにした場合など）、またはアプリケーションが然るべきその他の状況に応じて発生します。</p>\n<p>ここでは、WebXR セッションの停止を要求する方法と、要求によるかどうかにかかわらず、セッションが終了したことを検出する方法の両方について説明します。</p>"}},{"type":"prose","value":{"id":"セッションの停止","title":"セッションの停止","isH3":true,"content":"<p>終了時に WebXR セッションを完全に停止するには、セッションの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/end\"><code>end()</code> <small>(en-US)</small></a> メソッドを呼び出す必要があります。 これは、停止がいつ完了するかを知るために使用できる <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\">promise</a> を返します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">shutdownXR</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">session</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* この時点で、WebXR は完全に停止しています */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>shutdownXR()</code> が呼び出し元に戻ると、WebXR セッションは完全かつ安全に停止しています。</p>\n<p>リソースの解放など、セッションの終了時に実行する必要がある作業がある場合は、メインコード本体ではなく、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/end_event\"><code>end</code> <small>(en-US)</small></a> イベントハンドラーでその作業を実行する必要があります。 このようにして、停止が自動的にトリガーされたか手動でトリガーされたかに関係なく、クリーンアップを処理します。</p>"}},{"type":"prose","value":{"id":"セッションが終了したときの検出","title":"セッションが終了したときの検出","isH3":true,"content":"<p>以前に確立したように、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/end\"><code>end()</code> <small>(en-US)</small></a> メソッドを呼び出したか、ユーザーがヘッドセットをオフにしたか、XR システムで何らかの解決できないエラーが発生したかなど、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code> <small>(en-US)</small></a> に送信される <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/XRSession/end_event\"><code>end</code> <small>(en-US)</small></a> イベントを監視することで、WebXR セッションが終了したことを検出できます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>session<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onend</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* セッションが停止しました */</span>\n\n  <span class=\"token function\">freeResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>ここでは、セッションが終了し、<code>end</code> イベントが受信されると、<code>freeResources()</code> 関数が呼び出され、XR の提示を処理するために以前に割り当てたりロードしたりしたリソースが解放されます。 <code>end</code> イベントハンドラーで <code>freeResources()</code> を呼び出すことにより、ユーザーが停止をトリガーするボタンをクリックしたとき（上記の <code>shutdownXR()</code> 関数を呼び出すことなど）と、エラーまたは何らかの理由でセッションが自動的に終了したときの両方で <code>freeResources()</code> を呼び出します。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/WebXR_Device_API\">WebXR Device API</a></li>\n  <li><a href=\"/ja/docs/Web/API/WebXR_Device_API/Fundamentals\">WebXR の基本</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebXR_Device_API/Spatial_tracking\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">WebXR での空間追跡 (en-US)</a></li>\n  <li><a href=\"/ja/docs/Web/API/WebXR_Device_API/Cameras\">視点とビューアー: WebXR でのカメラのシミュレーション</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebXR_Device_API/Bounded_reference_spaces\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">制限付き参照空間の使用 (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebXR_Device_API/Inputs\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">入力と入力ソース (en-US)</a></li>\n</ul>"}}],"toc":[{"text":"WebXR API へのアクセス","id":"webxr_api_へのアクセス"},{"text":"セッションの作成と開始","id":"セッションの作成と開始"},{"text":"重要なセッション維持イベント","id":"重要なセッション維持イベント"},{"text":"WebXR セッションの終了","id":"webxr_セッションの終了"},{"text":"関連情報","id":"関連情報"}],"summary":"すでに 3D グラフィックス全般、特に WebGL に精通していると想定すると、次の大胆なステップで複合現実を実現できます。 現実の世界に加えて、またはその代わりに人工の風景やオブジェクトを表示するという考え方は、それほど複雑ではありません。 拡張現実または仮想現実のシナリオのレンダリングを開始する前に、WebXR セッションを作成してセットアップする必要があります。 また、適切に停止する方法も知っておく必要があります。 この記事では、これらのことを行う方法を学びます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Starting up and shutting down a WebXR session","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/webxr_device_api/startup_and_shutdown","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/webxr_device_api/startup_and_shutdown/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/WebXR_Device_API","title":"WebXR Device API"},{"uri":"/ja/docs/Web/API/WebXR_Device_API/Startup_and_shutdown","title":"WebXR セッションの起動と停止"}],"pageTitle":"WebXR セッションの起動と停止 - Web API | MDN","noIndexing":false}}