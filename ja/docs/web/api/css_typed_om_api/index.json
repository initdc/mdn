{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"CSS 型付きオブジェクトモデル API","mdn_url":"/ja/docs/Web/API/CSS_Typed_OM_API","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/CSS_Typed_OM_API\">CSS Typed OM API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/CSS_Typed_OM_API/Guide\">Using the CSS Typed Object Model</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/CSSKeywordValue\"><code>CSSKeywordValue</code></a></li><li><a href=\"/ja/docs/Web/API/CSSImageValue\"><code>CSSImageValue</code></a></li><li><a href=\"/ja/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a></li><li><a href=\"/ja/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a></li><li><a href=\"/ja/docs/Web/API/CSSPositionValue\"><code>CSSPositionValue</code></a></li><li><a href=\"/ja/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code></a></li><li><a href=\"/ja/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a></li><li><a href=\"/ja/docs/Web/API/StylePropertyMap\"><code>StylePropertyMap</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>CSS 型付きオブジェクトモデル API (CSS Typed Object Model API) は、 CSS の値を文字列ではなく、型付き JavaScript オブジェクトとして提供することにより、CSS のプロパティ操作を簡略化するものです。これは CSS の操作を単純化するだけでなく、 <a href=\"/ja/docs/Web/API/HTMLElement/style\"><code>HTMLElement.style</code></a> と比較して、パフォーマンスへの悪影響も軽減できます。</p>\n<p>一般的に、 CSS の値は JavaScript で文字列として読み書きすることができますが、これは遅くて煩わしい場合があります。 CSS 型付きオブジェクトモデル API は、文字列の解析と連結に比べてより簡単に、より確実に操作と理解ができる特殊な JS オブジェクトで値を表現することにより、基礎となる値と対話するためのインターフェイスを提供します。これは開発者にとって扱いがより簡単です（例えば、数値が実際の JS の数値に反映され、そこに定義されている単位を考慮した数値演算ができます）。また、 CSS の文字列の構築と解析の両方を行うことなく、値を直接操作し、安価に元の値に戻すことができるため、一般に高速に処理することができます。</p>\n<p>CSS 型付きオブジェクトモデルは、 CSS のプロパティに割り当てられた値を効率的に操作できるとともに、より理解しやすく書きやすい保守性の高いコードを実現します。</p>"}},{"type":"prose","value":{"id":"インターフェイス","title":"インターフェイス","isH3":false,"content":""}},{"type":"prose","value":{"id":"cssstylevalue","title":"<code>CSSStyleValue</code>","isH3":true,"content":"<p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code> <small>(en-US)</small></a> は CSS 型付きオブジェクトモデル API のインターフェイスで、型付きオブジェクトモデル API を通してアクセスできるすべての CSS 値の基底クラスとなるものです。このクラスのインスタンスは、文字列が期待される場所であればどこでも使用することができます。</p>\n<dl>\n  <dt id=\"cssstylevalue.parseproperty_csstext_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSStyleValue/parse\"><code>CSSStyleValue.parse(property, cssText)</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>parse() は CSSStyleValue インターフェイスのメソッドで、 CSS 文字列から CSSNumericValue を構築することができます。これは、特定の CSS プロパティを指定された値に設定し、最初の値を CSSStyleValue オブジェクトとして返します。</p>\n  </dd>\n  <dt id=\"cssstylevalue.parseall_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSStyleValue/parseAll\"><code>CSSStyleValue.parseAll()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>parseAll() は CSSStyleValue インターフェイスのメソッドで、特定の CSS プロパティを指定された値に設定し、CSSStyleValue オブジェクトの配列を返すもので、それぞれが指定された値の一つを含んでいます。</p>\n  </dd>\n</dl>","titleAsText":"CSSStyleValue"}},{"type":"prose","value":{"id":"stylepropertymap","title":"<code>StylePropertyMap</code>","isH3":true,"content":"<p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StylePropertyMap\"><code>StylePropertyMap</code> <small>(en-US)</small></a> は CSS 型付きオブジェクトモデル API のインターフェイスで、 CSSStyleDeclaration の代替となる CSS 宣言ブロックの表現を提供します。</p>\n<dl>\n  <dt id=\"stylepropertymap.set_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StylePropertyMap/set\"><code>StylePropertyMap.set()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>StylePropertyMap インターフェイスのメソッドで、指定されたプロパティを持つ CSS 宣言を指定された値に変更します。</p>\n  </dd>\n  <dt id=\"stylepropertymap.append_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StylePropertyMap/append\"><code>StylePropertyMap.append()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>指定されたプロパティと値による新しい CSS 宣言を、この StylePropertyMap に追加するメソッドです。</p>\n  </dd>\n  <dt id=\"stylepropertymap.delete_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StylePropertyMap/delete\"><code>StylePropertyMap.delete()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>指定されたプロパティを持つ CSS 宣言を、この StylePropertyMap から削除するメソッドです。</p>\n  </dd>\n  <dt id=\"stylepropertymap.clear_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/StylePropertyMap/clear\"><code>StylePropertyMap.clear()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>StylePropertyMap からすべての宣言を削除するメソッドです。</p>\n  </dd>\n</dl>","titleAsText":"StylePropertyMap"}},{"type":"prose","value":{"id":"cssunparsedvalue","title":"<code>CSSUnparsedValue</code>","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a> は CSS 型付きオブジェクトモデル API のインターフェイスで、カスタムプロパティを参照するプロパティ値を表します。文字列の断片と変数の参照のリストから成ります。</p>\n<dl>\n  <dt id=\"cssunparsedvalue_2\"><a href=\"/ja/docs/Web/API/CSSUnparsedValue/CSSUnparsedValue\" title=\"CSSUnparsedValue()\"><code>CSSUnparsedValue()</code></a> コンストラクター</dt>\n  <dd>\n    <p>カスタムプロパティを参照するプロパティ値を表す新しい CSSUnparsedValue オブジェクトを生成します。</p>\n  </dd>\n  <dt id=\"cssunparsedvalue.entries\"><a href=\"/ja/docs/Web/API/CSSUnparsedValue/entries\"><code>CSSUnparsedValue.entries()</code></a></dt>\n  <dd>\n    <p>このオブジェクト自身の列挙可能なプロパティの [key, value] ペアの配列を for...in ループで提供されるのと同じ順序で返すメソッドです（for-in ループはプロトタイプチェーン内のプロパティも列挙する点が異なります）。</p>\n  </dd>\n  <dt id=\"cssunparsedvalue.foreach\"><a href=\"/ja/docs/Web/API/CSSUnparsedValue/forEach\"><code>CSSUnparsedValue.forEach()</code></a></dt>\n  <dd>\n    <p>CSSUnparsedValue の各要素に対して、提供された関数を一回ずつ実行するメソッドです。</p>\n  </dd>\n  <dt id=\"cssunparsedvalue.keys\"><a href=\"/ja/docs/Web/API/CSSUnparsedValue/keys\"><code>CSSUnparsedValue.keys()</code></a></dt>\n  <dd>\n    <p>配列のそれぞれのインデックスのキーを含む、新しい配列反復子オブジェクトを返すメソッドです。</p>\n  </dd>\n</dl>","titleAsText":"CSSUnparsedValue"}},{"type":"prose","value":{"id":"csskeywordvalue_シリアライズ","title":"<code>CSSKeywordValue</code> シリアライズ","isH3":true,"content":"<p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSKeywordValue\"><code>CSSKeywordValue</code> <small>(en-US)</small></a> は CSS 型付きオブジェクトモデル API のインターフェイスで、 CSS キーワードやその他の識別子を表現するためのオブジェクトを作成します。</p>\n<dl>\n  <dt id=\"csskeywordvalue_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSKeywordValue/CSSKeywordValue\"><code>CSSKeywordValue()</code> <small>(en-US)</small></a> コンストラクター</dt>\n  <dd>\n    <p>CSS キーワードなどの識別子を表す新しい <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSKeywordValue/CSSKeywordValue\"><code>CSSKeywordValue()</code> <small>(en-US)</small></a> オブジェクトを作成するコンストラクターです。</p>\n  </dd>\n  <dt id=\"csskeywordvalue.value_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSKeywordValue/value\"><code>CSSKeywordValue.value()</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>CSSKeywordValue インターフェイスのプロパティで、CSSKeywordValue の値を返すか設定します。</p>\n  </dd>\n</dl>","titleAsText":"CSSKeywordValue シリアライズ"}},{"type":"prose","value":{"id":"cssstylevalue_インターフェイス","title":"CSSStyleValue インターフェイス","isH3":false,"content":"<p>CSSStyleValue は、すべての CSS 値が表現される基本クラスです。サブクラスは以下の通りです。</p>\n<dl>\n  <dt id=\"cssimagevalue\"><a href=\"/ja/docs/Web/API/CSSImageValue\"><code>CSSImageValue</code></a> オブジェクト</dt>\n  <dd>\n    <p>画像を取るプロパティ、例えば <a href=\"/ja/docs/Web/CSS/background-image\"><code>background-image</code></a>, <a href=\"/ja/docs/Web/CSS/list-style-image\"><code>list-style-image</code></a>, <a href=\"/ja/docs/Web/CSS/border-image-source\"><code>border-image-source</code></a> の値を表すインターフェイスです。</p>\n  </dd>\n  <dt id=\"csskeywordvalue_en-us_2\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSKeywordValue\"><code>CSSKeywordValue</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>CSS のキーワードやその他の識別子を表現するオブジェクトを生成する インターフェイスです。文字列が期待される場所で使用された場合、 CSSKeyword.value の値を返します。</p>\n  </dd>\n  <dt id=\"cssmathvalue_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSMathValue\"><code>CSSMathValue</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>単一の値や単位よりも複雑な数値を表すサブクラスのツリーで、次のようなものがあります。</p>\n    <ul>\n      <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSMathInvert\"><code>CSSMathInvert</code> <small>(en-US)</small></a> - CSS の <a href=\"/ja/docs/Web/CSS/calc\"><code>calc()</code></a> 値を <code>calc(1 / &lt;value&gt;)</code> のように使用したものを表現します。</li>\n      <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSMathMax\"><code>CSSMathMax</code> <small>(en-US)</small></a> - CSS の <a href=\"/ja/docs/Web/CSS/max\"><code>max()</code></a> 関数を表します。</li>\n      <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSMathMin\"><code>CSSMathMin</code> <small>(en-US)</small></a> - CSS の <a href=\"/ja/docs/Web/CSS/min\"><code>min()</code></a> 関数を表します。</li>\n      <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSMathNegate\"><code>CSSMathNegate</code> <small>(en-US)</small></a> - 渡された値を否定します。</li>\n      <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSMathProduct\"><code>CSSMathProduct</code> <small>(en-US)</small></a> - <a href=\"/ja/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a> に対して <a href=\"/ja/docs/Web/API/CSSNumericValue/add\" title=\"add()\"><code>add()</code></a>, <a href=\"/ja/docs/Web/API/CSSNumericValue/sub\" title=\"sub()\"><code>sub()</code></a>, <a href=\"/ja/docs/Web/API/CSSNumericValue/toSum\" title=\"toSum()\"><code>toSum()</code></a> を実行した結果を表します。</li>\n      <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSMathSum\"><code>CSSMathSum</code> <small>(en-US)</small></a> - <a href=\"/ja/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a> に対して <a href=\"/ja/docs/Web/API/CSSNumericValue/add\" title=\"add()\"><code>add()</code></a>, <a href=\"/ja/docs/Web/API/CSSNumericValue/sub\" title=\"sub()\"><code>sub()</code></a>, <a href=\"/ja/docs/Web/API/CSSNumericValue/toSum\" title=\"toSum()\"><code>toSum()</code></a> を実行した結果を表します。</li>\n    </ul>\n  </dd>\n  <dt id=\"cssnumericvalue\"><a href=\"/ja/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a></dt>\n  <dd>\n    <p>すべての数値が実行可能な操作を表すインターフェイスです。</p>\n    <ul>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/add\"><code>CSSNumericValue.add</code></a> - 与えられた数字を <code>CSSNumericValue</code> に加算します。</li>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/sub\"><code>CSSNumericValue.sub</code></a> - 与えられた数値を <code>CSSNumericValue</code> から減算します。</li>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/mul\"><code>CSSNumericValue.mul</code></a> - 与えられた数値を <code>CSSNumericValue</code> に乗算します。</li>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/div\"><code>CSSNumericValue.div</code></a> - 与えられた数値を他の数値で割り、0 の場合はエラーが発生します。</li>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/min\"><code>CSSNumericValue.min</code></a> - 渡された値の最小値を返します。</li>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/max\"><code>CSSNumericValue.max</code></a> - 渡された値の最大値を返します。</li>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/equals\"><code>CSSNumericValue.equals</code></a> - すべての値がまったく同じ型と値で、同じ順序である場合には true を返します。そうでなければ、 false を返します。</li>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/to\"><code>CSSNumericValue.to</code></a> - <code>value</code> を指定された<em>単位</em>の別の値に変換する。</li>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/toSum\"><code>CSSNumericValue.toSum</code></a></li>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/type\"><code>CSSNumericValue.type</code></a></li>\n      <li><a href=\"/ja/docs/Web/API/CSSNumericValue/parse\"><code>CSSNumericValue.parse</code></a> - CSS の文字列から解釈された数値を返します。</li>\n    </ul>\n  </dd>\n  <dt id=\"csspositionvalue_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSPositionValue\"><code>CSSPositionValue</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>object-position など、位置を取るプロパティの値を表します。</p>\n  </dd>\n  <dt id=\"csstransformvalue_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/CSS/transform\"><code>transform</code></a> のリスト値を表すインターフェイスです。これらは 1 つ以上の <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSTransformComponent\"><code>CSSTransformComponent</code> <small>(en-US)</small></a> を含んでおり、個々の <code>transform</code> 関数値を表します。</p>\n  </dd>\n  <dt id=\"cssunitvalue_en-us\"><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/CSSUnitValue\"><code>CSSUnitValue</code> <small>(en-US)</small></a></dt>\n  <dd>\n    <p>単一の単位、または名前付き数値とパーセントで表現できる数値を表すインターフェイスです。</p>\n  </dd>\n  <dt id=\"cssunparsedvalue_3\"><a href=\"/ja/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a></dt>\n  <dd>\n    <p><a href=\"/ja/docs/Web/CSS/--*\">カスタムプロパティ</a>を参照するプロパティ値を表します。文字列の断片と変数参照のリストで構成されます。</p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"query":"api.CSSStyleValue,api.StylePropertyMap,api.CSSUnparsedValue,api.CSSKeywordValue","specifications":[]}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"data":null,"query":"api.CSSStyleValue,api.StylePropertyMap,api.CSSUnparsedValue,api.CSSKeywordValue","browsers":null}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/CSS_Painting_API\">CSS 描画 API</a></li>\n  <li><a href=\"/ja/docs/Web/API/CSS_Typed_OM_API/Guide\">CSS 型付きオブジェクトモデルの使用</a></li>\n  <li><a href=\"/ja/docs/Web/Guide/Houdini\">CSS Houdini</a></li>\n</ul>"}}],"toc":[{"text":"インターフェイス","id":"インターフェイス"},{"text":"CSSStyleValue インターフェイス","id":"cssstylevalue_インターフェイス"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"CSS 型付きオブジェクトモデル API (CSS Typed Object Model API) は、 CSS の値を文字列ではなく、型付き JavaScript オブジェクトとして提供することにより、CSS のプロパティ操作を簡略化するものです。これは CSS の操作を単純化するだけでなく、 HTMLElement.style と比較して、パフォーマンスへの悪影響も軽減できます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"CSS Typed Object Model API","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/web/api/css_typed_om_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/css_typed_om_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/CSS_Typed_OM_API","title":"CSS 型付きオブジェクトモデル API"}],"pageTitle":"CSS 型付きオブジェクトモデル API - Web API | MDN","noIndexing":false}}