{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"AudioBuffer","mdn_url":"/ja/docs/Web/API/AudioBuffer","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/AudioBuffer/AudioBuffer\"><code>AudioBuffer()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/AudioBuffer/duration\"><code>duration</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBuffer/length\"><code>length</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBuffer/numberOfChannels\"><code>numberOfChannels</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBuffer/sampleRate\"><code>sampleRate</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/AudioBuffer/copyFromChannel\"><code>copyFromChannel()</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBuffer/copyToChannel\"><code>copyToChannel()</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBuffer/getChannelData\"><code>getChannelData()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Audio API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/ja/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/ja/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/ja/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/ja/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/ja/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>AudioBuffer</code></strong> インターフェイスはメモリー上の短い音声を表すもので、 <a href=\"/ja/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>AudioContext.decodeAudioData()</code></a> メソッドで音声ファイルから生成されたり、 <a href=\"/ja/docs/Web/API/BaseAudioContext/createBuffer\"><code>AudioContext.createBuffer()</code></a> を使って生のデータから生成されたりします。 AudioBuffer に入れた後、その音声は <a href=\"/ja/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a> に渡せば再生できます。</p>\n<p>これらのオブジェクトは短い、一般的には 45 秒未満の、断片的な音声を保持するために設計されています。それよりも長い音声は、 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a> のオブジェクトが適しています。バッファーには、ノンインターリーブ IEEE754 32bit リニア PCM で、 <code>-1</code> から <code>+1</code> の範囲に正規化された形式で格納されます。つまり、 32 ビット浮動小数点バッファーで、それぞれのサンプルは -1.0 から 1.0 の間です。 AudioBuffer に複数のチャンネルがある場合は、それぞれ分かれたバッファーに格納されます。</p>"}},{"type":"prose","value":{"id":"コンストラクター","title":"コンストラクター","isH3":false,"content":"<dl>\n  <dt id=\"audiobuffer\"><a href=\"/ja/docs/Web/API/AudioBuffer/AudioBuffer\" title=\"AudioBuffer()\"><code>AudioBuffer()</code></a></dt>\n  <dd>\n    <p>新しい <code>AudioBuffer</code> オブジェクトのインスタンスを生成して返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"プロパティ","title":"プロパティ","isH3":false,"content":"<dl>\n  <dt id=\"audiobuffer.samplerate\"><a href=\"/ja/docs/Web/API/AudioBuffer/sampleRate\"><code>AudioBuffer.sampleRate</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>バッファーに格納された PCM データの 1 秒あたりのサンプル数であるサンプリングレートを表す float を返します。</p>\n  </dd>\n  <dt id=\"audiobuffer.length\"><a href=\"/ja/docs/Web/API/AudioBuffer/length\"><code>AudioBuffer.length</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>バッファーに格納された PCM データの秒数で長さを表す整数を返します。</p>\n  </dd>\n  <dt id=\"audiobuffer.duration\"><a href=\"/ja/docs/Web/API/AudioBuffer/duration\"><code>AudioBuffer.duration</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>バッファーに格納された PCM データの時間を秒単位で表す double 値を返します。</p>\n  </dd>\n  <dt id=\"audiobuffer.numberofchannels\"><a href=\"/ja/docs/Web/API/AudioBuffer/numberOfChannels\"><code>AudioBuffer.numberOfChannels</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">読取専用 </span></dt>\n  <dd>\n    <p>バッファーに格納された PCM データによって記述されるディスクリート音声チャンネルの数を表す整数を返します。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":"<dl>\n  <dt id=\"audiobuffer.getchanneldata\"><a href=\"/ja/docs/Web/API/AudioBuffer/getChannelData\"><code>AudioBuffer.getChannelData()</code></a></dt>\n  <dd>\n    <p>引数 <code>channel</code> で定義されたチャンネルに関連付けられた PCM データを含む <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> を返します（<code>0</code> は最初のチャンネルを表します）。</p>\n  </dd>\n  <dt id=\"audiobuffer.copyfromchannel\"><a href=\"/ja/docs/Web/API/AudioBuffer/copyFromChannel\"><code>AudioBuffer.copyFromChannel()</code></a></dt>\n  <dd>\n    <p><code>AudioBuffer</code> の指定されたチャンネルから、サンプルを配列 <code>destination</code> にコピーします。</p>\n  </dd>\n  <dt id=\"audiobuffer.copytochannel\"><a href=\"/ja/docs/Web/API/AudioBuffer/copyToChannel\"><code>AudioBuffer.copyToChannel()</code></a></dt>\n  <dd>\n    <p>音声バッファー <code>AudioBuffer</code> の指定されたチャンネルに、配列 <code>source</code> からサンプルをコピーします。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の簡単な例では、 <code>AudioBuffer</code> の生成し、バッファーにランダムなホワイトノイズを書き込む方法を示しています。 <a href=\"https://github.com/mdn/webaudio-examples\" class=\"external\" rel=\" noopener\">webaudio-examples</a> リポジトリーには完全なソースコードと、<a href=\"https://mdn.github.io/webaudio-examples/audio-buffer/\" class=\"external\" rel=\" noopener\">ライブ実行</a>版があります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// AudioContextのサンプルレートで 3 秒間の空のステレオバッファーを生成する</span>\n<span class=\"token keyword\">var</span> myArrayBuffer <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>sampleRate <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// バッファにホワイトノイズを書き込む</span>\n<span class=\"token comment\">// -1.0 から 1.0 の間の乱数の値で埋めるだけ</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> channel <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> channel <span class=\"token operator\">&lt;</span> myArrayBuffer<span class=\"token punctuation\">.</span>numberOfChannels<span class=\"token punctuation\">;</span> channel<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 実際のデータの配列を得る</span>\n  <span class=\"token keyword\">var</span> nowBuffering <span class=\"token operator\">=</span> myArrayBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getChannelData</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> myArrayBuffer<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Math.random() は [0; 1.0] である</span>\n    <span class=\"token comment\">// 音声は [-1.0; 1.0] である必要がある</span>\n    nowBuffering<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// AudioBufferSourceNode を得る</span>\n<span class=\"token comment\">// これは AudioBuffer を再生するときに使う AudioNode である</span>\n<span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createBufferSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// AudioBufferSourceNode にバッファーを設定する</span>\nsource<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> myArrayBuffer<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// AudioBufferSourceNode を出力先に接続すると音声が聞こえるようになる</span>\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>audioCtx<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 音源の再生を始める</span>\nsource<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#AudioBuffer","title":"Web Audio API"}],"query":"api.AudioBuffer"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.AudioBuffer","dataURL":"/ja/docs/Web/API/AudioBuffer/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">ウェブ音声 API の使用</a></li>\n</ul>"}}],"toc":[{"text":"コンストラクター","id":"コンストラクター"},{"text":"プロパティ","id":"プロパティ"},{"text":"メソッド","id":"メソッド"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"AudioBuffer インターフェイスはメモリー上の短い音声を表すもので、 AudioContext.decodeAudioData() メソッドで音声ファイルから生成されたり、 AudioContext.createBuffer() を使って生のデータから生成されたりします。 AudioBuffer に入れた後、その音声は AudioBufferSourceNode に渡せば再生できます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"AudioBuffer","locale":"en-US","native":"English (US)"},{"title":"AudioBuffer","locale":"es","native":"Español"},{"title":"AudioBuffer","locale":"fr","native":"Français"},{"title":"AudioBuffer","locale":"ko","native":"한국어"},{"title":"AudioBuffer","locale":"ru","native":"Русский"},{"title":"AudioBuffer","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/audiobuffer","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/audiobuffer/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/AudioBuffer","title":"AudioBuffer"}],"pageTitle":"AudioBuffer - Web API | MDN","noIndexing":false}}