{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"BaseAudioContext.createPanner()","mdn_url":"/ja/docs/Web/API/BaseAudioContext/createPanner","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/BaseAudioContext/audioWorklet\"><code>audioWorklet</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/currentTime\"><code>currentTime</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/destination\"><code>destination</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/listener\"><code>listener</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/sampleRate\"><code>sampleRate</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/state\"><code>state</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createAnalyser\"><code>createAnalyser()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBiquadFilter\"><code>createBiquadFilter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBuffer\"><code>createBuffer()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBufferSource\"><code>createBufferSource()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createChannelMerger\"><code>createChannelMerger()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createChannelSplitter\"><code>createChannelSplitter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createConstantSource\"><code>createConstantSource()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createConvolver\"><code>createConvolver()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createDelay\"><code>createDelay()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createDynamicsCompressor\"><code>createDynamicsCompressor()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createGain\"><code>createGain()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createIIRFilter\"><code>createIIRFilter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createOscillator\"><code>createOscillator()</code></a></li><li><em><code>createPanner()</code></em></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createPeriodicWave\"><code>createPeriodicWave()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/BaseAudioContext/createScriptProcessor\"><code>createScriptProcessor()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createStereoPanner\"><code>createStereoPanner()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createWaveShaper\"><code>createWaveShaper()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>decodeAudioData()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Audio API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/ja/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/ja/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/ja/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/ja/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/ja/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>createPanner()</code> は <a href=\"/ja/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a> インターフェイスのメソッドで、新しい <a href=\"/ja/docs/Web/API/PannerNode\"><code>PannerNode</code></a> を作成するために使用されます。これは、入力される音声ストリームを三次元空間で空間化するのに使われます。</p>\n<p>パナーノードは AudioContext の <a href=\"/ja/docs/Web/API/AudioListener\"><code>AudioListener</code></a> （<a href=\"/ja/docs/Web/API/BaseAudioContext/listener\" title=\"AudioContext.listener\"><code>AudioContext.listener</code></a> 属性によって定義）に関連して空間化され、音声を聞く人の位置と向きを表現します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PannerNode/PannerNode\"><code>PannerNode()</code> <small>(en-US)</small></a> コンストラクターは <a href=\"/ja/docs/Web/API/PannerNode\"><code>PannerNode</code></a> を作成するための推奨される方法です。 <a href=\"/ja/docs/Web/API/AudioNode#creating_an_audionode\">AudioNode の作成</a>を参照してください。</p>\n</div>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">createPanner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<p>なし。</p>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/PannerNode\"><code>PannerNode</code></a> です。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の例では、 <code>createPanner()</code> メソッドと <a href=\"/ja/docs/Web/API/AudioListener\"><code>AudioListener</code></a> と <a href=\"/ja/docs/Web/API/PannerNode\"><code>PannerNode</code></a> を使って音声の空間化を制御する例を見ることができます。一般に、音声リスナーとパンナー（音源）が最初に占める三次元空間の位置を定義し、アプリケーションが使用されるたびに、これらの一方または両方の位置を更新します。たとえば、ゲームの世界でキャラクターを動かしていて、キャラクターがステレオなどの音楽プレーヤーに近づいたり遠ざかったりすると、音声の配信がリアルに変化するようにしたい場合があります。この例では <code>moveRight()</code>, <code>moveLeft()</code> などの関数でこれを制御し、 <code>PositionPanner()</code> 関数でパンナーの位置に新しい値を設定しているのが分かると思います。</p>\n<p>完全な実装を見るには、私たちの <a href=\"https://mdn.github.io/webaudio-examples/panner-node/\" class=\"external\" rel=\" noopener\">panner-node の例</a>（<a href=\"https://github.com/mdn/webaudio-examples/tree/master/panner-node\" class=\"external\" rel=\" noopener\">ソースコードを表示</a>）をチェックしてください。このデモでは、 2.5 次元の「金属の部屋」に移動し、ラジカセでトラックを再生し、ラジカセの周りを歩いて音の変化を見ることができます。このデモでは、ラジカセの周りを歩いて、音がどのように変化するかを見ることができます。</p>\n<p>なお、機能検出の使用方法に注意してください。ブラウザーが位置の設定などを行うために、新しいプロパティ値（例えば <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioListener/forwardX\"><code>AudioListener.forwardX</code> <small>(en-US)</small></a>）に対応している場合はそれを利用し、古いメソッドには対応しているが新しいプロパティには対応していない場合には、古いメソッド（例えば <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioListener/setOrientation\"><code>AudioListener.setOrientation()</code> <small>(en-US)</small></a>）を利用しています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// set up listener and panner position information</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">WIDTH</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> <span class=\"token constant\">HEIGHT</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> xPos <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token constant\">WIDTH</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> yPos <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HEIGHT</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> zPos <span class=\"token operator\">=</span> <span class=\"token number\">295</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// define other variables</span>\n\n<span class=\"token keyword\">var</span> AudioContext <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> panner <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createPanner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>panningModel <span class=\"token operator\">=</span> <span class=\"token string\">'HRTF'</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>distanceModel <span class=\"token operator\">=</span> <span class=\"token string\">'inverse'</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>refDistance <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>maxDistance <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>rolloffFactor <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>coneInnerAngle <span class=\"token operator\">=</span> <span class=\"token number\">360</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>coneOuterAngle <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\npanner<span class=\"token punctuation\">.</span>coneOuterGain <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  panner<span class=\"token punctuation\">.</span>orientationX<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationY<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  panner<span class=\"token punctuation\">.</span>orientationZ<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  panner<span class=\"token punctuation\">.</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> listener <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">.</span>forwardX<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  listener<span class=\"token punctuation\">.</span>forwardX<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  listener<span class=\"token punctuation\">.</span>forwardY<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  listener<span class=\"token punctuation\">.</span>forwardZ<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  listener<span class=\"token punctuation\">.</span>upX<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  listener<span class=\"token punctuation\">.</span>upY<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  listener<span class=\"token punctuation\">.</span>upZ<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  listener<span class=\"token punctuation\">.</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> source<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> play <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.play'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> stop <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.stop'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> boomBox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.boom-box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> listenerData <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.listener-data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> pannerData <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.panner-data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nleftBound <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>xPos<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\nrightBound <span class=\"token operator\">=</span> xPos <span class=\"token operator\">-</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\nxIterator <span class=\"token operator\">=</span> <span class=\"token constant\">WIDTH</span><span class=\"token operator\">/</span><span class=\"token number\">150</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// listener will always be in the same place for this demo</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">.</span>positionX<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  listener<span class=\"token punctuation\">.</span>positionX<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span>xPos<span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  listener<span class=\"token punctuation\">.</span>positionY<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span>yPos<span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  listener<span class=\"token punctuation\">.</span>positionZ<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  listener<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>xPos<span class=\"token punctuation\">,</span>yPos<span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nlistenerData<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Listener data: X </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>xPos<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> Y </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>yPos<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> Z 300</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// panner will move as the boombox graphic moves around on the screen</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">positionPanner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>panner<span class=\"token punctuation\">.</span>positionX<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    panner<span class=\"token punctuation\">.</span>positionX<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span>xPos<span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    panner<span class=\"token punctuation\">.</span>positionY<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span>yPos<span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    panner<span class=\"token punctuation\">.</span>positionZ<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span>zPos<span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    panner<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>xPos<span class=\"token punctuation\">,</span>yPos<span class=\"token punctuation\">,</span>zPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  pannerData<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Panner data: X </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>xPos<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> Y </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>yPos<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> Z </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>zPos<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> リスナーやパンナーの位置値をどのように設定すれば、画面上のビジュアルに適したサウンドになるかという点では、少し面倒な計算が必要となりますが、すこしやれば慣れる類のものです。</p>\n</div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createpanner","title":"Web Audio API"}],"query":"api.BaseAudioContext.createPanner"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.BaseAudioContext.createPanner","dataURL":"/ja/docs/Web/API/BaseAudioContext/createPanner/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">ウェブ音声 API の使用</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"createPanner() は BaseAudioContext インターフェイスのメソッドで、新しい PannerNode を作成するために使用されます。これは、入力される音声ストリームを三次元空間で空間化するのに使われます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BaseAudioContext.createPanner()","locale":"en-US","native":"English (US)"},{"title":"BaseAudioContext.createPanner()","locale":"fr","native":"Français"},{"title":"AudioContext.createPanner()","locale":"ru","native":"Русский"}],"source":{"folder":"ja/web/api/baseaudiocontext/createpanner","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/baseaudiocontext/createpanner/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/BaseAudioContext","title":"BaseAudioContext"},{"uri":"/ja/docs/Web/API/BaseAudioContext/createPanner","title":"BaseAudioContext.createPanner()"}],"pageTitle":"BaseAudioContext.createPanner() - Web API | MDN","noIndexing":false}}