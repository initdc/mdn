{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"BaseAudioContext.createConvolver()","mdn_url":"/ja/docs/Web/API/BaseAudioContext/createConvolver","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/BaseAudioContext/audioWorklet\"><code>audioWorklet</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/currentTime\"><code>currentTime</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/destination\"><code>destination</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/listener\"><code>listener</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/sampleRate\"><code>sampleRate</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/state\"><code>state</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createAnalyser\"><code>createAnalyser()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBiquadFilter\"><code>createBiquadFilter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBuffer\"><code>createBuffer()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBufferSource\"><code>createBufferSource()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createChannelMerger\"><code>createChannelMerger()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createChannelSplitter\"><code>createChannelSplitter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createConstantSource\"><code>createConstantSource()</code></a></li><li><em><code>createConvolver()</code></em></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createDelay\"><code>createDelay()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createDynamicsCompressor\"><code>createDynamicsCompressor()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createGain\"><code>createGain()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createIIRFilter\"><code>createIIRFilter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createOscillator\"><code>createOscillator()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createPanner\"><code>createPanner()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createPeriodicWave\"><code>createPeriodicWave()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/BaseAudioContext/createScriptProcessor\"><code>createScriptProcessor()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createStereoPanner\"><code>createStereoPanner()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createWaveShaper\"><code>createWaveShaper()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>decodeAudioData()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Audio API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/ja/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/ja/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/ja/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/ja/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/ja/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>createConvolver()</code> は <a href=\"/ja/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a> インターフェイスのメソッドで、 <a href=\"/ja/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a> を生成します。これは一般に音声にリバーブ効果を適用するために使用されます。詳しくは<a href=\"https://webaudio.github.io/web-audio-api/#background-3\" class=\"external\" rel=\" noopener\">畳み込み効果の仕様定義</a> を参照してください。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConvolverNode/ConvolverNode\"><code>ConvolverNode()</code> <small>(en-US)</small></a> コンストラクターは <a href=\"/ja/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a> を作成するための推奨される方法です。 <a href=\"/ja/docs/Web/API/AudioNode#creating_an_audionode\">AudioNode の作成</a>を参照してください。</p>\n</div>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">createConvolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<p>なし。</p>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p><a href=\"/ja/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a> です。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の例は、畳み込みノードを作成するための AudioContext の基本的な使用方法を示しています。大前提として、畳み込み効果を形成するアンビエンスとして使用するサウンドサンプル（<em>インパルスレスポンス</em>と呼ばれます）を含む AudioBuffer を作成し、それを畳み込みに適用します。下の例では、コンサートホールの観客の短いサンプルを使っているので、適用されるリバーブ効果はとても深く、エコーがかかっているようです。</p>\n<p>応用例や情報については、 <a href=\"https://mdn.github.io/voice-change-o-matic/\" class=\"external\" rel=\" noopener\">Voice-change-O-matic デモ</a>を参照してください（関連コードは <a href=\"https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js\" class=\"external\" rel=\" noopener\">app.js</a> を参照してください）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>AudioContext <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitAudioContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> convolver <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createConvolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">...</span>\n\n<span class=\"token comment\">// XHR で畳み込みノードのための音声トラックを得る</span>\n\n<span class=\"token keyword\">var</span> soundSource<span class=\"token punctuation\">,</span> concertHallBuffer<span class=\"token punctuation\">;</span>\n\najaxRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\najaxRequest<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'concert-crowd.ogg'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\najaxRequest<span class=\"token punctuation\">.</span>responseType <span class=\"token operator\">=</span> <span class=\"token string\">'arraybuffer'</span><span class=\"token punctuation\">;</span>\n\najaxRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> audioData <span class=\"token operator\">=</span> ajaxRequest<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">;</span>\n  audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">decodeAudioData</span><span class=\"token punctuation\">(</span>audioData<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">buffer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      concertHallBuffer <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">;</span>\n      soundSource <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createBufferSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      soundSource<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> concertHallBuffer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Error with decoding audio data\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\najaxRequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">...</span>\n\nconvolver<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> concertHallBuffer<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createconvolver","title":"Web Audio API"}],"query":"api.BaseAudioContext.createConvolver"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.BaseAudioContext.createConvolver","dataURL":"/ja/docs/Web/API/BaseAudioContext/createConvolver/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">ウェブ音声 API の使用</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"createConvolver() は BaseAudioContext インターフェイスのメソッドで、 ConvolverNode を生成します。これは一般に音声にリバーブ効果を適用するために使用されます。詳しくは畳み込み効果の仕様定義 を参照してください。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BaseAudioContext.createConvolver()","locale":"en-US","native":"English (US)"},{"title":"AudioContext.createConvolver()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/baseaudiocontext/createconvolver","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/baseaudiocontext/createconvolver/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/BaseAudioContext","title":"BaseAudioContext"},{"uri":"/ja/docs/Web/API/BaseAudioContext/createConvolver","title":"BaseAudioContext.createConvolver()"}],"pageTitle":"BaseAudioContext.createConvolver() - Web API | MDN","noIndexing":false}}