{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"BaseAudioContext.createPeriodicWave()","mdn_url":"/ja/docs/Web/API/BaseAudioContext/createPeriodicWave","locale":"ja","native":"日本語","hasMathML":true,"sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/BaseAudioContext/audioWorklet\"><code>audioWorklet</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/currentTime\"><code>currentTime</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/destination\"><code>destination</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/listener\"><code>listener</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/sampleRate\"><code>sampleRate</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/state\"><code>state</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createAnalyser\"><code>createAnalyser()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBiquadFilter\"><code>createBiquadFilter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBuffer\"><code>createBuffer()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBufferSource\"><code>createBufferSource()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createChannelMerger\"><code>createChannelMerger()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createChannelSplitter\"><code>createChannelSplitter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createConstantSource\"><code>createConstantSource()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createConvolver\"><code>createConvolver()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createDelay\"><code>createDelay()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createDynamicsCompressor\"><code>createDynamicsCompressor()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createGain\"><code>createGain()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createIIRFilter\"><code>createIIRFilter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createOscillator\"><code>createOscillator()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createPanner\"><code>createPanner()</code></a></li><li><em><code>createPeriodicWave()</code></em></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/BaseAudioContext/createScriptProcessor\"><code>createScriptProcessor()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createStereoPanner\"><code>createStereoPanner()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createWaveShaper\"><code>createWaveShaper()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>decodeAudioData()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Audio API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/ja/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/ja/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/ja/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/ja/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/ja/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>createPeriodicWave()</code> は <a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a> インターフェイスのメソッドで、周期的な波形を定義するために使われる <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code> <small>(en-US)</small></a> を生成します。これは <a href=\"/ja/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a> の出力を決めるために使われます。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">createPeriodicWave</span><span class=\"token punctuation\">(</span>real<span class=\"token punctuation\">,</span> imag<span class=\"token punctuation\">)</span>\n<span class=\"token function\">createPeriodicWave</span><span class=\"token punctuation\">(</span>real<span class=\"token punctuation\">,</span> imag<span class=\"token punctuation\">,</span> constraints<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"real\"><code>real</code></dt>\n  <dd>\n    <p>余弦項（従来は A 項）の配列。</p>\n  </dd>\n  <dt id=\"imag\"><code>imag</code></dt>\n  <dd>\n    <p>正弦項（従来は B 項）の配列。</p>\n  </dd>\n</dl>\n<p>配列 <code>real</code> と <code>imag</code> は同じ長さでなければならず、そうでない場合はエラーが発生します。</p>\n<dl>\n  <dt id=\"constraints\"><code>constraints</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>正規化を無効にするかどうか（指定しない場合、正規化は既定で有効）を指定する辞書オブジェクトです。 1 つのプロパティを持ちます。</p>\n    <ul>\n      <li><code>disableNormalization</code>: <code>true</code> に設定すると、周期的な波の正規化を無効にします。既定値は <code>false</code> です。</li>\n    </ul>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> 正規化した場合、結果の波は最大絶対ピーク値が 1 になります。</p>\n</div>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code> <small>(en-US)</small></a> です。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の例は、 <code>createPeriodicWave()</code> を使用して単純な正弦波を含む <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code> <small>(en-US)</small></a> オブジェクトを作成する方法を示しています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> real <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> imag <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> ac <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> osc <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">createOscillator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nreal<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nimag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nreal<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nimag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> wave <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">createPeriodicWave</span><span class=\"token punctuation\">(</span>real<span class=\"token punctuation\">,</span> imag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">disableNormalization</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nosc<span class=\"token punctuation\">.</span><span class=\"token function\">setPeriodicWave</span><span class=\"token punctuation\">(</span>wave<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nosc<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ac<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nosc<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nosc<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これは、基本音だけを含む音は、定義上、正弦波であるため、うまくいきます。</p>\n<p>ここでは、 2 つの値を持つ <code>PeriodicWave</code> を作成します。最初の値は DC オフセットで、これはオシレーターを開始する値です。ここでは、曲線を [-1.0; 1.0] 範囲の中央で開始したいので、 0 が適しています。</p>\n<p>2 つ目以降の値は正弦波と余弦波成分です。時間領域の値から周波数領域の値を得る、フーリエ変換の結果と考えることができます。ここでは、<code>createPeriodicWave()</code>で、周波数を指定すると、ブラウザーは逆フーリエ変換を行い、発振器の周波数の時間領域のバッファーを取得します。ここでは、基本音にフルボリューム（1.0）の 1 成分のみを設定しているので、正弦波が得られます。</p>\n<p>フーリエ変換の係数は昇順で与えなければならず（すなわち、\n  <math>\n    \n    <semantics>\n      <mrow>\n        <mrow>\n          <mo>(</mo>\n          <mrow>\n            <mi>a</mi>\n            <mo>+</mo>\n            <mi>b</mi>\n            <mi>i</mi>\n          </mrow>\n          <mo>)</mo>\n        </mrow>\n        <msup>\n          <mi>e</mi>\n          <mi>i</mi>\n        </msup>\n        <mo>,</mo>\n        <mrow>\n          <mo>(</mo>\n          <mrow>\n            <mi>c</mi>\n            <mo>+</mo>\n            <mi>d</mi>\n            <mi>i</mi>\n          </mrow>\n          <mo>)</mo>\n        </mrow>\n        <msup>\n          <mi>e</mi>\n          <mrow>\n            <mn>2</mn>\n            <mi>i</mi>\n          </mrow>\n        </msup>\n        <mo>,</mo>\n        <mrow>\n          <mo>(</mo>\n          <mrow>\n            <mi>f</mi>\n            <mo>+</mo>\n            <mi>g</mi>\n            <mi>i</mi>\n          </mrow>\n          <mo>)</mo>\n        </mrow>\n        <msup>\n          <mi>e</mi>\n          <mrow>\n            <mn>3</mn>\n            <mi>i</mi>\n          </mrow>\n        </msup>\n      </mrow>\n      <annotation encoding=\"TeX\">\n        \\left(a+bi\\right)e^{i} , \\left(c+di\\right)e^{2i} ,\n        \\left(f+gi\\right)e^{3i} \n      </annotation>\n    </semantics>\n  </math>など）、正でも負でも構いません。このような係数を手動で得る簡単な方法は（ベストではありませんが）、グラフ計算機を使うことです。\n</p>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createperiodicwave","title":"Web Audio API"}],"query":"api.BaseAudioContext.createPeriodicWave"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.BaseAudioContext.createPeriodicWave","dataURL":"/ja/docs/Web/API/BaseAudioContext/createPeriodicWave/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">ウェブ音声 API の使用</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"createPeriodicWave() は AudioContext インターフェイスのメソッドで、周期的な波形を定義するために使われる PeriodicWave (en-US) を生成します。これは OscillatorNode の出力を決めるために使われます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BaseAudioContext.createPeriodicWave()","locale":"en-US","native":"English (US)"},{"title":"BaseAudioContext.createPeriodicWave()","locale":"fr","native":"Français"},{"title":"BaseAudioContext.createPeriodicWave()","locale":"ko","native":"한국어"},{"title":"BaseAudioContext.createPeriodicWave()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/baseaudiocontext/createperiodicwave","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/baseaudiocontext/createperiodicwave/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/BaseAudioContext","title":"BaseAudioContext"},{"uri":"/ja/docs/Web/API/BaseAudioContext/createPeriodicWave","title":"BaseAudioContext.createPeriodicWave()"}],"pageTitle":"BaseAudioContext.createPeriodicWave() - Web API | MDN","noIndexing":false}}