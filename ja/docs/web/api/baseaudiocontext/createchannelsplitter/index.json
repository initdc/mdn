{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"BaseAudioContext.createChannelSplitter()","mdn_url":"/ja/docs/Web/API/BaseAudioContext/createChannelSplitter","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/BaseAudioContext/audioWorklet\"><code>audioWorklet</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/currentTime\"><code>currentTime</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/destination\"><code>destination</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/listener\"><code>listener</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/sampleRate\"><code>sampleRate</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/state\"><code>state</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createAnalyser\"><code>createAnalyser()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBiquadFilter\"><code>createBiquadFilter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBuffer\"><code>createBuffer()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createBufferSource\"><code>createBufferSource()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createChannelMerger\"><code>createChannelMerger()</code></a></li><li><em><code>createChannelSplitter()</code></em></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createConstantSource\"><code>createConstantSource()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createConvolver\"><code>createConvolver()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createDelay\"><code>createDelay()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createDynamicsCompressor\"><code>createDynamicsCompressor()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createGain\"><code>createGain()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createIIRFilter\"><code>createIIRFilter()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createOscillator\"><code>createOscillator()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createPanner\"><code>createPanner()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createPeriodicWave\"><code>createPeriodicWave()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/API/BaseAudioContext/createScriptProcessor\"><code>createScriptProcessor()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createStereoPanner\"><code>createStereoPanner()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/createWaveShaper\"><code>createWaveShaper()</code></a></li><li><a href=\"/ja/docs/Web/API/BaseAudioContext/decodeAudioData\"><code>decodeAudioData()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>継承</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Web Audio API に関連するページ</summary><ol><li><a href=\"/ja/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/ja/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/ja/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/ja/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/ja/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/ja/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/ja/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/ja/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/ja/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code> <small>(en-US)</small></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><code>createChannelSplitter()</code> は <a href=\"/ja/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a> インターフェイスのメソッドで、 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a> を作成します。これは音声ストリームの個々のチャンネルにアクセスし、それらを個別に処理するために使用されます。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode/ChannelSplitterNode\"><code>ChannelSplitterNode()</code> <small>(en-US)</small></a> コンストラクターは <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a> を作成するための推奨される方法です。 <a href=\"/ja/docs/Web/API/AudioNode#creating_an_audionode\">AudioNode の作成</a>を参照してください。</p>\n</div>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">createChannelSplitter</span><span class=\"token punctuation\">(</span>numberOfOutputs<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"numberofoutputs\">numberOfOutputs</dt>\n  <dd>\n    <p>入力オーディオストリームのうち、個別に出力したいチャンネル数です。この引数が指定されていない場合の既定値は 6 です。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":true,"content":"<p><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code> <small>(en-US)</small></a> です。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":"<p>次の単純な例では、ステレオトラック（例えば音楽）を分離し、左チャンネルと右チャンネルを別々に処理する方法を示しています。これを使うには、 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/AudioNode/connect\"><code>AudioNode.connect(AudioNode)</code> <small>(en-US)</small></a> メソッドの第 2、第 3 引数を使って、接続元のチャンネルのインデックスと接続先のチャンネルのインデックスを指定することが必要です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> ac <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nac<span class=\"token punctuation\">.</span><span class=\"token function\">decodeAudioData</span><span class=\"token punctuation\">(</span>someStereoBuffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">createBufferSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n source<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">var</span> splitter <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">createChannelSplitter</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n source<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>splitter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">var</span> merger <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">createChannelMerger</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// 左チャンネルのボリュームのみ小さくする</span>\n <span class=\"token keyword\">var</span> gainNode <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">createGain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n gainNode<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> ac<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n splitter<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>gainNode<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// スプリッターをマージャーの 2 番目の入力に接続すると、チャンネルが効果的に交換され、</span>\n <span class=\"token comment\">// ステレオイメージが反転します。</span>\n gainNode<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>merger<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n splitter<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>merger<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">var</span> dest <span class=\"token operator\">=</span> ac<span class=\"token punctuation\">.</span><span class=\"token function\">createMediaStreamDestination</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// ChannelMergerNode を使っているので、ステレオの MediaStream が</span>\n <span class=\"token comment\">// できました。これでウェブ音声グラフを WebRTC や MediaRecorder などに</span>\n <span class=\"token comment\">// パイプするのに使えます。</span>\n merger<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createchannelsplitter","title":"Web Audio API"}],"query":"api.BaseAudioContext.createChannelSplitter"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.BaseAudioContext.createChannelSplitter","dataURL":"/ja/docs/Web/API/BaseAudioContext/createChannelSplitter/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">ウェブ音声 API の使用</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"createChannelSplitter() は BaseAudioContext インターフェイスのメソッドで、 ChannelSplitterNode (en-US) を作成します。これは音声ストリームの個々のチャンネルにアクセスし、それらを個別に処理するために使用されます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"BaseAudioContext.createChannelSplitter()","locale":"en-US","native":"English (US)"},{"title":"AudioContext.createChannelSplitter()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/baseaudiocontext/createchannelsplitter","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/baseaudiocontext/createchannelsplitter/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/BaseAudioContext","title":"BaseAudioContext"},{"uri":"/ja/docs/Web/API/BaseAudioContext/createChannelSplitter","title":"BaseAudioContext.createChannelSplitter()"}],"pageTitle":"BaseAudioContext.createChannelSplitter() - Web API | MDN","noIndexing":false}}