{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"交差オブザーバー API","mdn_url":"/ja/docs/Web/API/Intersection_Observer_API","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/Intersection_Observer_API\">Intersection Observer API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>ガイド</summary><ol><li><a href=\"/ja/docs/Web/API/Intersection_Observer_API/Timing_element_visibility\">Timing element visibility with the Intersection Observer API</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>インターフェイス</summary><ol><li><a href=\"/ja/docs/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a></li><li><a href=\"/ja/docs/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>プロパティ</summary><ol><li><a href=\"/ja/docs/Web/API/indexedDB\"><code>indexedDB</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>交差オブザーバー API (Intersection Observer API) は、ターゲットとなる要素が、祖先要素または文書の最上位の<a href=\"/ja/docs/Glossary/Viewport\">ビューポート</a>と交差する変化を非同期的に監視する方法を提供します。</p>\n<p>従来、ある要素の可視状態、あるいは 2 つの要素の相対的な可視状態を検出することは困難であり、その解決策は信頼性が低く、ブラウザーやアクセスするサイトの動作が重くなる傾向がありました。ウェブが成熟していくにつれて、このような情報の必要性は高まっていきます。交差情報 (Intersection information) についての情報は次の理由から必要とされています。</p>\n<ul>\n  <li>ページがスクロールした際の画像やその他のコンテンツの遅延読み込み。</li>\n  <li>「無限スクロール」をするウェブサイトを実装し、スクロールに従って次々とコンテンツを読み込んで、ユーザーがページの切り替えをせずに済むようにすること。</li>\n  <li>広告費を計算するための広告が表示されたかどうかのレポート。</li>\n  <li>ユーザーが結果を見るかどうかで、タスクを実行するかどうか、アニメーションを処理するかどうかを決定すること。</li>\n</ul>\n<p>以前は、要素同士の交差の検出を実装するには、イベントハンドラーやループで <a href=\"/ja/docs/Web/API/Element/getBoundingClientRect\"><code>Element.getBoundingClientRect()</code></a> などのメソッドを呼び出し、影響を受けるすべての要素について必要な情報を蓄積していました。このコードはすべてメインスレッドで実行されるため、これらのうち 1 つでもあればパフォーマンスの問題を引き起こす可能性があります。サイトでこのような検出が大量に行われると、まったく醜くなる可能性があります。</p>\n<p>ウェブページで無限スクロールを使用することを考えてみてください。ベンダーから提供されるライブラリーを使用して、ページ全体に定期的に配置された広告を管理し、アニメーショングラフィックスを表示し、通知ボックスなどを描画するカスタムライブラリーを使用します。それぞれには独自に交差を検出するためのルーチンがあり、すべてがメインスレッド上で実行されます。ウェブサイトの作者は、これが起こっていることを認識していないかもしれません。内部の働きについてほとんど知らずに 2 つのライブラリーを使用しているからです。ユーザーがページをスクロールすると、スクロール処理中にこれらの交差の検出ルーチンが絶えず起動し、ユーザーはブラウザー、ウェブサイト、およびコンピューターにイライラさせられることになります。</p>\n<p>交差オブザーバー API では、監視したい要素が他の要素（または<a href=\"/ja/docs/Glossary/Viewport\">ビューポート</a>）に入ったり出たりしたとき、あるいは両者が交差する量が要求された量だけ変化したときに実行されるコールバック関数をコードに登録することができます。この方法により、サイトはこの種の要素の交差を監視するためにメインスレッドで何もする必要がなくなり、ブラウザーは自由に交差の管理を最適化することができます。</p>\n<p>交差オブザーバー API は、重複したピクセルの正確な数や、それがどのピクセルであるかを具体的に示すことはできません。しかし、「<em>N</em> % 前後のどこかで交差していたら、何かをする必要がある」という、より一般的な利用法はカバーします。</p>"}},{"type":"prose","value":{"id":"交差オブザーバーの概念と使い方","title":"交差オブザーバーの概念と使い方","isH3":false,"content":"<p>交差オブザーバー API を使用すると、以下のいずれかの状況が発生したときに呼び出されるコールバックを構成することができます。</p>\n<ul>\n  <li><strong>ターゲット</strong>要素が端末のビューポートまたは指定された要素と交差すること。この指定された要素は、交差オブザーバー API の用途では<strong>ルート要素</strong>または<strong>ルート</strong>と呼びます。</li>\n  <li>オブザーバーがターゲット要素を監視するよう最初に指示されたとき。</li>\n</ul>\n<p>通常、ターゲット要素の最も近いスクロール可能な祖先、またはターゲット要素がスクロール可能な要素の子孫でない場合は、端末のビューポートを基準にして交差の変化を監視したいと思うでしょう。端末のビューポートを基準にして交差を監視するには、 <code>root</code> オプションに <code>null</code> を指定します。交差オブザーバーのオプションについてのより詳しい説明は、このまま読み進めてください。</p>\n<p>ビューポートとその他の要素のどちらがルートとして使用されていても、 API は同じように動作し、ターゲット要素の表示状態が変わってルートとの間で交差の量の期待値を通るたびに、提供したコールバック関数が実行されます。</p>\n<p>ターゲット要素とそのルート要素の交差する度合いが<strong>交差率</strong>です。これはターゲット要素のパーセント値を 0.0 から 1.0 の間の値で表現したものです。</p>"}},{"type":"prose","value":{"id":"交差オブザーバーの作成","title":"交差オブザーバーの作成","isH3":true,"content":"<p>交差オブザーバーは、コンストラクターを呼び出して閾値が一方向また他の方向に交差する度に実行されるコールバック関数を渡すことで生成します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">root</span><span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#scrollArea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">rootMargin</span><span class=\"token operator\">:</span> <span class=\"token string\">'0px'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">threshold</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>閾値 (threshold) の 1.0 は、 <code>root</code> オプションで指定された要素内でターゲットが 100% 表示された時にコールバックが呼び出されることを意味しています。</p>\n<h4 id=\"交差オブザーバーのオプション\">交差オブザーバーのオプション</h4>\n<p><code>options</code> オブジェクトは <a href=\"/ja/docs/Web/API/IntersectionObserver/IntersectionObserver\" title=\"IntersectionObserver()\"><code>IntersectionObserver()</code></a> コンストラクターに渡され、オブザーバーのコールバックが呼び出される状況を制御します。以下のようなフィールドがあります。</p>\n<dl>\n  <dt id=\"root\"><code>root</code></dt>\n  <dd>\n    <p>ターゲットが見えるかどうかを確認するためのビューポートとして使用される要素です。指定されなかった場合、または <code>null</code> の場合は既定でブラウザーのビューポートが使用されます。</p>\n  </dd>\n  <dt id=\"rootmargin\"><code>rootMargin</code></dt>\n  <dd>\n    <p>root の周りのマージンです。 CSS の <a href=\"/ja/docs/Web/CSS/margin\"><code>margin</code></a> プロパティに似た値を指定することができます。例えば、\"<code>10px 20px 30px 40px\"</code> (top, right, bottom, left) のようなものです。この値はパーセント値にすることができます。この一連の値は、交差を計算する前にルート要素の範囲のボックスの各辺を拡大または縮小させることができます。既定値はすべてゼロです。</p>\n  </dd>\n  <dt id=\"threshold\"><code>threshold</code></dt>\n  <dd>\n    <p>単一の数値または数値の配列で、ターゲットがどのくらいの割合で見えている場合にオブザーバーのコールバックを実行するかを示します。見える範囲が 50% を超えたときのみ検出する場合は値 0.5 を使用します。 25% を超える度にコールバックを実行する場合は、 [0, 0.25, 0.5, 0.75, 1] という配列を指定します。既定値は 0 です（つまり、 1 ピクセルでも表示されるとコールバックが実行されます）。 1.0 の値は全てのピクセルが見えるようになるまで、閾値を超えたとはみなされないことを意味します。</p>\n  </dd>\n</dl>\n<h4 id=\"監視される要素をターゲットにする\">監視される要素をターゲットにする</h4>\n<p>オブザーバーを作成した後は、監視するターゲット要素を与える必要があります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> target <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#listItem'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// オブザーバーに設定したコールバックが初めて実行され、オブザーバーにターゲットが</span>\n<span class=\"token comment\">// 割り当てられるまで待機します（ターゲットが現在表示されていない場合でも同様）。</span>\n</code></pre></div>\n<p>ターゲットが <code>IntersectionObserver</code> に指定された閾値を満たす度にコールバックが呼び出されます。コールバックは <a href=\"/ja/docs/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> オブジェクトのリストとオブザーバーを受け取ります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">callback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">entries<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  entries<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// それぞれのエントリーは、観測された 1 つの対象要素の交差状態の変化を示している。</span>\n    <span class=\"token comment\">//   entry.boundingClientRect</span>\n    <span class=\"token comment\">//   entry.intersectionRatio</span>\n    <span class=\"token comment\">//   entry.intersectionRect</span>\n    <span class=\"token comment\">//   entry.isIntersecting</span>\n    <span class=\"token comment\">//   entry.rootBounds</span>\n    <span class=\"token comment\">//   entry.target</span>\n    <span class=\"token comment\">//   entry.time</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>コールバックが受信したエントリーのリストには、交差状態の変化を報告した各ターゲットに対して 1 つのエントリーが含まれます。 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IntersectionObserverEntry/isIntersecting\"><code>isIntersecting</code> <small>(en-US)</small></a> プロパティの値をチェックして、そのエントリーが現在ルートと交差している要素を表しているかどうかを確認します。</p>\n<p>コールバックはメインスレッドで実行される点に注意してください。可能な限り早く動作する必要があります。もし時間を要する処理であるなら、 <a href=\"/ja/docs/Web/API/Window/requestIdleCallback\"><code>Window.requestIdleCallback()</code></a> を使ったほうがいいでしょう。</p>\n<p>また <code>root</code> オプションを指定した場合、ターゲットはルート要素の子孫でなければなりません。</p>"}},{"type":"prose","value":{"id":"交差の計算方法","title":"交差の計算方法","isH3":true,"content":"<p>交差オブザーバー API によって考慮される領域はすべて矩形です。不規則に整形された要素は、要素全体を囲む最小の矩形で占有しているとみなされます。同様に、要素の可視部分が矩形ではない場合、要素が交差する矩形は要素の可視部分全体を含む最小の矩形であると解釈されます。</p>\n<p><a href=\"/ja/docs/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> オブジェクトによって提供される様々なプロパティがどのように交差を表現しているかを知るともっと役に立つでしょう。</p>\n<h4 id=\"交差するルートとルートマージン\">交差するルートとルートマージン</h4>\n<p>ある要素とそのコンテナーとの交差を監視するまえに、まずはコンテナーを知る必要があります。ここでのコンテナーとは<strong>交差ルート</strong>または<strong>ルート要素</strong>です。これは監視される要素の親要素となる文書内の特定の要素になるか、文書のビューポートをコンテナーとして使用する際は <code>null</code> になるかいずれかになります。</p>\n<p><strong>ルート交差矩形</strong>はターゲットをチェックするために使用される矩形です。この矩形は次のように決まります。</p>\n<ul>\n  <li>交差ルートが暗黙のルート（すなわち最上位の <a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a>）である場合、ルート交差矩形はビューポートの矩形になります。</li>\n  <li>交差ルートのあふれた部分が切り取られていた場合、ルート交差矩形はルート要素のコンテンツ領域になります。</li>\n  <li>それ以外の場合は、ルート交差矩形は交差ルートのクライアント矩形（<a href=\"/ja/docs/Web/API/Element/getBoundingClientRect\" title=\"getBoundingClientRect()\"><code>getBoundingClientRect()</code></a> を呼び出して返されるもの）です。</li>\n</ul>\n<p>交差するルートとして使用される矩形は、<strong>ルートマージン</strong> <code>rootMargin</code> を <a href=\"/ja/docs/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> の作成時に設定することで調整することが可能です。 <code>rootMargin</code> の値は交差するルートの境界ボックスの各辺にオフセットを追加定義して、最終的な交差のルートの境界を作成します（コールバックが実行された際には <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IntersectionObserverEntry/rootBounds\"><code>IntersectionObserverEntry.rootBounds</code> <small>(en-US)</small></a> で取得できるものです）。</p>\n<h4 id=\"閾値\">閾値</h4>\n<p>交差オブザーバー API は、ターゲット要素が見える量の微細な変化が発生するたびに知らせるのではなく、<strong>閾値</strong> (threshold) を使用します。オブザーバーを作成する際に、表示されるターゲット要素がどの程度見えているかの割合を表す 1 つ以上の数値を指定できます。API はこれらの閾値を超えて見えたかどうかの変更のみを知らせます。</p>\n<p>例えば、ターゲット要素が 25% 見える度に通知を受けたい場合は、オブザーバーを作成する際に [0, 0.25, 0.5, 0.75, 1] という配列を閾値のリストとして指定します。</p>\n<p>コールバックが呼び出されると、 <code>IntersectionObserverEntry</code> オブジェクトのリストを受け取ります。これは、ルートと交差する度合いが変化し、露出量がいずれかの方向に閾値を越えた観測対象ごとに 1 つずつあります。</p>\n<p>ターゲットが<em>現在</em>ルートと交差しているかどうかは、エントリーの <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IntersectionObserverEntry/isIntersecting\"><code>isIntersecting</code> <small>(en-US)</small></a> プロパティを見ることで確認できます。これにより、そのエントリーが、要素が交差している状態から交差しなくなるまでの遷移を表すのか、交差していない状態から交差する状態への遷移を表すのかを判断することができます。</p>\n<p>交差する矩形がゼロでないこともあり得ることに注意してください。これは、交差部分が両者の境界線にぴったり沿っているか、または <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IntersectionObserverEntry/boundingClientRect\"><code>boundingClientRect</code> <small>(en-US)</small></a> の面積がゼロの場合に起こり得ることです。このようにターゲットとルートが境界線を共有している状態は、交差した状態に遷移したとみなすには不十分です。</p>\n<p>閾値の仕組みを感じ取るには、下のボックスをスクロールして見てください。その中にある各色のボックスには四隅全てにパーセント値が表示されています。コンテナーをスクロールする時にこれらのパーセント値が変化することが分かります。各ボックスには異なる閾値が設定されています。</p>\n<ul>\n  <li>最初のボックスは可視点の各パーセント値がセットされています。つまり<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IntersectionObserver/thresholds\"><code>IntersectionObserver.thresholds</code> <small>(en-US)</small></a> の配列は <code>[0.00, 0.01, 0.02, ..., 0.99, 1.00]</code> となります。</li>\n  <li>2 つ目のボックスには単一の閾値が、 50% の位置にあります。</li>\n  <li>3 つ目のボックスは可視率が 10% 毎の閾値があります (0%, 10%, 20%...)</li>\n  <li>最後のボックスの閾値は 25% 毎です。</li>\n</ul>\n<div class=\"code-example\"><pre class=\"brush: html hidden notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>boxTemplate<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sampleBox<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>label topLeft<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>label topRight<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>label bottomLeft<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>label bottomRight<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>contents<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: css hidden notranslate\"><code><span class=\"token selector\">.contents</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 700px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 1725px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.wrapper</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.sampleBox</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 175px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 150px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>245<span class=\"token punctuation\">,</span> 170<span class=\"token punctuation\">,</span> 140<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 2px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>201<span class=\"token punctuation\">,</span> 126<span class=\"token punctuation\">,</span> 17<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 6px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#box1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#box2</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 75px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#box3</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 150px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#box4</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.label</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> 14px <span class=\"token string\">\"Open Sans\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Arial\"</span><span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 0.7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 3em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 18px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.topLeft</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.topRight</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.bottomLeft</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.bottomRight</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js hidden notranslate\"><code><span class=\"token keyword\">let</span> observers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function-variable function\">startup</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> wrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".wrapper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// オブザーバーのオプション</span>\n\n  <span class=\"token keyword\">let</span> observerOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">root</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">rootMargin</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0px\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">threshold</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// それぞれのボックスに設定する閾値の配列。最初のボックスの</span>\n  <span class=\"token comment\">// 閾値は、（各パーセント点対して）非常にたくさんあるため、</span>\n  <span class=\"token comment\">// プログラムで設定します。</span>\n\n  <span class=\"token keyword\">let</span> thresholdSets <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    thresholdSets<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// それぞれのボックスを追加し、それぞれに新しいオブザーバーを生成</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> template <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#boxTemplate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span><span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> boxID <span class=\"token operator\">=</span> <span class=\"token string\">\"box\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    template<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".sampleBox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> boxID<span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">importNode</span><span class=\"token punctuation\">(</span>template<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// このボックスのオブザーバーを設定</span>\n\n    observerOptions<span class=\"token punctuation\">.</span>threshold <span class=\"token operator\">=</span> thresholdSets<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    observers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>intersectionCallback<span class=\"token punctuation\">,</span> observerOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    observers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#\"</span> <span class=\"token operator\">+</span> boxID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 開始位置までスクロール</span>\n\n  document<span class=\"token punctuation\">.</span>scrollingElement<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">=</span> wrapper<span class=\"token punctuation\">.</span>firstElementChild<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">+</span> window<span class=\"token punctuation\">.</span>scrollY<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>scrollingElement<span class=\"token punctuation\">.</span>scrollLeft <span class=\"token operator\">=</span> <span class=\"token number\">750</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function-variable function\">intersectionCallback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">entries</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  entries<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> box <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> visiblePct <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>intersectionRatio <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">;</span>\n\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".topLeft\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> visiblePct<span class=\"token punctuation\">;</span>\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".topRight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> visiblePct<span class=\"token punctuation\">;</span>\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".bottomLeft\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> visiblePct<span class=\"token punctuation\">;</span>\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".bottomRight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> visiblePct<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">startup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"閾値\" id=\"frame_thresholds\" width=\"500\" height=\"500\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Intersection_Observer_API/_sample_.thresholds.html\" loading=\"lazy\"></iframe>\n<h4 id=\"クリッピングと交差矩形\">クリッピングと交差矩形</h4>\n<p>ブラウザーは次のように最終的な交差矩形を計算します。これはすべて完了した後の状態が見えますが、交差がいつ発生するかを正確に把握するために、これらの手順を理解すると役立ちます。</p>\n<ol>\n  <li>ターゲット要素の境界矩形（つまり、要素を構成するすべてのコンポーネントの境界ボックスを完全に囲む最小の矩形）は、ターゲットに対して <a href=\"/ja/docs/Web/API/Element/getBoundingClientRect\" title=\"getBoundingClientRect()\"><code>getBoundingClientRect()</code></a> を呼び出すことによって取得されます。これは、交差する矩形の最大の大きさです。残りの手順では、交差しない部分を削除します。</li>\n  <li>ターゲットの直接の親ブロックから始まり、外側に向かって移動し、それぞれの包含ブロックのクリッピングが（存在すれば）交差する長方形に適用されます。ブロックのクリッピングは、 2 つのブロックの交差と、 <a href=\"/ja/docs/Web/CSS/overflow\"><code>overflow</code></a> プロパティで（存在すれば）指定されたクリッピングモードに基づいて決定されます。 <code>overflow</code> に <code>visible</code> 以外を設定すると、クリッピングが行われます。</li>\n  <li>包含する要素の1つがネストされた閲覧コンテキストのルートである場合 (<a href=\"/ja/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> に含まれる文書など)、交差する矩形は含まれているコンテキストのビューポートで切り取られ、コンテナー群を通して上方に再帰的にコンテナーの包含ブロックを続けます。ですから、最上位の <code>&lt;iframe&gt;</code> に到達したら、交差矩形はフレームのビューポートに切り取られ、フレームの親要素が次のブロックとなり、交差ルートに向けて再帰が行われます。</li>\n  <li>上方への再帰が交差ルートに達すると、結果の矩形が交差ルートの座標空間に対応付けられます。</li>\n  <li>結果の矩形はそれから<a href=\"#root-intersection-rectangle\">ルート交差矩形</a>と交差することで更新されます。</li>\n  <li>この矩形は、最終的に、ターゲットの <a href=\"/ja/docs/Web/API/Document\"><code>document</code></a> の座標空間に対応付けられます。</li>\n</ol>"}},{"type":"prose","value":{"id":"交差状態の変化のコールバック","title":"交差状態の変化のコールバック","isH3":true,"content":"<p>ターゲット要素がルート要素内で見えている範囲が可視量の閾値を通過したとき、 <a href=\"/ja/docs/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> オブジェクトのコールバックが実行されます。コールバックは、入力引数として交差したすべての閾値を示す <code>IntersectionObserverEntry</code> オブジェクトの配列を、また参照として <code>IntersectionObserver</code> オブジェクト自身を受け取ります。</p>\n<p>閾値のリスト内のそれぞれの項目は、通過した閾値を説明する <a href=\"/ja/docs/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> オブジェクトです。つまり、それぞれの項目は指定された要素がルート要素とどれだけ交差したのか、要素が交差したと言えるのかどうか、推移が発生した方向を示します。</p>\n<p>以下のコードスニペットでは、要素がルートと交差していない状態から 75% 以上交差する状態に遷移した回数をカウントするコールバックを示しています。しきい値 0.0 （既定値）の場合、コールバックは<a href=\"https://www.w3.org/TR/intersection-observer/#dom-intersectionobserverentry-isintersecting\" class=\"external\" rel=\" noopener\">およそ</a> <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IntersectionObserverEntry/isIntersecting\"><code>isIntersecting</code> <small>(en-US)</small></a> の論理値が遷移した時に呼び出されます。このスニペットでは、まず遷移が正の値であることを確認し、次に <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IntersectionObserverEntry/intersectionRatio\"><code>intersectionRatio</code> <small>(en-US)</small></a> が 75% 以上かどうかを判断し、その場合はカウンターをインクリメントしています。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">intersectionCallback</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entries</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  entries<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>isIntersecting<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>intersectionRatio <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        intersectionCounter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"インターフェイス","title":"インターフェイス","isH3":false,"content":"<dl>\n  <dt id=\"intersectionobserver\"><a href=\"/ja/docs/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a></dt>\n  <dd>\n    <p>交差オブザーバー API の主なインターフェイスです。同一の交差設定に対して任意の数のターゲット要素を監視するオブザーバーを作成し管理するためのメソッドを提供します。各オブザーバーは 1 つ以上のターゲット要素と共通の親要素、または最上位の <a href=\"/ja/docs/Web/API/Document\"><code>Document</code></a> の<a href=\"/ja/docs/Glossary/Viewport\">ビューポート</a>との交差における変化を非同期的に監視することが出来ます。この親要素またはビューポートは<strong>ルート</strong>と呼ばれます。</p>\n  </dd>\n  <dt id=\"intersectionobserverentry\"><a href=\"/ja/docs/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a></dt>\n  <dd>\n    <p>スクロールにおける変化の特定の瞬間において、ターゲット要素とルートとなるコンテナーとの交差を表現します。この型のオブジェクトは、 <code>IntersectionObserver</code> コールバックへの入力、または <a href=\"/ja/docs/Web/API/IntersectionObserver/takeRecords\"><code>IntersectionObserver.takeRecords()</code></a> の呼び出しの 2 通りの方法でのみ受け取ることができます。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"単純な例","title":"単純な例","isH3":false,"content":"<p>この単純な例では、ターゲット要素の色と透明度を要素の可視性で変化させます。<a href=\"/ja/docs/Web/API/Intersection_Observer_API/Timing_element_visibility\">交差オブザーバー API を利用した時間の絡んだ要素の可視性</a>では、要素のセット（例えば広告など）がユーザーに表示される時間を測定し、統計を記録したり要素を更新したりしてその情報にユーザーどう反応したかを示す、より拡張性の高い具体例を見ることができるでしょう。</p>"}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<p>この例における HTML は非常に短く、主な要素はターゲットとなるボックス（IDは <code>\"box\"</code> としました）とボックス内のコンテンツです。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vertical<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    Welcome to <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span>The Box!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"css","title":"CSS","isH3":true,"content":"<p>この CSS はこの例ではあまり重要ではありません。この CSS は要素をレイアウトし、 <a href=\"/ja/docs/Web/CSS/background-color\"><code>background-color</code></a> と <a href=\"/ja/docs/Web/CSS/border\"><code>border</code></a> 属性が <a href=\"/ja/docs/Web/CSS/CSS_Transitions\">CSS トランジション</a>に加わることができるようにし、要素が多少見えなくなるときの変更に影響を与えるのに使用します。</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">#box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>40<span class=\"token punctuation\">,</span> 40<span class=\"token punctuation\">,</span> 190<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 4px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>20<span class=\"token punctuation\">,</span> 20<span class=\"token punctuation\">,</span> 120<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> background-color 1s<span class=\"token punctuation\">,</span> border 1s<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 350px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 350px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.vertical</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> 32px <span class=\"token string\">\"Arial\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.extra</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 350px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 350px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 4px solid <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>20<span class=\"token punctuation\">,</span> 20<span class=\"token punctuation\">,</span> 120<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<p>最後に、交差オブザーバー API を使って何ができるのか、 JavaScript のコードを見ていきましょう。</p>\n<h4 id=\"セットアップ\">セットアップ</h4>\n<p>まずは、いくつかの変数を準備してオブザーバーをインストールする必要があります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> numSteps <span class=\"token operator\">=</span> <span class=\"token number\">20.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> boxElement<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> prevRatio <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> increasingColor <span class=\"token operator\">=</span> <span class=\"token string\">\"rgba(40, 40, 190, ratio)\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> decreasingColor <span class=\"token operator\">=</span> <span class=\"token string\">\"rgba(190, 40, 40, ratio)\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Set things up</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  boxElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#box\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">createObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>セットアップした定数と変数は下記の通りです。</p>\n<dl>\n  <dt id=\"numsteps\"><code>numSteps</code></dt>\n  <dd>\n    <p>可視率が 0.0 から 1.0 の間にどのくらいの数の閾値を設定するか示す定数です。</p>\n  </dd>\n  <dt id=\"prevratio\"><code>prevRatio</code></dt>\n  <dd>\n    <p>この変数は閾値を超えた最後の可視率を記録するために使用します。これはターゲット要素が大体見えるようになったかどうかを調べることが出来ます。</p>\n  </dd>\n  <dt id=\"increasingcolor\"><code>increasingColor</code></dt>\n  <dd>\n    <p>可視率が増加している時にターゲット要素に適用する色を定義する文字列です。文字列の中の \"比率\" という単語はターゲット要素の現在の可視率に置き換えられ、要素が色を変化させるだけでなく不透明になるにつれて透明度が増していきます。</p>\n  </dd>\n  <dt id=\"decreasingcolor\"><code>decreasingColor</code></dt>\n  <dd>\n    <p>同様に、可視率が減少していく時に適用する色を定義する文字列です。</p>\n  </dd>\n</dl>\n<p><a href=\"/ja/docs/Web/API/EventTarget/addEventListener\" title=\"Window.addEventListener()\"><code>Window.addEventListener()</code></a> を呼び出して<a href=\"/ja/docs/Web/API/Window/load_event\" title=\"load\"><code>load</code></a> イベントの待ち受けを開始します。ページの読み込みが完了すると、<a href=\"/ja/docs/Web/API/Document/querySelector\" title=\"querySelector()\"><code>querySelector()</code></a> を使用して ID が <code>\"box\"</code> 要素への参照を取得し、 <code>createObserver()</code> メソッドを呼び出して交差オブザーバーの設定とインストール処理を開始します。</p>\n<h4 id=\"交差オブザーバーの作成_2\">交差オブザーバーの作成</h4>\n<p><code>createObserver()</code> メソッドは新しい交差オブザーバー (<a href=\"/ja/docs/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a>) を作成し、ターゲット要素の監視を開始するためにページが完全に読み込まれてから呼び出されます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">createObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> observer<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">root</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">rootMargin</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0px\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">threshold</span><span class=\"token operator\">:</span> <span class=\"token function\">buildThresholdList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>handleIntersect<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  observer<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>boxElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>この関数ではオブザーバーの設定を含む <code>options</code> オブジェクトを設定することから始めます。文書のビューポートに対してターゲット要素がどのくらい見えているかという変化を監視したいので、 <code>root</code> は <code>null</code> にします。マージンは必要がないので、マージンオフセットである <code>rootMargin</code> 設定は \"0px\" と指定しています。これによって、オブザーバーは追加された（または差し引かれた）空間がなくてもターゲット要素の境界とビューポートの境界の交差点がどう変化するのか監視を開始することができます。</p>\n<p>可視率の閾値のリストである、 <code>threshold</code> は関数 <code>buildThresholdList()</code> によって構成されます。閾値のリストは、この例ではプログラムによって計算されています。その数が意図的に調整可能だからです。</p>\n<p><code>options</code> が用意できたら、新しいオブザーバーを作成、つまり<a href=\"/ja/docs/Web/API/IntersectionObserver/IntersectionObserver\" title=\"IntersectionObserver()\"><code>IntersectionObserver()</code></a> のコンストラクターを呼び出して、閾値をまたいだ際に呼ばれる関数 <code>handleIntersect()</code> を指定し、オプションを指定します。次に、返されたオブザーバーに対して <a href=\"/ja/docs/Web/API/IntersectionObserver/observe\" title=\"observe()\"><code>observe()</code></a> を呼び出し、必要なターゲット要素を渡します。</p>\n<p><code>observer.observe()</code> をそれぞれの要素に対して呼び出すことにより、ビューポートに対して交差し変化しているかを複数の要素から監視することが出来ます。</p>\n<h4 id=\"閾値比率の配列を組み立てる\">閾値比率の配列を組み立てる</h4>\n<p>閾値のリストを作成する <code>buildThresholdList()</code> 関数は次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">buildThresholdList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> thresholds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> numSteps <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>numSteps<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> ratio <span class=\"token operator\">=</span> i<span class=\"token operator\">/</span>numSteps<span class=\"token punctuation\">;</span>\n    thresholds<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  thresholds<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> thresholds<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これは 1 と <code>numSteps</code> の間の各整数 <code>i</code> に対して、値 <code>i/numSteps</code> を閾値の配列に入れることで、それぞれが 0.0 と 1.0 の間の比率である閾値の配列を作成しています。また、0 を配列に含めます。既定の <code>numSteps</code> (20) が指定された結果、以下の閾値のリストが表示されます。</p>\n<table class=\"standard-table\">\n  <tbody>\n    <tr>\n      <th>#</th>\n      <th>率</th>\n      <th>#</th>\n      <th>率</th>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.05</td>\n      <th>11</th>\n      <td>0.55</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.1</td>\n      <th>12</th>\n      <td>0.6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.15</td>\n      <th>13</th>\n      <td>0.65</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.2</td>\n      <th>14</th>\n      <td>0.7</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.25</td>\n      <th>15</th>\n      <td>0.75</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.3</td>\n      <th>16</th>\n      <td>0.8</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.35</td>\n      <th>17</th>\n      <td>0.85</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.4</td>\n      <th>18</th>\n      <td>0.9</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.45</td>\n      <th>19</th>\n      <td>0.95</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>0.5</td>\n      <th>20</th>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>もちろん、閾値の配列をハードコードすることは可能ですし、よくやりがちなことです。しかし、この例では設定を追加することで粒度を調整する余地が残っています。</p>\n<h4 id=\"交差の変換の処理\">交差の変換の処理</h4>\n<p>ブラウザーはターゲット要素（この場合は <code>\"box\"</code> というIDを持つ要素です）が表示されているか、またはどのくらい見えているかという比率が、閾値のリストにある値の 1 つをまたぐことを検出して、<code>handleIntersect()</code> を呼び出します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">handleIntersect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entries<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  entries<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>intersectionRatio <span class=\"token operator\">&gt;</span> prevRatio<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      entry<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> increasingColor<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ratio\"</span><span class=\"token punctuation\">,</span> entry<span class=\"token punctuation\">.</span>intersectionRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      entry<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> decreasingColor<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ratio\"</span><span class=\"token punctuation\">,</span> entry<span class=\"token punctuation\">.</span>intersectionRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    prevRatio <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>intersectionRatio<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>リストである <code>entries</code> 内にある <a href=\"/ja/docs/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a> について、entry の <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/IntersectionObserverEntry/intersectionRatio\"><code>intersectionRatio</code> <small>(en-US)</small></a> が上昇しているかを調べます。上昇していればターゲットの <a href=\"/ja/docs/Web/CSS/background-color\"><code>background-color</code></a> に <code>increasingColor</code> (<code>\"rgba(40, 40, 190, ratio)\"</code> だったことを思い出してください) の値をセットし、その際にその中にある \"ratio\" という文字列を entry が持つ <code>intersectionRatio</code> と置き換えます。その結果、色が変更されるだけでなく、ターゲット要素の透明度も変更されます。交差する比率が下がるに連れて、背景色のアルファ値が下がりより透明度の高い要素となります。</p>\n<p>同様に、 <code>intersectionRatio</code> が下がっている場合は <code>decreasingColor</code> を文字列として使用し \"ratio\" という文字列を <code>intersectionRatio</code> でもって置き換えたあとに、要素の <code>background-color</code> として適用します。</p>\n<p>最後に、交差する割合が上がっているか下がっているかを追跡するために、変数 <code>prevRatio</code> に現在の比率を代入しておきます。</p>"}},{"type":"prose","value":{"id":"結果","title":"結果","isH3":true,"content":"<p>以下がその結果内容です。ページを上下にスクロールして、ボックスの外観がどう変化するかを確認してみましょう。</p><iframe class=\"sample-code-frame\" title=\"単純な例\" id=\"frame_a_simple_example\" width=\"400\" height=\"400\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/Intersection_Observer_API/_sample_.a_simple_example.html\" loading=\"lazy\"></iframe>\n<p>より応用的な例は<a href=\"/ja/docs/Web/API/Intersection_Observer_API/Timing_element_visibility\">交差オブザーバー API を使用したタイミング要素の可視性</a>のセクションを見てください。</p>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"<table>\n  <thead>\n    <tr>\n      <th>仕様書</th>\n      <th>状態</th>\n      <th>備考</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://w3c.github.io/IntersectionObserver/\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"Intersection Observerの仕様書\" rel=\" noopener\">Intersection Observer</a></td>\n      <td><span class=\"spec-wd\">草案</span></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.IntersectionObserver","dataURL":"/ja/docs/Web/API/Intersection_Observer_API/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/w3c/IntersectionObserver\" class=\"external\" rel=\" noopener\">交差オブザーバーのポリフィル</a></li>\n  <li><a href=\"/ja/docs/Web/API/Intersection_Observer_API/Timing_element_visibility\">交差オブザーバー API を使用したタイミング要素の可視性</a></li>\n  <li><a href=\"/ja/docs/Web/API/IntersectionObserver\"><code>IntersectionObserver</code></a> と <a href=\"/ja/docs/Web/API/IntersectionObserverEntry\"><code>IntersectionObserverEntry</code></a></li>\n</ul>"}}],"toc":[{"text":"交差オブザーバーの概念と使い方","id":"交差オブザーバーの概念と使い方"},{"text":"インターフェイス","id":"インターフェイス"},{"text":"単純な例","id":"単純な例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"交差オブザーバー API (Intersection Observer API) は、ターゲットとなる要素が、祖先要素または文書の最上位のビューポートと交差する変化を非同期的に監視する方法を提供します。","popularity":0.0014,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Intersection Observer API","locale":"en-US","native":"English (US)"},{"title":"Intersection Observer API","locale":"es","native":"Español"},{"title":"Intersection Observer API","locale":"fr","native":"Français"},{"title":"Intersection Observer API","locale":"ko","native":"한국어"},{"title":"Intersection Observer API","locale":"ru","native":"Русский"},{"title":"Intersection Observer API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/intersection_observer_api","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/intersection_observer_api/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/Intersection_Observer_API","title":"交差オブザーバー API"}],"pageTitle":"交差オブザーバー API - Web API | MDN","noIndexing":false}}