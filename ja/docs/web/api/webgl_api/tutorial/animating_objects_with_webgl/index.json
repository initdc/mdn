{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebGL でのオブジェクトのアニメーティング","mdn_url":"/ja/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL","locale":"ja","native":"日本語","sidebarHTML":"\n <ol>\n  <li><a href=\"/ja/docs/Web/API/WebGL_API\"><strong>WebGL API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebGL tutorial</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL\">Getting started with WebGL</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Adding_2D_content_to_a_WebGL_context\">Adding 2D content to a WebGL context</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\">Using shaders to apply color in WebGL</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL\">Animating objects with WebGL</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">Creating 3D objects using WebGL</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\">Using textures in WebGL</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL\">Lighting in WebGL</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL\">Animating textures in WebGL</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Examples and articles</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Matrix_math_for_the_web\">Matrix math for the web</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/WebGL_model_view_projection\">WebGL model view projection</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/WebGL_best_practices\">WebGL best practices</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Using_Extensions\">Using WebGL extensions</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/Basic_2D_animation_example\">A basic 2D WebGL animation example</a></li>\n        <li><a href=\"/ja/docs/Web/API/WebGL_API/By_example\">WebGL by example</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Interfaces</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLBuffer\"><code>WebGLBuffer</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLContextEvent\"><code>WebGLContextEvent</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLProgram\"><code>WebGLProgram</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLQuery\"><code>WebGLQuery</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLSampler\"><code>WebGLSampler</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLShader\"><code>WebGLShader</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLShaderPrecisionFormat\"><code>WebGLShaderPrecisionFormat</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLSync\"><code>WebGLSync</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLTexture\"><code>WebGLTexture</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code> <small>(en-US)</small></a></li>\n        <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code> <small>(en-US)</small></a></li>\n      </ol>\n    </details>\n  </li>\n\n  <li><strong><a href=\"/ja/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Contribute</summary>\n      <ol>\n        <li><a href=\"/ja/docs/MDN\">The MDN project</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\">« 前のページ</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">次のページ »</a></li>\n</ul>\n<p>前の例で作成したコードはすでに、WebGL のシーンを 15 ミリ秒ごとに再描画するよう設定されています。今までは単純に、毎回同じものをそのまま再描画していました。これから、正方形が実際に動くようにコードを変えていきます。</p>\n<p>今回の例では 2D の正方形を 3 次元空間で、実際に回転や移動させます。これにより、作成したのは 2D のオブジェクトですが、それは 3D 空間に存在していることが証明されます。</p>"}},{"type":"prose","value":{"id":"正方形を回転させる","title":"正方形を回転させる","isH3":false,"content":"<p>正方形を回転させてみましょう。始めに、正方形の回転をたどる変数が必要です:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> squareRotation <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>そして、描画する際に正方形に回転を適用するよう、<code>drawScene()</code> 関数を更新することが必要です。正方形の初期描画位置に移した後、回転を以下のように適用します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">mvPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">mvRotate</span><span class=\"token punctuation\">(</span>squareRotation<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これを現在のモデルビュー行列に保存し、そして行列を現在の <code>squareRotation</code> の値を基に、X 軸および Z 軸で回転させます。</p>\n<p>描画後は、元の行列に戻さなければなりません:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  <span class=\"token function\">mvPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>後に描画する別のオブジェクトを回転させてしまうことを防ぐために、元の行列を保存および復元します。今回の例では他に描画するものがありませんので、これは役目がありません。</p>\n<p>実際に動かすために、時間がたつにつれて <code>squareRotation</code> の値を変えていくコードを追加しなければなりません。これは最後にアニメーションを行った時刻を追跡する新たな変数 (<code>lastSquareUpdateTime</code> と呼びましょう) を作成することで実現できるので、<code>drawScene()</code> 関数の末尾に以下のコードを追加します。:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  <span class=\"token keyword\">var</span> currentTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastSquareUpdateTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> delta <span class=\"token operator\">=</span> currentTime <span class=\"token operator\">-</span> lastSquareUpdateTime<span class=\"token punctuation\">;</span>\n\n    squareRotation <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">30</span> <span class=\"token operator\">*</span> delta<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  lastSquareUpdateTime <span class=\"token operator\">=</span> currentTime<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このコードは正方形をどれだけ回転させるかを決めるために、最後に <code>squareRotation</code> の値を更新してから経過した時間を使用しています。</p>"}},{"type":"prose","value":{"id":"正方形を動かす","title":"正方形を動かす","isH3":false,"content":"<p>同様に、描画前に位置情報を変えていくことで正方形を移動させることができます。以下の例で、いくつかの基本的なアニメーションを行ってみます (当然ながら、実際はここまで極端に動かそうとは思わないでしょう) 。</p>\n<p>新しい変数で、移動する際の各軸のオフセットをたどりましょう:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> squareXOffset <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> squareYOffset <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> squareZOffset <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>また、各軸の値をどれだけ変化させるかを以下の変数で示します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> xIncValue <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> yIncValue <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> zIncValue <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>そして先ほどの回転させるサンプルコードを、以下のコードを追加して更新します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>    squareXOffset <span class=\"token operator\">+=</span> xIncValue <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span> <span class=\"token operator\">*</span> delta<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    squareYOffset <span class=\"token operator\">+=</span> yIncValue <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span> <span class=\"token operator\">*</span> delta<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    squareZOffset <span class=\"token operator\">+=</span> zIncValue <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span> <span class=\"token operator\">*</span> delta<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>squareYOffset<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      xIncValue <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>xIncValue<span class=\"token punctuation\">;</span>\n      yIncValue <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>yIncValue<span class=\"token punctuation\">;</span>\n      zIncValue <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>zIncValue<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>最後に、以下のコードを <code>drawScene()</code> 関数に追加します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">mvTranslate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>squareXOffset<span class=\"token punctuation\">,</span> squareYOffset<span class=\"token punctuation\">,</span> squareZOffset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>以上で、正方形が回転するとともにズームイン・ズームアウトしながら、環境内を近づいたり遠ざかったりするようランダムに動き回ります。これはスクリーンセーバーのようです。</p><iframe width=\"670\" height=\"510\" src=\"https://mdn.github.io/webgl-examples/tutorial/sample4/index.html\" loading=\"lazy\"></iframe>\n<p><a href=\"https://github.com/mdn/webgl-examples/tree/gh-pages/tutorial/sample4\" class=\"external\" rel=\" noopener\">コードを確認する</a> | <a href=\"https://mdn.github.io/webgl-examples/tutorial/sample4/\" class=\"external\" rel=\" noopener\">新しいページでデモを開く</a></p>"}},{"type":"prose","value":{"id":"さらに行列を操作する","title":"さらに行列を操作する","isH3":false,"content":"<p>この例は、行列をスタックから取り出す・スタックへ格納する 2 つのルーチンや、与えられた角度の値に基づいて行列を回転させるルーチンといった、高度な行列操作を行っています。参考として、以下にそれを掲載します:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> mvMatrixStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">mvPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    mvMatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span><span class=\"token function\">dup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mvMatrix <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">dup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    mvMatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>mvMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">dup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">mvPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mvMatrixStack<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空の行列スタックからポップすることはできません。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  mvMatrix <span class=\"token operator\">=</span> mvMatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> mvMatrix<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">mvRotate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">angle<span class=\"token punctuation\">,</span> v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> inRadians <span class=\"token operator\">=</span> angle <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">180.0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> m <span class=\"token operator\">=</span> Matrix<span class=\"token punctuation\">.</span><span class=\"token function\">Rotation</span><span class=\"token punctuation\">(</span>inRadians<span class=\"token punctuation\">,</span> $<span class=\"token constant\">V</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ensure4x4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これらのルーチンは、以前 Vlad Vukićević 氏が記述されたサンプルより取り入れています。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\">« 前のページ</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">次のページ »</a></li>\n</ul>"}}],"toc":[{"text":"正方形を回転させる","id":"正方形を回転させる"},{"text":"正方形を動かす","id":"正方形を動かす"},{"text":"さらに行列を操作する","id":"さらに行列を操作する"}],"summary":"前の例で作成したコードはすでに、WebGL のシーンを 15 ミリ秒ごとに再描画するよう設定されています。今までは単純に、毎回同じものをそのまま再描画していました。これから、正方形が実際に動くようにコードを変えていきます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Animating objects with WebGL","locale":"en-US","native":"English (US)"},{"title":"Animer des objets avec WebGL","locale":"fr","native":"Français"},{"title":"WebGL을 사용한 객체 애니메이션","locale":"ko","native":"한국어"},{"title":"Оживление объектов при помощи WebGL","locale":"ru","native":"Русский"},{"title":"用 WebGL 让目标动起来","locale":"zh-CN","native":"中文 (简体)"},{"title":"利用 WebGL 產生動畫","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"ja/web/api/webgl_api/tutorial/animating_objects_with_webgl","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/webgl_api/tutorial/animating_objects_with_webgl/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/WebGL_API","title":"WebGL: ウェブの 2D および 3D グラフィック"},{"uri":"/ja/docs/Web/API/WebGL_API/Tutorial","title":"WebGL チュートリアル"},{"uri":"/ja/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL","title":"WebGL でのオブジェクトのアニメーティング"}],"pageTitle":"WebGL でのオブジェクトのアニメーティング - Web API | MDN","noIndexing":false}}