{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"setTimeout()","mdn_url":"/ja/docs/Web/API/setTimeout","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/HTML_DOM_API\">HTML DOM API</a></strong></li><li><strong><a href=\"/ja/docs/Web/API/setTimeout\"><code>SetTimeout</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>HTML DOM に関連するページ</summary><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/BeforeUnloadEvent\"><code>BeforeUnloadEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/DOMStringMap\"><code>DOMStringMap</code></a></li><li><a href=\"/ja/docs/Web/API/ErrorEvent\"><code>ErrorEvent</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLAnchorElement\"><code>HTMLAnchorElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLAreaElement\"><code>HTMLAreaElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLAudioElement\"><code>HTMLAudioElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLBRElement\"><code>HTMLBRElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLBaseElement\"><code>HTMLBaseElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLBodyElement\"><code>HTMLBodyElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLButtonElement\"><code>HTMLButtonElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLContentElement\"><code>HTMLContentElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDListElement\"><code>HTMLDListElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDataElement\"><code>HTMLDataElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDataListElement\"><code>HTMLDataListElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDivElement\"><code>HTMLDivElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLDocument\"><code>HTMLDocument</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLEmbedElement\"><code>HTMLEmbedElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLFieldSetElement\"><code>HTMLFieldSetElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLFormControlsCollection\"><code>HTMLFormControlsCollection</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLFrameSetElement\"><code>HTMLFrameSetElement</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLHRElement\"><code>HTMLHRElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLHeadElement\"><code>HTMLHeadElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLHeadingElement\"><code>HTMLHeadingElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLHtmlElement\"><code>HTMLHtmlElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLInputElement\"><code>HTMLInputElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLKeygenElement\"><code>HTMLKeygenElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLLIElement\"><code>HTMLLIElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLLabelElement\"><code>HTMLLabelElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLLegendElement\"><code>HTMLLegendElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLLinkElement\"><code>HTMLLinkElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLMapElement\"><code>HTMLMapElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLMetaElement\"><code>HTMLMetaElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLMeterElement\"><code>HTMLMeterElement</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLModElement\"><code>HTMLModElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLOListElement\"><code>HTMLOListElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLOptGroupElement\"><code>HTMLOptGroupElement</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLOptionsCollection\"><code>HTMLOptionsCollection</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLOutputElement\"><code>HTMLOutputElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLParagraphElement\"><code>HTMLParagraphElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLPictureElement\"><code>HTMLPictureElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLPreElement\"><code>HTMLPreElement</code> <small>(en-US)</small></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLProgressElement\"><code>HTMLProgressElement</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLQuoteElement\"><code>HTMLQuoteElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLScriptElement\"><code>HTMLScriptElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLSelectElement\"><code>HTMLSelectElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLShadowElement\"><code>HTMLShadowElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLSourceElement\"><code>HTMLSourceElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLSpanElement\"><code>HTMLSpanElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLStyleElement\"><code>HTMLStyleElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableCaptionElement\"><code>HTMLTableCaptionElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableCellElement\"><code>HTMLTableCellElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableColElement\"><code>HTMLTableColElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableRowElement\"><code>HTMLTableRowElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTableSectionElement\"><code>HTMLTableSectionElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTextAreaElement\"><code>HTMLTextAreaElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTimeElement\"><code>HTMLTimeElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTitleElement\"><code>HTMLTitleElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLTrackElement\"><code>HTMLTrackElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HTMLUListElement\"><code>HTMLUListElement</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/HTMLUnknownElement\"><code>HTMLUnknownElement</code></a></li><li><a href=\"/ja/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HashChangeEvent\"><code>HashChangeEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/History\"><code>History</code></a></li><li><a href=\"/ja/docs/Web/API/ImageData\"><code>ImageData</code></a></li><li><a href=\"/ja/docs/Web/API/Location\"><code>Location</code></a></li><li><a href=\"/ja/docs/Web/API/MessageChannel\"><code>MessageChannel</code></a></li><li><a href=\"/ja/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li><li><a href=\"/ja/docs/Web/API/MessagePort\"><code>MessagePort</code></a></li><li><a href=\"/ja/docs/Web/API/Navigator\"><code>Navigator</code></a></li><li><a href=\"/ja/docs/Web/API/PageTransitionEvent\"><code>PageTransitionEvent</code></a></li><li><a href=\"/ja/docs/Web/API/Plugin\"><code>Plugin</code></a></li><li><a href=\"/ja/docs/Web/API/PluginArray\"><code>PluginArray</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PopStateEvent\"><code>PopStateEvent</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/PromiseRejectionEvent\"><code>PromiseRejectionEvent</code></a></li><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/RadioNodeList\"><code>RadioNodeList</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/API/ValidityState\"><code>ValidityState</code></a></li><li><a href=\"/ja/docs/Web/API/Window\"><code>Window</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>グローバルの <strong><code>setTimeout()</code></strong> メソッドは、時間切れになると関数または指定されたコードの断片を実行するタイマーを設定します。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> timeoutID <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">,</span> arg1<span class=\"token punctuation\">,</span> arg2<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> timeoutID <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> timeoutID <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"function\"><code>function</code></dt>\n  <dd>\n    <p>タイマーが満了した後に実行する<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>関数</code></a>。</p>\n  </dd>\n  <dt id=\"code\"><code>code</code></dt>\n  <dd>\n    <p>関数の代わりに文字列を含める代替構文も許容されており、タイマーが満了したときに文字列をコンパイルして実行します。 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a> の使用にリスクがあるのと同じ理由で、この構文は<strong>推奨しません</strong>。</p>\n  </dd>\n  <dt id=\"delay\"><code>delay</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>指定した関数やコードを実行する前に待つタイマーの時間をミリ秒 (1/1000 秒) 単位で指定します。この引数を省略すると値 0 を使用しますので \"直ちに\" 実行する、より正確に言えばできるだけ早く実行することを意味します。どちらの場合も、実際の遅延が想定より長くなることがあります。後述する<a href=\"#%E9%81%85%E5%BB%B6%E3%81%8C%E6%8C%87%E5%AE%9A%E5%80%A4%E3%82%88%E3%82%8A%E9%95%B7%E3%81%84%E7%90%86%E7%94%B1\">遅延が指定値より長い理由</a>をご覧ください。</p>\n  </dd>\n  <dt id=\"arg1_..._argn\"><code>arg1, ..., argN</code> <span class=\"badge inline optional\">省略可</span></dt>\n  <dd>\n    <p>タイマーが満了したときに、 <code>function</code> で指定された関数に渡す追加の引数です。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"返値","title":"返値","isH3":false,"content":"<p>返される <code>timeoutID</code> は正の整数値で、 <code>setTimeout()</code> を呼び出して作成したタイマーを識別します。この値を <a href=\"/ja/docs/Web/API/clearTimeout\" title=\"clearTimeout()\"><code>clearTimeout()</code></a> へ渡すことで、タイムアウトを取り消すことができます。</p>\n<p><code>timeoutID</code> の値は、同じオブジェクト (ウィンドウやワーカー) において、後に <code>setTimeout()</code> や <code>setInterval()</code> を呼び出しても再使用されないことが保証されています。ただし、別なオブジェクトでは別の ID プールを使用します。</p>"}},{"type":"prose","value":{"id":"解説","title":"解説","isH3":false,"content":"<p>タイムアウトは、 <a href=\"/ja/docs/Web/API/clearTimeout\"><code>clearTimeout()</code></a> を使用して取り消すことができます。</p>\n<p>関数を繰り返して（例えば <em>N</em> ミリ秒ごとに）呼び出すには、 <a href=\"/ja/docs/Web/API/setInterval\"><code>setInterval()</code></a> を使用することを検討してください。</p>"}},{"type":"prose","value":{"id":"非同期関数の動作","title":"非同期関数の動作","isH3":true,"content":"<p>\n  <code>setTimeout()</code> は非同期関数です。これは、タイマー関数は関数スタック内の他の関数の実行を停止させないということです。\n  言い換えると、 <code>setTimeout()</code> を使って、関数スタックの次の関数が起動するまでの「間」を作ることはできません。\n</p>\n<p>以下の例をご覧ください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is the first message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is the second message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is the third message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 出力:</span>\n\n  <span class=\"token comment\">// this is the third message</span>\n  <span class=\"token comment\">// this is the second message</span>\n  <span class=\"token comment\">// this is the first message</span>\n</code></pre></div>\n<p>最初の関数は、 2 番目の関数を呼び出す前に 5 秒間の「間」を作らないことに注意してください。その代わり、 1 番目の関数が呼び出されますが、実行されるまで 5 秒間待機します。 1 番目の関数が実行を待っている間に 2 番目の関数が呼び出され、 2 番目の関数が実行される前に 3 秒の待ち時間が適用されます。 1 番目の関数も 2 番目の関数もタイマーが終了していないので、 3 番目の関数が呼び出され、先に実行を完了します。その後、 2 番目の関数が続きます。そして、最後に 1 番目の関数のタイマーが終了した後、 1 番目の関数が実行されます。</p>\n<p>ある関数が実行された後に別の関数が実行されるような処理を行うには、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\">プロミス</a>のドキュメントを参照してください。</p>"}},{"type":"prose","value":{"id":"this_の問題","title":"\"this\" の問題","isH3":true,"content":"<p><code>setTimeout()</code> にメソッドを渡すと、 <code>this</code> が期待とは異なる値で起動されることがあります。一般的な問題は <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/this#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%A8%E3%81%97%E3%81%A6\">JavaScript リファレンス</a>で詳細に説明されています。</p>\n<p><code>setTimeout()</code> によって実行されるコードは、 <code>setTimeout</code> が呼び出された関数とは別の実行コンテキスト内から呼び出されます。呼び出された関数に <code>this</code> キーワードを設定する通常の規則を適用して、呼び出しあるいは <code>bind</code> で <code>this</code> を設定しなければ、厳格モードでなければ <code>global</code> (または <code>window</code>)、厳格モードでは undefined になります。これは、 <code>setTimeout</code> が呼び出された関数の <code>this</code> 値と同じにはなりません。</p>\n<p>以下の例をご覧ください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">myMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>sProperty<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"zero,one,two\" と表示</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"one\" と表示</span>\n</code></pre></div>\n<p><code>myMethod</code> を呼び出したときに、呼び出しによって <code>this</code> が <code>myArray</code> に設定されますので、関数内で <code>this[sProperty]</code> は <code>myArray[sProperty]</code> と等価です。しかし、以下のコードでは動作が異なります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"[object Window]\" と 1 秒後に表示</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"undefined\" と 1.5 秒後に表示</span>\n</code></pre></div>\n<p><code>myArray.myMethod</code> 関数を <code>setTimeout</code> に渡しており、関数が呼び出されると <code>this</code> が前のように設定されず、既定の <code>window</code> オブジェクトになります。</p>\n<p>Array の <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>forEach()</code></a> や <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>reduce()</code></a> などのメソッドにあるような、<code>thisArg</code> を <code>setTimeout</code> に渡すオプションもありません。また以下のように、<code>this</code> を設定するために <code>call</code> を使用する方法も動作しません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// エラー</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同じエラー</span>\n</code></pre></div>\n<h4 id=\"解決策\">解決策</h4>\n<h5 id=\"ラッパー関数の使用\">ラッパー関数の使用</h5>\n<p>この問題の一般的な解決策は、<code>this</code> に必要な値を設定するラッパー関数を使用することです。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"zero,one,two\" と 2 秒後に表示</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"one\" と 2.5 秒後に表示</span>\n</code></pre></div>\n<p>代わりにアロー関数も使用することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"zero,one,two\" と 2 秒後に表示</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"one\" と 2.5 秒後に表示</span>\n</code></pre></div>\n<h5 id=\"bind_の使用\">bind() の使用</h5>\n<p>他に、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>bind()</code></a> を使用して <code>this</code> の値をその関数のすべての呼び出しに設定することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> myBoundMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>sProperty<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">myBoundMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"zero,one,two\" と表示。関数内で 'this' が myArray に結び付けられているため。</span>\n<span class=\"token function\">myBoundMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"one\" と表示</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myBoundMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// こちらも結びつけがあるため \"zero,one,two\" と 1 秒後に表示</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myBoundMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"one\" と 1.5 秒後に表示</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"文字列リテラルの使用","title":"文字列リテラルの使用","isH3":true,"content":"<p>関数の代わりに文字列を <code>setTimeout()</code> に渡すと、<a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a> を使うのと同様の問題が発生します。</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token comment\">// こうやってはいけない</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"console.log('Hello World!');\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js example-good notranslate\"><code><span class=\"token comment\">// こうすればよい</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p><code><a href=\"/ja/docs/Web/API/setTimeout\" aria-current=\"page\"><code>setTimeout()</code></a></code> に渡した文字列はグローバルコンテキストで評価されます。そのため、<code><a href=\"/ja/docs/Web/API/setTimeout\" aria-current=\"page\"><code>setTimeout()</code></a></code> が呼び出されたコンテキストのローカルシンボルは、文字列を評価したコードからは利用できません。</p>"}},{"type":"prose","value":{"id":"遅延が指定値より長い理由","title":"遅延が指定値より長い理由","isH3":true,"content":"<p>タイムアウトが満了するまでに予想より長い時間がかかる理由は複数あります。この節では、もっとも一般的な理由を説明します。</p>\n<h4 id=\"入れ子のタイムアウト\">入れ子のタイムアウト</h4>\n<p><a href=\"https://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#timers\" class=\"external\" rel=\" noopener\">HTML 標準</a>で指定されているとおり、ブラウザーは <code>setTimeout</code> の入れ子になった呼び出しが5回スケジュールされると、最小 4 ミリ秒のタイムアウトを強制します。</p>\n<p>この例では、 <code>setTimeout</code> の呼び出しを <code>0</code> ミリ秒の遅延でネストし、ハンドラーが呼び出されるたびに遅延時間を記録しています。最初の 4 回は遅延が約 0 ミリ秒、その後は約 4 ミリ秒になります。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>run<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Run<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span>previous    this    actual delay<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> last <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> iterations <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// log the time of this call</span>\n  <span class=\"token function\">logline</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// if we are not finished, schedule the next call</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iterations<span class=\"token operator\">--</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// clear the log</span>\n  <span class=\"token keyword\">const</span> log <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span>lastElementChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span>lastElementChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// initialize iteration count and the starting timestamp</span>\n  iterations <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  last <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// start timer</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">pad</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">logline</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">now</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// log the last timestamp, the new timestamp, and the difference</span>\n  <span class=\"token keyword\">const</span> newLine <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pre\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  newLine<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">pad</span><span class=\"token punctuation\">(</span>last<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">         </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">pad</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">          </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>now <span class=\"token operator\">-</span> last<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>newLine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  last <span class=\"token operator\">=</span> now<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#run\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> run<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"入れ子のタイムアウト\" id=\"frame_nested_timeouts\" width=\"100\" height=\"420\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/setTimeout/_sample_.nested_timeouts.html\" loading=\"lazy\"></iframe>\n<h4 id=\"アクティブでないタブのタイムアウト\">アクティブでないタブのタイムアウト</h4>\n<p>バックグラウンドのタブによる負荷（および関連するバッテリーの使用量）を軽減するために、ブラウザはアクティブでないタブの最小タイムアウト時間を強制します。また、ページがウェブ音声 API の <a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a> を使用して音声を再生している場合、このタイムアウトが免除されることもあります。</p>\n<p>この仕様はブラウザーに依存します。</p>\n<ul>\n  <li>Firefox のデスクトップ版と Chrome では、アクティブでないタブの最小タイムアウトは 1 秒です。</li>\n  <li>Android 版 Firefox では、非アクティブなタブのタイムアウトは最低 15 分で、タブを完全にアンロードすることもできます。</li>\n  <li>Firefox は、タブに <a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a> が含まれている場合、アクティブでないタブをスロットルで処理しません。</li>\n</ul>\n<h4 id=\"トラッキングスクリプトのタイムアウトを制限する\">トラッキングスクリプトのタイムアウトを制限する</h4>\n<p>\n  Firefox は、トラッキングスクリプトとして認識されたスクリプトに対して追加のスロットルを適用します。\n  フォアグラウンドで実行されている場合、最小遅延は 4ms のままです。しかし、バックグラウンドのタブでは、最小遅延時間は 10,000ms （10 秒）で、文書が最初に読み込まれてから 30 秒後に有効になります。\n</p>\n<p>詳しくは、<a href=\"https://wiki.mozilla.org/Security/Tracking_protection\" class=\"external\" rel=\" noopener\">トラッキング保護</a>を参照してください。</p>\n<h4 id=\"タイムアウトの遅延\">タイムアウトの遅延</h4>\n<p>ページ（または OS やブラウザー）が他のタスクでビジー状態場合、タイムアウトが予想より遅れて発生することがあります。注意すべき重要なケースとして、 <code>setTimeout()</code> を呼び出したスレッドが終了するまで、関数やコードスニペットを実行することができないことがあります。例えば、</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo has been called'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After setTimeout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このコードは、コンソールへ以下のように出力します。</p>\n<pre class=\"notranslate\">After setTimeout\nfoo has been called\n</pre>\n<p>これは <code>setTimeout</code> を遅延 0 で呼び出したとしても、直ちに実行するのではなくキューに載せて、次の機会に実行するようスケジューリングされるためです。現在実行中のコードはキューにある関数を実行する前に完了しなければならず、このために実行結果の順序が想定どおりにならない場合があります。</p>\n<h4 id=\"ページロード中のタイムアウトの遅延\">ページロード中のタイムアウトの遅延</h4>\n<p>Firefox は現在のタブがロードされている間、 <code>setTimeout()</code> タイマーの発行を延期します。メインスレッドがアイドルと判断されるまで（<a href=\"/ja/docs/Web/API/Window/requestIdleCallback\">window.requestIdleCallback()</a> と同様）、または load イベントが発生するまで起動が延期されます。</p>"}},{"type":"prose","value":{"id":"webextension_のバックグラウンドページとタイマー","title":"WebExtension のバックグラウンドページとタイマー","isH3":true,"content":"<p><a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions\">WebExtension</a> では、 <code>setTimeout()</code> は信頼できる動作をしません。拡張機能の作者は、代わりに <a href=\"/ja/docs/Mozilla/Add-ons/WebExtensions/API/alarms\"><code>alarms</code></a> API を使用してください。</p>"}},{"type":"prose","value":{"id":"最大の遅延時間","title":"最大の遅延時間","isH3":true,"content":"<p>Internet Explorer、Chrome、Safari、Firefox を含むブラウザーは、内部で遅延時間を 32 ビット符号付き整数値で保存します。このため 2,147,483,647 ms (約 24.8 日) より大きな遅延時間を使用すると整数値がオーバーフローして、その結果直ちに実行されるタイムアウトになります。</p>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"タイムアウトの設定と取り消し","title":"タイムアウトの設定と取り消し","isH3":true,"content":"<p>以下の例はウェブページに 2 つのシンプルなボタンを置いており、<code>setTimeout()</code> および <code>clearTimeout()</code> のルーチンを実行します。1 番目のボタンを押下すると 2 秒後にアラートダイアログを呼び出すタイムアウトを設定して、<code>clearTimeout()</code> で使用するタイムアウト ID を保存します。2 番目のボタンを押下すると、このタイムアウトをキャンセルできます。</p>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">delayedMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>2 秒後にアラートボックスを表示<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">clearMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>アラート発生前に取り消し<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> timeoutID<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">outputContent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#output'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> outputContent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">delayedMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  timeoutID <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>setOutput<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'本当に遅い！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">clearMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeoutID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: css hidden notranslate\"><code><span class=\"token selector\">#output</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> .5rem 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"結果\">結果</h4><iframe class=\"sample-code-frame\" title=\"タイムアウトの設定と取り消し\" id=\"frame_setting_and_clearing_timeouts\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/Web/API/setTimeout/_sample_.setting_and_clearing_timeouts.html\" loading=\"lazy\"></iframe>\n<p><a href=\"/ja/docs/Web/API/clearTimeout#example\"><code>clearTimeout()</code> の例</a>も参照してください。</p>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout-dev","title":"HTML Standard"}],"query":"api.setTimeout"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"api.setTimeout","dataURL":"/ja/docs/Web/API/setTimeout/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#settimeout-and-setinterval\" class=\"external\" rel=\" noopener\"><code>core-js</code> にある <code>setTimeout</code> のポリフィルで、コールバックに引数を渡すことができるもの</a></li>\n  <li><a href=\"/ja/docs/Web/API/clearTimeout\"><code>clearTimeout</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/setInterval\"><code>setInterval()</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/Window/requestAnimationFrame\"><code>window.requestAnimationFrame</code></a></li>\n  <li><a href=\"/ja/docs/Web/API/queueMicrotask\"><code>queueMicrotask()</code></a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"返値","id":"返値"},{"text":"解説","id":"解説"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"グローバルの setTimeout() メソッドは、時間切れになると関数または指定されたコードの断片を実行するタイマーを設定します。","popularity":0.0046,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"setTimeout()","locale":"en-US","native":"English (US)"},{"title":"WindowOrWorkerGlobalScope.setTimeout","locale":"es","native":"Español"},{"title":"setTimeout()","locale":"fr","native":"Français"},{"title":"setTimeout()","locale":"ko","native":"한국어"},{"title":"WindowTimers.setTimeout()","locale":"ru","native":"Русский"},{"title":"window.setTimeout","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/web/api/settimeout","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/web/api/settimeout/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Web","title":"開発者向けのウェブ技術"},{"uri":"/ja/docs/Web/API","title":"Web API"},{"uri":"/ja/docs/Web/API/setTimeout","title":"setTimeout()"}],"pageTitle":"setTimeout() - Web API | MDN","noIndexing":false}}