{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"互換性一覧表とブラウザー互換性データリポジトリー (BCD)","mdn_url":"/ja/docs/MDN/Writing_guidelines/Page_structures/Compatibility_tables","locale":"ja","native":"日本語","sidebarHTML":"\n  <ol>\n    <li><a href=\"/ja/docs/MDN/About\">MDN について</a></li>\n    <li class=\"toggle\">\n        <details>\n            <summary>MDN の改善に貢献する</summary>\n            <ol>\n                <li><a href=\"/ja/docs/MDN/Contribute/Getting_started\">MDN を始めよう</a></li>\n                <li><a href=\"/ja/docs/MDN/Contribute\">MDN の改善に貢献する</a></li>\n                <li><a href=\"/ja/docs/MDN/Contribute/Howto\">あなたにできること</a></li>\n                <li><a href=\"/ja/docs/MDN/Contribute/Localize\">MDN でのローカライズ</a></li>\n                <li><a href=\"/ja/docs/MDN/Guidelines\">Guidelines</a></li>\n                <li><a href=\"/ja/docs/MDN/Structures\">文書の構造</a></li>\n             </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>MDN には、オープンウェブのドキュメントにおいて、互換性一覧表の標準形式があります。これは、すべてのブラウザーにわたって共有される DOM, HTML, CSS, JavaScript, SVG などの技術の文書で使用されます。この記事は、作成した互換性一覧表をデータベースにどのように追加して維持するか、また、一覧表を記事に統合する方法についての「始め方」のガイドです。</p>\n<p>より高度なドキュメントや、データを表現するために使用される手続きや JSON スキーマの最新の変更点については、データリポジトリーの<a href=\"https://github.com/mdn/browser-compat-data/blob/main/docs/contributing.md\" class=\"external\" rel=\" noopener\">協力者ガイド</a>や<a href=\"https://github.com/mdn/browser-compat-data/blob/main/docs/data-guidelines.md\" class=\"external\" rel=\" noopener\">データガイドラインのガイド</a>をご覧ください。</p>\n<p>質問や問題が見つかった場合は、<a href=\"/ja/docs/MDN/Community/Contributing/Getting_started#step_4_ask_for_help\">助けを求める</a>をご利用ください。</p>"}},{"type":"prose","value":{"id":"データリポジトリーにアクセスする方法","title":"データリポジトリーにアクセスする方法","isH3":false,"content":"<p>データは GitHub リポジトリーに保存されています。 <a href=\"https://github.com/mdn/browser-compat-data\" class=\"external\" rel=\" noopener\">https://github.com/mdn/browser-compat-data</a> を参照してください。アクセスするには GitHub アカウントを取得し、 browser-compat-data を自分のアカウントでフォーク (fork) し、フォークしたものをローカルマシンにクローン (clone) する必要があります。</p>"}},{"type":"prose","value":{"id":"データを追加する準備","title":"データを追加する準備","isH3":false,"content":"<p>新しいデータを追加する前に、フォークがメインリポジトリーの最新である（同じ内容を含む）ことを確認し、フォーク内に追加を格納するための新しいブランチ (branch) を作成し、そのブランチをローカルのクローンにプル (pull) すれば、その中で作業を始めることができます。</p>\n<p>フォークが最新であることを、次のように簡単な方法で確認してみましょう。</p>"}},{"type":"prose","value":{"id":"メインの_browser-compat-data_リポジトリーをリモートとして追加","title":"メインの browser-compat-data リポジトリーをリモートとして追加","isH3":true,"content":"<p>端末またはコマンドラインでフォークをローカルにクローンした場所へ行き、次のようにしてリモートにメイン (upstream) リポジトリーを指すよう追加します（これを行う必要があるのは一度だけです）。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> upstream https://github.com/mdn/browser-compat-data.git\n</code></pre></div>\n<p>これをやったかどうか自信がない場合は、次のようするとリポジトリーがどのリモートを指しているかを確認することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> remote -v\n</code></pre></div>"}},{"type":"prose","value":{"id":"リモートのコンテンツでフォークを更新","title":"リモートのコンテンツでフォークを更新","isH3":true,"content":"<p>では、フォークを更新したいときは、次のようにできます。</p>\n<ol>\n  <li>main ブランチにいることを確認します。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> checkout main\n</code></pre></div>\n  </li>\n  <li>以下のように更新されたリポジトリーのコンテンツをフェッチ (fetch) します。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> fetch upstream\n</code></pre></div>\n  </li>\n  <li>自分の main ブランチの内容を公式のリポジトリーのコンテンツでリベース (rebase) します。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> rebase upstream/main\n</code></pre></div>\n  </li>\n  <li>これらの更新を、次のようにしてリモートのフォークにプッシュして書き戻します。\n    <div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> push\n</code></pre></div>\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"作業用の新しいブランチの作成","title":"作業用の新しいブランチの作成","isH3":true,"content":"<p>次に、自分のリモートフォーク（<code>https://github.com/ユーザー名/browser-compat-data</code> となる）へ行き、以下の手順で新しいブランチを作成します。変更したい内容をここに追加していくことになります。</p>\n<ol>\n  <li>\"Branch: Main\" ボタンをクリックします。</li>\n  <li>新しいブランチの名前を \"Find or create a branch...\" と書かれたところに入力します。</li>\n  <li>\"Create branch <em>ブランチ名</em> from Main\" と書かれたボタンを押します。</li>\n</ol>\n<p>例えば、 WebVR API についてデータを追加したい場合 \"webvr\" という名前がブランチ名として考えられるでしょう。</p>"}},{"type":"prose","value":{"id":"新しいブランチへの切り替え","title":"新しいブランチへの切り替え","isH3":true,"content":"<p>ここから先は作業が端末またはコマンドラインに戻ります。ローカルにクローンしたものを更新して新しく作成したブランチを使えるようにするには、下のコマンドを使います。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> pull\n</code></pre></div>\n<p>そして以下のように新しく作成したブランチに切り替えます。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> checkout ブランチ名\n</code></pre></div>\n<p>これでデータを追加するための準備が完了しました。</p>"}},{"type":"prose","value":{"id":"データの追加","title":"データの追加","isH3":false,"content":"<p>データを追加するには、新たに互換性データを書いたファイルを作成する必要があります。作成する必要があるファイルは、どの技術分野について作業しようとするかによって異なります。</p>\n<ul>\n  <li><strong><a href=\"/ja/docs/Web/HTML\">HTML</a>:</strong> HTML の要素ごとに一つのファイルが <a href=\"https://github.com/mdn/browser-compat-data/tree/main/html/elements\" class=\"external\" rel=\" noopener\">browser-compat-data/html/elements</a> に格納されています。ファイル名は要素の名前をすべて小文字でつけてください。 例) <code>div.json</code></li>\n  <li><strong><a href=\"/ja/docs/Web/CSS\">CSS</a>:</strong> CSS のプロパティないしセレクターごとに一つのファイルが <a href=\"https://github.com/mdn/browser-compat-data/tree/main/css\" class=\"external\" rel=\" noopener\">browser-compat-data/css</a> 以下の適切なディレクトリに格納されています。ファイル名はその機能の名前をすべて小文字でつけてください。 例) <code>background-color.json</code>, <code>hover.json</code></li>\n  <li><strong><a href=\"/ja/docs/Web/JavaScript\">JS</a>:</strong> JavaScript オブジェクトごとに一つのファイルが <a href=\"https://github.com/mdn/browser-compat-data/tree/main/javascript/builtins\" class=\"external\" rel=\" noopener\">browser-compat-data/javascript/builtins</a> に格納されています。ファイル名は大文字小文字を含めて完全にオブジェクト名と一致させてください。 例) <code>Date.json</code>, <code>InternalError.json</code></li>\n  <li><strong><a href=\"/ja/docs/Web/API\">APIs</a>:</strong> API のインターフェイスごとに一つのファイルが <a href=\"https://github.com/mdn/browser-compat-data/tree/main/api\" class=\"external\" rel=\" noopener\">browser-compat-data/api</a> に格納されています。ファイル名は大文字小文字を含めて完全にインターフェイス名と一致させてください。 例) WebVR API には <code>VRDisplay.json</code> や <code>VRDisplayCapabilities.json</code> などがあります。</li>\n</ul>\n<p>作成するファイルは、このリポジトリーに含まれているスキーマで定義されている構造に従う必要があります。<a href=\"https://github.com/mdn/browser-compat-data/blob/main/schemas/compat-data-schema.md\" class=\"external\" rel=\" noopener\">詳細なスキーマの説明はこちら</a>で見ることができます。</p>"}},{"type":"prose","value":{"id":"基本的な互換性データの構造","title":"基本的な互換性データの構造","isH3":true,"content":"<p>では例を見ていきましょう。例として CSS プロパティの JSON ファイルに求められる基本構造を次に示します。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"css\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"border-width\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"__compat\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          ...\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>まず <code>css</code> オブジェクトがあります。その中に <code>properties</code> オブジェクトがあります。 <code>properties</code> オブジェクトの中には、互換性データとして定義したい特定の機能につき一つのメンバーが必要です。それぞれのメンバーは <code>__compat</code> をメンバーに持ち、この中に実際のデータを記述します。</p>\n<p>上記のデータは <a href=\"https://github.com/mdn/browser-compat-data/blob/main/css/properties/border-width.json\" class=\"external\" rel=\" noopener\">border-width.json</a> にあります。 <a href=\"/ja/docs/Web/CSS/border-width#%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%83%BC%E3%81%AE%E4%BA%92%E6%8F%9B%E6%80%A7\">MDN で表示された border-width の表</a>と見比べてみてください。</p>\n<p>他の種類の機能についても同様ですが、オブジェクトの名前が異なります。</p>\n<ul>\n  <li>CSS セレクターは CSS プロパティと基本的に同様ですが、最上位のオブジェクト構造が <code>css.properties</code> ではなく <code>css.selectors</code> になります。例として <a href=\"https://github.com/mdn/browser-compat-data/blob/main/css/selectors/cue.json\" class=\"external\" rel=\" noopener\">cue.json</a> を見てください。</li>\n  <li>HTML についても基本的に同様ですが、最上位のオブジェクト構造が <code>html.elements</code> です。例として <a href=\"https://github.com/mdn/browser-compat-data/blob/main/html/elements/article.json\" class=\"external\" rel=\" noopener\">article.json</a> を見てください。</li>\n  <li>JavaScript の組込みオブジェクトについての最上位のオブジェクト構造は <code>javascript.builtins</code> です。例として <a href=\"https://github.com/mdn/browser-compat-data/blob/main/javascript/builtins/Array.json\" class=\"external\" rel=\" noopener\">Array.json</a> を見てください。</li>\n</ul>\n<p>HTML や CSS、 JavaScript のページにおいては、普通一つだけの機能について記述するでしょう。しかし API インターフェイスについては少し事情が異なります。なぜなら常に複数のサブ機能を持つからです（下の<a href=\"#%E3%82%B5%E3%83%96%E6%A9%9F%E8%83%BD\">サブ機能</a>を参照してください）。</p>"}},{"type":"prose","value":{"id":"機能内の基本構造","title":"機能内の基本構造","isH3":true,"content":"<p>機能の <code>__compat</code> メンバーの中には、以下のメンバーを記述する必要があります。</p>\n<ul>\n  <li><code>mdn_url</code>: MDN 上のこの機能の参照ページの URL を指定します。これは、ロケールのディレクトリを含めずに記述する必要があることに注意してください。例えば、 <code>/docs/...</code> であり、 <code>/ja/docs/...</code> ではありません。これは、ローカライズのために、データがページに置かれるときにマクロで追加されます。</li>\n  <li><code>support</code>: 報告したいすべての各ブラウザーにおける、この機能のブラウザーの対応情報を表すメンバーが含まれています。</li>\n  <li><code>status</code>: この機能の標準化過程の状態を報告するメンバーが含まれています。</li>\n</ul>\n<p>ブラウザーメンバーの名前はスキーマで定義されています (<a href=\"https://github.com/mdn/browser-compat-data/blob/main/schemas/compat-data-schema.md#browser-identifiers\" class=\"external\" rel=\" noopener\">Browser identifiers</a> を参照してください)。現在定義されている識別子の完全な一覧のもの使用してください。他のブラウザーを追加したい場合は、広範な影響があり、慎重に考えずに行うべきではありませんので、まず私たちに相談してください。</p>\n<p>基本的なブラウザーの compat データファイルでは、ブラウザー識別子のメンバーの中に \"version_added\" を含めるだけでよいでしょう（後ほど<a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E8%BF%BD%E5%8A%A0_%E9%AB%98%E5%BA%A6%E3%81%AA%E5%A0%B4%E5%90%88\">データの追加: 高度な場合</a>で説明します）。記述することができる値は以下の通りです。</p>\n<ul>\n  <li>版番号: ブラウザーがその機能に対応し始めた正確な版が分かる場合は、その番号を表す文字列を使用してください。例) <code>\"47\"</code></li>\n  <li><code>true</code>: ブラウザーがその機能に対応しているが、正確な版番号がわからない場合は、 <code>true</code> の値を使用してください。</li>\n  <li><code>false</code>: ブラウザーがその機能に対応していない場合は、 <code>false</code> の値を使用してください。</li>\n  <li><code>null</code>: ブラウザーがその機能に対応しているかどうかわからない場合は、 <code>null</code> の値を使用してください。</li>\n</ul>\n<p><code>status</code> メンバーの内容には、以下の 3 つのサブメンバーの記述してください。</p>\n<ul>\n  <li><code>experimental</code>: この機能が<a href=\"/ja/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#%e5%ae%9f%e9%a8%93%e7%9a%84\">実験的</a>であれば <code>true</code> を設定し、そうでない場合は <code>false</code> を設定してください。</li>\n  <li><code>standard_track</code>: この機能が何らかの標準化過程（最も有名なものは W3C/WHATWG ですが、他にも Khronos, TC39, など）にある場合は <code>true</code> を設定し、そうでない場合は <code>false</code> を設定してください。</li>\n  <li><code>deprecated</code>: この機能が<a href=\"/ja/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#%e9%9d%9e%e6%8e%a8%e5%a5%a8%e3%81%a8%e5%bb%83%e6%ad%a2\">非推奨</a>であれば <code>true</code> に設定し、そうでない場合は <code>false</code> を設定してください。</li>\n</ul>\n<p><a href=\"/ja/docs/Web/CSS/border-width#browser_compatibility\">border-width</a> の機能データ (<a href=\"https://github.com/mdn/browser-compat-data/blob/main/css/properties/border-width.json\" class=\"external\" rel=\" noopener\">border-width.json</a> も参照) を一例として以下に示します。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"__compat\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"mdn_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://developer.mozilla.org/docs/Web/CSS/border-width\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"spec_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://drafts.csswg.org/css-backgrounds/#the-border-width\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"support\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"chrome\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"webview_android\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"edge\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"edge_mobile\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"firefox\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"firefox_android\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"ie\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"ie_mobile\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"6\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"opera\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3.5\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"opera_android\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"11\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"safari\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"safari_ios\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"experimental\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"standard_track\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"deprecated\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"説明の追加\">説明の追加</h4>\n<p><code>__compat</code> メンバーには、 4 つ目のオプションのメンバーである <code>description</code> があります。これを使用することで、その機能に関する人間にとって読みやすい説明を含めることができます。これを含めるべきなのは、データを少し見ただけではその機能が何であるかがわかりにくい場合だけです。例えば、データ構造を見ただけではコンストラクターが何であるかわからないかもしれないので、次のような記述を含めることができます。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"api\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"AbortController\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"__compat\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        ...\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"AbortController\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"__compat\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"mdn_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://developer.mozilla.org/docs/Web/API/AbortController/AbortController\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;code&gt;AbortController()&lt;/code&gt; constructor\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"support\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            ...\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      ... etc.\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"サブ機能","title":"サブ機能","isH3":true,"content":"<p>互換性一覧表が複数の行を持つページでは、各行の情報を定義するために、各機能の中に複数の副機能が必要になります。これは、例えば、ある機能の基本的な対応が一つの行に格納されていても、そのしばらく後に、その機能が新しいプロパティや値の型を持つようになった場合などに起こります。</p>\n<p>例として、 <code>background-color</code> プロパティの<a href=\"https://github.com/mdn/browser-compat-data/blob/main/css/properties/background-color.json\" class=\"external\" rel=\" noopener\">互換性データ</a> と<a href=\"/ja/docs/Web/CSS/background-color\">対応する MDN ページ</a>を参照してください。基本的な対応は上で説明したように <code>__compat</code> オブジェクトの中に存在しており、ブラウザーの \"16 進数値のアルファチャンネル \"の対応するに関する追加の行は、それ自身の<code>__compat</code> オブジェクトを含んでいます。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"css\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"background-color\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"__compat\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          ...\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"alpha_ch_for_hex\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"__compat\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            ...\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>API の場合、上位 2 つのレベルを <code>api.インターフェイス名</code> として定義し、次に上位の <code>__compat</code> セクションでインターフェイスの全体的なブラウザー互換性を定義し、インターフェイス内に含まれるメソッド、プロパティ、およびコンストラクターのそれぞれのサブ機能を定義します。基本的な構造は以下のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"api\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"VRDisplay\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"__compat\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        ...\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"cancelAnimationFrame\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"__compat\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          ...\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"capabilities\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"__compat\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          ...\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      ... etc.\n\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>完全な例は、 <a href=\"https://github.com/mdn/browser-compat-data/blob/main/api/VRDisplay.json\" class=\"external\" rel=\" noopener\">VRDisplay.json</a> を参照してください。</p>"}},{"type":"prose","value":{"id":"データの追加_高度な場合","title":"データの追加: 高度な場合","isH3":false,"content":"<p>ブラウザーの互換性データには、いくつかの高度な機能があります。このセクションの目的は、最も一般的なものをリストアップし、それぞれの例を提供して、互換性データにそれらを実装する方法を示すことです。</p>"}},{"type":"prose","value":{"id":"脚注を含める","title":"脚注を含める","isH3":true,"content":"<p>しばしば互換性一覧表には、有益な詳細や、開発者にとって有用な奇妙な動作を説明する、特定の項目に関連した脚注が含まれています。例として、<a href=\"/ja/docs/Web/API/VRDisplay/capabilities\"><code>VRDisplay.capabilities</code></a> (<a href=\"https://github.com/mdn/browser-compat-data/blob/main/api/VRDisplay.json\" class=\"external\" rel=\" noopener\">VRDisplay.json</a>も参照) の Chrome Android の項目には、（執筆時点では）「現在は Google Daydream のみで対応されています」という脚注がありました。これを互換性データに含めるために、 \"notes\" サブメンバーを関連する \"chrome_android\" サブメンバーの中に追加しました。これはこのようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"chrome_android\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"notes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Currently supported only by Google Daydream.\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ベンダー接頭辞を含める","title":"ベンダー接頭辞を含める","isH3":true,"content":"<p>ある機能が、あるブラウザーでベンダー接頭辞付きで対応されている場合、ブラウザーの互換性データでそのことを明確にしたいと思うでしょう。 Firefox において、 <code>-moz-</code> 接頭辞により対応されている機能を想像してください。互換性データでこれを指定するには、該当する \"firefox\" サブメンバーの中に \"prefix\" サブメンバーを追加する必要があります。これは次のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"firefox\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"prefix\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-moz-\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"ブラウザーの設定やフラグを含める","title":"ブラウザーの設定やフラグを含める","isH3":true,"content":"<p>機能によっては、ブラウザーが対応しているものの、実験的なものであり既定ではオフになっている場合があります。ユーザーがこの機能を使いたい場合は、環境設定/フラグを使ってオンにする必要があります。</p>\n<p>互換性データでこれを表現するには、関連するブラウザー識別子サブメンバーの中に \"flags\" サブメンバーを追加する必要があります。 \"flags\" の値は、 3 つのメンバーを含むオブジェクトの配列です。</p>\n<ul>\n  <li><code>type</code>: フラグや環境設定の種類。最も一般的な値は \"preference\" で、これはブラウザー内部で設定されます（例えば、 Firefox では about:config、 Chrome では chrome://flags を使用します）が、時には \"compile_flag\"という、ブラウザーのビルドがコンパイルされるときに設定される値を使用することもあります。</li>\n  <li><code>name</code>: これは、値を設定する必要がある設定の名前を表す文字列です。例えば、\"Enable Experimental Web Platform Features\" は Chrome に存在する環境設定で、 Chrome では <code>chrome://flags</code> にあります。</li>\n  <li><code>value_to_set</code>: 設定する値を表す文字列で、例えば \"true\" などです。</li>\n</ul>\n<p>つまり、ある機能の Chrome の対応に環境設定/フラグを追加するには、次のようにします。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"chrome\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"50\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"flags\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preference\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Enable Experimental Web Platform Features\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"value_to_set\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>もしその機能が 2 つ以上のフラグの元にある場合、この例のように \"flags\" 配列にオブジェクトを追加することができます。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"firefox\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"57\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"flags\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preference\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dom.streams.enabled\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"value_to_set\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preference\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"javascript.options.streams\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"value_to_set\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"対応が削除された版を含める","title":"対応が削除された版を含める","isH3":true,"content":"<p>あるブラウザーのある版で機能が追加され、その後その機能が非推奨になったために再び削除されることがあります。これは、 \"version_removed\" サブメンバーを使って簡単に表現できます。このサブメンバーは、削除されたバージョン番号を表す文字列を値として受け取ります。例えば、以下のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"firefox\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"35\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version_removed\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"47\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"同じブラウザーの項目に複数の対応ポイントを含む","title":"同じブラウザーの項目に複数の対応ポイントを含む","isH3":true,"content":"<p>同じブラウザーの複数の対応データポイントを、同じ機能の中に追加したい場合もあるでしょう。</p>\n<p>例えば、 <a href=\"/ja/docs/Web/CSS/text-align-last\"><code>text-align-last</code></a> プロパティ（<a href=\"https://github.com/mdn/browser-compat-data/blob/main/css/properties/text-align-last.json\" class=\"external\" rel=\" noopener\">text-align-last.json</a>も参照）は、 Chrome にバージョン 35 で追加され、接頭辞付きで対応されました。</p>\n<p>上記の対応はバージョン 47 で削除されましたが、バージョン 47 では既定で <code>text-align-last</code> が有効になるような対応も追加されました。</p>\n<p>これらのデータポイントの両方を含めるために、 \"chrome\" サブメンバーの値を、単一の対応情報オブジェクトではなく、 2 つの対応情報オブジェクトを含む配列にすることができます。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"chrome\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"47\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"35\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"version_removed\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"47\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"flags\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preference\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Enable Experimental Web Platform Features\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"value_to_set\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> ​​​​配列の中には、最新または重要な対応ポイントを最初に配置するべきです。こうすることで、単に最新の情報を取得したい人にとって読みやすいデータとなります。</p>\n</div>"}},{"type":"prose","value":{"id":"別名を含める","title":"別名を含める","isH3":true,"content":"<p>時々、ブラウザーが仕様とは異なる名前で機能を対応することがあります。これは例えば、あるブラウザーがある機能の実験的な対応を早くから追加していて、仕様が安定する前に名前が変わってしまったというような場合が考えられます。</p>\n<p>このようなケースをブラウザーの互換性データに含めるには、 \"alternative_name\" メンバーの中に代替名を指定する対応情報ポイントを含めます。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 代替名は正確なエイリアスではないかもしれません。標準版とは異なる動作をするかもしれません。</p>\n</div>\n<p>では例を見てみましょう。 <a href=\"/ja/docs/Web/CSS/border-top-right-radius\"><code>border-top-right-radius</code></a> プロパティ（<a href=\"https://github.com/mdn/browser-compat-data/blob/2a0cc3f6bb17aa4345441bed47a059dffd847793/css/properties/border-top-right-radius.json\" class=\"external\" rel=\" noopener\">border-top-right-radius.json</a>も参照）の Firefox での対応は以下の通りです。</p>\n<ul>\n  <li>バージョン 4 以降では <code>border-top-right-radius</code> という標準的な名前で対応されています。</li>\n  <li>バージョン 49 以降では、ブラウザーの互換性を考慮し、 <code>-webkit-</code> 接頭辞と共に使用されます。</li>\n  <li>バージョン 1 以降では <code>-moz-border-radius-topright</code> という代替名を使用しています。このエイリアスの対応はバージョン 12 で削除されました。</li>\n</ul>\n<p>これをデータで表現するために、以下の JSON を使用しました。</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token property\">\"firefox\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"notes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Prior to Firefox 50.0, border styles of rounded corners were always rendered as if &lt;code&gt;border-style&lt;/code&gt; was solid. This has been fixed in Firefox 50.0.\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"prefix\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-webkit-\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"49\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"notes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"From Firefox 44 to 48, the &lt;code&gt;-webkit-&lt;/code&gt; prefix was available with the &lt;code&gt;layout.css.prefixes.webkit&lt;/code&gt; preference. Starting with Firefox 49, the preference defaults to &lt;code&gt;true&lt;/code&gt;.\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"alternative_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-moz-border-radius-topright\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"version_added\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"version_removed\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"12\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"変更のメインリポジトリーへの反映","title":"変更のメインリポジトリーへの反映","isH3":false,"content":"<p>互換性データの追加が終わったら、まず以下のコマンドを使ってテストしてみてください。</p>\n<ul>\n  <li><code>npm run lint</code> — すべての互換性データをテストして、 JSON が有効であること、正しいスタイルで書かれていること、例えば正しいインデント、カンマの欠落がないことなどを確認します。ファイル名とテスト結果の長いリストが表示されます。エラーが見つかった場合、リンターは見つかったファイルに対してエラーをスローし、行番号やエラーメッセージなどのデバッグに役立つ情報を表示します。</li>\n  <li><code>npm run show-errors</code> — JSON をデータスキーマと照らし合わせて検証し、無効なブラウザーのバージョン番号が使用されているなどのエラーをハイライトします。</li>\n</ul>\n<p>問題がなさそうであれば、コミットして、 GitHub 上のあなたのリモートフォークにプッシュする必要があります。これは、以下のようなターミナルコマンドで簡単に行うことができます。</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">'adding compat data for name-of-feature'</span>\n<span class=\"token function\">git</span> push\n</code></pre></div>\n<p>リモートフォーク（すなわち <code>https://github.com/ユーザー名/browser-compat-data</code>）に行くと、ファイル一覧の一番上 （\"Your recently pushed branches\" の下）にプッシュに関する情報が表示されているはずです。プルリクエスト（リモートフォークをメインリポジトリーに取り込むための、最初の過程のことです）を作成するには、\"Compare &amp; pull request\" ボタンを押して、続く画面の簡単なプロンプトに従ってください。</p>\n<p>これが終われば、ただ待つのみです。レビュアーがあなたのプルリクエストをレビューし、メインリポジトリーにマージします。そうでない場合は、変更を依頼します。変更が必要な場合は、変更を加えて、プルリクエストが受理されるまで再度投稿してください。</p>"}},{"type":"prose","value":{"id":"mdn_ページへのデータの挿入","title":"MDN ページへのデータの挿入","isH3":false,"content":"<p>新しい互換性データがメインの <a href=\"https://github.com/mdn/browser-compat-data\" class=\"external\" rel=\" noopener\">browser-compat-data</a> リポジトリーに含まれると、そのデータを基にしたブラウザー互換性一覧表や仕様書一覧表を MDN ページに動的に生成することができるようになります。</p>\n<p>まず、取り込みたい互換性データのクエリー文字列を見つける必要があります。これは、そのソースファイルを検査することによって決定することができます。例えば、</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/AbortController\"><code>AbortController</code></a> の互換性データは <a href=\"https://github.com/mdn/browser-compat-data/blob/main/api/AbortController.json\" class=\"external\" rel=\" noopener\">AbortController.json</a> で定義されており、 <code>api.AbortController</code> を使用して問い合わせすることができます。</li>\n  <li><a href=\"/ja/docs/Web/HTTP/Headers/Content-Type\"><code>Content-Type</code></a> HTTP ヘッダーの互換性データは <a href=\"https://github.com/mdn/browser-compat-data/blob/main/http/headers/content-type.json\" class=\"external\" rel=\" noopener\">content-type.json</a> で定義されており、 <code>http.headers.Content-Type</code> を使用して問い合わせすることができます。</li>\n  <li><a href=\"/ja/docs/Web/API/VRDisplay/capabilities\"><code>VRDisplay.capabilities</code></a> プロパティの互換性データは <a href=\"https://github.com/mdn/browser-compat-data/blob/main/api/VRDisplay.json\" class=\"external\" rel=\" noopener\">VRDisplay.json</a> で定義されており、 <code>api.VRDisplay.capabilities</code> で問い合わせすることができます。</li>\n</ul>\n<p>\n  互換性データのクエリーは、ページの先頭部分で <code>browser-compat</code> キーを使用して指定する必要があります。\n  例えば、 <a href=\"/ja/docs/Web/API/AbortController\"><code>AbortController</code></a> の場合、以下のように追加します。\n</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">---\ntitle: AbortController\nslug: Web/API/AbortController\n\n...\n\nbrowser-compat: api.AbortController\n---\n\n</pre></div>\n<p>そして、そのキーに対応する互換性一覧表と仕様書一覧表が、ソース中の <code>{{Compat}}</code> と <code>{{Specifications}}</code> マクロの代わりに自動的にレンダリングされます。</p>\n<p>また、以下のようにマクロの第一引数として目的の API を指定することもできます。 <code>{{Compat(\"api.AbortController\")}}</code> のように、マクロの第一引数に目的の API を指定することもできます。これは、同じページで複数の互換性一覧表が必要な場合に便利です。</p>\n<p>マクロの呼び出しにより、以下の表（とそれに対応する一連の注釈）が生成されます。</p>\n<h4 id=\"互換性一覧表の例\">互換性一覧表の例</h4>"}},{"type":"browser_compatibility","value":{"title":null,"id":null,"isH3":false,"query":"api.AbortController","dataURL":"/ja/docs/MDN/Writing_guidelines/Page_structures/Compatibility_tables/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<h4 id=\"仕様書一覧表の例\">仕様書一覧表の例</h4>"}},{"type":"specifications","value":{"title":null,"id":null,"isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#interface-abortcontroller","title":"DOM Standard"}],"query":"api.AbortController"}}],"toc":[{"text":"データリポジトリーにアクセスする方法","id":"データリポジトリーにアクセスする方法"},{"text":"データを追加する準備","id":"データを追加する準備"},{"text":"データの追加","id":"データの追加"},{"text":"データの追加: 高度な場合","id":"データの追加_高度な場合"},{"text":"変更のメインリポジトリーへの反映","id":"変更のメインリポジトリーへの反映"},{"text":"MDN ページへのデータの挿入","id":"mdn_ページへのデータの挿入"}],"summary":"MDN には、オープンウェブのドキュメントにおいて、互換性一覧表の標準形式があります。これは、すべてのブラウザーにわたって共有される DOM, HTML, CSS, JavaScript, SVG などの技術の文書で使用されます。この記事は、作成した互換性一覧表をデータベースにどのように追加して維持するか、また、一覧表を記事に統合する方法についての「始め方」のガイドです。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Compatibility tables and the browser compatibility data repository (BCD)","locale":"en-US","native":"English (US)"},{"title":"兼容性表格和浏览器兼容性数据仓库（BCD）","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/mdn/writing_guidelines/page_structures/compatibility_tables","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/mdn/writing_guidelines/page_structures/compatibility_tables/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/MDN","title":"MDN Web Docs プロジェクト"},{"uri":"/ja/docs/MDN/Writing_guidelines","title":"執筆ガイドライン"},{"uri":"/ja/docs/MDN/Writing_guidelines/Page_structures","title":"文書の構造"},{"uri":"/ja/docs/MDN/Writing_guidelines/Page_structures/Compatibility_tables","title":"互換性一覧表とブラウザー互換性データリポジトリー (BCD)"}],"pageTitle":"互換性一覧表とブラウザー互換性データリポジトリー (BCD) - MDN Web Docs プロジェクト | MDN","noIndexing":false}}