{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"API リファレンスの書き方","mdn_url":"/ja/docs/MDN/Writing_guidelines/Howto/Write_an_API_reference","locale":"ja","native":"日本語","sidebarHTML":"\n  <ol>\n    <li><a href=\"/ja/docs/MDN/About\">MDN について</a></li>\n    <li class=\"toggle\">\n        <details>\n            <summary>MDN の改善に貢献する</summary>\n            <ol>\n                <li><a href=\"/ja/docs/MDN/Contribute/Getting_started\">MDN を始めよう</a></li>\n                <li><a href=\"/ja/docs/MDN/Contribute\">MDN の改善に貢献する</a></li>\n                <li><a href=\"/ja/docs/MDN/Contribute/Howto\">あなたにできること</a></li>\n                <li><a href=\"/ja/docs/MDN/Contribute/Localize\">MDN でのローカライズ</a></li>\n                <li><a href=\"/ja/docs/MDN/Guidelines\">Guidelines</a></li>\n                <li><a href=\"/ja/docs/MDN/Structures\">文書の構造</a></li>\n             </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>このガイドでは、 MDN で API リファレンスを書くために必要なすべてのことを説明します。</p>"}},{"type":"prose","value":{"id":"準備","title":"準備","isH3":false,"content":"<p>API の記事を書き始める前に、実際に書き始める前に準備・計画しておくべきことがいくつかあります。</p>"}},{"type":"prose","value":{"id":"前提知識","title":"前提知識","isH3":true,"content":"<p>このガイドを読む前に、相応の知識を持っていることを前提としています。</p>\n<ul>\n  <li>HTML、CSS、JavaScript などのウェブ技術。特に JavaScript は重要です。</li>\n  <li>ウェブ技術の仕様書の読み方。 API を文書化する際に、これらの仕様書をよく見ることになるでしょう。</li>\n</ul>\n<p>それ以外のことは、その過程で学ぶことができます。</p>"}},{"type":"prose","value":{"id":"前提条件となるリソース","title":"前提条件となるリソース","isH3":true,"content":"<p>API の文書化を始める前に、利用可能なものを用意しておく必要があります。</p>\n<ol>\n  <li>\n    最新の仕様書:\n    W3C 勧告であれ、初期の編集者草案であれ、その機能をカバーする（またはカバーすることを指定する）仕様書の利用可能な最新の草案を参照する必要があります。それを見つけるには、通常、ウェブ検索を行います。最新版は、多くの場合、その仕様書のすべての版からリンクされており、 \"latest draft\" などとリストアップされているはずです。\n  </li>\n  <li>\n    最新のウェブブラウザー:\n    これらは、 <a href=\"https://www.mozilla.org/en-US/firefox/channel/desktop/\" class=\"external\" rel=\" noopener\">Firefox Nightly</a>/<a href=\"https://www.google.com/intl/en/chrome/canary/\" class=\"external\" rel=\" noopener\">Chrome Canary</a> などの実験的/アルファビルドであるべきで、文書化しようとしている機能に対応している可能性がより高いものです。\n    これは、特に新しい/実験的な機能を文書化する場合に適切です。\n  </li>\n  <li>デモ/ブログ記事/その他の情報: できるだけ多くの情報を見つけてください。</li>\n  <li>\n    有用な技術連絡先:\n    仕様について質問できる親切な技術者、 API の標準化やブラウザーへの実装に携わっている人を見つけると本当に有益です。\n    そのような人を探すのに良い場所には下記のものがあります。\n    <ul>\n      <li>あなたが関連企業に勤めている場合、社内アドレス帳。</li>\n      <li>その API の議論に関与している公開メーリングリスト。例えば Mozilla の <a href=\"https://groups.google.com/a/mozilla.org/g/dev-platform/\" class=\"external\" rel=\" noopener\">dev-platform</a> リストや W3C の <a href=\"https://lists.w3.org/Archives/Public/public-webapps/\" class=\"external\" rel=\" noopener\">public-webapps</a> リストなど。</li>\n      <li>仕様書そのもの。例えば、 <a href=\"https://webaudio.github.io/web-audio-api/\" class=\"external\" rel=\" noopener\">Web Audio API 仕様書</a>には、冒頭に作者とその連絡先が記載されています。</li>\n    </ul>\n  </li>\n</ol>"}},{"type":"prose","value":{"id":"時間をかけて_api_を使ってみる","title":"時間をかけて API を使ってみる","isH3":true,"content":"<p>API を文書化する過程で、何度もデモを作ることになるでしょう。しかし、 API がどのように動作するかに慣れることから始めるのが有効です。主なインターフェイス、プロパティ、メソッドは何か、主な用途は何か、そしてそれを使って簡単な機能を書く方法を学びましょう。</p>\n<p>API が変更された場合、参考にしたり学んだりする既存のデモが古くなっていないか注意する必要があります。デモで使われている主な構成要素が、最新の仕様と一致しているかどうかを確認してください。また、最新のブラウザーでは動作しないかもしれませんが、後方互換性のために古い機能に対応し続けていることが多いので、これはあまり信頼できるテストではありません。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> 最近仕様が更新され。例えばあるメソッドの定義が変わったが、古いメソッドがまだブラウザーで動作する場合、古いメソッドと新しいメソッドをカバーするために、同じ場所で両方の記事を作成しなければならないことがよくあります。\n    困ったときは、見つけたデモを参考にしたり、担当のエンジニアに聞いたりしてください。\n  </p>\n</div>"}},{"type":"prose","value":{"id":"執筆や更新が必要な記事のリストを作成する","title":"執筆や更新が必要な記事のリストを作成する","isH3":true,"content":"<p>\n  API リファレンスには、一般的に次のようなページが含まれます。\n  各ページの内容。例、テンプレートの詳細は、<a href=\"/ja/docs/MDN/Writing_guidelines/Page_structures/Page_types\">ページの種類</a>の記事で確認することができます。\n  作業を始める前に、作成すべきすべてのページのリストを書き出してください。\n</p>\n<ol>\n  <li>概要ページ</li>\n  <li>インターフェイスページ</li>\n  <li>コンストラクターページ</li>\n  <li>メソッドページ</li>\n  <li>プロパティページ</li>\n  <li>イベントページ</li>\n  <li>概念/ガイドページ</li>\n  <li>例</li>\n</ol>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> この記事では。例として<a href=\"/ja/docs/Web/API/Web_Audio_API\">ウェブ音声 API</a>を参照します。</p>\n</div>\n<h4 id=\"概要ページ\">概要ページ</h4>\n<p>\n  API の概要ページは、 API の役割、最上位のインターフェイス、他のインターフェイスに含まれる関連機能、その他の高水準な詳細を説明するために使われます。\n  名前とスラッグは API の名前と最後に \"API\" を付けたものとしてください。 API リファレンスの最上位に置かれ、<a href=\"/en-US/docs/Web/API\">https://developer.mozilla.org/ja/docs/Web/API</a>の子として扱われます。\n</p>\n<p>例:</p>\n<ul>\n  <li>Title: <em>ウェブ音声 API</em></li>\n  <li>Slug: <em>Web_Audio_API</em></li>\n  <li>URL: <a href=\"/ja/docs/Web/API/Web_Audio_API\">https://developer.mozilla.org/ja/docs/Web/API/Web_Audio_API</a></li>\n</ul>\n<h4 id=\"インターフェイスページ\">インターフェイスページ</h4>\n<p>\n  各インターフェイスは、インターフェイスの目的を説明し、メンバー（コンストラクター、メソッド、プロパティなど）をリストアップし、どのブラウザーと互換性があるかを示す、独自のページがあります。\n  ページの名前とスラッグは、仕様書に書かれているとおりのインターフェイスの名前でなければなりません。\n  各ページは、 API リファレンスの最上位に、 <a href=\"/ja/docs/Web/API\">https://developer.mozilla.org/ja/docs/Web/API</a> の子として配置されます。\n</p>\n<p>例:</p>\n<ul>\n  <li>Title: <em>AudioContext</em></li>\n  <li>Slug: <em>AudioContext</em></li>\n  <li>URL: <a href=\"/ja/docs/Web/API/AudioContext\">https://developer.mozilla.org/ja/docs/Web/API/AudioContext</a></li>\n</ul><!---->\n<ul>\n  <li>Title: <em>AudioNode</em></li>\n  <li>Slug: <em>AudioNode</em></li>\n  <li>URL: <a href=\"/ja/docs/Web/API/AudioNode\">https://developer.mozilla.org/ja/docs/Web/API/AudioNode</a></li>\n</ul>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> インターフェイスに登場するメンバーはすべて文書化します。以下のルールに留意してください。</p>\n</div>\n<ul>\n  <li>このインターフェイスを実装したオブジェクトのプロトタイプ上で定義されているメソッド（インスタンスメソッド）と、実際のクラス自身で定義されるメソッド（静的メソッド）を文書化します。</li>\n</ul>\n<p>\n  まれに同じインターフェイスに両方が存在する場合は、ページ内で別々の節に（静的メソッド／インスタンスメソッドとして）記載します。\n  通常はインスタンスメソッドしか存在しないので、その場合は「メソッド」というタイトルで記載します。\n</p>\n<ul>\n  <li>継承されたプロパティやメソッドは、それぞれの親インターフェイスに掲載されているので文書化しません。しかし、その存在を示唆することはあります。</li>\n  <li>ミックスインで定義されたプロパティやメソッドの記事を作成します。詳しくは<a href=\"/ja/docs/MDN/Writing_guidelines/Howto/Write_an_API_reference/Information_contained_in_a_WebIDL_file#mixin\">ミックスインの協力ガイド</a>を参照してください。</li>\n  <li>文字列化 (<code>toString()</code>) や JSON 化 (<code>toJSON()</code>) のような特殊なメソッドも、存在する場合は掲載します。</li>\n  <li>名前の付いたコンストラクター（<a href=\"/ja/docs/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> における <code>Image()</code> など）も、関連があれば掲載します。</li>\n</ul>\n<h4 id=\"コンストラクターページ\">コンストラクターページ</h4>\n<p>各インターフェイスには 0 個または 1 個のコンストラクターがあり、インターフェイスのページのサブページで文書化されています。コンストラクターの目的を説明し、その構文がどのようなものか、使用例、ブラウザーの互換性情報などを表示します。スラッグはコンストラクターの名前で、インターフェイス名と全く同じです。タイトルはインターフェイス名、ドット、コンストラクター名、そして最後に括弧を置きます。</p>\n<p>例:</p>\n<ul>\n  <li>Title: <em>AudioContext.AudioContext()</em></li>\n  <li>Slug: <em>AudioContext</em></li>\n  <li>URL: <a href=\"/ja/docs/Web/API/AudioContext/AudioContext\">https://developer.mozilla.org/ja/docs/Web/API/AudioContext/AudioContext</a></li>\n</ul>\n<h4 id=\"プロパティページ\">プロパティページ</h4>\n<p>各インターフェイスには 0 個以上のプロパティがあり、インターフェイスのページのサブページで説明されています。各ページでは、そのプロパティの目的、構文の様子、使用例、ブラウザーの互換性情報などが説明されています。スラッグはプロパティの名前であり、タイトルはインターフェイス名、ドット、プロパティ名の順になります。</p>\n<p>例:</p>\n<ul>\n  <li>Title: <em>AudioContext.state</em></li>\n  <li>Slug: <em>state</em></li>\n  <li>URL: <a href=\"/ja/docs/Web/API/BaseAudioContext/state\">https://developer.mozilla.org/ja/docs/Web/API/AudioContext/state</a></li>\n</ul><!---->\n<h4 id=\"メソッドページ\">メソッドページ</h4>\n<p>各インターフェイスには 0 個以上のメソッドがあり、インターフェイスのページのサブページで文書化されています。各ページでは、メソッドの目的を説明し、その構文がどのようなものか、使用例、ブラウザーの互換性情報などを示しています。スラッグはメソッドの名前であり、タイトルはインターフェイス名、ドット、メソッド名、括弧の順です。</p>\n<p>例:</p>\n<ul>\n  <li>Title: <em>AudioContext.close()</em></li>\n  <li>Slug: <em>close</em></li>\n  <li>URL: <a href=\"/ja/docs/Web/API/AudioContext/close\">https://developer.mozilla.org/ja/docs/Web/API/AudioContext/close</a></li>\n</ul><!---->\n<ul>\n  <li>Title: <em>AudioContext.createGain()</em></li>\n  <li>Slug: <em>createGain</em></li>\n  <li>URL: <a href=\"/ja/docs/Web/API/BaseAudioContext/createGain\">https://developer.mozilla.org/ja/docs/Web/API/AudioContext/createGain</a></li>\n</ul>\n<h4 id=\"イベントページ\">イベントページ</h4>\n<p>イベントはターゲットのインターフェイスのサブページとして文書化し、スラッグは <em>イベント名</em>_event、タイトルは <code>インターフェイス: eventName イベント</code> としてください。</p>\n<p><code>on</code> イベントハンドラープロパティのページを作成しないでください。 <code>eventName_イベント</code> のページで、イベントにアクセスする両方の方法について説明してください。</p>\n<p>例:</p>\n<ul>\n  <li>Title: XRSession: end イベント</li>\n  <li>Slug: end_event</li>\n  <li>URL: <a href=\"/en-US/docs/Web/API/XRSession/end_event\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">https://developer.mozilla.org/ja/docs/Web/XRSession/end_event (en-US)</a></li>\n</ul>\n<h4 id=\"概念ガイドページ\">概念/ガイドページ</h4>\n<p>ほとんどの API リファレンスには少なくとも 1 つのガイドがあり、時にはそれに付随する概念ページもあります。最低でも API リファレンスには「<em>API 名</em> の使用」というガイドがあるべきで、これは API の使い方の基本的なガイドを提供するものです。より複雑な API では、 API の異なる側面の使い方を説明するために、複数の使用法ガイドが必要になるかもしれません。</p>\n<p>必要であれば、「<em>API 名</em> の概念」という概念記事も含めることができます。この記事では、 API を効果的に使うために開発者が理解しておくべき、 API に関連する概念の背後にある理論を説明します。</p>\n<p>これらの記事はすべて、 API 概要ページのサブページとして作成する必要があります。例えば、ウェブ音声には 4 つのガイドと 1 つの概念の記事があります。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">https://developer.mozilla.org/ja/docs/Web/API/Web_Audio_API/Using_Web_Audio_API</a></li>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API\">https://developer.mozilla.org/ja/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Web_audio_spatialization_basics\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">https://developer.mozilla.org/ja/docs/Web/API/Web_Audio_API/Web_audio_spatialization_basics (en-US)</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Migrating_from_webkitAudioContext\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">https://developer.mozilla.org/ja/docs/Web/API/Web_Audio_API/Porting_webkitAudioContext_code_to_standards_based_AudioContext (en-US)</a></li>\n  <li><a href=\"/ja/docs/Web/API/Web_Audio_API/Basic_concepts_behind_Web_Audio_API\">https://developer.mozilla.org/ja/docs/Web/API/Web_Audio_API/Basic_concepts_behind_Web_Audio_API</a></li>\n</ul>\n<h4 id=\"例\">例</h4>\n<p>少なくとも、 API の最も一般的な使用例を示すいくつかの例を作成する必要があります。これらは適切な場所に置くことができますが、推奨される場所は <a href=\"https://github.com/mdn/\" class=\"external\" rel=\" noopener\">MDN の GitHub リポジトリー</a>です。</p>\n<h4 id=\"全体の一覧の作成\">全体の一覧の作成</h4>\n<p>これらのサブページの一覧を作成すると、追跡するために便利です。例えば次のようにします。</p>\n<ul>\n  <li>Web_Audio_API</li>\n  <li>AudioContext\n    <ul>\n      <li>AudioContext.currentTime</li>\n      <li>AudioContext.destination</li>\n      <li>AudioContext.listener</li>\n      <li>…</li>\n      <li>AudioContext.createBuffer()</li>\n      <li>AudioContext.createBufferSource()</li>\n      <li>…</li>\n    </ul>\n  </li>\n  <li>AudioNode\n    <ul>\n      <li>AudioNode.context</li>\n      <li>AudioNode.numberOfInputs</li>\n      <li>AudioNode.numberOfOutputs</li>\n      <li>…</li>\n      <li>AudioNode.connect(Param)</li>\n      <li>…</li>\n    </ul>\n  </li>\n  <li>AudioParam</li>\n  <li>Events (update list)\n    <ul>\n      <li>start</li>\n      <li>end</li>\n      <li>…</li>\n    </ul>\n  </li>\n</ul>\n<p>リストの各インターフェイスは、 <code>https://developer.mozilla.org/ja/docs/Web/API</code> のサブページとして独立したページが作成されています。例えば、 <a href=\"/ja/docs/Web/API/AudioContext\"><code>AudioContext</code></a> の記事は、<code>https://developer.mozilla.org/ja/docs/Web/API/AudioContext</code> の場所にあります。各<a href=\"#%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%82%A4%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B8\">インターフェイスページ</a>では、そのインターフェイスが何をするのかを説明し、そのインターフェイスを構成するメソッドとプロパティのリストを提供しています。そして、各メソッドとプロパティは、それがメンバーであるインターフェイスのサブページとして作成され、それ自身のページで文書化されます。例えば、 <a href=\"/ja/docs/Web/API/BaseAudioContext/currentTime\"><code>BaseAudioContext/currentTime</code></a> は、 <code>https://developer.mozilla.org/ja/docs/Web/API/AudioContext/currentTime</code> で文書化されています。</p>"}},{"type":"prose","value":{"id":"ページの作成","title":"ページの作成","isH3":false,"content":"<p>次に、以下の構造に従って必要なページを作成します。 <a href=\"https://github.com/mdn/content#adding-a-new-document\" class=\"external\" rel=\" noopener\">MDN の content の README</a> には、新しい記事を作成する手順が書かれています。また、<a href=\"/ja/docs/MDN/Writing_guidelines/Page_structures/Page_types\">ページの種類</a>のガイドには、役に立つかもしれない例やページテンプレートが書かれています。</p>"}},{"type":"prose","value":{"id":"概要ページの構成","title":"概要ページの構成","isH3":true,"content":"<p>API ランディングページは、 API の規模によって長さが大きく異なりますが、基本的にはどれも同じような機能を備えています。長いランディングページの例としては <a href=\"/ja/docs/Web/API/Web_Audio_API\">https://developer.mozilla.org/ja/docs/Web/API/Web_Audio_API</a> を参照してください。</p>\n<p>ランディングページの特徴は、以下の通りです。</p>\n<ol>\n  <li><strong>説明</strong>: ランディングページの最初の段落では、 API の包括的な目的を短く簡潔に説明する必要があります。</li>\n  <li><strong>概要と用途の節</strong>: 次の節は、 \"[name of API] concepts and usage\" と題し、 API が提供する主な機能、解決する問題、動作方法などの概要を、高い水準で説明する必要があります。この節はかなり短くし、コードや特定の実装の詳細には触れないようにしてください。</li>\n  <li><strong>インターフェイスの一覧</strong>: この節は、「[API 名] のインターフェイス」というタイトルで、 API を構成する各インターフェイスのリファレンスページへのリンクと、各インターフェイスの機能についての簡単な説明を提供します。新しいページを素早く作成する方法については、「{{domxref}} マクロを使用した他の API 機能の参照」を参照してください。</li>\n  <li><strong>例</strong>: この節では、 API の簡単な使用例を 1 つか 2 つ示してください。</li>\n  <li><strong>仕様書一覧表</strong>: ここに、仕様書の一覧表を入れる必要があります。詳しくは「仕様書参照表の作成」の節をご覧ください。</li>\n  <li><strong>ブラウザーの互換性</strong>: ここに、ブラウザーの互換性一覧表を入れてください。詳しくは<a href=\"/ja/docs/MDN/Writing_guidelines/Page_structures/Compatibility_tables\">互換性一覧表</a>をご覧ください。</li>\n  <li><strong>関連情報</strong>: 「関連情報」の節には、 MDN （および外部）のチュートリアル、サンプル、ライブラリーなど、この技術について学ぶ際に役立つかもしれないさらなるリンクを含める野に良い場所です。</li>\n  <li><strong>タグ</strong>: 各リファレンスページに含めるべき標準タグがあります。詳しくは「タグ」の節をご覧ください。</li>\n</ol>"}},{"type":"prose","value":{"id":"インターフェイスページの構成","title":"インターフェイスページの構成","isH3":true,"content":"<p>これで、インターフェイスのページを書き始める準備が整ったはずです。各インターフェイスリファレンスページは、以下の構造を守る必要があります。</p>\n<ol>\n  <li>\n    <strong>{{APIRef}}</strong>: 各インターフェイスページの最初の行に {{APIRef}} マクロを置き、引数に API の名前を入れてください。例えば {{APIRef(\"Web Audio API\")}} のようにします。このマクロは、インターフェイスページの左側にリファレンスメニューを作成します。このマクロはインターフェイスページの左側のリファレンスメニューを構築します。そこにはプロパティやメソッド、および <a href=\"https://github.com/mdn/content/blob/main/files/jsondata/GroupData.json\" class=\"external\" rel=\" noopener\">GroupData</a> マクロで定義されたその他のクイックリンクを含みます（既存の GroupData 項目に API を追加するか、まだリストにない場合は新しい項目を作成するよう誰かに依頼してください）。メニューは、以下のスクリーンショットのようなものになります。\n    \n    <img src=\"/en-US/docs/MDN/Writing_guidelines/Howto/Write_an_API_reference/apiref-links.png\" alt=\"このスクリーンショットは、 APIRef マクロによって生成された、メソッドとプロパティの複数のサブリストを持つ OscillatorNode インターフェイスの垂直ナビゲーションメニューを示します。\" width=\"302\" height=\"384\" loading=\"lazy\">\n  </li>\n  <li><strong>標準化の状況</strong>: 次に標準化の状況を示すバナーを追加します（これらは、 {{APIRef}} マクロと同じ行に配置することができます）。\n    <ul>\n      <li>{{SeeCompatTable}} は実験的な機能の場合（つまり、仕様が勧告候補レベルでない場合）。</li>\n      <li>{{Deprecated_header}}</li>\n      <li>{{Non-standard_header}}</li>\n    </ul>\n  </li>\n  <li><strong>説明</strong>: インターフェイスページの最初の段落では、インターフェイスの包括的な目的を簡潔に説明する必要があります。追加の説明が必要な場合は、さらに数段落を含めるとよいでしょう。インターフェイスが実質的には辞書である場合、「インターフェイス」の代わりにその用語を使用する必要があります。</li>\n  <li><strong>継承図:</strong> <a href=\"https://github.com/mdn/yari/blob/main/kumascript/macros/InheritanceDiagram.ejs\" class=\"external\" rel=\" noopener\"><code>{{InheritanceDiagram}}</code></a> マクロを使用して、このインターフェイスの SVG の継承図を埋め込みます。</li>\n  <li>\n    <strong>プロパティの一覧、メソッドの一覧</strong>: これらの節は、「プロパティ」と「メソッド」というタイトルで、そのインターフェイスのそれぞれのプロパティ/メソッドのリファレンスページへのリンクと（{{domxref}} マクロを使用します）、それぞれのプロパティが何を行うかの説明を提供します。これらは<a href=\"/ja/docs/MDN/Writing_guidelines/Howto/Markdown_in_MDN#%e5%ae%9a%e7%be%a9%e3%83%aa%e3%82%b9%e3%83%88\">説明/定義リスト</a>を使用してマークアップしてください。それぞれの説明は短く簡潔にしてください。可能であれば 1 文で。他のページへのリンクを素早く作成する方法については、「{{domxref}} マクロによる他の API 機能の参照」を参照してください。\n    それぞれの節の冒頭で、プロパティ/メソッドの一覧の前に、イタリック体で適切な文章を使用して継承を示してください。\n    <ul>\n      <li><em>このインターフェイスは固有のプロパティを実装していませんが、 {{domxref(\"XYZ\")}}, および {{domxref(\"XYZ2\")}} からプロパティを継承しています。</em></li>\n      <li><em>このインターフェイスには {{domxref(\"XYZ\")}}, および {{domxref(\"XYZ2\")}} から継承したプロパティもあります。</em></li>\n      <li><em>このインターフェイスは固有のメソッドを実装していませんが、 {{domxref(\"XYZ\")}}, および {{domxref(\"XYZ2\")}} からメソッドを継承しています。</em></li>\n      <li><em>このインターフェイスには {{domxref(\"XYZ\")}}, および {{domxref(\"XYZ2\")}} から継承したプロパティもあります。</em></li>\n    </ul>\n    <div class=\"notecard note\" id=\"sect4\">\n      <p><strong>Note:</strong> 読み取り専用のプロパティには {{readonlyInline}} マクロを、その {{domxref}} リンクと同じ行に設置すると、小さくてかっこいい「読み取り専用」バッジを生成します。（必要に応じて、{{experimentalInline}}, {{non-standard_Inline}}, {{deprecatedInline}} マクロの後に使用してください）。</p>\n    </div>\n  </li>\n  <li><strong>例</strong>: API の主要な機能の典型的な使用法を示すコードリストを入れてください。すべてのコードを列挙するのではなく、そのうちの興味深い部分のみを並べてください。完全なコードのリストを紹介する場合は。例の全体を含んだ <a href=\"https://github.com/\" class=\"external\" rel=\" noopener\">GitHub</a> リポジトリーを参照することができます。また、 <a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site\" class=\"external\" rel=\" noopener\">GitHub gh-pages</a> の機能を使って作成したライブサンプルにリンクすることもできます（もちろん、クライアント側のコードしか使用していなければですが）。サンプルが視覚的であれば、MDN <a href=\"/ja/docs/MDN/Writing_guidelines/Page_structures/Live_samples\">ライブサンプル</a> 機能を使ってページ内でライブ実行できるようにすることができます。</li>\n  <li><strong>仕様書一覧表</strong>: ここに、仕様書一覧表を入れる必要があります。詳しくは「仕様書参照表の作成」の節をご覧ください。</li>\n  <li><strong>ブラウザーの互換性</strong>: ここで、ブラウザーの互換性一覧表を入れる必要があります。詳しくは、<a href=\"/ja/docs/MDN/Writing_guidelines/Page_structures/Compatibility_tables\">互換性一覧表</a>を参照してください。</li>\n  <li><strong>ポリフィル</strong>: 適切であれば、この節に、 API を実装していないブラウザーでも使用できるようにするためのポリフィルのコードを提供してください。ポリフィルが存在しない、あるいは必要ない場合は、この節は完全に除外してください。</li>\n  <li><strong>関連情報</strong>: 「関連情報」の節は、 MDN （および外部）のチュートリアル、サンプル、ライブラリーなど、この技術について学ぶときに役立つかもしれないさらなるリンクを置くのに良い場所です。私たちは外部ソースへのリンクに対して自由なポリシーを持っていますが、注意してください。\n    <ul>\n      <li>MDN の他のページと同じ情報を持つページを加えないでください。代わりにそのページにリンクしてください。</li>\n      <li>著者名を記載しないでください - 私たちは作家中立のドキュメントサイトです。ドキュメントにリンクすれば、そこに著者名が表示されます。</li>\n      <li>ブログの記事は特に注意が必要です。古くなりがちだからですです（古い構文、間違った互換性情報）。メンテナンスされた文書にはない明確な付加価値がある場合のみ、リンクを張ってください。</li>\n      <li>「詳しくは ... を参照してください」や「... をクリックしてください」のような動作動詞は使わないでください。読者が見ることができるかどうか、リンクをクリックできるかどうか（紙版のドキュメントのように）分からないからです。</li>\n    </ul>\n  </li>\n  <li><strong>タグ</strong>: 各リファレンスページに設定すべき標準タグがあります。詳しくは「タグ」の節をご覧ください。</li>\n</ol>\n<h4 id=\"インターフェイスのページの例\">インターフェイスのページの例</h4>\n<p>インターフェイスページの代表的な例を以下に示します。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/Request\"><code>Request</code></a> （<a href=\"/ja/docs/Web/API/Fetch_API\">Fetch API</a>）</li>\n  <li><a href=\"/ja/docs/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> （<a href=\"/ja/docs/Web/API/Web_Speech_API\">Web Speech API</a>）</li>\n</ul>"}},{"type":"prose","value":{"id":"プロパティページの構成","title":"プロパティページの構成","isH3":true,"content":"<p>プロパティページは、それらが実装されているインターフェイスのサブページとして作成してください。他のプロパティページの構造をコピーして、新しいページの基礎とします。</p>\n<p>プロパティページの名前は <code>インターフェイス.プロパティ名</code> という規則に従うように編集してください。</p>\n<p>プロパティページには以下の節が必要です。</p>\n<ol>\n  <li><strong>タイトル</strong>: ページのタイトルは、<strong>インターフェイス名.プロパティ名</strong> とする必要があります。インターフェイス名は大文字で始めなければなりません。 JavaScript ではインターフェイスはオブジェクトのプロトタイプに実装されますが、 <a href=\"/ja/docs/Web/JavaScript/Reference\">JavaScript リファレンス</a>のようにタイトルに <code>.prototype.</code> を含めることはありません。</li>\n  <li>\n    <strong>{{APIRef}}</strong>: 各プロパティページの最初の行に {{APIRef}} マクロを置き、引数に API の名前を入れてください。例えば {{APIRef(\"Web Audio API\")}} のようにします。このマクロは、プロパティページの左側にリファレンスメニューを作成します。このマクロはプロパティページの左側のリファレンスメニューを構築します。そこにはプロパティやメソッド、および <a href=\"https://github.com/mdn/content/blob/main/files/jsondata/GroupData.json\" class=\"external\" rel=\" noopener\">GroupData</a> マクロで定義されたその他のクイックリンクを含みます（既存の GroupData 項目に API を追加するか、まだリストにない場合は新しい項目を作成するよう誰かに依頼してください）。メニューは、以下のスクリーンショットのようなものになります。\n    \n    <img src=\"/en-US/docs/MDN/Writing_guidelines/Howto/Write_an_API_reference/apiref-links.png\" alt=\"このスクリーンショットは、 APIRef マクロによって生成された、メソッドとプロパティの複数のサブリストを持つ OscillatorNode インターフェイスの垂直ナビゲーションメニューを示します。\" width=\"302\" height=\"384\" loading=\"lazy\">\n  </li>\n  <li><strong>標準化の状況</strong>: 次に標準化の状況を示すバナーを追加します（これらは、 {{APIRef}} マクロと同じ行に配置することができます）。\n    <ul>\n      <li>{{SeeCompatTable}} は実験的な機能の場合（つまり、仕様が勧告候補レベルでない場合）。</li>\n      <li>{{Deprecated_header}}</li>\n      <li>{{Non-standard_header}}</li>\n    </ul>\n  </li>\n  <li><strong>説明</strong>: プロパティページの最初の段落には、そのプロパティの包括的な目的を短く簡潔に説明する必要があります。また、追加の説明が必要な場合は、さらにいくつかの段落を書くととよいでしょう。明らかに記述すべき追加情報は、その既定値/初期値、および読み取り専用かどうかです。最初の文の構成は、次のようにしなければなりません。\n    <dl>\n      <dt id=\"読み取り専用のプロパティの場合\">読み取り専用のプロパティの場合</dt>\n      <dd>\n        <p><strong><code>インターフェイス名.プロパティ</code></strong> は読み取り専用のプロパティで、 {{domxref(\"type\")}} を返します…</p>\n      </dd>\n      <dt id=\"その他のプロパティの場合\">その他のプロパティの場合</dt>\n      <dd>\n        <p><strong><code>インターフェイス名.プロパティ</code></strong> プロパティは {{domxref(\"type\")}} 型で…</p>\n      </dd>\n    </dl>\n    <div class=\"notecard note\" id=\"sect5\">\n      <p><strong>Note:</strong> <code>インターフェイス名.プロパティ</code> は <code>&lt;code&gt;</code> の中に入れ、最初に使用される場合は太字 (<code>&lt;strong&gt;</code>) で記述してください。</p>\n    </div>\n  </li>\n  <li><strong>値</strong>: 値の節では、プロパティの値の説明を行います。これにはプロパティのデータ型と、それが何を表しているかを説明する必要があります。例として、 <a href=\"/ja/docs/Web/API/SpeechRecognition/grammars\"><code>SpeechRecognition.grammars</code></a> を参照してください。</li>\n  <li><strong>例</strong>: プロパティの典型的な使用方法を示すために、コードのリストを含めてください。その型のオブジェクトがどのように作成され、どのようにプロパティにアクセスするかを示す簡単な例から始める必要があります。より複雑な例は、そのような例の後に追加することができます。すべてのコードを列挙するのではなく、そのうちの興味深い部分のみを並べてください。完全なコードのリストを紹介する場合は。例の全体を含んだ <a href=\"https://github.com/\" class=\"external\" rel=\" noopener\">GitHub</a> リポジトリーを参照することができます。また、 <a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site\" class=\"external\" rel=\" noopener\">GitHub gh-pages</a> の機能を使って作成したライブサンプルにリンクすることもできます（もちろん、クライアント側のコードしか使用していなければですが）。サンプルが視覚的であれば、MDN <a href=\"/ja/docs/MDN/Writing_guidelines/Page_structures/Live_samples\">ライブサンプル</a> 機能を使ってページ内でライブ実行できるようにすることができます。</li>\n  <li><strong>仕様書一覧表</strong>: ここに、仕様書一覧表を入れる必要があります。詳しくは「仕様書参照表の作成」の節をご覧ください。</li>\n  <li><strong>ブラウザーの互換性</strong>: ここで、ブラウザーの互換性一覧表を入れる必要があります。詳しくは、<a href=\"/ja/docs/MDN/Writing_guidelines/Page_structures/Compatibility_tables\">互換性一覧表</a>を参照してください。</li>\n  <li><strong>関連情報</strong>: 「関連情報」の節は、この技術を使用する際に役立つかもしれないさらなるリンクを置くのに良い場所です。このプロパティの変更によって影響を受けるメソッドやプロパティ、またはそれに関連して発行されるイベントなどです。 MDN （および外部）のチュートリアル、サンプル、ライブラリーなど、この技術について学ぶ際に役立つリンクを追加することができますが、代わりにインターフェイスのリファレンスページに追加することを考慮すると便利かもしれません。</li>\n  <li><strong>Tags</strong>: 各プロパティページに設定すべき標準タグがあります。詳しくは「タグ」の節をご覧ください。</li>\n</ol>\n<h4 id=\"プロパティページの例\">プロパティページの例</h4>\n<p>以下に、プロパティページの例を示します。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/Request/method\"><code>Request.method</code></a> （<a href=\"/ja/docs/Web/API/Fetch_API\">Fetch API</a>）</li>\n  <li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SpeechSynthesis/speaking\"><code>SpeechSynthesis.speaking</code> <small>(en-US)</small></a> （<a href=\"/ja/docs/Web/API/Web_Speech_API\">Web Speech API</a>）</li>\n</ul>"}},{"type":"prose","value":{"id":"メソッドページの構成","title":"メソッドページの構成","isH3":true,"content":"<p>メソッドページは、実装されるインターフェイスのサブページとして作成してくあさい。他のメソッドページの構造をコピーして、新しいページの基礎とします。</p>\n<p>メソッドページには以下の節が必要です。</p>\n<ol>\n  <li><strong>タイトル</strong>: ページのタイトルは、<strong>インターフェイス名.メソッド名()</strong> （最後に 2 つの括弧つき）とする必要がありますが、スラッグ（ページ URL の最後）は括弧をつけてはいけません。また、インターフェイス名は大文字で始めなければなりません。 JavaScript ではインターフェイスはオブジェクトのプロトタイプに実装されますが、 <a href=\"/ja/docs/Web/JavaScript/Reference\">JavaScript リファレンス</a>のようにタイトルに <code>.prototype.</code> を含めることはありません。</li>\n  <li>\n    <strong>{{APIRef}}</strong>: 各メソッドページの最初の行に {{APIRef}} マクロを置き、引数に API の名前を入れてください。例えば {{APIRef(\"Web Audio API\")}} のようにします。このマクロは、メソッドページの左側にリファレンスメニューを作成します。このマクロはインターフェイスページの左側のリファレンスメニューを構築します。そこにはプロパティやメソッド、および <a href=\"https://github.com/mdn/content/blob/main/files/jsondata/GroupData.json\" class=\"external\" rel=\" noopener\">GroupData</a> マクロで定義されたその他のクイックリンクを含みます（既存の GroupData 項目に API を追加するか、まだリストにない場合は新しい項目を作成するよう誰かに依頼してください）。メニューは、以下のスクリーンショットのようなものになります。\n    \n    <img src=\"/en-US/docs/MDN/Writing_guidelines/Howto/Write_an_API_reference/apiref-links.png\" alt=\"このスクリーンショットは、 APIRef マクロによって生成された、メソッドとプロパティの複数のサブリストを持つ OscillatorNode インターフェイスの垂直ナビゲーションメニューを示します。\" width=\"302\" height=\"384\" loading=\"lazy\">\n  </li>\n  <li><strong>標準化の状況</strong>: 次に標準化の状況を示すバナーを追加します（これらは、 {{APIRef}} マクロと同じ行に配置することができます）。\n    <ul>\n      <li>{{SeeCompatTable}} は実験的な機能の場合（つまり、仕様が勧告候補レベルでない場合）。</li>\n      <li>{{Deprecated_header}}</li>\n      <li>{{Non-standard_header}}</li>\n    </ul>\n  </li>\n  <li><strong>説明</strong>: メソッドページの最初の段落には、そのメソッドの包括的な目的を短く簡潔に説明する必要があります。また、追加の説明が必要な場合は、さらにいくつかの段落を書くととよいでしょう。明らかに追加すべき情報は、デフォルト引数の値、そのメソッドが依存する理論、および引数値が行うことです。\n    <dl>\n      <dt id=\"最初の文の冒頭は、次のような構成にしなければなりません。\">最初の文の冒頭は、次のような構成にしなければなりません。</dt>\n      <dd>\n        <p><strong><code>インターフェイス名.メソッド名()</code></strong> メソッドインターフェイスは…</p>\n      </dd>\n    </dl>\n    <div class=\"notecard note\" id=\"sect6\">\n      <p><strong>Note:</strong> <code>インターフェイス名.メソッド名()</code> は <code>&lt;code&gt;</code> の中に入れ、最初に使用される場合は太字 (<code>&lt;strong&gt;</code>) で記述してください。</p>\n    </div>\n  </li>\n  <li><strong>構文</strong>: 構文の節には、 2 - 3 行の例（通常はインターフェイスの構築とインターフェイスメソッドの呼び出しのみ）を含める必要があります。\n    <dl>\n      <dt id=\"構文は次の形式にしてください。\">構文は次の形式にしてください。</dt>\n      <dd>\n        <p>method(param1, param2, …)</p>\n      </dd>\n    </dl>構文の節には、以下の 3 つの項を入れてください（例として、 <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/SubtleCrypto/sign\"><code>SubtleCrypto.sign()</code> <small>(en-US)</small></a> を参照してください）。\n    <ul>\n      <li>\"引数\": これには、メソッドが受け取る様々な引数を命名・記述した定義リスト（または順不同のリスト）を置く必要があります。オプションの引数の場合、引数名の隣に <span class=\"badge inline optional\">省略可</span> マクロを置く必要があります。引数がない場合、この項は省略してください。</li>\n      <li>\"返値\": これはメソッドが持つ返値を示すもので、 double や論理値のような単純な値でも、別なインターフェイスのオブジェクトのような複雑な値でも構いません。この場合、 {{domxref}} マクロを使って、そのインターフェースをカバーする MDN API ページに（存在すれば）リンクすることができます。 メソッドは何も返さない場合がありますが、その場合、返値は \"{{jsxref('undefined')}}\" と記述します（レンダリングすると <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> と表示されます）。</li>\n      <li>\"例外\": これは、そのメソッドを呼び出したときに発生する可能性のあるさまざまな例外と、 その例外を発生させる状況を列挙してください。例外が発生しない場合は、この節は省略してください。</li>\n    </ul>\n  </li>\n  <li><strong>例</strong>: プロパティの典型的な使用方法を示すために、コードのリストを入れてください。すべてのコードを列挙するのではなく、そのうちの興味深い部分のみを並べてください。完全なコードのリストを紹介する場合は。例の全体を含んだ <a href=\"https://github.com/\" class=\"external\" rel=\" noopener\">GitHub</a> リポジトリーを参照することができます。また、 <a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site\" class=\"external\" rel=\" noopener\">GitHub gh-pages</a> の機能を使って作成したライブサンプルにリンクすることもできます（もちろん、クライアント側のコードしか使用していなければですが）。サンプルが視覚的であれば、MDN <a href=\"/ja/docs/MDN/Writing_guidelines/Page_structures/Live_samples\">ライブサンプル</a> 機能を使ってページ内でライブ実行できるようにすることができます。</li>\n  <li><strong>仕様書一覧表</strong>: ここに、仕様書一覧表を入れる必要があります。詳しくは「仕様書参照表の作成」の節をご覧ください。</li>\n  <li><strong>ブラウザーの互換性</strong>: ここで、ブラウザーの互換性一覧表を入れる必要があります。詳しくは、<a href=\"/ja/docs/MDN/Writing_guidelines/Page_structures/Compatibility_tables\">互換性一覧表</a>を参照してください。</li>\n</ol>\n<h4 id=\"メソッドページの例\">メソッドページの例</h4>\n<p>以下に、メソッドページの例を示します。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/API/Document/getAnimations\"><code>Document.getAnimations</code></a> （<a href=\"/ja/docs/Web/API/Web_Animations_API\">ウェブアニメーション API</a>）</li>\n  <li><a href=\"/ja/docs/Web/API/fetch\"><code>fetch()</code></a> （<a href=\"/ja/docs/Web/API/Fetch_API\">フェッチ API</a>）</li>\n</ul>"}},{"type":"prose","value":{"id":"タグ付け","title":"タグ付け","isH3":false,"content":"<p>API リファレンスページには、すべてのページに設定すべきタグがあります。</p>\n<ul>\n  <li>\"API\"</li>\n  <li>\"Reference\"</li>\n  <li>API の名前 (例: \"Web Audio API\")</li>\n  <li>関連するキーワード (例: \"audio\")</li>\n</ul>\n<p>インターフェイスページには、次のものを追加してください。</p>\n<ul>\n  <li>\"Interface\"</li>\n  <li>インターフェイスの名前。例: \"AudioContext\"</li>\n</ul>\n<p>メソッドページには、次のものを追加してください。</p>\n<ul>\n  <li>\"Method\"</li>\n  <li>そのメソッドが関連するインターフェイスの名前。例: \"AudioContext\"</li>\n  <li>メソッドの名前。例: \"createBuffer\"</li>\n</ul>\n<p>プロパティページには、次のものを追加してください。</p>\n<ul>\n  <li>\"Property\"</li>\n  <li>そのプロパティが関連するインターフェイスの名前。例: \"AudioContext\"</li>\n  <li>そのプロパティの名前。例: \"currentTime\"</li>\n</ul>\n<p>いずれの場合も、標準化の状況を示すキーワードも追加してください。</p>\n<ul>\n  <li>Deprecated</li>\n  <li>Non-standard</li>\n</ul>\n<p>これらのタグは、アイコン付きの正しいクイックリンクを生成するために使用されます。タグ付けに関する追加情報、およびその他の有用なタグについては、<a href=\"/ja/docs/MDN/Writing_guidelines/Howto/Tag\">適切にタグづけするには</a>を参照してください。</p>"}},{"type":"prose","value":{"id":"サイドバー","title":"サイドバー","isH3":false,"content":"<p>API リファレンスページを作成したら、ページを関連付けるために適切なサイドバーを挿入したくなるでしょう。 <a href=\"/ja/docs/MDN/Writing_guidelines/Howto/Write_an_API_reference/Sidebars\">API リファレンスサイドバー</a>のガイドで、その方法を説明します。</p>"}}],"toc":[{"text":"準備","id":"準備"},{"text":"ページの作成","id":"ページの作成"},{"text":"タグ付け","id":"タグ付け"},{"text":"サイドバー","id":"サイドバー"}],"summary":"このガイドでは、 MDN で API リファレンスを書くために必要なすべてのことを説明します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"How to write an API reference","locale":"en-US","native":"English (US)"},{"title":"How to write an API reference","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/mdn/writing_guidelines/howto/write_an_api_reference","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/mdn/writing_guidelines/howto/write_an_api_reference/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/MDN","title":"MDN Web Docs プロジェクト"},{"uri":"/ja/docs/MDN/Writing_guidelines","title":"執筆ガイドライン"},{"uri":"/ja/docs/MDN/Writing_guidelines/Howto/Write_an_API_reference","title":"API リファレンスの書き方"}],"pageTitle":"API リファレンスの書き方 - MDN Web Docs プロジェクト | MDN","noIndexing":false}}