{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"EventListener","mdn_url":"/ja/docs/conflicting/Web/API/EventTarget/addEventListener_380cb5f366307beb2c072f74e561ee98","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>コンストラクター</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget/EventTarget\"><code>EventTarget()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>メソッド</summary><ol><li><a href=\"/ja/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a></li><li><a href=\"/ja/docs/Web/API/EventTarget/dispatchEvent\"><code>dispatchEvent()</code></a></li><li><a href=\"/ja/docs/Web/API/EventTarget/removeEventListener\"><code>removeEventListener()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>EventListener</code></strong> インターフェイスは、<a href=\"/ja/docs/Web/API/EventTarget\"><code>EventTarget</code></a> オブジェクトによってディスパッチされたイベントを処理できるオブジェクトを表します。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> レガシーコンテンツとの互換性が必要なため、<code>EventListener</code> は、関数、<code>handleEvent()</code> メソッドをもつオブジェクト両方を受け入れます。\n    これを以下の <a href=\"#%E4%BE%8B\">例</a> に示します。\n  </p>\n</div>"}},{"type":"prose","value":{"id":"プロパティ","title":"プロパティ","isH3":false,"content":"<p><em>このインターフェイスはいかなるプロパティを実装も継承もしません。</em></p>"}},{"type":"prose","value":{"id":"メソッド","title":"メソッド","isH3":false,"content":"<p><em>このインターフェイスはメソッドを継承しません。</em></p>\n<dl>\n  <dt id=\"eventlistener.handleevent\"><a href=\"/ja/docs/conflicting/Web/API/EventTarget/addEventListener\"><code>EventListener.handleEvent()</code></a></dt>\n  <dd>\n    <p>指定されたタイプのイベントが発生するたびに呼び出される関数。</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"html","title":"HTML","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Click here!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>funcOutput<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleEvtOutput<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> buttonElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> funcOutput <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'funcOutput'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> handleEvtOutput <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'handleEvtOutput'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// コールバック関数を用意して、'click' イベントのハンドラを追加する。</span>\n<span class=\"token comment\">// 要素がクリックされたとき、</span>\n<span class=\"token comment\">// id \"funcOutput\" の p タグに \"Element clicked through function!\" と出力されます。</span>\nbuttonElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  funcOutput<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Element clicked through function!'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 互換性のために `handleEvent` プロパティを持つ非関数オブジェクトは、</span>\n<span class=\"token comment\">// 関数と同じもののように扱われます。</span>\n<span class=\"token comment\">// コールバック関数と同じように id \"handleEvtOutput\" の p タグに、</span>\n<span class=\"token comment\">// \"Element clicked through handleEvent property!\" と出力されます。</span>\nbuttonElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">handleEvent</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    handleEvtOutput<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Element clicked through handleEvent property!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"結果","title":"結果","isH3":true,"content":"<iframe class=\"sample-code-frame\" title=\"例\" id=\"frame_example\" src=\"https://yari-demos.prod.mdn.mozit.cloud/ja/docs/conflicting/Web/API/EventTarget/addEventListener_380cb5f366307beb2c072f74e561ee98/_sample_.example.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"仕様書","title":"仕様書","isH3":false,"content":"{{Specifications}}"}},{"type":"prose","value":{"id":"ブラウザーの互換性","title":"ブラウザーの互換性","isH3":false,"content":"{{Compat}}"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":true,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/EventTarget/addEventListener\">addEventListener</a></li>\n</ul>"}}],"toc":[{"text":"プロパティ","id":"プロパティ"},{"text":"メソッド","id":"メソッド"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"}],"summary":"EventListener インターフェイスは、EventTarget オブジェクトによってディスパッチされたイベントを処理できるオブジェクトを表します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","source":{"folder":"ja/conflicting/web/api/eventtarget/addeventlistener_380cb5f366307beb2c072f74e561ee98","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/conflicting/web/api/eventtarget/addeventlistener_380cb5f366307beb2c072f74e561ee98/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"pageTitle":"EventListener | MDN","noIndexing":true}}