{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"共有メモリーに関する変更予定","mdn_url":"/ja/docs/conflicting/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\"><code>SharedArrayBuffer</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/@@species\"><code>get SharedArrayBuffer[@@species]</code> <small>(en-US)</small></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/byteLength\"><code>SharedArrayBuffer.prototype.byteLength</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer/slice\"><code>SharedArrayBuffer.prototype.slice()</code></a></li></ol></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.prototype.arguments</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.prototype.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.prototype.displayName</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.prototype.length</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.prototype.name</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function.prototype.prototype</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>開発者が <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\"><code>SharedArrayBuffer</code></a> オブジェクトを再び作成できるように、標準化作業が進行中ですが、スレッドをまたがってこれらを使用するために変更が必要です (例えば、 <code>postMessage()</code> で <code>SharedArrayBuffer</code> オブジェクトを使用すると、既定で例外が発生します）。これらの変更により、サイト間の分離がさらに進み、共有メモリーで作成できる高解像度タイマーを使った攻撃の影響を軽減するのに役立ちます。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Firefox 79 以降では、この記事で説明している機能は既定で有効になります。</p>\n  <p>Chrome はこれらの制約をデスクトップ版の Chrome 92 と Android 版の Chrome 88 から始めました。</p>\n</div>"}},{"type":"prose","value":{"id":"新しい_http_ヘッダーの鉱脈","title":"新しい HTTP ヘッダーの鉱脈","isH3":false,"content":"<p>基本要件として、文書は<a href=\"/ja/docs/Web/Security/Secure_Contexts\">安全なコンテキスト</a>にあることが必要です。</p>\n<p>最上位の文書の場合、 2 つのヘッダーを設定する必要があります。</p>\n<ul>\n  <li><a href=\"/ja/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy\"><code>Cross-Origin-Opener-Policy</code></a> の値は <code>same-origin</code> です（攻撃からオリジンを守ります）。</li>\n  <li><a href=\"/ja/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy\"><code>Cross-Origin-Embedder-Policy</code></a> 値は <code>require-corp</code> （オリジンから犠牲者を保護する）です。</li>\n</ul>\n<p>この 2 つのヘッダーを設定すると、 <code>postMessage()</code> は <code>SharedArrayBuffer</code> オブジェクトを使用しても例外が発生しなくなり、スレッド間での共有メモリーが利用できるようになります。</p>\n<p>ネストされた文書と専用ワーカーは、 <a href=\"/ja/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy\"><code>Cross-Origin-Embedder-Policy</code></a> ヘッダーも同じ値で設定する必要があります。ネストされた文書とサブリソースが同一オリジンであれば、これ以上の変更は必要ありません。ネストされた文書とサブリソースが同じサイト（ただし別オリジン）であった場合は、 <a href=\"/ja/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy\"><code>Cross-Origin-Resource-Policy</code></a> ヘッダーに <code>same-site</code> を値として設定する必要があります。そして、それらのオリジン間（およびサイト青だ）の対応するものは、 <code>cross-origin</code> を値とした同ヘッダーを設定する必要があります。 <a href=\"/ja/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy\"><code>Cross-Origin-Resource-Policy</code></a> ヘッダーに <code>same-origin</code> 以外の値を設定すると、潜在的にリソースが <a href=\"https://ja.wikipedia.org/wiki/Spectre\" class=\"external\" rel=\" noopener\">Spectre</a> などの攻撃にさらされてしまうので注意してください。</p>\n<p><a href=\"/ja/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy\"><code>Cross-Origin-Opener-Policy</code></a> ヘッダーは、ポップアップへの参照を保持する能力を制限することに注意してください。2 つの最上位ウィンドウコンテキスト間の直接アクセスは、基本的に同一オリジンであり、同じ 2 つの値を持つ同じ 2 つのヘッダーを運ぶ場合にのみ機能します。</p>"}},{"type":"prose","value":{"id":"api_の変更","title":"API の変更","isH3":false,"content":"<p>この新しく必要とされる環境の結果として、いくつかの API の影響があります。</p>\n<ul>\n  <li><code>Atomics</code> オブジェクトは常に利用可能です。</li>\n  <li><code>SharedArrayBuffer</code> オブジェクトは原則的に常に利用可能ですが、残念ながらウェブコンテンツとの互換性のために、上記の 2 つのヘッダーが設定されていない限り、グローバルオブジェクトのコンストラクターは非公開になります。将来的には、この制限が取り除かれる可能性があります。　<a href=\"/ja/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a> はまだインスタンスを取得するために使用することができます。</li>\n  <li>上記の 2 つのヘッダーが設定されていない限り、さまざまな <code>postMessage()</code> API は <code>SharedArrayBuffer</code> オブジェクトを使用すると例外が発生します。これら設定されていれば、<code>Window</code> オブジェクトと専用ワーカーの <code>postMessage()</code> が機能し、メモリ共有が可能になります。</li>\n  <li><code>postMessage()</code> が例外を発生させるかどうかをチェックする必要がないように、 <a href=\"/en-US/docs/Web/API/crossOriginIsolated\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">self.crossOriginIsolated (en-US)</a> が標準化されつつあります（論理値を返すゲッターであり、 <code>true</code> はヘッダーが設定されていることを示します）。ウィンドウとワーカーのコンテキストで利用可能です。</li>\n</ul>"}},{"type":"prose","value":{"id":"webassembly_の共有メモリー","title":"WebAssembly の共有メモリー","isH3":false,"content":"<p>WebAssembly の<a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md\" class=\"external\" rel=\" noopener\">スレッド</a>の提案により、 <a href=\"/ja/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a> オブジェクトは新しいコンストラクターのフラグである <a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#javascript-api-changes\" class=\"external\" rel=\" noopener\"><code>shared</code></a> を指定することがで作成することができるようになりました。このフラグを <code>true</code> に設定すると、構築された <code>Memory</code> オブジェクトは <code>SharedArrayBuffer</code> と同様に <code>postMessage()</code> によってワーカー間で共有できるようになり、<code>Memory</code> オブジェクトのバッキング <a href=\"/ja/docs/WebAssembly/JavaScript_interface/Memory/buffer\"><code>buffer</code></a> は <code>SharedArrayBuffer</code> となります。したがって、上記の <code>SharedArrayBuffer</code> をワーカー間で共有するための要件は、 <code>WebAssembly.Memory</code> を共有する場合にも当てはまります。</p>\n<p>WebAssembly スレッドの提案では、新しい<a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#atomic-memory-accesses\" class=\"external\" rel=\" noopener\">不可分</a>命令のセットも定義しています。ちょうど <code>SharedArrayBuffer</code> とそのメソッドが無条件に有効であるように（そしてスレッド間の共有のみが新しいヘッダーでゲートされます）、WebAssembly の不可分命令も無条件に許可されます。</p>"}},{"type":"prose","value":{"id":"参考文献","title":"参考文献","isH3":false,"content":"<ul>\n  <li><a href=\"https://docs.google.com/document/d/1zDlfvfTJ_9e8Jdc8ehuV4zMEu9ySMCiTGMS9y0GU92k/edit\" class=\"external\" rel=\" noopener\">COOP and COEP explained</a>.</li>\n  <li><code>Cross-Origin-Opener-Policy</code>: <a href=\"https://github.com/whatwg/html/issues/3740\" class=\"external\" rel=\" noopener\">whatwg/html issue #3740</a>, <a href=\"https://gist.github.com/annevk/6f2dd8c79c77123f39797f6bdac43f3e\" class=\"external\" rel=\" noopener\">draft specification</a>.</li>\n  <li><code>Cross-Origin-Embedder-Policy</code>: <a href=\"https://github.com/whatwg/html/issues/4175\" class=\"external\" rel=\" noopener\">whatwg/html issue #4175</a>, <a href=\"https://mikewest.github.io/corpp/\" class=\"external\" rel=\" noopener\">draft specification</a>.</li>\n  <li><code>Cross-Origin-Resource-Policy</code>: <a href=\"https://fetch.spec.whatwg.org/#cross-origin-resource-policy-header\" class=\"external\" rel=\" noopener\">standardized in Fetch</a>, new <code>cross-origin</code> value is part of the <code>Cross-Origin-Embedder-Policy</code> effort.</li>\n  <li><code>postMessage()</code> changes and <a href=\"/en-US/docs/Web/API/crossOriginIsolated\" class=\"only-in-en-us\" title=\"Currently only available in English (US)\">self.crossOriginIsolated (en-US)</a>: <a href=\"https://github.com/whatwg/html/issues/4732\" class=\"external\" rel=\" noopener\">whatwg/html issue #4732</a>, <a href=\"https://github.com/whatwg/html/issues/4872\" class=\"external\" rel=\" noopener\">whatwg/html issue #4872</a>, <a href=\"https://github.com/whatwg/html/pull/4734\" class=\"external\" rel=\" noopener\">draft specification</a>.</li>\n  <li><a href=\"https://developer.chrome.com/blog/enabling-shared-array-buffer/\" class=\"external\" rel=\" noopener\">SharedArrayBuffer updates in Android Chrome 88 and Desktop Chrome 92</a></li>\n</ul>"}}],"toc":[{"text":"新しい HTTP ヘッダーの鉱脈","id":"新しい_http_ヘッダーの鉱脈"},{"text":"API の変更","id":"api_の変更"},{"text":"WebAssembly の共有メモリー","id":"webassembly_の共有メモリー"},{"text":"参考文献","id":"参考文献"}],"summary":"開発者が SharedArrayBuffer オブジェクトを再び作成できるように、標準化作業が進行中ですが、スレッドをまたがってこれらを使用するために変更が必要です (例えば、 postMessage() で SharedArrayBuffer オブジェクトを使用すると、既定で例外が発生します）。これらの変更により、サイト間の分離がさらに進み、共有メモリーで作成できる高解像度タイマーを使った攻撃の影響を軽減するのに役立ちます。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","source":{"folder":"ja/conflicting/web/javascript/reference/global_objects/sharedarraybuffer","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/conflicting/web/javascript/reference/global_objects/sharedarraybuffer/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"pageTitle":"共有メモリーに関する変更予定 | MDN","noIndexing":true}}