{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"[[Prototype]] の変更の性能上の危険性","mdn_url":"/ja/docs/conflicting/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf","locale":"ja","native":"日本語","sidebarHTML":"\n <ol>\n  <li><a href=\"/ja/docs/Web/JavaScript\"><strong><em>JavaScript</em></strong></a></li>\n  <li><a href=\"/ja/docs/Web/JavaScript/Tutorials\"><strong>チュートリアル:</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>初級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript の基礎</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/First_steps\">JavaScript の第一歩</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Building_blocks\">JavaScript の構成要素</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Objects\">JavaScript オブジェクト入門</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>JavaScript ガイド</summary>\n      <ol>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Introduction\">入門編</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Grammar_and_Types\">文法とデータ型</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\">制御フローとエラー処理</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Loops_and_iteration\">ループとイテレーター</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Functions\">関数</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Expressions_and_Operators\">式と演算子</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Numbers_and_dates\">数と日付</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Text_formatting\">テキスト処理</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Regular_Expressions\">正規表現</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Indexed_collections\">インデックス付きコレクション</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Keyed_collections\">キー付きコレクション</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Working_with_Objects\">オブジェクトを利用する</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\">オブジェクトモデルの詳細</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Using_promises\">プロミスの使用</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Iterators_and_generators\">イテレーターとジェネレーター</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Meta_programming\">メタプログラミング</a></li>\n          <li><a href=\"/ja/docs/Web/JavaScript/Guide/Modules\">JavaScript モジュール</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>中級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\">クライアントサイド JavaScript フレームワーク</a></li>\n        <li><a href=\"/ja/docs/Learn/JavaScript/Client-side_web_APIs\">クライアントサイド Web API</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/A_re-introduction_to_JavaScript\">JavaScript 「再」入門</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Data_structures\">JavaScript のデータ構造</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Equality_comparisons_and_sameness\">等値比較と同一性</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Closures\">クロージャ</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>上級編</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">継承とプロトタイプチェーン</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode\">Strict モード</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Typed_arrays\">JavaScript 型付き配列</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Memory_Management\">メモリー管理</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/EventLoop\">並列モデルとイベントループ</a></li>\n      </ol>\n    </details>\n  </li>\n  <li><strong><a href=\"/ja/docs/Web/JavaScript/Reference\">リファレンス</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n       <summary>組み込みオブジェクト</summary>\n        <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\">AggregateError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\">ArrayBuffer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\">AsyncFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncGenerator\">AsyncGenerator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/AsyncGeneratorFunction\">AsyncGeneratorFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Atomics\">Atomics</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt\">BigInt</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\">BigInt64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\">BigUint64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/DataView\">DataView</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\">decodeURI()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\">decodeURIComponent()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\">encodeURI()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/escape\">escape()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/eval\">eval()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/EvalError\">EvalError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\">FinalizationRegistry</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\">Float32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\">Float64Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Function\">Function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Generator\">Generator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\">GeneratorFunction</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/globalThis\">globalThis</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Infinity\">Infinity</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\">Int16Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\">Int32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\">Int8Array</a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/InternalError\">InternalError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl\">Intl</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Math\">Math</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/NaN\">NaN</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\">parseFloat()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/parseInt\">parseInt()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy\">Proxy</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RangeError\">RangeError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\">ReferenceError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Reflect\">Reflect</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RegExp\">RegExp</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Set\">Set</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\">SharedArrayBuffer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\">SyntaxError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">TypedArray</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\">TypeError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\">Uint16Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\">Uint32Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\">Uint8Array</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\">Uint8ClampedArray</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/undefined\">undefined</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/unescape\">unescape()</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/URIError\">URIError</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\">WeakMap</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\">WeakRef</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\">WeakSet</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>式と演算子</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Addition_assignment\">Addition assignment (+=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Addition\">Addition (+)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Assignment\">Assignment (=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/async_function*\">async function* expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/async_function\">async function expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/await\">await</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\">Bitwise AND assignment (&amp;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\">Bitwise AND (&amp;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\">Bitwise NOT (~)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\">Bitwise OR assignment (|=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\">Bitwise OR (|)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\">Bitwise XOR assignment (^=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\">Bitwise XOR (^)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/class\">class expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Comma_Operator\">Comma operator (,)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\">Conditional (ternary) operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Decrement\">Decrement (--)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/delete\">delete operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Division_assignment\">Division assignment (/=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Division\">Division (/)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Equality\">Equality (==)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\">Exponentiation assignment (**=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Exponentiation\">Exponentiation (**)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/function*\">function* expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/function\">Function expression</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\">Greater than or equal (&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Greater_than\">Greater than (&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Grouping\">Grouping operator ( )</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/import.meta\">import.meta</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/import\">import</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/in\">in operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Increment\">Increment (++)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Inequality\">Inequality (!=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/instanceof\">instanceof</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\">Left shift assignment (&lt;&lt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Left_shift\">Left shift (&lt;&lt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\">Less than or equal (&lt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Less_than\">Less than (&lt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\">Logical AND assignment (&amp;&amp;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_AND\">Logical AND (&amp;&amp;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_NOT\">Logical NOT (!)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\">Logical nullish assignment (??=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\">Logical OR assignment (||=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Logical_OR\">Logical OR (||)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\">Multiplication assignment (*=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Multiplication\">Multiplication (*)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new.target\">new.target</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/new\">new operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\">null</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\">Nullish coalescing operator (??)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Object_initializer\">Object initializer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\">Operator precedence</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">Optional chaining (?.)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Property_Accessors\">Property accessors</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\">Remainder assignment (%=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Remainder\">Remainder (%)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\">Right shift assignment (&gt;&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Right_shift\">Right shift (&gt;&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">Spread syntax (...)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Strict_equality\">Strict equality (===)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Strict_inequality\">Strict inequality (!==)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\">Subtraction assignment (-=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Subtraction\">Subtraction (-)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/super\">super</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/this\">this</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/typeof\">typeof</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unary_negation\">Unary negation (-)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unary_plus\">Unary plus (+)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\">Unsigned right shift (&gt;&gt;&gt;)</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/void\">void operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield*\">yield*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Operators/yield\">yield</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>文と宣言</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/async_function*\">async function*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/block\">block</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/break\">break</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/class\">class</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/const\">const</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/continue\">continue</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/debugger\">debugger</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/do...while\">do...while</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/Empty\">empty</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/export\">export</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for-await...of\">for await...of</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for...in\">for...in</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for...of\">for...of</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/for\">for</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/function*\">function*</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/function\">function declaration</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/if...else\">if...else</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/import\">import</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/label\">label</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/let\">let</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/return\">return</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/switch\">switch</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/throw\">throw</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/try...catch\">try...catch</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/var\">var</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/while\">while</a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Statements/with\">with</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>関数</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/arguments\">The arguments object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">Arrow function expressions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Default_parameters\">Default parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/get\">getter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/Method_definitions\">Method definitions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/rest_parameters\">Rest parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Functions/set\">setter</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>クラス</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Class_static_initialization_blocks\">Class static initialization blocks</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/constructor\">constructor</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/extends\">extends</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Private_class_fields\">Private class features</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/Public_class_fields\">Public class fields</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Classes/static\">static</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Errors</summary>\n      <ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Already_has_pragma\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Array_sort_argument\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_octal\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_radix\">RangeError: radix must be an integer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_regexp_flag\">SyntaxError: invalid regular expression flag \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Bad_return_or_yield\">SyntaxError: return not in function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/BigInt_division_by_zero\">RangeError: BigInt division by zero</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/BigInt_negative_exponent\">RangeError: BigInt negative exponent</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Called_on_incompatible_type\">TypeError: X.prototype.y called on incompatible type</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_access_lexical_declaration_before_init\">ReferenceError: can't access lexical declaration 'X' before initialization</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\">TypeError: can't assign to property \"x\" on \"y\": not an object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_be_converted_to_BigInt_because_it_isnt_an_integer\">RangeError: x can't be converted to BigInt because it isn't an integer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_convert_BigInt_to_number\">TypeError: can't convert BigInt to number</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_convert_x_to_BigInt\">TypeError: can't convert x to BigInt</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_define_property_object_not_extensible\">TypeError: can't define property \"x\": \"obj\" is not extensible</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_delete\">TypeError: property \"x\" is non-configurable and can't be deleted</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_redefine_property\">TypeError: can't redefine non-configurable property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cant_use_nullish_coalescing_unparenthesized\">SyntaxError: cannot use `??` unparenthesized within `||` and `&amp;&amp;` expressions</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\">TypeError: cyclic object value</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Dead_object\">TypeError: can't access dead object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Delete_in_strict_mode\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_caller_or_arguments_usage\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_expression_closures\">Warning: expression closures are deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_octal\">SyntaxError: \"0\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_source_map_pragma\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_String_generics\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Deprecated_toLocaleFormat\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Equal_as_assign\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Getter_only\">TypeError: setting getter-only property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Hash_outside_class\">SyntaxError: Unexpected '#' used outside of class body</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Identifier_after_number\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Illegal_character\">SyntaxError: illegal character</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/in_operator_no_object\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\">RangeError: invalid array length</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_assignment_left-hand_side\">SyntaxError: invalid assignment left-hand side</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_BigInt_syntax\">SyntaxError: invalid BigInt syntax</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_const_assignment\">TypeError: invalid assignment to const \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_date\">RangeError: invalid date</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_for-in_initializer\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Invalid_for-of_initializer\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/invalid_right_hand_side_instanceof_operand\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/is_not_iterable\">TypeError: 'x' is not iterable</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/JSON_bad_parse\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Malformed_formal_parameter\">SyntaxError: Malformed formal parameter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Malformed_URI\">URIError: malformed URI sequence</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_bracket_after_list\">SyntaxError: missing ] after element list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_colon_after_property_id\">SyntaxError: missing : after property id</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_function_body\">SyntaxError: missing } after function body</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_curly_after_property_list\">SyntaxError: missing } after property list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_formal_parameter\">SyntaxError: missing formal parameter</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_initializer_in_const\">SyntaxError: missing = in const declaration</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_name_after_dot_operator\">SyntaxError: missing name after . operator</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_argument_list\">SyntaxError: missing ) after argument list</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_parenthesis_after_condition\">SyntaxError: missing ) after condition</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Missing_semicolon_before_statement\">SyntaxError: missing ; before statement</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/More_arguments_needed\">TypeError: More arguments needed</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Negative_repetition_count\">RangeError: repeat count must be non-negative</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_non-null_object\">TypeError: \"x\" is not a non-null object</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_properties\">TypeError: \"x\" has no properties</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/No_variable_name\">SyntaxError: missing variable name</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Non_configurable_array_element\">TypeError: can't delete non-configurable array element</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint\">RangeError: argument is not a valid code point</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_constructor\">TypeError: \"x\" is not a constructor</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_a_function\">TypeError: \"x\" is not a function</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Not_defined\">ReferenceError: \"x\" is not defined</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Precision_range\">RangeError: precision is out of range</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Property_access_denied\">Error: Permission denied to access property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Read-only\">TypeError: \"x\" is read-only</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Redeclared_parameter\">SyntaxError: redeclaration of formal parameter \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Reduce_of_empty_array_with_no_initial_value\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Reserved_identifier\">SyntaxError: \"x\" is a reserved identifier</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Resulting_string_too_large\">RangeError: repeat count must be less than infinity</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Stmt_after_return\">Warning: unreachable code after return statement</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params\">SyntaxError: \"use strict\" not allowed in function with non-simple parameters</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Too_much_recursion\">InternalError: too much recursion</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Undeclared_var\">ReferenceError: assignment to undeclared variable \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Undefined_prop\">ReferenceError: reference to undefined property \"x\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unexpected_token\">SyntaxError: Unexpected token</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unexpected_type\">TypeError: \"x\" is (not) \"y\"</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unnamed_function_statement\">SyntaxError: function statement requires a name</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unparenthesized_unary_expr_lhs_exponentiation\">SyntaxError: unparenthesized unary expression can't appear on the left-hand side of '**'</a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Errors/Unterminated_string_literal\">SyntaxError: unterminated string literal</a></li></ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n      <summary>その他</summary>\n      <ol>\n        <li><a href=\"/ja/docs/Web/JavaScript/JavaScript_technologies_overview\">JavaScript 技術概説</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Lexical_grammar\">字句文法</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Data_structures\">JavaScript のデータ構造</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">プロパティの列挙可能性と所有権</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Iteration_protocols\">反復処理プロトコル</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode\">Strict モード</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\">strict モードへの移行</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Template_literals\">テンプレート文字列</a></li>\n        <li><a href=\"/ja/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\">廃止予定の機能</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>すべての JavaScript オブジェクトは <code>[[Prototype]]</code> を持っています。 オブジェクトのプロパティを取得するには、まずそのオブジェクトを検索し、次にそのオブジェクトの <code>[[Prototype]]</code> を検索し、さらにそのオブジェクトの <code>[[Prototype]]</code> を検索し、プロパティが見つかるかチェーンが終了するまで検索します。 <code>[[Prototype]]</code> チェーンは特に<a href=\"/ja/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">オブジェクトの継承</a>に有用です。</p>\n<p>ECMAScript 6 では、 <code>[[Prototype]]</code> を変異させる方法が導入されています。 この柔軟性は、性能を大幅に低下させるという代償を伴います。<strong><code>[[Prototype]]</code> の変更は、現代の<em>すべての</em> JavaScript エンジンにおいて性能上の害になります。</strong> この記事では、<code>[[Prototype]]</code>の変更がなぜ<em>すべての</em>ブラウザーで遅くなるのかを説明し、代わりに使用すべき代替手段を説明します。</p>"}},{"type":"prose","value":{"id":"javascript_エンジンがプロパティアクセスを最適化する方法","title":"JavaScript エンジンがプロパティアクセスを最適化する方法","isH3":false,"content":"<p>オブジェクトはハッシュなので、理論的には（そして現実には）プロパティアクセスの時間は定数です。しかし、「時間は定数」とは、何千もの機械語かもしれません。幸い、オブジェクトとプロパティはしばしば「予測可能」であり、そのような場合、その基礎となる構造も予測可能です。 JIT はこれを利用して、予測可能なアクセスをより高速に行うことができます。</p>\n<p>エンジンは、オブジェクトに追加されるプロパティの順序によって最適化を行います。 ほとんどのプロパティは、非常に似た順序でオブジェクトに追加されます。（日常的に <code>obj[val]</code> スタイルのランダムアクセスを使用しているオブジェクトは顕著な例外です）。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">Landmark</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">lat<span class=\"token punctuation\">,</span> lon<span class=\"token punctuation\">,</span> desc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">lat</span><span class=\"token operator\">:</span> lat<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">long</span><span class=\"token operator\">:</span> lon <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>description <span class=\"token operator\">=</span> desc<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> lm1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Landmark</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"South Pole\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> lm2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Landmark</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">24.3756466</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">128.311018</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pitcairn Islands\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>すべての <code>Landmark</code> は <code>location</code> と <code>description</code> というプロパティをこの順番で持ちます。 緯度/経度情報を格納する各オブジェクトのリテラルは、 <code>lat</code> と <code>long</code> のプロパティをこの順番で持っています。 後続のコードでプロパティを削除することは可能です。しかし、その可能性は低いので、エンジンはそのような場合に最適でないコードを生成することができます。 Firefox の JavaScript エンジンである SpiderMonkey では、プロパティの特定の順序（および値を含まないプロパティのいくつかの側面）を<em>形状</em>と呼んでいます。（V8 ではこの概念の名前は<em>構造 ID</em> です。） 2 つのオブジェクトの形状が同じである場合、それらのプロパティは同じように保存されます。</p>\n<p>エンジン内部では、このような考え方の（簡略化した）バージョンは、次の C++ のようになります。</p>\n<div class=\"code-example\"><pre class=\"brush: cpp notranslate\"><code><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Property</span> <span class=\"token punctuation\">{</span>\n  Property<span class=\"token operator\">*</span> prev<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 最初のプロパティであれば null</span>\n  String name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// プロパティ名</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> index<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ストレージ内の値の番号</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> Shape <span class=\"token operator\">=</span> Property<span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Object</span> <span class=\"token punctuation\">{</span>\n  Shape shape<span class=\"token punctuation\">;</span>\n  Value<span class=\"token operator\">*</span> properties<span class=\"token punctuation\">;</span>\n  Object<span class=\"token operator\">*</span> prototype<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>例では、様々な JS 表現がこの C++ に対応することになります。</p>\n<div class=\"code-example\"><pre class=\"brush: cpp notranslate\"><code>lm1<span class=\"token operator\">-&gt;</span>properties<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// loc1.location</span>\nlm1<span class=\"token operator\">-&gt;</span>properties<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// loc1.description</span>\nlm2<span class=\"token operator\">-&gt;</span>properties<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span>properties<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// loc2.location.long</span>\n</code></pre></div>\n<p>エンジンは、オブジェクトが特定の形状であることを知っていれば、そのオブジェクトのすべてのプロパティの<em>すべての</em>プロパティの位置を仮定することができます。 特定のプロパティにアクセスするには、安価なポインターを 2 回ほどアクセスするだけでよいのです。 オブジェクトが特定の形状であることを確認するのは、機械語では簡単です。 もしそうであれば、高速なコードを仮定し、そうでなければ、低速な方法をとればよいのです。</p>"}},{"type":"prose","value":{"id":"継承されたプロパティのナイーブな最適化","title":"継承されたプロパティのナイーブな最適化","isH3":false,"content":"<p>多くのプロパティはオブジェクトに<em>直接は</em>存在しません。参照しようとするとしばしばプロトタイプチェーン上のプロパティが見つかります。 プロトタイプのプロパティへのアクセスは、そのプロパティを含むオブジェクトへの <code>prototype</code> フィールドを介した余分な「ホップ」に過ぎません。 正しく最適化するためには、どのオブジェクトもそのプロパティを持たないようにする必要があり、すべてのホップはそのオブジェクトの形状をチェックしなければなりません。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nd<span class=\"token punctuation\">.</span><span class=\"token function\">toDateString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Date.prototype.toDateString</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token class-name\">Pair</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pair</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Pair.prototype.sum</span>\n</code></pre></div>\n<p>エンジンは多くの場合、このクイックアンドダーティーアプローチを採用しています。 しかし、特にパフォーマンスに敏感な JavaScript では、これでは十分ではありません。</p>"}},{"type":"prose","value":{"id":"継承されたプロパティをインテリジェントに最適化","title":"継承されたプロパティをインテリジェントに最適化","isH3":false,"content":"<p>予測可能なプロパティへのアクセスでは、通常、 <code>[[Prototype]]</code> チェーンに沿って一定のホップ数でプロパティを見つけます。間にあるオブジェクトは通常、新しいプロパティを取得しません。最終的なオブジェクトは通常、いかなるプロパティも<a href=\"/ja/docs/Web/JavaScript/Reference/Operators/delete\">削除</a>されません。要するに <strong><code>[[Prototype]]</code> の変更はまれです</strong>。 これらの共通の仮定はすべて、遅いプロトタイプホッピングを避けるために必要です。エンジンによって、継承されたプロパティをインテリジェントに最適化するために、異なるアプローチを選択します。</p>\n<ul>\n  <li>継承されたものを含む <em>ultimate</em> オブジェクトの形状をチェックすることができます。\n    <ul>\n      <li>この場合、形状の一致は、間にあるオブジェクトの <code>[[Prototype]]</code> が変更されていないことを意味しなければなりません。 したがって、あるオブジェクトの <code>[[Prototype]]</code> が変更された場合、その <code>[[Prototype]]</code> の連鎖に沿ったすべてのオブジェクトの形状も変更されなければなりません。\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>    <span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> obj3 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 形状が変化するオブジェクト: obj3, obj2, obj1, Object.prototype</span>\n    obj3<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`\n\n</code></pre></div>\n      </li>\n    </ul>\n  </li>\n  <li>最初にアクセスしたオブジェクトの形状を確認することができます。\n    <ul>\n      <li>: 変更された <code>[[Prototype]]</code> オブジェクトを継承する可能性のあるオブジェクトはすべて、 <code>[[Prototype]]</code> が変化したことを反映して、変更しなければなりません。\n        <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>    <span class=\"token keyword\">var</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> obj2 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> obj3 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 形状が変化するオブジェクト: obj1, obj2, obj3</span>\n    obj1<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`\n\n</code></pre></div>\n      </li>\n    </ul>\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"prototype_の変更の悪影響","title":"<code>[[Prototype]]</code> の変更の悪影響","isH3":false,"content":"<p><code>[[Prototype]]</code> を変更することによる性能への悪影響は、変更の発生時とその後の実行時の 2 つの段階で起こります。 まず、 <strong><code>[[Prototype]]</code> の変更は遅いです</strong>。 第二に、 <strong><code>[[Prototype]]</code> が変化すると、変化した <code>[[Prototype]]</code> オブジェクトと相互作用するコードの速度を低下させます</strong>。</p>","titleAsText":"[[Prototype]] の変更の悪影響"}},{"type":"prose","value":{"id":"prototype_の変更は遅い","title":"<code>[[Prototype]]</code> の変更は遅い","isH3":true,"content":"<p>仕様では <code>[[Prototype]]</code> を変更することは一つの hidden プロパティを変更することだと考えていますが、現実の実装はかなり複雑です。上記の形状を変更する方法は両方とも、 1 つ以上のオブジェクトを調査（および変更）する必要があります。 どちらの方法が変更するオブジェクトの数がより少なくなるかは、作業量に依存します。</p>","titleAsText":"[[Prototype]] の変更は遅い"}},{"type":"prose","value":{"id":"変更された_prototype_は他のコードより速度が低下する","title":"変更された <code>[[Prototype]]</code> は他のコードより速度が低下する","isH3":true,"content":"<p><code>[[Prototype]]</code> を変更することの悪い影響は、変更が完了しても終わりません。プロパティを得検査する多くの操作が、暗黙に <code>[[Prototype]]</code> チェーンが変化しないことを前提としているので、エンジンが変更を検出すると、<em>変更された <code>[[Prototype]]</code> を持つオブジェクトでは、そのオブジェクトのフローが通るすべてのコードを「汚染する」ことになります</em>。この汚染は、変異した <code>[[Prototype]]</code> オブジェクトを観察するすべてのコードに流れ込みます。 最悪のケースに近い例として、次のような動作パターンを考えてみましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// gratuitous mutation</span>\n\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>obj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n  arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> i <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> elt <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span>  elt<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span> <span class=\"token comment\">// pessimized</span>\n           <span class=\"token operator\">?</span> elt\n           <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> elt<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span> <span class=\"token comment\">// pessimized: return value has unknown properties</span>\nc <span class=\"token operator\">=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nc<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span> <span class=\"token comment\">// still pessimized!</span>\n\n<span class=\"token keyword\">var</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span> <span class=\"token comment\">// pessimized</span>\n</code></pre></div>\n<p>（何度も実行されるコードだけが最適化されるため、これらの悪い動作の<em>すべて</em>を引き起こすわけではありません。しかし、「ホット」なコードに出現すれば、あらゆる故障が起こりえます。）</p>\n<p>変更された <code>[[Prototype]]</code> オブジェクトがどこに流れているかを正確に認識することは、多くの場合、複数のスクリプトにまたがっており、非常に難しいことです。 これは、コードと特定の実行時動作の注意深いテキスト分析に依存します。 遠く離れた変更によって微妙に異なる制御フローが発生し、以前は最適だったコードパスが最適でない動作になることがあります。 JavaScript 言語の実装者であっても、遅くなる場所をすべて認識することは不可能です。</p>","titleAsText":"変更された [[Prototype]] は他のコードより速度が低下する"}}],"toc":[{"text":"JavaScript エンジンがプロパティアクセスを最適化する方法","id":"javascript_エンジンがプロパティアクセスを最適化する方法"},{"text":"継承されたプロパティのナイーブな最適化","id":"継承されたプロパティのナイーブな最適化"},{"text":"継承されたプロパティをインテリジェントに最適化","id":"継承されたプロパティをインテリジェントに最適化"},{"text":"<code>[[Prototype]]</code> の変更の悪影響","id":"prototype_の変更の悪影響"}],"summary":"すべての JavaScript オブジェクトは [[Prototype]] を持っています。 オブジェクトのプロパティを取得するには、まずそのオブジェクトを検索し、次にそのオブジェクトの [[Prototype]] を検索し、さらにそのオブジェクトの [[Prototype]] を検索し、プロパティが見つかるかチェーンが終了するまで検索します。 [[Prototype]] チェーンは特にオブジェクトの継承に有用です。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","source":{"folder":"ja/conflicting/web/javascript/reference/global_objects/object/setprototypeof","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/conflicting/web/javascript/reference/global_objects/object/setprototypeof/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"pageTitle":"[[Prototype]] の変更の性能上の危険性 | MDN","noIndexing":true}}