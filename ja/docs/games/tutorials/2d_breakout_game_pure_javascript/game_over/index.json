{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"ゲームオーバー","mdn_url":"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over","locale":"ja","native":"日本語","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Web のゲーム開発紹介</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Introduction\">Web のゲーム開発紹介</a></li>\n              <li><a href=\"/ja/docs/Games/Anatomy\">ビデオゲームとの違い</a></li>\n              <li><a href=\"/ja/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>ツール</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/ja/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/ja/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/ja/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/ja/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/ja/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/ja/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/ja/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/ja/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/ja/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>ゲーム開発テクニック</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Techniques/Async_scripts\">asm.js の同期スクリプトを利用する</a></li>\n              <li><a href=\"/ja/docs/Web/Apps/Developing/Optimizing_startup_performance\">起動パフォーマンスを最適化する</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/WebRTC_data_channels\">ピア通信チャンネルとして WebRTC を利用する</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Efficient_animation_for_web_games\">Web ゲームの効率的なアニメーション</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Audio_for_Web_Games\">Web ゲーム向けの音</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/2D_collision_detection\">2D 衝突検出</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Tilemaps\">タイルとタイルマップの概要</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Web上の 3D ゲームの概要</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web\">Web上の 3D ゲームの概要</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Basic_theory\">基本の 3D理論の説明</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">A-Frame</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Babylon.js</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">PlayCanvas を利用した基本的なデモの制作</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Three.js を使った基本的なデモ製作</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_collision_detection\">3D 衝突検出の概要</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">THREE.js を使ったバウンディングボリューム衝突検出</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>チュートリアル</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">そのままの JavaScript を使ったブロックくずしゲーム</a></li>\n              <li><a href=\"/ja/docs/Games/Tutorials/2D_breakout_game_Phaser\">Phaser を使ったブロックくずしゲーム</a></li>\n              <li><a href=\"/ja/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">デバイス回転方向を使った 2D 迷路ゲーム</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">Phaser を使った 2D プラットフォームゲーム</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>ゲームを公開する</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Publishing_games\">ゲームを公開するには</a></li>\n              <li><a href=\"/ja/docs/Games/Publishing_games/Game_distribution\">ゲームの配信</a></li>\n              <li><a href=\"/ja/docs/Games/Publishing_games/Game_promotion\">ゲームのプロモーション</a></li>\n              <li><a href=\"/ja/docs/Games/Publishing_games/Game_monetization\">ゲームのマネタイズ</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls\">« 前のページ</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field\">次のページ »</a></li>\n</ul>\n<p>これは、<a href=\"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">ゲーム開発キャンバスチュートリアル</a> の 10 ステップ中 <strong>5 ステップ目</strong>になります。このレッスンを終えた後のソースコードは、<a href=\"https://github.com/end3r/Gamedev-Canvas-workshop/blob/gh-pages/lesson05.html\" class=\"external\" rel=\" noopener\">Gamedev-Canvas-workshop/lesson5.html</a>で見ることができます。</p>\n<p>ボールが壁に当たって跳ねているのを見たり、パドルを移動させたりできるのは楽しいのですが、それ以外は何もせず、ゲームの進行や最終目標がありません。ゲームプレイの観点からは、負けることがあってもいいのではないでしょうか。ブロック崩しで負ける理屈は簡単です。パドルでボールを飛ばして画面の下端へ到達させたらゲームオーバーです。</p>"}},{"type":"prose","value":{"id":"ゲームオーバーを実装する","title":"ゲームオーバーを実装する","isH3":false,"content":"<p>自分のゲームにゲームオーバーを実装してみましょう。第 3 章ではボールを壁で跳ね返るようにしました。以下はその引用です。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token operator\">-</span>ballRadius <span class=\"token operator\">||</span> x <span class=\"token operator\">+</span> dx <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  dx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dx<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span>ballRadius <span class=\"token operator\">||</span> y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>4 辺全てでボールを弾ませるのではなく、 3 辺、すなわち上端と左右のみで跳ね返るようにしましょう。底を打ったときゲームは終わりになります。 2 番目の if 節を編集して、ボールがキャンバスの下端で衝突したときにゲームオーバー状態が発動する if else 節にしましょう。ここでは簡単に、アラートメッセージを表示して、ページの再読み込みによりゲームを再開するだけにしましょう。</p>\n<p>まず、 <code>setInterval()</code> を最初に呼び出しているところを置き換えます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>置き換えるとこうなります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> interval <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>次に 2 番目の if 節を次の内容で置き換えましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span>ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GAME OVER\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Needed for Chrome to end game</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"パドルをボールに当てる","title":"パドルをボールに当てる","isH3":false,"content":"<p>このレッスンの最後に、ボールとパドルの間に何らかの衝突判定を作成し、ボールがパドルで跳ねてプレイエリアに戻れるようにします。最も簡単なのは、ボールの中心がパドルの左端と右端の間にあるかどうかをチェックすることです。最後に修正したコードを再び以下のように更新してください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&lt;</span> ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy <span class=\"token operator\">&gt;</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token operator\">-</span>ballRadius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;</span> paddleX <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;</span> paddleX <span class=\"token operator\">+</span> paddleWidth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dy <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>dy<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GAME OVER\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ボールがキャンバスの下端に当たっていたら、パドルにも当たっているかどうか確認します。もしパドルに当たっていたら、思ったとおりにボールは弾みます。当たらなかったら、先ほどと同じようにゲームオーバーになります。</p>"}},{"type":"prose","value":{"id":"自分のコードと比べる","title":"自分のコードと比べる","isH3":false,"content":"<p>自分のコードと比べられるように、実際に動くコードを以下に示します。</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"395\" src=\"https://jsfiddle.net/raymondjplante/L61c9y50/embedded/\" loading=\"lazy\"></iframe></p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> ボールがパドルに当たったときに速く動くようにしましょう。</p>\n</div>"}},{"type":"prose","value":{"id":"次のステップ","title":"次のステップ","isH3":false,"content":"<p>今のところかなり順調に進歩してきていて、ゲームも負けるようになったことでもっと遊ぶ価値が感じられるようになってきました。第 6 章の<a href=\"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field\">ブロックのかたまりを作る</a>に進み、ボールが壊せるブロックを作りましょう。</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Paddle_and_keyboard_controls\">« 前のページ</a></li>\n    <li><a class=\"button minimal\" href=\"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Build_the_brick_field\">次のページ »</a></li>\n</ul>"}}],"toc":[{"text":"ゲームオーバーを実装する","id":"ゲームオーバーを実装する"},{"text":"パドルをボールに当てる","id":"パドルをボールに当てる"},{"text":"自分のコードと比べる","id":"自分のコードと比べる"},{"text":"次のステップ","id":"次のステップ"}],"summary":"これは、ゲーム開発キャンバスチュートリアル の 10 ステップ中 5 ステップ目になります。このレッスンを終えた後のソースコードは、Gamedev-Canvas-workshop/lesson5.htmlで見ることができます。","popularity":0.0002,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Game over","locale":"en-US","native":"English (US)"},{"title":"Fin del juego","locale":"es","native":"Español"},{"title":"Fin de partie","locale":"fr","native":"Français"},{"title":"게임 오버","locale":"ko","native":"한국어"},{"title":"Game over","locale":"ru","native":"Русский"},{"title":"游戏结束","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"ja/games/tutorials/2d_breakout_game_pure_javascript/game_over","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/games/tutorials/2d_breakout_game_pure_javascript/game_over/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Games","title":"ゲーム開発"},{"uri":"/ja/docs/Games/Tutorials","title":"チュートリアル"},{"uri":"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript","title":"純粋な JavaScript を使ったブロック崩しゲーム"},{"uri":"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Game_over","title":"ゲームオーバー"}],"pageTitle":"ゲームオーバー - ゲーム開発 | MDN","noIndexing":false}}