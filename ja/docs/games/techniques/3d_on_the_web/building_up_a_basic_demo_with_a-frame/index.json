{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"A-Frame を使った基本的なデモの作成","mdn_url":"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame","locale":"ja","native":"日本語","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Web のゲーム開発紹介</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Introduction\">Web のゲーム開発紹介</a></li>\n              <li><a href=\"/ja/docs/Games/Anatomy\">ビデオゲームとの違い</a></li>\n              <li><a href=\"/ja/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>ツール</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/ja/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/ja/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/ja/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/ja/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/ja/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/ja/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/ja/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/ja/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/ja/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>ゲーム開発テクニック</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Techniques/Async_scripts\">asm.js の同期スクリプトを利用する</a></li>\n              <li><a href=\"/ja/docs/Web/Apps/Developing/Optimizing_startup_performance\">起動パフォーマンスを最適化する</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/WebRTC_data_channels\">ピア通信チャンネルとして WebRTC を利用する</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Efficient_animation_for_web_games\">Web ゲームの効率的なアニメーション</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Audio_for_Web_Games\">Web ゲーム向けの音</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/2D_collision_detection\">2D 衝突検出</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Tilemaps\">タイルとタイルマップの概要</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Web上の 3D ゲームの概要</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web\">Web上の 3D ゲームの概要</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Basic_theory\">基本の 3D理論の説明</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">A-Frame</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Babylon.js</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">PlayCanvas を利用した基本的なデモの制作</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Three.js を使った基本的なデモ製作</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_collision_detection\">3D 衝突検出の概要</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">THREE.js を使ったバウンディングボリューム衝突検出</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>チュートリアル</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">そのままの JavaScript を使ったブロックくずしゲーム</a></li>\n              <li><a href=\"/ja/docs/Games/Tutorials/2D_breakout_game_Phaser\">Phaser を使ったブロックくずしゲーム</a></li>\n              <li><a href=\"/ja/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">デバイス回転方向を使った 2D 迷路ゲーム</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">Phaser を使った 2D プラットフォームゲーム</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>ゲームを公開する</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Publishing_games\">ゲームを公開するには</a></li>\n              <li><a href=\"/ja/docs/Games/Publishing_games/Game_distribution\">ゲームの配信</a></li>\n              <li><a href=\"/ja/docs/Games/Publishing_games/Game_promotion\">ゲームのプロモーション</a></li>\n              <li><a href=\"/ja/docs/Games/Publishing_games/Game_monetization\">ゲームのマネタイズ</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a>&nbsp;API と&nbsp;<a href=\"/ja/docs/Web/API/WebGL_API\">WebGL</a>&nbsp;API によって、ウェブブラウザー内で仮想現実 (VR) 体験を作成し始めることが可能になっていますが、コミュニティはもっと簡単に作れるツールやライブラリーが現れるのを待っています。 Mozilla の&nbsp;<a href=\"https://aframe.io/\" class=\"external\" rel=\" noopener\">A-Frame</a>&nbsp;フレームワークは、ウェブ開発者が慣れ親しんでいるシステムを用いて&nbsp;3D VR 空間を構築するマークアップ言語を提供しています。このシステムはゲーム開発のコーディング原則に従っています。これはプロトタイプやデモを、大量の JavaScript や GLSL を書かずに、迅速にうまく構築するのに役立ちます。この記事では A-Frame をどうやって起動するか、そしてそれをつかって簡単なデモを構築する方法を説明します。</p>"}},{"type":"prose","value":{"id":"高水準の概要","title":"高水準の概要","isH3":false,"content":"<p>A-Frame の現在のバージョンは 0.3.2 で、まだまだ実験的な段階ですが、既に動作しており、すぐにブラウザーで試すことができます。デスクトップやモバイル (iOS や Android) の&nbsp;Oculus Rift、GearVR、HTC Vive で動作します。</p>\n<p>A-Frame は&nbsp;<a href=\"/ja/docs/Web/API/WebGL_API\">WebGL</a>&nbsp;上に構築されていて、アプリケーション内で使える構築済みコンポーネント (モデル、ビデオプレイヤー、スカイボックス、ジオメトリー、コントロール、カーソルなど）を持っています。A-Frame は、ゲーム開発業界でよく知られている<a href=\"https://ja.wikipedia.org/wiki/%E3%82%A8%E3%83%B3%E3%83%86%E3%82%A3%E3%83%86%E3%82%A3%E3%83%BB%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%83%BB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0\" class=\"external\" rel=\" noopener\">エンティティ-コンポーネントシステム</a>に基づいていますが、マークアップ構造に慣れたウェブ開発者を対象としていて、 JavaScript による操作が可能です。最終的には、既定で VR に対応した 3D ウェブ体験が可能になります。</p>"}},{"type":"prose","value":{"id":"環境設定","title":"環境設定","isH3":false,"content":"<p>A-Frame で何かを作るために環境設定を始めましょう。デモを構築しながら動かしていきます。次のことから始めてください。</p>\n<ul>\n  <li>WebGL に十分対応している最新のブラウザー (もし利用可能な VR ハードウェアがある場合は WebVR に対応しているブラウザー)、例えば最新の Firefox や Chrome を使っているか確認してください。 <a href=\"https://www.mozilla.org/en-US/firefox/channel/desktop/\" class=\"external\" rel=\" noopener\">Firefox Nightly</a> または Chrome (v54 以降) をダウンロードしてください。</li>\n  <li>(必要に応じて) Oculus Rift や Google Cardboard のような VR 機器をセットアップします。</li>\n  <li>プロジェクトを保存する新しいディレクトリーを作成します。</li>\n  <li>そのディレクトリーに、最新の <a href=\"https://github.com/aframevr/aframe/tree/master/dist\" class=\"external\" rel=\" noopener\">A-Frame JavaScript ライブラリーファイル</a> (GitHub 最新の安定開発版リポジトリーを確認してください) のコピーを保存します。</li>\n  <li>別のタブで <a href=\"https://aframe.io/docs/\" class=\"external\" rel=\" noopener\">A-Frame documentation</a> を開いておきます — 参照するのに便利なので。</li>\n</ul>"}},{"type":"prose","value":{"id":"html_の構造","title":"HTML の構造","isH3":false,"content":"<p>最初のステップは HTML 文書を作成することです — 先ほど作成したプロジェクトディレクトリーの中に、新しく <code>index.html</code> ファイルを作成して、その中に次の HTML を記述して保存してください。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>MDN Games: A-Frame demo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>aframe.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!-- HTML goes here --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>これは、文書の <code>charset</code> や <a href=\"/ja/docs/Web/HTML/Element/title\"><code>&lt;title&gt;</code></a> のような基本的な情報を含んでいます。<a href=\"/ja/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 要素は、 A-Frame フレームワークをページに取り込みます。例のコードは <a href=\"/ja/docs/Web/HTML/Element/body\"><code>&lt;body&gt;</code></a> 要素の中に書くことにします。</p>"}},{"type":"prose","value":{"id":"シーンの初期化","title":"シーンの初期化","isH3":true,"content":"<p>シーンは、すべてが起こる場所です。このデモでは新しいオブジェクトを作成したら、それら全てをシーンへ追加していきます。そうすることで、それらのオブジェクトが画面上に表示されるようになります。 A-Frame の中では、シーンは <a href=\"https://aframe.io/docs/core/scene.html\" class=\"external\" rel=\" noopener\">Scene エンティティ</a>で表現されます。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> エンティティは任意の要素です — box や cylinder や cone のようなオブジェクトだけでなく、camera、light、sound sourceもエンティティです。</p>\n</div>\n<p><code>&lt;body&gt;</code> 要素の中に <code>&lt;a-scene&gt;</code> 要素を追加して、シーンを作成しましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-scene</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-scene</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"立方体の追加","title":"立方体の追加","isH3":true,"content":"<p>立方体をシーンに追加するには、 <code>&lt;a-scene&gt;</code> 要素の中に単純な <a href=\"https://aframe.io/docs/primitives/a-box.html\" class=\"external\" rel=\" noopener\"><code>&lt;a-box&gt;</code></a> 要素を追加します。今すぐ追加してみましょう。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-box</span>\n  <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#0095DD<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 1 0<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">rotation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20 40 0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-box</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>いくつかの定義済み引数、 <code>color</code>、<code>position</code>、<code>rotation</code> が含まれています。かなり分かりやすいと思いますが、立方体の色や 3D シーン内の位置、そして立方体の回転状態を定義しています。</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 距離の値 (例えば、立方体の y 方向の位置) は単位がなく、シーンに適切と思える好きな単位 — ミリメートル、メートル、フィート、マイル — と考えてください。あなた次第です。</p>\n</div>"}},{"type":"prose","value":{"id":"背景の追加_スカイボックス","title":"背景の追加: スカイボックス","isH3":true,"content":"<p>スカイボックス (sky box) は 3D 空間における背景で、 <a href=\"https://aframe.io/docs/primitives/a-sky.html\" class=\"external\" rel=\" noopener\"><code>&lt;a-sky&gt;</code></a> 要素で表現します。このデモでは、単純な背景色を使いますが、画像などを使うこともできます。周りを見回したときに晴れた空なのか、木造の納屋なのか、どんな場所にいるか好きな印象を与えることができます! <code>&lt;a-cube&gt;</code> 要素の直前に次の HTML を追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-sky</span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#DDDDDD<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-sky</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>ここで、コードを保存してブラウザーを更新すると、設定した背景の画面上に立方体が見えるはずです。</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame/cube.png\" alt=\"\" width=\"600\" height=\"320\" loading=\"lazy\">\n</p>\n<p>ここまでで作ってきたコードは次の通りです。</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"350\" src=\"https://jsfiddle.net/end3r/m85148b4/embedded/\" loading=\"lazy\"></iframe></p>\n<p><a href=\"https://github.com/end3r/MDN-Games-3D/blob/gh-pages/A-Frame/cube.html\" class=\"external\" rel=\" noopener\">Github 上で確認</a>することもできます。</p>\n<p>A-Frame は必要となるものをすべてセットアップしてくれます。</p>\n<ul>\n  <li>既定のの光源やカメラが含まれているので、立方体が見えています。</li>\n  <li>コントロールも既に動作しています。マウスを使って周りを見回したり、キーボードで移動することができます ( <kbd>W</kbd>、<kbd>A</kbd>、<kbd>S</kbd>、<kbd>D</kbd> キーを試してください)。</li>\n  <li>VRモードに入る (\"Enter VR mode\") ボタンも画面右下にあり、VR ハードウェアがセットアップされて使える状態になっていれば、ステレオ画面分割されたフル画面モードへ移行できます。</li>\n</ul>"}},{"type":"prose","value":{"id":"カメラの指定","title":"カメラの指定","isH3":true,"content":"<p>カメラエンティティは、 <a href=\"https://aframe.io/docs/primitives/a-camera.html\" class=\"external\" rel=\" noopener\"><code>&lt;a-camera&gt;</code></a> 要素をシーンへ追加することで作成することもできます。カメラの位置を明示的に指定することができ、形状が見えるようにシーンの中心から少しだけ後ろに移動させています。 <code>&lt;/a-scene&gt;</code> 要素を閉じる前にこれを追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-camera</span>\n  <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 1 4<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">cursor-visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">cursor-scale</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">cursor-color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#0095DD<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">cursor-opacity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-camera</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p><code>cursor-*</code> 属性を使って、カメラにカーソルを設定することもできます (既定では非表示) — 見やすくするためにカーソルのスケールを設定するだけでなく、背後にあるオブジェクトを隠してしまうのを防ぐために色や透明度を設定することもできます。</p>"}},{"type":"prose","value":{"id":"ライトの追加","title":"ライトの追加","isH3":true,"content":"<p>A-Frame の基本的な光源タイプは directional と ambient です。最初のタイプはシーン内のどこかに配置された平行光源で、2つ目のタイプは最初のタイプから反射しますのでより自然に見えます; このライトはグローバルにセットできます。新しいコードを既存コードの下に追加します — ここでは標準的な <code>&lt;a-light&gt;</code> 要素を使います。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-light</span>\n  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>directional<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#FFF<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">intensity</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.5<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1 1 2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-light</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-light</span>\n  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ambient<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#FFF<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-light</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>directional ライトは白色で、強度を <code>0.5</code> にセットし、位置 <code>-1 1 2</code> に配置しています。ambient ライトは色のみ指定することができ、これも白にしています。</p>"}},{"type":"prose","value":{"id":"もう少し高度なジオメトリーの追加","title":"もう少し高度なジオメトリーの追加","isH3":true,"content":"<p>ここまでにシーンに立方体を追加できました。それでは、もう少し図形を追加してみましょう。 <code>&lt;a-cube&gt;</code> のような既定のエンティティに制限されているわけではありません — <code>&lt;a-entity&gt;</code> を用いて、独自の複雑な形状を作成することができます。トーラスを追加してみましょう — 次の要素を既存コードの下に追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-entity</span>\n  <span class=\"token attr-name\">geometry</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n    primitive: torus;\n    radius: 1;\n    radiusTubular: 0.1;\n    segmentsTubular: 12;<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">rotation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10 0 0<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-3 1 0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-entity</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>ここで追加したエンティティは <a href=\"https://aframe.io/docs/components/geometry.html#Torus\" class=\"external\" rel=\" noopener\">トーラスプリミティブ</a>で、トーラス図形を表します。図形に幾つかの初期値を与えています。トーラスの外側エッジの半径、チューブの半径、チューブの円周方向の分割数をそれぞれ指定します。回転と位置は、今までに見てきたものと同様にセットしました。</p>"}},{"type":"prose","value":{"id":"マテリアルの定義","title":"マテリアルの定義","isH3":true,"content":"<p>シーンにトーラスが表示されましたが、色があまり良くありません — エンティティの見た目を定義するには<a href=\"https://aframe.io/docs/components/material.html\" class=\"external\" rel=\" noopener\">マテリアル(材質)</a> を作成する必要があります。 <code>&lt;a-entity&gt;</code> を次のように編集して、トーラスの見た目を定義します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-entity</span>\n  <span class=\"token attr-name\">geometry</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n    primitive: torus;\n    radius: 1;\n    radiusTubular: 0.1;\n    segmentsTubular: 12;<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">material</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n    color: #EAEFF2;\n    roughness: 0.1;\n    metalness: 0.5;<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">rotation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10 0 0<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-3 1 0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-entity</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>新しく追加した <code>material</code> 属性では、マテリアルの <code>color</code> と、 <code>roughness</code> (表面の粗いマテリアルは、滑らかなマテリアルよりも反射光の方向が散らばります)、<code>metalness</code> (マテリアルがどの程度金属っぽいか) をセットしています。</p>"}},{"type":"prose","value":{"id":"mix_のための_javascript_の追加","title":"mix のための JavaScript の追加","isH3":false,"content":"<p>JavaScript で作成したエンティティをシーンへ追加することもできますので、その機能を使って 3 つ目の図形として円柱を追加してみましょう。 <code>&lt;body&gt;</code> 要素の最後、つまり <code>&lt;a-scene&gt;</code> の直後に、新たに <a href=\"/ja/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> 要素を追加し、その内側に次の JaveScript コードを記述します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> scene <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a-scene'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> cylinder <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a-cylinder'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncylinder<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#FF9500'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncylinder<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncylinder<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'radius'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0.75'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncylinder<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'position'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3 1 0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscene<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>cylinder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>まず、シーンハンドラーへの参照を取得し、次に円柱要素を A-Frame エンティティとして作成しています。その後、適切な属性を設定します。 <code>color</code>、<code>height</code>、<code>radius</code>、<code>position</code> です。最後の行では、新しく作成された円柱をシーンに追加します。これで、 A-Frame を使って 3 つの異なる図形を作成することができました。今のところ、こんな感じです。</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame/shapes.png\" alt=\"\" width=\"600\" height=\"320\" loading=\"lazy\">\n</p>\n<p>数行の HTML と JavaScript でこのようなシーンが作成できてしまうなんて素晴らしいですね。</p>"}},{"type":"prose","value":{"id":"アニメーション","title":"アニメーション","isH3":false,"content":"<p><code>rotation</code> や <code>position</code> を使ってシーン上の形状を動かしてきましたが、拡大縮小をすることもできます。<a href=\"https://aframe.io/docs/core/animation.html\" class=\"external\" rel=\" noopener\">アニメーション</a>するイリュージョンを作成するためにこれらの属性を操作できます。</p>"}},{"type":"prose","value":{"id":"回転","title":"回転","isH3":true,"content":"<p>特別な <a href=\"https://aframe.io/docs/core/animation.html\" class=\"external\" rel=\" noopener\"><code>&lt;a-animation&gt;</code></a> というエンティティがあり、要素のアニメーションを手助けしてくれます。下記の <code>&lt;a-animation&gt;</code> 要素を <code>&lt;a-box&gt;</code> 要素の子要素として追加してください。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-box</span>\n  <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#0095DD<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">rotation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20 40 0<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 1 0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-animation</span>\n    <span class=\"token attr-name\">attribute</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rotation<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">from</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20 0 0<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20 360 0<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">direction</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alternate<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4000<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">repeat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">easing</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ease<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-animation</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-box</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>他のエンティティでも同様に、アニメーション用のキープロパティを定義できます。ここでは <code>rotation</code> 属性を <code>20 0 0</code> から <code>20 360 0</code> へとアニメーションさせているので、1周回転することになります。アニメーションの方向 (direction) は、alternate に設定されているため、順方向にアニメーションが再生されます。継続時間 (duration) を 4 秒に、そして繰り返し (repeat) がずっと続く (indefinite) ように設定してします。アニメーションの easing は <code>ease</code> を使っています。これは内部的に実装されている <a href=\"https://github.com/tweenjs/tween.js/\" class=\"external\" rel=\" noopener\">tween.js</a> によって実行されます。</p>"}},{"type":"prose","value":{"id":"拡大縮小","title":"拡大縮小","isH3":true,"content":"<p>エンティティのアニメーションは、このデモで使ったトーラスのようなカスタムジオメトリーにも同じように追加することができます。次に示す <code>&lt;a-animation&gt;</code> 要素をトーラスへ追加します。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-entity</span>\n  <span class=\"token attr-name\">geometry</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n    primitive: torus;\n    radius: 1;\n    radiusTubular: 0.1;\n    segmentsTubular: 12;<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">material</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n    color: #EAEFF2;\n    roughness: 0.1;\n    metalness: 0.5;<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">rotation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10 0 0<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-3 1 0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-animation</span>\n    <span class=\"token attr-name\">attribute</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>scale<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1 0.5 1<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">direction</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alternate<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">dur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2000<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">repeat</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>indefinite<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">easing</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>linear<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-animation</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-entity</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>このトーラスをアニメーションさせる対象の属性は <code>scale</code> です。初期のデフォルトスケールは <code>1 1 1</code> で、それを <code>1 0.5 1</code> にアニメーションさせていますので、 <code>y</code> 軸が <code>1</code> から <code>0.5</code> へスケールが変化します。easing には <code>linear</code> を使っています。direction を <code>alternate</code> にセットすることで、 2 秒かけてスケールが <code>0.5</code> へ変化したあと <code>1</code> へと戻ります。再度、repeat は indefinite を指定して無限に繰り返す設定にしています。</p>"}},{"type":"prose","value":{"id":"移動","title":"移動","isH3":true,"content":"<p>3 つ目の図形の位置を変えるには、 <code>&lt;a-animation&gt;</code> を使用することもできますが、代わりに JavaScript を使用することもできます。次のコードを <code>&lt;script&gt;</code> タグの末尾に追加してください。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  t <span class=\"token operator\">+=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cylinder<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'position'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3 '</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">' 0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>円柱の位置を毎フレーム更新するために <code>render()</code> 関数を使っています。<code>y</code> 軸に与える値を変更して、それが移動にどんな影響をあたえるか試してみてください。</p>"}},{"type":"prose","value":{"id":"まとめ","title":"まとめ","isH3":false,"content":"<p>すべて適切にレンダリングされてアニメーションしていますね。おめでとう、あなたの最初の A-Frame シーンが構築できました! 最終版がどのように見えて、どのように動くかは、ここで確認できます。</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"350\" src=\"https://jsfiddle.net/end3r/sq94qd6e/embedded/\" loading=\"lazy\"></iframe></p>\n<p>利用可能な VR 機器を持っていれば、それを使ってあなたのシーンを試す良いタイミングです。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> <a href=\"https://github.com/end3r/MDN-Games-3D/blob/gh-pages/A-Frame/shapes.html\" class=\"external\" rel=\" noopener\">Github で確認</a>することもできます。</p>\n</div>\n<p>思ったより簡単だったでしょう？ A-Frame はウェブ開発者を対象に、簡単に使用できるウェブマークアップと、それがもたらす JavaScript 操作などのあらゆる利点を提供します。簡単に始められるだけでなく、高度なコンセプトや、ブラウザー間の差異などを扱うための強力な API も提供しています。対応する VR 機器の数と同じように、コミュニティも増えてきており、このようなフレームワークの実験を始めるには絶好の機会です。</p>"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"https://aframe.io/\" class=\"external\" rel=\" noopener\">A-Frame ウェブサイト</a></li>\n  <li><a href=\"https://mixedreality.mozilla.org/\" class=\"external\" rel=\" noopener\">Mozilla Mixed Reality ウェブサイト</a></li>\n  <li><a href=\"https://aframe.io/blog/2015/12/16/introducing-aframe/\" class=\"external\" rel=\" noopener\">Introducing A-Frame 0.1.0 article</a></li>\n  <li><a href=\"https://aframevr.tumblr.com/\" class=\"external\" rel=\" noopener\">Made with A-Frame Tumblr</a></li>\n  <li><a href=\"https://github.com/ngokevin/aframe-physics-components\" class=\"external\" rel=\" noopener\">A-Frame physics plugin</a></li>\n  <li><a href=\"https://github.com/donmccurdy/aframe-gamepad-controls\" class=\"external\" rel=\" noopener\">A-Frame gamepad controls plugin</a></li>\n</ul>"}}],"toc":[{"text":"高水準の概要","id":"高水準の概要"},{"text":"環境設定","id":"環境設定"},{"text":"HTML の構造","id":"html_の構造"},{"text":"mix のための JavaScript の追加","id":"mix_のための_javascript_の追加"},{"text":"アニメーション","id":"アニメーション"},{"text":"まとめ","id":"まとめ"},{"text":"関連情報","id":"関連情報"}],"summary":"WebVR API と WebGL API によって、ウェブブラウザー内で仮想現実 (VR) 体験を作成し始めることが可能になっていますが、コミュニティはもっと簡単に作れるツールやライブラリーが現れるのを待っています。 Mozilla の A-Frame フレームワークは、ウェブ開発者が慣れ親しんでいるシステムを用いて 3D VR 空間を構築するマークアップ言語を提供しています。このシステムはゲーム開発のコーディング原則に従っています。これはプロトタイプやデモを、大量の JavaScript や GLSL を書かずに、迅速にうまく構築するのに役立ちます。この記事では A-Frame をどうやって起動するか、そしてそれをつかって簡単なデモを構築する方法を説明します。","popularity":0.0005,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"Building up a basic demo with A-Frame","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/games/techniques/3d_on_the_web/building_up_a_basic_demo_with_a-frame","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/games/techniques/3d_on_the_web/building_up_a_basic_demo_with_a-frame/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Games","title":"ゲーム開発"},{"uri":"/ja/docs/Games/Techniques","title":"ゲーム開発テクニック"},{"uri":"/ja/docs/Games/Techniques/3D_on_the_web","title":"ウェブ上の 3D ゲームの概要"},{"uri":"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame","title":"A-Frame を使った基本的なデモの作成"}],"pageTitle":"A-Frame を使った基本的なデモの作成 - ゲーム開発 | MDN","noIndexing":false}}