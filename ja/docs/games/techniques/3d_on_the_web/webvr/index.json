{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebVR — ウェブによる仮想現実","mdn_url":"/ja/docs/Games/Techniques/3D_on_the_web/WebVR","locale":"ja","native":"日本語","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Web のゲーム開発紹介</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Introduction\">Web のゲーム開発紹介</a></li>\n              <li><a href=\"/ja/docs/Games/Anatomy\">ビデオゲームとの違い</a></li>\n              <li><a href=\"/ja/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>ツール</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/ja/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/ja/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/ja/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/ja/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/ja/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/ja/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/ja/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/ja/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/ja/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/ja/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/ja/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>ゲーム開発テクニック</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Techniques/Async_scripts\">asm.js の同期スクリプトを利用する</a></li>\n              <li><a href=\"/ja/docs/Web/Apps/Developing/Optimizing_startup_performance\">起動パフォーマンスを最適化する</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/WebRTC_data_channels\">ピア通信チャンネルとして WebRTC を利用する</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Efficient_animation_for_web_games\">Web ゲームの効率的なアニメーション</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Audio_for_Web_Games\">Web ゲーム向けの音</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/2D_collision_detection\">2D 衝突検出</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Tilemaps\">タイルとタイルマップの概要</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Web上の 3D ゲームの概要</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web\">Web上の 3D ゲームの概要</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Basic_theory\">基本の 3D理論の説明</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">A-Frame</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Babylon.js</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">PlayCanvas を利用した基本的なデモの制作</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Three.js を使った基本的なデモ製作</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_collision_detection\">3D 衝突検出の概要</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">THREE.js を使ったバウンディングボリューム衝突検出</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/ja/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>チュートリアル</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">そのままの JavaScript を使ったブロックくずしゲーム</a></li>\n              <li><a href=\"/ja/docs/Games/Tutorials/2D_breakout_game_Phaser\">Phaser を使ったブロックくずしゲーム</a></li>\n              <li><a href=\"/ja/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">デバイス回転方向を使った 2D 迷路ゲーム</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">Phaser を使った 2D プラットフォームゲーム</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>ゲームを公開する</summary>\n            <ol>\n              <li><a href=\"/ja/docs/Games/Publishing_games\">ゲームを公開するには</a></li>\n              <li><a href=\"/ja/docs/Games/Publishing_games/Game_distribution\">ゲームの配信</a></li>\n              <li><a href=\"/ja/docs/Games/Publishing_games/Game_promotion\">ゲームのプロモーション</a></li>\n              <li><a href=\"/ja/docs/Games/Publishing_games/Game_monetization\">ゲームのマネタイズ</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>仮想現実の概念自体は新しいものではありませんが、今ではそれをあるべき姿で機能させるためのテクノロジーと、それをウェブアプリケーションで活用するための JavaScript API があります。 この記事では、ゲームでの使用の観点から WebVR を紹介しています。</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> WebVR API は <a href=\"/ja/docs/Web/API/WebXR_Device_API\">WebXR 機器 API</a> に置き換えられました。 WebVR は標準として承認されることはなく、ごく少数のブラウザーが既定で実装および有効化し、少数の機器に対応していました。</p>\n</div>"}},{"type":"prose","value":{"id":"vr_機器","title":"VR 機器","isH3":false,"content":"<p>Oculus Rift の人気とその他の多くの機器が間もなく市場に登場することで、未来は明るいように見えます。 ゲームをプレイするのに \"十分な\" VR 体験を実現するのに十分なテクノロジーがすでにあります。 Oculus Rift や HTC Vive などのデスクトップ型のものから、 Playstation VR (現時点では WebVR に対応していないことは確かです) を備えたコンソール、Gear VR や Google Cardboard などのモバイルエクスペリエンスまで、選択できる機器はたくさんあります。</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_on_the_web/WebVR/hmds.jpg\" alt=\"\" width=\"600\" height=\"88\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> 詳細については <a href=\"/ja/docs/Web/API/WebVR_API/Concepts\">WebVR の概念</a> をご覧ください。</p>\n</div>"}},{"type":"prose","value":{"id":"webvr_api","title":"WebVR API","isH3":false,"content":"<p><a href=\"/ja/docs/Web/API/WebVR_API\">WebVR API</a> は、コンピューターに接続された VR 機器の情報とヘッドセットの位置/向き/速度/加速度の情報をキャプチャし、それをゲームやその他のアプリケーションで使用できる有用なデータに変換するための中心的な API です。</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> もちろん、ゲームの作成に役立つ他の API もあります。 例えば、コントロール入力用の <a href=\"/ja/docs/Web/API/Gamepad_API\">ゲームパッド API</a> や、モバイルでのディスプレイの方向を扱うための <a href=\"/ja/docs/Web/API/Device_orientation_events/Detecting_device_orientation\">Device Orientation API</a> などです。</p>\n</div>"}},{"type":"prose","value":{"id":"ブラウザーの対応と仕様書の状態","title":"ブラウザーの対応と仕様書の状態","isH3":true,"content":"<p>現在、 WebVR API のブラウザー対応はまだ実験的です — <a href=\"https://www.mozilla.org/en-US/firefox/channel/desktop/\" class=\"external\" rel=\" noopener\">nightly builds of Firefox</a> と <a href=\"https://drive.google.com/folderview?id=0BzudLt22BqGRbW9WTHMtOWMzNjQ&amp;usp=sharing#list\" class=\"external\" rel=\" noopener\">experimental builds of Chrome</a> で動作しますが（Mozilla と Google が一丸となって実装に取り組みます）、遅かれ早かれ通常のビルドで見ることができるようになるでしょう。</p>\n<p><a href=\"%7Chttp://mozvr.github.io/webvr-spec/webvr.html\">WebVR 仕様</a>は、編集者草案の状態にあり、これはまだ変更される可能性があることを意味します。 開発は、Mozilla の <a href=\"https://twitter.com/vvuk\" class=\"external\" rel=\" noopener\">Vladimir Vukicevic</a> と Google の <a href=\"https://twitter.com/tojiro\" class=\"external\" rel=\" noopener\">Brandon Jones</a> が主導しています。 詳細については、 <a href=\"https://mixedreality.mozilla.org/\" class=\"external\" rel=\" noopener\">https://mixedreality.mozilla.org/</a> および <a href=\"https://webvr.info/\" class=\"external\" rel=\" noopener\">WebVR.info</a> のウェブサイトにアクセスしてください。</p>"}},{"type":"prose","value":{"id":"webvr_api_の使用","title":"WebVR API の使用","isH3":true,"content":"<p>WebVR API は、ヘッドセットの両方のレンズに<a href=\"/ja/docs/Web/API/WebVR_API/Concepts#stereoscopic_vision\">立体画像</a>を送信することと、センサーから頭の位置データを受信することの 2 つの概念に基づいており、これら 2 つは <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HMDVRDevice\"><code>HMDVRDevice</code> <small>(en-US)</small></a>（head-mounted display virtual reality device、ヘッドマウントディスプレイ仮想現実機器）と <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PositionSensorVRDevice\"><code>PositionSensorVRDevice</code> <small>(en-US)</small></a> によって処理されます。</p>"}},{"type":"prose","value":{"id":"機器の取得","title":"機器の取得","isH3":true,"content":"<p>コンピューターに接続されている機器に関する情報を取得するには、次のように <a href=\"/ja/docs/Web/API/Navigator/getVRDisplays\"><code>Navigator/getVRDisplays</code></a> メソッドを使用できます。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getVRDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">devices</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> devices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HMDVRDevice</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      gHMD <span class=\"token operator\">=</span> devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gHMD<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> devices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">PositionSensorVRDevice</span>\n         <span class=\"token operator\">&amp;&amp;</span> devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hardwareUnitId <span class=\"token operator\">===</span> gHMD<span class=\"token punctuation\">.</span>hardwareUnitId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        gPositionSensor <span class=\"token operator\">=</span> devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このコードは、利用可能な機器をループして、適切なセンサーをヘッドセットに割り当てます。最初の <code>devices</code> 配列には、接続された機器が含まれており、<a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/HMDVRDevice\"><code>HMDVRDevice</code> <small>(en-US)</small></a> を見つけるためのチェックが行われ、変数 <code>gHMD</code> に割り当てられます。これを使用して、シーンを設定し、目のパラメーターを得て、フィールドオブビュー等を設定することができます。例として</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">setCustomFOV</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">up<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">,</span>down<span class=\"token punctuation\">,</span>left</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> testFOV <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VRFieldOfView</span><span class=\"token punctuation\">(</span>up<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">,</span>down<span class=\"token punctuation\">,</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gHMD<span class=\"token punctuation\">.</span><span class=\"token function\">setFieldOfView</span><span class=\"token punctuation\">(</span>testFOV<span class=\"token punctuation\">,</span>testFOV<span class=\"token punctuation\">,</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span><span class=\"token number\">10000.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><code>gPositionSensor</code> 変数は <a class=\"only-in-en-us\" title=\"Currently only available in English (US)\" href=\"/en-US/docs/Web/API/PositionSensorVRDevice\"><code>PositionSensorVRDevice</code> <small>(en-US)</small></a> を保持します — これを使用して、現在の位置や方向の状態を取得したり（例えば、すべてのフレームでシーンビューを更新したり）、センサーをリセットできます。 例えば、次のコードは画面上の位置情報を出力します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">setView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> posState <span class=\"token operator\">=</span> gPositionSensor<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>hasPosition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    posPara<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Position: x'</span> <span class=\"token operator\">+</span> <span class=\"token function\">roundToTwo</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" y\"</span>\n                                <span class=\"token operator\">+</span> <span class=\"token function\">roundToTwo</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" z\"</span>\n                                <span class=\"token operator\">+</span> <span class=\"token function\">roundToTwo</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    xPos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token constant\">WIDTH</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    yPos <span class=\"token operator\">=</span> posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token constant\">HEIGHT</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">&gt;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      zPos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      zPos <span class=\"token operator\">=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// …</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これを取得するデモの完全な説明と詳細については、<a href=\"/ja/docs/Web/API/WebVR_API/Using_the_WebVR_API\">WebVR API の使い方</a>を参照してください。</p>"}},{"type":"prose","value":{"id":"ツールとテクニック","title":"ツールとテクニック","isH3":false,"content":"<p>最初の WebVR の実験とデモでは、おそらくウェブで最も人気のある 3D エンジンである Three.js を使用しました。 Three.js github で利用可能な <a href=\"https://github.com/mrdoob/three.js/blob/master/examples/js/effects/VREffect.js\" class=\"external\" rel=\" noopener\">VREffect</a> および <a href=\"https://github.com/mrdoob/three.js/blob/master/examples/js/controls/VRControls.js\" class=\"external\" rel=\" noopener\">VRControls</a> 関数を参照して、Three.js で WebVR を実装および処理するのに役立ててください。</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_on_the_web/WebVR/sechelt.jpg\" alt=\"\" width=\"600\" height=\"211\" loading=\"lazy\">\n</p>\n<p>Boris Smus は、<a href=\"http://smus.com/responsive-vr/\" class=\"external\" rel=\" noopener\">レスポンシブ WebVR</a> の概念について書いています。 このコンセプトでは、 VR ハードウェアのないラップトップ、 Oculus Rift を搭載した PC、Google Cardboard に内蔵したスマートフォンなど、さまざまなデバイスで単一のウェブゲームをプレイしながら、それらすべてにユニークで価値のある体験を提供できます。 レスポンシブデザインに似ていますが、 VR の世界に適用されます — 一度書けば VR ヘッドセットで実行できます ... またはそれなしで。 <a href=\"http://github.com/borismus/webvr-boilerplate\" class=\"external\" rel=\" noopener\">WebVR ボイラープレート</a>のソースを確認できます。 これは、WebVR の学習を開始する良い例であり、Web ベースの VR 体験の出発点です。</p>\n<p>WebVR のシンプルなビルディングブロックを提供する <a href=\"https://aframe.io/\" class=\"external\" rel=\" noopener\">A-Frame</a> と呼ばれるマークアップフレームワークもあるため、VRウェブサイトやゲームをすばやく構築して実験できます。 詳細については、<a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">A-Frame を使った基本的なデモの作成</a>というチュートリアルを参照してください。</p>\n<p>没入感は、ゲームプレイやグラフィックスよりも重要です — 体験の \"内側にいる\" と感じる必要があります。 実現するのは簡単ではありませんが、リアルな画像は必要ありません。 それどころか、基本的な形状を高フレームレートで飛び交うだけで、かなりの効果が得られます。 実験が重要なことを覚えておいてください — 特にあなたのゲームに何が有効かを確認してください。</p>"}},{"type":"prose","value":{"id":"webvr_の未来","title":"WebVR の未来","isH3":false,"content":"<p>それは起こっています — 消費者向けデバイスは現在市場に出回っており、Web 上でそれらをサポートする JavaScript API がすでにあります。 今必要なのは、安定した仕様、優れた UX と UI、より優れたハードウェア、より多くのツールとライブラリーです。 そしてそのすべてが間近に迫っています。 WebVR に飛び込んで実験するのに最適な時期です。</p>"}},{"type":"prose","value":{"id":"関連項目","title":"関連項目","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/Web/API/WebVR_API\">WebVR API</a></li>\n  <li><a href=\"/ja/docs/Web/API/WebVR_API/Concepts\">WebVR の概念</a></li>\n  <li><a href=\"/ja/docs/Web/API/WebVR_API/Using_the_WebVR_API\">WebVR API の使い方</a></li>\n  <li><a href=\"/ja/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">A-Frame を使った基本的なデモの作成</a></li>\n</ul>"}}],"toc":[{"text":"VR 機器","id":"vr_機器"},{"text":"WebVR API","id":"webvr_api"},{"text":"ツールとテクニック","id":"ツールとテクニック"},{"text":"WebVR の未来","id":"webvr_の未来"},{"text":"関連項目","id":"関連項目"}],"summary":"仮想現実の概念自体は新しいものではありませんが、今ではそれをあるべき姿で機能させるためのテクノロジーと、それをウェブアプリケーションで活用するための JavaScript API があります。 この記事では、ゲームでの使用の観点から WebVR を紹介しています。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"WebVR — Virtual Reality for the Web","locale":"en-US","native":"English (US)"}],"source":{"folder":"ja/games/techniques/3d_on_the_web/webvr","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/games/techniques/3d_on_the_web/webvr/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/Games","title":"ゲーム開発"},{"uri":"/ja/docs/Games/Techniques","title":"ゲーム開発テクニック"},{"uri":"/ja/docs/Games/Techniques/3D_on_the_web","title":"ウェブ上の 3D ゲームの概要"},{"uri":"/ja/docs/Games/Techniques/3D_on_the_web/WebVR","title":"WebVR — ウェブによる仮想現実"}],"pageTitle":"WebVR — ウェブによる仮想現実 - ゲーム開発 | MDN","noIndexing":false}}