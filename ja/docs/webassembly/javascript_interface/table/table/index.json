{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"WebAssembly.Table() コンストラクター","mdn_url":"/ja/docs/WebAssembly/JavaScript_interface/Table/Table","locale":"ja","native":"日本語","sidebarHTML":"<ol><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects\">標準組み込みオブジェクト</a></strong></li><li><strong><a href=\"/ja/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>メソッド</strong></a><ol><li><a href=\"/ja/docs/WebAssembly/JavaScript_interface/compile\"><code>WebAssembly.compile()</code></a></li><li><a href=\"/ja/docs/WebAssembly/JavaScript_interface/compileStreaming\"><code>WebAssembly.compileStreaming()</code></a></li><li><a href=\"/ja/docs/WebAssembly/JavaScript_interface/instantiate\"><code>WebAssembly.instantiate()</code></a></li><li><a href=\"/ja/docs/WebAssembly/JavaScript_interface/instantiateStreaming\"><code>WebAssembly.instantiateStreaming()</code></a></li><li><a href=\"/ja/docs/WebAssembly/JavaScript_interface/validate\"><code>WebAssembly.validate()</code></a></li></ol></li><li><strong>関連するページ</strong></li><li><strong><a href=\"/ja/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></strong></li><li><strong><a href=\"/ja/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></strong></li><li><strong><a href=\"/ja/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></strong></li><li><strong><a href=\"/ja/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></strong></li><li><strong><a href=\"/ja/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></strong></li><li><strong><a href=\"/ja/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></strong></li><li><strong><a href=\"/ja/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code></a></strong></li><li><strong><a href=\"/ja/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></strong></li><li><strong>継承</strong></li><li><strong><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>プロパティ</strong></a><ol><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>メソッド</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong><code>WebAssembly.Table()</code></strong> コンストラクターは、大きさと要素の型を指定して新しい <code>Table</code> オブジェクトを生成します。</p>"}},{"type":"prose","value":{"id":"構文","title":"構文","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">new</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Table</span><span class=\"token punctuation\">(</span>tableDescriptor<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"引数","title":"引数","isH3":true,"content":"<dl>\n  <dt id=\"tabledescriptor\"><em>tableDescriptor</em></dt>\n  <dd>\n    <p>以下のメンバーを含むことができるオブジェクトです。</p>\n    <dl>\n      <dt id=\"element\"><em>element</em></dt>\n      <dd>\n        <p>文字列で、テーブルに格納される値の型を表します。現時点では、 <code>\"anyfunc\"</code> (関数) の値のみを取ることができます。</p>\n      </dd>\n      <dt id=\"initial\"><em>initial</em></dt>\n      <dd>\n        <p>WebAssembly テーブルの初期の要素数です。</p>\n      </dd>\n      <dt id=\"maximum_省略可\"><em>maximum <span class=\"badge inline optional\">省略可</span></em></dt>\n      <dd>\n        <p>WebAssembly テーブルが拡張することができる最大の要素数です。</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"例外","title":"例外","isH3":true,"content":"<ul>\n  <li><code>tableDescriptor</code> がオブジェクトでない場合は、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> が発生します。</li>\n  <li><code>maximum</code> が設定されており、かつ <code>initial</code> よりも小さい場合は、 <a href=\"/ja/docs/Web/JavaScript/Reference/Global_Objects/RangeError\"><code>RangeError</code></a> が発生します。</li>\n</ul>"}},{"type":"prose","value":{"id":"例","title":"例","isH3":false,"content":""}},{"type":"prose","value":{"id":"新しい_webassembly_table_インスタンスの生成","title":"新しい WebAssembly Table インスタンスの生成","isH3":true,"content":"<p>次の例では (table2.html の<a href=\"https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html\" class=\"external\" rel=\" noopener\">ソースコード</a>と<a href=\"https://mdn.github.io/webassembly-examples/js-api-examples/table2.html\" class=\"external\" rel=\" noopener\">実行例</a>はこちら) 新しく WebAssembly テーブルのインスタンスを、初期の大きさを 2 要素して生成します。それからテーブルの長さと 2 つの要素の中身を (<a href=\"/ja/docs/WebAssembly/JavaScript_interface/Table/get\"><code>Table.prototype.get()</code></a> で取得して) 表示し、長さは 2 で 2 つの要素は共に <a href=\"/ja/docs/Web/JavaScript/Reference/Operators/null\"><code>null</code></a> となります。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> tbl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Table</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">initial</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span><span class=\"token string\">\"anyfunc\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"2\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"null\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// \"null\"</span>\n</code></pre></div>\n<p>それからテーブルを含むインポートオブジェクトを作成します。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> importObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">js</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">tbl</span><span class=\"token operator\">:</span>tbl\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>最終的に、 wasm モジュール (table2.wasm) を <a href=\"/ja/docs/WebAssembly/JavaScript_interface/instantiateStreaming\"><code>WebAssembly.instantiateStreaming()</code></a> メソッドを使用して読み込みインスタンス化します。 table2.wasm モジュールには 2 つの関数 (1 つは 42 を返し、もう 1 つは 83 を返す) が入っており、それぞれをインポートされたテーブルの要素 0 と 1 に格納します。 (<a href=\"https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.wat\" class=\"external\" rel=\" noopener\">テキスト表現</a>をご覧ください)。インスタンス化した後で、テーブルは長さは 2 のままですが、要素には呼び出し可能な<a href=\"/ja/docs/WebAssembly/Exported_functions\">エクスポートされた WebAssembly 関数</a>が入り、 JS から呼び出せるようになりました。</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiateStreaming</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'table2.wasm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> importObject<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>なお、関数呼び出し演算子がアクセサーの後に二重についており (例えば <code>get(0)()</code> を <code>get(0)</code> の代わりに使用)、実際に参照している関数を呼び出して、その中に格納された値をログ出力しています。</p>\n<p>この例は JavaScript からテーブルを生成してアクセスする方法を示していますが、同じテーブルを wasm インスタンスの中から見ることができ、呼び出すこともできます。</p>"}},{"type":"specifications","value":{"title":"仕様書","id":"仕様書","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webassembly.github.io/spec/js-api/#dom-table-table","title":"WebAssembly JavaScript Interface"}],"query":"javascript.builtins.WebAssembly.Table.Table"}},{"type":"browser_compatibility","value":{"title":"ブラウザーの互換性","id":"ブラウザーの互換性","isH3":false,"query":"javascript.builtins.WebAssembly.Table.Table","dataURL":"/ja/docs/WebAssembly/JavaScript_interface/Table/Table/bcd.json"}},{"type":"prose","value":{"id":"関連情報","title":"関連情報","isH3":false,"content":"<ul>\n  <li><a href=\"/ja/docs/WebAssembly\">WebAssembly</a> 概要ページ</li>\n  <li><a href=\"/ja/docs/WebAssembly/Concepts\">WebAssembly の概念</a></li>\n  <li><a href=\"/ja/docs/WebAssembly/Using_the_JavaScript_API\">WebAssembly JavaScript API の使用</a></li>\n</ul>"}}],"toc":[{"text":"構文","id":"構文"},{"text":"例","id":"例"},{"text":"仕様書","id":"仕様書"},{"text":"ブラウザーの互換性","id":"ブラウザーの互換性"},{"text":"関連情報","id":"関連情報"}],"summary":"WebAssembly.Table() コンストラクターは、大きさと要素の型を指定して新しい Table オブジェクトを生成します。","popularity":0,"modified":"2022-10-01T03:41:16.000Z","other_translations":[{"title":"WebAssembly.Table() constructor","locale":"en-US","native":"English (US)"},{"title":"Constructeur WebAssembly.Table()","locale":"fr","native":"Français"}],"source":{"folder":"ja/webassembly/javascript_interface/table/table","github_url":"https://github.com/mdn/translated-content/blob/main/files/ja/webassembly/javascript_interface/table/table/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/921c46a374ab0a9f4cc809af0370f8c412e54701","filename":"index.md"},"parents":[{"uri":"/ja/docs/WebAssembly","title":"WebAssembly"},{"uri":"/ja/docs/WebAssembly/JavaScript_interface","title":"WebAssembly"},{"uri":"/ja/docs/WebAssembly/JavaScript_interface/Table","title":"WebAssembly.Table"},{"uri":"/ja/docs/WebAssembly/JavaScript_interface/Table/Table","title":"WebAssembly.Table() コンストラクター"}],"pageTitle":"WebAssembly.Table() コンストラクター - WebAssembly | MDN","noIndexing":false}}