{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"webRequest.StreamFilter.ondata","mdn_url":"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/StreamFilter/ondata","locale":"en-US","native":"English (US)","sidebarHTML":"\n  <ol>\n    <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions\"><strong>Browser extensions</strong></a></li>\n    <li class=\"toggle\">\n      <details>\n        <summary>Getting started</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/What_are_WebExtensions\">What are extensions?</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Your_first_WebExtension\">Your first extension</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Your_second_WebExtension\">Your second extension</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Anatomy_of_a_WebExtension\">Anatomy of an extension</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Examples\">Example extensions</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/What_next_\">What next?</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>Concepts</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Using_the_JavaScript_APIs\">Using the JavaScript APIs</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_scripts\">Content scripts</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Match_patterns\">Match patterns</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Working_with_files\">Working with files</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Internationalization\">Internationalization</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy\">Content Security Policy</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Native_messaging\">Native messaging</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Differences_between_API_implementations\">Differences between API implementations</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Chrome_incompatibilities\">Chrome incompatibilities</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>User interface</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/user_interface\">User Interface</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/user_interface/Browser_action\">Toolbar button</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/user_interface/Page_actions\">Address bar button</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/user_interface/Sidebars\">Sidebars</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/user_interface/Context_menu_items\">Context menu items</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/user_interface/Options_pages\">Options page</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/user_interface/Extension_pages\">Extension pages</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/user_interface/Notifications\">Notifications</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/user_interface/Omnibox\">Address bar suggestions</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/user_interface/devtools_panels\">Developer tools panels</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary>How to</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Intercept_HTTP_requests\">Intercept HTTP requests</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Modify_a_web_page\">Modify a web page</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Safely_inserting_external_content_into_a_page\">Insert external content</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Sharing_objects_with_page_scripts\">Share objects with page scripts</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Add_a_button_to_the_toolbar\">Add a button to the toolbar</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Implement_a_settings_page\">Implement a settings page</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Working_with_the_Tabs_API\">Work with the Tabs API</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Work_with_the_Bookmarks_API\">Work with the Bookmarks API</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Work_with_the_Cookies_API\">Work with the Cookies API</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Work_with_contextual_identities\">Work with contextual identities</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Interact_with_the_clipboard\">Interact with the clipboard</a></li>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Build_a_cross_browser_extension\">Build a cross-browser extension</a></li>\n        </ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n        <summary><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Firefox_differentiators\">Firefox differentiators</a></summary>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details open=\"\">\n        <summary>JavaScript APIs</summary>\n        <ol><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/Browser_support_for_JavaScript_APIs\">Browser support for JavaScript APIs</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/action\">action</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/alarms\">alarms</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/bookmarks\">bookmarks</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/browserAction\">browserAction</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/browserSettings\">browserSettings</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/browsingData\">browsingData</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/captivePortal\">captivePortal</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/clipboard\">clipboard</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/commands\">commands</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/contentScripts\">contentScripts</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/contextualIdentities\">contextualIdentities</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/cookies\">cookies</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/devtools\">devtools</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/dns\">dns</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/downloads\">downloads</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/events\">events</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/extension\">extension</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/extensionTypes\">extensionTypes</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/find\">find</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/history\">history</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/i18n\">i18n</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/identity\">identity</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/idle\">idle</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/management\">management</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/menus\">menus</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/notifications\">notifications</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/omnibox\">omnibox</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/pageAction\">pageAction</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/permissions\">permissions</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/pkcs11\">pkcs11</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/privacy\">privacy</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/proxy\">proxy</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/runtime\">runtime</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/scripting\">scripting</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/search\">search</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/sessions\">sessions</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/sidebarAction\">sidebarAction</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/storage\">storage</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/tabs\">tabs</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/theme\">theme</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/topSites\">topSites</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/types\">types</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/userScripts\">userScripts</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webNavigation\">webNavigation</a></li><li class=\"webextension-api-sidebar\"><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest\">webRequest</a><ol><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/filterResponseData\"><code>filterResponseData()</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/getSecurityInfo\"><code>getSecurityInfo()</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/handlerBehaviorChanged\"><code>handlerBehaviorChanged()</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/MAX_HANDLER_BEHAVIOR_CHANGED_CALLS_PER_10_MINUTES\"><code>MAX_HANDLER_BEHAVIOR_CHANGED_CALLS_PER_10_MINUTES</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Types</strong></a><ol><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/BlockingResponse\"><code>BlockingResponse</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/CertificateInfo\"><code>CertificateInfo</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/HttpHeaders\"><code>HttpHeaders</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/RequestFilter\"><code>RequestFilter</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/ResourceType\"><code>ResourceType</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/SecurityInfo\"><code>SecurityInfo</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/StreamFilter\"><code>StreamFilter</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/UploadData\"><code>UploadData</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Events</strong></a><ol><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onAuthRequired\"><code>onAuthRequired</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onBeforeRedirect\"><code>onBeforeRedirect</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onBeforeRequest\"><code>onBeforeRequest</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onBeforeSendHeaders\"><code>onBeforeSendHeaders</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onCompleted\"><code>onCompleted</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onErrorOccurred\"><code>onErrorOccurred</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onHeadersReceived\"><code>onHeadersReceived</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onResponseStarted\"><code>onResponseStarted</code></a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onSendHeaders\"><code>onSendHeaders</code></a></li></ol></li></ol></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/windows\">windows</a></li></ol>\n      </details>\n    </li>\n    <li class=\"toggle\">\n      <details>\n      <summary>Manifest keys</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json\">Introduction</a></li>\n        </ol>\n      <ol><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/action\">action</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/author\">author</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/background\">background</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_action\">browser_action</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/browser_specific_settings\">browser_specific_settings</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/chrome_settings_overrides\">chrome_settings_overrides</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/chrome_url_overrides\">chrome_url_overrides</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/commands\">commands</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/content_scripts\">content_scripts</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/content_security_policy\">content_security_policy</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/default_locale\">default_locale</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/description\">description</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/developer\">developer</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/devtools_page\">devtools_page</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/dictionaries\">dictionaries</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/externally_connectable\">externally_connectable</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/homepage_url\">homepage_url</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/host_permissions\">host_permissions</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/icons\">icons</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/incognito\">incognito</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/manifest_version\">manifest_version</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/name\">name</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/offline_enabled\">offline_enabled</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/omnibox\">omnibox</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/optional_permissions\">optional_permissions</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/options_page\">options_page</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/options_ui\">options_ui</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/page_action\">page_action</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/permissions\">permissions</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/protocol_handlers\">protocol_handlers</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/short_name\">short_name</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/sidebar_action\">sidebar_action</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/storage\">storage</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/theme\">theme</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/theme_experiment\">theme_experiment</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/user_scripts\">user_scripts</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/version\">version</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/version_name\">version_name</a></li><li><a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/web_accessible_resources\">web_accessible_resources</a></li></ol>\n      </details>\n    </li>\n     <li class=\"toggle\">\n      <details>\n        <summary>Extension Workshop</summary>\n        <ol>\n          <li><a href=\"https://extensionworkshop.com/documentation/develop/\">Develop</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/publish/\">Publish</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/manage/\">Manage</a></li>\n          <li><a href=\"https://extensionworkshop.com/documentation/enterprise/\">Enterprise</a></li>\n        </ol>\n      </details>\n    </li>\n    <li><a href=\"/en-US/docs/Mozilla/Add-ons/Contact_us\"><strong>Contact us</strong></a></li>\n    <li class=\"toggle\">\n      <details>\n        <summary>Channels</summary>\n        <ol>\n          <li><a href=\"https://blog.mozilla.org/addons\">Add-ons blog</a></li>\n          <li><a href=\"https://discourse.mozilla.org/c/add-ons\">Add-ons forum</a></li>\n          <li><a href=\"https://chat.mozilla.org/#/room/%23addons:mozilla.org\">Add-ons chat</a></li>\n        </ol>\n      </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>An event handler that is called repeatedly when response data is available. The handler is passed an <code>event</code> object containing a <code>data</code> property, which includes a chunk of the response data as an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>.</p>\n<p>To decode the data, use either <a href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a> or <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a>.</p>\n<p>Without an <code>ondata</code> listener, you don't receive the original response body, and the output stream is empty unless <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/StreamFilter/write\"><code>write</code></a> is called.</p>"}},{"type":"prose","value":{"id":"webextension_examples","title":"WebExtension Examples","isH3":false,"content":"<p>This example adds an <code>ondata</code> listener which replaces \"WebExtension Example\" in the response with \"WebExtension WebExtension Example\" using the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace\"><code>replace()</code></a> method.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This example only works for occurrences of \"WebExtension Example\" that are entirely contained within a data chunk, and not ones that straddle two chunks (which might happen ~0.1% of the time for large documents). Additionally it only deals with UTF-8-coded documents. A real implementation of this would have to be more complex.</p>\n</div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">details</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filter <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">filterResponseData</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>requestId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">stream</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Just change any instance of WebExtension Example in the HTTP response</span>\n    <span class=\"token comment\">// to WebExtension WebExtension Example.</span>\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>\n      <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">WebExtension Example</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"WebExtension WebExtension Example\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Doing filter.disconnect(); here would make us process only</span>\n    <span class=\"token comment\">// the first chunk, and let the rest through unchanged. Note</span>\n    <span class=\"token comment\">// that this would break multi-byte characters that occur on</span>\n    <span class=\"token comment\">// the chunk boundary!</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//return {}; // not needed</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span>onBeforeRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n  listener<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://example.com/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"main_frame\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"blocking\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Another example for handling large documents:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">details</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filter <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">filterResponseData</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>requestId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      str <span class=\"token operator\">=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> stream <span class=\"token operator\">=</span> i <span class=\"token operator\">!==</span> data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        str <span class=\"token operator\">+=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> stream <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// Just change any instance of WebExtension Example in the HTTP response</span>\n    <span class=\"token comment\">// to WebExtension WebExtension Example.</span>\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">WebExtension Example</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WebExtension $&amp;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span>onBeforeRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n  listener<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://example.com/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"main_frame\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"blocking\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Here's another version:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">details</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filter <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">filterResponseData</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>requestId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> buffer <span class=\"token keyword\">of</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      str <span class=\"token operator\">+=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">stream</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    str <span class=\"token operator\">+=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// end-of-stream</span>\n\n    <span class=\"token comment\">// Just change any instance of WebExtension Example in the HTTP response</span>\n    <span class=\"token comment\">// to WebExtension WebExtension Example.</span>\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">WebExtension Example</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WebExtension $&amp;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span>onBeforeRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n  listener<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://example.com/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"main_frame\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"blocking\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The above example can also be written like so:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">details</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filter <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">filterResponseData</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>requestId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">stream</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Just change any instance of WebExtension Example in the HTTP response</span>\n    <span class=\"token comment\">// to WebExtension WebExtension Example.</span>\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">WebExtension Example</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WebExtension $&amp;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span>onBeforeRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n  listener<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://example.com/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"main_frame\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"blocking\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This example uses a <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">details</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filter <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">filterResponseData</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>requestId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstop</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text/html\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blob<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Just change any instance of WebExtension Example in the HTTP response</span>\n    <span class=\"token comment\">// to WebExtension WebExtension Example.</span>\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">WebExtension Example</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WebExtension $&amp;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span>onBeforeRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n  listener<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://example.com/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"main_frame\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"blocking\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This example makes use of the <a href=\"/en-US/docs/Web/API/DOMParser\"><code>DOMParser</code></a> interface:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">details</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filter <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">filterResponseData</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>requestId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> parser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DOMParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstop</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text/html\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blob<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> doc <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span><span class=\"token function\">parseFromString</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> blob<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> nodes <span class=\"token operator\">=</span> doc<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title, h1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> node <span class=\"token keyword\">of</span> nodes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      node<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"WebExtension Example\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"WebExtension $&amp;\"</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>outerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span>onBeforeRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n  listener<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://example.com/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"main_frame\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"blocking\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This example combines all buffers into a single buffer:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">details</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filter <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">filterResponseData</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>requestId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> combinedLength <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> buffer <span class=\"token keyword\">of</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      combinedLength <span class=\"token operator\">+=</span> buffer<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> combinedArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>combinedLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> writeOffset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> buffer <span class=\"token keyword\">of</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      combinedArray<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> writeOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      writeOffset <span class=\"token operator\">+=</span> buffer<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>combinedArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Just change any instance of WebExtension Example in the HTTP response</span>\n    <span class=\"token comment\">// to WebExtension WebExtension Example.</span>\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">WebExtension Example</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WebExtension $&amp;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span>onBeforeRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n  listener<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://example.com/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"main_frame\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"blocking\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The above example can also be written like so:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">details</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filter <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">filterResponseData</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>requestId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstop</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"text/html\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blob<span class=\"token punctuation\">.</span><span class=\"token function\">arrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">WebExtension Example</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WebExtension $&amp;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span>onBeforeRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n  listener<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://example.com/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"main_frame\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"blocking\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This example demonstrates, how one can detect, if it's the final chunk in the response:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">details</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filter <span class=\"token operator\">=</span> browser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span><span class=\"token function\">filterResponseData</span><span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">.</span>requestId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ondata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> stream <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"&lt;/html&gt;\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      stream <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// end-of-stream</span>\n    <span class=\"token punctuation\">}</span>\n    str <span class=\"token operator\">+=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> stream <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  filter<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Just change any instance of WebExtension Example in the HTTP response</span>\n    <span class=\"token comment\">// to WebExtension WebExtension Example.</span>\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">WebExtension Example</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WebExtension $&amp;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    filter<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbrowser<span class=\"token punctuation\">.</span>webRequest<span class=\"token punctuation\">.</span>onBeforeRequest<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>\n  listener<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://example.com/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"main_frame\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"blocking\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"webextensions.api.webRequest.StreamFilter.ondata","dataURL":"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/StreamFilter/ondata/bcd.json"}}],"toc":[{"text":"WebExtension Examples","id":"webextension_examples"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"An event handler that is called repeatedly when response data is available. The handler is passed an event object containing a data property, which includes a chunk of the response data as an ArrayBuffer.","popularity":0,"modified":"2022-09-09T05:03:45.000Z","other_translations":[{"title":"webRequest.StreamFilter.ondata","locale":"fr","native":"Français"}],"source":{"folder":"en-us/mozilla/add-ons/webextensions/api/webrequest/streamfilter/ondata","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/mozilla/add-ons/webextensions/api/webrequest/streamfilter/ondata/index.md","last_commit_url":"https://github.com/mdn/content/commit/1ee49b729dc4cd02b862d910f279861f4b30e704","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Mozilla","title":"Mozilla"},{"uri":"/en-US/docs/Mozilla/Add-ons","title":"Add-ons"},{"uri":"/en-US/docs/Mozilla/Add-ons/WebExtensions","title":"Browser Extensions"},{"uri":"/en-US/docs/Mozilla/Add-ons/WebExtensions/API","title":"JavaScript APIs"},{"uri":"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest","title":"webRequest"},{"uri":"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/StreamFilter","title":"webRequest.StreamFilter"},{"uri":"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/StreamFilter/ondata","title":"webRequest.StreamFilter.ondata"}],"pageTitle":"webRequest.StreamFilter.ondata - Mozilla | MDN","noIndexing":false}}