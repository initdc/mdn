{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebAssembly.Exception constructor","mdn_url":"/en-US/docs/WebAssembly/JavaScript_interface/Exception/Exception","locale":"en-US","native":"English (US)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"open\"><a href=\"/en-US/docs/WebAssembly\"><strong>WebAssembly home page</strong></a>\n  </li><li class=\"toggle\">\n    <details open=\"\">\n      <summary>Tutorials</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/C_to_wasm\">Compiling from C/C++ to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Rust_to_wasm\">Compiling from Rust to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Understanding_the_text_format\">Understanding WebAssembly text format</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Text_format_to_wasm\">Converting WebAssembly text format to wasm</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Loading_and_running\">Loading and running WebAssembly code</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Caching_modules\">Caching compiled WebAssembly modules</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Exported_functions\">Exported WebAssembly functions</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Object reference</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></li>\n      </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>WebAssembly.Exception()</code></strong> constructor is used to create a new <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Exception\"><code>WebAssembly.Exception</code></a>.</p>\n<p>\n  The constructor accepts a <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Exception\"><code>Tag</code></a> argument and a <code>payload</code> array of data fields.\n  The data types of each of the payload elements must match the corresponding data type specified in the <code>Tag</code>.\n</p>\n<p>\n  The constructor may also take an <code>options</code> object.\n  The <code>options.traceStack</code> property can be set <code>true</code> (by default it is <code>false</code>) to indicate that a WASM stack trace may be attached to the exception's <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Exception/stack\"><code>stack</code></a> property.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new Exception(tag, payload)\nnew Exception(tag, payload, options)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"tag\"><code>tag</code></dt>\n  <dd>\n    <p>An <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Tag\"><code>WebAssembly.Tag</code></a> defining the data types expected for each of the values in the <code>payload</code>.</p>\n  </dd>\n  <dt id=\"payload\"><code>payload</code></dt>\n  <dd>\n    <p>\n      An array of one or more data fields comprising the payload of the exception.\n      The elements must match the data types of the corresponding elements in the <code>tag</code>.\n      If the number of data fields in the payload and their types don't match, a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> exception is thrown.\n    </p>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">Optional</span> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>An object with the following optional fields:</p>\n    <dl>\n      <dt id=\"tracestack\"><code>traceStack</code> <span class=\"badge inline optional\">Optional</span> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n      <dd>\n        <p>\n          <code>true</code> if the <code>Exception</code> may have a stack trace attached to its <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Exception/stack\"><code>stack</code></a> property, otherwise <code>false</code>.\n          This is <code>false</code> by default (if <code>options</code> or <code>options.traceStack</code> are not provided).\n        </p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\"><code>TypeError</code></dt>\n  <dd>\n    <p>The <code>payload</code> and <code>tag</code> sequences do not have the same number of elements and/or the elements are not of matching types.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>This example shows the creation of an exception using a simple tag.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Create tag and use it to create an exception</span>\n<span class=\"token keyword\">const</span> tag <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Tag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">parameters</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"i32\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"f32\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> exception <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Exception</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Exception/stack#examples\"><code>stack</code> example</a> shows the creation of an exception that uses the <code>options</code> parameter.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"query":"javascript.builtins.WebAssembly.Exception.Exception","specifications":[]}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"data":null,"query":"javascript.builtins.WebAssembly.Exception.Exception","browsers":null}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/WebAssembly\">WebAssembly</a> overview</li>\n  <li><a href=\"/en-US/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n  <li><a href=\"/en-US/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The WebAssembly.Exception() constructor is used to create a new WebAssembly.Exception.","popularity":0,"modified":"2022-09-19T05:46:09.000Z","other_translations":[{"title":"Constructeur pour WebAssembly.Exception","locale":"fr","native":"Fran√ßais"}],"source":{"folder":"en-us/webassembly/javascript_interface/exception/exception","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/webassembly/javascript_interface/exception/exception/index.md","last_commit_url":"https://github.com/mdn/content/commit/d606f8dc936dcf766e1540f687eba8dc9dd9ed13","filename":"index.md"},"parents":[{"uri":"/en-US/docs/WebAssembly","title":"WebAssembly"},{"uri":"/en-US/docs/WebAssembly/JavaScript_interface","title":"WebAssembly"},{"uri":"/en-US/docs/WebAssembly/JavaScript_interface/Exception","title":"WebAssembly.Exception"},{"uri":"/en-US/docs/WebAssembly/JavaScript_interface/Exception/Exception","title":"WebAssembly.Exception constructor"}],"pageTitle":"WebAssembly.Exception constructor - WebAssembly | MDN","noIndexing":false}}