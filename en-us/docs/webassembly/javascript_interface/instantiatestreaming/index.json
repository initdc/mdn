{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebAssembly.instantiateStreaming()","mdn_url":"/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming","locale":"en-US","native":"English (US)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"open\"><a href=\"/en-US/docs/WebAssembly\"><strong>WebAssembly home page</strong></a>\n  </li><li class=\"toggle\">\n    <details open=\"\">\n      <summary>Tutorials</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/C_to_wasm\">Compiling from C/C++ to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Rust_to_wasm\">Compiling from Rust to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Understanding_the_text_format\">Understanding WebAssembly text format</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Text_format_to_wasm\">Converting WebAssembly text format to wasm</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Loading_and_running\">Loading and running WebAssembly code</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Caching_modules\">Caching compiled WebAssembly modules</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Exported_functions\">Exported WebAssembly functions</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Object reference</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></li>\n      </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>WebAssembly.instantiateStreaming()</code></strong> function compiles\n  and instantiates a WebAssembly module directly from a streamed underlying source. This\n  is the most efficient, optimized way to load wasm code.\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> Webpages that have strict <a href=\"/en-US/docs/Web/HTTP/CSP\">Content Security Policy (CSP)</a> might block WebAssembly from compiling and executing modules.\n    For more information on allowing WebAssembly compilation and execution, see the <a href=\"/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src\">script-src CSP</a>.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">WebAssembly.instantiateStreaming(source, importObject)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"source\"><code>source</code></dt>\n  <dd>\n    <p>\n      A <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a>\n      object or a promise that will fulfill with one, representing the underlying source of\n      a .wasm module you want to stream, compile, and instantiate.\n    </p>\n  </dd>\n  <dt id=\"importobject\"><code>importObject</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      An object containing the values to be imported into the newly-created\n      <code>Instance</code>, such as functions or <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a> objects.\n      There must be one matching property for each declared import of the compiled module or\n      else a\n      <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code></a>\n      is thrown.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A <code>Promise</code> that resolves to a <code>ResultObject</code> which contains two\n  fields:\n</p>\n<ul>\n  <li>\n    <code>module</code>: A <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a> object representing the\n    compiled WebAssembly module. This <code>Module</code> can be instantiated again or\n    shared via <a href=\"/en-US/docs/Web/API/Worker/postMessage\">postMessage()</a>.\n  </li>\n  <li>\n    <code>instance</code>: A <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a> object that contains all\n    the <a href=\"/en-US/docs/WebAssembly/Exported_functions\">Exported WebAssembly functions</a>.\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<ul>\n  <li>\n    If either of the parameters are not of the correct type or structure, a\n    <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> is thrown.\n  </li>\n  <li>\n    If the operation fails, the promise rejects with a\n    <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a>, <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code></a>, or\n    <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a>, depending on the cause of the failure.\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"instantiating_streaming","title":"Instantiating streaming","isH3":true,"content":"<p>\n  The following example (see our <a href=\"https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html\" class=\"external\" rel=\" noopener\">instantiate-streaming.html</a>\n  demo on GitHub, and <a href=\"https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html\" class=\"external\" rel=\" noopener\">view it live</a> also)\n  directly streams a .wasm module from an underlying source then\n  compiles and instantiates it, the promise fulfilling with a <code>ResultObject</code>.\n  Because the <code>instantiateStreaming()</code> function accepts a promise for a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a>\n  object, you can directly pass it a <a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a>\n  call, and it will pass the response into the function when it fulfills.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> importObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">imported_func</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nWebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiateStreaming</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"simple.wasm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> importObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> obj<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">exported_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  The <code>ResultObject</code>'s instance member is then accessed, and the contained\n  exported function invoked.\n</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p>\n    <strong>Note:</strong> For this to work, <code>.wasm</code> files should be returned\n    with an <code>application/wasm</code> MIME type by the server.\n  </p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webassembly.github.io/spec/web-api/#dom-webassembly-instantiatestreaming","title":"WebAssembly Web API"}],"query":"javascript.builtins.WebAssembly.instantiateStreaming"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.WebAssembly.instantiateStreaming","dataURL":"/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/WebAssembly\">WebAssembly</a> overview page</li>\n  <li><a href=\"/en-US/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n  <li><a href=\"/en-US/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The WebAssembly.instantiateStreaming() function compiles\n  and instantiates a WebAssembly module directly from a streamed underlying source. This\n  is the most efficient, optimized way to load wasm code.","popularity":0,"modified":"2022-09-19T05:46:09.000Z","other_translations":[{"title":"WebAssembly.instantiateStreaming()","locale":"fr","native":"Français"},{"title":"WebAssembly.instantiateStreaming()","locale":"ja","native":"日本語"},{"title":"WebAssembly.instantiateStreaming()","locale":"ko","native":"한국어"},{"title":"WebAssembly.instantiateStreaming()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/webassembly/javascript_interface/instantiatestreaming","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/webassembly/javascript_interface/instantiatestreaming/index.md","last_commit_url":"https://github.com/mdn/content/commit/d606f8dc936dcf766e1540f687eba8dc9dd9ed13","filename":"index.md"},"parents":[{"uri":"/en-US/docs/WebAssembly","title":"WebAssembly"},{"uri":"/en-US/docs/WebAssembly/JavaScript_interface","title":"WebAssembly"},{"uri":"/en-US/docs/WebAssembly/JavaScript_interface/instantiateStreaming","title":"WebAssembly.instantiateStreaming()"}],"pageTitle":"WebAssembly.instantiateStreaming() - WebAssembly | MDN","noIndexing":false}}