{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebAssembly.Module.customSections()","mdn_url":"/en-US/docs/WebAssembly/JavaScript_interface/Module/customSections","locale":"en-US","native":"English (US)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"open\"><a href=\"/en-US/docs/WebAssembly\"><strong>WebAssembly home page</strong></a>\n  </li><li class=\"toggle\">\n    <details open=\"\">\n      <summary>Tutorials</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/C_to_wasm\">Compiling from C/C++ to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Rust_to_wasm\">Compiling from Rust to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Understanding_the_text_format\">Understanding WebAssembly text format</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Text_format_to_wasm\">Converting WebAssembly text format to wasm</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Loading_and_running\">Loading and running WebAssembly code</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Caching_modules\">Caching compiled WebAssembly modules</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Exported_functions\">Exported WebAssembly functions</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Object reference</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></li>\n      </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>WebAssembly.customSections()</code></strong> function returns a copy\n  of the contents of all custom sections in the given module with the given string name.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">WebAssembly.Module.customSections(module, sectionName)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"module\"><code>module</code></dt>\n  <dd>\n    <p>\n      The <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a> object whose custom sections are being\n      considered.\n    </p>\n  </dd>\n  <dt id=\"sectionname\"><code>sectionName</code></dt>\n  <dd>\n    <p>The string name of the desired custom section.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A (possibly empty) array containing <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> copies of the contents of all custom sections matching <code>sectionName</code>.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>\n  If <code>module</code> is not a <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a> object instance, a\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> is thrown.\n</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>\n  A wasm module consists of a sequence of <strong>sections</strong>. Most of these\n  sections are fully specified and validated by the wasm spec, but modules can also\n  contain <strong>custom sections</strong> that are ignored and skipped over during\n  validation. (Read <a href=\"https://github.com/WebAssembly/design/blob/main/BinaryEncoding.md#high-level-structure\" class=\"external\" rel=\" noopener\">High level structure</a>\n  for information on section structures, and how normal sections\n  (\"known sections\") and custom sections are distinguished.)\n</p>\n<p>\n  This provides developers with a way to include custom data inside wasm modules for other purposes,\n  for example the <a href=\"https://github.com/WebAssembly/design/blob/main/BinaryEncoding.md#name-section\" class=\"external\" rel=\" noopener\">name custom section</a>,\n  which allows developers to provide names for all the functions and\n  locals in the module (like \"symbols\" in a native build).\n</p>\n<p>\n  Note that the WebAssembly text format currently doesn't have a syntax specified for\n  adding new custom sections; you can however add a name section to your wasm during\n  conversion from text format over to .wasm. The <code>wast2wasm</code> command available as part of\n  the <a href=\"https://github.com/webassembly/wabt\" class=\"external\" rel=\" noopener\">wabt tool</a> has a\n  <code>--debug-names</code> option â€” specify this during conversion to get a .wasm with a\n  names custom section, for example:\n</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code>wast2wasm simple-name-section.was -o simple-name-section.wasm --debug-names\n</code></pre></div>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_customsections","title":"Using customSections","isH3":true,"content":"<p>\n  The following example uses <code>WebAssembly.Module.customSections</code> to check\n  if a loaded module instance contains a \"name\" custom section. A module contains a \"name\" custom section if <code>WebAssembly.Module.customSections</code>\n  returns an <code>ArrayBuffer</code> with a length greater than 0.\n</p>\n<p>\n  See custom-section.html <a href=\"https://github.com/mdn/webassembly-examples/blob/master/other-examples/custom-section.html\" class=\"external\" rel=\" noopener\">source code</a>\n  and <a href=\"https://mdn.github.io/webassembly-examples/other-examples/custom-section.html\" class=\"external\" rel=\" noopener\">live example</a>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">compileStreaming</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'simple-name-section.wasm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mod</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> nameSections <span class=\"token operator\">=</span> WebAssembly<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">.</span><span class=\"token function\">customSections</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nameSections<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Module contains a name section\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameSections<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webassembly.github.io/spec/js-api/#dom-module-customsections","title":"WebAssembly JavaScript Interface"}],"query":"javascript.builtins.WebAssembly.Module.customSections"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.WebAssembly.Module.customSections","dataURL":"/en-US/docs/WebAssembly/JavaScript_interface/Module/customSections/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/WebAssembly\">WebAssembly</a> overview page</li>\n  <li><a href=\"/en-US/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n  <li><a href=\"/en-US/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The WebAssembly.customSections() function returns a copy\n  of the contents of all custom sections in the given module with the given string name.","popularity":0,"modified":"2022-09-19T05:46:09.000Z","other_translations":[{"title":"WebAssembly.Module.customSections()","locale":"fr","native":"FranÃ§ais"},{"title":"WebAssembly.Module.customSections()","locale":"ja","native":"æ—¥æœ¬èªž"}],"source":{"folder":"en-us/webassembly/javascript_interface/module/customsections","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/webassembly/javascript_interface/module/customsections/index.md","last_commit_url":"https://github.com/mdn/content/commit/d606f8dc936dcf766e1540f687eba8dc9dd9ed13","filename":"index.md"},"parents":[{"uri":"/en-US/docs/WebAssembly","title":"WebAssembly"},{"uri":"/en-US/docs/WebAssembly/JavaScript_interface","title":"WebAssembly"},{"uri":"/en-US/docs/WebAssembly/JavaScript_interface/Module","title":"WebAssembly.Module"},{"uri":"/en-US/docs/WebAssembly/JavaScript_interface/Module/customSections","title":"WebAssembly.Module.customSections()"}],"pageTitle":"WebAssembly.Module.customSections() - WebAssembly | MDN","noIndexing":false}}