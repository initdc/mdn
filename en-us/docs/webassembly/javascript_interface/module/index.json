{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebAssembly.Module","mdn_url":"/en-US/docs/WebAssembly/JavaScript_interface/Module","locale":"en-US","native":"English (US)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"open\"><a href=\"/en-US/docs/WebAssembly\"><strong>WebAssembly home page</strong></a>\n  </li><li class=\"toggle\">\n    <details open=\"\">\n      <summary>Tutorials</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/C_to_wasm\">Compiling from C/C++ to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Rust_to_wasm\">Compiling from Rust to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Understanding_the_text_format\">Understanding WebAssembly text format</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Text_format_to_wasm\">Converting WebAssembly text format to wasm</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Loading_and_running\">Loading and running WebAssembly code</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Caching_modules\">Caching compiled WebAssembly modules</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Exported_functions\">Exported WebAssembly functions</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Object reference</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></li>\n      </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>A <strong><code>WebAssembly.Module</code></strong> object contains stateless WebAssembly code that has already been compiled by the browser â€” this can be efficiently <a href=\"/en-US/docs/Web/API/Worker/postMessage\">shared with Workers</a>, and instantiated multiple times.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"webassembly.module\"><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module/Module\"><code>WebAssembly.Module()</code></a></dt>\n  <dd>\n    <p>Creates a new <code>Module</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"static_properties","title":"Static properties","isH3":false,"content":"<dl>\n  <dt id=\"webassembly.module.customsections\"><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module/customSections\"><code>WebAssembly.Module.customSections()</code></a></dt>\n  <dd>\n    <p>Given a <code>Module</code> and string, returns a copy of the contents of all custom sections in the module with the given string name.</p>\n  </dd>\n  <dt id=\"webassembly.module.exports\"><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module/exports\"><code>WebAssembly.Module.exports()</code></a></dt>\n  <dd>\n    <p>Given a <code>Module</code>, returns an array containing descriptions of all the declared exports.</p>\n  </dd>\n  <dt id=\"webassembly.module.imports\"><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module/imports\"><code>WebAssembly.Module.imports()</code></a></dt>\n  <dd>\n    <p>Given a <code>Module</code>, returns an array containing descriptions of all the declared imports.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"sending_a_compiled_module_to_a_worker","title":"Sending a compiled module to a worker","isH3":true,"content":"<p>The following example compiles the loaded <code>simple.wasm</code> byte code using the <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/compileStreaming\"><code>WebAssembly.compileStreaming()</code></a> method and sends the resulting <code>Module</code> instance to a <a href=\"/en-US/docs/Web/API/Web_Workers_API\">worker</a> using <a href=\"/en-US/docs/Web/API/Worker/postMessage\" title=\"postMessage()\"><code>postMessage()</code></a>.</p>\n<p>See the <code>index-compile.html</code> <a href=\"https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html\" class=\"external\" rel=\" noopener\">source code</a> or <a href=\"https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html\" class=\"external\" rel=\" noopener\">view it live</a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wasm_worker.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nWebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">compileStreaming</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'simple.wasm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mod</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> worker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The worker function <a href=\"https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/wasm_worker.js\" class=\"external\" rel=\" noopener\"><code>wasm_worker.js</code></a> defines an import object for the module to use. The function then sets up an event handler to receive the module from the main thread. When the module is received, we create an instance from it using the <a href=\"/en-US/docs/WebAssembly/JavaScript_interface/instantiate\"><code>WebAssembly.instantiate()</code></a> method and invoke an exported function from inside it.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> importObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">imports</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">imported_func</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'module received from main thread'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> mod <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\n  WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiate</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">,</span> importObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">instance</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    instance<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">exported_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webassembly.github.io/spec/js-api/#modules","title":"WebAssembly JavaScript Interface"}],"query":"javascript.builtins.WebAssembly.Module"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.WebAssembly.Module","dataURL":"/en-US/docs/WebAssembly/JavaScript_interface/Module/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/WebAssembly\">WebAssembly</a> overview page</li>\n  <li><a href=\"/en-US/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n  <li><a href=\"/en-US/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Static properties","id":"static_properties"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"A WebAssembly.Module object contains stateless WebAssembly code that has already been compiled by the browser â€” this can be efficiently shared with Workers, and instantiated multiple times.","popularity":0,"modified":"2022-09-19T05:46:09.000Z","other_translations":[{"title":"WebAssembly.Module()","locale":"fr","native":"FranÃ§ais"},{"title":"WebAssembly.Module","locale":"ja","native":"æ—¥æœ¬èªž"},{"title":"WebAssembly.Module","locale":"ko","native":"í•œêµ­ì–´"},{"title":"WebAssembly.Module","locale":"zh-CN","native":"ä¸­æ–‡ (ç®€ä½“)"}],"source":{"folder":"en-us/webassembly/javascript_interface/module","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/webassembly/javascript_interface/module/index.md","last_commit_url":"https://github.com/mdn/content/commit/d606f8dc936dcf766e1540f687eba8dc9dd9ed13","filename":"index.md"},"parents":[{"uri":"/en-US/docs/WebAssembly","title":"WebAssembly"},{"uri":"/en-US/docs/WebAssembly/JavaScript_interface","title":"WebAssembly"},{"uri":"/en-US/docs/WebAssembly/JavaScript_interface/Module","title":"WebAssembly.Module"}],"pageTitle":"WebAssembly.Module - WebAssembly | MDN","noIndexing":false}}