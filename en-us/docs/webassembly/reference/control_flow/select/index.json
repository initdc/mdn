{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Select","mdn_url":"/en-US/docs/WebAssembly/Reference/Control_flow/Select","locale":"en-US","native":"English (US)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"open\"><a href=\"/en-US/docs/WebAssembly\"><strong>WebAssembly home page</strong></a>\n  </li><li class=\"toggle\">\n    <details open=\"\">\n      <summary>Tutorials</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/C_to_wasm\">Compiling from C/C++ to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Rust_to_wasm\">Compiling from Rust to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Understanding_the_text_format\">Understanding WebAssembly text format</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Text_format_to_wasm\">Converting WebAssembly text format to wasm</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Loading_and_running\">Loading and running WebAssembly code</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Caching_modules\">Caching compiled WebAssembly modules</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Exported_functions\">Exported WebAssembly functions</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Object reference</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></li>\n      </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>select</code></strong> instruction, selects one of its first two operands based on whether its third operand is zero or not. It shares some similarities with the ternary operator in other languages (e.g. <code>false ? 10 : 20</code>), but doesn't <a href=\"https://en.wikipedia.org/wiki/Short-circuit_evaluation\" class=\"external\" rel=\" noopener\">short-circuit</a>. The instruction may be followed by an immediate value type: <code>select (result T)</code>. <code>select (result T)</code> uses a different binary opcode, and allows types besides those introduced by the WebAssembly MVP (<code>i32</code>, <code>i64</code>, <code>f32</code>, <code>f64</code>), for example, it allows selection between two <code>externref</code> values.</p><iframe class=\"interactive\" height=\"655\" src=\"https://interactive-examples.mdn.mozilla.net/pages/wat/select.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: wasm notranslate\"><code><span class=\"token comment\">;; push two values onto the stack</span>\n<span class=\"token keyword\">i32<span class=\"token punctuation\">.</span>const</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">i32<span class=\"token punctuation\">.</span>const</span> <span class=\"token number\">20</span>\n\n<span class=\"token comment\">;; change to `1` (true) to get the first value (`10`)</span>\n<span class=\"token keyword\">i32<span class=\"token punctuation\">.</span>const</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">select</span>\n</code></pre></div>\n<pre class=\"notranslate\">f32.const nan\nf32.const -54.1\n\n;; change to `1` (true) to get the first value (`nan`)\ni32.const 0\nselect (result f32)\n</pre>\n<table>\n  <thead>\n    <tr>\n      <th>Instruction</th>\n      <th>Binary opcode</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>select</code></td>\n      <td><code>0x1b</code></td>\n    </tr>\n    <tr>\n      <td><code>select t</code></td>\n      <td><code>0x1c</code></td>\n    </tr>\n  </tbody>\n</table>"}}],"toc":[{"text":"Syntax","id":"syntax"}],"summary":"The select instruction, selects one of its first two operands based on whether its third operand is zero or not. It shares some similarities with the ternary operator in other languages (e.g. false ? 10 : 20), but doesn't short-circuit. The instruction may be followed by an immediate value type: select (result T). select (result T) uses a different binary opcode, and allows types besides those introduced by the WebAssembly MVP (i32, i64, f32, f64), for example, it allows selection between two externref values.","popularity":0,"modified":"2022-09-10T06:49:35.000Z","source":{"folder":"en-us/webassembly/reference/control_flow/select","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/webassembly/reference/control_flow/select/index.md","last_commit_url":"https://github.com/mdn/content/commit/c18f91159d438c3f40b6d1f78a6ba7c04d2f1845","filename":"index.md"},"parents":[{"uri":"/en-US/docs/WebAssembly","title":"WebAssembly"},{"uri":"/en-US/docs/WebAssembly/Reference","title":"WebAssembly instructions"},{"uri":"/en-US/docs/WebAssembly/Reference/Control_flow","title":"WebAssembly control flow instructions"},{"uri":"/en-US/docs/WebAssembly/Reference/Control_flow/Select","title":"Select"}],"pageTitle":"Select - WebAssembly | MDN","noIndexing":false}}