{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Wrap","mdn_url":"/en-US/docs/WebAssembly/Reference/Numeric/Wrap","locale":"en-US","native":"English (US)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"open\"><a href=\"/en-US/docs/WebAssembly\"><strong>WebAssembly home page</strong></a>\n  </li><li class=\"toggle\">\n    <details open=\"\">\n      <summary>Tutorials</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/Concepts\">WebAssembly concepts</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/C_to_wasm\">Compiling from C/C++ to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Rust_to_wasm\">Compiling from Rust to WebAssembly</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Using_the_JavaScript_API\">Using the WebAssembly JavaScript API</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Understanding_the_text_format\">Understanding WebAssembly text format</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Text_format_to_wasm\">Converting WebAssembly text format to wasm</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Loading_and_running\">Loading and running WebAssembly code</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Caching_modules\">Caching compiled WebAssembly modules</a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/Exported_functions\">Exported WebAssembly functions</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Object reference</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface\"><code>WebAssembly</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Module\"><code>WebAssembly.Module</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Global\"><code>WebAssembly.Global</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Instance\"><code>WebAssembly.Instance</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Memory\"><code>WebAssembly.Memory</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/Table\"><code>WebAssembly.Table</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/CompileError\"><code>WebAssembly.CompileError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/LinkError\"><code>WebAssembly.LinkError</code></a></li>\n        <li><a href=\"/en-US/docs/WebAssembly/JavaScript_interface/RuntimeError\"><code>WebAssembly.RuntimeError</code></a></li>\n      </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>wrap</code></strong> instruction, is used to convert numbers of type <code>i64</code> to type <code>i32</code>. If the number is larger than what an <code>i32</code> can hold this operation will wrap, resulting in a different number.</p>\n<p>One can think of wrap either as reducing the value <a href=\"https://en.wikipedia.org/wiki/Modular_arithmetic\" class=\"external\" rel=\" noopener\">mod</a> 2<sup>32</sup>, or as discarding the high 32 bits to produce a value containing just the low 32 bits.</p><iframe class=\"interactive\" height=\"655\" src=\"https://interactive-examples.mdn.mozilla.net/pages/wat/wrap.html\" title=\"MDN Web Docs Interactive Example\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: wasm notranslate\"><code><span class=\"token comment\">;; push an i64 onto the stack</span>\n<span class=\"token keyword\">i64<span class=\"token punctuation\">.</span>const</span> <span class=\"token number\">10</span>\n\n<span class=\"token comment\">;; wrap from i64 to i32</span>\n<span class=\"token keyword\">i32</span>.wrap_i64\n\n<span class=\"token comment\">;; the top item on the stack will now be the value 10 of type `i32`</span>\n</code></pre></div>\n<table>\n  <thead>\n    <tr>\n      <th>Instruction</th>\n      <th>Binary opcode</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>i32.wrap_i64</code></td>\n      <td><code>0xa7</code></td>\n    </tr>\n  </tbody>\n</table>"}}],"toc":[{"text":"Syntax","id":"syntax"}],"summary":"The wrap instruction, is used to convert numbers of type i64 to type i32. If the number is larger than what an i32 can hold this operation will wrap, resulting in a different number.","popularity":0,"modified":"2022-09-10T06:49:35.000Z","source":{"folder":"en-us/webassembly/reference/numeric/wrap","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/webassembly/reference/numeric/wrap/index.md","last_commit_url":"https://github.com/mdn/content/commit/c18f91159d438c3f40b6d1f78a6ba7c04d2f1845","filename":"index.md"},"parents":[{"uri":"/en-US/docs/WebAssembly","title":"WebAssembly"},{"uri":"/en-US/docs/WebAssembly/Reference","title":"WebAssembly instructions"},{"uri":"/en-US/docs/WebAssembly/Reference/Numeric","title":"WebAssembly numeric instructions"},{"uri":"/en-US/docs/WebAssembly/Reference/Numeric/Wrap","title":"Wrap"}],"pageTitle":"Wrap - WebAssembly | MDN","noIndexing":false}}