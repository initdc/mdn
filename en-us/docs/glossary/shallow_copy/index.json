{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Shallow copy","mdn_url":"/en-US/docs/Glossary/Shallow_copy","locale":"en-US","native":"English (US)","sidebarHTML":"\n  <ol>\n    <li><a href=\"/en-US/docs/MDN/About\">About MDN</a></li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Contributing to MDN</summary>\n            <ol>\n                <li><a href=\"/en-US/docs/MDN/Contribute/Getting_started\">Get started on MDN</a></li>\n                <li><a href=\"/en-US/docs/MDN/Contribute\">Contributing to MDN</a></li>\n                <li><a href=\"/en-US/docs/MDN/Contribute/Howto\">Things you can do</a></li>\n                <li><a href=\"/en-US/docs/MDN/Contribute/Localize\">Localizing MDN</a></li>\n                <li><a href=\"/en-US/docs/MDN/Guidelines\">Guidelines</a></li>\n                <li><a href=\"/en-US/docs/MDN/Structures\">Content structures</a></li>\n             </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>A <strong>shallow copy</strong> of an object is a copy whose properties share the same references (point to the same underlying values) as those of the source object from which the copy was made. As a result, when you change either the source or the copy, you may also cause the other object to change too — and so, you may end up unintentionally causing changes to the source or copy that you don't expect. That behavior contrasts with the behavior of a <a href=\"/en-US/docs/Glossary/Deep_copy\">deep copy</a>, in which the source and copy are completely independent.</p>\n<p>For shallow copies, it's important to understand that selectively changing the value of a shared property of an existing element in an object is different from assigning a completely new value to an existing element.</p>\n<p>For example, if in a shallow copy named <code>copy</code> of an array object, the value of the <code>copy[0]</code> element is <code>{\"list\":[\"butter\",\"flour\"]}</code>, and you do <code>copy[0].list = [\"oil\",\"flour\"]</code>, then the corresponding element in the source object will change, too — because you selectively changed a property of an object shared by both the source object and the shallow copy.</p>\n<p>However, if instead you do <code>copy[0] = {\"list\":[\"oil\",\"flour\"]}</code>, then the corresponding element in the source object <strong>will not change</strong> — because in that case, you're not just selectively changing a property of an existing array element that the shallow copy shares with the source object; instead you're actually assigning a completely new value to that <code>copy[0]</code> array element, just in the shallow copy.</p>\n<p>In JavaScript, all standard built-in object-copy operations (<a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">spread syntax</a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\"><code>Array.prototype.concat()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\"><code>Array.prototype.slice()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\"><code>Array.from()</code></a>, <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"><code>Object.assign()</code></a>, and <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\"><code>Object.create()</code></a>) create shallow copies rather than deep copies.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>Consider the following example, in which an <code>ingredients_list</code> array object is created, and then an <code>ingredients_list_copy</code> object is created by copying that <code>ingredients_list</code> object.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> ingredients_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"noodles\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">list</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"eggs\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"flour\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"water\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> ingredients_list_copy <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>ingredients_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>ingredients_list_copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [\"noodles\",{\"list\":[\"eggs\",\"flour\",\"water\"]}]</span>\n</code></pre></div>\n<p>Changing the value of the <code>list</code> property in <code>ingredients_list_copy</code> will also cause the <code>list</code> property to change in the <code>ingredients_list</code> source object.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ingredients_list_copy<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"rice flour\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"water\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ingredients_list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Array [ \"rice flour\", \"water\" ]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>ingredients_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [\"noodles\",{\"list\":[\"rice flour\",\"water\"]}]</span>\n</code></pre></div>\n<p>Assigning a completely new value to the first element in <code>ingredients_list_copy</code> will not cause any change to the first element in the <code>ingredients_list</code> source object.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ingredients_list_copy<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"rice noodles\"</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ingredients_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// noodles</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>ingredients_list_copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [\"rice noodles\",{\"list\":[\"rice flour\",\"water\"]}]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>ingredients_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [\"noodles\",{\"list\":[\"rice flour\",\"water\"]}]</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Glossary/Deep_copy\">Deep copy</a></li>\n</ul>"}}],"toc":[{"text":"Example","id":"example"},{"text":"See also","id":"see_also"}],"summary":"A shallow copy of an object is a copy whose properties share the same references (point to the same underlying values) as those of the source object from which the copy was made. As a result, when you change either the source or the copy, you may also cause the other object to change too — and so, you may end up unintentionally causing changes to the source or copy that you don't expect. That behavior contrasts with the behavior of a deep copy, in which the source and copy are completely independent.","popularity":0.0074,"modified":"2022-09-21T02:09:26.000Z","other_translations":[{"title":"Shallow copy (シャローコピー)","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/glossary/shallow_copy","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/glossary/shallow_copy/index.md","last_commit_url":"https://github.com/mdn/content/commit/ed947b2c608428b62a60f07d09dc543f732dc09b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Glossary","title":"MDN Web Docs Glossary: Definitions of Web-related terms"},{"uri":"/en-US/docs/Glossary/Shallow_copy","title":"Shallow copy"}],"pageTitle":"Shallow copy - MDN Web Docs Glossary: Definitions of Web-related terms | MDN","noIndexing":false}}