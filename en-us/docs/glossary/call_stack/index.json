{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Call stack","mdn_url":"/en-US/docs/Glossary/Call_stack","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>A <strong>call stack</strong> is a mechanism for an interpreter (like the JavaScript interpreter in a web browser) to keep track of its place in a script that calls multiple <a href=\"/en-US/docs/Glossary/Function\">functions</a> — what function is currently being run and what functions are called from within that function, etc.</p>\n<ul>\n  <li>When a script calls a function, the interpreter adds it to the call stack and then starts carrying out the function.</li>\n  <li>Any functions that are called by that function are added to the call stack further up, and run where their calls are reached.</li>\n  <li>When the current function is finished, the interpreter takes it off the stack and resumes execution where it left off in the last code listing.</li>\n  <li>If the stack takes up more space than it was assigned, a \"stack overflow\" error is thrown.</li>\n</ul>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// [1] Some code here</span>\n  <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// [2] Some code here</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hi!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Invoke the `greeting` function</span>\n<span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [3] Some code here</span>\n</code></pre></div>\n<p>The code above would be executed like this:</p>\n<ol>\n  <li>Ignore all functions, until it reaches the <code>greeting()</code> function invocation.</li>\n  <li>Add the <code>greeting()</code> function to the call stack list.\n    <div class=\"notecard note\" id=\"sect1\">\n      <p>\n        <strong>Note:</strong> Call stack list:\n        - greeting\n      </p>\n    </div>\n  </li>\n  <li>Execute all lines of code inside the <code>greeting()</code> function.</li>\n  <li>Get to the <code>sayHi()</code> function invocation.</li>\n  <li>Add the <code>sayHi()</code> function to the call stack list.\n    <div class=\"notecard note\" id=\"sect2\">\n      <p>\n        <strong>Note:</strong> Call stack list:\n        - sayHi\n        - greeting\n      </p>\n    </div>\n  </li>\n  <li>Execute all lines of code inside the <code>sayHi()</code> function, until reaches its end.</li>\n  <li>Return execution to the line that invoked <code>sayHi()</code> and continue executing the rest of the <code>greeting()</code> function.</li>\n  <li>Delete the <code>sayHi()</code> function from our call stack list.\n    <div class=\"notecard note\" id=\"sect3\">\n      <p>\n        <strong>Note:</strong> Call stack list:\n        - greeting\n      </p>\n    </div>\n  </li>\n  <li>When everything inside the <code>greeting()</code> function has been executed, return to its invoking line to continue executing the rest of the JS code.</li>\n  <li>Delete the <code>greeting()</code> function from the call stack list.\n    <div class=\"notecard note\" id=\"sect4\">\n      <p>\n        <strong>Note:</strong> Call stack list:\n        EMPTY\n      </p>\n    </div>\n  </li>\n</ol>\n<p>In summary, then, we start with an empty Call Stack. Whenever we invoke a function, it is automatically added to the Call Stack. Once the function has executed all of its code, it is automatically removed from the Call Stack. Ultimately, the Stack is empty again.</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://en.wikipedia.org/wiki/Call_stack\" class=\"external\" rel=\" noopener\">Call stack</a> on Wikipedia</li>\n  <li><a href=\"/en-US/docs/Glossary\">Glossary</a>\n    <ul>\n      <li><a href=\"/en-US/docs/Glossary/Call_stack\" aria-current=\"page\">Call stack</a></li>\n      <li><a href=\"/en-US/docs/Glossary/Function\">Function</a></li>\n    </ul>\n  </li>\n</ul>"}}],"toc":[{"text":"Example","id":"example"},{"text":"See also","id":"see_also"}],"summary":"A call stack is a mechanism for an interpreter (like the JavaScript interpreter in a web browser) to keep track of its place in a script that calls multiple functions — what function is currently being run and what functions are called from within that function, etc.","popularity":0.0027,"modified":"2022-09-21T02:09:26.000Z","other_translations":[{"title":"Pila de llamadas","locale":"es","native":"Español"},{"title":"Pile d'exécution","locale":"fr","native":"Français"},{"title":"Call stack (コールスタック)","locale":"ja","native":"日本語"},{"title":"호출 스택","locale":"ko","native":"한국어"},{"title":"Call stack (Pilha de chamadas)","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Call stack","locale":"ru","native":"Русский"},{"title":"Call stack（调用栈）","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/glossary/call_stack","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/glossary/call_stack/index.md","last_commit_url":"https://github.com/mdn/content/commit/ed947b2c608428b62a60f07d09dc543f732dc09b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Glossary","title":"MDN Web Docs Glossary: Definitions of Web-related terms"},{"uri":"/en-US/docs/Glossary/Call_stack","title":"Call stack"}],"pageTitle":"Call stack - MDN Web Docs Glossary: Definitions of Web-related terms | MDN","noIndexing":false}}