{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Object","mdn_url":"/en-US/docs/Glossary/Object","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>In JavaScript, objects can be seen as a collection of properties. With the <a href=\"/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#object_literals\">object literal syntax</a>, a limited set of properties are initialized; then properties can be added and removed. Property values can be values of any type, including other objects, which enables building complex data structures. Properties are identified using <em>key</em> values. A <em>key</em> value is either a <a href=\"/en-US/docs/Glossary/String\">String value</a> or a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">Symbol value</a>.</p>\n<p>There are two types of object properties: The <a href=\"/en-US/docs/Web/JavaScript/Data_structures#data_property\"><em>data</em> property</a> and the <a href=\"/en-US/docs/Web/JavaScript/Data_structures#accessor_property\"><em>accessor</em> property</a>.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> It's important to recognize it's accessor <em>property</em> — not accessor <em>method</em>. We can give a JavaScript object class-<em>like</em> accessors by using a function as a value — but that doesn't make the object a class.</p>\n</div>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Data_structures#objects\">Detailed explanation of JavaScript objects</a> in the <a href=\"/en-US/docs/Web/JavaScript/Data_structures\">JavaScript data types and data structures</a> article</li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> in the <a href=\"/en-US/docs/Web/JavaScript/Reference\">JavaScript reference</a></li>\n</ul>"}}],"toc":[{"text":"See also","id":"see_also"}],"summary":"In JavaScript, objects can be seen as a collection of properties. With the object literal syntax, a limited set of properties are initialized; then properties can be added and removed. Property values can be values of any type, including other objects, which enables building complex data structures. Properties are identified using key values. A key value is either a String value or a Symbol value.","popularity":0.0009,"modified":"2022-09-21T02:09:26.000Z","other_translations":[{"title":"Object","locale":"es","native":"Español"},{"title":"Objet","locale":"fr","native":"Français"},{"title":"Object (オブジェクト)","locale":"ja","native":"日本語"},{"title":"Object","locale":"ko","native":"한국어"},{"title":"Objeto","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Объект","locale":"ru","native":"Русский"},{"title":"Object","locale":"zh-CN","native":"中文 (简体)"},{"title":"物件","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/glossary/object","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/glossary/object/index.md","last_commit_url":"https://github.com/mdn/content/commit/ed947b2c608428b62a60f07d09dc543f732dc09b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Glossary","title":"MDN Web Docs Glossary: Definitions of Web-related terms"},{"uri":"/en-US/docs/Glossary/Object","title":"Object"}],"pageTitle":"Object - MDN Web Docs Glossary: Definitions of Web-related terms | MDN","noIndexing":false}}