{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Vendor Prefix","mdn_url":"/en-US/docs/Glossary/Vendor_Prefix","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Browser vendors used to add prefixes to experimental or nonstandard CSS properties and JavaScript APIs, so developers could experiment with new ideas. This, in theory, helped to prevent their experiments from being relied upon and then breaking web developers' code during the standardization process.</p>\n<p>Web developers included prefixed features on production websites, despite their experimental nature. This made it more difficult for browser vendors to ensure compatibility while working on new features. Including prefixed features also harmed smaller browser vendors who ended up having to add other browsers' prefixes in order to render popular websites.</p>\n<p>Now, experimental features in browsers are \"put behind a flag\". This allows developers to change browser configurations to test upcoming features. Browsers now add experimental features behind user-controlled flags or preferences. Flags can be added for smaller specifications enabling reaching a stable state much more quickly.</p>"}},{"type":"prose","value":{"id":"css_prefixes","title":"CSS prefixes","isH3":false,"content":"<p>The most common browser CSS prefixes you will see in older code bases include:</p>\n<ul>\n  <li><code>-webkit-</code> (Chrome, Safari, newer versions of Opera and Edge, almost all iOS browsers including Firefox for iOS; basically, any WebKit or Chromium-based browser)</li>\n  <li><code>-moz-</code> (Firefox)</li>\n  <li><code>-o-</code> (old pre-WebKit versions of Opera)</li>\n  <li><code>-ms-</code> (Internet Explorer and Microsoft Edge, before Chromium)</li>\n</ul>\n<p>Sample usage:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token property\">-webkit-transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n<span class=\"token property\">-moz-transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n<span class=\"token property\">-ms-transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n<span class=\"token property\">-o-transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n<span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>If you encounter the above code in a code base, you can safely remove all but the last line. All browsers support <a href=\"/en-US/docs/Web/CSS/transition#browser_compatibility\">transitions</a> without vendor prefixes:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> all 4s ease<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"api_prefixes","title":"API prefixes","isH3":false,"content":"<p>Historically, browser vendors have also used prefixes for experimental APIs. If an entire interface was experimental, then the interface's name was prefixed (but not the properties or methods within). If an experimental property or method was added to a standardized interface, then the individual method or property was prefixed.</p>"}},{"type":"prose","value":{"id":"interface_prefixes","title":"Interface prefixes","isH3":true,"content":"<p>Prefixes for interface names are upper-cased:</p>\n<ul>\n  <li><code>WebKit</code> (Chrome, Safari, newer versions of Opera and Edge, almost all iOS browsers (including Firefox for iOS); basically, any WebKit and Chromium-based browser)</li>\n  <li><code>Moz</code> (Firefox)</li>\n  <li><code>O</code> (Older, pre-WebKit, versions of Opera)</li>\n  <li><code>MS</code> (Internet Explorer and Microsoft Edge, before Chromium)</li>\n</ul>"}},{"type":"prose","value":{"id":"property_and_method_prefixes","title":"Property and method prefixes","isH3":true,"content":"<p>The prefixes for properties and methods are lower-case:</p>\n<ul>\n  <li><code>webkit</code> (Chrome, Safari, newer versions of Opera and Edge, almost all iOS browsers (including Firefox for iOS); basically, any WebKit and Chromium-based browser)</li>\n  <li><code>moz</code> (Firefox)</li>\n  <li><code>o</code> (Old, pre-WebKit, versions of Opera)</li>\n  <li><code>ms</code> (Internet Explorer and Microsoft Edge, before Chromium)</li>\n</ul>\n<p>Sample usage:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span>requestAnimationFrame <span class=\"token operator\">=</span>\n  window<span class=\"token punctuation\">.</span>requestAnimationFrame <span class=\"token operator\">||</span>\n  window<span class=\"token punctuation\">.</span>mozRequestAnimationFrame <span class=\"token operator\">||</span>\n  window<span class=\"token punctuation\">.</span>webkitRequestAnimationFrame <span class=\"token operator\">||</span>\n  window<span class=\"token punctuation\">.</span>oRequestAnimationFrame <span class=\"token operator\">||</span>\n  window<span class=\"token punctuation\">.</span>msRequestAnimationFrame<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>If you encounter the above code in a code base, you can safely remove all but the first line. All browsers support <a href=\"/en-US/docs/Web/API/window/requestAnimationFrame#browser_compatibility\"><code>requestAnimationFrame</code></a> without vendor prefixes, and without <code>window</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://en.wikipedia.org/wiki/CSS_hack#Browser_prefixes\" class=\"external\" rel=\" noopener\">Browser prefixes</a> on Wikipedia</li>\n</ul>"}}],"toc":[{"text":"CSS prefixes","id":"css_prefixes"},{"text":"API prefixes","id":"api_prefixes"},{"text":"See also","id":"see_also"}],"summary":"Browser vendors used to add prefixes to experimental or nonstandard CSS properties and JavaScript APIs, so developers could experiment with new ideas. This, in theory, helped to prevent their experiments from being relied upon and then breaking web developers' code during the standardization process.","popularity":0.0021,"modified":"2022-09-21T02:09:26.000Z","other_translations":[{"title":"Vendor Prefix","locale":"es","native":"Español"},{"title":"Préfixe vendeur","locale":"fr","native":"Français"},{"title":"Vendor Prefix (ベンダー接頭辞)","locale":"ja","native":"日本語"},{"title":"Prefixos vendor","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Vendor Prefix","locale":"ru","native":"Русский"},{"title":"浏览器引擎前缀","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/glossary/vendor_prefix","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/glossary/vendor_prefix/index.md","last_commit_url":"https://github.com/mdn/content/commit/ed947b2c608428b62a60f07d09dc543f732dc09b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Glossary","title":"MDN Web Docs Glossary: Definitions of Web-related terms"},{"uri":"/en-US/docs/Glossary/Vendor_Prefix","title":"Vendor Prefix"}],"pageTitle":"Vendor Prefix - MDN Web Docs Glossary: Definitions of Web-related terms | MDN","noIndexing":false}}