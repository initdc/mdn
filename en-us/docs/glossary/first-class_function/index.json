{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"First-class Function","mdn_url":"/en-US/docs/Glossary/First-class_Function","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>A programming language is said to have <strong>First-class functions</strong> when functions in that language are treated like any other variable. For example, in such a language, a function can be passed as an argument to other functions, can be returned by another function and can be assigned as a value to a variable.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"assigning_a_function_to_a_variable","title":"Assigning a function to a variable","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">foo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foobar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Invoke it using the variable</span>\n<span class=\"token comment\">// foobar</span>\n</code></pre></div>\n<p>We assigned an <em>Anonymous Function</em> in a <a href=\"/en-US/docs/Glossary/Variable\">Variable</a>, then we used that variable to invoke the function by adding parentheses <code>()</code> at the end.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Even if your function was named, you can use the variable name to invoke it. Naming it will be helpful when debugging your code. <em>But it won't affect the way we invoke it.</em></p>\n</div>"}},{"type":"prose","value":{"id":"passing_a_function_as_an_argument","title":"Passing a function as an argument","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello, \"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">helloMessage<span class=\"token punctuation\">,</span> name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">helloMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Pass `sayHello` as an argument to `greeting` function</span>\n<span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span>sayHello<span class=\"token punctuation\">,</span> <span class=\"token string\">\"JavaScript!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Hello, JavaScript!</span>\n</code></pre></div>\n<p>We are passing our <code>sayHello()</code> function as an argument to the <code>greeting()</code> function, this explains how we are treating the function as a value.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> The function that we pass as an argument to another function is called a <em><a href=\"/en-US/docs/Glossary/Callback_function\">callback function</a></em>. <em><code>sayHello()</code> is a callback function.</em></p>\n</div>"}},{"type":"prose","value":{"id":"returning_a_function","title":"Returning a function","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>In this example, we are returning a function from another function - <em>We can return a function because functions in JavaScript are treated as values.</em></p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> A function that returns a function is called a <em>higher-order function</em>.</p>\n</div>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://en.wikipedia.org/wiki/First-class_function\" class=\"external\" rel=\" noopener\">First-class functions</a> on Wikipedia</li>\n  <li><a href=\"/en-US/docs/Glossary\">MDN Web Docs Glossary</a>\n    <ul>\n      <li><a href=\"/en-US/docs/Glossary/Callback_function\">Callback function</a></li>\n      <li><a href=\"/en-US/docs/Glossary/Function\">Function</a></li>\n      <li><a href=\"/en-US/docs/Glossary/Variable\">Variable</a></li>\n    </ul>\n  </li>\n</ul>"}}],"toc":[{"text":"Examples","id":"examples"},{"text":"See also","id":"see_also"}],"summary":"A programming language is said to have First-class functions when functions in that language are treated like any other variable. For example, in such a language, a function can be passed as an argument to other functions, can be returned by another function and can be assigned as a value to a variable.","popularity":0.0045,"modified":"2022-09-21T02:09:26.000Z","other_translations":[{"title":"Funcion de primera clase","locale":"es","native":"Español"},{"title":"Fonction de première classe","locale":"fr","native":"Français"},{"title":"First-class Function (第一級関数)","locale":"ja","native":"日本語"},{"title":"일급 함수","locale":"ko","native":"한국어"},{"title":"Função First-class","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Функции первого класса","locale":"ru","native":"Русский"},{"title":"First-class Function（头等函数）","locale":"zh-CN","native":"中文 (简体)"},{"title":"一級函式（First-class Function）","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/glossary/first-class_function","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/glossary/first-class_function/index.md","last_commit_url":"https://github.com/mdn/content/commit/ed947b2c608428b62a60f07d09dc543f732dc09b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Glossary","title":"MDN Web Docs Glossary: Definitions of Web-related terms"},{"uri":"/en-US/docs/Glossary/First-class_Function","title":"First-class Function"}],"pageTitle":"First-class Function - MDN Web Docs Glossary: Definitions of Web-related terms | MDN","noIndexing":false}}