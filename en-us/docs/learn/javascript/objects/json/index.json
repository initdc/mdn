{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Working with JSON","mdn_url":"/en-US/docs/Learn/JavaScript/Objects/JSON","locale":"en-US","native":"English (US)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/Getting_started_with_the_web\"><strong>Complete beginners start here!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Getting started with the Web</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web\">Getting started with the Web overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Installing basic software</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">What will your website look like?</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Dealing with files</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Publishing your website</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">How the Web works</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/HTML\"><strong>HTML — Structuring the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introduction to HTML</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML\">Introduction to HTML overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Getting started with HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">What's in the head? Metadata in HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML text fundamentals</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Creating hyperlinks</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Advanced text formatting</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Document and website structure</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Debugging HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Assessment: Marking up a letter</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Assessment: Structuring a page of content</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Multimedia and embedding</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding\">Multimedia and embedding overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Images in HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Video and audio content</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">From object to iframe — other embedding technologies</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adding vector graphics to the Web</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Responsive images</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Assessment: Mozilla splash page</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML tables</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables\">HTML tables overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/CSS\"><strong>CSS — Styling the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS first steps</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Styling text</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text\">Styling text overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamental text and font styling</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Styling_lists\">Styling lists</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Styling_links\">Styling links</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Web_fonts\">Web fonts</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Assessment: Typesetting a community school homepage</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS layout</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout\">CSS layout overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Floats\">Floats</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Positioning\">Positioning</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"open\"><a href=\"/en-US/docs/Learn/JavaScript\"><strong>JavaScript — Dynamic client-side scripting</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript first steps</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps\">JavaScript first steps overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">What is JavaScript?</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/A_first_splash\">A first splash into JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong\">What went wrong? Troubleshooting JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Variables\">Storing the information you need — Variables</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Math\">Basic math in JavaScript — Numbers and operators</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Strings\">Handling text — Strings in JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Useful string methods</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Arrays\">Arrays</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Assessment: Silly story generator</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript building blocks</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/conditionals\">Making decisions in your code — Conditionals</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code\">Looping code</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Functions\">Functions — Reusable blocks of code</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Build your own function</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Return_values\">Function return values</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Assessment: Image gallery</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details open=\"\">\n          <summary>Introducing JavaScript objects</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Basics\">Object basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_prototypes\">Object prototypes</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/JSON\">Working with JSON data</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_building_practice\">Object building practice</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Assessment: Adding features to our bouncing balls demo</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web APIs</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/en-US/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/en-US/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility guides</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Accessibility\">Accessibility overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility assessment</summary>\n        <ol>\n            <li><a href=\"/en-US/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing\"><strong>Tools and testing</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Cross browser testing</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\">Cross browser testing overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introduction to cross browser testing</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Strategies for carrying out testing</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Handling common HTML and CSS problems</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Handling common JavaScript problems</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Handling common accessibility problems</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementing feature detection</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introduction to automated testing</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Setting up your own test automation environment</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/Server-side\"><strong>Server-side website programming</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>First steps</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps\">First steps overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Introduction\">Introduction to the server-side</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview\">Client-Server overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Web_frameworks\">Server-side web frameworks</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Website_security\">Website security</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django web framework (Python)</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django\">Django web framework (Python) overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Introduction\">Introduction</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/development_environment\">Setting up a development environment</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial: The Local Library website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Models\">Tutorial Part 3: Using models</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Admin_site\">Tutorial Part 4: Django admin site</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Home_page\">Tutorial Part 5: Creating our home page</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Generic_views\">Tutorial Part 6: Generic list and detail views</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Sessions\">Tutorial Part 7: Sessions framework</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Authentication\">Tutorial Part 8: User authentication and permissions</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Forms\">Tutorial Part 9: Working with forms</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Testing\">Tutorial Part 10: Testing a Django web application</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial Part 11: Deploying Django to production</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/web_application_security\">Web application security</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/django_assessment_blog\">Assessment: DIY mini blog</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript) overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node (Express) development environment</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express tutorial: The Local Library website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Further resources</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Common questions</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/HTML/Howto\">HTML questions</a></li>\n          <li><a href=\"/en-US/docs/Learn/CSS/Howto\">CSS questions</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/en-US/docs/Learn/Common_questions#Web_mechanics\">Web mechanics</a></li>\n          <li><a href=\"/en-US/docs/Learn/Common_questions#Tools_and_setup\">Tools and setup</a></li>\n          <li><a href=\"/en-US/docs/Learn/Common_questions#Design_and_accessibility\">Design and accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\"> Previous </a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/JavaScript/Objects\"> Overview: Objects</a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/JavaScript/Objects/Object_building_practice\"> Next  </a></li>\n</ul>\n<p>JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax. It is commonly used for transmitting data in web applications (e.g., sending some data from the server to the client, so it can be displayed on a web page, or vice versa). You'll come across it quite often, so in this article, we give you all you need to work with JSON using JavaScript, including parsing JSON so you can access data within it, and creating JSON.</p>\n<table>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Prerequisites:</th>\n      <td>Basic computer literacy, a basic understanding of HTML and CSS, familiarity with JavaScript basics (see <a href=\"/en-US/docs/Learn/JavaScript/First_steps\">First steps</a> and <a href=\"/en-US/docs/Learn/JavaScript/Building_blocks\">Building blocks</a>) and OOJS basics (see <a href=\"/en-US/docs/Learn/JavaScript/Objects/Basics\">Introduction to objects</a>).</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Objective:</th>\n      <td>To understand how to work with data stored in JSON, and create your own JSON strings.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"no_really_what_is_json","title":"No, really, what is JSON?","isH3":false,"content":"<p>\n  <a href=\"/en-US/docs/Glossary/JSON\">JSON</a> is a text-based data format following JavaScript object syntax, which was popularized by <a href=\"https://en.wikipedia.org/wiki/Douglas_Crockford\" class=\"external\" rel=\" noopener\">Douglas Crockford</a>.\n  Even though it closely resembles JavaScript object literal syntax, it can be used independently from JavaScript, and many programming environments feature the ability to read (parse) and generate JSON.\n</p>\n<p>\n  JSON exists as a string — useful when you want to transmit data across a network.\n  It needs to be converted to a native JavaScript object when you want to access the data.\n  This is not a big issue — JavaScript provides a global <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a> object that has methods available for converting between the two.\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Converting a string to a native object is called <em>deserialization</em>, while converting a native object to a string so it can be transmitted across the network is called <em>serialization</em>.</p>\n</div>\n<p>A JSON string can be stored in its own file, which is basically just a text file with an extension of <code>.json</code>, and a <a href=\"/en-US/docs/Glossary/MIME_type\">MIME type</a> of <code>application/json</code>.</p>"}},{"type":"prose","value":{"id":"json_structure","title":"JSON structure","isH3":true,"content":"<p>\n  As described above, JSON is a string whose format very much resembles JavaScript object literal format.\n  You can include the same basic data types inside JSON as you can in a standard JavaScript object — strings, numbers, arrays, booleans, and other object literals.\n  This allows you to construct a data hierarchy, like so:\n</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"squadName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Super hero squad\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"homeTown\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Metro City\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"formed\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2016</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"secretBase\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Super tower\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"active\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"members\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Molecule Man\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"secretIdentity\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Dan Jukes\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"powers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Radiation resistance\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Turning tiny\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Radiation blast\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Madame Uppercut\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"secretIdentity\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Jane Wilson\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"powers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"Million tonne punch\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Damage resistance\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Superhuman reflexes\"</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Eternal Flame\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"secretIdentity\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Unknown\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"powers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"Immortality\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Heat Immunity\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Inferno\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Teleportation\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Interdimensional travel\"</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  If we loaded this string into a JavaScript program and parsed it into a variable called <code>superHeroes</code> for example, we could then access the data inside it using the same dot/bracket notation we looked at in the <a href=\"/en-US/docs/Learn/JavaScript/Objects/Basics\">JavaScript object basics</a> article.\n  For example:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>superHeroes<span class=\"token punctuation\">.</span>homeTown\nsuperHeroes<span class=\"token punctuation\">[</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>To access data further down the hierarchy, you have to chain the required property names and array indexes together. For example, to access the third superpower of the second hero listed in the members list, you'd do this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>superHeroes<span class=\"token punctuation\">[</span><span class=\"token string\">'members'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'powers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n</code></pre></div>\n<ol>\n  <li>First, we have the variable name — <code>superHeroes</code>.</li>\n  <li>Inside that, we want to access the <code>members</code> property, so we use <code>[\"members\"]</code>.</li>\n  <li><code>members</code> contains an array populated by objects. We want to access the second object inside the array, so we use <code>[1]</code>.</li>\n  <li>Inside this object, we want to access the <code>powers</code> property, so we use <code>[\"powers\"]</code>.</li>\n  <li>Inside the <code>powers</code> property is an array containing the selected hero's superpowers. We want the third one, so we use <code>[2]</code>.</li>\n</ol>\n<div class=\"notecard note\" id=\"sect2\">\n  <p>\n    <strong>Note:</strong> We've made the JSON seen above available inside a variable in our <a href=\"https://mdn.github.io/learning-area/javascript/oojs/json/JSONTest.html\" class=\"external\" rel=\" noopener\">JSONTest.html</a> example (see the <a href=\"https://github.com/mdn/learning-area/blob/main/javascript/oojs/json/JSONTest.html\" class=\"external\" rel=\" noopener\">source code</a>).\n    Try loading this up and then accessing data inside the variable via your browser's JavaScript console.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"arrays_as_json","title":"Arrays as JSON","isH3":true,"content":"<p>\n  Above we mentioned that JSON text basically looks like a JavaScript object inside a string.\n  We can also convert arrays to/from JSON. Below is also valid JSON, for example:\n</p>\n<div class=\"code-example\"><pre class=\"brush: json notranslate\"><code><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Molecule Man\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"secretIdentity\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Dan Jukes\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"powers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Radiation resistance\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Turning tiny\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Radiation blast\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Madame Uppercut\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"secretIdentity\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Jane Wilson\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"powers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"Million tonne punch\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"Damage resistance\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"Superhuman reflexes\"</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>The above is perfectly valid JSON. You'd just have to access array items (in its parsed version) by starting with an array index, for example <code>[0][\"powers\"][0]</code>.</p>"}},{"type":"prose","value":{"id":"other_notes","title":"Other notes","isH3":true,"content":"<ul>\n  <li>JSON is purely a string with a specified data format — it contains only properties, no methods.</li>\n  <li>\n    JSON requires double quotes to be used around strings and property names.\n    Single quotes are not valid other than surrounding the entire JSON string.\n  </li>\n  <li>\n    Even a single misplaced comma or colon can cause a JSON file to go wrong, and not work.\n    You should be careful to validate any data you are attempting to use (although computer-generated JSON is less likely to include errors, as long as the generator program is working correctly).\n    You can validate JSON using an application like <a href=\"https://jsonlint.com/\" class=\"external\" rel=\" noopener\">JSONLint</a>.\n  </li>\n  <li>\n    JSON can actually take the form of any data type that is valid for inclusion inside JSON, not just arrays or objects.\n    So for example, a single string or number would be valid JSON.\n  </li>\n  <li>Unlike in JavaScript code in which object properties may be unquoted, in JSON only quoted strings may be used as properties.</li>\n</ul>"}},{"type":"prose","value":{"id":"active_learning_working_through_a_json_example","title":"Active learning: Working through a JSON example","isH3":false,"content":"<p>So, let's work through an example to show how we could make use of some JSON formatted data on a website.</p>"}},{"type":"prose","value":{"id":"getting_started","title":"Getting started","isH3":true,"content":"<p>\n  To begin with, make local copies of our <a href=\"https://github.com/mdn/learning-area/blob/main/javascript/oojs/json/heroes.html\" class=\"external\" rel=\" noopener\">heroes.html</a> and <a href=\"https://github.com/mdn/learning-area/blob/main/javascript/oojs/json/style.css\" class=\"external\" rel=\" noopener\">style.css</a> files.\n  The latter contains some simple CSS to style our page, while the former contains some very simple body HTML, plus a <a href=\"/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> element to contain the JavaScript code we will be writing in this exercise:\n</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>We have made our JSON data available on our GitHub, at <a href=\"https://mdn.github.io/learning-area/javascript/oojs/json/superheroes.json\" class=\"external\" rel=\" noopener\">https://mdn.github.io/learning-area/javascript/oojs/json/superheroes.json</a>.</p>\n<p>We are going to load the JSON into our script, and use some nifty DOM manipulation to display it, like this:</p>\n<p>\n  <img src=\"/en-US/docs/Learn/JavaScript/Objects/JSON/json-superheroes.png\" alt=\"Image of a document titled &quot;Super hero squad&quot; (in a fancy font) and subtitled &quot;Hometown: Metro City // Formed: 2016&quot;. Three columns below the heading are titled &quot;Molecule Man&quot;, &quot;Madame Uppercut&quot;, and &quot;Eternal Flame&quot;, respectively. Each column lists the hero's secret identity name, age, and superpowers.\" width=\"839\" height=\"535\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"top-level_function","title":"Top-level function","isH3":true,"content":"<p>The top-level function looks like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> requestURL <span class=\"token operator\">=</span> <span class=\"token string\">'https://mdn.github.io/learning-area/javascript/oojs/json/superheroes.json'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span>requestURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> superHeroes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">populateHeader</span><span class=\"token punctuation\">(</span>superHeroes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">populateHeroes</span><span class=\"token punctuation\">(</span>superHeroes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  To obtain the JSON, we use an API called <a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch</a>.\n  This API allows us to make network requests to retrieve resources from a server via JavaScript (e.g. images, text, JSON, even HTML snippets), meaning that we can update small sections of content without having to reload the entire page.\n</p>\n<p>In our function, the first four lines use the Fetch API to fetch the JSON from the server:</p>\n<ul>\n  <li>we declare the <code>requestURL</code> variable to store the GitHub URL</li>\n  <li>we use the URL to initialize a new <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> object.</li>\n  <li>we make the network request using the <a href=\"/en-US/docs/Web/API/fetch\" title=\"fetch()\"><code>fetch()</code></a> function, and this returns a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> object</li>\n  <li>we retrieve the response as JSON using the <a href=\"/en-US/docs/Web/API/Response/json\" title=\"json()\"><code>json()</code></a> function of the <code>Response</code> object.</li>\n</ul>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> The <code>fetch()</code> API is <strong>asynchronous</strong>. We'll learn a lot about asynchronous functions in <a href=\"/en-US/docs/Learn/JavaScript/Asynchronous\">the next module</a>, but for now, we'll just say that we need to add the keyword <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/async_function\"><code>async</code></a> before the name of the function that uses the fetch API, and add the keyword <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/await\"><code>await</code></a> before the calls to any asynchronous functions.</p>\n</div>\n<p>After all that, the <code>superHeroes</code> variable will contain the JavaScript object based on the JSON. We are then passing that object to two function calls — the first one fills the <code>&lt;header&gt;</code> with the correct data, while the second one creates an information card for each hero on the team, and inserts it into the <code>&lt;section&gt;</code>.</p>"}},{"type":"prose","value":{"id":"populating_the_header","title":"Populating the header","isH3":true,"content":"<p>Now that we've retrieved the JSON data and converted it into a JavaScript object, let's make use of it by writing the two functions we referenced above. First of all, add the following function definition below the previous code:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">populateHeader</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> header <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'header'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> myH1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  myH1<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>squadName<span class=\"token punctuation\">;</span>\n  header<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myH1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> myPara <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  myPara<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hometown: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>obj<span class=\"token punctuation\">.</span>homeTown<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> // Formed: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>obj<span class=\"token punctuation\">.</span>formed<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  header<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myPara<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Here we first create an <a href=\"/en-US/docs/Web/HTML/Element/Heading_Elements\"><code>&lt;h1&gt;</code></a> element with <a href=\"/en-US/docs/Web/API/Document/createElement\"><code>createElement()</code></a>, set its <a href=\"/en-US/docs/Web/API/Node/textContent\"><code>textContent</code></a> to equal the <code>squadName</code> property of the object, then append it to the header using <a href=\"/en-US/docs/Web/API/Node/appendChild\"><code>appendChild()</code></a>. We then do a very similar operation with a paragraph: create it, set its text content and append it to the header. The only difference is that its text is set to a <a href=\"/en-US/docs/Web/JavaScript/Reference/Template_literals\">template literal</a> containing both the <code>homeTown</code> and <code>formed</code> properties of the object.</p>"}},{"type":"prose","value":{"id":"creating_the_hero_information_cards","title":"Creating the hero information cards","isH3":true,"content":"<p>Next, add the following function at the bottom of the code, which creates and displays the superhero cards:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">populateHeroes</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> section <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'section'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> heroes <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>members<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> hero <span class=\"token keyword\">of</span> heroes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> myArticle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'article'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> myH2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> myPara1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> myPara2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> myPara3 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> myList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    myH2<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> hero<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n    myPara1<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Secret identity: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>hero<span class=\"token punctuation\">.</span>secretIdentity<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    myPara2<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Age: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>hero<span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    myPara3<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Superpowers:'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> superPowers <span class=\"token operator\">=</span> hero<span class=\"token punctuation\">.</span>powers<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> power <span class=\"token keyword\">of</span> superPowers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> listItem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      listItem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> power<span class=\"token punctuation\">;</span>\n      myList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>listItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    myArticle<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myH2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myArticle<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myPara1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myArticle<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myPara2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myArticle<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myPara3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myArticle<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    section<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myArticle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>To start with, we store the <code>members</code> property of the JavaScript object in a new variable. This array contains multiple objects that contain the information for each hero.</p>\n<p>Next, we use a <a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code#the_for...of_loop\">for...of loop</a> to loop through each object in the array. For each one, we:</p>\n<ol>\n  <li>Create several new elements: an <code>&lt;article&gt;</code>, an <code>&lt;h2&gt;</code>, three <code>&lt;p&gt;</code>s, and a <code>&lt;ul&gt;</code>.</li>\n  <li>Set the <code>&lt;h2&gt;</code> to contain the current hero's <code>name</code>.</li>\n  <li>Fill the three paragraphs with their <code>secretIdentity</code>, <code>age</code>, and a line saying \"Superpowers:\" to introduce the information in the list.</li>\n  <li>Store the <code>powers</code> property in another new constant called <code>superPowers</code> — this contains an array that lists the current hero's superpowers.</li>\n  <li>Use another <code>for...of</code> loop to loop through the current hero's superpowers — for each one we create an <code>&lt;li&gt;</code> element, put the superpower inside it, then put the <code>listItem</code> inside the <code>&lt;ul&gt;</code> element (<code>myList</code>) using <code>appendChild()</code>.</li>\n  <li>The very last thing we do is to append the <code>&lt;h2&gt;</code>, <code>&lt;p&gt;</code>s, and <code>&lt;ul&gt;</code> inside the <code>&lt;article&gt;</code> (<code>myArticle</code>), then append the <code>&lt;article&gt;</code> inside the <code>&lt;section&gt;</code>. The order in which things are appended is important, as this is the order they will be displayed inside the HTML.</li>\n</ol>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> If you are having trouble getting the example to work, try referring to our <a href=\"https://github.com/mdn/learning-area/blob/main/javascript/oojs/json/heroes-finished.html\" class=\"external\" rel=\" noopener\">heroes-finished.html</a> source code (see it <a href=\"https://mdn.github.io/learning-area/javascript/oojs/json/heroes-finished.html\" class=\"external\" rel=\" noopener\">running live</a> also.)</p>\n</div>\n<div class=\"notecard note\" id=\"sect5\">\n  <p>\n    <strong>Note:</strong> If you are having trouble following the dot/bracket notation we are using to access the JavaScript object, it can help to have the <a href=\"https://mdn.github.io/learning-area/javascript/oojs/json/superheroes.json\" class=\"external\" rel=\" noopener\">superheroes.json</a> file open in another tab or your text editor, and refer to it as you look at our JavaScript.\n    You should also refer back to our <a href=\"/en-US/docs/Learn/JavaScript/Objects/Basics\">JavaScript object basics</a> article for more information on dot and bracket notation.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"calling_the_top-level_function","title":"Calling the top-level function","isH3":true,"content":"<p>Finally, we need to call our top-level <code>populate()</code> function:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"converting_between_objects_and_text","title":"Converting between objects and text","isH3":false,"content":"<p>The above example was simple in terms of accessing the JavaScript object, because we converted the network response directly into a JavaScript object using <code>response.json()</code>.</p>\n<p>But sometimes we aren't so lucky — sometimes we receive a raw JSON string, and we need to convert it to an object ourselves. And when we want to send a JavaScript object across the network, we need to convert it to JSON (a string) before sending it. Luckily, these two problems are so common in web development that a built-in <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON</a> object is available in browsers, which contains the following two methods:</p>\n<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"><code>parse()</code></a>: Accepts a JSON string as a parameter, and returns the corresponding JavaScript object.</li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"><code>stringify()</code></a>: Accepts an object as a parameter, and returns the equivalent JSON string.</li>\n</ul>\n<p>You can see the first one in action in our <a href=\"https://mdn.github.io/learning-area/javascript/oojs/json/heroes-finished-json-parse.html\" class=\"external\" rel=\" noopener\">heroes-finished-json-parse.html</a> example (see the <a href=\"https://github.com/mdn/learning-area/blob/main/javascript/oojs/json/heroes-finished-json-parse.html\" class=\"external\" rel=\" noopener\">source code</a>) — this does exactly the same thing as the example we built up earlier, except that:</p>\n<ul>\n  <li>we retrieve the response as text rather than JSON, by calling the <a href=\"/en-US/docs/Web/API/Response/text\" title=\"text()\"><code>text()</code></a> method of the response</li>\n  <li>we then use <code>parse()</code> to convert the text to a JavaScript object.</li>\n</ul>\n<p>The key snippet of code is here:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> requestURL <span class=\"token operator\">=</span> <span class=\"token string\">'https://mdn.github.io/learning-area/javascript/oojs/json/superheroes.json'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span>requestURL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> superHeroesText <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> superHeroes <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>superHeroesText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">populateHeader</span><span class=\"token punctuation\">(</span>superHeroes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">populateHeroes</span><span class=\"token punctuation\">(</span>superHeroes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>As you might guess, <code>stringify()</code> works the opposite way. Try entering the following lines into your browser's JavaScript console one by one to see it in action:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Chris\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">38</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nmyObj\n<span class=\"token keyword\">let</span> myString <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyString\n</code></pre></div>\n<p>Here we're creating a JavaScript object, then checking what it contains, then converting it to a JSON string using <code>stringify()</code> — saving the return value in a new variable — then checking it again.</p>"}},{"type":"prose","value":{"id":"test_your_skills!","title":"Test your skills!","isH3":false,"content":"<p>You've reached the end of this article, but can you remember the most important information? You can find some further tests to verify that you've retained this information before you move on — see <a href=\"/en-US/docs/Learn/JavaScript/Objects/Test_your_skills:_JSON\">Test your skills: JSON</a>.</p>"}},{"type":"prose","value":{"id":"summary","title":"Summary","isH3":false,"content":"<p>In this article, we've given you a simple guide to using JSON in your programs, including how to create and parse JSON, and how to access data locked inside it. In the next article, we'll begin looking at object-oriented JavaScript.</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\">JSON reference</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API overview</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Fetch_API/Using_Fetch\">Using Fetch</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP/Methods\">HTTP request methods</a></li>\n  <li><a href=\"https://json.org\" class=\"external\" rel=\" noopener\">Official JSON web site with link to ECMA standard</a></li>\n</ul><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\"> Previous </a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/JavaScript/Objects\"> Overview: Objects</a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/JavaScript/Objects/Object_building_practice\"> Next  </a></li>\n</ul>"}},{"type":"prose","value":{"id":"in_this_module","title":"In this module","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Basics\">Object basics</a></li>\n  <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_prototypes\">Object prototypes</a></li>\n  <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n  <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n  <li><strong>Working with JSON data</strong></li>\n  <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_building_practice\">Object building practice</a></li>\n  <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Adding features to our bouncing balls demo</a></li>\n</ul>"}}],"toc":[{"text":"No, really, what is JSON?","id":"no_really_what_is_json"},{"text":"Active learning: Working through a JSON example","id":"active_learning_working_through_a_json_example"},{"text":"Converting between objects and text","id":"converting_between_objects_and_text"},{"text":"Test your skills!","id":"test_your_skills!"},{"text":"Summary","id":"summary"},{"text":"See also","id":"see_also"},{"text":"In this module","id":"in_this_module"}],"summary":"In this article, we've given you a simple guide to using JSON in your programs, including how to create and parse JSON, and how to access data locked inside it. In the next article, we'll begin looking at object-oriented JavaScript.","popularity":0.0351,"modified":"2022-09-25T01:06:20.000Z","other_translations":[{"title":"Trabajando con JSON","locale":"es","native":"Español"},{"title":"Manipuler des données JSON","locale":"fr","native":"Français"},{"title":"JSON の操作","locale":"ja","native":"日本語"},{"title":"JSON으로 작업하기","locale":"ko","native":"한국어"},{"title":"Trabalhando com JSON","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Работа с JSON","locale":"ru","native":"Русский"},{"title":"使用 JSON","locale":"zh-CN","native":"中文 (简体)"},{"title":"使用 JSON 資料","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/learn/javascript/objects/json","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/learn/javascript/objects/json/index.md","last_commit_url":"https://github.com/mdn/content/commit/88d5189dfa3d57438e0bc4ef58c612de1c4f568e","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Learn","title":"Learn web development"},{"uri":"/en-US/docs/Learn/JavaScript","title":"JavaScript — Dynamic client-side scripting"},{"uri":"/en-US/docs/Learn/JavaScript/Objects","title":"Introducing JavaScript objects"},{"uri":"/en-US/docs/Learn/JavaScript/Objects/JSON","title":"Working with JSON"}],"pageTitle":"Working with JSON - Learn web development | MDN","noIndexing":false}}