{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Date formatting using luxon","mdn_url":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Date_formatting_using_moment","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The default rendering of dates from our models is very ugly: <em>Tue Oct 06 2020 15:49:58 GMT+1100 (AUS Eastern Daylight Time)</em>. In this section we'll show how you can update the <em>BookInstance List</em> page from the previous section to present the <code>due_date</code> field in a more friendly format: Oct 6th, 2020.</p>\n<p>The approach we will use is to create a virtual property in our <code>BookInstance</code> model that returns the formatted date. We'll do the actual formatting using <a href=\"https://www.npmjs.com/package/luxon\" class=\"external\" rel=\" noopener\">luxon</a>, a powerful, modern, and friendly library for parsing, validating, manipulating, formatting and localising dates.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> It is possible to use <em>luxon</em> to format the strings directly in our Pug templates, or we could format the string in a number of other places. Using a virtual property allows us to get the formatted date in exactly the same way as we get the <code>due_date</code> currently.</p>\n</div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> This tutorial previously used the <a href=\"https://www.npmjs.com/package/moment\" class=\"external\" rel=\" noopener\">moment</a> library for date formatting. We've moved to Luxon because moment has <a href=\"https://momentjs.com/docs/#/-project-status/\" class=\"external\" rel=\" noopener\">declared itself \"legacy\"</a>. Luxon is one of the <a href=\"https://momentjs.com/docs/#/-project-status/recommendations/\" class=\"external\" rel=\" noopener\">moment project's main recommendations</a> for a great alternative library.</p>\n</div>"}},{"type":"prose","value":{"id":"install_luxon","title":"Install luxon","isH3":false,"content":"<p>Enter the following command in the root of the project:</p>\n<div class=\"code-example\"><pre class=\"brush: bash notranslate\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> luxon\n</code></pre></div>"}},{"type":"prose","value":{"id":"create_the_virtual_property","title":"Create the virtual property","isH3":false,"content":"<ol>\n  <li>Open <strong>./models/bookinstance.js</strong>.</li>\n  <li>At the top of the page, import <em>luxon</em>.\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> DateTime <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"luxon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n  </li>\n</ol>\n<p>Add the virtual property <code>due_back_formatted</code> just after the URL property.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>BookInstanceSchema<span class=\"token punctuation\">.</span><span class=\"token function\">virtual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"due_back_formatted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> DateTime<span class=\"token punctuation\">.</span><span class=\"token function\">fromJSDate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>due_back<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span>DateTime<span class=\"token punctuation\">.</span><span class=\"token constant\">DATE_MED</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p>\n    <strong>Note:</strong> Luxon can import strings in many formats and export to both predefined and free-form formats. In this case we use <code>fromJSDate()</code> to import a JavaScript date string and <code>toLocaleString()</code> to output the date in <code>DATE_MED</code> format in English: Oct 6th, 2020.\n    For information about other formats and date string internationalization see the Luxon documentation on <a href=\"https://github.com/moment/luxon/blob/master/docs/formatting.md#formatting\" class=\"external\" rel=\" noopener\">formatting</a>.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"update_the_view","title":"Update the view","isH3":false,"content":"<p>Open <strong>/views/bookinstance_list.pug</strong> and replace <code>due_back</code> with <code>due_back_formatted</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: pug notranslate\">      if val.status != 'Available'\n        //span  (Due: #{val.due_back} )\n        span  (Due: #{val.due_back_formatted} )\n</pre></div>\n<p>That's it. If you go to <em>All book-instances</em> in the sidebar, you should now see all the due dates are far more attractive!</p>"}},{"type":"prose","value":{"id":"next_steps","title":"Next steps","isH3":false,"content":"<ul>\n  <li>Return to <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a>.</li>\n  <li>Proceed to the next subarticle of part 5: <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_list_page\">Author list page and Genre list page challenge</a>.</li>\n</ul>"}}],"toc":[{"text":"Install luxon","id":"install_luxon"},{"text":"Create the virtual property","id":"create_the_virtual_property"},{"text":"Update the view","id":"update_the_view"},{"text":"Next steps","id":"next_steps"}],"summary":"The default rendering of dates from our models is very ugly: Tue Oct 06 2020 15:49:58 GMT+1100 (AUS Eastern Daylight Time). In this section we'll show how you can update the BookInstance List page from the previous section to present the due_date field in a more friendly format: Oct 6th, 2020.","popularity":0.0008,"modified":"2022-09-13T08:30:46.000Z","other_translations":[{"title":"moment を使用した日付のフォーマット","locale":"ja","native":"日本語"},{"title":"Форматирование даты при помощи moment","locale":"ru","native":"Русский"},{"title":"使用 moment 做日期格式化","locale":"zh-CN","native":"中文 (简体)"},{"title":"使用 moment 做日期格式化","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/learn/server-side/express_nodejs/displaying_data/date_formatting_using_moment","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/learn/server-side/express_nodejs/displaying_data/date_formatting_using_moment/index.md","last_commit_url":"https://github.com/mdn/content/commit/a029de1c59adf6ab6e83abe083be4d0aadf21654","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Learn","title":"Learn web development"},{"uri":"/en-US/docs/Learn/Server-side","title":"Server-side website programming"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs","title":"Express web framework (Node.js/JavaScript)"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express Tutorial Part 5: Displaying library data"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Date_formatting_using_moment","title":"Date formatting using luxon"}],"pageTitle":"Date formatting using luxon - Learn web development | MDN","noIndexing":false}}