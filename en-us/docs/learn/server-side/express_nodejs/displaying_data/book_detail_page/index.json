{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Book detail page","mdn_url":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <em>Book detail page</em> needs to display the information for a specific <code>Book</code> (identified using its automatically generated <code>_id</code> field value), along with information about each associated copy in the library (<code>BookInstance</code>). Wherever we display an author, genre, or book instance, these should be linked to the associated detail page for that item.</p>"}},{"type":"prose","value":{"id":"controller","title":"Controller","isH3":false,"content":"<p>Open <strong>/controllers/bookController.js</strong>. Find the exported <code>book_detail()</code> controller method and replace it with the following code.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Display detail page for a specific book.</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">book_detail</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  async<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">book</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Book<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"author\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"genre\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">book_instance</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        BookInstance<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">book</span><span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> results</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>book <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// No results.</span>\n        <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Book not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        err<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Successful, so render.</span>\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book_detail\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> results<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">book</span><span class=\"token operator\">:</span> results<span class=\"token punctuation\">.</span>book<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">book_instances</span><span class=\"token operator\">:</span> results<span class=\"token punctuation\">.</span>book_instance<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> We don't need to require <code>async</code> and <code>BookInstance</code> in this step, as we already imported those modules when we implemented the home page controller.</p>\n</div>\n<p>The method uses <code>async.parallel()</code> to find the <code>Book</code> and its associated copies (<code>BookInstances</code>) in parallel. The approach is exactly the same as described for the <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Genre_detail_page\">Genre detail page</a>. Since the key 'title' is used to give name to the webpage (as defined in the header in 'layout.pug'), this time we are passing <code>results.book.title</code> while rendering the webpage.</p>"}},{"type":"prose","value":{"id":"view","title":"View","isH3":false,"content":"<p>Create <strong>/views/book_detail.pug</strong> and add the text below.</p>\n<div class=\"code-example\"><pre class=\"brush: pug notranslate\">extends layout\n\nblock content\n  h1 Title: #{book.title}\n\n  p #[strong Author:]\n    a(href=book.author.url) #{book.author.name}\n  p #[strong Summary:] #{book.summary}\n  p #[strong ISBN:] #{book.isbn}\n  p #[strong Genre:]\n    each val, index in book.genre\n      a(href=val.url) #{val.name}\n      if index &lt; book.genre.length - 1\n        |,\n\n  div(style='margin-left:20px;margin-top:20px')\n    h4 Copies\n\n    each val in book_instances\n      hr\n      if val.status=='Available'\n        p.text-success #{val.status}\n      else if val.status=='Maintenance'\n        p.text-danger #{val.status}\n      else\n        p.text-warning #{val.status}\n      p #[strong Imprint:] #{val.imprint}\n      if val.status!='Available'\n        p #[strong Due back:] #{val.due_back}\n      p #[strong Id:]\n        a(href=val.url) #{val._id}\n\n    else\n      p There are no copies of this book in the library.\n</pre></div>\n<p>Almost everything in this template has been demonstrated in previous sections.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> The list of genres associated with the book is implemented in the template as below. This adds a comma after every genre associated with the book except for the last one.</p>\n  <div class=\"code-example\"><pre class=\"brush: pug notranslate\">  p #[strong Genre:]\n    each val, index in book.genre\n      a(href=val.url) #{val.name}\n      if index &lt; book.genre.length - 1\n        |,\n</pre></div>\n</div>"}},{"type":"prose","value":{"id":"what_does_it_look_like","title":"What does it look like?","isH3":false,"content":"<p>Run the application and open your browser to <code>http://localhost:3000/</code>. Select the <em>All books</em> link, then select one of the books. If everything is set up correctly, your page should look something like the following screenshot.</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page/locallibary_express_book_detail.png\" alt=\"Book Detail Page - Express Local Library site\" width=\"1491\" height=\"765\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"next_steps","title":"Next steps","isH3":false,"content":"<ul>\n  <li>Return to <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a>.</li>\n  <li>Proceed to the next subarticle of part 5: <a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Author_detail_page\">Author detail page</a>.</li>\n</ul>"}}],"toc":[{"text":"Controller","id":"controller"},{"text":"View","id":"view"},{"text":"What does it look like?","id":"what_does_it_look_like"},{"text":"Next steps","id":"next_steps"}],"summary":"The Book detail page needs to display the information for a specific Book (identified using its automatically generated _id field value), along with information about each associated copy in the library (BookInstance). Wherever we display an author, genre, or book instance, these should be linked to the associated detail page for that item.","popularity":0.0003,"modified":"2022-09-09T07:06:10.000Z","other_translations":[{"title":"本の詳細ページ","locale":"ja","native":"日本語"},{"title":"书本详细信息页面","locale":"zh-CN","native":"中文 (简体)"},{"title":"書本詳情頁面","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/learn/server-side/express_nodejs/displaying_data/book_detail_page","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/learn/server-side/express_nodejs/displaying_data/book_detail_page/index.md","last_commit_url":"https://github.com/mdn/content/commit/f4f8e2f18ccf19a0bee59e1fe78753e276b98232","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Learn","title":"Learn web development"},{"uri":"/en-US/docs/Learn/Server-side","title":"Server-side website programming"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs","title":"Express web framework (Node.js/JavaScript)"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data","title":"Express Tutorial Part 5: Displaying library data"},{"uri":"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Book_detail_page","title":"Book detail page"}],"pageTitle":"Book detail page - Learn web development | MDN","noIndexing":false}}