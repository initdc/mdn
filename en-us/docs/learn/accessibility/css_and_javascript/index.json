{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CSS and JavaScript accessibility best practices","mdn_url":"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript","locale":"en-US","native":"English (US)","sidebarHTML":"\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/Getting_started_with_the_web\"><strong>Complete beginners start here!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Getting started with the Web</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web\">Getting started with the Web overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Installing basic software</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">What will your website look like?</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Dealing with files</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Publishing your website</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">How the Web works</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/HTML\"><strong>HTML — Structuring the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introduction to HTML</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML\">Introduction to HTML overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Getting started with HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">What's in the head? Metadata in HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML text fundamentals</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Creating hyperlinks</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Advanced text formatting</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Document and website structure</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Debugging HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Assessment: Marking up a letter</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Assessment: Structuring a page of content</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Multimedia and embedding</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding\">Multimedia and embedding overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Images in HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Video and audio content</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">From object to iframe — other embedding technologies</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adding vector graphics to the Web</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Responsive images</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Assessment: Mozilla splash page</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML tables</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables\">HTML tables overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/CSS\"><strong>CSS — Styling the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS first steps</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Styling text</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text\">Styling text overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamental text and font styling</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Styling_lists\">Styling lists</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Styling_links\">Styling links</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Web_fonts\">Web fonts</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Assessment: Typesetting a community school homepage</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS layout</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout\">CSS layout overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Floats\">Floats</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Positioning\">Positioning</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/JavaScript\"><strong>JavaScript — Dynamic client-side scripting</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript first steps</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps\">JavaScript first steps overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">What is JavaScript?</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/A_first_splash\">A first splash into JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong\">What went wrong? Troubleshooting JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Variables\">Storing the information you need — Variables</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Math\">Basic math in JavaScript — Numbers and operators</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Strings\">Handling text — Strings in JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Useful string methods</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Arrays\">Arrays</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Assessment: Silly story generator</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript building blocks</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/conditionals\">Making decisions in your code — Conditionals</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code\">Looping code</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Functions\">Functions — Reusable blocks of code</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Build your own function</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Return_values\">Function return values</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Assessment: Image gallery</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introducing JavaScript objects</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Basics\">Object basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_prototypes\">Object prototypes</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/JSON\">Working with JSON data</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_building_practice\">Object building practice</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Assessment: Adding features to our bouncing balls demo</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Concepts\">General asynchronous programming concepts</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Promises\">Graceful asynchronous programming with Promises</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Async_await\">Making asynchronous programming easier with async and await</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\">Choosing the right approach</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web APIs</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/en-US/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/en-US/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Accessibility guides</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Accessibility\">Accessibility overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Accessibility assessment</summary>\n        <ol>\n            <li><a href=\"/en-US/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing\"><strong>Tools and testing</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Cross browser testing</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\">Cross browser testing overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introduction to cross browser testing</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Strategies for carrying out testing</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Handling common HTML and CSS problems</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Handling common JavaScript problems</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Handling common accessibility problems</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementing feature detection</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introduction to automated testing</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Setting up your own test automation environment</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/Server-side\"><strong>Server-side website programming</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>First steps</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps\">First steps overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Introduction\">Introduction to the server-side</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview\">Client-Server overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Web_frameworks\">Server-side web frameworks</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Website_security\">Website security</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django web framework (Python)</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django\">Django web framework (Python) overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Introduction\">Introduction</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/development_environment\">Setting up a development environment</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial: The Local Library website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Models\">Tutorial Part 3: Using models</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Admin_site\">Tutorial Part 4: Django admin site</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Home_page\">Tutorial Part 5: Creating our home page</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Generic_views\">Tutorial Part 6: Generic list and detail views</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Sessions\">Tutorial Part 7: Sessions framework</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Authentication\">Tutorial Part 8: User authentication and permissions</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Forms\">Tutorial Part 9: Working with forms</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Testing\">Tutorial Part 10: Testing a Django web application</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial Part 11: Deploying Django to production</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/web_application_security\">Web application security</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/django_assessment_blog\">Assessment: DIY mini blog</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript) overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node (Express) development environment</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express tutorial: The Local Library website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Further resources</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Common questions</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/HTML/Howto\">HTML questions</a></li>\n          <li><a href=\"/en-US/docs/Learn/CSS/Howto\">CSS questions</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/en-US/docs/Learn/Common_questions#Web_mechanics\">Web mechanics</a></li>\n          <li><a href=\"/en-US/docs/Learn/Common_questions#Tools_and_setup\">Tools and setup</a></li>\n          <li><a href=\"/en-US/docs/Learn/Common_questions#Design_and_accessibility\">Design and accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/Accessibility/HTML\"> Previous </a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/Accessibility\"> Overview: Accessibility</a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\"> Next  </a></li>\n</ul>\n<p>CSS and JavaScript, when used properly, also have the potential to allow for accessible web experiences, or they can significantly harm accessibility if misused. This article outlines some CSS and JavaScript best practices that should be considered to ensure even complex content is as accessible as possible.</p>\n<table>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Prerequisites:</th>\n      <td>\n        Basic computer literacy, a basic understanding of HTML, CSS, and\n        JavaScript, and understanding of\n        <a href=\"/en-US/docs/Learn/Accessibility/What_is_accessibility\">what accessibility is</a>.\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Objective:</th>\n      <td>\n        To gain familiarity with using CSS and JavaScript appropriately in your\n        web documents to maximize accessibility and not detract from it.\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"css_and_javascript_are_accessible","title":"CSS and JavaScript are accessible?","isH3":false,"content":"<p>CSS and JavaScript don't have the same immediate importance for accessibility as HTML, but they are still able to help or damage accessibility, depending on how they are used. To put it another way, it is important that you consider some best practice advice to make sure that your use of CSS and JavaScript doesn't ruin the accessibility of your documents.</p>"}},{"type":"prose","value":{"id":"css","title":"CSS","isH3":false,"content":"<p>Let's start off by looking at CSS.</p>"}},{"type":"prose","value":{"id":"correct_semantics_and_user_expectation","title":"Correct semantics and user expectation","isH3":true,"content":"<p>It is possible to use CSS to make any HTML element look like <em>anything</em>, but this doesn't mean that you should. As we frequently mentioned in our <a href=\"/en-US/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a> article, you should use the appropriate semantic element for the job, whenever possible. If you don't, it can cause confusion and usability issues for everyone, but particularly users with disabilities. Using correct semantics has a lot to do with user expectations — elements look and behave in certain ways, according to their functionality, and these common conventions are expected by users.</p>\n<p>As an example, a screen reader user can't navigate a page via heading elements if the developer hasn't appropriately used heading elements to markup the content. By the same token, a heading loses its visual purpose if you style it so it doesn't look like a heading.</p>\n<p>Bottom line, you can update the styling of a page feature to fit in your design, but don't change it so much that it no longer looks or behaves as expected. The following sections summarize the main HTML features to consider.</p>\n<h4 id=\"standard_text_content_structure\">\"Standard\" text content structure</h4>\n<p>Headings, paragraphs, lists — the core text content of your page:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>Heading<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Paragraph<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>My list<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>has two items.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>Some typical CSS might look like this:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 5rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">p,\nli</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 1.5<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.6rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>You should:</p>\n<ul>\n  <li>Select sensible font sizes, line heights, letter spacing, etc. to make your text logical, legible, and comfortable to read.</li>\n  <li>Make sure your headings stand out from your body text, typically big and bold like the default styling. Your lists should look like lists.</li>\n  <li>Your text color should contrast well with your background color.</li>\n</ul>\n<p>See <a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML text fundamentals</a> and <a href=\"/en-US/docs/Learn/CSS/Styling_text\">Styling text</a> for more information.</p>\n<h4 id=\"emphasized_text\">Emphasized text</h4>\n<p>Inline markup that confers specific emphasis to the text that it wraps:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>The water is <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span><span class=\"token punctuation\">&gt;</span></span>very hot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">&gt;</span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  Water droplets collecting on surfaces is called <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span>condensation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span>.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>You might want to add some simple coloring to your emphasized text:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">strong,\nem</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #a60000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>You will however rarely need to style emphasis elements in any significant way. The standard conventions of bold and italic text are very recognizable, and changing the style can cause confusion. For more on emphasis, see <a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals#emphasis_and_importance\">Emphasis and importance</a>.</p>\n<h4 id=\"abbreviations\">Abbreviations</h4>\n<p>An element that allows an abbreviation, acronym, or initialization to be associated with its expansion:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  Web content is marked up using Hypertext Markup Language, or\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>abbr</span><span class=\"token punctuation\">&gt;</span></span>HTML<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>abbr</span><span class=\"token punctuation\">&gt;</span></span>.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>Again, you might want to style it in some simple way:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">abbr</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #a60000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>The recognized styling convention for abbreviations is a dotted underline, and it is unwise to significantly deviate from this. For more on abbreviations, see <a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#abbreviations\">Abbreviations</a>.</p>\n<h4 id=\"links\">Links</h4>\n<p>Hyperlinks — the way you get to new places on the web:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>Visit the <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://www.mozilla.org<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Mozilla homepage<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>Some very simple link styling is shown below:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ff0000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a:hover,\na:visited,\na:focus</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #a60000<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a:active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #000000<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #a60000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>The standard link conventions are underlined and a different color (default: blue) in their standard state, another color variation when the link has previously been visited (default: purple), and yet another color when the link is activated (default: red). In addition, the mouse pointer changes to a pointer icon when links are moused over, and the link receives a highlight when focused (e.g. via tabbing) or activated. The following image shows the highlight in both Firefox (a dotted outline) and Chrome (a blue outline):</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript/focus-highlight-firefox.png\" alt=\"Screenshot of a list of links in Firefox browser. The list contains 4 items. The second list item is highlighted using a blue dotted outline when it is focussed via tabbing.\" width=\"319\" height=\"173\" loading=\"lazy\">\n</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript/focus-highlight-chrome.png\" alt=\"Screenshot of a list of links in Chrome browser. The list contains 4 items. The third list item is highlighted using a blue outline when it is focussed via tabbing.\" width=\"309\" height=\"169\" loading=\"lazy\">\n</p>\n<p>You can be creative with link styles, as long as you keep giving users feedback when they interact with the links. Something should definitely happen when states change, and you shouldn't get rid of the pointer cursor or the outline — both are very important accessibility aids for those using keyboard controls.</p>\n<h4 id=\"form_elements\">Form elements</h4>\n<p>Elements to allow users to input data into websites:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Enter your name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>You can see some good example CSS in our <a href=\"https://github.com/mdn/learning-area/blob/main/accessibility/css/form-css.html\" class=\"external\" rel=\" noopener\">form-css.html</a> example (<a href=\"https://mdn.github.io/learning-area/accessibility/css/form-css.html\" class=\"external\" rel=\" noopener\">see it live</a> also).</p>\n<p>Most of the CSS you'll write for forms will be for sizing the elements, lining up labels and inputs, and getting them looking neat and tidy.</p>\n<p>You shouldn't however deviate too much from the expected visual feedback form elements receive when they are focused, which is basically the same as links (see above). You could style form focus/hover states to make this behavior more consistent across browsers or fit in better with your page design, but don't get rid of it altogether — again, people rely on these clues to help them know what is going on.</p>\n<h4 id=\"tables\">Tables</h4>\n<p>Tables for presenting tabular data.</p>\n<p>You can see a good, simple example of table HTML and CSS in our <a href=\"https://github.com/mdn/learning-area/blob/main/accessibility/css/table-css.html\" class=\"external\" rel=\" noopener\">table-css.html</a> example (<a href=\"https://mdn.github.io/learning-area/accessibility/css/table-css.html\" class=\"external\" rel=\" noopener\">see it live also</a>).</p>\n<p>Table CSS generally serves to make the table fit better into your design and look less ugly. It is a good idea to make sure the table headers stand out (normally using bold), and use zebra striping to make different rows easier to parse.</p>"}},{"type":"prose","value":{"id":"color_and_color_contrast","title":"Color and color contrast","isH3":true,"content":"<p>When choosing a color scheme for your website, make sure that the text (foreground) color contrasts well with the background color. Your design might look cool, but it is no good if people with visual impairments like color blindness can't read your content.</p>\n<p>There is an easy way to check whether your contrast is large enough to not cause problems. There are a number of contrast checking tools online that you can enter your foreground and background colors into, to check them. For example WebAIM's <a href=\"https://webaim.org/resources/contrastchecker/\" class=\"external\" rel=\" noopener\">Color Contrast Checker</a> is simple to use, and provides an explanation of what you need to conform to the WCAG criteria around color contrast.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> A high contrast ratio will also allow anyone using a smartphone or tablet with a glossy screen to better read pages when in a bright environment, such as sunlight.</p>\n</div>\n<p>Another tip is to not rely on color alone for signposts/information, as this will be no good for those who can't see the color. Instead of marking required form fields in red, for example, mark them with an asterisk and in red.</p>"}},{"type":"prose","value":{"id":"hiding_things","title":"Hiding things","isH3":true,"content":"<p>There are many instances where a visual design will require that not all content is shown at once. For example, in our <a href=\"https://mdn.github.io/learning-area/css/css-layout/practical-positioning-examples/info-box.html\" class=\"external\" rel=\" noopener\">Tabbed info box example</a> (see <a href=\"https://github.com/mdn/learning-area/blob/main/css/css-layout/practical-positioning-examples/info-box.html\" class=\"external\" rel=\" noopener\">source code</a>) we have three panels of information, but we are <a href=\"/en-US/docs/Learn/CSS/CSS_layout/Positioning\">positioning</a> them on top of one another and providing tabs that can be clicked to show each one (it is also keyboard accessible — you can alternatively use Tab and Enter/Return to select them).</p>\n<p>\n  <img src=\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript/tabbed-info-box.png\" alt=\"Three tab interface with Tab 1 selected and only its contents are displayed. The contents of other tabs are hidden. If a tab is selected, then it's text-color changes from black to white and the background-color changes from orange-red to saddle brown.\" width=\"450\" height=\"400\" loading=\"lazy\">\n</p>\n<p>Screen reader users don't care about any of this — they are happy with the content as long as the source order makes sense, and they can get to it all. Absolute positioning (as used in this example) is generally seen as one of the best mechanisms of hiding content for visual effect because it doesn't stop screen readers from getting to it.</p>\n<p>On the other hand, you shouldn't use <a href=\"/en-US/docs/Web/CSS/visibility\"><code>visibility</code></a><code>:hidden</code> or <a href=\"/en-US/docs/Web/CSS/display\"><code>display</code></a><code>:none</code>, because they do hide content from screen readers. Unless of course, there is a good reason why you want this content to be hidden from screen readers.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> <a href=\"https://webaim.org/techniques/css/invisiblecontent/\" class=\"external\" rel=\" noopener\">Invisible Content Just for Screen Reader Users</a> has a lot more useful detail surrounding this topic.</p>\n</div>"}},{"type":"prose","value":{"id":"accept_that_users_can_override_styles","title":"Accept that users can override styles","isH3":true,"content":"<p>It is possible for users to override your styles with their own custom styles, for example:</p>\n<ul>\n  <li>See Sarah Maddox's <a href=\"https://www.itsupportguides.com/knowledge-base/computer-accessibility/how-to-use-a-custom-style-sheet-css-with-firefox/\" class=\"external\" rel=\" noopener\">How to use a custom style sheet (CSS) with Firefox</a> for a useful guide covering how to do this manually in Firefox, and <a href=\"https://www.itsupportguides.com/knowledge-base/computer-accessibility/how-to-use-a-custom-style-sheet-css-with-internet-explorer/\" class=\"external\" rel=\" noopener\">How to use a custom style sheet (CSS) with Internet Explorer</a> by Adrian Gordon for the equivalent IE instructions.</li>\n  <li>It is probably easier to do it using an extension. For example, the Stylus extension is available for <a href=\"https://addons.mozilla.org/en-US/firefox/addon/styl-us/\" class=\"external\" rel=\" noopener\">Firefox</a>, with Stylish being a <a href=\"https://chrome.google.com/webstore/detail/stylish-custom-themes-for/fjnbnpbmkenffdnngjfgmeleoegfcffe\" class=\"external\" rel=\" noopener\">Chrome</a> equivalent.</li>\n</ul>\n<p>Users might do this for a variety of reasons. A visually impaired user might want to make the text bigger on all websites they visit, or a user with severe color deficiency might want to put all websites in high contrast colors that are easy for them to see. Whatever the need, you should be comfortable with this, and make your designs flexible enough so that such changes will work in your design. As an example, you might want to make sure your main content area can handle bigger text (maybe it will start to scroll to allow it all to be seen), and won't just hide it, or break completely.</p>"}},{"type":"prose","value":{"id":"javascript","title":"JavaScript","isH3":false,"content":"<p>JavaScript can also break accessibility, depending on how it is used.</p>\n<p>Modern JavaScript is a powerful language, and we can do so much with it these days, from simple content and UI updates to fully-fledged 2D and 3D games. There is no rule that says all content has to be 100% accessible to all people — you just need to do what you can, and make your apps as accessible as possible.</p>\n<p>Simple content and functionality is arguably easy to make accessible — for example text, images, tables, forms and push button that activate functions. As we looked at in our <a href=\"/en-US/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a> article, the key considerations are:</p>\n<ul>\n  <li>Good semantics: Using the right element for the right job. For example, making sure you use headings and paragraphs, and <a href=\"/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> and <a href=\"/en-US/docs/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a> elements</li>\n  <li>Making sure content is available as text, either directly as text content, good text labels for form elements, or <a href=\"/en-US/docs/Learn/Accessibility/HTML#text_alternatives\">text alternatives</a>, e.g. alt text for images.</li>\n</ul>\n<p>We also looked at an example of how to use JavaScript to build in functionality where it is missing — see <a href=\"/en-US/docs/Learn/Accessibility/HTML#building_keyboard_accessibility_back_in\">Building keyboard accessibility back in</a>. This is not ideal — really you should just use the right element for the right job — but it shows that it is possible in situations where for some reason you can't control the markup that is used. Another way to improve accessibility for non-semantic JavaScript-powered widgets is to use WAI-ARIA to provide extra semantics for screen reader users. The next article will also cover this in detail.</p>\n<p>Complex functionality like 3D games are not so easy to make accessible — a complex 3D game created using <a href=\"/en-US/docs/Web/API/WebGL_API\">WebGL</a> will be rendered on a <a href=\"/en-US/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element, which has no facility at this time to provide text alternatives or other information for severely visually impaired users to make use of. It is arguable that such a game doesn't really have this group of people as a part of its main target audience, and it would be unreasonable to expect you to make it 100% accessible to blind people. However, you could implement <a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">keyboard controls</a> so it is usable by non-mouse users, and make the color scheme contrasting enough to be usable by those with color deficiencies.</p>"}},{"type":"prose","value":{"id":"the_problem_with_too_much_javascript","title":"The problem with too much JavaScript","isH3":true,"content":"<p>The problem often comes when people rely on JavaScript too much. Sometimes you'll see a website where everything has been done with JavaScript — the HTML has been generated by JavaScript, the CSS has been generated by JavaScript, etc. This has all kinds of accessibility and other issues associated with it, so it is not advised.</p>\n<p>As well as using the right element for the right job, you should also make sure you are using the right technology for the right job! Think carefully about whether you need that shiny JavaScript-powered 3D information box, or whether plain old text would do. Think carefully about whether you need a complex non-standard form widget, or whether a text input would do. And don't generate all your HTML content using JavaScript if at all possible.</p>"}},{"type":"prose","value":{"id":"keeping_it_unobtrusive","title":"Keeping it unobtrusive","isH3":true,"content":"<p>You should keep <strong>unobtrusive JavaScript</strong> in mind when creating your content. The idea of unobtrusive JavaScript is that it should be used wherever possible to enhance functionality, not build it in entirely — basic functions should ideally work without JavaScript, although it is appreciated that this is not always an option. But again, a large part of it is using built-in browser functionality where possible.</p>\n<p>Good example uses of unobtrusive JavaScript include:</p>\n<ul>\n  <li>Providing client-side form validation, which alerts users to problems with their form entries quickly, without having to wait for the server to check the data. If it isn't available, the form will still work, but validation might be slower.</li>\n  <li>Providing custom controls for HTML <code>&lt;video&gt;</code>s that are accessible to keyboard-only users, along with a direct link to the video that can be used to access it if JavaScript is not available (the default <code>&lt;video&gt;</code> browser controls aren't keyboard accessible in most browsers).</li>\n</ul>\n<p>As an example, we've written a quick and dirty client-side form validation example — see <a href=\"https://github.com/mdn/learning-area/blob/main/accessibility/css/form-validation.html\" class=\"external\" rel=\" noopener\">form-validation.html</a> (also <a href=\"https://mdn.github.io/learning-area/accessibility/css/form-validation.html\" class=\"external\" rel=\" noopener\">see the demo live</a>). Here you'll see a simple form; when you try to submit the form with one or both fields left empty, the submit fails, and an error message box appears to tell you what is wrong.</p>\n<p>This kind of form validation is unobtrusive — you can still use the form absolutely fine without the JavaScript being available, and any sensible form implementation will have server-side validation active as well, because it is too easy for malicious users to bypass client-side validation (for example, by turning JavaScript off in the browser). The client-side validation is still really useful for reporting errors — users can know about mistakes they make instantly, rather than having to wait for a round trip to the server and a page reload. This is a definite usability advantage.</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> Server-side validation has not been implemented in this simple demo.</p>\n</div>\n<p>We've made this form validation pretty accessible too. We've used <a href=\"/en-US/docs/Web/HTML/Element/label\"><code>&lt;label&gt;</code></a> elements to make sure the form labels are unambiguously linked to their inputs, so screen readers can read them out alongside:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Enter your name:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre></div>\n<p>We only do the validation when the form is submitted — this is so that we don't update the UI too often and potentially confuse screen reader (and possibly other) users:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>form<span class=\"token punctuation\">.</span>onsubmit <span class=\"token operator\">=</span> validate<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  errorList<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> formItems<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> testItem <span class=\"token operator\">=</span> formItems<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>testItem<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      errorField<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token string\">\"360px\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">createLink</span><span class=\"token punctuation\">(</span>testItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errorList<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">!==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> In this example, we are hiding and showing the error message box using absolute positioning rather than another method such as visibility or display, because it doesn't interfere with the screen reader being able to read content from it.</p>\n</div>\n<p>Real form validation would be much more complex than this — you'd want to check that the entered name actually looks like a name, the entered age is actually a number and is realistic (e.g. nonnegative and less than 4 digits). Here we've just implemented a simple check that a value has been filled in to each input field (<code>if (testItem.input.value === '')</code>).</p>\n<p>When the validation has been performed, if the tests pass then the form is submitted. If there are errors (<code>if (errorList.innerHTML !== '')</code>) then we stop the form submitting (using <a href=\"/en-US/docs/Web/API/Event/preventDefault\"><code>preventDefault()</code></a>), and display any error messages that have been created (see below). This mechanism means that the errors will only be shown if there are errors, which is better for usability.</p>\n<p>For each input that doesn't have a value filled in when the form is submitted, we create a list item with a link and insert it in the <code>errorList</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">createLink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">testItem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> listItem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> anchor <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> testItem<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  anchor<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> field is empty: fill in your </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  anchor<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  anchor<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    testItem<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  listItem<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>anchor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  errorList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>listItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Each link serves a dual purpose — it tells you what the error is, plus you can click on it/activate it to jump straight to the input element in question and correct your entry.</p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>Note:</strong> The <code>focus()</code> part of this example is a bit tricky. Chrome and Edge (and newer versions of IE) will focus the element when the link is clicked, without needing the <code>onclick</code>/<code>focus()</code> block. Safari will only highlight the form element with the link on its own, so needs the <code>onclick</code>/<code>focus()</code> block to actually focus it. Firefox doesn't focus the inputs properly at all in this context, so Firefox users can't take advantage of this at present (although everything else works fine). The Firefox issue should be fixed soon — work is being done to give Firefox behavior parity with other browsers (see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=277178\" class=\"external\" rel=\" noopener\">bug&nbsp;277178</a>).</p>\n</div>\n<p>In addition, the <code>errorField</code> is placed at the top of the source order (although it is positioned differently in the UI using CSS), meaning that users can find out exactly what's wrong with their form submissions and get to the input elements in question by going back up to the start of the page.</p>\n<p>As a final note, we have used some WAI-ARIA attributes in our demo to help solve accessibility problems caused by areas of content constantly updating without a page reload (screen readers won't pick this up or alert users to it by default):</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>errors<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alert<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-relevant</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>all<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>We will explain these attributes in our next article, which covers <a href=\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA</a> in much more detail.</p>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>Note:</strong> Some of you will probably be thinking about that fact that HTML forms have built-in validation mechanisms like the <code>required</code>, <code>min</code>/<code>minlength</code>, and <code>max</code>/<code>maxlength</code> attributes (see the <a href=\"/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> element reference for more information). We didn't end up using these in the demo because cross-browser support for them is patchy (for example IE10 and above only).</p>\n</div>\n<div class=\"notecard note\" id=\"sect7\">\n  <p><strong>Note:</strong> WebAIM's <a href=\"https://webaim.org/techniques/formvalidation/\" class=\"external\" rel=\" noopener\">Usable and Accessible Form Validation and Error Recovery</a> provides some further useful information about accessible form validation.</p>\n</div>"}},{"type":"prose","value":{"id":"other_javascript_accessibility_concerns","title":"Other JavaScript accessibility concerns","isH3":true,"content":"<p>There are other things to be aware of when implementing JavaScript and thinking about accessibility. We will add more as we find them.</p>\n<h4 id=\"mouse-specific_events\">mouse-specific events</h4>\n<p>As you will be aware, most user interactions are implemented in client-side JavaScript using event handlers, which allow us to run functions in response to certain events happening. Some events can have accessibility issues. The main example you'll come across is mouse-specific events like <a href=\"/en-US/docs/Web/API/Element/mouseover_event\">mouseover</a>, <a href=\"/en-US/docs/Web/API/Element/mouseout_event\">mouseout</a>, <a href=\"/en-US/docs/Web/API/Element/dblclick_event\">dblclick</a>, etc. Functionality that runs in response to these events will not be accessible using other mechanisms, like keyboard controls.</p>\n<p>To mitigate such problems, you should double up these events with similar events that can be activated by other means (so-called device-independent event handlers) — <a href=\"/en-US/docs/Web/API/Element/focus_event\">focus</a> and <a href=\"/en-US/docs/Web/API/Element/blur_event\">blur</a> would provide accessibility for keyboard users.</p>\n<p>Let's look at an example that highlights when this could be useful. Maybe we want to provide a thumbnail image that shows a larger version of the image when it is moused over or focused (like you'd see on an e-commerce product catalog.)</p>\n<p>We've made a very simple example, which you can find at <a href=\"https://mdn.github.io/learning-area/accessibility/css/mouse-and-keyboard-events.html\" class=\"external\" rel=\" noopener\">mouse-and-keyboard-events.html</a> (see also the <a href=\"https://github.com/mdn/learning-area/blob/main/accessibility/css/mouse-and-keyboard-events.html\" class=\"external\" rel=\" noopener\">source code</a>). The code features two functions that show and hide the zoomed-in image; these are run by the following lines that set them as event handlers:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>imgThumb<span class=\"token punctuation\">.</span>onmouseover <span class=\"token operator\">=</span> showImg<span class=\"token punctuation\">;</span>\nimgThumb<span class=\"token punctuation\">.</span>onmouseout <span class=\"token operator\">=</span> hideImg<span class=\"token punctuation\">;</span>\n\nimgThumb<span class=\"token punctuation\">.</span>onfocus <span class=\"token operator\">=</span> showImg<span class=\"token punctuation\">;</span>\nimgThumb<span class=\"token punctuation\">.</span>onblur <span class=\"token operator\">=</span> hideImg<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The first two lines run the functions when the mouse pointer hovers over and stops hovering over the thumbnail, respectively. This won't allow us to access the zoomed view by keyboard though — to allow that, we've included the last two lines, which run the functions when the image is focused and blurred (when focus stops). This can be done by tabbing over the image, because we've included <code>tabindex=\"0\"</code> on it.</p>\n<p>The <a href=\"/en-US/docs/Web/API/Element/click_event\">click</a> event is interesting — it sounds mouse-dependent, but most browsers will activate <a href=\"/en-US/docs/Web/API/Element/click_event\">onclick</a> event handlers after Enter/Return is pressed on a link or form element that has focus, or when such an element is tapped on a touchscreen device. This doesn't work by default however when you allow a non-default-focusable event to have focus using tabindex — in such cases you need to detect specifically when that exact key is pressed (see <a href=\"/en-US/docs/Learn/Accessibility/HTML#building_keyboard_accessibility_back_in\">Building keyboard accessibility back in</a>).</p>"}},{"type":"prose","value":{"id":"test_your_skills!","title":"Test your skills!","isH3":false,"content":"<p>You've reached the end of this article, but can you remember the most important information? You can find some further tests to verify that you've retained this information before you move on — see <a href=\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript/Test_your_skills:_CSS_and_JavaScript_accessibility\">Test your skills: CSS and JavaScript accessibility</a>.</p>"}},{"type":"prose","value":{"id":"summary","title":"Summary","isH3":false,"content":"<p>We hope this article has given you a good amount of detail and understanding about the accessibility issues surrounding CSS and JavaScript use on web pages.</p>\n<p>Next up, WAI-ARIA!</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/Accessibility/HTML\"> Previous </a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/Accessibility\"> Overview: Accessibility</a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\"> Next  </a></li>\n</ul>"}},{"type":"prose","value":{"id":"in_this_module","title":"In this module","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n  <li><a href=\"/en-US/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n  <li><a href=\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript\" aria-current=\"page\">CSS and JavaScript accessibility best practices</a></li>\n  <li><a href=\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n  <li><a href=\"/en-US/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n  <li><a href=\"/en-US/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n  <li><a href=\"/en-US/docs/Learn/Accessibility/Accessibility_troubleshooting\">Accessibility troubleshooting</a></li>\n</ul>"}}],"toc":[{"text":"CSS and JavaScript are accessible?","id":"css_and_javascript_are_accessible"},{"text":"CSS","id":"css"},{"text":"JavaScript","id":"javascript"},{"text":"Test your skills!","id":"test_your_skills!"},{"text":"Summary","id":"summary"},{"text":"In this module","id":"in_this_module"}],"summary":"We hope this article has given you a good amount of detail and understanding about the accessibility issues surrounding CSS and JavaScript use on web pages.","popularity":0.0023,"modified":"2022-09-14T13:25:46.000Z","other_translations":[{"title":"Buenas prácticas de accesibilidad CSS y JavaScript","locale":"es","native":"Español"},{"title":"Meilleures pratiques d'accessibilité CSS et JavaScript","locale":"fr","native":"Français"},{"title":"CSS と JavaScript のアクセシビリティの ベスト・プラクティス","locale":"ja","native":"日本語"},{"title":"CSS e JavaScript - melhores práticas de acessibilidade","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"CSS и JavaScript доступность - лучшие практики","locale":"ru","native":"Русский"},{"title":"CSS 和 JavaScript 无障碍最佳实践","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/learn/accessibility/css_and_javascript","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/learn/accessibility/css_and_javascript/index.md","last_commit_url":"https://github.com/mdn/content/commit/f1f3eaf1b5a73e3d92aef40622434b5110418852","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Learn","title":"Learn web development"},{"uri":"/en-US/docs/Learn/Accessibility","title":"Accessibility"},{"uri":"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript","title":"CSS and JavaScript accessibility best practices"}],"pageTitle":"CSS and JavaScript accessibility best practices - Learn web development | MDN","noIndexing":false}}