{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CSS FAQ","mdn_url":"/en-US/docs/Learn/CSS/Howto/CSS_FAQ","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>In this article, you'll find some frequently-asked questions (FAQs) about CSS, along with answers that may help you on your quest to become a web developer.</p>"}},{"type":"prose","value":{"id":"why_doesnt_my_css_which_is_valid_render_correctly","title":"Why doesn't my CSS, which is valid, render correctly?","isH3":false,"content":"<p>Browsers use the <code>DOCTYPE</code> declaration to choose whether to show the document using a mode that is more compatible with Web standards or with old browser bugs. Using a correct and modern <code>DOCTYPE</code> declaration at the start of your HTML will improve browser standards compliance.</p>\n<p>Modern browsers have two main rendering modes:</p>\n<ul>\n  <li><em>Quirks Mode</em>: also called backwards-compatibility mode, allows legacy webpages to be rendered as their authors intended, following the non-standard rendering rules used by older browsers. Documents with an incomplete, incorrect, or missing <code>DOCTYPE</code> declaration or a known <code>DOCTYPE</code> declaration in common use before 2001 will be rendered in Quirks Mode.</li>\n  <li><em>Standards Mode</em>: the browser attempts to follow the W3C standards strictly. New HTML pages are expected to be designed for standards-compliant browsers, and as a result, pages with a modern <code>DOCTYPE</code> declaration will be rendered with Standards Mode.</li>\n</ul>\n<p>Gecko-based browsers, have a third <em><a href=\"/en-US/docs/Mozilla/Gecko_Almost_Standards_Mode\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Almost Standards Mode</a>)</em> that has only a few minor quirks.</p>\n<p>The standard <code>DOCTYPE</code> declaration that will trigger standards mode is:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>When at all possible, you should just use the above doctype. There are other valid legacy doctypes that will trigger Standards or Almost Standards mode:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//W3C//DTD HTML 4.0 Transitional//EN\"</span> <span class=\"token string\">\"http://www.w3.org/TR/html4/loose.dtd\"</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//W3C//DTD HTML 4.01//EN\"</span> <span class=\"token string\">\"http://www.w3.org/TR/html4/strict.dtd\"</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//W3C//DTD XHTML 1.0 Transitional//EN\"</span> <span class=\"token string\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//W3C//DTD XHTML 1.0 Strict//EN\"</span> <span class=\"token string\">\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"why_doesnt_my_css_which_is_valid_render_at_all","title":"Why doesn't my CSS, which is valid, render at all?","isH3":false,"content":"<p>Here are some possible causes:</p>\n<ul>\n  <li>You've got the path to CSS file wrong.</li>\n  <li>To be applied, a CSS stylesheet must be served with a <code>text/css</code> MIME type. If the Web server doesn't serve it with this type, it won't be applied.</li>\n</ul>"}},{"type":"prose","value":{"id":"what_is_the_difference_between_id_and_class","title":"What is the difference between <code>id</code> and <code>class</code>?","isH3":false,"content":"<p>HTML elements can have an <code>id</code> and/or <code>class</code> attribute. The <code>id</code> attribute assigns a name to the element it is applied to, and for valid markup, there can be only one element with that name. The <code>class</code> attribute assigns a class name to the element, and that name can be used on many elements within the page. CSS allows you to apply styles to particular <code>id</code> and/or <code>class</code> names.</p>\n<ul>\n  <li>Use a class-specific style when you want to apply the styling rules to many blocks and elements within the page, or when you currently only have element to style with that style, but you might want to add more later.</li>\n  <li>Use an id-specific style when you need to restrict the applied styling rules to one specific block or element. This style will only be used by the element with that particular id.</li>\n</ul>\n<p>It is generally recommended to use classes as much as possible, and to use ids only when absolutely necessary for specific uses (like to connect label and form elements or for styling elements that must be semantically unique):</p>\n<ul>\n  <li>Using classes makes your styling extensible — even if you only have one element to style with a particular ruleset now, you might want to add more later.</li>\n  <li>Classes allow you to style multiple elements, therefore they can lead to shorter stylesheets, rather than having to write out the same styling information in multiple rules that use id selectors. Shorter stylesheets are more performant.</li>\n  <li>Class selectors have lower <a href=\"/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#specificity\">specificity</a> than id selectors, so are easier to override if needed.</li>\n</ul>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> See <a href=\"/en-US/docs/Learn/CSS/Building_blocks/Selectors\">Selectors</a> for more information.</p>\n</div>","titleAsText":"What is the difference between id and class?"}},{"type":"prose","value":{"id":"how_do_i_restore_the_default_value_of_a_property","title":"How do I restore the default value of a property?","isH3":false,"content":"<p>Initially CSS didn't provide a \"default\" keyword and the only way to restore the default value of a property is to explicitly re-declare that property. For example:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token comment\">/* Heading default color is black */</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This has changed with CSS 2; the keyword <a href=\"/en-US/docs/Web/CSS/initial\">initial</a> is now a valid value for a CSS property. It resets it to its default value, which is defined in the CSS specification of the given property.</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token comment\">/* Heading default color is black */</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"how_do_i_derive_one_style_from_another","title":"How do I derive one style from another?","isH3":false,"content":"<p>CSS does not exactly allow one style to be defined in terms of another. However, assigning multiple classes to a single element can provide the same effect, and <a href=\"/en-US/docs/Web/CSS/Using_CSS_custom_properties\">CSS Variables</a> now provide a way to define style information in one place that can be reused in multiple places.</p>"}},{"type":"prose","value":{"id":"how_do_i_assign_multiple_classes_to_an_element","title":"How do I assign multiple classes to an element?","isH3":false,"content":"<p>HTML elements can be assigned multiple classes by listing the classes in the <code>class</code> attribute, with a blank space to separate them.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">.news</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">.today</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>news today<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Content of today's news goes here.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>If the same property is declared in both rules, the conflict is resolved first through specificity, then according to the order of the CSS declarations. The order of classes in the <code>class</code> attribute is not relevant.</p>"}},{"type":"prose","value":{"id":"why_dont_my_style_rules_work_properly","title":"Why don't my style rules work properly?","isH3":false,"content":"<p>Style rules that are syntactically correct may not apply in certain situations. You can use <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/page_inspector/how_to/examine_and_edit_css/index.html\" class=\"external\" rel=\" noopener\">Rules view</a> of <em>CSS Pane</em> of the Inspector to debug problems of this kind, but the most frequent instances of ignored style rules are listed below.</p>"}},{"type":"prose","value":{"id":"html_elements_hierarchy","title":"HTML elements hierarchy","isH3":true,"content":"<p>The way CSS styles are applied to HTML elements depends also on the elements hierarchy. It is important to remember that a rule applied to a descendant overrides the style of the parent, in spite of any specificity or priority of CSS rules.</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">.news</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.corpName</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!-- news item text is black, but corporate name is red and in bold --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>news<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  (Reuters) <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>corpName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>General Electric<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span> (GE.NYS) announced on\n  Thursday…\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>In case of complex HTML hierarchies, if a rule seems to be ignored, check if the element is inside another element with a different style.</p>"}},{"type":"prose","value":{"id":"explicitly_re-defined_style_rule","title":"Explicitly re-defined style rule","isH3":true,"content":"<p>In CSS stylesheets, order <strong>is</strong> important. If you define a rule and then you re-define the same rule, the last definition is used.</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">#stockTicker</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.stockSymbol</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/*  other rules             */</span>\n<span class=\"token comment\">/*  other rules             */</span>\n<span class=\"token comment\">/*  other rules             */</span>\n<span class=\"token selector\">.stockSymbol</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!-- most text is in bold, except \"GE\", which is red and not bold --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stockTicker<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>NYS: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stockSymbol<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>GE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span> +1.0…<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>To avoid this kind of error, try to define rules only once for a certain selector, and group all rules belonging to that selector.</p>"}},{"type":"prose","value":{"id":"use_of_a_shorthand_property","title":"Use of a shorthand property","isH3":true,"content":"<p>Using shorthand properties for defining style rules is good because it uses a very compact syntax. Using shorthand with only some attributes is possible and correct, but it must be remembered that undeclared attributes are automatically reset to their default values. This means that a previous rule for a single attribute could be implicitly overridden.</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">#stockTicker</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 12px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Verdana<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.stockSymbol</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> 14px Arial<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stockTicker<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>NYS: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stockSymbol<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>GE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span> +1.0…<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>In the previous example the problem occurred on rules belonging to different elements, but it could happen also for the same element, because rule order <strong>is</strong> important.</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">#stockTicker</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> 12px Verdana<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* font-weight is now set to normal */</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"use_of_the__selector","title":"Use of the <code>*</code> selector","isH3":true,"content":"<p>The <code>*</code> wildcard selector refers to any element, and it has to be used with particular care.</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">body *</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">#stockTicker</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> 12px Verdana<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.corpName</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.stockUp</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  NYS: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>corpName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stockUp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>GE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span> +1.0…\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>In this example the <code>body *</code> selector applies the rule to all elements inside body, at any hierarchy level, including the <code>.stockUp</code> class. So <code>font-weight: bold;</code> applied to the <code>.corpName</code> class is overridden by <code>font-weight: normal;</code> applied to all elements in the body.</p>\n<p>The use of the * selector should be minimized as it is a slow selector, especially when not used as the first element of a selector. Its use should be avoided as much as possible.</p>","titleAsText":"Use of the * selector"}},{"type":"prose","value":{"id":"specificity_in_css","title":"Specificity in CSS","isH3":true,"content":"<p>When multiple rules apply to a certain element, the rule chosen depends on its style <a href=\"/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#specificity\">specificity</a>. Inline style (in HTML <code>style</code> attributes) has the highest specificity and will override any selectors, followed by ID selectors, then class selectors, and eventually element selectors. The text color of the below <a href=\"/en-US/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> will therefore be red.</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">#orange</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.green</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>orange<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>green<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>This is red<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>The rules are more complicated when the selector has multiple parts. A more detailed explanation about how selector specificity is calculated can be found in the <a href=\"/en-US/docs/Web/CSS/Specificity\">CSS specificity documentation</a>.</p>"}},{"type":"prose","value":{"id":"what_do_the_-moz-_-ms-_-webkit-_-o-_and_-khtml-_properties_do","title":"What do the -moz-*, -ms-*, -webkit-*, -o-* and -khtml-* properties do?","isH3":false,"content":"<p>These properties, called <em>prefixed properties</em>, are extensions to the CSS standard. They were once used to allow the use of experimental and non-standard features in browsers without polluting the regular namespace, preventing future incompatibilities to arise when the standard is extended.</p>\n<p>The use of such properties on production websites is not recommended — they have already created a huge web compatibility mess. For example, many developers only use the <code>-webkit-</code> prefixed version of a property when the non-prefixed version is fully supported across all browsers. This means a design relying on that property would not work in non-webkit-based browsers, when it could. This became a problem great enough that other browsers were pushed to implement <code>-webkit-</code> prefixed aliases to improve web compatibility, as specified in the <a href=\"https://compat.spec.whatwg.org/\" class=\"external\" rel=\" noopener\">Compatibility Living Standard</a>.</p>\n<p>Browsers no longer use CSS prefixes when implementing new experimental features. Rather, they test new features behind configurable experimental flags or only on Nightly browser versions or similar.</p>\n<p>If you are required to use prefixes in your work, write the prefixed versions first followed by the non-prefixed standard version. This way the standard version will automatically override the prefixed versions when supported. For example:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token property\">-ms-transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>90deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">-webkit-transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>90deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>90deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> For more information on dealing with prefixed properties, see <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#handling_css_prefixes\">Handling common HTML and CSS problems — Handling CSS prefixes</a> from our <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\">Cross-browser testing</a> module.</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> See the <a href=\"/en-US/docs/Web/CSS/Mozilla_Extensions\">Mozilla CSS Extensions</a>, <a href=\"/en-US/docs/Web/CSS/Microsoft_Extensions\">Microsoft CSS Extensions</a> and <a href=\"/en-US/docs/Web/CSS/WebKit_Extensions\">WebKit CSS Extensions</a> for lists of browser-prefixed CSS properties.</p>\n</div>"}},{"type":"prose","value":{"id":"how_does_z-index_relate_to_positioning","title":"How does z-index relate to positioning?","isH3":false,"content":"<p>The z-index property specifies the stack order of elements.</p>\n<p>An element with a higher z-index/stack order is always rendered in front of an element with a lower z-index/stack order on the screen. Z-index will only work on elements that have a specified position (<code>position:absolute</code>, <code>position:relative</code>, or <code>position:fixed</code>).</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> For more information, see our <a href=\"/en-US/docs/Learn/CSS/CSS_layout/Positioning\">Positioning</a> learning article, and in particular the <a href=\"/en-US/docs/Learn/CSS/CSS_layout/Positioning#introducing_z-index\">Introducing z-index</a> section.</p>\n</div>"}}],"toc":[{"text":"Why doesn't my CSS, which is valid, render correctly?","id":"why_doesnt_my_css_which_is_valid_render_correctly"},{"text":"Why doesn't my CSS, which is valid, render at all?","id":"why_doesnt_my_css_which_is_valid_render_at_all"},{"text":"What is the difference between <code>id</code> and <code>class</code>?","id":"what_is_the_difference_between_id_and_class"},{"text":"How do I restore the default value of a property?","id":"how_do_i_restore_the_default_value_of_a_property"},{"text":"How do I derive one style from another?","id":"how_do_i_derive_one_style_from_another"},{"text":"How do I assign multiple classes to an element?","id":"how_do_i_assign_multiple_classes_to_an_element"},{"text":"Why don't my style rules work properly?","id":"why_dont_my_style_rules_work_properly"},{"text":"What do the -moz-*, -ms-*, -webkit-*, -o-* and -khtml-* properties do?","id":"what_do_the_-moz-_-ms-_-webkit-_-o-_and_-khtml-_properties_do"},{"text":"How does z-index relate to positioning?","id":"how_does_z-index_relate_to_positioning"}],"summary":"In this article, you'll find some frequently-asked questions (FAQs) about CSS, along with answers that may help you on your quest to become a web developer.","popularity":0.0013,"modified":"2022-09-27T10:54:41.000Z","other_translations":[{"title":"Preguntas frecuentes sobre CSS","locale":"es","native":"Español"},{"title":"Questions fréquentes en CSS","locale":"fr","native":"Français"},{"title":"CSS の一般的な質問","locale":"ja","native":"日本語"},{"title":"공통된 CSS 질문들","locale":"ko","native":"한국어"},{"title":"CSS - Perguntas frequentes","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Common CSS questions","locale":"ru","native":"Русский"},{"title":"CSS 常见问题","locale":"zh-CN","native":"中文 (简体)"},{"title":"CSS 一般問題","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/learn/css/howto/css_faq","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/learn/css/howto/css_faq/index.md","last_commit_url":"https://github.com/mdn/content/commit/92935feb093513a8906578b540ee79f4150154c3","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Learn","title":"Learn web development"},{"uri":"/en-US/docs/Learn/CSS","title":"Learn to style HTML using CSS"},{"uri":"/en-US/docs/Learn/CSS/Howto","title":"Use CSS to solve common problems"},{"uri":"/en-US/docs/Learn/CSS/Howto/CSS_FAQ","title":"CSS FAQ"}],"pageTitle":"CSS FAQ - Learn web development | MDN","noIndexing":false}}