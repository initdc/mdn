{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WebVR — Virtual Reality for the Web","mdn_url":"/en-US/docs/Games/Techniques/3D_on_the_web/WebVR","locale":"en-US","native":"English (US)","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/en-US/docs/Games/Anatomy\">Anatomy</a></li>\n              <li><a href=\"/en-US/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/en-US/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/en-US/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/en-US/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/en-US/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Techniques/Async_scripts\">Using async scripts for asm.js</a></li>\n              <li><a href=\"/en-US/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizing startup performance</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/WebRTC_data_channels\">Using WebRTC peer-to-peer data channels</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Efficient_animation_for_web_games\">Efficient animation for web games</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/en-US/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/en-US/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/en-US/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/en-US/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The concept of virtual reality in itself isn't new, but now we have the technology to have it working as it should be, and a JavaScript API to make use of it in web applications. This article introduced WebVR from the perspective of its use in games.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> WebVR API is replaced by <a href=\"/en-US/docs/Web/API/WebXR_Device_API\">WebXR Device API</a>. WebVR was never ratified as a standard, was implemented and enabled by default in very few browsers and supported a small number of devices.</p>\n</div>"}},{"type":"prose","value":{"id":"vr_devices","title":"VR devices","isH3":false,"content":"<p>With the popularity of Oculus Rift and a lot of other devices in production coming soon to the market, the future looks bright — we already have sufficient technology to make the VR experience \"good enough\" for playing games. There are many devices to chose from: desktop ones like Oculus Rift or HTC Vive, through consoles with Playstation VR (which admittedly doesn't support WebVR at this time), to mobile experiences like Gear VR or Google Cardboard.</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_on_the_web/WebVR/hmds.jpg\" alt=\"Five different VR devices, ranging from cardboard to high-end.\" width=\"600\" height=\"88\" loading=\"lazy\">\n</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> For more information, read our <a href=\"/en-US/docs/Web/API/WebVR_API/Concepts\">WebVR Concepts</a> article.</p>\n</div>"}},{"type":"prose","value":{"id":"the_webvr_api","title":"The WebVR API","isH3":false,"content":"<p>The <a href=\"/en-US/docs/Web/API/WebVR_API\">WebVR API</a> is the central API for capturing information on VR Devices connected to a computer and headset position/orientation/velocity/acceleration information, and converting that into useful data you can use in your games and other applications.</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> There are of course other APIs useful for creating games, for example <a href=\"/en-US/docs/Web/API/Gamepad_API\">The Gamepad API</a> for control inputs, and the <a href=\"/en-US/docs/Web/API/Device_orientation_events/Detecting_device_orientation\">Device Orientation API</a> for handling display orientation on mobile.</p>\n</div>"}},{"type":"prose","value":{"id":"browser_support_and_spec_status","title":"Browser support and spec status","isH3":true,"content":"<p>Currently browser support for the WebVR API is still experimental — it works in <a href=\"https://www.mozilla.org/en-US/firefox/channel/desktop/\" class=\"external\" rel=\" noopener\">nightly builds of Firefox</a> and <a href=\"https://drive.google.com/folderview?id=0BzudLt22BqGRbW9WTHMtOWMzNjQ&amp;usp=sharing#list\" class=\"external\" rel=\" noopener\">experimental builds of Chrome</a> (Mozilla and Google teamed up to work on the implementation together), but sooner rather than later we'll see it in regular builds.</p>\n<p>The <a href=\"https://mozvr.github.io/webvr-spec/webvr.html\" class=\"external\" rel=\" noopener\">WebVR spec</a> is in Editor's Draft status which means it is still subject to change. The development is led by <a href=\"https://twitter.com/vvuk\" class=\"external\" rel=\" noopener\">Vladimir Vukicevic</a> from Mozilla and <a href=\"https://twitter.com/tojiro\" class=\"external\" rel=\" noopener\">Brandon Jones</a> from Google. For more info be sure to visit the <a href=\"https://mixedreality.mozilla.org/\" class=\"external\" rel=\" noopener\">https://mixedreality.mozilla.org/</a> and <a href=\"https://webvr.info/\" class=\"external\" rel=\" noopener\">WebVR.info</a> websites.</p>"}},{"type":"prose","value":{"id":"using_the_webvr_api","title":"Using the WebVR API","isH3":true,"content":"<p>The WebVR API is based on two concepts — sending <a href=\"/en-US/docs/Web/API/WebVR_API/Concepts#stereoscopic_vision\">stereoscopic images</a> to both lenses in your headset and receiving positional data for your head from the sensor, and those two are handled by <a href=\"/en-US/docs/Web/API/HMDVRDevice\"><code>HMDVRDevice</code></a> (head-mounted display virtual reality device) and <a href=\"/en-US/docs/Web/API/PositionSensorVRDevice\"><code>PositionSensorVRDevice</code></a>.</p>"}},{"type":"prose","value":{"id":"get_the_devices","title":"Get the devices","isH3":true,"content":"<p>To get information about devices connected to your computer, you can use the <a href=\"/en-US/docs/Web/API/Navigator/getVRDisplays\"><code>Navigator/getVRDisplays</code></a> method:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getVRDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">devices</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> devices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HMDVRDevice</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      gHMD <span class=\"token operator\">=</span> devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gHMD<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> devices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n        devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">PositionSensorVRDevice</span> <span class=\"token operator\">&amp;&amp;</span>\n        devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hardwareUnitId <span class=\"token operator\">===</span> gHMD<span class=\"token punctuation\">.</span>hardwareUnitId\n      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        gPositionSensor <span class=\"token operator\">=</span> devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This code will loop through the available devices and assign proper sensors to the headsets — the first <code>devices</code> array contains the connected devices, and a check is done to find the <a href=\"/en-US/docs/Web/API/HMDVRDevice\"><code>HMDVRDevice</code></a>, and assign it to the <code>gHMD</code> variable — using this you can set up the scene, getting the eye parameters, setting the field of view, etc. For example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">setCustomFOV</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">up<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> down<span class=\"token punctuation\">,</span> left</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> testFOV <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VRFieldOfView</span><span class=\"token punctuation\">(</span>up<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> down<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gHMD<span class=\"token punctuation\">.</span><span class=\"token function\">setFieldOfView</span><span class=\"token punctuation\">(</span>testFOV<span class=\"token punctuation\">,</span> testFOV<span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>The <code>gPositionSensor</code> variable holds the <a href=\"/en-US/docs/Web/API/PositionSensorVRDevice\"><code>PositionSensorVRDevice</code></a> — using this you can get the current position or orientation state (for example to update the scene view on every frame), or reset the sensor. For example, the below code outputs position information on the screen:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">setView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> posState <span class=\"token operator\">=</span> gPositionSensor<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>hasPosition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">format</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">axis</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>axis<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">roundToTwo</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span>axis<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    posPara<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Position: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">axis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">axis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">axis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    xPos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token constant\">WIDTH</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    yPos <span class=\"token operator\">=</span> posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token constant\">HEIGHT</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    zPos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">&gt;</span> <span class=\"token number\">0.01</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">:</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// …</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>For a full explanation and more details of the demo this is taken from, see <a href=\"/en-US/docs/Web/API/WebVR_API/Using_the_WebVR_API\">Using the WebVR API</a>.</p>"}},{"type":"prose","value":{"id":"tools_and_techniques","title":"Tools and techniques","isH3":false,"content":"<p>The first WebVR experiments and demos used Three.js as it's probably the most popular 3D engine for the web. See the <a href=\"https://github.com/mrdoob/three.js/blob/ca521eb4af7554e760f14d8fe8b451c8ff34deb8/examples/js/effects/VREffect.js\" class=\"external\" rel=\" noopener\">VREffect</a> and <a href=\"https://github.com/mrdoob/three.js/blob/abdd1713c606135bc35028c6021698b52f27872b/examples/js/controls/VRControls.js\" class=\"external\" rel=\" noopener\">VRControls</a> functions available on the Three.js GitHub to help you implement and handle WebVR with Three.js.</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/3D_on_the_web/WebVR/sechelt.jpg\" alt=\"A 3D representation of a landscape: it's a pinkish sunset, with a blue mountainous land in the background surrounded by a mirror sea and a darker blue island in the second plan.\" width=\"600\" height=\"211\" loading=\"lazy\">\n</p>\n<p>Boris Smus has written about the concept of <a href=\"https://smus.com/responsive-vr/\" class=\"external\" rel=\" noopener\">Responsive WebVR</a>, where a single web game can be played on various devices like laptops without VR hardware, PCs with Oculus Rift, or smartphones inside Google Cardboard and still deliver a unique and valuable experience across all of them. It's like responsive design but applied to the VR world — write once and run in any VR headset, or without it. You can check the <a href=\"https://github.com/borismus/webvr-boilerplate\" class=\"external\" rel=\" noopener\">WebVR Boilerplate</a> sources — it's a good example to start learning WebVR from, and a starting point for any web-based VR experience.</p>\n<p>There's also a markup framework called <a href=\"https://aframe.io/\" class=\"external\" rel=\" noopener\">A-Frame</a> that offers simple building blocks for WebVR, so you can rapidly build and experiment with VR websites and games: read the <a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a> tutorial for more details.</p>\n<p>Immersion is more important than gameplay or graphics - you have to feel you're \"inside\" the experience. It's not easy to achieve, but it doesn't require realistic images. Quite the contrary as having a basic shapes flying around in high frame rate can make a lot. Remember: experimenting is key - see what works for your game in particular.</p>"}},{"type":"prose","value":{"id":"the_future_of_webvr","title":"The future of WebVR","isH3":false,"content":"<p>It's happening — consumer devices are reaching the market right now, and we already have JavaScript APIs to support them on the Web. All we need now is a stable specification, good UX and UI, better hardware and more tools and libraries — and all of that is on the horizon. It's the perfect time to dive in and experiment with WebVR.</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebVR_API\">WebVR API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebVR_API/Concepts\">WebVR concepts</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebVR_API/Using_the_WebVR_API\">Using the WebVR API</a></li>\n  <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n</ul>"}}],"toc":[{"text":"VR devices","id":"vr_devices"},{"text":"The WebVR API","id":"the_webvr_api"},{"text":"Tools and techniques","id":"tools_and_techniques"},{"text":"The future of WebVR","id":"the_future_of_webvr"},{"text":"See also","id":"see_also"}],"summary":"The concept of virtual reality in itself isn't new, but now we have the technology to have it working as it should be, and a JavaScript API to make use of it in web applications. This article introduced WebVR from the perspective of its use in games.","popularity":0.0006,"modified":"2022-09-07T09:23:26.000Z","other_translations":[{"title":"WebVR — ウェブによる仮想現実","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/games/techniques/3d_on_the_web/webvr","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/games/techniques/3d_on_the_web/webvr/index.md","last_commit_url":"https://github.com/mdn/content/commit/5977c4838721a8dfbc54423821fceed5b0fb240d","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Games","title":"Game development"},{"uri":"/en-US/docs/Games/Techniques","title":"Techniques for game development"},{"uri":"/en-US/docs/Games/Techniques/3D_on_the_web","title":"3D games on the Web"},{"uri":"/en-US/docs/Games/Techniques/3D_on_the_web/WebVR","title":"WebVR — Virtual Reality for the Web"}],"pageTitle":"WebVR — Virtual Reality for the Web - Game development | MDN","noIndexing":false}}