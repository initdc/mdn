{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Square tilemaps implementation: Scrolling maps","mdn_url":"/en-US/docs/Games/Techniques/Tilemaps/Square_tilemaps_implementation:_Scrolling_maps","locale":"en-US","native":"English (US)","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/en-US/docs/Games/Anatomy\">Anatomy</a></li>\n              <li><a href=\"/en-US/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/en-US/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/en-US/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/en-US/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/en-US/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Techniques/Async_scripts\">Using async scripts for asm.js</a></li>\n              <li><a href=\"/en-US/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizing startup performance</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/WebRTC_data_channels\">Using WebRTC peer-to-peer data channels</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Efficient_animation_for_web_games\">Efficient animation for web games</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/en-US/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/en-US/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/en-US/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/en-US/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>This article covers how to implement scrolling square tilemaps using the <a href=\"/en-US/docs/Web/API/Canvas_API\">Canvas API</a>.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> When writing this article, we assumed previous reader knowledge of canvas basics such as how get a 2D canvas context, load images, etc., which is all explained in the <a href=\"/en-US/docs/Web/API/Canvas_API/Tutorial\">Canvas API tutorial</a>, as well as the basic information included in our <a href=\"/en-US/docs/Games/Techniques/Tilemaps\">Tilemaps</a> introduction article. This article also builds upon <a href=\"/en-US/docs/Games/Techniques/Tilemaps/Square_tilemaps_implementation%3A_Static_maps\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">implementing static square tilemaps</a> — you should read that too if you've not done so already.</p>\n</div>"}},{"type":"prose","value":{"id":"the_camera","title":"The camera","isH3":false,"content":"<p>The camera is an object that holds information about which section of the game world or level is currently being shown. Cameras can either be free-form, controlled by the player (such as in strategy games) or follow an object (such as the main character in platform games.)</p>\n<p>Regardless of the type of camera, we would always need information regarding its current position, viewport size, etc. In the <a href=\"https://mozdevs.github.io/gamedev-js-tiles/square/scroll.html\" class=\"external\" rel=\" noopener\">demo provided</a> along with this article, these are the parameters the camera has:</p>\n<ul>\n  <li><code>x</code> and <code>y</code>: The current position of the camera. In this implementation, we are assuming that <code>(x,y)</code> points to the top left corner of visible portion of the map.</li>\n  <li><code>width</code> and <code>height</code>: The size of the camera's viewport.</li>\n  <li><code>maxX</code> and <code>maxY</code>: The limit for the camera's position — The lower limit will nearly always be (0,0), and in this case the upper limit is equal to the size of the world minus the size of the camera's viewport.</li>\n</ul>"}},{"type":"prose","value":{"id":"rendering_the_map","title":"Rendering the map","isH3":false,"content":"<p>There are two main differences between rendering scrolling maps vs. static maps:</p>\n<ul>\n  <li><strong>Partial tiles might be shown</strong>. In static maps, usually the rendering starts in the top left corner of a tile situated in the top left corner of a viewport. While rendering scrolling tilemaps, the first tile will often be clipped.</li>\n</ul>\n<p>TODO: show a diagram here explaining this.</p>\n<ul>\n  <li><strong>Only a section of the map will be rendered</strong>. If the map is bigger than the viewport, we can obviously only display a part of it at a time, whereas non-scrolling maps are usually rendered wholly.</li>\n</ul>\n<p>To handle these issues, we need to slightly modify the rendering algorithm. Let's imagine that we have the camera pointing at <code>(5,10)</code>. That means that the first tile would be <code>0x0</code>. In the demo code, the starting point is stored at <code>startCol</code> and <code>startRow</code>. It's convenient to also pre-calculate the last tile to be rendered.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> startCol <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> map<span class=\"token punctuation\">.</span>tsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> endCol <span class=\"token operator\">=</span> startCol <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> map<span class=\"token punctuation\">.</span>tsize<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> startRow <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> map<span class=\"token punctuation\">.</span>tsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> endRow <span class=\"token operator\">=</span> startRow <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> map<span class=\"token punctuation\">.</span>tsize<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Once we have the first tile, we need to calculate how much its rendering (and therefore the rendering of the other tiles) is offset by. Since the camera is pointing at <code>(5, 10)</code>, we know that the first tile should be shifted by <code>(-5,-10)</code> pixels. In our demo the shifting amount is stored in the <code>offsetX</code> and <code>offsetY</code> variables.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> offsetX <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> startCol <span class=\"token operator\">*</span> map<span class=\"token punctuation\">.</span>tsize<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> offsetY <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> startRow <span class=\"token operator\">*</span> map<span class=\"token punctuation\">.</span>tsize<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>With these values in place, the loop that renders the map is quite similar to the one used for rendering static tilemaps. The main difference is that we are adding the <code>offsetX</code> and <code>offsetY</code> values to the target <code>x</code> and <code>y</code> coordinates, and these values are rounded, to avoid artifacts that would result from the camera pointing at positions with floating point numbers.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> startCol<span class=\"token punctuation\">;</span> c <span class=\"token operator\">&lt;=</span> endCol<span class=\"token punctuation\">;</span> c<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> r <span class=\"token operator\">=</span> startRow<span class=\"token punctuation\">;</span> r <span class=\"token operator\">&lt;=</span> endRow<span class=\"token punctuation\">;</span> r<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> tile <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getTile</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">-</span> startCol<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> map<span class=\"token punctuation\">.</span>tsize <span class=\"token operator\">+</span> offsetX<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> startRow<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> map<span class=\"token punctuation\">.</span>tsize <span class=\"token operator\">+</span> offsetY<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tile <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 0 =&gt; empty tile</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tileAtlas<span class=\"token punctuation\">,</span> <span class=\"token comment\">// image</span>\n        <span class=\"token punctuation\">(</span>tile <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> map<span class=\"token punctuation\">.</span>tsize<span class=\"token punctuation\">,</span> <span class=\"token comment\">// source x</span>\n        <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// source y</span>\n        map<span class=\"token punctuation\">.</span>tsize<span class=\"token punctuation\">,</span> <span class=\"token comment\">// source width</span>\n        map<span class=\"token punctuation\">.</span>tsize<span class=\"token punctuation\">,</span> <span class=\"token comment\">// source height</span>\n        Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// target x</span>\n        Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// target y</span>\n        map<span class=\"token punctuation\">.</span>tsize<span class=\"token punctuation\">,</span> <span class=\"token comment\">// target width</span>\n        map<span class=\"token punctuation\">.</span>tsize <span class=\"token comment\">// target height</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"demo","title":"Demo","isH3":false,"content":"<p>Our scrolling tilemap implementation demo pulls the above code together to show what an implementation of this map looks like. You can take a look at a <a href=\"https://mozdevs.github.io/gamedev-js-tiles/square/scroll.html\" class=\"external\" rel=\" noopener\">live demo</a>, and see <a href=\"https://github.com/mozdevs/gamedev-js-tiles\" class=\"external\" rel=\" noopener\">its source code</a>.</p>\n<p>\n  <img src=\"/en-US/docs/Games/Techniques/Tilemaps/Square_tilemaps_implementation:_Scrolling_maps/untitled.gif\" alt=\"Animated gif of a section grass, dirt areas, and trees made from repeated sections of a tilemap showing how you see different sections of the area when you scroll.\" width=\"256\" height=\"256\" loading=\"lazy\">\n</p>\n<p>There's <a href=\"https://mozdevs.github.io/gamedev-js-tiles/square/logic-grid.html\" class=\"external\" rel=\" noopener\">another demo available</a>, that shows how to make the camera follow a character.</p>"}}],"toc":[{"text":"The camera","id":"the_camera"},{"text":"Rendering the map","id":"rendering_the_map"},{"text":"Demo","id":"demo"}],"summary":"This article covers how to implement scrolling square tilemaps using the Canvas API.","popularity":0.0002,"modified":"2022-09-06T03:03:02.000Z","source":{"folder":"en-us/games/techniques/tilemaps/square_tilemaps_implementation_colon__scrolling_maps","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/games/techniques/tilemaps/square_tilemaps_implementation_colon__scrolling_maps/index.md","last_commit_url":"https://github.com/mdn/content/commit/0eaa93a518e47f488c97bd7cc3d11c5036f5e918","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Games","title":"Game development"},{"uri":"/en-US/docs/Games/Techniques","title":"Techniques for game development"},{"uri":"/en-US/docs/Games/Techniques/Tilemaps","title":"Tiles and tilemaps overview"},{"uri":"/en-US/docs/Games/Techniques/Tilemaps/Square_tilemaps_implementation:_Scrolling_maps","title":"Square tilemaps implementation: Scrolling maps"}],"pageTitle":"Square tilemaps implementation: Scrolling maps - Game development | MDN","noIndexing":false}}