{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Physics","mdn_url":"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Physics","locale":"en-US","native":"English (US)","sidebarHTML":"\n  <ol>\n    <li class=\"toggle\">\n        <details>\n            <summary>Introduction</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Introduction\">Introduction</a></li>\n              <li><a href=\"/en-US/docs/Games/Anatomy\">Anatomy</a></li>\n              <li><a href=\"/en-US/docs/Games/Examples\">Examples</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>APIs for game development</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Web/API/Canvas_API\">Canvas</a></li>\n              <li><a href=\"/en-US/docs/Web/CSS\">CSS</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Fullscreen_API\">Full screen</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Gamepad_API\">Gamepad</a></li>\n              <li><a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB</a></li>\n              <li><a href=\"/en-US/docs/Web/JavaScript\">JavaScript</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Pointer_Lock_API\">Pointer Lock</a></li>\n              <li><a href=\"/en-US/docs/Web/SVG\">SVG</a></li>\n              <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\">Typed Arrays</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebGL_API\">WebGL</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebSockets_API\">WebSockets</a></li>\n              <li><a href=\"/en-US/docs/Web/API/WebVR_API\">WebVR</a></li>\n              <li><a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></li>\n              <li><a href=\"/en-US/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Techniques</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Techniques/Async_scripts\">Using async scripts for asm.js</a></li>\n              <li><a href=\"/en-US/docs/Web/Apps/Developing/Optimizing_startup_performance\">Optimizing startup performance</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/WebRTC_data_channels\">Using WebRTC peer-to-peer data channels</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Efficient_animation_for_web_games\">Efficient animation for web games</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Audio_for_Web_Games\">Audio for Web Games</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/2D_collision_detection\">2D collision detection</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Tilemaps\">Tiles and tilemaps overview</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>3D games on the Web</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web\">3D games on the Web overview</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Basic_theory\">Explaining basic 3D theory</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_A-Frame\">Building up a basic demo with A-Frame</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js\">Building up a basic demo with Babylon.js</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas\">Building up a basic demo with PlayCanvas</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js\">Building up a basic demo with Three.js</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_on_the_web/WebVR\">WebVR</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_collision_detection\">3D collision detection</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\">Bounding volume collision detection with THREE.js</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Implementing game control mechanisms</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms\">Control mechanisms</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Mobile_touch\">Mobile touch</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Desktop_with_mouse_and_keyboard\">Desktop with mouse and keyboard</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Desktop_with_gamepad\">Desktop with gamepad</a></li>\n              <li><a href=\"/en-US/docs/Games/Techniques/Control_mechanisms/Other\">Other</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Tutorials</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript\">2D breakout game using pure JavaScript</a></li>\n              <li><a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser\">2D breakout game using Phaser</a></li>\n              <li><a href=\"/en-US/docs/Games/Tutorials/HTML5_Gamedev_Phaser_Device_Orientation\">2D maze_game with device orientation</a></li>\n              <li><a href=\"https://mozdevs.github.io/html5-games-workshop/en/guides/platformer/start-here/\">2D platform game using Phaser</a></li>\n            </ol>\n        </details>\n    </li>\n    <li class=\"toggle\">\n        <details>\n            <summary>Publishing games</summary>\n            <ol>\n              <li><a href=\"/en-US/docs/Games/Publishing_games\">Publishing games overview</a></li>\n              <li><a href=\"/en-US/docs/Games/Publishing_games/Game_distribution\">Game distribution</a></li>\n              <li><a href=\"/en-US/docs/Games/Publishing_games/Game_promotion\">Game promotion</a></li>\n              <li><a href=\"/en-US/docs/Games/Publishing_games/Game_monetization\">Game monetization</a></li>\n            </ol>\n        </details>\n    </li>\n  </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Move_the_ball\">« Previous</a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Bounce_off_the_walls\">Next  »</a></li>\n</ul>\n<p>This is the <strong>5th step</strong> out of 16 of the <a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser\">Gamedev Phaser tutorial</a>. You can find the source code as it should look after completing this lesson at <a href=\"https://github.com/end3r/Gamedev-Phaser-Content-Kit/blob/gh-pages/demos/lesson05.html\" class=\"external\" rel=\" noopener\">Gamedev-Phaser-Content-Kit/demos/lesson05.html</a>.</p>\n<p>For proper collision detection between objects in our game we will need to have physics; this article introduces you to what's available in Phaser, as well as demonstrating a typical simple setup.</p>"}},{"type":"prose","value":{"id":"adding_physics","title":"Adding physics","isH3":false,"content":"<p>Phaser is bundled with three different physics engines — Arcade Physics, P2 and Ninja Physics — with a fourth option, Box2D, being available as a commercial plugin. For simple games like ours, we can use the Arcade Physics engine. We don't need any heavy geometry calculations — after all it's just a ball bouncing off walls and bricks.</p>\n<p>First, let's initialize the Arcade Physics engine in our game. Add the <code>physics.startSystem()</code> method at the beginning of the <code>create</code> function (make it the first line inside the function), as shown below:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span><span class=\"token function\">startSystem</span><span class=\"token punctuation\">(</span>Phaser<span class=\"token punctuation\">.</span>Physics<span class=\"token punctuation\">.</span><span class=\"token constant\">ARCADE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Next, we need to enable our ball for the physics system — Phaser object physics is not enabled by default. Add the following line at the bottom of the <code>create()</code> function:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">,</span> Phaser<span class=\"token punctuation\">.</span>Physics<span class=\"token punctuation\">.</span><span class=\"token constant\">ARCADE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Next, if we want to move our ball on the screen, we can set <code>velocity</code> on its <code>body</code>. Add the following line, again at the bottom of <code>create()</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>ball<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"removing_our_previous_update_instructions","title":"Removing our previous update instructions","isH3":false,"content":"<p>Remember to remove our old method of adding values to <code>x</code> and <code>y</code> from the <code>update()</code> function:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  ball<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  ball<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>we are now handling this properly, with a physics engine.</p>"}},{"type":"prose","value":{"id":"final_code_check","title":"Final code check","isH3":false,"content":"<p>The latest code should look like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> ball<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">preload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  game<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">.</span>scaleMode <span class=\"token operator\">=</span> Phaser<span class=\"token punctuation\">.</span>ScaleManager<span class=\"token punctuation\">.</span><span class=\"token constant\">SHOW_ALL</span><span class=\"token punctuation\">;</span>\n  game<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">.</span>pageAlignHorizontally <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  game<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">.</span>pageAlignVertically <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  game<span class=\"token punctuation\">.</span>stage<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">\"#eee\"</span><span class=\"token punctuation\">;</span>\n  game<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">.</span><span class=\"token function\">image</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ball\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"img/ball.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span><span class=\"token function\">startSystem</span><span class=\"token punctuation\">(</span>Phaser<span class=\"token punctuation\">.</span>Physics<span class=\"token punctuation\">.</span><span class=\"token constant\">ARCADE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ball <span class=\"token operator\">=</span> game<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">sprite</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ball\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  game<span class=\"token punctuation\">.</span>physics<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span>ball<span class=\"token punctuation\">,</span> Phaser<span class=\"token punctuation\">.</span>Physics<span class=\"token punctuation\">.</span><span class=\"token constant\">ARCADE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ball<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Try reloading <code>index.html</code> again — The ball should now be moving constantly in the given direction. At the moment, the physics engine has gravity and friction set to zero. Adding gravity would result in the ball falling down while friction would eventually stop the ball.</p>"}},{"type":"prose","value":{"id":"fun_with_physics","title":"Fun with physics","isH3":false,"content":"<p>You can do much more with physics, for example by adding <code>ball.body.gravity.y = 100;</code> you will set the vertical gravity of the ball. As a result it will be launched upwards, but then fall due to the effects of gravity pulling it down.</p>\n<p>This kind of functionality is just the tip of the iceberg — there are various functions and variables that can help you manipulate the physics objects. Check out the official <a href=\"https://phaser.io/docs#physics\" class=\"external\" rel=\" noopener\">physics documentation</a> and see the huge collection of examples using the <a href=\"https://phaser.io/examples/v2/category/arcade-physics\" class=\"external\" rel=\" noopener\">Arcade</a> and <a href=\"https://phaser.io/examples/v2/category/p2-physics\" class=\"external\" rel=\" noopener\">P2</a> physics systems.</p>"}},{"type":"prose","value":{"id":"compare_your_code","title":"Compare your code","isH3":false,"content":"<p>You can check the finished code for this lesson in the live demo below, and play with it to understand better how it works:</p><p><iframe allowfullscreen=\"allowfullscreen\" width=\"756\" height=\"400\" src=\"https://jsfiddle.net/end3r/bjto9nj8/embedded/\" loading=\"lazy\"></iframe></p>"}},{"type":"prose","value":{"id":"next_steps","title":"Next steps","isH3":false,"content":"<p>Now we can move to the next lesson and see how to make the ball <a href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Bounce_off_the_walls\">bounce off the walls</a>.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Move_the_ball\">« Previous</a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Bounce_off_the_walls\">Next  »</a></li>\n</ul>"}}],"toc":[{"text":"Adding physics","id":"adding_physics"},{"text":"Removing our previous update instructions","id":"removing_our_previous_update_instructions"},{"text":"Final code check","id":"final_code_check"},{"text":"Fun with physics","id":"fun_with_physics"},{"text":"Compare your code","id":"compare_your_code"},{"text":"Next steps","id":"next_steps"}],"summary":"This is the 5th step out of 16 of the Gamedev Phaser tutorial. You can find the source code as it should look after completing this lesson at Gamedev-Phaser-Content-Kit/demos/lesson05.html.","popularity":0.0002,"modified":"2022-08-26T07:25:46.000Z","other_translations":[{"title":"物理演算","locale":"ja","native":"日本語"},{"title":"Физика","locale":"ru","native":"Русский"},{"title":"Physics","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/games/tutorials/2d_breakout_game_phaser/physics","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/games/tutorials/2d_breakout_game_phaser/physics/index.md","last_commit_url":"https://github.com/mdn/content/commit/e4783c03e39807e0060a2f4df3bf3962d25d8388","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Games","title":"Game development"},{"uri":"/en-US/docs/Games/Tutorials","title":"Tutorials"},{"uri":"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser","title":"2D breakout game using Phaser"},{"uri":"/en-US/docs/Games/Tutorials/2D_breakout_game_Phaser/Physics","title":"Physics"}],"pageTitle":"Physics - Game development | MDN","noIndexing":false}}