{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Specification Deviations","mdn_url":"/en-US/docs/Web/SVG/Specification_Deviations","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>There are a few places where we have consciously decided to make <a href=\"/en-US/Gecko\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">Gecko</a> deviate from or extend the SVG specification. This page lists those deviations/extensions and our reasoning for them.</p>"}},{"type":"prose","value":{"id":"the_class_and_style_attributes","title":"The 'class' and 'style' attributes","isH3":true,"content":"<p>Unlike HTML and MathML, the SVG specification does not specify the 'style' and 'class' attributes on all SVG elements. Nevertheless, to allow Mozilla to more cleanly share internal 'class' and 'style' related code, we will implement these attributes on all SVG elements as of Firefox 3. In general this change will not be visible to SVG authors (the elements for which the SVG specification does not define the 'class' and 'style' attribute are elements that are not displayed directly). However, there are two exceptions.</p>\n<p>Extending the 'class' attribute to apply to all SVG elements will allow SVG authors to use the <a href=\"https://www.w3.org/TR/selectors-api/\" class=\"external\" rel=\" noopener\">Selectors API</a> to select <em>any</em> SVG element based on class. This seems like a good thing. Requiring SVG authors to know which elements can and cannot take a 'class' attribute would just put an extra burden on them.</p>\n<p>Extending the 'style' attribute to apply to all SVG elements should only really be visible to SVG authors if they call <a href=\"https://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSview-getComputedStyle\" class=\"external\" rel=\" noopener\">ViewCSS.getComputedStyle</a> on the element or one of its descendants. Since these elements and their descendants are not displayed, it seems unlikely that anyone will either specify 'style' or call getComputedStyle on them. Note that this extension does not mean that we add a css::CSSStyleDeclaration 'style' property to the DOM of elements that do not implement the SVGStylable interface.</p>"}}],"toc":[],"summary":"There are a few places where we have consciously decided to make Gecko deviate from or extend the SVG specification. This page lists those deviations/extensions and our reasoning for them.","popularity":0,"modified":"2022-09-09T07:06:10.000Z","source":{"folder":"en-us/web/svg/specification_deviations","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/svg/specification_deviations/index.md","last_commit_url":"https://github.com/mdn/content/commit/f4f8e2f18ccf19a0bee59e1fe78753e276b98232","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/SVG","title":"SVG: Scalable Vector Graphics"},{"uri":"/en-US/docs/Web/SVG/Specification_Deviations","title":"Specification Deviations"}],"pageTitle":"Specification Deviations - SVG: Scalable Vector Graphics | MDN","noIndexing":false}}