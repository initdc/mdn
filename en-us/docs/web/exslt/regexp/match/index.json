{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"regexp:match()","mdn_url":"/en-US/docs/Web/EXSLT/regexp/match","locale":"en-US","native":"English (US)","sidebarHTML":"\n<ol><li><a href=\"/en-US/docs/Web/EXSLT/exsl\">Common (exsl)</a><ol><li><a href=\"/en-US/docs/Web/EXSLT/exsl\">Common (exsl)</a></li><li><a href=\"/en-US/docs/Web/EXSLT/exsl/node-set\">exsl:node-set()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/exsl/object-type\">exsl:object-type()</a></li></ol></li><li><a href=\"/en-US/docs/Web/EXSLT/math\">Math (math)</a><ol><li><a href=\"/en-US/docs/Web/EXSLT/math\">Math (math)</a></li><li><a href=\"/en-US/docs/Web/EXSLT/math/highest\">math:highest()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/math/lowest\">math:lowest()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/math/max\">math:max()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/math/min\">math:min()</a></li></ol></li><li><a href=\"/en-US/docs/Web/EXSLT/regexp\">Regular expressions (regexp)</a><ol><li><a href=\"/en-US/docs/Web/EXSLT/regexp\">Regular expressions (regexp)</a></li><li><a href=\"/en-US/docs/Web/EXSLT/regexp/match\">regexp:match()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/regexp/replace\">regexp:replace()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/regexp/test\">regexp:test()</a></li></ol></li><li><a href=\"/en-US/docs/Web/EXSLT/set\">Sets (set)</a><ol><li><a href=\"/en-US/docs/Web/EXSLT/set\">Sets (set)</a></li><li><a href=\"/en-US/docs/Web/EXSLT/set/difference\">set:difference()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/set/distinct\">set:distinct()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/set/has-same-node\">set:has-same-node()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/set/intersection\">set:intersection()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/set/leading\">set:leading()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/set/trailing\">set:trailing()</a></li></ol></li><li><a href=\"/en-US/docs/Web/EXSLT/str\">Strings (str)</a><ol><li><a href=\"/en-US/docs/Web/EXSLT/str\">Strings (str)</a></li><li><a href=\"/en-US/docs/Web/EXSLT/str/concat\">str:concat()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/str/split\">str:split()</a></li><li><a href=\"/en-US/docs/Web/EXSLT/str/tokenize\">str:tokenize()</a></li></ol></li></ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div style=\"background:#f5f5f5; margin: 5px 0;\" id=\"sect1\">\n    <b><a href=\"/en-US/docs/Web/XSLT/Transforming_XML_with_XSLT/The_Netscape_XSLT_XPath_Reference\">XSLT/XPath Reference</a></b>: <a href=\"/en-US/docs/Web/XSLT/Element\">XSLT elements</a>, <a href=\"/en-US/docs/Web/EXSLT\">EXSLT functions</a>, <a href=\"/en-US/docs/Web/XPath/Functions\">XPath functions</a>, <a href=\"/en-US/docs/Web/XPath/Axes\">XPath axes</a>\n</div>\n<p><code>regexp:match()</code> performs regular expression matching on a string, returning the submatches found as a result.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">regexp:match(targetString, regExpString[, flagsString])\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"targetstring\"><code>targetString</code></dt>\n  <dd>\n    <p>The string to perform regular expression matching upon.</p>\n  </dd>\n  <dt id=\"regexpstring\"><code>regExpString</code></dt>\n  <dd>\n    <p>The JavaScript style regular expression to evaluate.</p>\n  </dd>\n  <dt id=\"flagsstring\"><code>flagsString</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An optional string containing character flags.</p>\n  </dd>\n</dl>\n<p>The character flags are:</p>\n<dl>\n  <dt id=\"g\"><code>g</code></dt>\n  <dd>\n    <p>Global match. The submatches from every match in the string are returned. If this flag isn't specified, only the submatches from the first match are returned.</p>\n  </dd>\n  <dt id=\"i\"><code>i</code></dt>\n  <dd>\n    <p>Case insensitive match. If this flag is specified, the match is performed in a case insensitive fashion.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"returns","title":"Returns","isH3":true,"content":"<p>A node set of <code>match</code> elements, each of which has the string value equal to a portion of the first parameter string as captured by the regular expression. If the match isn't a global one, the first match element has the value of the portion of the string matched by the entire regular expression.</p>\n<p>For example:</p>\n<div class=\"code-example\"><pre class=\"brush: xml notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>for-each</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>regExp:match(<span class=\"token punctuation\">'</span>https://developer.mozilla.org/en/docs/Firefox_3_for_developers<span class=\"token punctuation\">'</span>,\n                                   <span class=\"token punctuation\">'</span>(\\w+):\\/\\/([^/:]+)(:\\d*)?([^# ]*)<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n   Part <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>position()<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span> = <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>for-each</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>This code generates the following output:</p>\n<pre class=\"notranslate\">Part 1 = https://developer.mozilla.org/en/docs/Firefox_3_for_developers\nPart 2 = https\nPart 3 = developer.mozilla.org\nPart 4 =\nPart 5 = /en/docs/Firefox_3_for_developers\n</pre>"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<p><a href=\"http://exslt.org/regexp/functions/match/index.html\" class=\"external\" rel=\" noopener\">EXSLT - REGEXP:MATCH</a></p>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Specifications","id":"specifications"}],"summary":"regexp:match() performs regular expression matching on a string, returning the submatches found as a result.","popularity":0.0002,"modified":"2022-09-13T07:01:32.000Z","other_translations":[{"title":"match","locale":"es","native":"Español"},{"title":"match","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/exslt/regexp/match","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/exslt/regexp/match/index.md","last_commit_url":"https://github.com/mdn/content/commit/87a9f73c410c9b9e91300695c8aa4931367243fb","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/EXSLT","title":"EXSLT"},{"uri":"/en-US/docs/Web/EXSLT/regexp","title":"Regular expressions (regexp)"},{"uri":"/en-US/docs/Web/EXSLT/regexp/match","title":"regexp:match()"}],"pageTitle":"regexp:match() - EXSLT | MDN","noIndexing":false}}