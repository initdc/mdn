{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Using device orientation with 3D transforms","mdn_url":"/en-US/docs/Web/API/Device_orientation_events/Using_device_orientation_with_3D_transforms","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Device_orientation_events\">Device orientation events</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/API/Device_orientation_events/Detecting_device_orientation\">Detecting device orientation</a></li><li><a href=\"/en-US/docs/Web/API/Device_orientation_events/Orientation_and_motion_data_explained\">Orientation and motion data explained</a></li><li><a href=\"/en-US/docs/Web/API/Device_orientation_events/Using_device_orientation_with_3D_transforms\">Using device orientation with 3D transforms</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/DeviceMotionEvent\"><code>DeviceMotionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/DeviceMotionEventAcceleration\"><code>DeviceMotionEventAcceleration</code></a></li><li><a href=\"/en-US/docs/Web/API/DeviceMotionEventRotationRate\"><code>DeviceMotionEventRotationRate</code></a></li><li><a href=\"/en-US/docs/Web/API/DeviceOrientationEvent\"><code>DeviceOrientationEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/Window/devicemotion_event\"><code>Window</code>: <code>devicemotion</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/deviceorientation_event\"><code>Window</code>: <code>deviceorientation</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/deviceorientationabsolute_event\"><code>Window</code>: <code>deviceorientationabsolute</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  </p>\n  This article provides tips on how to use device orientation information in tandem with CSS 3D transforms.\n<p></p>"}},{"type":"prose","value":{"id":"using_orientation_to_rotate_an_element","title":"Using orientation to rotate an element","isH3":false,"content":"<p>The easiest way to convert <a href=\"/en-US/docs/Web/API/Window/deviceorientation_event\">orientation data</a> to a <a href=\"/en-US/docs/Web/CSS/transform\">3D transform</a> is basically to use the alpha, gamma, and beta values as <code>rotateZ</code>, <code>rotateX</code> and <code>rotateY</code> values.</p>\n<p>It is important to keep in mind, however, that the <a href=\"/en-US/docs/Web/API/Device_orientation_events/Orientation_and_motion_data_explained\">Device Orientation coordinate system</a> is different from the <a href=\"/en-US/docs/Web/CSS/CSSOM_View/Coordinate_systems\">CSS coordinate system</a>. Namely, the former is <a href=\"https://en.wikipedia.org/wiki/Right-hand_rule\" class=\"external\" rel=\" noopener\">right-handed</a> and its Y axis is positive upwards, while the latter is a left-handed coordinate system whose Y axis is positive to the bottom. Furthermore, the Device Orientation angle rotations should always be done in a Z - X' - Y'' order that does not match the order of some <a href=\"/en-US/docs/Web/CSS/CSS_Transforms\">CSS Transforms</a>. These are some of the practical consequences of these differences:</p>\n<ul>\n  <li>The order of angle rotations matters, so make sure the alpha, beta and gamma rotations are applied in this order.</li>\n  <li>The <a href=\"/en-US/docs/Web/CSS/transform-function/rotate3d\">rotate3d()</a> CSS transformation, and the <a href=\"/en-US/docs/Web/API/DOMMatrixReadOnly/rotate\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">DOMMatrixReadOnly.rotate()</a> and <a href=\"/en-US/docs/Web/API/DOMMatrix/rotateSelf\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">DOMMatrix.rotateSelf()</a> functions apply angle rotations in a Z - Y' - X'' order, so it is not possible to apply the alpha, beta and gamma rotations in the right order with a single call to any of them. Instead, you should rotate each axis individually in the correct order.</li>\n  <li>Due to the differences in coordinate systems outlined above, when looking towards the origin rotations are applied clockwise around in CSS and counter-clockwise in the Device Orientation spec. This means alpha and beta need to be inverted (the rotations around Z and X), but gamma (the rotation around Y) does not because they point to different directions in the two coordinate systems.</li>\n</ul>\n<p>Here's a simple code snippet to sum it up:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"view3d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deviceorientation\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  elem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">rotateZ(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token operator\">-</span>e<span class=\"token punctuation\">.</span>alpha<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">deg) rotateX(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token operator\">-</span>e<span class=\"token punctuation\">.</span>beta<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">deg) rotateY(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>gamma<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">deg)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"rotate3d_to_orientation","title":"rotate3d to orientation","isH3":false,"content":"<p>Should you ever need to convert a rotate3d axis-angle to orientation Euler angles, you can use the following algorithm:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// convert a rotate3d axis-angle to deviceorientation angles</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">orient</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">aa</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> aa<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> aa<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> z <span class=\"token operator\">=</span> aa<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> aa<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span>\n        c <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>aa<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        s <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>aa<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        t <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> c<span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// axis-angle to rotation matrix</span>\n        rm00 <span class=\"token operator\">=</span>    c <span class=\"token operator\">+</span> x<span class=\"token operator\">*</span>x <span class=\"token operator\">*</span> t<span class=\"token punctuation\">,</span>\n        rm10 <span class=\"token operator\">=</span>  z<span class=\"token operator\">*</span>s <span class=\"token operator\">+</span> y<span class=\"token operator\">*</span>x <span class=\"token operator\">*</span> t<span class=\"token punctuation\">,</span>\n        rm20 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>y<span class=\"token operator\">*</span>s <span class=\"token operator\">+</span> z<span class=\"token operator\">*</span>x <span class=\"token operator\">*</span> t<span class=\"token punctuation\">,</span>\n        rm01 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>z<span class=\"token operator\">*</span>s <span class=\"token operator\">+</span> x<span class=\"token operator\">*</span>y <span class=\"token operator\">*</span> t<span class=\"token punctuation\">,</span>\n        rm11 <span class=\"token operator\">=</span>    c <span class=\"token operator\">+</span> y<span class=\"token operator\">*</span>y <span class=\"token operator\">*</span> t<span class=\"token punctuation\">,</span>\n        rm21 <span class=\"token operator\">=</span>  x<span class=\"token operator\">*</span>s <span class=\"token operator\">+</span> z<span class=\"token operator\">*</span>y <span class=\"token operator\">*</span> t<span class=\"token punctuation\">,</span>\n        rm02 <span class=\"token operator\">=</span>  y<span class=\"token operator\">*</span>s <span class=\"token operator\">+</span> x<span class=\"token operator\">*</span>z <span class=\"token operator\">*</span> t<span class=\"token punctuation\">,</span>\n        rm12 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>x<span class=\"token operator\">*</span>s <span class=\"token operator\">+</span> y<span class=\"token operator\">*</span>z <span class=\"token operator\">*</span> t<span class=\"token punctuation\">,</span>\n        rm22 <span class=\"token operator\">=</span>    c <span class=\"token operator\">+</span> z<span class=\"token operator\">*</span>z <span class=\"token operator\">*</span> t<span class=\"token punctuation\">,</span>\n\n        <span class=\"token constant\">TO_DEG</span> <span class=\"token operator\">=</span> <span class=\"token number\">180</span> <span class=\"token operator\">/</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">,</span>\n        ea <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        n <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">hypot</span><span class=\"token punctuation\">(</span>rm22<span class=\"token punctuation\">,</span> rm20<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// rotation matrix to Euler angles</span>\n    ea<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">atan2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>rm21<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&gt;</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      ea<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">atan2</span><span class=\"token punctuation\">(</span>rm01<span class=\"token punctuation\">,</span> rm11<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      ea<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">atan2</span><span class=\"token punctuation\">(</span>rm20<span class=\"token punctuation\">,</span> rm22<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      ea<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      ea<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rm21 <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">atan2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>rm10<span class=\"token punctuation\">,</span> rm00<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">alpha</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span>ea<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token constant\">TO_DEG</span> <span class=\"token operator\">-</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">beta</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span>ea<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token constant\">TO_DEG</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">gamma</span><span class=\"token operator\">:</span> ea<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token constant\">TO_DEG</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/CSS/CSS_Transforms/Using_CSS_transforms\">Using CSS transforms</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Device_orientation_events/Detecting_device_orientation\">Detecting device orientation</a></li>\n</ul>"}}],"toc":[{"text":"Using orientation to rotate an element","id":"using_orientation_to_rotate_an_element"},{"text":"rotate3d to orientation","id":"rotate3d_to_orientation"},{"text":"See also","id":"see_also"}],"summary":"The easiest way to convert orientation data to a 3D transform is basically to use the alpha, gamma, and beta values as rotateZ, rotateX and rotateY values.","popularity":0,"modified":"2022-09-09T05:10:34.000Z","source":{"folder":"en-us/web/api/device_orientation_events/using_device_orientation_with_3d_transforms","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/device_orientation_events/using_device_orientation_with_3d_transforms/index.md","last_commit_url":"https://github.com/mdn/content/commit/1511e914c6b1ce6f88056bfefd48a6aa585cebce","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Device_orientation_events","title":"Device orientation events"},{"uri":"/en-US/docs/Web/API/Device_orientation_events/Using_device_orientation_with_3D_transforms","title":"Using device orientation with 3D transforms"}],"pageTitle":"Using device orientation with 3D transforms - Web APIs | MDN","noIndexing":false}}