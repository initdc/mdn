{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MIDIAccess: statechange event","mdn_url":"/en-US/docs/Web/API/MIDIAccess/statechange_event","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_MIDI_API\">Web MIDI API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/MIDIAccess\"><code>MIDIAccess</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/MIDIAccess/inputs\"><code>inputs</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIAccess/outputs\"><code>outputs</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIAccess/sysexEnabled\"><code>sysexEnabled</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><em><code>statechange</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web MIDI API</summary><ol><li><a href=\"/en-US/docs/Web/API/MIDIConnectionEvent\"><code>MIDIConnectionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIInput\"><code>MIDIInput</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIInputMap\"><code>MIDIInputMap</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIMessageEvent\"><code>MIDIMessageEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIOutput\"><code>MIDIOutput</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIOutputMap\"><code>MIDIOutputMap</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIPort\"><code>MIDIPort</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/requestMIDIAccess\"><code>Navigator.requestMIDIAccess()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>statechange</code></strong> event of the <a href=\"/en-US/docs/Web/API/MIDIAccess\"><code>MIDIAccess</code></a> interface is fired when a new MIDI port is added or when an existing port changes state.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<p>Use the event name in methods like <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, or set an event handler property.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'statechange'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function-variable function\">onstatechange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"event_type","title":"Event type","isH3":false,"content":"<p>A <a href=\"/en-US/docs/Web/API/MIDIConnectionEvent\"><code>MIDIConnectionEvent</code></a>. Inherits from <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a>.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/Event\">\n    <rect x=\"0\" y=\"0\" width=\"75\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"37.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      Event\n    </text>\n  </a>\n  <line x1=\"75\" y1=\"14\" x2=\"105\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"75,14 85,9 85,19 75,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/MIDIConnectionEvent\">\n    <rect x=\"105\" y=\"0\" width=\"152\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"181\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      MIDIConnectionEvent\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"event_properties","title":"Event properties","isH3":false,"content":"<dl>\n  <dt id=\"midiconnectionevent.port\"><a href=\"/en-US/docs/Web/API/MIDIConnectionEvent/port\"><code>MIDIConnectionEvent.port</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a reference to a <a href=\"/en-US/docs/Web/API/MIDIPort\"><code>MIDIPort</code></a> instance for a port that has been connected or disconnected.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>The <a href=\"/en-US/docs/Web/API/Navigator/requestMIDIAccess\"><code>Navigator.requestMIDIAccess()</code></a> method returns a promise that resolves with a <a href=\"/en-US/docs/Web/API/MIDIAccess\"><code>MIDIAccess</code></a> object. When a port changes state, information about that port is printed to the console.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>navigator<span class=\"token punctuation\">.</span><span class=\"token function\">requestMIDIAccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">access</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n     access<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onstatechange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n       console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span>manufacturer<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[],"query":"api.MIDIAccess.statechange_event"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MIDIAccess.statechange_event","dataURL":"/en-US/docs/Web/API/MIDIAccess/statechange_event/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Event type","id":"event_type"},{"text":"Event properties","id":"event_properties"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The statechange event of the MIDIAccess interface is fired when a new MIDI port is added or when an existing port changes state.","popularity":0,"modified":"2022-09-09T05:17:24.000Z","source":{"folder":"en-us/web/api/midiaccess/statechange_event","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/midiaccess/statechange_event/index.md","last_commit_url":"https://github.com/mdn/content/commit/4b4638246aad5d39b9a2e5c572b179b4c39c0a84","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MIDIAccess","title":"MIDIAccess"},{"uri":"/en-US/docs/Web/API/MIDIAccess/statechange_event","title":"MIDIAccess: statechange event"}],"pageTitle":"MIDIAccess: statechange event - Web APIs | MDN","noIndexing":false}}