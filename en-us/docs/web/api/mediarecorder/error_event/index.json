{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaRecorder: error event","mdn_url":"/en-US/docs/Web/API/MediaRecorder/error_event","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaRecorder/MediaRecorder\"><code>MediaRecorder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaRecorder/audioBitsPerSecond\"><code>audioBitsPerSecond</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/mimeType\"><code>mimeType</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/MediaRecorder/warning_event\"><code>onwarning</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/state\"><code>state</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/stream\"><code>stream</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond\"><code>videoBitsPerSecond</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaRecorder/isTypeSupported\"><code>isTypeSupported()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/pause\"><code>pause()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/requestData\"><code>requestData()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/resume\"><code>resume()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/start\"><code>start()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/stop\"><code>stop()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaRecorder/dataavailable_event\"><code>dataavailable</code></a></li><li><em><code>error</code></em></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/pause_event\"><code>pause</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/resume_event\"><code>resume</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/start_event\"><code>start</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/stop_event\"><code>stop</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <a href=\"/en-US/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a> interface's <strong><code>error</code></strong> event is fired when an error occurs: for example because recording wasn't allowed or was attempted using an unsupported codec.</p>\n<p>This event is not cancelable and does not bubble.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<p>Use the event name in methods like <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, or set an event handler property.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'event'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function-variable function\">onevent</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"event_type","title":"Event type","isH3":false,"content":"<p>A <a href=\"/en-US/docs/Web/API/MediaRecorderErrorEvent\"><code>MediaRecorderErrorEvent</code></a>. Inherits from <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a>.</p>"}},{"type":"prose","value":{"id":"event_properties","title":"Event properties","isH3":false,"content":"<p><em>Inherits properties from its parent interface, <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></em>.</p>\n<dl>\n  <dt id=\"error\"><a href=\"/en-US/docs/Web/API/MediaRecorderErrorEvent/error\" title=\"error\"><code>error</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a> containing information about the error that occurred.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":true,"content":"<p>\n  A function to be called whenever an error occurs during the recorder's lifetime. In\n  addition to other general errors that might occur, the following errors are specifically\n  possible when using the MediaStream Recording API; to determine which occurred, check\n  the value of <a href=\"/en-US/docs/Web/API/DOMException/name\" title=\"MediaRecorderErrorEvent.error.name\"><code>MediaRecorderErrorEvent.error.name</code></a>.\n</p>\n<dl>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code></dt>\n  <dd>\n    <p>\n      An attempt was made to stop or pause an inactive recorder, start or resume an\n      active recorder, or otherwise manipulate the <code>MediaRecorder</code> while in the\n      wrong state. This exception can also occur when a request is made on a source that has\n      been deleted or removed.\n    </p>\n  </dd>\n  <dt id=\"securityerror\"><code>SecurityError</code></dt>\n  <dd>\n    <p>\n      The <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> is configured to disallow recording. This may be the\n      case, for example, with sources obtained using <a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\" title=\"getUserMedia()\"><code>getUserMedia()</code></a> when the user denies permission to use an input device.\n    </p>\n  </dd>\n  <dt id=\"notsupportederror\"><code>NotSupportedError</code></dt>\n  <dd>\n    <p>\n      An attempt was made to instantiate a <code>MediaRecorder</code> using a MIME type\n      that isn't supported on the user's device; one or more of the requested container,\n      codecs, or profiles as well as other information may be invalid.\n    </p>\n  </dd>\n  <dt id=\"invalidmodificationerror\"><code>InvalidModificationError</code></dt>\n  <dd>\n    <p>\n      The number of tracks on the stream being recorded has changed. You can't add or\n      remove tracks while recording media.\n    </p>\n  </dd>\n  <dt id=\"unknownerror\"><code>UnknownError</code></dt>\n  <dd>\n    <p>\n      An non-security related error occurred that cannot otherwise be categorized.\n      Recording stops, the <code>MediaRecorder</code>'s <a href=\"/en-US/docs/Web/API/MediaRecorder/state\" title=\"state\"><code>state</code></a> becomes <code>inactive</code>, one last <a href=\"/en-US/docs/Web/API/MediaRecorder/dataavailable_event\" title=\"dataavailable\"><code>dataavailable</code></a> event is\n      sent to the <code>MediaRecorder</code> with the remaining received data, and finally a\n      <a href=\"/en-US/docs/Web/API/MediaRecorder/stop_event\" title=\"stop\"><code>stop</code></a> event is sent.\n    </p>\n  </dd>\n</dl>\n<p>\n  These errors may occur either directly because of a call to a\n  <code>MediaRecorder</code> method, or indirectly due to a problem arising during the\n  recording process.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Using <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener</code></a> to listen for <code>error</code> events:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> recorder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaRecorder</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    recorder<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">error recording stream: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    recorder<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The same, but using the onerror event handler property:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> recorder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaRecorder</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    recorder<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">error recording stream: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    recorder<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/mediacapture-record/#errorevent-section","title":"MediaStream Recording"}],"query":"api.MediaRecorder.error_event"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaRecorder.error_event","dataURL":"/en-US/docs/Web/API/MediaRecorder/error_event/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\">Using the MediaRecorder API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Event type","id":"event_type"},{"text":"Event properties","id":"event_properties"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The MediaRecorder interface's error event is fired when an error occurs: for example because recording wasn't allowed or was attempted using an unsupported codec.","popularity":0.0003,"modified":"2022-09-09T05:17:24.000Z","other_translations":[{"title":"MediaRecorder: error イベント","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/mediarecorder/error_event","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/mediarecorder/error_event/index.md","last_commit_url":"https://github.com/mdn/content/commit/4b4638246aad5d39b9a2e5c572b179b4c39c0a84","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaRecorder","title":"MediaRecorder"},{"uri":"/en-US/docs/Web/API/MediaRecorder/error_event","title":"MediaRecorder: error event"}],"pageTitle":"MediaRecorder: error event - Web APIs | MDN","noIndexing":false}}