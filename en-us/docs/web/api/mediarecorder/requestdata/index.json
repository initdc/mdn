{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaRecorder.requestData()","mdn_url":"/en-US/docs/Web/API/MediaRecorder/requestData","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/MediaStream_Recording_API\">MediaStream Recording API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaRecorder/MediaRecorder\"><code>MediaRecorder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaRecorder/audioBitsPerSecond\"><code>audioBitsPerSecond</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/mimeType\"><code>mimeType</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/MediaRecorder/warning_event\"><code>onwarning</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/state\"><code>state</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/stream\"><code>stream</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond\"><code>videoBitsPerSecond</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaRecorder/isTypeSupported\"><code>isTypeSupported()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/pause\"><code>pause()</code></a></li><li><em><code>requestData()</code></em></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/resume\"><code>resume()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/start\"><code>start()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/stop\"><code>stop()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaRecorder/dataavailable_event\"><code>dataavailable</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/error_event\"><code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/pause_event\"><code>pause</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/resume_event\"><code>resume</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/start_event\"><code>start</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorder/stop_event\"><code>stop</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for MediaStream Recording</summary><ol><li><a href=\"/en-US/docs/Web/API/BlobEvent\"><code>BlobEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaRecorderErrorEvent\"><code>MediaRecorderErrorEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>MediaRecorder.requestData()</code></strong>\n  method (part of the <a href=\"/en-US/docs/Web/API/MediaStream_Recording_API\">MediaRecorder API</a>) is used to raise a <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>dataavailable</code></a> event containing a\n  <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> object of the captured media as it was when the method was\n  called. This can then be grabbed and manipulated as you wish.\n</p>\n<p>\n  When the <code>requestData()</code> method is invoked, the browser queues a task that\n  runs the following steps:\n</p>\n<ol>\n  <li>\n    If <a href=\"/en-US/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> is \"inactive\", raise a DOM\n    <code>InvalidState</code> error and terminate these steps. If\n    <a href=\"/en-US/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> is not \"inactive\", continue to the next step.\n  </li>\n  <li>\n    Raise a <a href=\"/en-US/docs/Web/API/MediaRecorder/dataavailable_event\" title=\"dataavailable\"><code>dataavailable</code></a> event containing a <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> of the\n    currently captured data (the Blob is available under the event's <code>data</code>\n    attribute.)\n  </li>\n  <li>Create a new Blob and place subsequently captured data into it.</li>\n</ol>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">requestData()\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"errors","title":"Errors","isH3":true,"content":"<p>\n  An <code>InvalidState</code> error is raised if the <code>requestData()</code> method\n  is called while the <code>MediaRecorder</code> object's\n  <a href=\"/en-US/docs/Web/API/MediaRecorder/state\"><code>MediaRecorder.state</code></a> is not \"recording\" — the media cannot be captured if\n  recording is not occurring.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>captureMedia<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  mediaRecorder<span class=\"token punctuation\">.</span><span class=\"token function\">requestData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// makes snapshot available of data so far</span>\n  <span class=\"token comment\">// ondataavailable fires, then capturing continues</span>\n  <span class=\"token comment\">// in new Blob</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/mediacapture-record/#dom-mediarecorder-requestdata","title":"MediaStream Recording"}],"query":"api.MediaRecorder.requestData"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaRecorder.requestData","dataURL":"/en-US/docs/Web/API/MediaRecorder/requestData/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\">Using the MediaRecorder API</a></li>\n  <li>\n    <a href=\"https://mdn.github.io/dom-examples/media/web-dictaphone/\" class=\"external\" rel=\" noopener\">Web Dictaphone</a>: MediaRecorder +\n    getUserMedia + Web Audio API visualization demo, by <a href=\"https://twitter.com/chrisdavidmills\" class=\"external\" rel=\" noopener\">Chris Mills</a> (<a href=\"https://github.com/mdn/dom-examples/tree/main/media/web-dictaphone\" class=\"external\" rel=\" noopener\">source on GitHub</a>.)\n  </li>\n  <li><a href=\"https://simpl.info/mediarecorder/\" class=\"external\" rel=\" noopener\">simpl.info MediaStream Recording demo</a>, by <a href=\"https://twitter.com/sw12\" class=\"external\" rel=\" noopener\">Sam Dutton</a>.</li>\n  <li><a href=\"/en-US/docs/Web/API/Navigator/getUserMedia\"><code>Navigator.getUserMedia</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The MediaRecorder.requestData()\n  method (part of the MediaRecorder API) is used to raise a dataavailable event containing a\n  Blob object of the captured media as it was when the method was\n  called. This can then be grabbed and manipulated as you wish.","popularity":0.0004,"modified":"2022-09-13T05:54:54.000Z","other_translations":[{"title":"MediaRecorder.requestData()","locale":"ja","native":"日本語"},{"title":"MediaRecorder.requestData()","locale":"ru","native":"Русский"}],"source":{"folder":"en-us/web/api/mediarecorder/requestdata","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/mediarecorder/requestdata/index.md","last_commit_url":"https://github.com/mdn/content/commit/b7556b71e1fc3e89057671b372871e9f33d3f0b8","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaRecorder","title":"MediaRecorder"},{"uri":"/en-US/docs/Web/API/MediaRecorder/requestData","title":"MediaRecorder.requestData()"}],"pageTitle":"MediaRecorder.requestData() - Web APIs | MDN","noIndexing":false}}