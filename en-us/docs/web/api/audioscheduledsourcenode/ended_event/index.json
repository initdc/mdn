{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"AudioScheduledSourceNode: ended event","mdn_url":"/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Using the Web Audio API</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Basic_concepts_behind_Web_Audio_API\">Basic concepts behind Web Audio API</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Best_practices\">Web Audio API best practices</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Advanced_techniques\">Advanced techniques: Creating and sequencing audio</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_AudioWorklet\">Background audio processing using AudioWorklet</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Controlling_multiple_parameters_with_ConstantSourceNode\">Controlling multiple parameters with ConstantSourceNode</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Migrating_from_webkitAudioContext\">Migrating from webkitAudioContext</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Simple_synth\">Example and tutorial: Simple synth keyboard</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Tools\">Tools for analyzing Web Audio usage</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_IIR_filters\">Using IIR filters</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API\">Visualizations with Web Audio API</a></li><li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Web_audio_spatialization_basics\">Web audio spatialization basics</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li><li><a href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <code>ended</code> event of the <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a> interface is fired when the source node has stopped playing.</p>\n<p>This event occurs when a <a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a> has stopped playing, either because it's reached a predetermined stop time, the full duration of the audio has been performed, or because the entire buffer has been played.</p>\n<p>This event is not cancelable and does not bubble.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<p>Use the event name in methods like <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, or set an event handler property.</p>\n<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">addEventListener(\"ended\", (event) =&gt; { })\n\nonended = (event) =&gt; { }\n</pre></div>"}},{"type":"prose","value":{"id":"event_type","title":"Event type","isH3":false,"content":"<p>A generic <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In this simple example, an event listener for the <code>ended</code> event is set up to enable a \"Start\" button in the user interface when the node stops playing:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>node<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ended\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"startButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>You can also set up the event handler using the <code>onended</code> property:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>node<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onended</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"startButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>For an example of the ended event in use, see our <a href=\"https://mdn.github.io/webaudio-examples/audio-buffer/\" class=\"external\" rel=\" noopener\">audio-buffer example on GitHub</a>.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-audioscheduledsourcenode-onended","title":"Web Audio API"}],"query":"api.AudioScheduledSourceNode.ended_event"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.AudioScheduledSourceNode.ended_event","dataURL":"/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event/bcd.json"}},{"type":"prose","value":{"id":"related_events","title":"Related events","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/ScriptProcessorNode/audioprocess_event\">audioprocess</a></li>\n  <li><a href=\"/en-US/docs/Web/API/OfflineAudioContext/complete_event\">complete</a></li>\n</ul>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/HTMLAudioElement\"><code>HTMLAudioElement</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a></li>\n  <li><a href=\"/en-US/docs/Web/HTML/Element/audio\"><code>&lt;audio&gt;</code></a></li>\n  <li><a href=\"/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a></li>\n  <li>The HTMLMediaElement <a href=\"/en-US/docs/Web/API/HTMLMediaElement/ended_event\" title=\"ended\"><code>ended</code></a> event</li>\n  <li>The MediaStreamTrack <a href=\"/en-US/docs/Web/API/MediaStreamTrack/ended_event\" title=\"ended\"><code>ended</code></a> event</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Event type","id":"event_type"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"Related events","id":"related_events"},{"text":"See also","id":"see_also"}],"summary":"The ended event of the AudioScheduledSourceNode interface is fired when the source node has stopped playing.","popularity":0.0004,"modified":"2022-09-15T18:16:38.000Z","other_translations":[{"title":"AudioBufferSourceNode.onended","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/audioscheduledsourcenode/ended_event","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/audioscheduledsourcenode/ended_event/index.md","last_commit_url":"https://github.com/mdn/content/commit/418f9cf461de0c7845665c0c677ad0667740f52a","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/AudioScheduledSourceNode","title":"AudioScheduledSourceNode"},{"uri":"/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event","title":"AudioScheduledSourceNode: ended event"}],"pageTitle":"AudioScheduledSourceNode: ended event - Web APIs | MDN","noIndexing":false}}