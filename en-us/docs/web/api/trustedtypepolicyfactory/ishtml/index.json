{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"TrustedTypePolicyFactory.isHTML()","mdn_url":"/en-US/docs/Web/API/TrustedTypePolicyFactory/isHTML","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>isHTML()</code></strong> method of the <a href=\"/en-US/docs/Web/API/TrustedTypePolicyFactory\"><code>TrustedTypePolicyFactory</code></a> interface returns true if it is passed a valid <a href=\"/en-US/docs/Web/API/TrustedHTML\"><code>TrustedHTML</code></a> object.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> The purpose of the functions <code>isHTML()</code>, <a href=\"/en-US/docs/Web/API/TrustedTypePolicyFactory/isScript\" title=\"isScript()\"><code>isScript()</code></a>, and <a href=\"/en-US/docs/Web/API/TrustedTypePolicyFactory/isScriptURL\" title=\"isScriptURL()\"><code>isScriptURL()</code></a> is to check if the object is a valid TrustedType object, created by a configured policy.</p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">isHTML(value)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"value\"><code>value</code></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/API/TrustedHTML\"><code>TrustedHTML</code></a> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>boolean</code></a> that is true if the object is a valid <a href=\"/en-US/docs/Web/API/TrustedHTML\"><code>TrustedHTML</code></a> object.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In the below example the constant <code>html</code> was created by a policy, and therefore <code>isHTML()</code> returns true. The second example is an attempt to fake an object, and the third is a string. Both of these will return false when passed to <code>isHTML()</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> policy<span class=\"token punctuation\">.</span><span class=\"token function\">createHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;div&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>trustedTypes<span class=\"token punctuation\">.</span><span class=\"token function\">isHTML</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true;</span>\n\n<span class=\"token keyword\">const</span> fake <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TrustedHTML</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>trustedTypes<span class=\"token punctuation\">.</span><span class=\"token function\">isHTML</span><span class=\"token punctuation\">(</span>fake<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>trustedTypes<span class=\"token punctuation\">.</span><span class=\"token function\">isHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;div&gt;plain string&lt;/div&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webappsec-trusted-types/dist/spec/#dom-trustedtypepolicyfactory-ishtml","title":"Trusted Types"}],"query":"api.TrustedTypePolicyFactory.isHTML"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.TrustedTypePolicyFactory.isHTML","dataURL":"/en-US/docs/Web/API/TrustedTypePolicyFactory/isHTML/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The isHTML() method of the TrustedTypePolicyFactory interface returns true if it is passed a valid TrustedHTML object.","popularity":0,"modified":"2022-09-13T06:39:07.000Z","source":{"folder":"en-us/web/api/trustedtypepolicyfactory/ishtml","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/trustedtypepolicyfactory/ishtml/index.md","last_commit_url":"https://github.com/mdn/content/commit/b9bcca1e96839aa9cddea3263196e0cf4656d387","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/TrustedTypePolicyFactory","title":"TrustedTypePolicyFactory"},{"uri":"/en-US/docs/Web/API/TrustedTypePolicyFactory/isHTML","title":"TrustedTypePolicyFactory.isHTML()"}],"pageTitle":"TrustedTypePolicyFactory.isHTML() - Web APIs | MDN","noIndexing":false}}