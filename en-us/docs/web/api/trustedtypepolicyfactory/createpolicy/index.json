{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"TrustedTypePolicyFactory.createPolicy()","mdn_url":"/en-US/docs/Web/API/TrustedTypePolicyFactory/createPolicy","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>createPolicy()</code></strong> method of the <a href=\"/en-US/docs/Web/API/TrustedTypePolicyFactory\"><code>TrustedTypePolicyFactory</code></a> interface creates a <a href=\"/en-US/docs/Web/API/TrustedTypePolicy\"><code>TrustedTypePolicy</code></a> object that implements the rules passed as <code>policyOptions</code>.</p>"}},{"type":"prose","value":{"id":"the_default_policy","title":"The default policy","isH3":true,"content":"<p>In Chrome a policy with a name of \"default\" creates a special policy that will be used if a string (rather than a Trusted Type object) is passed to an injection sink. This can be used in a transitional phase while moving from an application that inserted strings into injection sinks.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> The above behavior is not yet settled in the specification and may change in future.</p>\n</div>\n<div class=\"notecard warning\" id=\"sect2\">\n  <p><strong>Warning:</strong> A lax default policy could defeat the purpose of using Trusted Types, and therefore should be defined with strict rules to ensure it cannot be used to run dangerous code.</p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">createPolicy(policyName, policyOptions)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"policyname\"><code>policyName</code></dt>\n  <dd>\n    <p>A string with the name of the policy.</p>\n  </dd>\n  <dt id=\"policyoptions\"><code>policyOptions</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>User-defined functions for converting strings into trusted values.</p>\n    <dl>\n      <dt id=\"createhtmlinputargs\"><code>createHTML(input[,args])</code></dt>\n      <dd>\n        <p>A callback function in the form of a string that contains code to run when creating a <a href=\"/en-US/docs/Web/API/TrustedHTML\"><code>TrustedHTML</code></a> object.</p>\n      </dd>\n      <dt id=\"createscriptinputargs\"><code>createScript(input[,args])</code></dt>\n      <dd>\n        <p>A callback function in the form of a string that contains code to run when creating a <a href=\"/en-US/docs/Web/API/TrustedScript\"><code>TrustedScript</code></a> object.</p>\n      </dd>\n      <dt id=\"createscripturlinputargs\"><code>createScriptURL(input[,args])</code></dt>\n      <dd>\n        <p>A callback function in the form of a string that contains code to run when creating a <a href=\"/en-US/docs/Web/API/TrustedScriptURL\"><code>TrustedScriptURL</code></a> object.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/API/TrustedTypePolicy\"><code>TrustedTypePolicy</code></a> object.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>Thrown if policy names are restricted by the <a href=\"/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/trusted-types\">Content Security Policy <code>trusted-types</code> directive</a> and this name is not on the allowlist.</p>\n  </dd>\n  <dt id=\"typeerror_2\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>Thrown if the name is a duplicate and the <a href=\"/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/trusted-types\">Content Security Policy trusted-types directive</a> is not using <code>allow-duplicates</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The below code creates a policy with the name <code>\"myEscapePolicy\"</code> with a function defined for <code>createHTML()</code> which sanitizes HTML.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> escapeHTMLPolicy <span class=\"token operator\">=</span> trustedTypes<span class=\"token punctuation\">.</span><span class=\"token function\">createPolicy</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myEscapePolicy\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">createHTML</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&gt;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"creating_a_default_policy","title":"Creating a default policy","isH3":true,"content":"<p>On a site where Trusted Types are enforced via a Content Security Policy with the <a href=\"/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/require-trusted-types-for\"><code>require-trusted-types-for</code></a> directive set to <code>script</code>, any injection script that accepts a script expects a Trusted Type object. In the case that a string is inserted instead, the following default policy will be used.</p>\n<p>The policy logs a message to the console to remind the developer to refactor this part of the application to use a Trusted Type object. It also appends details of the use of the default policy, type, and injection sink to the returned value.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>trustedTypes<span class=\"token punctuation\">.</span><span class=\"token function\">createPolicy</span><span class=\"token punctuation\">(</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">createScriptURL</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> sink</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please refactor.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>s<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?default-policy-used&amp;type=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;sink=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>sink<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webappsec-trusted-types/dist/spec/#dom-trustedtypepolicyfactory-createpolicy","title":"Trusted Types"}],"query":"api.TrustedTypePolicyFactory.createPolicy"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.TrustedTypePolicyFactory.createPolicy","dataURL":"/en-US/docs/Web/API/TrustedTypePolicyFactory/createPolicy/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The createPolicy() method of the TrustedTypePolicyFactory interface creates a TrustedTypePolicy object that implements the rules passed as policyOptions.","popularity":0,"modified":"2022-09-22T04:01:17.000Z","source":{"folder":"en-us/web/api/trustedtypepolicyfactory/createpolicy","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/trustedtypepolicyfactory/createpolicy/index.md","last_commit_url":"https://github.com/mdn/content/commit/c76f1b0e038ea426753929f0e02c7683ec5d52a0","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/TrustedTypePolicyFactory","title":"TrustedTypePolicyFactory"},{"uri":"/en-US/docs/Web/API/TrustedTypePolicyFactory/createPolicy","title":"TrustedTypePolicyFactory.createPolicy()"}],"pageTitle":"TrustedTypePolicyFactory.createPolicy() - Web APIs | MDN","noIndexing":false}}