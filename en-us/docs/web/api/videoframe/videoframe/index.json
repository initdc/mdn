{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"VideoFrame()","mdn_url":"/en-US/docs/Web/API/VideoFrame/VideoFrame","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>VideoFrame()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/codedHeight\"><code>codedHeight</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/codedRect\"><code>codedRect</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/codedWidth\"><code>codedWidth</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/colorSpace\"><code>colorSpace</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/displayHeight\"><code>displayHeight</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/displayWidth\"><code>displayWidth</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/duration\"><code>duration</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/format\"><code>format</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/timestamp\"><code>timestamp</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/visibleRect\"><code>visibleRect</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/allocationSize\"><code>allocationSize()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/clone\"><code>clone()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/close\"><code>close()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/VideoFrame/copyTo\"><code>copyTo()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>VideoFrame()</code></strong> constructor creates a new <a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a> object representing a frame of a video.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new VideoFrame(image)\nnew VideoFrame(image, options)\nnew VideoFrame(data, options)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>The first type of constructor (see above) creates a new <a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a> from an image. Its parameters are:</p>\n<dl>\n  <dt id=\"image\"><code>image</code></dt>\n  <dd>\n    <p>\n      An image containing the image data for the new <code>VideoFrame</code>. It can be one of the following objects:\n      an <a href=\"/en-US/docs/Web/API/SVGImageElement\"><code>SVGImageElement</code></a>,\n      an <a href=\"/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>,\n      an <a href=\"/en-US/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a>,\n      an <a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>,\n      an <a href=\"/en-US/docs/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a>,\n      or another <a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a>.\n    </p>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object containing the following:</p>\n    <dl>\n      <dt id=\"duration\"><code>duration</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An integer representing the duration of the frame in microseconds.</p>\n      </dd>\n      <dt id=\"timestamp\"><code>timestamp</code></dt>\n      <dd>\n        <p>An integer representing the timestamp of the frame in microseconds.</p>\n      </dd>\n      <dt id=\"alpha\"><code>alpha</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A string, describing how the user agent should behave when dealing with alpha channels. The default value is \"keep\".</p>\n        <ul>\n          <li><code>\"keep\"</code>: Indicates that the user agent should preserve alpha channel data.</li>\n          <li><code>\"discard\"</code>: Indicates that the user agent should ignore or remove alpha channel data.</li>\n        </ul>\n      </dd>\n      <dt id=\"visiblerect\"><code>visibleRect</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An object representing the visible rectangle of the <code>VideoFrame</code>, containing the following:</p>\n        <dl>\n          <dt id=\"x\"><code>x</code></dt>\n          <dd>\n            <p>The x-coordinate.</p>\n          </dd>\n          <dt id=\"y\"><code>y</code></dt>\n          <dd>\n            <p>The y-coordinate.</p>\n          </dd>\n          <dt id=\"width\"><code>width</code></dt>\n          <dd>\n            <p>The width of the frame.</p>\n          </dd>\n          <dt id=\"height\"><code>height</code></dt>\n          <dd>\n            <p>The height of the frame.</p>\n          </dd>\n        </dl>\n      </dd>\n      <dt id=\"displaywidth\"><code>displayWidth</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>The width of the <code>VideoFrame</code> when displayed after applying aspect-ratio adjustments.</p>\n      </dd>\n      <dt id=\"displayheight\"><code>displayHeight</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>The height of the <code>VideoFrame</code> when displayed after applying aspect-ratio adjustments.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>\n<p>The second type of constructor (see above) creates a new <a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a> from an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>. Its parameters are:</p>\n<dl>\n  <dt id=\"data\"><code>data</code></dt>\n  <dd>\n    <p>An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> containing the data for the new <code>VideoFrame</code>.</p>\n  </dd>\n  <dt id=\"options_2\"><code>options</code></dt>\n  <dd>\n    <p>An object containing the following:</p>\n    <dl>\n      <dt id=\"format\"><code>format</code></dt>\n      <dd>\n        <p>A string representing the video pixel format. One of the following strings, which are fully described on the page for the <a href=\"/en-US/docs/Web/API/VideoFrame/format\" title=\"format\"><code>format</code></a> property:</p>\n        <ul>\n          <li><code>\"I420\"</code></li>\n          <li><code>\"I420A\"</code></li>\n          <li><code>\"I422\"</code></li>\n          <li><code>\"I444\"</code></li>\n          <li><code>\"NV12\"</code></li>\n          <li><code>\"RGBA\"</code></li>\n          <li><code>\"RGBX\"</code></li>\n          <li><code>\"BGRA\"</code></li>\n          <li><code>\"BGRX\"</code></li>\n        </ul>\n      </dd>\n      <dt id=\"codedwidth\"><code>codedWidth</code></dt>\n      <dd>\n        <p>Width of the <code>VideoFrame</code> in pixels, potentially including non-visible padding, and prior to considering potential ratio adjustments.</p>\n      </dd>\n      <dt id=\"codedheight\"><code>codedHeight</code></dt>\n      <dd>\n        <p>Height of the <code>VideoFrame</code> in pixels, potentially including non-visible padding, and prior to considering potential ratio adjustments.</p>\n      </dd>\n      <dt id=\"timestamp_2\"><code>timestamp</code></dt>\n      <dd>\n        <p>An integer representing the timestamp of the frame in microseconds.</p>\n      </dd>\n      <dt id=\"duration_2\"><code>duration</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An integer representing the duration of the frame in microseconds.</p>\n      </dd>\n      <dt id=\"layout\"><code>layout</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A list containing the following values for each plane in the <code>VideoFrame</code>:</p>\n        <dl>\n          <dt id=\"offset\"><code>offset</code></dt>\n          <dd>\n            <p>An integer representing the offset in bytes where the given plane begins.</p>\n          </dd>\n          <dt id=\"stride\"><code>stride</code></dt>\n          <dd>\n            <p>\n              An integer representing the number of bytes, including padding, used by each row of the plane.\n              Planes may not overlap. If no <code>layout</code> is specified, the planes will be tightly packed.\n            </p>\n          </dd>\n        </dl>\n      </dd>\n      <dt id=\"visiblerect_2\"><code>visibleRect</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An object representing the visible rectangle of the <code>VideoFrame</code>, containing the following:</p>\n        <dl>\n          <dt id=\"x_2\"><code>x</code></dt>\n          <dd>\n            <p>The x-coordinate.</p>\n          </dd>\n          <dt id=\"y_2\"><code>y</code></dt>\n          <dd>\n            <p>The y-coordinate.</p>\n          </dd>\n          <dt id=\"width_2\"><code>width</code></dt>\n          <dd>\n            <p>The width of the frame.</p>\n          </dd>\n          <dt id=\"height_2\"><code>height</code></dt>\n          <dd>\n            <p>The height of the frame.</p>\n          </dd>\n        </dl>\n      </dd>\n      <dt id=\"displaywidth_2\"><code>displayWidth</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>The width of the <code>VideoFrame</code> when displayed after applying aspect ratio adjustments.</p>\n      </dd>\n      <dt id=\"displayheight_2\"><code>displayHeight</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>The height of the <code>VideoFrame</code> when displayed after applying aspect ratio adjustments.</p>\n      </dd>\n      <dt id=\"colorspace\"><code>colorSpace</code></dt>\n      <dd>\n        <p>An object representing the color space of the <code>VideoFrame</code>, containing the following:</p>\n        <dl>\n          <dt id=\"primaries\"><code>primaries</code></dt>\n          <dd>\n            <p>A string representing the video color primaries, described on the page for the <a href=\"/en-US/docs/Web/API/VideoColorSpace/primaries\"><code>VideoColorSpace.primaries</code></a> property.</p>\n          </dd>\n          <dt id=\"transfer\"><code>transfer</code></dt>\n          <dd>\n            <p>A string representing the video color transfer function, described on the page for the <a href=\"/en-US/docs/Web/API/VideoColorSpace/transfer\"><code>VideoColorSpace.transfer</code></a> property.</p>\n          </dd>\n          <dt id=\"matrix\"><code>matrix</code></dt>\n          <dd>\n            <p>A string representing the video color matrix, described on the page for the <a href=\"/en-US/docs/Web/API/VideoColorSpace/matrix\"><code>VideoColorSpace.matrix</code></a> property.</p>\n          </dd>\n          <dt id=\"fullrange\"><code>fullRange</code></dt>\n          <dd>\n            <p>A Boolean. If <code>true</code>, indicates that full-range color values are used.</p>\n          </dd>\n        </dl>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following examples are from the article <a href=\"https://web.dev/webcodecs/\" class=\"external\" rel=\" noopener\">Video processing with WebCodecs</a>. In this first example, a <code>VideoFrame</code> is created from a canvas.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> cnv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// draw something on the canvas</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token keyword\">let</span> frame_from_canvas <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VideoFrame</span><span class=\"token punctuation\">(</span>cnv<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">timestamp</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>In the following example a <code>VideoFrame</code> is created from a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>TypedArray</code></a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> pixelSize <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> init <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">timestamp</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">codedWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">320</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">codedHeight</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">'RGBA'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">.</span>codedWidth <span class=\"token operator\">*</span> init<span class=\"token punctuation\">.</span>codedHeight <span class=\"token operator\">*</span> pixelSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> init<span class=\"token punctuation\">.</span>codedWidth<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> init<span class=\"token punctuation\">.</span>codedHeight<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> offset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">*</span> init<span class=\"token punctuation\">.</span>codedWidth <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pixelSize<span class=\"token punctuation\">;</span>\n    data<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// Red</span>\n    data<span class=\"token punctuation\">[</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Green</span>\n    data<span class=\"token punctuation\">[</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xD4</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Blue</span>\n    data<span class=\"token punctuation\">[</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x0FF</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Alpha</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> frame <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VideoFrame</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webcodecs/#dom-videoframe-videoframe","title":"WebCodecs"}],"query":"api.VideoFrame.VideoFrame"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.VideoFrame.VideoFrame","dataURL":"/en-US/docs/Web/API/VideoFrame/VideoFrame/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The VideoFrame() constructor creates a new VideoFrame object representing a frame of a video.","popularity":0.0003,"modified":"2022-09-13T13:36:15.000Z","source":{"folder":"en-us/web/api/videoframe/videoframe","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/videoframe/videoframe/index.md","last_commit_url":"https://github.com/mdn/content/commit/5c8416b1356e1b2b73d75c2d7b2dcae621cd4142","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/VideoFrame","title":"VideoFrame"},{"uri":"/en-US/docs/Web/API/VideoFrame/VideoFrame","title":"VideoFrame()"}],"pageTitle":"VideoFrame() - Web APIs | MDN","noIndexing":false}}