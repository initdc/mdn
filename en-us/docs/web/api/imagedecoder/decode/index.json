{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ImageDecoder.decode()","mdn_url":"/en-US/docs/Web/API/ImageDecoder/decode","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebCodecs_API\">WebCodecs API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/ImageDecoder\"><code>ImageDecoder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/ImageDecoder\"><code>ImageDecoder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/complete\"><code>complete</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/completed\"><code>completed</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/tracks\"><code>tracks</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/close\"><code>close()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>decode()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/isTypeSupported\"><code>isTypeSupported()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/reset\"><code>reset()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebCodecs API</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioData\"><code>AudioData</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDecoder\"><code>AudioDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioEncoder\"><code>AudioEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/EncodedAudioChunk\"><code>EncodedAudioChunk</code></a></li><li><a href=\"/en-US/docs/Web/API/EncodedVideoChunk\"><code>EncodedVideoChunk</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageTrack\"><code>ImageTrack</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageTrackList\"><code>ImageTrackList</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoColorSpace\"><code>VideoColorSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoDecoder\"><code>VideoDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoEncoder\"><code>VideoEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>decode()</code></strong> method of the <a href=\"/en-US/docs/Web/API/ImageDecoder\"><code>ImageDecoder</code></a> interface enqueues a control message to decode the frame of an image.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">decode()\ndecode(options)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object containing the following members:</p>\n    <dl>\n      <dt id=\"frameindex\"><code>frameIndex</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An integer representing the index of the frame to decode. Defaults to <code>0</code> (the first frame).</p>\n      </dd>\n      <dt id=\"completeframesonly\"><code>completeFramesOnly</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>boolean</code></a> defaulting to <code>true</code>. When <code>false</code> indicates that for progressive images the decoder may output an image with reduced detail. When <code>false</code>, the promise returned by <code>decode()</code> will resolve exactly once for each new level of detail.</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with an object containing the following members:</p>\n<dl>\n  <dt id=\"image\"><code>image</code></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a> containing the decoded image.</p>\n  </dd>\n  <dt id=\"complete\"><code>complete</code></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>boolean</code></a>, if <code>true</code> indicates that <code>image</code> contains the final full-detail output.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>If an error occurs, the promise will resolve with following exception:</p>\n<dl>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Returned if any of the following conditions apply:</p>\n    <ul>\n      <li><code>close</code> is true, meaning <a href=\"/en-US/docs/Web/API/ImageDecoder/close\" title=\"close()\"><code>close()</code></a> has already been called.</li>\n      <li>The requested frame does not exist.</li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"synchronous_decoding_of_a_completed_image_frame","title":"Synchronous decoding of a completed image frame","isH3":true,"content":"<p>The following example decodes the second frame (at index <code>1</code>) and prints the resulting <a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a> to the console.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> imageDecoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">frameIndex</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"partial_decoding_of_a_progressive_image_frame","title":"Partial decoding of a progressive image frame","isH3":true,"content":"<p>The following example decodes the first frame repeatedly until its complete:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> complete <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>complete<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// The promise returned by `decode()` will only resolve when a new</span>\n  <span class=\"token comment\">// level of detail is available or the frame is complete. I.e.,</span>\n  <span class=\"token comment\">// calling `decode()` in a loop like this is won't needlessly spin.</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> imageDecode<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">completeFramesOnly</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Do something with `result.image`.</span>\n\n  complete <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>complete<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webcodecs/#dom-imagedecoder-decode","title":"WebCodecs"}],"query":"api.ImageDecoder.decode"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ImageDecoder.decode","dataURL":"/en-US/docs/Web/API/ImageDecoder/decode/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The decode() method of the ImageDecoder interface enqueues a control message to decode the frame of an image.","popularity":0,"modified":"2022-09-13T05:54:54.000Z","source":{"folder":"en-us/web/api/imagedecoder/decode","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/imagedecoder/decode/index.md","last_commit_url":"https://github.com/mdn/content/commit/b7556b71e1fc3e89057671b372871e9f33d3f0b8","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ImageDecoder","title":"ImageDecoder"},{"uri":"/en-US/docs/Web/API/ImageDecoder/decode","title":"ImageDecoder.decode()"}],"pageTitle":"ImageDecoder.decode() - Web APIs | MDN","noIndexing":false}}