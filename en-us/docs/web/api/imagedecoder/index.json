{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ImageDecoder","mdn_url":"/en-US/docs/Web/API/ImageDecoder","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebCodecs_API\">WebCodecs API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/ImageDecoder\"><code>ImageDecoder</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/ImageDecoder\"><code>ImageDecoder()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/complete\"><code>complete</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/completed\"><code>completed</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/tracks\"><code>tracks</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/close\"><code>close()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/decode\"><code>decode()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/isTypeSupported\"><code>isTypeSupported()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ImageDecoder/reset\"><code>reset()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebCodecs API</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioData\"><code>AudioData</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDecoder\"><code>AudioDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioEncoder\"><code>AudioEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/EncodedAudioChunk\"><code>EncodedAudioChunk</code></a></li><li><a href=\"/en-US/docs/Web/API/EncodedVideoChunk\"><code>EncodedVideoChunk</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageTrack\"><code>ImageTrack</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageTrackList\"><code>ImageTrackList</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoColorSpace\"><code>VideoColorSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoDecoder\"><code>VideoDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoEncoder\"><code>VideoEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/VideoFrame\"><code>VideoFrame</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>ImageDecoder</code></strong> interface of the <a href=\"/en-US/docs/Web/API/WebCodecs_API\">WebCodecs API</a> provides a way to unpack and decode encoded image data.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"imagedecoder\"><a href=\"/en-US/docs/Web/API/ImageDecoder/ImageDecoder\" title=\"ImageDecoder()\"><code>ImageDecoder()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Creates a new <code>ImageDecoder</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"imagedecoder.complete\"><a href=\"/en-US/docs/Web/API/ImageDecoder/complete\"><code>ImageDecoder.complete</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Returns a boolean value indicating whether encoded data is completely buffered.</p>\n  </dd>\n  <dt id=\"imagedecoder.completed\"><a href=\"/en-US/docs/Web/API/ImageDecoder/completed\"><code>ImageDecoder.completed</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves once <code>complete</code> is true.</p>\n  </dd>\n  <dt id=\"imagedecoder.tracks\"><a href=\"/en-US/docs/Web/API/ImageDecoder/tracks\"><code>ImageDecoder.tracks</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Returns an <a href=\"/en-US/docs/Web/API/ImageTrackList\"><code>ImageTrackList</code></a> object listing the available tracks and providing a method for selecting a track to decode.</p>\n  </dd>\n  <dt id=\"imagedecoder.type\"><a href=\"/en-US/docs/Web/API/ImageDecoder/type\"><code>ImageDecoder.type</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Returns a string reflecting the <a href=\"/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\">MIME type</a> configured during construction.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"imagedecoder.close\"><a href=\"/en-US/docs/Web/API/ImageDecoder/close\"><code>ImageDecoder.close()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Ends all pending work and releases system resources.</p>\n  </dd>\n  <dt id=\"imagedecoder.decode\"><a href=\"/en-US/docs/Web/API/ImageDecoder/decode\"><code>ImageDecoder.decode()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Enqueues a control message to decode the frame of an image.</p>\n  </dd>\n  <dt id=\"imagedecoder.reset\"><a href=\"/en-US/docs/Web/API/ImageDecoder/reset\"><code>ImageDecoder.reset()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Aborts all pending <code>decode()</code> operations.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"static_methods","title":"Static methods","isH3":false,"content":"<dl>\n  <dt id=\"imagedecoder.istypesupported\"><a href=\"/en-US/docs/Web/API/ImageDecoder/isTypeSupported\"><code>ImageDecoder.isTypeSupported()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Indicates if the provided <a href=\"/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\">MIME type</a> is supported for unpacking and decoding.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Given a <a href=\"/en-US/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>the following code decodes and renders an animated image to that canvas:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> imageDecoder <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> imageIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">renderImage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> canvasContext <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  canvasContext<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> track <span class=\"token operator\">=</span> imageDecoder<span class=\"token punctuation\">.</span>tracks<span class=\"token punctuation\">.</span>selectedTrack<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// We check complete here since `frameCount` won't be stable until all</span>\n  <span class=\"token comment\">// data has been received. This may cause us to receive a RangeError</span>\n  <span class=\"token comment\">// during the decode() call below which needs to be handled.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imageDecoder<span class=\"token punctuation\">.</span>complete<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">.</span>frameCount <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imageIndex <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&gt;=</span> track<span class=\"token punctuation\">.</span>frameCount<span class=\"token punctuation\">)</span>\n      imageIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Decode the next frame ahead of display so it's ready in time.</span>\n  imageDecoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">frameIndex</span><span class=\"token operator\">:</span> <span class=\"token operator\">++</span>imageIndex<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n          <span class=\"token punctuation\">(</span><span class=\"token parameter\">nextResult</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>\n              <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">renderImage</span><span class=\"token punctuation\">(</span>nextResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              result<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// We can end up requesting an imageIndex past the end since</span>\n        <span class=\"token comment\">// we're using a ReadableStream from fetch(), when this happens</span>\n        <span class=\"token comment\">// just wrap around.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">RangeError</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          imageIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          imageDecoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">frameIndex</span><span class=\"token operator\">:</span> imageIndex<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>renderImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">decodeImage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">imageByteStream</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  imageDecoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ImageDecoder</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> imageByteStream<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'image/gif'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  imageDecoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">frameIndex</span><span class=\"token operator\">:</span> imageIndex<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>renderImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fancy.gif'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">decodeImage</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webcodecs/#imagedecoder-interface","title":"WebCodecs"}],"query":"api.ImageDecoder"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ImageDecoder","dataURL":"/en-US/docs/Web/API/ImageDecoder/bcd.json"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Static methods","id":"static_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The ImageDecoder interface of the WebCodecs API provides a way to unpack and decode encoded image data.","popularity":0.0003,"modified":"2022-09-09T05:14:42.000Z","source":{"folder":"en-us/web/api/imagedecoder","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/imagedecoder/index.md","last_commit_url":"https://github.com/mdn/content/commit/277e5969c63b97cfb55ab4a0e612e8040810f49b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ImageDecoder","title":"ImageDecoder"}],"pageTitle":"ImageDecoder - Web APIs | MDN","noIndexing":false}}