{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"LargestContentfulPaint","mdn_url":"/en-US/docs/Web/API/LargestContentfulPaint","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Largest_Contentful_Paint_API\">Largest Contentful Paint API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/LargestContentfulPaint\"><code>LargestContentfulPaint</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/element\"><code>element</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/id\"><code>id</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/loadTime\"><code>loadTime</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/renderTime\"><code>renderTime</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/size\"><code>size</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/url\"><code>url</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/toJSON\"><code>toJSON()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <code>LargestContentfulPaint</code> interface of the <a href=\"/en-US/docs/Web/API/Largest_Contentful_Paint_API\"><code>Largest Contentful Paint API</code></a> provides details about the largest image or text paint before user input on a web page. The timing of this paint is a good heuristic for when the main page content is available during load.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/PerformanceEntry\">\n    <rect x=\"0\" y=\"0\" width=\"128\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"64\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      PerformanceEntry\n    </text>\n  </a>\n  <line x1=\"128\" y1=\"14\" x2=\"158\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"128,14 138,9 138,19 128,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/LargestContentfulPaint\" aria-current=\"page\">\n    <rect x=\"158\" y=\"0\" width=\"176\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"246\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      LargestContentfulPaint\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em>This interface also inherits properties from <a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a>.</em></p>\n<dl>\n  <dt id=\"largestcontentfulpaint.element\"><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/element\"><code>LargestContentfulPaint.element</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>The element that is the current largest contentful paint.</p>\n  </dd>\n  <dt id=\"largestcontentfulpaint.rendertime\"><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/renderTime\"><code>LargestContentfulPaint.renderTime</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>The time the element was rendered to the screen. May not be available if the element is a cross-origin image loaded without the <code>Timing-Allow-Origin</code> header.</p>\n  </dd>\n  <dt id=\"largestcontentfulpaint.loadtime\"><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/loadTime\"><code>LargestContentfulPaint.loadTime</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>The time the element was loaded.</p>\n  </dd>\n  <dt id=\"largestcontentfulpaint.size\"><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/size\"><code>LargestContentfulPaint.size</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>The intrinsic size of the element returned as the area (width * height).</p>\n  </dd>\n  <dt id=\"largestcontentfulpaint.id\"><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/id\"><code>LargestContentfulPaint.id</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>The id of the element. This property returns an empty string when there is no id.</p>\n  </dd>\n  <dt id=\"largestcontentfulpaint.url\"><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/url\"><code>LargestContentfulPaint.url</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>If the element is an image, the request url of the image.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>This interface also inherits methods from <a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a>.</em></p>\n<dl>\n  <dt id=\"largestcontentfulpaint.tojson\"><a href=\"/en-US/docs/Web/API/LargestContentfulPaint/toJSON\"><code>LargestContentfulPaint.toJSON()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Returns the above properties as JSON.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following example shows how to create a <a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> that listens for <code>largest-contentful-paint</code> entries and logs the LCP value to the console.</p>\n<p>This example also demonstrates how to include buffered entries (those that ocurred before <code>observer()</code> was called), which is done by setting the <code>buffered</code> option to <code>true</code>.</p>\n<p>Note that in this example data is only sent to the server when the user leaves the tab.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Catch errors since some browsers throw when using the new `type` option.</span>\n<span class=\"token comment\">// https://bugs.webkit.org/show_bug.cgi?id=209216</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> lcp<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> po <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entryList</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> entries <span class=\"token operator\">=</span> entryList<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> lastEntry <span class=\"token operator\">=</span> entries<span class=\"token punctuation\">[</span>entries<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update `lcp` to the latest value, using `renderTime` if it's available,</span>\n    <span class=\"token comment\">// otherwise using `loadTime`. (Note: `renderTime` may not be available on</span>\n    <span class=\"token comment\">// image elements loaded cross-origin without the `Timing-Allow-Origin` header.)</span>\n    lcp <span class=\"token operator\">=</span> lastEntry<span class=\"token punctuation\">.</span>renderTime <span class=\"token operator\">||</span> lastEntry<span class=\"token punctuation\">.</span>loadTime<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  po<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'largest-contentful-paint'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">buffered</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Send data to the server.</span>\n  <span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'visibilitychange'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lcp <span class=\"token operator\">&amp;&amp;</span> document<span class=\"token punctuation\">.</span>visibilityState <span class=\"token operator\">===</span> <span class=\"token string\">'hidden'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'LCP:'</span><span class=\"token punctuation\">,</span> lcp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'visibilitychange'</span><span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Do nothing if the browser doesn't support this API.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/largest-contentful-paint/#sec-largest-contentful-paint-interface","title":"Unknown specification"}],"query":"api.LargestContentfulPaint"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.LargestContentfulPaint","dataURL":"/en-US/docs/Web/API/LargestContentfulPaint/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://web.dev/lcp/\" class=\"external\" rel=\" noopener\">Largest Contentful Paint (LCP)</a></li>\n  <li><a href=\"https://web.dev/lighthouse-largest-contentful-paint/\" class=\"external\" rel=\" noopener\">LCP in Lighthouse</a></li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The LargestContentfulPaint interface of the Largest Contentful Paint API provides details about the largest image or text paint before user input on a web page. The timing of this paint is a good heuristic for when the main page content is available during load.","popularity":0.0004,"modified":"2022-09-09T05:14:42.000Z","source":{"folder":"en-us/web/api/largestcontentfulpaint","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/largestcontentfulpaint/index.md","last_commit_url":"https://github.com/mdn/content/commit/277e5969c63b97cfb55ab4a0e612e8040810f49b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/LargestContentfulPaint","title":"LargestContentfulPaint"}],"pageTitle":"LargestContentfulPaint - Web APIs | MDN","noIndexing":false}}