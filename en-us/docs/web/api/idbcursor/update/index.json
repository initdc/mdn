{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"IDBCursor.update()","mdn_url":"/en-US/docs/Web/API/IDBCursor/update","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBCursor/direction\"><code>direction</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/key\"><code>key</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/primaryKey\"><code>primaryKey</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/request\"><code>request</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/source\"><code>source</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBCursor/advance\"><code>advance()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/continue\"><code>continue()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/continuePrimaryKey\"><code>continuePrimaryKey()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/delete\"><code>delete()</code></a></li><li><em><code>update()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for IndexedDB</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>update()</code></strong> method of the <a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a>\n  interface returns an <a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread,\n  updates the value at the current position of the cursor in the object store. If the\n  cursor points to a record that has just been deleted, a new record is created.\n</p>\n<p>\n  Be aware that you can't call <code>update()</code> (or\n  <a href=\"/en-US/docs/Web/API/IDBCursor/delete\"><code>IDBCursor.delete()</code></a>) on cursors obtained from\n  <a href=\"/en-US/docs/Web/API/IDBIndex/openKeyCursor\"><code>IDBIndex.openKeyCursor()</code></a>. For such needs, you have to use\n  <a href=\"/en-US/docs/Web/API/IDBIndex/openCursor\"><code>IDBIndex.openCursor()</code></a> instead.\n</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">update(value)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"value\"><code>value</code></dt>\n  <dd>\n    <p>The new value to be stored at the current position.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  An <a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this\n  operation are fired.\n</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a> of one of the following types:</p>\n<dl>\n  <dt id=\"transactioninactiveerror\"><code>TransactionInactiveError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if this IDBCursor's transaction is inactive.</p>\n  </dd>\n  <dt id=\"readonlyerror\"><code>ReadOnlyError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the transaction mode is read-only.</p>\n  </dd>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the cursor was created using <a href=\"/en-US/docs/Web/API/IDBIndex/openKeyCursor\"><code>IDBindex.openKeyCursor</code></a>, is currently being iterated, or has iterated past its end.</p>\n  </dd>\n  <dt id=\"dataerror\"><code>DataError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      Thrown if the underlying object store uses in-line keys and the property in the value at the object store's key path does not match the key in this\n      cursor's position.\n    </p>\n  </dd>\n  <dt id=\"datacloneerror\"><code>DataCloneError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      Thrown if the data being stored could not be cloned by the internal structured\n      cloning algorithm.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In this simple fragment we create a transaction, retrieve an object store, then use a\n  cursor to iterate through all the records in the object store. If the\n  <code>albumTitle</code> of the current cursor is \"A farewell to kings\", we update year\n  the album was released using <code>const request = cursor.update();</code>.\n</p>\n<p>\n  Note that you cannot change primary keys using <code>cursor.update()</code>, hence us\n  not changing the album title; this would ruin the integrity of the data. In such a\n  situation, you would have to delete the record altogether and then add a new one using\n  <a href=\"/en-US/docs/Web/API/IDBObjectStore/add\"><code>IDBObjectStore.add</code></a>. Note also that you can't directly put\n  <code>cursor.value</code> into an update call, hence the below example using an\n  intermediary <code>updateData</code> variable.\n</p>\n<p>\n  The cursor does not require us to select the data based\n  on a key; we can just grab all of it. Also note that in each iteration of the loop,\n  you can grab data from the current record under the cursor object using <code>cursor.value.foo</code>. For a complete working example, see our <a href=\"https://github.com/mdn/dom-examples/tree/main/indexeddb-examples/idbcursor\" class=\"external\" rel=\" noopener\">IDBCursor example</a> (<a href=\"https://mdn.github.io/dom-examples/indexeddb-examples/idbcursor/\" class=\"external\" rel=\" noopener\">View the example live</a>).\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">updateResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  list<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'rushAlbumList'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'readwrite'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rushAlbumList'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">openCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> cursor <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>albumTitle <span class=\"token operator\">===</span> <span class=\"token string\">'A farewell to kings'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> updateData <span class=\"token operator\">=</span> cursor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n\n        updateData<span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> <span class=\"token number\">2050</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> cursor<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>updateData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        request<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A better album year?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> listItem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      listItem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cursor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>albumTitle<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cursor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>year<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      list<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>listItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Entries displayed.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/IndexedDB/#ref-for-dom-idbcursor-update①","title":"Indexed Database API 3.0"}],"query":"api.IDBCursor.update"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IDBCursor.update","dataURL":"/en-US/docs/Web/API/IDBCursor/update/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Using IndexedDB</a></li>\n  <li>Starting transactions: <a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li>\n  <li>Using transactions: <a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li>\n  <li>Setting a range of keys: <a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li>\n  <li>Retrieving and making changes to your data: <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li>\n  <li>Using cursors: <a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li>\n  <li>Reference example: <a href=\"https://github.com/mdn/dom-examples/tree/main/to-do-notifications\" class=\"external\" rel=\" noopener\">To-do Notifications</a> (<a href=\"https://mdn.github.io/dom-examples/to-do-notifications/\" class=\"external\" rel=\" noopener\">View the example live</a>).</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The update() method of the IDBCursor\n  interface returns an IDBRequest object, and, in a separate thread,\n  updates the value at the current position of the cursor in the object store. If the\n  cursor points to a record that has just been deleted, a new record is created.","popularity":0.0002,"modified":"2022-09-30T09:50:26.000Z","source":{"folder":"en-us/web/api/idbcursor/update","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/idbcursor/update/index.md","last_commit_url":"https://github.com/mdn/content/commit/d42b609444efb915ab46117f59985d67dda21eb6","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/IDBCursor","title":"IDBCursor"},{"uri":"/en-US/docs/Web/API/IDBCursor/update","title":"IDBCursor.update()"}],"pageTitle":"IDBCursor.update() - Web APIs | MDN","noIndexing":false}}