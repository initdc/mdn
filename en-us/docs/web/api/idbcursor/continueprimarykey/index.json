{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"IDBCursor.continuePrimaryKey()","mdn_url":"/en-US/docs/Web/API/IDBCursor/continuePrimaryKey","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBCursor/direction\"><code>direction</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/key\"><code>key</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/primaryKey\"><code>primaryKey</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/request\"><code>request</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/source\"><code>source</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBCursor/advance\"><code>advance()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/continue\"><code>continue()</code></a></li><li><em><code>continuePrimaryKey()</code></em></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/delete\"><code>delete()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursor/update\"><code>update()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for IndexedDB</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>continuePrimaryKey()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a> interface advances the cursor to the item whose key\n  matches the key parameter as well as whose primary key matches the primary key\n  parameter.\n</p>\n<p>\n  A typical use case, is to resume the iteration where a previous cursor has been closed,\n  without having to compare the keys one by one.\n</p>\n<p>\n  Calling this method more than once before new cursor data has been loaded - for\n  example, calling <code>continuePrimaryKey()</code> twice from the same onsuccess handler\n  - results in an <code>InvalidStateError</code> being thrown on the second call because\n  the cursor's got value flag has been unset.\n</p>\n<p>\n  This method is only valid for cursors coming from an index. Using it for cursors coming\n  from an object store will throw an error.\n</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">continuePrimaryKey(key, primaryKey)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"key\"><code>key</code></dt>\n  <dd>\n    <p>The key to position the cursor at.</p>\n  </dd>\n  <dt id=\"primarykey\"><code>primaryKey</code></dt>\n  <dd>\n    <p>The primary key to position the cursor at.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a> of one of the following types:</p>\n<dl>\n  <dt id=\"transactioninactiveerror\"><code>TransactionInactiveError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if this IDBCursor's transaction is inactive.</p>\n  </dd>\n  <dt id=\"dataerror\"><code>DataError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the key parameter has any of the following conditions:</p>\n    <ul>\n      <li>The key is not a valid key.</li>\n      <li>The key is less than or equal to this cursor's position and the cursor's direction is <code>next</code> or <code>nextunique</code>.</li>\n      <li>The key is greater than or equal to this cursor's position and this cursor's direction is <code>prev</code> or <code>prevunique</code>.</li>\n    </ul>\n  </dd>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the cursor is currently being iterated or has iterated past its end.</p>\n  </dd>\n  <dt id=\"invalidaccesserror\"><code>InvalidAccessError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the cursor's direction is not <code>prev</code> or <code>next</code>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  here's how you can resume an iteration of all articles tagged with\n  <code>\"javascript\"</code> since your last visit:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> request <span class=\"token operator\">=</span> articleStore<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">openCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> unreadList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> cursor <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> lastPrimaryKey <span class=\"token operator\">=</span> <span class=\"token function\">getLastIteratedArticleId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastPrimaryKey <span class=\"token operator\">&gt;</span> cursor<span class=\"token punctuation\">.</span>primaryKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continuePrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"javascript\"</span><span class=\"token punctuation\">,</span> lastPrimaryKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// update lastIteratedArticleId</span>\n    <span class=\"token function\">setLastIteratedArticleId</span><span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">.</span>primaryKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// preload 5 articles into the unread list;</span>\n    unreadList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>count <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cursor<span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/IndexedDB/#ref-for-dom-idbcursor-continueprimarykey①","title":"Indexed Database API 3.0"}],"query":"api.IDBCursor.continuePrimaryKey"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IDBCursor.continuePrimaryKey","dataURL":"/en-US/docs/Web/API/IDBCursor/continuePrimaryKey/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Using IndexedDB</a></li>\n  <li>Starting transactions: <a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li>\n  <li>Using transactions: <a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li>\n  <li>Setting a range of keys: <a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li>\n  <li>Retrieving and making changes to your data: <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li>\n  <li>Using cursors: <a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li>\n  <li>Reference example: <a href=\"https://github.com/mdn/dom-examples/tree/main/to-do-notifications\" class=\"external\" rel=\" noopener\">To-do Notifications</a> (<a href=\"https://mdn.github.io/dom-examples/to-do-notifications/\" class=\"external\" rel=\" noopener\">View the example live</a>).</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The continuePrimaryKey() method of the\n  IDBCursor interface advances the cursor to the item whose key\n  matches the key parameter as well as whose primary key matches the primary key\n  parameter.","popularity":0,"modified":"2022-09-30T09:50:26.000Z","source":{"folder":"en-us/web/api/idbcursor/continueprimarykey","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/idbcursor/continueprimarykey/index.md","last_commit_url":"https://github.com/mdn/content/commit/d42b609444efb915ab46117f59985d67dda21eb6","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/IDBCursor","title":"IDBCursor"},{"uri":"/en-US/docs/Web/API/IDBCursor/continuePrimaryKey","title":"IDBCursor.continuePrimaryKey()"}],"pageTitle":"IDBCursor.continuePrimaryKey() - Web APIs | MDN","noIndexing":false}}