{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Web MIDI API","mdn_url":"/en-US/docs/Web/API/Web_MIDI_API","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_MIDI_API\">Web MIDI API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/MIDIInputMap\"><code>MIDIInputMap</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIOutputMap\"><code>MIDIOutputMap</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIAccess\"><code>MIDIAccess</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIPort\"><code>MIDIPort</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIInput\"><code>MIDIInput</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIOutput\"><code>MIDIOutput</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIMessageEvent\"><code>MIDIMessageEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIConnectionEvent\"><code>MIDIConnectionEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/requestMIDIAccess\"><code>Navigator.requestMIDIAccess()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The Web MIDI API connects to and interacts with Musical Instrument Digital Interface (MIDI) Devices.</p>\n<p>The interfaces deal with the practical aspects of sending and receiving MIDI messages. Therefore, the API can be used for musical and non-musical uses, with any MIDI device connected to your computer.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> In Firefox the Web MIDI API is an <em>add-on-gated feature</em>. This means your website or app needs a site permission add-on for users to download, install and be able to access this API's functionality. <a href=\"https://extensionworkshop.com/documentation/publish/site-permission-add-on/\" class=\"external\" rel=\" noopener\">Instructions on how to set up a site permission add-on can be found here</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<dl>\n  <dt id=\"midiinputmap\"><a href=\"/en-US/docs/Web/API/MIDIInputMap\"><code>MIDIInputMap</code></a></dt>\n  <dd>\n    <p>Represents all of the available MIDI input ports.</p>\n  </dd>\n  <dt id=\"midioutputmap\"><a href=\"/en-US/docs/Web/API/MIDIOutputMap\"><code>MIDIOutputMap</code></a></dt>\n  <dd>\n    <p>Represents all of the available MIDI output ports.</p>\n  </dd>\n  <dt id=\"midiaccess\"><a href=\"/en-US/docs/Web/API/MIDIAccess\"><code>MIDIAccess</code></a></dt>\n  <dd>\n    <p>Provides the methods to list input and output devices, and to access an individual device.</p>\n  </dd>\n  <dt id=\"midiport\"><a href=\"/en-US/docs/Web/API/MIDIPort\"><code>MIDIPort</code></a></dt>\n  <dd>\n    <p>Represents an individual MIDI port.</p>\n  </dd>\n  <dt id=\"midiinput\"><a href=\"/en-US/docs/Web/API/MIDIInput\"><code>MIDIInput</code></a></dt>\n  <dd>\n    <p>Provides a method for dealing with MIDI messages from an input port.</p>\n  </dd>\n  <dt id=\"midioutput\"><a href=\"/en-US/docs/Web/API/MIDIOutput\"><code>MIDIOutput</code></a></dt>\n  <dd>\n    <p>Queues messages to the linked MIDI port. Messages can be sent immediately or after a specified delay.</p>\n  </dd>\n  <dt id=\"midimessageevent\"><a href=\"/en-US/docs/Web/API/MIDIMessageEvent\"><code>MIDIMessageEvent</code></a></dt>\n  <dd>\n    <p>The event passed to <a href=\"/en-US/docs/Web/API/MIDIInput/midimessage_event\"><code>MIDIInput.midimessage_event</code></a>.</p>\n  </dd>\n  <dt id=\"midiconnectionevent\"><a href=\"/en-US/docs/Web/API/MIDIConnectionEvent\"><code>MIDIConnectionEvent</code></a></dt>\n  <dd>\n    <p>The event passed to the <a href=\"/en-US/docs/Web/API/MIDIAccess/statechange_event\"><code>MIDIAccess.statechange_event</code></a> and <a href=\"/en-US/docs/Web/API/MIDIPort/statechange_event\"><code>MIDIPort.statechange_event</code></a> events, when a port becomes available or unavailable.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"gaining_access_to_the_midi_port","title":"Gaining access to the MIDI port","isH3":true,"content":"<p>\n  The <a href=\"/en-US/docs/Web/API/Navigator/requestMIDIAccess\"><code>navigator.requestMIDIAccess()</code></a> method returns a promise that resolves to a <a href=\"/en-US/docs/Web/API/MIDIAccess\"><code>MIDIAccess</code></a> object, which can then be used to access a MIDI device.\n  The method must be called in a secure context.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> midi <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// global MIDIAccess object</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">onMIDISuccess</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">midiAccess</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MIDI ready!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  midi <span class=\"token operator\">=</span> midiAccess<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// store in the global (in real usage, would probably keep in an object instance)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onMIDIFailure</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Failed to get MIDI access - </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>msg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nnavigator<span class=\"token punctuation\">.</span><span class=\"token function\">requestMIDIAccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>onMIDISuccess<span class=\"token punctuation\">,</span> onMIDIFailure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"listing_inputs_and_outputs","title":"Listing inputs and outputs","isH3":true,"content":"<p>In this example the list of input and output ports are retrieved and printed to the console.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listInputsAndOutputs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">midiAccess</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> entry <span class=\"token keyword\">of</span> midiAccess<span class=\"token punctuation\">.</span>inputs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Input port [type:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>input<span class=\"token punctuation\">.</span>type<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">']</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> id:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>input<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> manufacturer:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>input<span class=\"token punctuation\">.</span>manufacturer<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> name:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>input<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> version:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>input<span class=\"token punctuation\">.</span>version<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> entry <span class=\"token keyword\">of</span> midiAccess<span class=\"token punctuation\">.</span>outputs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Output port [type:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>output<span class=\"token punctuation\">.</span>type<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'] id:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>output<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' manufacturer:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>output<span class=\"token punctuation\">.</span>manufacturer<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' name:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>output<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' version:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>output<span class=\"token punctuation\">.</span>version<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"handling_midi_input","title":"Handling MIDI Input","isH3":true,"content":"<p>This example prints incoming MIDI messages on a single port to the console.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">onMIDIMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">MIDI message received at timestamp </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>timeStamp<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> bytes]: </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> character <span class=\"token keyword\">of</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    str <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">0x</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>character<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">startLoggingMIDIInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">midiAccess<span class=\"token punctuation\">,</span> indexOfPort</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  midiAccess<span class=\"token punctuation\">.</span>inputs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>entry<span class=\"token punctuation\">.</span>onmidimessage <span class=\"token operator\">=</span> onMIDIMessage<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-midi-api/","title":"Web MIDI API"}],"query":"api.Navigator.requestMIDIAccess"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Navigator.requestMIDIAccess","dataURL":"/en-US/docs/Web/API/Web_MIDI_API/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://code.tutsplus.com/tutorials/introduction-to-web-midi--cms-25220\" class=\"external\" rel=\" noopener\">Introduction to Web MIDI</a></li>\n  <li><a href=\"https://www.keithmcmillen.com/blog/making-music-in-the-browser-web-midi-api/\" class=\"external\" rel=\" noopener\">Making Music in the Browser</a></li>\n</ul>"}}],"toc":[{"text":"Interfaces","id":"interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Web MIDI API connects to and interacts with Musical Instrument Digital Interface (MIDI) Devices.","popularity":0.0013,"modified":"2022-09-09T05:19:45.000Z","source":{"folder":"en-us/web/api/web_midi_api","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/web_midi_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/f7dae62645a2c735ed6f6ed63f664bf279fdfc4b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Web_MIDI_API","title":"Web MIDI API"}],"pageTitle":"Web MIDI API - Web APIs | MDN","noIndexing":false}}