{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaStreamTrackProcessor","mdn_url":"/en-US/docs/Web/API/MediaStreamTrackProcessor","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/MediaStreamTrackProcessor\"><code>MediaStreamTrackProcessor</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/API/MediaStreamTrackProcessor/MediaStreamTrackProcessor\"><code>MediaStreamTrackProcessor()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/MediaStreamTrackProcessor/readable\"><code>readable</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div><div class=\"notecard warning\" id=\"sect2\"><p><strong>Non-standard:</strong> This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p></div>\n<p>The <strong><code>MediaStreamTrackProcessor</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Insertable_Streams_for_MediaStreamTrack_API\"><code>Insertable Streams for MediaStreamTrack API</code></a> consumes a <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> object's source and generates a stream of media frames.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"mediastreamtrackprocessor\"><a href=\"/en-US/docs/Web/API/MediaStreamTrackProcessor/MediaStreamTrackProcessor\" title=\"MediaStreamTrackProcessor()\"><code>MediaStreamTrackProcessor()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>Creates a new <code>MediaStreamTrackProcessor</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"mediastreamtrackprocessor.readable\"><a href=\"/en-US/docs/Web/API/MediaStreamTrackProcessor/readable\"><code>MediaStreamTrackProcessor.readable</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following example is from the article <a href=\"https://web.dev/mediastreamtrack-insertable-media-processing/\" class=\"external\" rel=\" noopener\">Insertable streams for MediaStreamTrack</a>, and demonstrates a barcode scanner application, which transforms the stream accessed via <a href=\"/en-US/docs/Web/API/MediaStreamTrackProcessor/readable\"><code>MediaStreamTrackProcessor.readable</code></a> by highlighting the barcode.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> videoTrack <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> trackProcessor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaStreamTrackProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">track</span><span class=\"token operator\">:</span> videoTrack <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> trackGenerator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaStreamTrackGenerator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> <span class=\"token string\">'video'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> transformer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TransformStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">videoFrame<span class=\"token punctuation\">,</span> controller</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> barcodes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">detectBarcodes</span><span class=\"token punctuation\">(</span>videoFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> newFrame <span class=\"token operator\">=</span> <span class=\"token function\">highlightBarcodes</span><span class=\"token punctuation\">(</span>videoFrame<span class=\"token punctuation\">,</span> barcodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    videoFrame<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    controller<span class=\"token punctuation\">.</span><span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span>newFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ntrackProcessor<span class=\"token punctuation\">.</span>readable<span class=\"token punctuation\">.</span><span class=\"token function\">pipeThrough</span><span class=\"token punctuation\">(</span>transformer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipeTo</span><span class=\"token punctuation\">(</span>trackGenerator<span class=\"token punctuation\">.</span>writable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[],"query":"api.MediaStreamTrackProcessor"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaStreamTrackProcessor","dataURL":"/en-US/docs/Web/API/MediaStreamTrackProcessor/bcd.json"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Properties","id":"properties"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The MediaStreamTrackProcessor interface of the Insertable Streams for MediaStreamTrack API consumes a MediaStreamTrack object's source and generates a stream of media frames.","popularity":0.0005,"modified":"2022-09-09T05:17:24.000Z","source":{"folder":"en-us/web/api/mediastreamtrackprocessor","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/mediastreamtrackprocessor/index.md","last_commit_url":"https://github.com/mdn/content/commit/4b4638246aad5d39b9a2e5c572b179b4c39c0a84","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaStreamTrackProcessor","title":"MediaStreamTrackProcessor"}],"pageTitle":"MediaStreamTrackProcessor - Web APIs | MDN","noIndexing":false}}