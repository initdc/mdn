{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Multi-touch interaction","mdn_url":"/en-US/docs/Web/API/Pointer_events/Multi-touch_interaction","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Pointer_events\">Pointer events</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/API/Pointer_events/Using_Pointer_Events\">Using Pointer Events</a></li><li><a href=\"/en-US/docs/Web/API/Pointer_events/Multi-touch_interaction\">Multi-touch interaction</a></li><li><a href=\"/en-US/docs/Web/API/Pointer_events/Pinch_zoom_gestures\">Pinch zoom gestures</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/PointerEvent\"><code>PointerEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/maxTouchPoints\"><code>Navigator.maxTouchPoints</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Element/setPointerCapture\"><code>Element.setPointerCapture()</code></a></li><li><a href=\"/en-US/docs/Web/API/Element/releasePointerCapture\"><code>Element.releasePointerCapture()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLElement/gotpointercapture_event\"><code>HTMLElement</code>: <code>gotpointercapture</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/lostpointercapture_event\"><code>HTMLElement</code>: <code>lostpointercapture</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/pointercancel_event\"><code>HTMLElement</code>: <code>pointercancel</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/pointerdown_event\"><code>HTMLElement</code>: <code>pointerdown</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/pointerenter_event\"><code>HTMLElement</code>: <code>pointerenter</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/pointerleave_event\"><code>HTMLElement</code>: <code>pointerleave</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/pointermove_event\"><code>HTMLElement</code>: <code>pointermove</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/pointerout_event\"><code>HTMLElement</code>: <code>pointerout</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/pointerover_event\"><code>HTMLElement</code>: <code>pointerover</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement/pointerup_event\"><code>HTMLElement</code>: <code>pointerup</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>Pointer events extend DOM input events to support various pointing input devices such as pen/stylus and touch screens as well as mouse. The <em>pointer</em> is a hardware-agnostic device that can target a specific set of screen coordinates. Having a single event model for pointers can simplify creating Web sites, applications and provide a good user experience regardless of the user's hardware.</p>\n<p>Pointer events have many similarities to mouse events but they support multiple simultaneous pointers such as multiple fingers on a touch screen. This additional feature can be used to provide richer user interaction models but at the cost of additional complexity in the multi-touch interaction handling. This document demonstrates via example code, using pointer events with different multi-touch interactions.</p>\n<p>A <em>live</em> version of this application is available on <a href=\"https://mdn.github.io/dom-examples/pointerevents/Multi-touch_interaction.html\" class=\"external\" rel=\" noopener\">GitHub</a>. The <a href=\"https://github.com/mdn/dom-examples/blob/main/pointerevents/Multi-touch_interaction.html\" class=\"external\" rel=\" noopener\">source code is available on GitHub</a>; pull requests and <a href=\"https://github.com/mdn/dom-examples/issues\" class=\"external\" rel=\" noopener\">bug reports</a> are welcome.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>This example demonstrates using pointer events' various event types (<a href=\"/en-US/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a>, <a href=\"/en-US/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a>, <a href=\"/en-US/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> <a href=\"/en-US/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a>, etc.) for different multi-touch interactions.</p>"}},{"type":"prose","value":{"id":"define_touch_targets","title":"Define touch targets","isH3":true,"content":"<p>The application uses <a href=\"/en-US/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> to define three different touch target areas.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0em<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 2em<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">#target1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">#target2</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">#target3</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"global_state","title":"Global state","isH3":true,"content":"<p>To support multi-touch interaction, preserving a pointer's event state during various event phases is required. This application uses three arrays to cache event state, one cache per target element.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Log events flag</span>\n<span class=\"token keyword\">const</span> logEvents <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Event caches, one per touch target</span>\n<span class=\"token keyword\">const</span> evCache1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> evCache2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> evCache3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"register_event_handlers","title":"Register event handlers","isH3":true,"content":"<p>Event handlers are registered for the following pointer events: <a href=\"/en-US/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a>, <a href=\"/en-US/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a> and <a href=\"/en-US/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a>. The handler for <a href=\"/en-US/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> is used for the <a href=\"/en-US/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a>, <a href=\"/en-US/docs/Web/API/Element/pointerout_event\" title=\"pointerout\"><code>pointerout</code></a> and <a href=\"/en-US/docs/Web/API/Element/pointerleave_event\" title=\"pointerleave\"><code>pointerleave</code></a> events, since these four events have the same semantics in this application.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">setHandlers</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Install event handlers for the given element</span>\n  <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span>onpointerdown <span class=\"token operator\">=</span> pointerdownHandler<span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span>onpointermove <span class=\"token operator\">=</span> pointermoveHandler<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Use same handler for pointer{up,cancel,out,leave} events since</span>\n  <span class=\"token comment\">// the semantics for these events - in this app - are the same.</span>\n  el<span class=\"token punctuation\">.</span>onpointerup <span class=\"token operator\">=</span> pointerupHandler<span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span>onpointercancel <span class=\"token operator\">=</span> pointerupHandler<span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span>onpointerout <span class=\"token operator\">=</span> pointerupHandler<span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span>onpointerleave <span class=\"token operator\">=</span> pointerupHandler<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setHandlers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setHandlers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setHandlers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"pointer_down","title":"Pointer down","isH3":true,"content":"<p>The <a href=\"/en-US/docs/Web/API/Element/pointerdown_event\" title=\"pointerdown\"><code>pointerdown</code></a> event is fired when a pointer (mouse, pen/stylus or touch point on a touchscreen) makes contact with the <em>contact surface</em>. The event's state must be cached, in case this down event is part of a multi-touch interaction.</p>\n<p>In this application, when a pointer is placed down on an element, the background color of the element changes, depending on the number of active touch points the element has. See the <a href=\"#update_background_color\"><code>update_background</code></a> function for more details about the color changes.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">pointerdownHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// The pointerdown event signals the start of a touch interaction.</span>\n  <span class=\"token comment\">// Save this event for later processing (this could be part of a</span>\n  <span class=\"token comment\">// multi-touch interaction) and update the background color</span>\n  <span class=\"token function\">pushEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">pointerDown: name = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">updateBackground</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"pointer_move","title":"Pointer move","isH3":true,"content":"<p>The <a href=\"/en-US/docs/Web/API/Element/pointermove_event\" title=\"pointermove\"><code>pointermove</code></a> handler is called when the pointer moves. It may be called multiple times (for example, if the user moves the pointer) before a different event type is fired.</p>\n<p>In this application, a pointer move is represented by the target's border being set to <code>dashed</code> to provide a clear visual indication that the element has received this event.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">pointermoveHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Note: if the user makes more than one \"simultaneous\" touch, most browsers</span>\n  <span class=\"token comment\">// fire at least one pointermove event and some will fire several pointermoves.</span>\n  <span class=\"token comment\">//</span>\n  <span class=\"token comment\">// This function sets the target element's border to \"dashed\" to visually</span>\n  <span class=\"token comment\">// indicate the target received a move event.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointerMove\"</span><span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">updateBackground</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token string\">\"dashed\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"pointer_up","title":"Pointer up","isH3":true,"content":"<p>The <a href=\"/en-US/docs/Web/API/Element/pointerup_event\" title=\"pointerup\"><code>pointerup</code></a> event is fired when a pointer is raised from the <em>contact surface</em>. When this occurs, the event is removed from the associated event cache.</p>\n<p>In this application, this handler is also used for <a href=\"/en-US/docs/Web/API/Element/pointercancel_event\" title=\"pointercancel\"><code>pointercancel</code></a>, <a href=\"/en-US/docs/Web/API/Element/pointerleave_event\" title=\"pointerleave\"><code>pointerleave</code></a> and <a href=\"/en-US/docs/Web/API/Element/pointerout_event\" title=\"pointerout\"><code>pointerout</code></a> events.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">pointerupHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Remove this touch point from the cache and reset the target's</span>\n  <span class=\"token comment\">// background and border</span>\n  <span class=\"token function\">removeEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">updateBackground</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token string\">\"1px solid black\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"application_ui","title":"Application UI","isH3":true,"content":"<p>The application uses <a href=\"/en-US/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> elements for the touch areas and provides buttons to enable logging and to clear the log.</p>\n<p>To prevent the browser's default touch behavior from overriding this application's pointer handling, the <a href=\"/en-US/docs/Web/CSS/touch-action\"><code>touch-action</code></a> property is applied to the <a href=\"/en-US/docs/Web/HTML/Element/body\"><code>&lt;body&gt;</code></a> element.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">touch-action</span><span class=\"token punctuation\">:</span>none</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Tap, Hold or Swipe me 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Tap, Hold or Swipe me 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Tap, Hold or Swipe me 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n  <span class=\"token comment\">&lt;!-- UI for logging/debugging --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">enableLog</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Start/Stop event logging<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>clearlog<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">clearLog</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Clear the log<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>output</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>output</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"miscellaneous_functions","title":"Miscellaneous functions","isH3":true,"content":"<p>These functions support the application but aren't directly involved with the event flow.</p>\n<h4 id=\"cache_management\">Cache management</h4>\n<p>These functions manage the global event caches <code>evCache1</code>, <code>evCache2</code> and <code>evCache3</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">getCache</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Return the cache for this event's target element</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"target1\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> evCache1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"target2\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> evCache2<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"target3\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> evCache3<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error with cache handling\"</span><span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">pushEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Save this event in the target's cache</span>\n  <span class=\"token keyword\">const</span> evCache <span class=\"token operator\">=</span> <span class=\"token function\">getCache</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  evCache<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">removeEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Remove this event from the target's cache</span>\n  <span class=\"token keyword\">const</span> evCache <span class=\"token operator\">=</span> <span class=\"token function\">getCache</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> evCache<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cachedEv</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> cachedEv<span class=\"token punctuation\">.</span>pointerId <span class=\"token operator\">===</span> ev<span class=\"token punctuation\">.</span>pointerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  evCache<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"update_background_color\">Update background color</h4>\n<p>The background color of the touch areas will change as follows: no active touches is <code>white</code>; one active touch is <code>yellow</code>; two simultaneous touches is <code>ping</code> and three or more simultaneous touches is <code>lightblue</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">updateBackground</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Change background color based on the number of simultaneous touches/pointers</span>\n  <span class=\"token comment\">// currently down:</span>\n  <span class=\"token comment\">//   white - target element has no touch points i.e. no pointers down</span>\n  <span class=\"token comment\">//   yellow - one pointer down</span>\n  <span class=\"token comment\">//   pink - two pointers down</span>\n  <span class=\"token comment\">//   lightblue - three or more pointers down</span>\n  <span class=\"token keyword\">const</span> evCache <span class=\"token operator\">=</span> <span class=\"token function\">getCache</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>evCache<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Target element has no touch points</span>\n      ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Single touch point</span>\n      ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Two simultaneous touch points</span>\n      ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"pink\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token comment\">// Three or more simultaneous touches</span>\n      ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"lightblue\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"event_logging\">Event logging</h4>\n<p>These functions are used send to event activity to the application window (to support debugging and learning about the event flow).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Log events flag</span>\n<span class=\"token keyword\">let</span> logEvents <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">enableLog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  logEvents <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>logEvents<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> s <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token operator\">+</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">  pointerID   = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ev<span class=\"token punctuation\">.</span>pointerId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token operator\">+</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">  pointerType = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ev<span class=\"token punctuation\">.</span>pointerType<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token operator\">+</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">  isPrimary   = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ev<span class=\"token punctuation\">.</span>isPrimary<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  o<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>s<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">clearLog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  o<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}}],"toc":[{"text":"Example","id":"example"}],"summary":"Pointer events extend DOM input events to support various pointing input devices such as pen/stylus and touch screens as well as mouse. The pointer is a hardware-agnostic device that can target a specific set of screen coordinates. Having a single event model for pointers can simplify creating Web sites, applications and provide a good user experience regardless of the user's hardware.","popularity":0.0002,"modified":"2022-09-14T12:12:03.000Z","other_translations":[{"title":"マルチタッチ操作","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/pointer_events/multi-touch_interaction","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/pointer_events/multi-touch_interaction/index.md","last_commit_url":"https://github.com/mdn/content/commit/84fc68f1674c9b2d1708fb38dc2824e228f9bb3f","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Pointer_events","title":"Pointer events"},{"uri":"/en-US/docs/Web/API/Pointer_events/Multi-touch_interaction","title":"Multi-touch interaction"}],"pageTitle":"Multi-touch interaction - Web APIs | MDN","noIndexing":false}}