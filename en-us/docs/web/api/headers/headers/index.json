{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Headers()","mdn_url":"/en-US/docs/Web/API/Headers/Headers","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><em><code>Headers()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Headers/append\"><code>append()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/delete\"><code>delete()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/entries\"><code>entries()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/forEach\"><code>forEach()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/get\"><code>get()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/has\"><code>has()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/keys\"><code>keys()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/set\"><code>set()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/values\"><code>values()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>Headers()</code></strong> constructor creates a new\n  <a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a> object.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new Headers()\nnew Headers(init)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"init\"><code>init</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      An object containing any <a href=\"/en-US/docs/Web/HTTP/Headers\">HTTP headers</a>\n      that you want to pre-populate your <code>Headers</code> object with. This can be a\n      simple object literal with <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> values, an array of name-value pairs, where each pair is a 2-element string array; or an existing\n      <code>Headers</code> object. In the last case, the new <code>Headers</code> object\n      copies its data from the existing <code>Headers</code> object.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Creating an empty <code>Headers</code> object is simple:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myHeaders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Currently empty</span>\n</code></pre></div>\n<p>You could add a header to this using <a href=\"/en-US/docs/Web/API/Headers/append\"><code>Headers.append</code></a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>myHeaders<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyHeaders<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Returns 'image/jpeg'</span>\n</code></pre></div>\n<p>\n  Or you can add the headers you want as the <code>Headers</code> object is created. In\n  the following snippet we create a new <a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a> object, adding some headers\n  by passing the constructor an init object as an argument:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> httpHeaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'Content-Type'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">'X-My-Custom-Header'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Zeke are cool'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> myHeaders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span>httpHeaders<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  You can now create another <code>Headers</code> object, passing it the first\n  <code>Headers</code> object as its init object:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> secondHeadersObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span>myHeaders<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsecondHeadersObj<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Would return 'image/jpeg' — it inherits it from the first headers object</span>\n</code></pre></div>\n<p>\n  You can also add the headers you want as the <code>Headers</code> object is created by using a two-dimensional array to add multiple headers with the same values. In\n  the following snippet we create a new <a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a> object with multiple <code>Set-Cookie</code> headers\n  by passing the constructor an init array as an argument:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'Set-Cookie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'greeting=hello'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'Set-Cookie'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name=world'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> myHeaders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#ref-for-dom-headers①","title":"Fetch Standard"}],"query":"api.Headers.Headers"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Headers.Headers","dataURL":"/en-US/docs/Web/API/Headers/Headers/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\">ServiceWorker API</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Headers() constructor creates a new\n  Headers object.","popularity":0.0025,"modified":"2022-09-13T05:48:35.000Z","other_translations":[{"title":"Headers()","locale":"ja","native":"日本語"},{"title":"Headers()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/headers/headers","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/headers/headers/index.md","last_commit_url":"https://github.com/mdn/content/commit/8573240024adc1eef906b4b2df35567144fd733e","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Headers","title":"Headers"},{"uri":"/en-US/docs/Web/API/Headers/Headers","title":"Headers()"}],"pageTitle":"Headers() - Web APIs | MDN","noIndexing":false}}