{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Headers","mdn_url":"/en-US/docs/Web/API/Headers","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/Headers/Headers\"><code>Headers()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Headers/append\"><code>append()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/delete\"><code>delete()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/entries\"><code>entries()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/forEach\"><code>forEach()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/get\"><code>get()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/has\"><code>has()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/keys\"><code>keys()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/set\"><code>set()</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers/values\"><code>values()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Fetch API</summary><ol><li><a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a></li><li><a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a></li><li><a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>Headers</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a> allows you to perform various actions on <a href=\"/en-US/docs/Web/HTTP/Headers\">HTTP request and response headers</a>. These actions include retrieving, setting, adding to, and removing headers from the list of the request's headers.</p>\n<p>A <code>Headers</code> object has an associated header list, which is initially empty and consists of zero or more name and value pairs. You can add to this using methods like <a href=\"/en-US/docs/Web/API/Headers/append\" title=\"append()\"><code>append()</code></a> (see <a href=\"#examples\">Examples</a>.) In all methods of this interface, header names are matched by case-insensitive byte sequence.</p>\n<p>For security reasons, some headers can only be controlled by the user agent. These headers include the <a href=\"/en-US/docs/Glossary/Forbidden_header_name\">forbidden header names</a> and <a href=\"/en-US/docs/Glossary/Forbidden_response_header_name\">forbidden response header names</a>.</p>\n<p>A Headers object also has an associated guard, which takes a value of <code>immutable</code>, <code>request</code>, <code>request-no-cors</code>, <code>response</code>, or <code>none</code>. This affects whether the <a href=\"/en-US/docs/Web/API/Headers/set\" title=\"set()\"><code>set()</code></a>, <a href=\"/en-US/docs/Web/API/Headers/delete\" title=\"delete()\"><code>delete()</code></a>, and <a href=\"/en-US/docs/Web/API/Headers/append\" title=\"append()\"><code>append()</code></a> methods will mutate the header. For more information see <a href=\"/en-US/docs/Glossary/Guard\">Guard</a>.</p>\n<p>You can retrieve a <code>Headers</code> object via the <a href=\"/en-US/docs/Web/API/Request/headers\"><code>Request.headers</code></a> and <a href=\"/en-US/docs/Web/API/Response/headers\"><code>Response.headers</code></a> properties, and create a new <code>Headers</code> object using the <a href=\"/en-US/docs/Web/API/Headers/Headers\" title=\"Headers()\"><code>Headers()</code></a> constructor.</p>\n<p>An object implementing <code>Headers</code> can directly be used in a <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a> structure, instead of <a href=\"/en-US/docs/Web/API/Headers/entries\" title=\"entries()\"><code>entries()</code></a>: <code>for (const p of myHeaders)</code> is equivalent to <code>for (const p of myHeaders.entries())</code>.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> you can find out more about the available headers by reading our <a href=\"/en-US/docs/Web/HTTP/Headers\">HTTP headers</a> reference.</p>\n</div>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"headers\"><a href=\"/en-US/docs/Web/API/Headers/Headers\" title=\"Headers()\"><code>Headers()</code></a></dt>\n  <dd>\n    <p>Creates a new <code>Headers</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"headers.append\"><a href=\"/en-US/docs/Web/API/Headers/append\"><code>Headers.append()</code></a></dt>\n  <dd>\n    <p>Appends a new value onto an existing header inside a <code>Headers</code> object, or adds the header if it does not already exist.</p>\n  </dd>\n  <dt id=\"headers.delete\"><a href=\"/en-US/docs/Web/API/Headers/delete\"><code>Headers.delete()</code></a></dt>\n  <dd>\n    <p>Deletes a header from a <code>Headers</code> object.</p>\n  </dd>\n  <dt id=\"headers.entries\"><a href=\"/en-US/docs/Web/API/Headers/entries\"><code>Headers.entries()</code></a></dt>\n  <dd>\n    <p>Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing to go through all key/value pairs contained in this object.</p>\n  </dd>\n  <dt id=\"headers.foreach\"><a href=\"/en-US/docs/Web/API/Headers/forEach\"><code>Headers.forEach()</code></a></dt>\n  <dd>\n    <p>Executes a provided function once for each key/value pair in this <code>Headers</code> object.</p>\n  </dd>\n  <dt id=\"headers.get\"><a href=\"/en-US/docs/Web/API/Headers/get\"><code>Headers.get()</code></a></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> sequence of all the values of a header within a <code>Headers</code> object with a given name.</p>\n  </dd>\n  <dt id=\"headers.has\"><a href=\"/en-US/docs/Web/API/Headers/has\"><code>Headers.has()</code></a></dt>\n  <dd>\n    <p>Returns a boolean stating whether a <code>Headers</code> object contains a certain header.</p>\n  </dd>\n  <dt id=\"headers.keys\"><a href=\"/en-US/docs/Web/API/Headers/keys\"><code>Headers.keys()</code></a></dt>\n  <dd>\n    <p>Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing you to go through all keys of the key/value pairs contained in this object.</p>\n  </dd>\n  <dt id=\"headers.set\"><a href=\"/en-US/docs/Web/API/Headers/set\"><code>Headers.set()</code></a></dt>\n  <dd>\n    <p>Sets a new value for an existing header inside a <code>Headers</code> object, or adds the header if it does not already exist.</p>\n  </dd>\n  <dt id=\"headers.values\"><a href=\"/en-US/docs/Web/API/Headers/values\"><code>Headers.values()</code></a></dt>\n  <dd>\n    <p>Returns an <a href=\"/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing you to go through all values of the key/value pairs contained in this object.</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> To be clear, the difference between <a href=\"/en-US/docs/Web/API/Headers/set\"><code>Headers.set()</code></a> and <a href=\"/en-US/docs/Web/API/Headers/append\"><code>Headers.append()</code></a> is that if the specified header does already exist and does accept multiple values, <a href=\"/en-US/docs/Web/API/Headers/set\"><code>Headers.set()</code></a> will overwrite the existing value with the new one, whereas <a href=\"/en-US/docs/Web/API/Headers/append\"><code>Headers.append()</code></a> will append the new value onto the end of the set of values. See their dedicated pages for example code.</p>\n</div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> All of the Headers methods will throw a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> if you try to pass in a reference to a name that isn't a <a href=\"https://fetch.spec.whatwg.org/#concept-header-name\" class=\"external\" rel=\" noopener\">valid HTTP Header name</a>. The mutation operations will throw a <code>TypeError</code> if the header has an immutable <a href=\"/en-US/docs/Glossary/Guard\">Guard</a>. In any other failure case they fail silently.</p>\n</div>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> When Header values are iterated over, they are automatically sorted in lexicographical order, and values from duplicate header names are combined.</p>\n</div>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In the following snippet, we create a new header using the <code>Headers()</code> constructor, add a new header to it using <code>append()</code>, then return that header value using <code>get()</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myHeaders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyHeaders<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/xml'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyHeaders<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// should return 'text/xml'</span>\n</code></pre></div>\n<p>The same can be achieved by passing an array of arrays or an object literal to the constructor:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myHeaders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'text/xml'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// or, using an array of arrays:</span>\nmyHeaders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/xml'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyHeaders<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// should return 'text/xml'</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#headers-class","title":"Fetch Standard"}],"query":"api.Headers"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Headers","dataURL":"/en-US/docs/Web/API/Headers/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\">ServiceWorker API</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Headers interface of the Fetch API allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing headers from the list of the request's headers.","popularity":0.0106,"modified":"2022-09-11T06:43:56.000Z","other_translations":[{"title":"Headers","locale":"fr","native":"Français"},{"title":"Headers","locale":"ja","native":"日本語"},{"title":"Headers","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/headers","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/headers/index.md","last_commit_url":"https://github.com/mdn/content/commit/ff3545b816d9a945d3793ecc330a3b6cbdc59c1c","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Headers","title":"Headers"}],"pageTitle":"Headers - Web APIs | MDN","noIndexing":false}}