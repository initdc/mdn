{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"StylePropertyMapReadOnly.forEach()","mdn_url":"/en-US/docs/Web/API/StylePropertyMapReadOnly/forEach","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CSS_Typed_OM_API\">CSS Typed OM API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/size\"><code>size</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/entries\"><code>entries()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>forEach()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/get\"><code>get()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/getAll\"><code>getAll()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/has\"><code>has()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/keys\"><code>keys()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/values\"><code>values()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for CSS Typed Object Model API</summary><ol><li><a href=\"/en-US/docs/Web/API/CSSImageValue\"><code>CSSImageValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSKeywordValue\"><code>CSSKeywordValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSPositionValue\"><code>CSSPositionValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a></li><li><a href=\"/en-US/docs/Web/API/StylePropertyMap\"><code>StylePropertyMap</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>StylePropertyMapReadOnly.forEach()</code></strong> method executes a\n  provided function once for each element of <a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a>.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">// Arrow function\nforEach((currentValue) =&gt; { /* … */ } )\nforEach((currentValue, index) =&gt; { /* … */ } )\nforEach((currentValue, index, array) =&gt; { /* … */ } )\n\n// Callback function\nforEach(callbackFn)\nforEach(callbackFn, thisArg)\n\n// Inline callback function\nforEach(function (currentValue) { /* … */ })\nforEach(function (currentValue, index) { /* … */ })\nforEach(function (currentValue, index, array) { /* … */ })\nforEach(function (currentValue, index, array) { /* … */ }, thisArg)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"callbackfn\"><code>callbackFn</code></dt>\n  <dd>\n    <p>The function to execute for each element, taking three arguments:</p>\n    <dl>\n      <dt id=\"currentvalue\"><code>currentValue</code></dt>\n      <dd>\n        <p>The value of the current element being processed.</p>\n      </dd>\n      <dt id=\"index\"><code>index</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>The index of the current element being processed.</p>\n      </dd>\n      <dt id=\"array\"><code>array</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>The StylePropertyMapReadOnly that <code>forEach()</code> is being called on.</p>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"thisarg\"><code>thisArg</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      Value to use as <strong><code>this</code></strong> (i.e., the reference\n      <code>Object</code>) when executing <code>callback</code>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  Here is an example of using <code>forEach()</code> on a retrieved\n  <a href=\"/en-US/docs/Web/API/Element/computedStyleMap\"><code>Element.computedStyleMap()</code></a>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// get a button element</span>\n<span class=\"token keyword\">const</span> buttonEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.example'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// we can retrieve all computed styles with `computedStyleMap`</span>\n<span class=\"token keyword\">const</span> allComputedStyles <span class=\"token operator\">=</span> buttonEl<span class=\"token punctuation\">.</span><span class=\"token function\">computedStyleMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// forEach will allow us to run code over each prop/val pair</span>\nallComputedStyles<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// code to run for each pair</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[],"query":"api.StylePropertyMapReadOnly.forEach"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.StylePropertyMapReadOnly.forEach","dataURL":"/en-US/docs/Web/API/StylePropertyMapReadOnly/forEach/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The StylePropertyMapReadOnly.forEach() method executes a\n  provided function once for each element of StylePropertyMapReadOnly.","popularity":0,"modified":"2022-09-13T06:27:50.000Z","other_translations":[{"title":"StylePropertyMapReadOnly.forEach()","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/stylepropertymapreadonly/foreach","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/stylepropertymapreadonly/foreach/index.md","last_commit_url":"https://github.com/mdn/content/commit/16e398809d62247dbadc89ff4024a0ffa4781f0e","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/StylePropertyMapReadOnly","title":"StylePropertyMapReadOnly"},{"uri":"/en-US/docs/Web/API/StylePropertyMapReadOnly/forEach","title":"StylePropertyMapReadOnly.forEach()"}],"pageTitle":"StylePropertyMapReadOnly.forEach() - Web APIs | MDN","noIndexing":false}}