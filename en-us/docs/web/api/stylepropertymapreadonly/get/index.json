{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"StylePropertyMapReadOnly.get()","mdn_url":"/en-US/docs/Web/API/StylePropertyMapReadOnly/get","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CSS_Typed_OM_API\">CSS Typed OM API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/size\"><code>size</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/entries\"><code>entries()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/forEach\"><code>forEach()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>get()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/getAll\"><code>getAll()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/has\"><code>has()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/keys\"><code>keys()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly/values\"><code>values()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for CSS Typed Object Model API</summary><ol><li><a href=\"/en-US/docs/Web/API/CSSImageValue\"><code>CSSImageValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSKeywordValue\"><code>CSSKeywordValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSPositionValue\"><code>CSSPositionValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a></li><li><a href=\"/en-US/docs/Web/API/StylePropertyMap\"><code>StylePropertyMap</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>get()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/StylePropertyMapReadOnly\"><code>StylePropertyMapReadOnly</code></a> interface returns a <a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a>\n  object for the first value of the specified property.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">get(property)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"property\"><code>property</code></dt>\n  <dd>\n    <p>The name of the property to retrieve the value of.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a> object.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  Let's get just a few properties and values. Let's start by creating a link inside a\n  paragraph in our HTML, and adding a definition list which we will populate with\n  JavaScript:\n</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://example.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Link<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dl</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>results<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dl</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>We add a bit of CSS, including a custom property and an inheritable property:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  We use the Element's\n  <a href=\"/en-US/docs/Web/API/Element/computedStyleMap\"><code>computedStyleMap()</code></a>\n  to return a <em>StylePropertyMapReadOnly</em> object. We create an array of properties\n  of interest and use the StylePropertyMapReadOnly's <code>get()</code> method to get only\n  those values.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// get the element</span>\n<span class=\"token keyword\">const</span> myElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Retrieve all computed styles with computedStyleMap()</span>\n<span class=\"token keyword\">const</span> styleMap <span class=\"token operator\">=</span> myElement<span class=\"token punctuation\">.</span><span class=\"token function\">computedStyleMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// get the &lt;dl&gt; we'll be populating</span>\n<span class=\"token keyword\">const</span> stylesList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#results'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// array of properties we're interested in</span>\n<span class=\"token keyword\">const</span> ofInterest <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'font-weight'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'border-left-color'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'color'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--color'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// iterate over our properties of interest</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> property <span class=\"token keyword\">of</span> ofInterest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// properties</span>\n  <span class=\"token keyword\">const</span> cssProperty <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cssProperty<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> property<span class=\"token punctuation\">;</span>\n  stylesList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>cssProperty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// values</span>\n  <span class=\"token keyword\">const</span> cssValue <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// use get() to find the value</span>\n  cssValue<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> styleMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>property<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  stylesList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>cssValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"Examples sample\" id=\"frame_examples\" width=\"120\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/StylePropertyMapReadOnly/get/_sample_.examples.html\" loading=\"lazy\"></iframe>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://drafts.css-houdini.org/css-typed-om/#dom-stylepropertymapreadonly-get","title":"CSS Typed OM Level 2"}],"query":"api.StylePropertyMapReadOnly.get"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.StylePropertyMapReadOnly.get","dataURL":"/en-US/docs/Web/API/StylePropertyMapReadOnly/get/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/CSS_Typed_OM_API\">CSS Typed Object Model API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/CSS_Typed_OM_API/Guide\">Learning Houdini: the CSS Typed Object Model</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The get() method of the\n  StylePropertyMapReadOnly interface returns a CSSStyleValue\n  object for the first value of the specified property.","popularity":0,"modified":"2022-09-14T12:12:03.000Z","other_translations":[{"title":"StylePropertyMapReadOnly.get()","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/stylepropertymapreadonly/get","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/stylepropertymapreadonly/get/index.md","last_commit_url":"https://github.com/mdn/content/commit/84fc68f1674c9b2d1708fb38dc2824e228f9bb3f","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/StylePropertyMapReadOnly","title":"StylePropertyMapReadOnly"},{"uri":"/en-US/docs/Web/API/StylePropertyMapReadOnly/get","title":"StylePropertyMapReadOnly.get()"}],"pageTitle":"StylePropertyMapReadOnly.get() - Web APIs | MDN","noIndexing":false}}