{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Locating DOM elements using selectors","mdn_url":"/en-US/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/API/Document_Object_Model/Introduction\">Introduction to the DOM</a></li><li><a href=\"/en-US/docs/Web/API/Document_object_model/Using_the_W3C_DOM_Level_1_Core\">Using the W3C DOM Level 1 Core</a></li><li><a href=\"/en-US/docs/Web/API/Document_Object_Model/Traversing_an_HTML_table_with_JavaScript_and_DOM_Interfaces\">Traversing an HTML table with JavaScript and DOM Interfaces</a></li><li><a href=\"/en-US/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors\">Locating DOM elements using selectors</a></li><li><a href=\"/en-US/docs/Web/API/Document_object_model/How_to_create_a_DOM_tree\">How to create a DOM tree</a></li><li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li><li><a href=\"/en-US/docs/Web/API/Document_Object_Model/Whitespace\">How whitespace is handled by HTML, CSS, and in the DOM</a></li><li><a href=\"/en-US/docs/Web/API/Document_Object_Model/Examples\">Examples of web and XML development using the DOM</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/en-US/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/en-US/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/en-US/docs/Web/API/Range\"><code>Range</code></a></li><li><a href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The Selectors API provides methods that make it quick and easy to retrieve <a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a> nodes from the DOM by matching against a set of <a href=\"/en-US/docs/Web/CSS/CSS_Selectors\">selectors</a>. This is much faster than past techniques, wherein it was necessary to, for example, use a loop in JavaScript code to locate the specific items you needed to find.</p>"}},{"type":"prose","value":{"id":"the_nodeselector_interface","title":"The NodeSelector interface","isH3":false,"content":"<p>This specification adds two new methods to any objects implementing the <a href=\"/en-US/docs/Web/API/Document\"><code>Document</code></a>, <a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a>, or <a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a> interfaces:</p>\n<dl>\n  <dt id=\"queryselector\"><a href=\"/en-US/docs/Web/API/Element/querySelector\" title=\"querySelector()\"><code>querySelector()</code></a></dt>\n  <dd>\n    <p>Returns the first matching <a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a> node within the node's subtree. If no matching node is found, <code>null</code> is returned.</p>\n  </dd>\n  <dt id=\"queryselectorall\"><a href=\"/en-US/docs/Web/API/Element/querySelectorAll\" title=\"querySelectorAll()\"><code>querySelectorAll()</code></a></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/NodeList\"><code>NodeList</code></a> containing all matching <code>Element</code> nodes within the node's subtree, or an empty <code>NodeList</code> if no matches are found.</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> The <a href=\"/en-US/docs/Web/API/NodeList\"><code>NodeList</code></a> returned by <a href=\"/en-US/docs/Web/API/Element/querySelectorAll\" title=\"querySelectorAll()\"><code>querySelectorAll()</code></a> is not live, which means that changes in the DOM are not reflected in the collection. This is different from other DOM querying methods that return live node lists.</p>\n</div>\n<p>You may find examples and details by reading the documentation for the <a href=\"/en-US/docs/Web/API/Element/querySelector\"><code>Element.querySelector()</code></a> and <a href=\"/en-US/docs/Web/API/Element/querySelectorAll\"><code>Element.querySelectorAll()</code></a> methods.</p>"}},{"type":"prose","value":{"id":"selectors","title":"Selectors","isH3":false,"content":"<p>The selector methods accept <a href=\"/en-US/docs/Web/CSS/CSS_Selectors\">selectors</a> to determine what element or elements should be returned. This includes <a href=\"/en-US/docs/Web/CSS/Selector_list\">selector lists</a> so you can group multiple selectors in a single query.</p>\n<p>To protect the user's privacy, some <a href=\"/en-US/docs/Web/CSS/Pseudo-classes\">pseudo-classes</a> are not supported or behave differently. For example <a href=\"/en-US/docs/Web/CSS/:visited\"><code>:visited</code></a> will return no matches and <a href=\"/en-US/docs/Web/CSS/:link\"><code>:link</code></a> is treated as <a href=\"/en-US/docs/Web/CSS/:any-link\"><code>:any-link</code></a>.</p>\n<p>Only elements can be selected, so <a href=\"/en-US/docs/Web/CSS/Pseudo-classes\">pseudo-classes</a> are not supported.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>To select all paragraph (<code>p</code>) elements in a document whose classes include <code>warning</code> or <code>note</code>, you can do the following:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> special <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p.warning, p.note\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>You can also query by ID. For example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#main, #basic, #exclamation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>After executing the above code, <code>el</code> contains the first element in the document whose ID is one of <code>main</code>, <code>basic</code>, or <code>exclamation</code>.</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://drafts.csswg.org/selectors/\" class=\"external\" rel=\" noopener\">Selectors specification</a></li>\n  <li><a href=\"/en-US/docs/Web/CSS/CSS_Selectors\">CSS Selectors</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Element/querySelector\"><code>Element.querySelector()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Element/querySelectorAll\"><code>Element.querySelectorAll()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Document/querySelector\"><code>Document.querySelector()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Document/querySelectorAll\"><code>Document.querySelectorAll()</code></a></li>\n</ul>"}}],"toc":[{"text":"The NodeSelector interface","id":"the_nodeselector_interface"},{"text":"Selectors","id":"selectors"},{"text":"Examples","id":"examples"},{"text":"See also","id":"see_also"}],"summary":"The Selectors API provides methods that make it quick and easy to retrieve Element nodes from the DOM by matching against a set of selectors. This is much faster than past techniques, wherein it was necessary to, for example, use a loop in JavaScript code to locate the specific items you needed to find.","popularity":0.0057,"modified":"2022-09-09T05:10:34.000Z","other_translations":[{"title":"Localizando elementos DOM usando selectores","locale":"es","native":"Español"},{"title":"Localisation des éléments DOM avec les sélecteurs","locale":"fr","native":"Français"},{"title":"セレクターを使用した DOM 要素の特定","locale":"ja","native":"日本語"},{"title":"선택자로 DOM 요소 선택하기","locale":"ko","native":"한국어"},{"title":"Locating DOM elements using selectors","locale":"ru","native":"Русский"},{"title":"使用选择器定位 DOM 元素","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/document_object_model/locating_dom_elements_using_selectors","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/document_object_model/locating_dom_elements_using_selectors/index.md","last_commit_url":"https://github.com/mdn/content/commit/1511e914c6b1ce6f88056bfefd48a6aa585cebce","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Document_object_model","title":"Document Object Model (DOM)"},{"uri":"/en-US/docs/Web/API/Document_object_model/Locating_DOM_elements_using_selectors","title":"Locating DOM elements using selectors"}],"pageTitle":"Locating DOM elements using selectors - Web APIs | MDN","noIndexing":false}}