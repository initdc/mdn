{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"btoa()","mdn_url":"/en-US/docs/Web/API/btoa","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/HTML_DOM_API\">HTML DOM API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/btoa\"><code>Btoa</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for HTML DOM</summary><ol><li><a href=\"/en-US/docs/Web/API/BeforeUnloadEvent\"><code>BeforeUnloadEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMStringMap\"><code>DOMStringMap</code></a></li><li><a href=\"/en-US/docs/Web/API/ErrorEvent\"><code>ErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLAnchorElement\"><code>HTMLAnchorElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLAreaElement\"><code>HTMLAreaElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLAudioElement\"><code>HTMLAudioElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLBRElement\"><code>HTMLBRElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLBaseElement\"><code>HTMLBaseElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLBodyElement\"><code>HTMLBodyElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLButtonElement\"><code>HTMLButtonElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLContentElement\"><code>HTMLContentElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDListElement\"><code>HTMLDListElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDataElement\"><code>HTMLDataElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDataListElement\"><code>HTMLDataListElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDivElement\"><code>HTMLDivElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDocument\"><code>HTMLDocument</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLEmbedElement\"><code>HTMLEmbedElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLFieldSetElement\"><code>HTMLFieldSetElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLFormControlsCollection\"><code>HTMLFormControlsCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLFrameSetElement\"><code>HTMLFrameSetElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLHRElement\"><code>HTMLHRElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLHeadElement\"><code>HTMLHeadElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLHeadingElement\"><code>HTMLHeadingElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLHtmlElement\"><code>HTMLHtmlElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLInputElement\"><code>HTMLInputElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLKeygenElement\"><code>HTMLKeygenElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLLIElement\"><code>HTMLLIElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLLabelElement\"><code>HTMLLabelElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLLegendElement\"><code>HTMLLegendElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLLinkElement\"><code>HTMLLinkElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMapElement\"><code>HTMLMapElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMetaElement\"><code>HTMLMetaElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMeterElement\"><code>HTMLMeterElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLModElement\"><code>HTMLModElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLOListElement\"><code>HTMLOListElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLOptGroupElement\"><code>HTMLOptGroupElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLOptionsCollection\"><code>HTMLOptionsCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLOutputElement\"><code>HTMLOutputElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLParagraphElement\"><code>HTMLParagraphElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLPictureElement\"><code>HTMLPictureElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLPreElement\"><code>HTMLPreElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLProgressElement\"><code>HTMLProgressElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLQuoteElement\"><code>HTMLQuoteElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLScriptElement\"><code>HTMLScriptElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLSelectElement\"><code>HTMLSelectElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLShadowElement\"><code>HTMLShadowElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLSourceElement\"><code>HTMLSourceElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLSpanElement\"><code>HTMLSpanElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLStyleElement\"><code>HTMLStyleElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableCaptionElement\"><code>HTMLTableCaptionElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableCellElement\"><code>HTMLTableCellElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableColElement\"><code>HTMLTableColElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableRowElement\"><code>HTMLTableRowElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableSectionElement\"><code>HTMLTableSectionElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTextAreaElement\"><code>HTMLTextAreaElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTimeElement\"><code>HTMLTimeElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTitleElement\"><code>HTMLTitleElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTrackElement\"><code>HTMLTrackElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLUListElement\"><code>HTMLUListElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLUnknownElement\"><code>HTMLUnknownElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HashChangeEvent\"><code>HashChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/History\"><code>History</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code></a></li><li><a href=\"/en-US/docs/Web/API/Location\"><code>Location</code></a></li><li><a href=\"/en-US/docs/Web/API/MessageChannel\"><code>MessageChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator\"><code>Navigator</code></a></li><li><a href=\"/en-US/docs/Web/API/PageTransitionEvent\"><code>PageTransitionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Plugin\"><code>Plugin</code></a></li><li><a href=\"/en-US/docs/Web/API/PluginArray\"><code>PluginArray</code></a></li><li><a href=\"/en-US/docs/Web/API/PopStateEvent\"><code>PopStateEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PromiseRejectionEvent\"><code>PromiseRejectionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RadioNodeList\"><code>RadioNodeList</code></a></li><li><a href=\"/en-US/docs/Web/API/ValidityState\"><code>ValidityState</code></a></li><li><a href=\"/en-US/docs/Web/API/Window\"><code>Window</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>btoa()</code></strong> method creates a\n  <a href=\"/en-US/docs/Glossary/Base64\">Base64</a>-encoded ASCII string from a <em>binary string</em> (i.e., a\n  string in which each character in the string is treated as a byte\n  of binary data).\n</p>\n<p>\n  You can use this method to encode data which may otherwise cause communication\n  problems, transmit it, then use the <a href=\"/en-US/docs/Web/API/atob\" title=\"atob()\"><code>atob()</code></a> method to decode the data again. For example, you can encode control\n  characters such as ASCII values 0 through 31.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">btoa(stringToEncode)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"stringtoencode\"><code>stringToEncode</code></dt>\n  <dd>\n    <p>The <em>binary string</em> to encode.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  An ASCII string containing the Base64 representation of\n  <code>stringToEncode</code>.\n</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidcharactererror\"><code>InvalidCharacterError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      The string contained a character that did not fit in a single byte. See \"Unicode\n      strings\" below for more detail.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> encodedData <span class=\"token operator\">=</span> <span class=\"token function\">btoa</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// encode a string</span>\n<span class=\"token keyword\">const</span> decodedData <span class=\"token operator\">=</span> <span class=\"token function\">atob</span><span class=\"token punctuation\">(</span>encodedData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// decode the string</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"unicode_strings","title":"Unicode strings","isH3":false,"content":"<p>\n  The <code>btoa()</code> function takes a JavaScript string as a parameter. In\n  JavaScript strings are represented using the UTF-16 character encoding: in this\n  encoding, strings are represented as a sequence of 16-bit (2 byte) units. Every ASCII\n  character fits into the first byte of one of these units, but many other characters\n  don't.\n</p>\n<p>\n  Base64, by design, expects binary data as its input. In terms of JavaScript strings,\n  this means strings in which each character occupies only one byte. So if you pass a\n  string into <code>btoa()</code> containing characters that occupy more than one byte,\n  you will get an error, because this is not considered binary data:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> ok <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ok<span class=\"token punctuation\">.</span><span class=\"token function\">codePointAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//   61: occupies &lt; 1 byte</span>\n\n<span class=\"token keyword\">const</span> notOK <span class=\"token operator\">=</span> <span class=\"token string\">\"✓\"</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>notOK<span class=\"token punctuation\">.</span><span class=\"token function\">codePointAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2713: occupies &gt; 1 byte</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">btoa</span><span class=\"token punctuation\">(</span>ok<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// YQ==</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">btoa</span><span class=\"token punctuation\">(</span>notOK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error</span>\n</code></pre></div>\n<p>\n  If you need to encode Unicode text as ASCII using <code>btoa()</code>, one option is to\n  convert the string such that each 16-bit unit occupies only one byte. For example:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// convert a Unicode string to a string in which</span>\n<span class=\"token comment\">// each 16-bit unit occupies only one byte</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">toBinary</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> codeUnits <span class=\"token operator\">=</span> Uint16Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> charCodes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>codeUnits<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  charCodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">char</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// a string that contains characters occupying &gt; 1 byte</span>\n<span class=\"token keyword\">const</span> myString <span class=\"token operator\">=</span> <span class=\"token string\">\"☸☹☺☻☼☾☿\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> converted <span class=\"token operator\">=</span> <span class=\"token function\">toBinary</span><span class=\"token punctuation\">(</span>myString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> encoded <span class=\"token operator\">=</span> <span class=\"token function\">btoa</span><span class=\"token punctuation\">(</span>converted<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// OCY5JjomOyY8Jj4mPyY=</span>\n</code></pre></div>\n<p>If you do this, of course you'll have to reverse the conversion on the decoded string:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">fromBinary</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">binary</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> bytes <span class=\"token operator\">=</span> Uint8Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> binary<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span>\n    binary<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> charCodes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint16Array</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  charCodes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">char</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> decoded <span class=\"token operator\">=</span> <span class=\"token function\">atob</span><span class=\"token punctuation\">(</span>encoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> original <span class=\"token operator\">=</span> <span class=\"token function\">fromBinary</span><span class=\"token punctuation\">(</span>decoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>original<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ☸☹☺☻☼☾☿</span>\n</code></pre></div>\n<p>See also the example <code>utf8_to_b64</code> and <code>b64_to_utf8</code> functions in the <a href=\"/en-US/docs/Glossary/Base64#solution_1_%E2%80%93_escaping_the_string_before_encoding_it\">Solution #1 – escaping the string before encoding it</a> section of the <a href=\"/en-US/docs/Glossary/Base64\">Base64</a> glossary entry.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/webappapis.html#dom-btoa-dev","title":"HTML Standard"}],"query":"api.btoa"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.btoa","dataURL":"/en-US/docs/Web/API/btoa/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#base64-utility-methods\" class=\"external\" rel=\" noopener\">A polyfill of <code>btoa</code></a> is available in <a href=\"https://github.com/zloirock/core-js\" class=\"external\" rel=\" noopener\"><code>core-js</code></a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\"><code>data</code> URLs</a></li>\n  <li><a href=\"/en-US/docs/Web/API/atob\" title=\"atob()\"><code>atob()</code></a></li>\n  <li><a href=\"/en-US/docs/Glossary/Base64\">Base64</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Unicode strings","id":"unicode_strings"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The btoa() method creates a\n  Base64-encoded ASCII string from a binary string (i.e., a\n  string in which each character in the string is treated as a byte\n  of binary data).","popularity":0.0118,"modified":"2022-09-29T14:49:32.000Z","other_translations":[{"title":"Cadenas binarias","locale":"es","native":"Español"},{"title":"WindowBase64.btoa()","locale":"fr","native":"Français"},{"title":"WindowOrWorkerGlobalScope.btoa()","locale":"ja","native":"日本語"},{"title":"btoa()","locale":"ko","native":"한국어"},{"title":"WindowBase64.btoa()","locale":"ru","native":"Русский"},{"title":"btoa()","locale":"zh-CN","native":"中文 (简体)"},{"title":"btoa()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/api/btoa","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/btoa/index.md","last_commit_url":"https://github.com/mdn/content/commit/951c9cee9c31ef7c2f2314b87a7c7cc5e330d471","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/btoa","title":"btoa()"}],"pageTitle":"btoa() - Web APIs | MDN","noIndexing":false}}