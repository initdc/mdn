{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RTCPeerConnection","mdn_url":"/en-US/docs/Web/API/RTCPeerConnection","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection\"><code>RTCPeerConnection()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/canTrickleIceCandidates\"><code>canTrickleIceCandidates</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/connectionState\"><code>connectionState</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/currentLocalDescription\"><code>currentLocalDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/currentRemoteDescription\"><code>currentRemoteDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState\"><code>iceConnectionState</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/iceGatheringState\"><code>iceGatheringState</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/localDescription\"><code>localDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/peerIdentity\"><code>peerIdentity</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingLocalDescription\"><code>pendingLocalDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingRemoteDescription\"><code>pendingRemoteDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/remoteDescription\"><code>remoteDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/sctp\"><code>sctp</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\"><code>signalingState</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/addIceCandidate\"><code>addIceCandidate()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/RTCPeerConnection/addStream\"><code>addStream()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/addTrack\"><code>addTrack()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/addTransceiver\"><code>addTransceiver()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/close\"><code>close()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/createAnswer\"><code>createAnswer()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/createDataChannel\"><code>createDataChannel()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/createOffer\"><code>createOffer()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/generateCertificate\"><code>generateCertificate() static function</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getConfiguration\"><code>getConfiguration()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getIdentityAssertion\"><code>getIdentityAssertion()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getReceivers\"><code>getReceivers()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\"><code>getSenders()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\"><code>getStats()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getStreamById\"><code>getStreamById()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getTransceivers\"><code>getTransceivers()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/RTCPeerConnection/removeStream\"><code>removeStream()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/removeTrack\"><code>removeTrack()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/restartIce\"><code>restartIce()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/setConfiguration\"><code>setConfiguration()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/setIdentityProvider\"><code>setIdentityProvider()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription\"><code>setLocalDescription()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/setRemoteDescription\"><code>setRemoteDescription()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/RTCPeerConnection/addstream_event\"><code>addstream</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event\"><code>connectionstatechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/datachannel_event\"><code>datachannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event\"><code>icecandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidateerror_event\"><code>icecandidateerror</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event\"><code>iceconnectionstatechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\"><code>icegatheringstatechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\"><code>negotiationneeded</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/RTCPeerConnection/removestream_event\"><code>removestream</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event\"><code>signalingstatechange</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/track_event\"><code>track</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>RTCPeerConnection</code></strong> interface represents a WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/RTCPeerConnection\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"136\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"186\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      RTCPeerConnection\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"rtcpeerconnection\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection\" title=\"RTCPeerConnection()\"><code>RTCPeerConnection()</code></a></dt>\n  <dd>\n    <p>\n      Returns a newly-created <code>RTCPeerConnection</code>,\n      which represents a connection between the local device and a remote peer.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"static_methods","title":"Static methods","isH3":false,"content":"<dl>\n  <dt id=\"generatecertificate\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/generateCertificate\" title=\"generateCertificate()\"><code>generateCertificate()</code></a></dt>\n  <dd>\n    <p>\n      Creates an X.509 certificate and its corresponding private key,\n      returning a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with the new <a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a> once it is generated.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em>Also inherits properties from <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"cantrickleicecandidates\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/canTrickleIceCandidates\" title=\"canTrickleIceCandidates\"><code>canTrickleIceCandidates</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns a boolean value which indicates whether or not\n      the remote peer can accept <a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-mmusic-trickle-ice\" class=\"external\" rel=\" noopener\">trickled ICE candidates</a>.\n    </p>\n  </dd>\n  <dt id=\"connectionstate\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/connectionState\" title=\"connectionState\"><code>connectionState</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Indicates the current state of the peer connection\n      by returning one of the strings\n      <code>new</code>, <code>connecting</code>, <code>connected</code>, <code>disconnected</code>,\n      <code>failed</code>, or <code>closed</code>.\n    </p>\n  </dd>\n  <dt id=\"currentlocaldescription\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/currentLocalDescription\" title=\"currentLocalDescription\"><code>currentLocalDescription</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns an <a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> object describing\n      the local end of the connection\n      as it was most recently successfully negotiated\n      since the last time\n      this <code>RTCPeerConnection</code> finished negotiating and connecting to a remote peer.\n      Also included is a list of any ICE candidates\n      that may already have been generated by the ICE agent\n      since the offer or answer represented by the description was first instantiated.\n    </p>\n  </dd>\n  <dt id=\"currentremotedescription\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/currentRemoteDescription\" title=\"currentRemoteDescription\"><code>currentRemoteDescription</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns an <a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> object describing\n      the remote end of the connection\n      as it was most recently successfully negotiated\n      since the last time\n      this <code>RTCPeerConnection</code> finished negotiating and connecting to a remote peer.\n      Also included is a list of any ICE candidates\n      that may already have been generated by the ICE agent\n      since the offer or answer represented by the description was first instantiated.\n    </p>\n  </dd>\n  <dt id=\"iceconnectionstate\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState\" title=\"iceConnectionState\"><code>iceConnectionState</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns a string which state of the ICE agent associated with this RTCPeerConnection.\n      It can be one of the following values:\n      <code>new</code>, <code>checking</code>, <code>connected</code>, <code>completed</code>,\n      <code>failed</code>, <code>disconnected</code>, or <code>closed</code>.\n    </p>\n  </dd>\n  <dt id=\"icegatheringstate\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/iceGatheringState\" title=\"iceGatheringState\"><code>iceGatheringState</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns a string\n      that describes connection's ICE gathering state.\n      This lets you detect, for example,\n      when collection of ICE candidates has finished.\n      Possible values are:\n      <code>new</code>, <code>gathering</code>, or <code>complete</code>.\n    </p>\n  </dd>\n  <dt id=\"localdescription\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/localDescription\" title=\"localDescription\"><code>localDescription</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns an <a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a>\n      describing the session for the local end of the connection.\n      If it has not yet been set, returns <code>null</code>.\n    </p>\n  </dd>\n  <dt id=\"peeridentity\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/peerIdentity\" title=\"peerIdentity\"><code>peerIdentity</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>\n      that resolves to an <a href=\"/en-US/docs/Web/API/RTCIdentityAssertion\"><code>RTCIdentityAssertion</code></a>\n      which contains a string\n      identifying the remote peer.\n      Once this promise resolves successfully,\n      the resulting identity is the target peer identity\n      and will not change for the duration of the connection.\n    </p>\n  </dd>\n  <dt id=\"pendinglocaldescription\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingLocalDescription\" title=\"pendingLocalDescription\"><code>pendingLocalDescription</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns an <a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> object\n      describing a pending configuration change for the local end of the connection.\n      This does not describe the connection as it currently stands,\n      but as it may exist in the near future.\n    </p>\n  </dd>\n  <dt id=\"pendingremotedescription\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/pendingRemoteDescription\" title=\"pendingRemoteDescription\"><code>pendingRemoteDescription</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns an <a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> object\n      describing a pending configuration change for the remote end of the connection.\n      This does not describe the connection as it currently stands,\n      but as it may exist in the near future.\n    </p>\n  </dd>\n  <dt id=\"remotedescription\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/remoteDescription\" title=\"remoteDescription\"><code>remoteDescription</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns an <a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a> object\n      describing the session,\n      including configuration and media information,\n      for the remote end of the connection.\n      If this hasn't been set yet, this returns <code>null</code>.\n    </p>\n  </dd>\n  <dt id=\"sctp\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/sctp\" title=\"sctp\"><code>sctp</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns an <a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a> object\n      describing the <a href=\"/en-US/docs/Glossary/SCTP\">SCTP</a> transport layer\n      over which SCTP data is being sent and received.\n      If SCTP hasn't been negotiated, this value is <code>null</code>.\n    </p>\n  </dd>\n  <dt id=\"signalingstate\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\" title=\"signalingState\"><code>signalingState</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>\n      Returns a string\n      describing the state of the signaling process on the local end of the connection\n      while connecting or reconnecting to another peer.\n      It is one of the following values:\n      <code>stable</code>, <code>have-local-offer</code>, <code>have-remote-offer</code>,\n      <code>have-local-pranswer</code>, <code>have-remote-pranswer</code>, or <code>closed</code>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>Also inherits methods from <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"addicecandidate\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/addIceCandidate\" title=\"addIceCandidate()\"><code>addIceCandidate()</code></a></dt>\n  <dd>\n    <p>\n      Adds a new remote candidate to the <code>RTCPeerConnection</code>'s remote description,\n      which describes the state of the remote end of the connection.\n    </p>\n  </dd>\n  <dt id=\"addtrack\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/addTrack\" title=\"addTrack()\"><code>addTrack()</code></a></dt>\n  <dd>\n    <p>\n      Adds a new <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>\n      to the set of tracks\n      which will be transmitted to the other peer.\n    </p>\n  </dd>\n  <dt id=\"addtransceiver\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/addTransceiver\" title=\"addTransceiver()\"><code>addTransceiver()</code></a></dt>\n  <dd>\n    <p>\n      Creates a new <a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a>\n      and adds it to the set of transceivers associated with the connection.\n      Each transceiver represents a bidirectional stream,\n      with both an <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> and an <a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> associated with it.\n    </p>\n  </dd>\n  <dt id=\"close\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/close\" title=\"close()\"><code>close()</code></a></dt>\n  <dd>\n    <p>Closes the current peer connection.</p>\n  </dd>\n  <dt id=\"createanswer\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/createAnswer\" title=\"createAnswer()\"><code>createAnswer()</code></a></dt>\n  <dd>\n    <p>\n      Initiates the creation of an <a href=\"/en-US/docs/Glossary/SDP\">SDP</a> answer\n      to an offer received from a remote peer\n      during the offer/answer negotiation of a WebRTC connection.\n      The answer contains information\n      about any media already attached to the session,\n      codecs and options supported by the browser,\n      and any <a href=\"/en-US/docs/Glossary/ICE\">ICE</a> candidates already gathered.\n    </p>\n  </dd>\n  <dt id=\"createdatachannel\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/createDataChannel\" title=\"createDataChannel()\"><code>createDataChannel()</code></a></dt>\n  <dd>\n    <p>\n      Initiates the creation a new channel linked with the remote peer,\n      over which any kind of data may be transmitted.\n      This can be useful for back-channel content,\n      such as images, file transfer, text chat, game update packets, and so forth.\n    </p>\n  </dd>\n  <dt id=\"createoffer\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/createOffer\" title=\"createOffer()\"><code>createOffer()</code></a></dt>\n  <dd>\n    <p>\n      Initiates the creation of an <a href=\"/en-US/docs/Glossary/SDP\">SDP</a> offer\n      for the purpose of starting a new WebRTC connection to a remote peer.\n      The SDP offer includes information about any <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> objects\n      already attached to the WebRTC session, codec, and options supported by the browser,\n      as well as any candidates already gathered by the <a href=\"/en-US/docs/Glossary/ICE\">ICE</a> agent,\n      for the purpose of being sent over the signaling channel to a potential peer\n      to request a connection or to update the configuration of an existing connection.\n    </p>\n  </dd>\n  <dt id=\"getconfiguration\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getConfiguration\" title=\"getConfiguration()\"><code>getConfiguration()</code></a></dt>\n  <dd>\n    <p>\n      Returns an object\n      which indicates the current configuration of the connection.\n    </p>\n  </dd>\n  <dt id=\"getidentityassertion\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getIdentityAssertion\" title=\"getIdentityAssertion()\"><code>getIdentityAssertion()</code></a></dt>\n  <dd>\n    <p>\n      Initiates the gathering of an identity assertion\n      and returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>\n      which resolves to an identity assertion encoded as a string.\n      This has an effect only\n      if <a href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingState\" title=\"signalingState\"><code>signalingState</code></a> is not <code>closed</code>.\n    </p>\n  </dd>\n  <dt id=\"getreceivers\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getReceivers\" title=\"getReceivers()\"><code>getReceivers()</code></a></dt>\n  <dd>\n    <p>\n      Returns an array of <a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> objects,\n      each of which represents one <a href=\"/en-US/docs/Glossary/RTP\">RTP</a> receiver.\n    </p>\n  </dd>\n  <dt id=\"getsenders\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\" title=\"getSenders()\"><code>getSenders()</code></a></dt>\n  <dd>\n    <p>\n      Returns an array of <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> objects,\n      each of which represents the <a href=\"/en-US/docs/Glossary/RTP\">RTP</a> sender\n      responsible for transmitting one track's data.\n    </p>\n  </dd>\n  <dt id=\"getstats\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\" title=\"getStats()\"><code>getStats()</code></a></dt>\n  <dd>\n    <p>\n      Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>\n      which resolves with data providing statistics\n      about either the overall connection\n      or about the specified <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>.\n    </p>\n  </dd>\n  <dt id=\"gettransceivers\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getTransceivers\" title=\"getTransceivers()\"><code>getTransceivers()</code></a></dt>\n  <dd>\n    <p>\n      Returns a list of all the <a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a> objects\n      being used to send and receive data on the connection.\n    </p>\n  </dd>\n  <dt id=\"removetrack\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/removeTrack\" title=\"removeTrack()\"><code>removeTrack()</code></a></dt>\n  <dd>\n    <p>\n      Tells the local end of the connection\n      to stop sending media from the specified track,\n      without actually removing the corresponding <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a>\n      from the list of senders\n      as reported by <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\" title=\"getSenders()\"><code>getSenders()</code></a>.\n      If the track is already stopped,\n      or is not in the connection's senders list,\n      this method has no effect.\n    </p>\n  </dd>\n  <dt id=\"restartice\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/restartIce\" title=\"restartIce()\"><code>restartIce()</code></a></dt>\n  <dd>\n    <p>\n      Allows to easily request\n      that ICE candidate gathering be redone\n      on both ends of the connection.\n      This simplifies the process\n      by allowing the same method\n      to be used by either the caller or the receiver to trigger an <a href=\"/en-US/docs/Glossary/ICE\">ICE</a> restart.\n    </p>\n  </dd>\n  <dt id=\"setconfiguration\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/setConfiguration\" title=\"setConfiguration()\"><code>setConfiguration()</code></a></dt>\n  <dd>\n    <p>\n      Sets the current configuration of the connection\n      based on the values included in the specified object.\n      This lets you change the <a href=\"/en-US/docs/Glossary/ICE\">ICE</a> servers\n      used by the connection\n      and which transport policies to use.\n    </p>\n  </dd>\n  <dt id=\"setidentityprovider\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/setIdentityProvider\" title=\"setIdentityProvider()\"><code>setIdentityProvider()</code></a></dt>\n  <dd>\n    <p>\n      Sets the Identity Provider (IdP) to the triplet given in parameter:\n      its name, the protocol used to communicate with it and an username.\n      The protocol and the username are optional.\n    </p>\n  </dd>\n  <dt id=\"setlocaldescription\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription\" title=\"setLocalDescription()\"><code>setLocalDescription()</code></a></dt>\n  <dd>\n    <p>\n      Changes the local description associated with the connection.\n      This description specifies the properties of the local end of the connection,\n      including the media format.\n      It returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>\n      which is fulfilled\n      once the description has been changed, asynchronously.\n    </p>\n  </dd>\n  <dt id=\"setremotedescription\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/setRemoteDescription\" title=\"setRemoteDescription()\"><code>setRemoteDescription()</code></a></dt>\n  <dd>\n    <p>\n      Sets the specified session description\n      as the remote peer's current offer or answer.\n      The description specifies the properties of the remote end of the connection,\n      including the media format.\n      It returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>\n      which is fulfilled\n      once the description has been changed, asynchronously.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"obsolete_methods","title":"Obsolete methods","isH3":true,"content":"<dl>\n  <dt id=\"addstream\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/addStream\" title=\"addStream()\"><code>addStream()</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      Adds a <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> as a local source of audio or video.\n      Instead of using this obsolete method,\n      you should instead use <a href=\"/en-US/docs/Web/API/RTCPeerConnection/addTrack\" title=\"addTrack()\"><code>addTrack()</code></a>\n      once for each track\n      you wish to send to the remote peer.\n    </p>\n  </dd>\n  <dt id=\"createdtmfsender\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>createDTMFSender()</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      Creates a new <a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a>,\n      associated to a specific <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>,\n      that will be able to send <a href=\"/en-US/docs/Glossary/DTMF\">DTMF</a> phone signaling over the connection.\n    </p>\n  </dd>\n  <dt id=\"getstreambyid\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/getStreamById\" title=\"getStreamById()\"><code>getStreamById()</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      Returns the <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> with the given id\n      that is associated with local or remote end of the connection.\n      This property has been replaced\n      with the <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getSenders\" title=\"getSenders()\"><code>getSenders()</code></a>\n      and <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getReceivers\" title=\"getReceivers()\"><code>getReceivers()</code></a> methods.\n    </p>\n  </dd>\n  <dt id=\"removestream\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/removeStream\" title=\"removeStream()\"><code>removeStream()</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      Removes a <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> as a local source of audio or video.\n      Because this method is obsolete,\n      you should instead use <a href=\"/en-US/docs/Web/API/RTCPeerConnection/removeTrack\" title=\"removeTrack()\"><code>removeTrack()</code></a>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<p>Listen to these events using <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a> or by assigning an event listener to the <code>oneventname</code> property of this interface.</p>\n<dl>\n  <dt id=\"connectionstatechange\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event\" title=\"connectionstatechange\"><code>connectionstatechange</code></a></dt>\n  <dd>\n    <p>Sent when the overall connectivity status of the <code>RTCPeerConnection</code> changes.</p>\n  </dd>\n  <dt id=\"datachannel\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/datachannel_event\" title=\"datachannel\"><code>datachannel</code></a></dt>\n  <dd>\n    <p>Sent when the remote peer adds an <a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a> to the connection.</p>\n  </dd>\n  <dt id=\"icecandidate\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event\" title=\"icecandidate\"><code>icecandidate</code></a></dt>\n  <dd>\n    <p>Sent to request that the specified candidate be transmitted to the remote peer.</p>\n  </dd>\n  <dt id=\"icecandidateerror\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/icecandidateerror_event\" title=\"icecandidateerror\"><code>icecandidateerror</code></a></dt>\n  <dd>\n    <p>Sent to the connection if an error occurred during <a href=\"/en-US/docs/Glossary/ICE\">ICE</a> candidate gathering. The event describes the error.</p>\n  </dd>\n  <dt id=\"iceconnectionstatechange\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event\" title=\"iceconnectionstatechange\"><code>iceconnectionstatechange</code></a></dt>\n  <dd>\n    <p>Sent when the state of the <a href=\"/en-US/docs/Glossary/ICE\">ICE</a> connection changes, such as when it disconnects.</p>\n  </dd>\n  <dt id=\"icegatheringstatechange\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\" title=\"icegatheringstatechange\"><code>icegatheringstatechange</code></a></dt>\n  <dd>\n    <p>\n      Sent when the <a href=\"/en-US/docs/Glossary/ICE\">ICE</a> layer's gathering state, reflected by <a href=\"/en-US/docs/Web/API/RTCPeerConnection/iceGatheringState\" title=\"iceGatheringState\"><code>iceGatheringState</code></a>, changes.\n      This indicates whether ICE negotiation has not yet begun (<code>new</code>),\n      has begun gathering candidates (<code>gathering</code>),\n      or has completed (<code>complete</code>).\n    </p>\n  </dd>\n  <dt id=\"negotiationneeded\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\" title=\"negotiationneeded\"><code>negotiationneeded</code></a></dt>\n  <dd>\n    <p>\n      Sent when negotiation or renegotiation of the <a href=\"/en-US/docs/Glossary/ICE\">ICE</a> connection needs to be performed;\n      this can happen both when first opening a connection\n      as well as when it is necessary to adapt to changing network conditions.\n      The receiver should respond by creating an offer and sending it to the other peer.\n    </p>\n  </dd>\n  <dt id=\"signalingstatechange\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event\" title=\"signalingstatechange\"><code>signalingstatechange</code></a></dt>\n  <dd>\n    <p>Sent when the connection's <a href=\"/en-US/docs/Glossary/ICE\">ICE</a> signaling state changes.</p>\n  </dd>\n  <dt id=\"track\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/track_event\" title=\"track\"><code>track</code></a></dt>\n  <dd>\n    <p>\n      Sent after a new track has been added\n      to one of the <a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> instances which comprise the connection.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"obsolete_events","title":"Obsolete events","isH3":true,"content":"<dl>\n  <dt id=\"addstream_2\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/addstream_event\" title=\"addstream\"><code>addstream</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      Sent when a new <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> has been added to the connection.\n      Instead of listening for this obsolete event,\n      you should listen for <a href=\"/en-US/docs/Web/API/RTCPeerConnection/track_event\" title=\"track\"><code>track</code></a> events;\n      one is sent for each <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a> added to the connection.\n    </p>\n  </dd>\n  <dt id=\"removestream_2\"><a href=\"/en-US/docs/Web/API/RTCPeerConnection/removestream_event\" title=\"removestream\"><code>removestream</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      Sent when a <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> is removed from the connection.\n      Instead of listening for this obsolete event,\n      you should listen for <a href=\"/en-US/docs/Web/API/MediaStream/removetrack_event\" title=\"removetrack\"><code>removetrack</code></a> events on each stream.\n    </p>\n  </dd>\n</dl>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#interface-definition","title":"WebRTC 1.0: Real-Time Communication Between Browsers"}],"query":"api.RTCPeerConnection"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCPeerConnection","dataURL":"/en-US/docs/Web/API/RTCPeerConnection/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/jesup/nightly-gupshup/blob/master/static/js/chat.js\" class=\"external\" rel=\" noopener\">https://github.com/jesup/nightly-gupshup/blob/master/static/js/chat.js</a></li>\n  <li><a href=\"https://web.dev/webrtc-basics/\" class=\"external\" rel=\" noopener\">Get started with WebRTC</a></li>\n  <li><a href=\"https://github.com/chrisjohndigital/TutorRoom\" class=\"external\" rel=\" noopener\">TutorRoom</a>: Node.js HTML video capture, peer-to-peer video and filesharing application (<a href=\"https://github.com/chrisjohndigital/TutorRoom\" class=\"external\" rel=\" noopener\">source on GitHub</a>)</li>\n</ul>"}}],"toc":[{"text":"Constructor","id":"constructor"},{"text":"Static methods","id":"static_methods"},{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Events","id":"events"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The RTCPeerConnection interface represents a WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed.","popularity":0.006,"modified":"2022-09-09T05:18:40.000Z","other_translations":[{"title":"RTCPeerConnection","locale":"es","native":"Español"},{"title":"RTCPeerConnection","locale":"fr","native":"Français"},{"title":"RTCPeerConnection","locale":"ja","native":"日本語"},{"title":"RTCPeerConnection","locale":"ko","native":"한국어"},{"title":"RTCPeerConnection","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Интерфейс RTCPeerConnection","locale":"ru","native":"Русский"},{"title":"RTCPeerConnection","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/rtcpeerconnection","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/rtcpeerconnection/index.md","last_commit_url":"https://github.com/mdn/content/commit/e0e09b1df51489867f2e74c18586d168ba5e00d1","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCPeerConnection","title":"RTCPeerConnection"}],"pageTitle":"RTCPeerConnection - Web APIs | MDN","noIndexing":false}}