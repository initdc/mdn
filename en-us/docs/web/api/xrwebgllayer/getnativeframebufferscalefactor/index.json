{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"XRWebGLLayer.getNativeFramebufferScaleFactor() static method","mdn_url":"/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebXR_Device_API\">WebXR Device API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRWebGLLayer/XRWebGLLayer\"><code>XRWebGLLayer()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRWebGLLayer/fixedFoveation\"><code>fixedFoveation</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRWebGLLayer/framebuffer\"><code>framebuffer</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRWebGLLayer/framebufferHeight\"><code>framebufferHeight</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRWebGLLayer/framebufferWidth\"><code>framebufferWidth</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRWebGLLayer/ignoreDepthValues\"><code>ignoreDepthValues</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRWebGLLayer/getViewport\"><code>getViewport()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/XRLayer\"><code>XRLayer</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebXR Device API</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/xr\"><code>Navigator.xr</code></a></li><li><a href=\"/en-US/docs/Web/API/WebGLRenderingContext/makeXRCompatible\"><code>WebGLRenderingContext.makeXRCompatible()</code></a></li><li><a href=\"/en-US/docs/Web/API/XRAnchor\"><code>XRAnchor</code></a></li><li><a href=\"/en-US/docs/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRCPUDepthInformation\"><code>XRCPUDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRDepthInformation\"><code>XRDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRFrame\"><code>XRFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSource\"><code>XRInputSource</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRPose\"><code>XRPose</code></a></li><li><a href=\"/en-US/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRRenderState\"><code>XRRenderState</code></a></li><li><a href=\"/en-US/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSessionEvent\"><code>XRSessionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSpace\"><code>XRSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSystem\"><code>XRSystem</code></a></li><li><a href=\"/en-US/docs/Web/API/XRView\"><code>XRView</code></a></li><li><a href=\"/en-US/docs/Web/API/XRViewerPose\"><code>XRViewerPose</code></a></li><li><a href=\"/en-US/docs/Web/API/XRViewport\"><code>XRViewport</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLBinding\"><code>XRWebGLBinding</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLDepthInformation\"><code>XRWebGLDepthInformation</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The static method\n  <strong><code>XRWebGLLayer.getNativeFramebufferScaleFactor()</code></strong> returns a\n  floating-point scaling factor by which one can multiply the specified\n  <a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a>'s resolution to get the native resolution of the WebXR\n  device's frame buffer.\n</p>\n<p>\n  This information can be used when creating a new <code>XRWebGLLayer</code> to configure\n  the <code>framebufferScaleFactor</code> in the <code>layerInit</code> configuration object\n  specified when calling the <code>XRWebGLLayer()</code> constructor. See the\n  <a href=\"#usage_notes\">Usage notes</a> and <a href=\"#examples\">Examples</a> for details.\n</p>\n<p>\n  If the scaling factor is 1.0, then the frame buffer pixels and the native display\n  pixels are the same size. If the scaling factor is greater than zero, then the frame\n  buffer is smaller than the display's native dimensions, resulting in the output being\n  up-scaled for display to the screen after rendering into the frame buffer. If the\n  scaling factor is less than zero, the frame buffer is <em>larger</em> than the native\n  resolution of the display, resulting in the frame buffer's contents being scaled down\n  for display to the XR device. This can happen for display environments which use\n  superscaling or anti-aliasing techniques to improve perceived image quality.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">getNativeFramebufferScaleFactor(session)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"session\"><code>session</code></dt>\n  <dd>\n    <p>\n      The <a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a> for which to return the native framebuffer scaling\n      factor.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A floating-point value which, when multiplied by the <a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a>'s\n  recommended framebuffer dimensions, results in the XR device's native frame buffer\n  resolution. If the session has ended, this function returns 0.0.\n</p>"}},{"type":"prose","value":{"id":"usage_notes","title":"Usage notes","isH3":false,"content":"<p>\n  The scaling factor returned by this function will be 1.0 if the native resolution of\n  the XR device and the resolution of the XR device match. In any case, multiplying the\n  recommended resolution as identified by the <code>XRSession</code> by this value will\n  result in the actual native resolution of the XR hardware.\n</p>\n<p>\n  The recommended WebGL frame buffer resolution is the best possible estimate of the\n  resolution necessary to contain all of the <a href=\"/en-US/docs/Web/API/XRView\"><code>XRView</code></a>s needed by the device\n  while at the same time providing typical applications an acceptable balance of image\n  quality and performance.\n</p>\n<p>\n  For example, consider a device which uses a 2560x1440 pixel frame buffer (which is used\n  to render two views, for the left and right eyes, side by side each at a resolution of\n  1280x1440 pixels). Consider a frame buffer which at full size looks like this:\n</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor/twoviewsoneframebuffer.svg\" alt=\"Diagram showing how a framebuffer is divided between two eyes' viewpoints\" width=\"751\" height=\"504\" loading=\"lazy\">\n</p>\n<p>\n  If, on this device, it's determined that due to GPU limitations the browser needs to\n  reduce image quality in order to improve performance to an acceptable level, it might\n  choose to halve the resolution. In this case, the value returned by\n  <code>XRWebGLLayer.getNativeFramebufferScaleFactor()</code> will be 2.0. This method of\n  dividing the frame buffer between views is shown in the following diagram.\n</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor/twoviewsoneframe-scaledby2.svg\" alt=\"Diagram showing frame buffer as scaled to half resolution\" width=\"751\" height=\"504\" loading=\"lazy\">\n</p>\n<p>\n  Now the width and height of the frame buffer are 50% what they were before, resulting\n  in a total frame buffer size of 1280 by 720 pixels, with each eye's half of the buffer\n  being 640x720 pixels. Now we can see the coordinates of each of the viewports\n  representing these two views:\n</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor/twoviewsviewportcoords-scaledby2.svg\" alt=\"\" width=\"751\" height=\"504\" loading=\"lazy\">\n</p>\n<p>\n  Since each eye gets half of the frame buffer, the result is that the left eye gets a\n  640x720 portion of the buffer with the viewport's <code>x</code> and <code>y</code> at\n  0, the width at 640, and the height set to 720. The right eye gets the other half of the\n  frame buffer, with its viewport's <code>x</code> set at 639.\n</p>\n<p>\n  While <a href=\"/en-US/docs/Web/API/XRWebGLLayer#rendering_every_view_in_a_frame\">rendering a frame for this scene</a>, we get the viewport for the view and apply it to WebGL, then\n  render the scene. This ensures that the scene we render will not only match the\n  viewpoint we need to express (which is defined by the position and orientation data in\n  the pose), but that the rendered output will be constrained within the correct portion\n  of the frame buffer for the eye we're drawing, regardless of any scaling that is being\n  performed.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In this example, we request a frame buffer at the device's native resolution,\n  regardless of any performance concerns:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">requestNativeScaleWebGLLayer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gl<span class=\"token punctuation\">,</span> xrSession</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">makeXRCompatible</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> scaleFactor <span class=\"token operator\">=</span> XRWebGLLayer<span class=\"token punctuation\">.</span><span class=\"token function\">getNativeFramebufferScaleFactor</span><span class=\"token punctuation\">(</span>xrSession<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> glLayer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XRWebGLLayer</span><span class=\"token punctuation\">(</span>xrSession<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">framebufferScaleFactor</span><span class=\"token operator\">:</span> scaleFactor\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    xrSession<span class=\"token punctuation\">.</span><span class=\"token function\">updateRenderState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">baseLayer</span><span class=\"token operator\">:</span> glLayer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  This starts by calling the <a href=\"/en-US/docs/Web/API/WebGLRenderingContext\">WebGL rendering context</a> function <a href=\"/en-US/docs/Web/API/WebGLRenderingContext/makeXRCompatible\" title=\"makeXRCompatible()\"><code>makeXRCompatible()</code></a>. When the returned <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> resolves, we proceed by\n  calling <code>XRWebGLLayer</code>'s <code>getNativeFramebufferScaleFactor()</code>\n  static function to get the scale factor needed to reach the native resolution, and we\n  then pass that into the <a href=\"/en-US/docs/Web/API/XRWebGLLayer/XRWebGLLayer\" title=\"WebGLLayer()\"><code>WebGLLayer()</code></a>\n  constructor as the value of the <code>framebufferScaleFactor</code>\n  property in its <code>layerInit</code> configuration object.\n</p>\n<p>\n  That gets us a new <a href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> object representing a rendering surface\n  we can use for the <a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a>; we set it as the rendering surface for\n  <code>xrSession</code> by calling its <a href=\"/en-US/docs/Web/API/XRSession/updateRenderState\" title=\"updateRenderState()\"><code>updateRenderState()</code></a> method, passing the new <code>glLayer</code> in using the\n  <a href=\"/en-US/docs/Web/API/XRRenderState\"><code>XRRenderState</code></a> dictionary's <a href=\"/en-US/docs/Web/API/XRRenderState/baseLayer\"><code>XRRenderState.baseLayer</code></a>\n  property. The result is a rendering context that looks like the diagram below:\n</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor/twoviewsviewportcoords.svg\" alt=\"\" width=\"751\" height=\"504\" loading=\"lazy\">\n</p>\n<p>\n  Each time the <a href=\"/en-US/docs/Web/API/XRViewerPose\"><code>XRViewerPose</code></a>'s <a href=\"/en-US/docs/Web/API/XRViewerPose/views\" title=\"views\"><code>views</code></a>\n  are iterated over for rendering, the rendering loop obtains an <a href=\"/en-US/docs/Web/API/XRView\"><code>XRView</code></a> for\n  the left eye which has its top-left corner at (0, 0) with its width and height being\n  1280x1440 pixels. The right eye it obtains has its top-left corner at 1280, 0 with the\n  same width and height: 1280x1440.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://immersive-web.github.io/webxr/#dom-xrwebgllayer-getnativeframebufferscalefactor","title":"WebXR Device API"}],"query":"api.XRWebGLLayer.getNativeFramebufferScaleFactor"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.XRWebGLLayer.getNativeFramebufferScaleFactor","dataURL":"/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebXR_Device_API\">WebXR Device API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebXR_Device_API/Performance\">WebXR performance guide</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Usage notes","id":"usage_notes"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The static method\n  XRWebGLLayer.getNativeFramebufferScaleFactor() returns a\n  floating-point scaling factor by which one can multiply the specified\n  XRSession's resolution to get the native resolution of the WebXR\n  device's frame buffer.","popularity":0,"modified":"2022-09-13T07:01:32.000Z","source":{"folder":"en-us/web/api/xrwebgllayer/getnativeframebufferscalefactor","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/xrwebgllayer/getnativeframebufferscalefactor/index.md","last_commit_url":"https://github.com/mdn/content/commit/87a9f73c410c9b9e91300695c8aa4931367243fb","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/XRWebGLLayer","title":"XRWebGLLayer"},{"uri":"/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor","title":"XRWebGLLayer.getNativeFramebufferScaleFactor() static method"}],"pageTitle":"XRWebGLLayer.getNativeFramebufferScaleFactor() static method - Web APIs | MDN","noIndexing":false}}