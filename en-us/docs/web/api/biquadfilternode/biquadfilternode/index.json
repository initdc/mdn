{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"BiquadFilterNode()","mdn_url":"/en-US/docs/Web/API/BiquadFilterNode/BiquadFilterNode","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><em><code>BiquadFilterNode()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode/detune\"><code>detune</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode/frequency\"><code>frequency</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode/gain\"><code>gain</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode/Q\"><code>Q</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode/getFrequencyResponse\"><code>getFrequencyResponse()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/en-US/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>BiquadFilterNode()</code></strong>\n  constructor of the <a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a>\n  creates a new <a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a> object, which represents a simple\n  low-order filter.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new BiquadFilterNode(context, options)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"context\"><code>context</code></dt>\n  <dd>\n    <p>A reference to an <a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a>.</p>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object with the following properties:</p>\n    <dl>\n      <dt id=\"type\"><code>type</code></dt>\n      <dd>\n        <p>\n          One of the following strings. The meaning\n          of the other options depends on the value of <code>type</code>.\n        </p>\n        <dl>\n          <dt id=\"lowpass\"><code>lowpass</code></dt>\n          <dd>\n            <p>The default. Allows frequencies below a cutoff frequency to pass through, and attenuates frequencies above the cutoff. This is a standard second-order resonant lowpass filter with 12dB/octave rolloff. With this type of filter, the meaning of the other options are as follows:</p>\n            <ul>\n              <li><code>Q</code>: controls how peaked the response will be at the cutoff frequency. A large value makes the response more peaked. Please note that for this filter type, this value is not a traditional Q, but is a resonance value in decibels.</li>\n              <li><code>frequency</code>: the cutoff frequency.</li>\n              <li><code>gain</code>: not used.</li>\n            </ul>\n          </dd>\n          <dt id=\"highpass\"><code>highpass</code></dt>\n          <dd>\n            <p>\n              A highpass filter is the opposite of a lowpass filter.\n              Frequencies above the cutoff frequency are passed through, but frequencies below the cutoff are attenuated. It implements a standard second-order resonant highpass filter with 12dB/octave rolloff. With this type of filter, the meaning of the other options are as follows:\n            </p>\n            <ul>\n              <li><code>Q</code>: controls how peaked the response will be at the cutoff frequency. A large value makes the response more peaked. Please note that for this filter type, this value is not a traditional Q, but is a resonance value in decibels.</li>\n              <li><code>frequency</code>: the cutoff frequency.</li>\n              <li><code>gain</code>: not used.</li>\n            </ul>\n          </dd>\n          <dt id=\"bandpass\"><code>bandpass</code></dt>\n          <dd>\n            <p>\n              A bandpass filter allows a range of frequencies to pass\n              through and attenuates the frequencies below and above this frequency range. It implements a second-order bandpass filter. With this type of filter, the meaning of the other options are as follows:\n            </p>\n            <ul>\n              <li><code>Q</code>: controls the width of the band. The width becomes narrower as the Q value increases.</li>\n              <li><code>frequency</code>: the center of the frequency band.</li>\n              <li><code>gain</code>: not used.</li>\n            </ul>\n          </dd>\n          <dt id=\"lowshelf\"><code>lowshelf</code></dt>\n          <dd>\n            <p>\n              The lowshelf filter allows all frequencies through, but adds\n              a boost (or attenuation) to the lower frequencies. It implements a second-order lowshelf filter. With this type of filter, the meaning of the other options are as follows:\n            </p>\n            <ul>\n              <li><code>Q</code>: not used.</li>\n              <li><code>frequency</code>: the upper limit of the frequencies where the boost, or attenuation, is applied.</li>\n              <li><code>gain</code>: the boost, in dB, to be applied. If the value is negative, the frequencies are attenuated.</li>\n            </ul>\n          </dd>\n          <dt id=\"highshelf\"><code>highshelf</code></dt>\n          <dd>\n            <p>\n              The highshelf filter is the opposite of the lowshelf filter\n              and allows all frequencies through, but adds a boost to the higher frequencies. It implements a second-order highshelf filter. With this type of filter, the meaning of the other options are as follows:\n            </p>\n            <ul>\n              <li><code>Q</code>: not used.</li>\n              <li><code>frequency</code>: the lower limit of the frequencies where the boost, or attenuation, is applied.</li>\n              <li><code>gain</code>: the boost, in dB, to be applied. If the value is negative, the frequencies are attenuated.</li>\n            </ul>\n          </dd>\n          <dt id=\"peaking\"><code>peaking</code></dt>\n          <dd>\n            <p>\n              The peaking filter allows all frequencies through, adding a\n              boost, or attenuation, to a range of frequencies. With this type of filter, the meaning of the other options are as follows:\n            </p>\n            <ul>\n              <li><code>Q</code>: the width of the band of frequencies that are boosted. A large value implies a narrow width.</li>\n              <li><code>frequency</code>: the center frequency of the boost range.</li>\n              <li><code>gain</code>: the boost, in dB, to be applied. If the value is negative, the frequencies are attenuated.</li>\n            </ul>\n          </dd>\n          <dt id=\"notch\"><code>notch</code></dt>\n          <dd>\n            <p>The notch filter (also known as a band-stop, or band-rejection filter) is the opposite of a bandpass filter. It allows all frequencies through, except for a set of frequencies. With this type of filter, the meaning of the other options are as follows:</p>\n            <ul>\n              <li><code>Q</code>: the width of the band of frequencies that are attenuated. A large value implies a narrow width.</li>\n              <li><code>frequency</code>: the center frequency of the attenuation range.</li>\n              <li><code>gain</code>: not used.</li>\n            </ul>\n          </dd>\n          <dt id=\"allpass\"><code>allpass</code></dt>\n          <dd>\n            <p>\n              An allpass filter allows all frequencies through, but changes\n              the phase relationship between the various frequencies. It implements a second-order allpass filter. With this type of filter, the meaning of the other options are as follows:\n            </p>\n            <ul>\n              <li><code>Q</code>: the sharpness of the phase transition at the center frequency. A larger value implies a sharper transition and a larger group delay.</li>\n              <li><code>frequency</code>: the frequency where the center of the phase transition occurs. Viewed another way, this is the frequency with maximal group delay.</li>\n              <li><code>gain</code>: not used.</li>\n            </ul>\n          </dd>\n        </dl>\n      </dd>\n      <dt id=\"q\"><code>Q</code></dt>\n      <dd>\n        <p>Defaults to 1. The meaning of this option depends on the value of <code>type</code>.</p>\n      </dd>\n      <dt id=\"detune\"><code>detune</code></dt>\n      <dd>\n        <p>Defaults to 0.</p>\n      </dd>\n      <dt id=\"frequency\"><code>frequency</code></dt>\n      <dd>\n        <p>Defaults to 350.</p>\n      </dd>\n      <dt id=\"gain\"><code>gain</code></dt>\n      <dd>\n        <p>Defaults to 0. The meaning of this option depends on the value of <code>type</code>.</p>\n      </dd>\n      <dt id=\"channelcount\"><code>channelCount</code></dt>\n      <dd>\n        <p>\n          Represents an integer used to determine how many channels are used when <a href=\"/en-US/docs/Web/API/Web_Audio_API/Basic_concepts_behind_Web_Audio_API#up-mixing_and_down-mixing\">up-mixing and down-mixing</a> connections to any inputs to the node. (See\n          <a href=\"/en-US/docs/Web/API/AudioNode/channelCount\"><code>AudioNode.channelCount</code></a> for more information.) Its usage and precise\n          definition depend on the value of <code>channelCountMode</code>.\n        </p>\n      </dd>\n      <dt id=\"channelcountmode\"><code>channelCountMode</code></dt>\n      <dd>\n        <p>\n          Represents an enumerated value describing the way channels must be matched between\n          the node's inputs and outputs. (See <a href=\"/en-US/docs/Web/API/AudioNode/channelCountMode\"><code>AudioNode.channelCountMode</code></a> for more\n          information including default values.)\n        </p>\n      </dd>\n      <dt id=\"channelinterpretation\"><code>channelInterpretation</code></dt>\n      <dd>\n        <p>\n          Represents an enumerated value describing the meaning of the channels. This\n          interpretation will define how audio <a href=\"/en-US/docs/Web/API/Web_Audio_API/Basic_concepts_behind_Web_Audio_API#up-mixing_and_down-mixing\">up-mixing and down-mixing</a> will happen.\n          The possible values are <code>\"speakers\"</code> or <code>\"discrete\"</code>. (See\n          <a href=\"/en-US/docs/Web/API/AudioNode/channelCountMode\"><code>AudioNode.channelCountMode</code></a> for more information including default\n          values.)\n        </p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A new <a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a> object instance.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#dom-biquadfilternode-biquadfilternode-context-options","title":"Web Audio API"}],"query":"api.BiquadFilterNode.BiquadFilterNode"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.BiquadFilterNode.BiquadFilterNode","dataURL":"/en-US/docs/Web/API/BiquadFilterNode/BiquadFilterNode/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The BiquadFilterNode()\n  constructor of the Web Audio API\n  creates a new BiquadFilterNode object, which represents a simple\n  low-order filter.","popularity":0,"modified":"2022-09-13T05:19:21.000Z","source":{"folder":"en-us/web/api/biquadfilternode/biquadfilternode","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/biquadfilternode/biquadfilternode/index.md","last_commit_url":"https://github.com/mdn/content/commit/9ad07c43f42e14278a4040fd554af33699aea632","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/BiquadFilterNode","title":"BiquadFilterNode"},{"uri":"/en-US/docs/Web/API/BiquadFilterNode/BiquadFilterNode","title":"BiquadFilterNode()"}],"pageTitle":"BiquadFilterNode() - Web APIs | MDN","noIndexing":false}}