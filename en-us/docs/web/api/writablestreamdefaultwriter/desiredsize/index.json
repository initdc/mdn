{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WritableStreamDefaultWriter.desiredSize","mdn_url":"/en-US/docs/Web/API/WritableStreamDefaultWriter/desiredSize","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Streams_API\">Streams API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter/closed\"><code>closed</code></a></li><li><em><code>desiredSize</code></em></li><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter/ready\"><code>ready</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter/abort\"><code>abort()</code></a></li><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter/close\"><code>close()</code></a></li><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter/releaseLock\"><code>releaseLock()</code></a></li><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter/write\"><code>write()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Streams</summary><ol><li><a href=\"/en-US/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code></a></li><li><a href=\"/en-US/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/body\"><code>Response.body</code></a></li><li><a href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a></li><li><a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>desiredSize</code></strong> read-only property of the\n  <a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> interface returns the desired size required\n  to fill the stream's internal queue.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>An integer. Note that this can be negative if the queue is over-full.</p>\n<p>\n  The value will be <code>null</code> if the stream cannot be successfully written to\n  (due to either being errored, or having an abort queued up), and zero if the stream is\n  closed.\n</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>The writer's lock is released.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> writableStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WritableStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">chunk</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> queuingStrategy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">const</span> writer <span class=\"token operator\">=</span> writableStream<span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token comment\">// return stream's desired size</span>\n<span class=\"token keyword\">let</span> size <span class=\"token operator\">=</span> writer<span class=\"token punctuation\">.</span>desiredSize<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://streams.spec.whatwg.org/#ref-for-default-writer-desired-size⑥","title":"Streams Standard"}],"query":"api.WritableStreamDefaultWriter.desiredSize"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.WritableStreamDefaultWriter.desiredSize","dataURL":"/en-US/docs/Web/API/WritableStreamDefaultWriter/desiredSize/bcd.json"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The desiredSize read-only property of the\n  WritableStreamDefaultWriter interface returns the desired size required\n  to fill the stream's internal queue.","popularity":0,"modified":"2022-09-09T05:19:45.000Z","other_translations":[{"title":"WritableStreamDefaultWriter.desiredSize","locale":"ja","native":"日本語"},{"title":"WritableStreamDefaultWriter.desiredSize","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/writablestreamdefaultwriter/desiredsize","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/writablestreamdefaultwriter/desiredsize/index.md","last_commit_url":"https://github.com/mdn/content/commit/f7dae62645a2c735ed6f6ed63f664bf279fdfc4b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WritableStreamDefaultWriter","title":"WritableStreamDefaultWriter"},{"uri":"/en-US/docs/Web/API/WritableStreamDefaultWriter/desiredSize","title":"WritableStreamDefaultWriter.desiredSize"}],"pageTitle":"WritableStreamDefaultWriter.desiredSize - Web APIs | MDN","noIndexing":false}}