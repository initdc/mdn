{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"NDEFRecord.toRecords()","mdn_url":"/en-US/docs/Web/API/NDEFRecord/toRecords","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/NDEFRecord\"><code>NDEFRecord</code></a></strong></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>toRecords()</code></strong>\n  method of the <a href=\"/en-US/docs/Web/API/NDEFRecord\"><code>NDEFRecord</code></a> interface converts\n  <a href=\"/en-US/docs/Web/API/NDEFRecord/data\"><code>NDEFRecord.data</code></a> to a sequence of records based on\n  <a href=\"/en-US/docs/Web/API/NDEFRecord/recordType\"><code>NDEFRecord.recordType</code></a>, and returns the result. This allows\n  parsing the payloads of record types which may contain nested records, such\n  as smart poster and external type records.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">toRecords()\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A list of <a href=\"/en-US/docs/Web/API/NDEFRecord\"><code>NDEFRecord</code></a>s.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":false,"content":"<dl>\n  <dt id=\"notsupported\"><code>NotSupported</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      Indicates that the <a href=\"/en-US/docs/Glossary/User_agent\">User Agent</a> does not know how to parse this combination of\n      <a href=\"/en-US/docs/Web/API/NDEFRecord/data\"><code>NDEFRecord.data</code></a> and <a href=\"/en-US/docs/Web/API/NDEFRecord/recordType\"><code>NDEFRecord.recordType</code></a>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Read an external record with an NDEF message as payload</p>\n<p>\n  The example uses external type records to create application-defined records.\n  These records may contain an <a href=\"/en-US/docs/Web/API/NDEFMessage\"><code>NDEFMessage</code></a> as payload, with its own\n  <a href=\"/en-US/docs/Web/API/NDEFRecord\"><code>NDEFRecord</code></a> objects, including local types that are used in the\n  context of the application. Notice that the smart poster record type also\n  contains an NDEF message as payload.\n</p>\n<p>\n  Because NDEF gives no guarantee on the ordering of records, using an external\n  type record with an NDEF message as payload can be useful for encapsulating\n  related data.\n</p>\n<p>\n  This example shows how to read an external record for social posts, which\n  contains an <a href=\"/en-US/docs/Web/API/NDEFMessage\"><code>NDEFMessage</code></a>, containing a text record and a record\n  with the local type \"act\" (action), with a definition borrowed from smart\n  poster, but used in local application context.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> ndefReader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NDEFReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> ndefReader<span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nndefReader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreading</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> externalRecord <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">record</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> record<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"example.com:smart-poster\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> action<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> record <span class=\"token keyword\">of</span> externalRecord<span class=\"token punctuation\">.</span><span class=\"token function\">toRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>recordType <span class=\"token operator\">===</span> <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>encoding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      text <span class=\"token operator\">=</span> decoder<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span>recordType <span class=\"token operator\">===</span> <span class=\"token string\">\":act\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      action <span class=\"token operator\">=</span> record<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">getUint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token comment\">// do the action</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Post \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>text<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" to timeline</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token comment\">// save for later</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Save \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>text<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" as a draft</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token comment\">// open for editing</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Show editable post with \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>text<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/web-nfc/#dom-ndefrecord-torecords","title":"Web NFC API"}],"query":"api.NDEFRecord.toRecords"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.NDEFRecord.toRecords","dataURL":"/en-US/docs/Web/API/NDEFRecord/toRecords/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Exceptions","id":"exceptions"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The toRecords()\n  method of the NDEFRecord interface converts\n  NDEFRecord.data to a sequence of records based on\n  NDEFRecord.recordType, and returns the result. This allows\n  parsing the payloads of record types which may contain nested records, such\n  as smart poster and external type records.","popularity":0,"modified":"2022-09-13T06:09:49.000Z","other_translations":[{"title":"NDEFRecord.toRecords()","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/ndefrecord/torecords","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/ndefrecord/torecords/index.md","last_commit_url":"https://github.com/mdn/content/commit/2b8f5d9a29f00aea5d2edfa78d1fb90c51752858","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/NDEFRecord","title":"NDEFRecord"},{"uri":"/en-US/docs/Web/API/NDEFRecord/toRecords","title":"NDEFRecord.toRecords()"}],"pageTitle":"NDEFRecord.toRecords() - Web APIs | MDN","noIndexing":false}}