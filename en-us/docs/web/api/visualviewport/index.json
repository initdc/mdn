{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"VisualViewport","mdn_url":"/en-US/docs/Web/API/VisualViewport","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Visual_Viewport_API\">Visual Viewport API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/VisualViewport\"><code>VisualViewport</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/VisualViewport/height\"><code>height</code></a></li><li><a href=\"/en-US/docs/Web/API/VisualViewport/offsetleft\"><code>offsetleft</code></a></li><li><a href=\"/en-US/docs/Web/API/VisualViewport/offsetTop\"><code>offsetTop</code></a></li><li><a href=\"/en-US/docs/Web/API/VisualViewport/pageLeft\"><code>pageLeft</code></a></li><li><a href=\"/en-US/docs/Web/API/VisualViewport/pageTop\"><code>pageTop</code></a></li><li><a href=\"/en-US/docs/Web/API/VisualViewport/scale\"><code>scale</code></a></li><li><a href=\"/en-US/docs/Web/API/VisualViewport/width\"><code>width</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Visual Viewport</summary><ol><li><a href=\"/en-US/docs/Web/API/Window/visualViewport\"><code>Window.visualViewport</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>VisualViewport</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Visual_Viewport_API\">Visual Viewport API</a> represents the visual viewport for a given window. For a page containing iframes, each iframe, as well as the containing page, will have a unique window object. Each window on a page will have a unique <code>VisualViewport</code> representing the properties associated with that window.</p>\n<p>You can get a window's visual viewport using <a href=\"/en-US/docs/Web/API/Window/visualViewport\"><code>Window.visualViewport</code></a>.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> Only the top-level window has a visual viewport that's distinct from the layout viewport. Therefore, it's generally only the <code>VisualViewport</code> object of the top-level window that's useful. For an <a href=\"/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, visual viewport metrics like <a href=\"/en-US/docs/Web/API/VisualViewport/width\"><code>VisualViewport.width</code></a> always correspond to layout viewport metrics like <a href=\"/en-US/docs/Web/API/Element/clientWidth\" title=\"document.documentElement.clientWidth\"><code>document.documentElement.clientWidth</code></a>.</p>\n</div><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/VisualViewport\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"112\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"174\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      VisualViewport\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em><code>VisualViewport</code> also inherits properties from its parent, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"visualviewport.offsetleft\"><a href=\"/en-US/docs/Web/API/VisualViewport/offsetleft\"><code>VisualViewport.offsetLeft</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the offset of the left edge of the visual viewport from the left edge of the layout viewport in CSS pixels.</p>\n  </dd>\n  <dt id=\"visualviewport.offsettop\"><a href=\"/en-US/docs/Web/API/VisualViewport/offsetTop\"><code>VisualViewport.offsetTop</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the offset of the top edge of the visual viewport from the top edge of the layout viewport in CSS pixels.</p>\n  </dd>\n  <dt id=\"visualviewport.pageleft\"><a href=\"/en-US/docs/Web/API/VisualViewport/pageLeft\"><code>VisualViewport.pageLeft</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the x coordinate of the visual viewport relative to the initial containing block origin of the top edge in CSS pixels.</p>\n  </dd>\n  <dt id=\"visualviewport.pagetop\"><a href=\"/en-US/docs/Web/API/VisualViewport/pageTop\"><code>VisualViewport.pageTop</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the y coordinate of the visual viewport relative to the initial containing block origin of the top edge in CSS pixels.</p>\n  </dd>\n  <dt id=\"visualviewport.width\"><a href=\"/en-US/docs/Web/API/VisualViewport/width\"><code>VisualViewport.width</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the width of the visual viewport in CSS pixels.</p>\n  </dd>\n  <dt id=\"visualviewport.height\"><a href=\"/en-US/docs/Web/API/VisualViewport/height\"><code>VisualViewport.height</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the height of the visual viewport in CSS pixels.</p>\n  </dd>\n  <dt id=\"visualviewport.scale\"><a href=\"/en-US/docs/Web/API/VisualViewport/scale\"><code>VisualViewport.scale</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the pinch-zoom scaling factor applied to the visual viewport.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<p>Listen to these events using <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a> or by assigning an event listener to the relevant <code>oneventname</code> property of this interface.</p>\n<dl>\n  <dt id=\"resize\"><a href=\"/en-US/docs/Web/API/VisualViewport/resize_event\"><code>resize</code></a></dt>\n  <dd>\n    <p>\n      Fired when the visual viewport is resized.\n      Also available via the <code>onresize</code> property.\n    </p>\n  </dd>\n  <dt id=\"scroll\"><a href=\"/en-US/docs/Web/API/VisualViewport/scroll_event\"><code>scroll</code></a></dt>\n  <dd>\n    <p>\n      Fired when the visual viewport is scrolled.\n      Also available via the <code>onscroll</code> property.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"hiding_an_overlaid_box_on_zoom","title":"Hiding an overlaid box on zoom","isH3":true,"content":"<p>This example, taken from the <a href=\"https://github.com/WICG/visual-viewport\" class=\"external\" rel=\" noopener\">Visual Viewport README</a>, shows how to write a simple bit of code that will hide an overlaid box (which might contain an advert, say) when the user zooms in. This is a nice way to improve the user experience when zooming in on pages. A <a href=\"https://wicg.github.io/visual-viewport/examples/hide-on-zoom.html\" class=\"external\" rel=\" noopener\">live sample</a> is also available.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> bottomBar <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bottombar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> viewport <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>visualViewport<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">resizeHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  bottomBar<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> viewport<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">&gt;</span> <span class=\"token number\">1.3</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"none\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"block\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span>visualViewport<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> resizeHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"simulating_position_device-fixed","title":"Simulating position: device-fixed","isH3":true,"content":"<p>This example, also taken from the <a href=\"https://github.com/WICG/visual-viewport\" class=\"external\" rel=\" noopener\">Visual Viewport README</a>, shows how to use this API to simulate <code>position: device-fixed</code>, which fixes elements to the visual viewport. A <a href=\"https://wicg.github.io/visual-viewport/examples/fixed-to-viewport.html\" class=\"external\" rel=\" noopener\">live sample</a> is also available.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> bottomBar <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bottombar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> viewport <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>visualViewport<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">viewportHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> layoutViewport <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'layoutViewport'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Since the bar is position: fixed we need to offset it by the visual</span>\n  <span class=\"token comment\">// viewport's offset from the layout viewport origin.</span>\n  <span class=\"token keyword\">const</span> offsetLeft <span class=\"token operator\">=</span> viewport<span class=\"token punctuation\">.</span>offsetLeft<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> offsetTop <span class=\"token operator\">=</span> viewport<span class=\"token punctuation\">.</span>height\n              <span class=\"token operator\">-</span> layoutViewport<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height\n              <span class=\"token operator\">+</span> viewport<span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// You could also do this by setting style.left and style.top if you</span>\n  <span class=\"token comment\">// use width: 100% instead.</span>\n  bottomBar<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>offsetLeft<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>offsetTop<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px) scale(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> viewport<span class=\"token punctuation\">.</span>scale<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nwindow<span class=\"token punctuation\">.</span>visualViewport<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> viewportHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>visualViewport<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> viewportHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> This technique should be used with care; emulating <code>position: device-fixed</code> in this way can result in the fixed element flickering during scrolling.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/visual-viewport/#the-visualviewport-interface","title":"Visual Viewport API"}],"query":"api.VisualViewport"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.VisualViewport","dataURL":"/en-US/docs/Web/API/VisualViewport/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/bokand/bokand.github.io/blob/master/web_viewports_explainer.md\" class=\"external\" rel=\" noopener\">Web Viewports Explainer</a> — useful explanation of web viewports concepts, including the difference between visual viewport and layout viewport.</li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Events","id":"events"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The VisualViewport interface of the Visual Viewport API represents the visual viewport for a given window. For a page containing iframes, each iframe, as well as the containing page, will have a unique window object. Each window on a page will have a unique VisualViewport representing the properties associated with that window.","popularity":0.0013,"modified":"2022-09-09T05:19:45.000Z","other_translations":[{"title":"VisualViewport","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/visualviewport","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/visualviewport/index.md","last_commit_url":"https://github.com/mdn/content/commit/f7dae62645a2c735ed6f6ed63f664bf279fdfc4b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/VisualViewport","title":"VisualViewport"}],"pageTitle":"VisualViewport - Web APIs | MDN","noIndexing":false}}