{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RTCIceTransport: gatheringstatechange event","mdn_url":"/en-US/docs/Web/API/RTCIceTransport/gatheringstatechange_event","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/component\"><code>component</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/gatheringState\"><code>gatheringState</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/role\"><code>role</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/state\"><code>state</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/getLocalCandidates\"><code>getLocalCandidates()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/getLocalParameters\"><code>getLocalParameters()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/getRemoteCandidates\"><code>getRemoteCandidates()</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport/getSelectedCandidatePair\"><code>getSelectedCandidatePair()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>A <strong><code>gatheringstatechange</code></strong> event is sent to an <a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> when its <a href=\"/en-US/docs/Glossary/ICE\">ICE</a> candidate gathering state changes.</p>\n<p>The gathering state, whose actual status can be found in the transport object's <a href=\"/en-US/docs/Web/API/RTCIceTransport/gatheringState\" title=\"gatheringState\"><code>gatheringState</code></a> property, indicates whether or not the ICE agent has begun gathering candidates, and if so, if it has finished doing so.</p>\n<p>The key difference between <code>gatheringstatechange</code> and <a href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\" title=\"icegatheringstatechange\"><code>icegatheringstatechange</code></a> is that the latter represents the overall state of the connection including every <a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a> used by every <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> and every <a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a> on the entire connection. In contrast, <code>gatheringstatechange</code> represents changes to the candidate gathering state for a single transport.</p>\n<p>This event is not cancelable and does not bubble.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<p>Use the event name in methods like <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, or set an event handler property.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gatheringstatechange'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function-variable function\">ongatheringstatechange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"event_type","title":"Event type","isH3":false,"content":"<p>A generic <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>This example creates a handler for <code>gatheringstatechange</code> events on each <a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a> associated with a given <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>. Here, the <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a> method is called to add a listener for <code>gatheringstatechange</code> events:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>pc<span class=\"token punctuation\">.</span><span class=\"token function\">getSenders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sender</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  sender<span class=\"token punctuation\">.</span>transport<span class=\"token punctuation\">.</span>iceTransport<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gatheringstatechange\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> transport <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transport<span class=\"token punctuation\">.</span>gatheringState <span class=\"token operator\">===</span> <span class=\"token string\">\"complete\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* this transport has finished gathering candidates,\n        but others may still be working on it */</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Likewise, you can use the <code>ongatheringstatechange</code> event handler property:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>pc<span class=\"token punctuation\">.</span><span class=\"token function\">getSenders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sender</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  sender<span class=\"token punctuation\">.</span>transport<span class=\"token punctuation\">.</span>iceTransport<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ongatheringstatechange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> transport <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>transport<span class=\"token punctuation\">.</span>gatheringState <span class=\"token operator\">===</span> <span class=\"token string\">\"complete\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* this transport has finished gathering candidates,\n         but others may still be working on it */</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-pc/#event-icetransport-gatheringstatechange","title":"WebRTC 1.0: Real-Time Communication Between Browsers"}],"query":"api.RTCIceTransport.gatheringstatechange_event"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCIceTransport.gatheringstatechange_event","dataURL":"/en-US/docs/Web/API/RTCIceTransport/gatheringstatechange_event/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API/Connectivity\">WebRTC connectivity</a></li>\n</ul>"}},{"type":"prose","value":{"id":"related_rtcicetransport_events","title":"Related RTCIceTransport events","isH3":true,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/RTCIceTransport/statechange_event\" title=\"statechange\"><code>statechange</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event\" title=\"selectedcandidatepairchange\"><code>selectedcandidatepairchange</code></a></li>\n</ul>"}},{"type":"prose","value":{"id":"related_rtcpeerconnection_events","title":"Related RTCPeerConnection events","isH3":true,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event\" title=\"negotiationneeded\"><code>negotiationneeded</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event\" title=\"signalingstatechange\"><code>signalingstatechange</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event\" title=\"iceconnectionstatechange\"><code>iceconnectionstatechange</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\" title=\"icegatheringstatechange\"><code>icegatheringstatechange</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event\" title=\"connectionstatechange\"><code>connectionstatechange</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Event type","id":"event_type"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"A gatheringstatechange event is sent to an RTCIceTransport when its ICE candidate gathering state changes.","popularity":0,"modified":"2022-09-09T05:18:40.000Z","source":{"folder":"en-us/web/api/rtcicetransport/gatheringstatechange_event","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/rtcicetransport/gatheringstatechange_event/index.md","last_commit_url":"https://github.com/mdn/content/commit/e0e09b1df51489867f2e74c18586d168ba5e00d1","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCIceTransport","title":"RTCIceTransport"},{"uri":"/en-US/docs/Web/API/RTCIceTransport/gatheringstatechange_event","title":"RTCIceTransport: gatheringstatechange event"}],"pageTitle":"RTCIceTransport: gatheringstatechange event - Web APIs | MDN","noIndexing":false}}