{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MIDIPort","mdn_url":"/en-US/docs/Web/API/MIDIPort","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_MIDI_API\">Web MIDI API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/MIDIInputMap\"><code>MIDIInputMap</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIOutputMap\"><code>MIDIOutputMap</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIAccess\"><code>MIDIAccess</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIPort\"><code>MIDIPort</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIInput\"><code>MIDIInput</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIOutput\"><code>MIDIOutput</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIMessageEvent\"><code>MIDIMessageEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIConnectionEvent\"><code>MIDIConnectionEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/requestMIDIAccess\"><code>Navigator.requestMIDIAccess()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>MIDIPort</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Web_MIDI_API\">Web MIDI API</a> represents a MIDI input or output port.</p>\n<p>A <code>MIDIPort</code> instance is created when a new MIDI device is connected. Therefore it has no constructor.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/MIDIPort\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"75\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"155.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      MIDIPort\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"midiport.id\"><a href=\"/en-US/docs/Web/API/MIDIPort/id\"><code>MIDIPort.id</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a string containing the unique ID of the port.</p>\n  </dd>\n  <dt id=\"midiport.manufacturer\"><a href=\"/en-US/docs/Web/API/MIDIPort/manufacturer\"><code>MIDIPort.manufacturer</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a string containing the manufacturer of the port.</p>\n  </dd>\n  <dt id=\"midiport.name\"><a href=\"/en-US/docs/Web/API/MIDIPort/name\"><code>MIDIPort.name</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a string containing the system name of the port.</p>\n  </dd>\n  <dt id=\"midiport.type\"><a href=\"/en-US/docs/Web/API/MIDIPort/type\"><code>MIDIPort.type</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a string containing the type of the port, one of:</p>\n    <dl>\n      <dt id=\"input\"><code>\"input\"</code></dt>\n      <dd>\n        <p>The <code>MIDIPort</code> is an input port.</p>\n      </dd>\n      <dt id=\"output\"><code>\"output\"</code></dt>\n      <dd>\n        <p>The <code>MIDIPort</code> is an output port.</p>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"midiport.version\"><a href=\"/en-US/docs/Web/API/MIDIPort/version\"><code>MIDIPort.version</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a string containing the version of the port.</p>\n  </dd>\n  <dt id=\"midiport.state\"><a href=\"/en-US/docs/Web/API/MIDIPort/state\"><code>MIDIPort.state</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a string containing the state of the port, one of:</p>\n    <dl>\n      <dt id=\"disconnected\"><code>\"disconnected\"</code></dt>\n      <dd>\n        <p>The device that this <code>MIDIPort</code> represents is disconnected from the system.</p>\n      </dd>\n      <dt id=\"connected\"><code>\"connected\"</code></dt>\n      <dd>\n        <p>The device that this <code>MIDIPort</code> represents is currently connected.</p>\n      </dd>\n    </dl>\n  </dd>\n  <dt id=\"midiport.connection\"><a href=\"/en-US/docs/Web/API/MIDIPort/connection\"><code>MIDIPort.connection</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a string containing the connection state of the port, one of:</p>\n    <dl>\n      <dt id=\"open\"><code>\"open\"</code></dt>\n      <dd>\n        <p>The device that this <code>MIDIPort</code> represents has been opened and is available.</p>\n      </dd>\n      <dt id=\"closed\"><code>\"closed\"</code></dt>\n      <dd>\n        <p>The device that this <code>MIDIPort</code> represents has not been opened, or has been closed.</p>\n      </dd>\n      <dt id=\"pending\"><code>\"pending\"</code></dt>\n      <dd>\n        <p>The device that this <code>MIDIPort</code> represents has been opened but has subsequently disconnected .</p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>This interface also inherits methods from <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"midiport.open\"><a href=\"/en-US/docs/Web/API/MIDIPort/open\"><code>MIDIPort.open()</code></a></dt>\n  <dd>\n    <p>Makes the MIDI device connected to this <code>MIDIPort</code> explicitly available, and returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves once access to the port has been successful.</p>\n  </dd>\n  <dt id=\"midiport.close\"><a href=\"/en-US/docs/Web/API/MIDIPort/close\"><code>MIDIPort.close()</code></a></dt>\n  <dd>\n    <p>Makes the MIDI device connected to this <code>MIDIPort</code> unavailable, changing the <a href=\"/en-US/docs/Web/API/MIDIPort/state\" title=\"state\"><code>state</code></a> from <code>\"open\"</code> to <code>\"closed\"</code>. This returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves once the port has been closed.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<dl>\n  <dt id=\"midiport.statechange_event\"><a href=\"/en-US/docs/Web/API/MIDIPort/statechange_event\"><code>MIDIPort.statechange_event</code></a></dt>\n  <dd>\n    <p>Called when an existing port changes its state or connection.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"list_ports_and_their_information","title":"List ports and their information","isH3":true,"content":"<p>The following example lists input and output ports, and displays information about them using properties of <code>MIDIPort</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">listInputsAndOutputs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">midiAccess</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> entry <span class=\"token keyword\">of</span> midiAccess<span class=\"token punctuation\">.</span>inputs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Input port [type:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>input<span class=\"token punctuation\">.</span>type<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'] id:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>input<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' manufacturer: '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>input<span class=\"token punctuation\">.</span>manufacturer<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' name: '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>input<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' version: '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>input<span class=\"token punctuation\">.</span>version<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> entry <span class=\"token keyword\">of</span> midiAccess<span class=\"token punctuation\">.</span>outputs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Output port [type:'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>output<span class=\"token punctuation\">.</span>type<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'] id: '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>output<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' manufacturer: '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>output<span class=\"token punctuation\">.</span>manufacturer<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' name: '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>output<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' version: '</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>output<span class=\"token punctuation\">.</span>version<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">'</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"add_available_ports_to_a_select_list","title":"Add available ports to a select list","isH3":true,"content":"<p>The following example takes the list of input ports and adds them to a select list, in order that a user can choose the device they want to use.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>inputs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">port<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> opt <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"option\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  opt<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> port<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"inputportselector\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>opt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-midi-api/#MIDIPort","title":"Web MIDI API"}],"query":"api.MIDIPort"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MIDIPort","dataURL":"/en-US/docs/Web/API/MIDIPort/bcd.json"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Events","id":"events"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The MIDIPort interface of the Web MIDI API represents a MIDI input or output port.","popularity":0.0002,"modified":"2022-09-09T05:17:24.000Z","source":{"folder":"en-us/web/api/midiport","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/midiport/index.md","last_commit_url":"https://github.com/mdn/content/commit/4b4638246aad5d39b9a2e5c572b179b4c39c0a84","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MIDIPort","title":"MIDIPort"}],"pageTitle":"MIDIPort - Web APIs | MDN","noIndexing":false}}