{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MIDIPort.open()","mdn_url":"/en-US/docs/Web/API/MIDIPort/open","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_MIDI_API\">Web MIDI API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/MIDIInputMap\"><code>MIDIInputMap</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIOutputMap\"><code>MIDIOutputMap</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIAccess\"><code>MIDIAccess</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIPort\"><code>MIDIPort</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIInput\"><code>MIDIInput</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIOutput\"><code>MIDIOutput</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIMessageEvent\"><code>MIDIMessageEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MIDIConnectionEvent\"><code>MIDIConnectionEvent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/requestMIDIAccess\"><code>Navigator.requestMIDIAccess()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>open()</code></strong> method of the <a href=\"/en-US/docs/Web/API/MIDIPort\"><code>MIDIPort</code></a> interface makes the MIDI device connected to this <code>MIDIPort</code> explicitly available.</p>\n<p>If the port is successfully opened a new <a href=\"/en-US/docs/Web/API/MIDIConnectionEvent\"><code>MIDIConnectionEvent</code></a> is queued to the <a href=\"/en-US/docs/Web/API/MIDIPort/statechange_event\"><code>MIDIPort.onstatechange</code></a> and <a href=\"/en-US/docs/Web/API/MIDIAccess/statechange_event\"><code>MIDIAccess.onstatechange</code></a> event handlers, and the <a href=\"/en-US/docs/Web/API/MIDIPort/connection\"><code>MIDIPort.connection</code></a> property is changed to <code>\"open\"</code>.</p>\n<p>If the port is already open when this method is called, then the promise will resolve successfully.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">open()\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves once access to the port has been successfully obtained.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidaccesserror\"><code>InvalidAccessError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>The promise is rejected with this error if the port is unavailable and cannot be opened.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following example shows an output port being opened.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> midiAccess<span class=\"token punctuation\">.</span>outputs<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>portID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\noutput<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// opens the port</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-midi-api/#dom-midiport-open","title":"Web MIDI API"}],"query":"api.MIDIPort.open"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MIDIPort.open","dataURL":"/en-US/docs/Web/API/MIDIPort/open/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The open() method of the MIDIPort interface makes the MIDI device connected to this MIDIPort explicitly available.","popularity":0,"modified":"2022-09-13T05:54:54.000Z","source":{"folder":"en-us/web/api/midiport/open","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/midiport/open/index.md","last_commit_url":"https://github.com/mdn/content/commit/b7556b71e1fc3e89057671b372871e9f33d3f0b8","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MIDIPort","title":"MIDIPort"},{"uri":"/en-US/docs/Web/API/MIDIPort/open","title":"MIDIPort.open()"}],"pageTitle":"MIDIPort.open() - Web APIs | MDN","noIndexing":false}}