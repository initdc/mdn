{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"HTMLSlotElement: slotchange event","mdn_url":"/en-US/docs/Web/API/HTMLSlotElement/slotchange_event","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLSlotElement/name\"><code>name</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLSlotElement/assign\"><code>assign()</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLSlotElement/assignedElements\"><code>assignedElements()</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLSlotElement/assignedNodes\"><code>assignedNodes()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><em><code>slotchange</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a></li><li><a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>slotchange</code></strong> event is fired on an <a href=\"/en-US/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a> instance (<a href=\"/en-US/docs/Web/HTML/Element/slot\"><code>&lt;slot&gt;</code></a> element) when the node(s) contained in that slot change.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> the <code>slotchange</code> event doesn't fire if the children of a slotted node change — only if you change (e.g. add or delete) the actual nodes themselves.</p>\n</div>\n<p>In order to trigger a <strong>slotchange</strong> event, one has to set or remove the <code>slot</code> attribute.</p>\n<p>This event is not cancelable.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<p>Use the event name in methods like <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, or set an event handler property.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'slotchange'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function-variable function\">onslotchange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"event_type","title":"Event type","isH3":false,"content":"<p>A generic <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>element<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'slot'</span><span class=\"token punctuation\">,</span> slotName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// element.assignedSlot = $slot</span>\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'slot'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// element.assignedSlot = null</span>\n</code></pre></div>\n<p>The following snippet is taken from our <a href=\"https://github.com/mdn/web-components-examples/tree/main/slotchange\" class=\"external\" rel=\" noopener\">slotchange example</a> (<a href=\"https://mdn.github.io/web-components-examples/slotchange/\" class=\"external\" rel=\" noopener\">see it live also</a>).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> slots <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shadowRoot<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'slot'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nslots<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'slotchange'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> nodes <span class=\"token operator\">=</span> slots<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">assignedNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Element in Slot \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>slots<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" changed to \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nodes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>outerHTML<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\".</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Here we grab references to all the <code>&lt;slot&gt;</code>s, then add a <code>slotchange</code> event listener to the template's second slot — which is the one which has its contents changed in the example.</p>\n<p>Every time the element inserted in the slot changes, we log a report to the console saying which slot has changed, and what the new node inside the slot is.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/indices.html#event-slotchange","title":"HTML Standard"}],"query":"api.HTMLSlotElement.slotchange_event"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.HTMLSlotElement.slotchange_event","dataURL":"/en-US/docs/Web/API/HTMLSlotElement/slotchange_event/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<a href=\"/en-US/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Event type","id":"event_type"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The slotchange event is fired on an HTMLSlotElement instance (<slot> element) when the node(s) contained in that slot change.","popularity":0.0007,"modified":"2022-09-09T05:14:42.000Z","other_translations":[{"title":"HTMLSlotElement: slotchange イベント","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/htmlslotelement/slotchange_event","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/htmlslotelement/slotchange_event/index.md","last_commit_url":"https://github.com/mdn/content/commit/277e5969c63b97cfb55ab4a0e612e8040810f49b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/HTMLSlotElement","title":"HTMLSlotElement"},{"uri":"/en-US/docs/Web/API/HTMLSlotElement/slotchange_event","title":"HTMLSlotElement: slotchange event"}],"pageTitle":"HTMLSlotElement: slotchange event - Web APIs | MDN","noIndexing":false}}