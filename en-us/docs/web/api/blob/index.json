{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Blob","mdn_url":"/en-US/docs/Web/API/Blob","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/File_API\">File API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/Blob/Blob\"><code>Blob()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Blob/size\"><code>size</code></a></li><li><a href=\"/en-US/docs/Web/API/Blob/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Blob/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/en-US/docs/Web/API/Blob/slice\"><code>slice()</code></a></li><li><a href=\"/en-US/docs/Web/API/Blob/stream\"><code>stream()</code></a></li><li><a href=\"/en-US/docs/Web/API/Blob/text\"><code>text()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for File API</summary><ol><li><a href=\"/en-US/docs/Web/API/File\"><code>File</code></a></li><li><a href=\"/en-US/docs/Web/API/FileList\"><code>FileList</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReader\"><code>FileReader</code></a></li><li><a href=\"/en-US/docs/Web/API/FileReaderSync\"><code>FileReaderSync</code></a></li><li><a href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a></li><li><a href=\"/en-US/docs/Web/API/URL/revokeObjectURL\"><code>URL.revokeObjectURL()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>Blob</code></strong> object represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a <a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> so its methods can be used for processing the data.</p>\n<p>Blobs can represent data that isn't necessarily in a JavaScript-native format. The <a href=\"/en-US/docs/Web/API/File\"><code>File</code></a> interface is based on <code>Blob</code>, inheriting blob functionality and expanding it to support files on the user's system.</p>"}},{"type":"prose","value":{"id":"using_blobs","title":"Using blobs","isH3":false,"content":"<p>To construct a <code>Blob</code> from other non-blob objects and data, use the <a href=\"/en-US/docs/Web/API/Blob/Blob\" title=\"Blob()\"><code>Blob()</code></a> constructor. To create a blob that contains a subset of another blob's data, use the <a href=\"/en-US/docs/Web/API/Blob/slice\" title=\"slice()\"><code>slice()</code></a> method. To obtain a <code>Blob</code> object for a file on the user's file system, see the <a href=\"/en-US/docs/Web/API/File\"><code>File</code></a> documentation.</p>\n<p>The APIs accepting <code>Blob</code> objects are also listed in the <a href=\"/en-US/docs/Web/API/File\"><code>File</code></a> documentation.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"blob\"><a href=\"/en-US/docs/Web/API/Blob/Blob\" title=\"Blob()\"><code>Blob()</code></a></dt>\n  <dd>\n    <p>Returns a newly created <code>Blob</code> object which contains a concatenation of all of the data in the array passed into the constructor.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_properties","title":"Instance properties","isH3":false,"content":"<dl>\n  <dt id=\"blob.prototype.size\"><a href=\"/en-US/docs/Web/API/Blob/size\"><code>Blob.prototype.size</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>The size, in bytes, of the data contained in the <code>Blob</code> object.</p>\n  </dd>\n  <dt id=\"blob.prototype.type\"><a href=\"/en-US/docs/Web/API/Blob/type\"><code>Blob.prototype.type</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A string indicating the MIME type of the data contained in the <code>Blob</code>. If the type is unknown, this string is empty.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"blob.prototype.arraybuffer\"><a href=\"/en-US/docs/Web/API/Blob/arrayBuffer\"><code>Blob.prototype.arrayBuffer()</code></a></dt>\n  <dd>\n    <p>Returns a promise that resolves with an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> containing the entire contents of the <code>Blob</code> as binary data.</p>\n  </dd>\n  <dt id=\"blob.prototype.slice\"><a href=\"/en-US/docs/Web/API/Blob/slice\"><code>Blob.prototype.slice()</code></a></dt>\n  <dd>\n    <p>Returns a new <code>Blob</code> object containing the data in the specified range of bytes of the blob on which it's called.</p>\n  </dd>\n  <dt id=\"blob.prototype.stream\"><a href=\"/en-US/docs/Web/API/Blob/stream\"><code>Blob.prototype.stream()</code></a></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> that can be used to read the contents of the <code>Blob</code>.</p>\n  </dd>\n  <dt id=\"blob.prototype.text\"><a href=\"/en-US/docs/Web/API/Blob/text\"><code>Blob.prototype.text()</code></a></dt>\n  <dd>\n    <p>Returns a promise that resolves with a string containing the entire contents of the <code>Blob</code> interpreted as UTF-8 text.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"creating_a_blob","title":"Creating a blob","isH3":true,"content":"<p>The <a href=\"/en-US/docs/Web/API/Blob/Blob\" title=\"Blob()\"><code>Blob()</code></a> constructor can create blobs from other objects. For example, to construct a blob from a JSON string:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">hello</span><span class=\"token operator\">:</span> <span class=\"token string\">\"world\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"creating_a_url_representing_the_contents_of_a_typed_array","title":"Creating a URL representing the contents of a typed array","isH3":true,"content":"<p>The following code creates a JavaScript <a href=\"/en-US/docs/Web/JavaScript/Typed_arrays\">typed array</a> and creates a new <code>Blob</code> containing the typed array's data. It then calls <a href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a> to convert the blob into a <a href=\"/en-US/docs/Glossary/URL\">URL</a>.</p>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  This example creates a typed array containing the ASCII codes for the space\n  character through the letter Z, then converts it to an object URL. A link to\n  open that object URL is created. Click the link to see the decoded object URL.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<p>The main piece of this code for example purposes is the <code>typedArrayToURL()</code> function, which creates a <code>Blob</code> from the given typed array and returns an object URL for it. Having converted the data into an object URL, it can be used in a number of ways, including as the value of the <a href=\"/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element's <a href=\"/en-US/docs/Web/HTML/Element/img#attr-src\"><code>src</code></a> attribute (assuming the data contains an image, of course).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">showViewLiveResultButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>self <span class=\"token operator\">!==</span> window<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Ensure that if our document is in a frame, we get the user</span>\n    <span class=\"token comment\">// to first open it in its own tab or window. Otherwise, this</span>\n    <span class=\"token comment\">// example won't work.</span>\n    <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    button<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"View live result of the example code above\"</span><span class=\"token punctuation\">;</span>\n    p<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    button<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">showViewLiveResultButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">typedArrayToURL</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">typedArray<span class=\"token punctuation\">,</span> mimeType</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>typedArray<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> mimeType <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">59</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">59</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    bytes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token function\">typedArrayToURL</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token string\">\"Open the array URL\"</span><span class=\"token punctuation\">;</span>\n\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"result\">Result</h4><iframe class=\"sample-code-frame\" title=\"Creating a URL representing the contents of a typed array sample\" id=\"frame_creating_a_url_representing_the_contents_of_a_typed_array\" width=\"600\" height=\"200\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/Blob/_sample_.creating_a_url_representing_the_contents_of_a_typed_array.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"extracting_data_from_a_blob","title":"Extracting data from a blob","isH3":true,"content":"<p>One way to read content from a <code>Blob</code> is to use a <a href=\"/en-US/docs/Web/API/FileReader\"><code>FileReader</code></a>. The following code reads the content of a <code>Blob</code> as a typed array:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nreader<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loadend\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// reader.result contains the contents of blob as a typed array</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nreader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsArrayBuffer</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Another way to read content from a <code>Blob</code> is to use a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a>. The following code reads the content of a <code>Blob</code> as text:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Response</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Or by using <a href=\"/en-US/docs/Web/API/Blob/text\"><code>Blob.prototype.text()</code></a>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blob<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>By using other methods of <code>FileReader</code>, it is possible to read the contents of a Blob as a string or a data URL.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/FileAPI/#blob-section","title":"File API"}],"query":"api.Blob"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Blob","dataURL":"/en-US/docs/Web/API/Blob/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/FileReader\"><code>FileReader</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/File\"><code>File</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/File_API/Using_files_from_web_applications\">Using files from web applications</a></li>\n</ul>"}}],"toc":[{"text":"Using blobs","id":"using_blobs"},{"text":"Constructor","id":"constructor"},{"text":"Instance properties","id":"instance_properties"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Blob object represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data.","popularity":0.0233,"modified":"2022-09-15T18:16:38.000Z","other_translations":[{"title":"Blob","locale":"es","native":"Español"},{"title":"Blob","locale":"fr","native":"Français"},{"title":"Blob","locale":"ja","native":"日本語"},{"title":"Blob","locale":"ko","native":"한국어"},{"title":"Blob","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Blob","locale":"ru","native":"Русский"},{"title":"Blob","locale":"zh-CN","native":"中文 (简体)"},{"title":"Blob","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/api/blob","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/blob/index.md","last_commit_url":"https://github.com/mdn/content/commit/418f9cf461de0c7845665c0c677ad0667740f52a","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Blob","title":"Blob"}],"pageTitle":"Blob - Web APIs | MDN","noIndexing":false}}