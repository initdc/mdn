{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"XRViewport","mdn_url":"/en-US/docs/Web/API/XRViewport","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebXR_Device_API\">WebXR Device API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/XRViewport\"><code>XRViewport</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/XRViewport/height\"><code>height</code></a></li><li><a href=\"/en-US/docs/Web/API/XRViewport/width\"><code>width</code></a></li><li><a href=\"/en-US/docs/Web/API/XRViewport/x\"><code>x</code></a></li><li><a href=\"/en-US/docs/Web/API/XRViewport/y\"><code>y</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebXR Device API</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/xr\"><code>Navigator.xr</code></a></li><li><a href=\"/en-US/docs/Web/API/WebGLRenderingContext/makeXRCompatible\"><code>WebGLRenderingContext.makeXRCompatible()</code></a></li><li><a href=\"/en-US/docs/Web/API/XRAnchor\"><code>XRAnchor</code></a></li><li><a href=\"/en-US/docs/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRCPUDepthInformation\"><code>XRCPUDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRDepthInformation\"><code>XRDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRFrame\"><code>XRFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSource\"><code>XRInputSource</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRPose\"><code>XRPose</code></a></li><li><a href=\"/en-US/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRRenderState\"><code>XRRenderState</code></a></li><li><a href=\"/en-US/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSessionEvent\"><code>XRSessionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSpace\"><code>XRSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSystem\"><code>XRSystem</code></a></li><li><a href=\"/en-US/docs/Web/API/XRView\"><code>XRView</code></a></li><li><a href=\"/en-US/docs/Web/API/XRViewerPose\"><code>XRViewerPose</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLBinding\"><code>XRWebGLBinding</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLDepthInformation\"><code>XRWebGLDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The WebXR Device API's <strong><code>XRViewport</code></strong> interface provides properties used to describe the size and position of the current viewport within the <a href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> being used to render the 3D scene.</p>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"height\"><a href=\"/en-US/docs/Web/API/XRViewport/height\" title=\"height\"><code>height</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>The height, in pixels, of the viewport.</p>\n  </dd>\n  <dt id=\"width\"><a href=\"/en-US/docs/Web/API/XRViewport/width\" title=\"width\"><code>width</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>The width, in pixels, of the viewport.</p>\n  </dd>\n  <dt id=\"x\"><a href=\"/en-US/docs/Web/API/XRViewport/x\" title=\"x\"><code>x</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>The offset from the origin of the destination graphics surface (typically a <a href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a>) to the left edge of the viewport, in pixels.</p>\n  </dd>\n  <dt id=\"y\"><a href=\"/en-US/docs/Web/API/XRViewport/y\" title=\"y\"><code>y</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>The offset from the origin of the viewport to the bottom edge of the viewport; WebGL's coordinate system places (0, 0) at the bottom left corner of the surface.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"usage_notes","title":"Usage notes","isH3":false,"content":"<p>Currently, the only type of surface available is the <a href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a>. The precise orientation of the coordinate system may vary with other surface types, but in WebGL, the origin (0, 0) is located at the bottom-left corner of the surface. Thus the values specified in an <code>XRViewport</code> define a rectangle whose bottom-left corner is at (<code>x</code>, <code>y</code>) and which extends <code>width</code> pixels toward the left and <code>height</code> pixels upward.</p>\n<p>These values may be passed directly into the <a href=\"/en-US/docs/Web/API/WebGLRenderingContext/viewport\"><code>WebGLRenderingContext.viewport()</code></a> method:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> xrViewport <span class=\"token operator\">=</span> xrWebGLLayer<span class=\"token punctuation\">.</span><span class=\"token function\">getViewport</span><span class=\"token punctuation\">(</span>xrView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>xrViewport<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> xrViewport<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> xrViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> xrViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>This example sets up an animation frame callback using <a href=\"/en-US/docs/Web/API/XRSession/requestAnimationFrame\" title=\"requestAnimationFrame()\"><code>requestAnimationFrame()</code></a>. After initial setup, it iterates over each of the views within the viewer's pose, configuring the viewport as dictated by the <a href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>xrSession<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">time<span class=\"token punctuation\">,</span> xrFrame</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> viewerPose <span class=\"token operator\">=</span> xrFrame<span class=\"token punctuation\">.</span><span class=\"token function\">getViewerPose</span><span class=\"token punctuation\">(</span>xrReferenceSpace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">bindFramebuffer</span><span class=\"token punctuation\">(</span>xrWebGLLayer<span class=\"token punctuation\">.</span>framebuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> xrView <span class=\"token keyword\">of</span> viewerPose<span class=\"token punctuation\">.</span>views<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> xrViewport <span class=\"token operator\">=</span> xrWebGLLayer<span class=\"token punctuation\">.</span><span class=\"token function\">getViewport</span><span class=\"token punctuation\">(</span>xrView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>xrViewport<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> xrViewport<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> xrViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> xrViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Now we can use WebGL to draw into a viewport matching</span>\n   <span class=\"token comment\">// the viewer's needs</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://immersive-web.github.io/webxr/#xrviewport-interface","title":"WebXR Device API"}],"query":"api.XRViewport"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.XRViewport","dataURL":"/en-US/docs/Web/API/XRViewport/bcd.json"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Usage notes","id":"usage_notes"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The WebXR Device API's XRViewport interface provides properties used to describe the size and position of the current viewport within the XRWebGLLayer being used to render the 3D scene.","popularity":0,"modified":"2022-09-09T05:23:40.000Z","source":{"folder":"en-us/web/api/xrviewport","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/xrviewport/index.md","last_commit_url":"https://github.com/mdn/content/commit/073f70e052ff92ab715df3c20678c11c9b51747f","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/XRViewport","title":"XRViewport"}],"pageTitle":"XRViewport - Web APIs | MDN","noIndexing":false}}