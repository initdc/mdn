{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"TrustedTypePolicy","mdn_url":"/en-US/docs/Web/API/TrustedTypePolicy","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>TrustedTypePolicy</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Trusted_Types_API\"><code>Trusted Types API</code></a> defines a group of functions which create <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>TrustedType</code></a> objects.</p>\n<p>A <code>TrustedTypePolicy</code> object is created by <a href=\"/en-US/docs/Web/API/TrustedTypePolicyFactory/createPolicy\" title=\"TrustedTypePolicyFactory.createPolicy()\"><code>TrustedTypePolicyFactory.createPolicy()</code></a> to define a policy for enforcing security rules on input. Therefore, <code>TrustedTypePolicy</code> has no constructor.</p>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"trustedtypepolicy.name\"><a href=\"/en-US/docs/Web/API/TrustedTypePolicy/name\"><code>TrustedTypePolicy.name</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A string containing the name of the policy.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"trustedtypepolicy.createhtml\"><a href=\"/en-US/docs/Web/API/TrustedTypePolicy/createHTML\" title=\"TrustedTypePolicy.createHTML()\"><code>TrustedTypePolicy.createHTML()</code></a></dt>\n  <dd>\n    <p>Creates a <a href=\"/en-US/docs/Web/API/TrustedHTML\"><code>TrustedHTML</code></a> object.</p>\n  </dd>\n  <dt id=\"trustedtypepolicy.createscript\"><a href=\"/en-US/docs/Web/API/TrustedTypePolicy/createScript\" title=\"TrustedTypePolicy.createScript()\"><code>TrustedTypePolicy.createScript()</code></a></dt>\n  <dd>\n    <p>Creates a <a href=\"/en-US/docs/Web/API/TrustedScript\"><code>TrustedScript</code></a> object.</p>\n  </dd>\n  <dt id=\"trustedtypepolicy.createscripturl\"><a href=\"/en-US/docs/Web/API/TrustedTypePolicy/createScriptURL\" title=\"TrustedTypePolicy.createScriptURL()\"><code>TrustedTypePolicy.createScriptURL()</code></a></dt>\n  <dd>\n    <p>Creates a <a href=\"/en-US/docs/Web/API/TrustedScriptURL\"><code>TrustedScriptURL</code></a> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In the below example we create a policy that will create <a href=\"/en-US/docs/Web/API/TrustedHTML\"><code>TrustedHTML</code></a> objects using <a href=\"/en-US/docs/Web/API/TrustedTypePolicyFactory/createPolicy\"><code>TrustedTypePolicyFactory.createPolicy()</code></a>. We can then use <a href=\"/en-US/docs/Web/API/TrustedTypePolicy/createHTML\"><code>TrustedTypePolicy.createHTML</code></a> to create a sanitized HTML string to be inserted into the document.</p>\n<p>The sanitized value can then be used with <a href=\"/en-US/docs/Web/API/Element/innerHTML\"><code>Element.innerHTML</code></a> to ensure that no new HTML elements can be injected.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myDiv<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> escapeHTMLPolicy <span class=\"token operator\">=</span> trustedTypes<span class=\"token punctuation\">.</span><span class=\"token function\">createPolicy</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myEscapePolicy\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">createHTML</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> string<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">&gt;</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myDiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> escaped <span class=\"token operator\">=</span> escapeHTMLPolicy<span class=\"token punctuation\">.</span><span class=\"token function\">createHTML</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;img src=x onerror=alert(1)&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>escaped <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">TrustedHTML</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nel<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> escaped<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webappsec-trusted-types/dist/spec/#trusted-type-policy","title":"Trusted Types"}],"query":"api.TrustedTypePolicy"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.TrustedTypePolicy","dataURL":"/en-US/docs/Web/API/TrustedTypePolicy/bcd.json"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The TrustedTypePolicy interface of the Trusted Types API defines a group of functions which create TrustedType objects.","popularity":0,"modified":"2022-09-09T05:19:45.000Z","source":{"folder":"en-us/web/api/trustedtypepolicy","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/trustedtypepolicy/index.md","last_commit_url":"https://github.com/mdn/content/commit/f7dae62645a2c735ed6f6ed63f664bf279fdfc4b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/TrustedTypePolicy","title":"TrustedTypePolicy"}],"pageTitle":"TrustedTypePolicy - Web APIs | MDN","noIndexing":false}}