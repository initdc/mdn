{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ServiceWorkerContainer","mdn_url":"/en-US/docs/Web/API/ServiceWorkerContainer","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/controller\"><code>controller</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/ready\"><code>ready</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/getRegistration\"><code>getRegistration()</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/getRegistrations\"><code>getRegistrations()</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/register\"><code>register()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/controllerchange_event\"><code>controllerchange</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/error_event\"><code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/message_event\"><code>message</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Service Workers API</summary><ol><li><a href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/en-US/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/en-US/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <code>ServiceWorkerContainer</code> interface of the <a href=\"/en-US/docs/Web/API/Service_Worker_API\">Service Worker API</a> provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.</p>\n<p>Most importantly, it exposes the <a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/register\" title=\"ServiceWorkerContainer.register()\"><code>ServiceWorkerContainer.register()</code></a> method used to register service workers, and the <a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/controller\"><code>ServiceWorkerContainer.controller</code></a> property used to determine whether or not the current page is actively controlled.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/ServiceWorkerContainer\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"176\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"206\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      ServiceWorkerContainer\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"serviceworkercontainer.controller\"><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/controller\"><code>ServiceWorkerContainer.controller</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> object if its state is <code>activating</code> or <code>activated</code> (the same object returned by <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration/active\"><code>ServiceWorkerRegistration.active</code></a>). This property returns <code>null</code> during a force-refresh request (<em>Shift</em> + refresh) or if there is no active worker.</p>\n  </dd>\n  <dt id=\"serviceworkercontainer.ready\"><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/ready\"><code>ServiceWorkerContainer.ready</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Provides a way of delaying code execution until a service worker is active. It returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that will never reject, and which waits indefinitely until the <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> associated with the current page has an <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration/active\"><code>ServiceWorkerRegistration.active</code></a> worker. Once that condition is met, it resolves with the <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<dl>\n  <dt id=\"controllerchange\"><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/controllerchange_event\"><code>controllerchange</code></a></dt>\n  <dd>\n    <p>Occurs when the document's associated <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> acquires a new <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration/active\" title=\"active\"><code>active</code></a> worker.</p>\n  </dd>\n  <dt id=\"error\"><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/error_event\"><code>error</code></a> <svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg> <svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg></dt>\n  <dd>\n    <p>Fired whenever an error occurs in the associated service workers.</p>\n  </dd>\n  <dt id=\"message\"><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/message_event\"><code>message</code></a></dt>\n  <dd>\n    <p>Occurs when incoming messages are received by the <a href=\"/en-US/docs/Web/API/ServiceWorkerContainer\" aria-current=\"page\"><code>ServiceWorkerContainer</code></a> object (e.g. via a <a href=\"/en-US/docs/Web/API/MessagePort/postMessage\"><code>MessagePort.postMessage()</code></a> call).</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"serviceworkercontainer.register\"><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/register\" title=\"ServiceWorkerContainer.register()\"><code>ServiceWorkerContainer.register()</code></a></dt>\n  <dd>\n    <p>Creates or updates a <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> for the given <code>scriptURL</code>.</p>\n  </dd>\n  <dt id=\"serviceworkercontainer.getregistration\"><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/getRegistration\"><code>ServiceWorkerContainer.getRegistration()</code></a></dt>\n  <dd>\n    <p>Gets a <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> object whose scope matches the provided document URL. The method returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> or <code>undefined</code>.</p>\n  </dd>\n  <dt id=\"serviceworkercontainer.getregistrations\"><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/getRegistrations\"><code>ServiceWorkerContainer.getRegistrations()</code></a></dt>\n  <dd>\n    <p>Returns all <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a> objects associated with a <code>ServiceWorkerContainer</code> in an array. The method returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to an array of <a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a>.</p>\n  </dd>\n  <dt id=\"serviceworkercontainer.startmessages\"><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer/startMessages\"><code>ServiceWorkerContainer.startMessages()</code></a></dt>\n  <dd>\n    <p>explicitly starts the flow of messages being dispatched from a service worker to pages under its control (e.g. sent via <a href=\"/en-US/docs/Web/API/Client/postMessage\"><code>Client.postMessage()</code></a>). This can be used to react to sent messages earlier, even before that page's content has finished loading.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The example below first checks to see if the browser supports service workers. If supported, the code registers the service worker and determines if the page is actively controlled by the service worker. If it isn't, it prompts the user to reload the page so the service worker can take control. The code also reports any registration failures.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"serviceWorker\"</span> <span class=\"token keyword\">in</span> navigator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Register a service worker hosted at the root of the</span>\n  <span class=\"token comment\">// site using the default scope.</span>\n  navigator<span class=\"token punctuation\">.</span>serviceWorker\n    <span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/sw.js\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">registration</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Service worker registration succeeded:\"</span><span class=\"token punctuation\">,</span> registration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// At this point, you can optionally do something</span>\n      <span class=\"token comment\">// with registration. See https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Service worker registration failed: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Independent of the registration, let's also display</span>\n  <span class=\"token comment\">// information about whether the current page is controlled</span>\n  <span class=\"token comment\">// by an existing service worker, and when that</span>\n  <span class=\"token comment\">// controller changes.</span>\n\n  <span class=\"token comment\">// First, do a one-off check if there's currently a</span>\n  <span class=\"token comment\">// service worker in control.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"This page is currently controlled by:\"</span><span class=\"token punctuation\">,</span>\n      navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span>controller\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Then, register a handler to detect when a new or</span>\n  <span class=\"token comment\">// updated service worker takes control.</span>\n  navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncontrollerchange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"This page is now controlled by\"</span><span class=\"token punctuation\">,</span>\n      navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span>controller\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Service workers are not supported.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#serviceworkercontainer-interface","title":"Service Workers 1"}],"query":"api.ServiceWorkerContainer"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ServiceWorkerContainer","dataURL":"/en-US/docs/Web/API/ServiceWorkerContainer/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Using Service Workers</a></li>\n  <li><a href=\"https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker\" class=\"external\" rel=\" noopener\">Service workers basic code example</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">Is ServiceWorker ready?</a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\">Using web workers</a></li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Events","id":"events"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The ServiceWorkerContainer interface of the Service Worker API provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.","popularity":0.001,"modified":"2022-08-27T16:31:08.000Z","other_translations":[{"title":"ServiceWorkerContainer","locale":"es","native":"Español"},{"title":"ServiceWorkerContainer","locale":"fr","native":"Français"},{"title":"ServiceWorkerContainer","locale":"ja","native":"日本語"},{"title":"ServiceWorkerContainer","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"ServiceWorkerContainer","locale":"ru","native":"Русский"},{"title":"ServiceWorkerContainer","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/serviceworkercontainer","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/serviceworkercontainer/index.md","last_commit_url":"https://github.com/mdn/content/commit/c7aeb96dac3e0ac2864cffe45c02d214ae1a5219","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ServiceWorkerContainer","title":"ServiceWorkerContainer"}],"pageTitle":"ServiceWorkerContainer - Web APIs | MDN","noIndexing":false}}