{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Broadcast Channel API","mdn_url":"/en-US/docs/Web/API/Broadcast_Channel_API","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Broadcast_Channel_API\">Broadcast Channel API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong>Broadcast Channel API</strong> allows basic communication between <a href=\"/en-US/docs/Glossary/Browsing_context\">browsing contexts</a> (that is, <em>windows</em>, <em>tabs</em>, <em>frames</em>, or <em>iframes</em>) and workers on the same <a href=\"/en-US/docs/Glossary/Origin\">origin</a>.</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>\n<p>By creating a <a href=\"/en-US/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a> object, you can receive any messages that are posted to it. You don't have to maintain a reference to the frames or workers you wish to communicate with: they can \"subscribe\" to a particular channel by constructing their own <a href=\"/en-US/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a> with the same name, and have bi-directional communication between all of them.</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/Broadcast_Channel_API/broadcastchannel.png\" alt=\"The principle of the Broadcast Channel API\" width=\"784\" height=\"448\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"broadcast_channel_interface","title":"Broadcast Channel interface","isH3":false,"content":""}},{"type":"prose","value":{"id":"creating_or_joining_a_channel","title":"Creating or joining a channel","isH3":true,"content":"<p>A client joins a broadcast channel by creating a <a href=\"/en-US/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a> object. Its <a href=\"/en-US/docs/Web/API/BroadcastChannel/BroadcastChannel\">constructor</a> takes one single parameter: the <em>name</em> of the channel. If it is the first to connect to that broadcast channel name, the underlying channel is created.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Connection to a broadcast channel</span>\n<span class=\"token keyword\">const</span> bc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BroadcastChannel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test_channel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"sending_a_message","title":"Sending a message","isH3":true,"content":"<p>It is enough to call the <a href=\"/en-US/docs/Web/API/BroadcastChannel/postMessage\" title=\"postMessage()\"><code>postMessage()</code></a> method on the created <code>BroadcastChannel</code> object, which takes any object as an argument. An example string message:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Example of sending of a very simple message</span>\nbc<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is a test message.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Data sent to the channel is serialized using the <a href=\"/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">structured clone algorithm</a>. That means you can send a broad variety of data objects safely without having to serialize them yourself.</p>\n<p>The API doesn't associate any semantics to messages, so it is up to the code to know what kind of messages to expect and what to do with them.</p>"}},{"type":"prose","value":{"id":"receiving_a_message","title":"Receiving a message","isH3":true,"content":"<p>When a message is posted, a <a href=\"/en-US/docs/Web/API/BroadcastChannel/message_event\"><code>message</code></a> event is dispatched to each <a href=\"/en-US/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a> object connected to this channel. A function can be run for this event using the <a href=\"/en-US/docs/Web/API/BroadcastChannel/message_event\" title=\"onmessage\"><code>onmessage</code></a> event handler:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// A handler that only logs the event to the console:</span>\nbc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"disconnecting_a_channel","title":"Disconnecting a channel","isH3":true,"content":"<p>To leave a channel, call the <a href=\"/en-US/docs/Web/API/BroadcastChannel/close\" title=\"close()\"><code>close()</code></a> method on the object. This disconnects the object from the underlying channel, allowing garbage collection.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Disconnect the channel</span>\nbc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"conclusion","title":"Conclusion","isH3":false,"content":"<p>The Broadcast Channel API's self-contained interface allows cross-context communication. It can be used to detect user actions in other tabs within a same origin, like when the user logs in or out.</p>\n<p>The messaging protocol is not defined and the different browsing contexts need to implement it themselves; there is no negotiation nor requirement from the specification.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/web-messaging.html#broadcasting-to-other-browsing-contexts","title":"HTML Standard"}],"query":"api.BroadcastChannel"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.BroadcastChannel","dataURL":"/en-US/docs/Web/API/Broadcast_Channel_API/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/BroadcastChannel\"><code>BroadcastChannel</code></a>, the interface implementing it.</li>\n</ul>"}}],"toc":[{"text":"Broadcast Channel interface","id":"broadcast_channel_interface"},{"text":"Conclusion","id":"conclusion"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Broadcast Channel API allows basic communication between browsing contexts (that is, windows, tabs, frames, or iframes) and workers on the same origin.","popularity":0.0051,"modified":"2022-09-15T18:16:38.000Z","other_translations":[{"title":"Broadcast Channel API","locale":"fr","native":"Français"},{"title":"Broadcast Channel API","locale":"ja","native":"日本語"},{"title":"Broadcast Channel API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/broadcast_channel_api","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/broadcast_channel_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/418f9cf461de0c7845665c0c677ad0667740f52a","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Broadcast_Channel_API","title":"Broadcast Channel API"}],"pageTitle":"Broadcast Channel API - Web APIs | MDN","noIndexing":false}}