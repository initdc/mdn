{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ServiceWorker.state","mdn_url":"/en-US/docs/Web/API/ServiceWorker/state","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/ServiceWorker/scriptURL\"><code>scriptURL</code></a></li><li><em><code>state</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/ServiceWorker/error_event\"><code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorker/statechange_event\"><code>statechange</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Service Workers API</summary><ol><li><a href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/en-US/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/en-US/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>state</code></strong> read-only property of the\n  <a href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a> interface returns a string representing the current state\n  of the service worker. It can be one of the following values: <code>parsed</code>, <code>installing</code>,\n  <code>installed,</code> <code>activating</code>, <code>activated</code>, or\n  <code>redundant</code>.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> that can take one of the following values:</p>\n<dl>\n  <dt id=\"parsed\"><code>\"parsed\"</code></dt>\n  <dd>\n    <p>\n      The initial state of a service worker after it is downloaded and confirmed to be runnable.\n      A service worker is never updated to this state, so this will never be the value of the <a href=\"/en-US/docs/Web/API/ServiceWorker/statechange_event\"><code>ServiceWorker.statechange_event</code></a>\n    </p>\n  </dd>\n  <dt id=\"installing\"><code>\"installing\"</code></dt>\n  <dd>\n    <p>The service worker in this state is considered an installing worker. During this state, <a href=\"/en-US/docs/Web/API/ExtendableEvent/waitUntil\"><code>ExtendableEvent.waitUntil()</code></a> can be called inside the <code>install</code> event handler to extend the life of the installing worker until the passed promise resolves successfully. This is primarily used to ensure that the service worker is not active until all of the core caches are populated.</p>\n  </dd>\n  <dt id=\"installed\"><code>\"installed\"</code></dt>\n  <dd>\n    <p>The service worker in this state is considered a waiting worker.</p>\n  </dd>\n  <dt id=\"activating\"><code>\"activating\"</code></dt>\n  <dd>\n    <p>The service worker in this state is considered an active worker. During this state, <a href=\"/en-US/docs/Web/API/ExtendableEvent/waitUntil\"><code>ExtendableEvent.waitUntil()</code></a> can be called inside the <code>onactivate</code> event handler to extend the life of the active worker until the passed promise resolves successfully. No functional events are dispatched until the state becomes activated.</p>\n  </dd>\n  <dt id=\"activated\"><code>\"activated\"</code></dt>\n  <dd>\n    <p>The service worker in this state is considered an active worker ready to handle functional events.</p>\n  </dd>\n  <dt id=\"redundant\"><code>\"redundant\"</code></dt>\n  <dd>\n    <p>A new service worker is replacing the current service worker, or the current service worker is being discarded due to an install failure.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  This code snippet is from the <a href=\"https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html\" class=\"external\" rel=\" noopener\">service worker registration-events sample</a> (<a href=\"https://googlechrome.github.io/samples/service-worker/registration-events/\" class=\"external\" rel=\" noopener\">live demo</a>). The code listens for any change in the <a href=\"/en-US/docs/Web/API/ServiceWorker/state\" aria-current=\"page\"><code>ServiceWorker.state</code></a>\n  and returns its value.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> serviceWorker<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span>installing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  serviceWorker <span class=\"token operator\">=</span> registration<span class=\"token punctuation\">.</span>installing<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#kind'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'installing'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span>waiting<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  serviceWorker <span class=\"token operator\">=</span> registration<span class=\"token punctuation\">.</span>waiting<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#kind'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'waiting'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>registration<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  serviceWorker <span class=\"token operator\">=</span> registration<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#kind'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>serviceWorker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">logState</span><span class=\"token punctuation\">(</span>serviceWorker<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'statechange'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">logState</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#service-worker-state","title":"Service Workers 1"}],"query":"api.ServiceWorker.state"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ServiceWorker.state","dataURL":"/en-US/docs/Web/API/ServiceWorker/state/bcd.json"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The state read-only property of the\n  ServiceWorker interface returns a string representing the current state\n  of the service worker. It can be one of the following values: parsed, installing,\n  installed, activating, activated, or\n  redundant.","popularity":0.0003,"modified":"2022-09-09T05:18:40.000Z","other_translations":[{"title":"ServiceWorker.state","locale":"fr","native":"Français"},{"title":"ServiceWorker.state","locale":"ja","native":"日本語"},{"title":"ServiceWorker.state","locale":"ru","native":"Русский"},{"title":"ServiceWorker.state","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/serviceworker/state","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/serviceworker/state/index.md","last_commit_url":"https://github.com/mdn/content/commit/e0e09b1df51489867f2e74c18586d168ba5e00d1","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ServiceWorker","title":"ServiceWorker"},{"uri":"/en-US/docs/Web/API/ServiceWorker/state","title":"ServiceWorker.state"}],"pageTitle":"ServiceWorker.state - Web APIs | MDN","noIndexing":false}}