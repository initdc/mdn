{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"FileSystemDirectoryHandle","mdn_url":"/en-US/docs/Web/API/FileSystemDirectoryHandle","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/File_System_Access_API\">File System Access API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/window/showOpenFilePicker\"><code>window.showOpenFilePicker()</code></a></li><li><a href=\"/en-US/docs/Web/API/window/showSaveFilePicker\"><code>window.showSaveFilePicker()</code></a></li><li><a href=\"/en-US/docs/Web/API/window/showDirectoryPicker\"><code>window.showDirectoryPicker()</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransferItem/getAsFileSystemHandle\"><code>DataTransferItem.getAsFileSystemHandle()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>FileSystemDirectoryHandle</code></strong> interface of the <a href=\"/en-US/docs/Web/API/File_System_Access_API\"><code>File System Access API</code></a> provides a handle to a file system directory. The interface is accessed via the <a href=\"/en-US/docs/Web/API/Window/showDirectoryPicker\"><code>window.showDirectoryPicker()</code></a> method.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/FileSystemHandle\">\n    <rect x=\"0\" y=\"0\" width=\"128\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"64\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      FileSystemHandle\n    </text>\n  </a>\n  <line x1=\"128\" y1=\"14\" x2=\"158\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"128,14 138,9 138,19 128,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle\" aria-current=\"page\">\n    <rect x=\"158\" y=\"0\" width=\"200\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"258\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      FileSystemDirectoryHandle\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em>Inherits properties from its parent, <a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a>.</em></p>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>Inherits methods from its parent, <a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a>.</em></p>\n<dl>\n  <dt id=\"filesystemdirectoryhandle.entries\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle/entries\"><code>FileSystemDirectoryHandle.entries()</code></a></dt>\n  <dd>\n    <p>Returns a new <em>async iterator</em> of a given object's own enumerable property <code>[key, value]</code> pairs</p>\n  </dd>\n  <dt id=\"filesystemdirectoryhandle.getfilehandle\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle/getFileHandle\"><code>FileSystemDirectoryHandle.getFileHandle()</code></a></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> fulfilled with a <a href=\"/en-US/docs/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a> for a file with the specified name, within the directory the method is called.</p>\n  </dd>\n  <dt id=\"filesystemdirectoryhandle.getdirectoryhandle\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle/getDirectoryHandle\"><code>FileSystemDirectoryHandle.getDirectoryHandle()</code></a></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> fulfilled with a <a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle\" aria-current=\"page\"><code>FileSystemDirectoryHandle</code></a> for a subdirectory with the specified name within the directory handle on which the method is called.</p>\n  </dd>\n  <dt id=\"filesystemdirectoryhandle.keys\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle/keys\"><code>FileSystemDirectoryHandle.keys()</code></a></dt>\n  <dd>\n    <p>Returns a new <em>async iterator</em> containing the keys for each item in <code>FileSystemDirectoryHandle</code>.</p>\n  </dd>\n  <dt id=\"filesystemdirectoryhandle.removeentry\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle/removeEntry\"><code>FileSystemDirectoryHandle.removeEntry()</code></a></dt>\n  <dd>\n    <p>Attempts to asynchronously remove an entry if the directory handle contains a file or directory called the name specified.</p>\n  </dd>\n  <dt id=\"filesystemdirectoryhandle.resolve\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle/resolve\"><code>FileSystemDirectoryHandle.resolve()</code></a></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> fulfilled with an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of directory names from the parent handle to the specified child entry, with the name of the child entry as the last array item.</p>\n  </dd>\n  <dt id=\"filesystemdirectoryhandle.values\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle/values\"><code>FileSystemDirectoryHandle.values()</code></a></dt>\n  <dd>\n    <p>Returns a new <em>async iterator</em> containing the values for each index in the <code>FileSystemDirectoryHandle</code> object.</p>\n  </dd>\n  <dt id=\"filesystemdirectoryhandleasynciterator\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle/entries\"><code>FileSystemDirectoryHandle[@@asyncIterator]()</code></a></dt>\n  <dd>\n    <p>Returns the <code>entries</code> function by default.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following example returns a directory handle with the specified name, if the directory does not exist it is created.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> dirName <span class=\"token operator\">=</span> <span class=\"token string\">'directoryToGetName'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// assuming we have a directory handle: 'currentDirHandle'</span>\n<span class=\"token keyword\">const</span> subDir <span class=\"token operator\">=</span> currentDirHandle<span class=\"token punctuation\">.</span><span class=\"token function\">getDirectoryHandle</span><span class=\"token punctuation\">(</span>dirName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">create</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The following asynchronous function uses <code>resolve()</code> to find the path to a chosen file, relative to a specified directory handle.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">returnPathDirectories</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">directoryHandle</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// Get a file handle by showing a file picker:</span>\n  <span class=\"token keyword\">const</span> handle <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> self<span class=\"token punctuation\">.</span><span class=\"token function\">showOpenFilePicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>handle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// User cancelled, or otherwise failed to open a file.</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Check if handle exists inside directory our directory handle</span>\n  <span class=\"token keyword\">const</span> relativePaths <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> directoryHandle<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>handle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>relativePath <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Not inside directory handle</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// relativePath is an array of names, giving the relative path</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> name <span class=\"token keyword\">of</span> relativePaths<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// log each entry</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>The following example scans recursively through a directory to return <a href=\"/en-US/docs/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a> objects for each file in that directory:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">getFilesRecursively</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>kind <span class=\"token operator\">===</span> <span class=\"token string\">'file'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      file<span class=\"token punctuation\">.</span>relativePath <span class=\"token operator\">=</span> <span class=\"token function\">getRelativePath</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">yield</span> file<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>kind <span class=\"token operator\">===</span> <span class=\"token string\">'directory'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> handle <span class=\"token keyword\">of</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">yield</span><span class=\"token operator\">*</span> <span class=\"token function\">getFilesRecursively</span><span class=\"token punctuation\">(</span>handle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> fileHandle <span class=\"token keyword\">of</span> <span class=\"token function\">getFilesRecursively</span><span class=\"token punctuation\">(</span>directoryHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fileHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/file-system-access/#api-filesystemdirectoryhandle","title":"File System Access"}],"query":"api.FileSystemDirectoryHandle"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.FileSystemDirectoryHandle","dataURL":"/en-US/docs/Web/API/FileSystemDirectoryHandle/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/File_System_Access_API\">File System Access API</a></li>\n  <li><a href=\"https://web.dev/file-system-access/\" class=\"external\" rel=\" noopener\">The File System Access API: simplifying access to local files</a></li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The FileSystemDirectoryHandle interface of the File System Access API provides a handle to a file system directory. The interface is accessed via the window.showDirectoryPicker() method.","popularity":0.001,"modified":"2022-09-09T05:10:34.000Z","source":{"folder":"en-us/web/api/filesystemdirectoryhandle","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/filesystemdirectoryhandle/index.md","last_commit_url":"https://github.com/mdn/content/commit/1511e914c6b1ce6f88056bfefd48a6aa585cebce","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/FileSystemDirectoryHandle","title":"FileSystemDirectoryHandle"}],"pageTitle":"FileSystemDirectoryHandle - Web APIs | MDN","noIndexing":false}}