{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CSSImageValue","mdn_url":"/en-US/docs/Web/API/CSSImageValue","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CSS_Typed_OM_API\">CSS Typed OM API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/CSSImageValue\"><code>CSSImageValue</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for CSS Typed Object Model API</summary><ol><li><a href=\"/en-US/docs/Web/API/CSSKeywordValue\"><code>CSSKeywordValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSPositionValue\"><code>CSSPositionValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code></a></li><li><a href=\"/en-US/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a></li><li><a href=\"/en-US/docs/Web/API/StylePropertyMap\"><code>StylePropertyMap</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>CSSImageValue</code></strong> interface of the <a href=\"/en-US/docs/Web/API/CSS_Object_Model#css_typed_object_model\">CSS Typed Object Model API</a> represents values for properties that take an image, for example <a href=\"/en-US/docs/Web/CSS/background-image\"><code>background-image</code></a>, <a href=\"/en-US/docs/Web/CSS/list-style-image\"><code>list-style-image</code></a>, or <a href=\"/en-US/docs/Web/CSS/border-image-source\"><code>border-image-source</code></a>.</p>\n<p>The CSSImageValue object represents an <a href=\"/en-US/docs/Web/CSS/image\"><code>&lt;image&gt;</code></a> that involves a URL, such as <a href=\"/en-US/docs/Web/CSS/url\"><code>url()</code></a> or <a href=\"/en-US/docs/Web/CSS/image\"><code>image()</code></a>, but not <a href=\"/en-US/docs/Web/CSS/gradient/linear-gradient\"><code>linear-gradient()</code></a> or <a href=\"/en-US/docs/Web/CSS/element\"><code>element()</code></a>.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/CSSStyleValue\">\n    <rect x=\"0\" y=\"0\" width=\"104\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"52\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      CSSStyleValue\n    </text>\n  </a>\n  <line x1=\"104\" y1=\"14\" x2=\"134\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"104,14 114,9 114,19 104,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/CSSImageValue\" aria-current=\"page\">\n    <rect x=\"134\" y=\"0\" width=\"104\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"186\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      CSSImageValue\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>Inherits methods from <a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a>.</em></p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>We create an element</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">&gt;</span></span>Magic Wand<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>We add some CSS, including a background image requesting a binary file:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> no-repeat 5% center <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>magicwand.png<span class=\"token punctuation\">)</span></span> aqua<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>We get the element's style map. We then get() the background-image from the stylemap and stringify it:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// get the element</span>\n<span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Retrieve all computed styles with computedStyleMap()</span>\n<span class=\"token keyword\">const</span> allComputedStyles <span class=\"token operator\">=</span> button<span class=\"token punctuation\">.</span><span class=\"token function\">computedStyleMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Return the CSSImageValue Example</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>allComputedStyles<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'background-image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>allComputedStyles<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'background-image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"Examples sample\" id=\"frame_examples\" width=\"120\" height=\"300\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/CSSImageValue/_sample_.examples.html\" loading=\"lazy\"></iframe>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://drafts.css-houdini.org/css-typed-om/#imagevalue-objects","title":"CSS Typed OM Level 2"}],"query":"api.CSSImageValue"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CSSImageValue","dataURL":"/en-US/docs/Web/API/CSSImageValue/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/CSSKeywordValue\"><code>CSSKeywordValue</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/CSSNumericValue\"><code>CSSNumericValue</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/CSSPositionValue\"><code>CSSPositionValue</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/CSSUnparsedValue\"><code>CSSUnparsedValue</code></a></li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The CSSImageValue interface of the CSS Typed Object Model API represents values for properties that take an image, for example background-image, list-style-image, or border-image-source.","popularity":0.0003,"modified":"2022-09-13T08:08:55.000Z","other_translations":[{"title":"CSSImageValue","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/cssimagevalue","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/cssimagevalue/index.md","last_commit_url":"https://github.com/mdn/content/commit/a700bf9c980202561fc7022dac31550cf1a47a10","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CSSImageValue","title":"CSSImageValue"}],"pageTitle":"CSSImageValue - Web APIs | MDN","noIndexing":false}}