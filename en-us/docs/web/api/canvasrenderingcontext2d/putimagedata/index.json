{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CanvasRenderingContext2D.putImageData()","mdn_url":"/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/canvas\"><code>canvas</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/direction\"><code>direction</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle\"><code>fillStyle</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/filter\"><code>filter</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/font\"><code>font</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fontKerning\"><code>fontKerning</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fontStretch\"><code>fontStretch</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fontVariantCaps\"><code>fontVariantCaps</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/globalAlpha\"><code>globalAlpha</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\"><code>globalCompositeOperation</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\"><code>imageSmoothingEnabled</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingQuality\"><code>imageSmoothingQuality</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/letterSpacing\"><code>letterSpacing</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap\"><code>lineCap</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineDashOffset\"><code>lineDashOffset</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin\"><code>lineJoin</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineWidth\"><code>lineWidth</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/miterLimit\"><code>miterLimit</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowBlur\"><code>shadowBlur</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowColor\"><code>shadowColor</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX\"><code>shadowOffsetX</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY\"><code>shadowOffsetY</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/strokeStyle\"><code>strokeStyle</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign\"><code>textAlign</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/textBaseline\"><code>textBaseline</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/textRendering\"><code>textRendering</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/wordSpacing\"><code>wordSpacing</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/arc\"><code>arc()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/arcTo\"><code>arcTo()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/beginPath\"><code>beginPath()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo\"><code>bezierCurveTo()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/clearRect\"><code>clearRect()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/clip\"><code>clip()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/closePath\"><code>closePath()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createConicGradient\"><code>createConicGradient()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createImageData\"><code>createImageData()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\"><code>createLinearGradient()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createPattern\"><code>createPattern()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\"><code>createRadialGradient()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/drawFocusIfNeeded\"><code>drawFocusIfNeeded()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\"><code>drawImage()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/ellipse\"><code>ellipse()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fill\"><code>fill()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect\"><code>fillRect()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fillText\"><code>fillText()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getContextAttributes\"><code>getContextAttributes()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\"><code>getImageData()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getLineDash\"><code>getLineDash()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getTransform\"><code>getTransform()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/isContextLost\"><code>isContextLost()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/isPointInPath\"><code>isPointInPath()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/isPointInStroke\"><code>isPointInStroke()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineTo\"><code>lineTo()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/measureText\"><code>measureText()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/moveTo\"><code>moveTo()</code></a></li><li><em><code>putImageData()</code></em></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo\"><code>quadraticCurveTo()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/rect\"><code>rect()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/reset\"><code>reset()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/resetTransform\"><code>resetTransform()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/restore\"><code>restore()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/rotate\"><code>rotate()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/roundRect\"><code>roundRect()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/save\"><code>save()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/scale\"><code>scale()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/scrollPathIntoView\"><code>scrollPathIntoView()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash\"><code>setLineDash()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\"><code>setTransform()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/stroke\"><code>stroke()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/strokeRect\"><code>strokeRect()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/strokeText\"><code>strokeText()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/transform\"><code>transform()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/translate\"><code>translate()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>CanvasRenderingContext2D.putImageData()</code></strong>\n  method of the Canvas 2D API paints data from the given <a href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code></a> object\n  onto the canvas. If a dirty rectangle is provided, only the pixels from that rectangle\n  are painted. This method is not affected by the canvas transformation matrix.\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> Image data can be retrieved from a canvas using the\n    <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\" title=\"getImageData()\"><code>getImageData()</code></a> method.\n  </p>\n</div>\n<p>\n  You can find more information about <code>putImageData()</code> and general\n  manipulation of canvas contents in the article <a href=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">Pixel manipulation with canvas</a>.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">putImageData(imageData, dx, dy)\nputImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"imagedata\"><code>imageData</code></dt>\n  <dd>\n    <p>An <a href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code></a> object containing the array of pixel values.</p>\n  </dd>\n  <dt id=\"dx\"><code>dx</code></dt>\n  <dd>\n    <p>\n      Horizontal position (x coordinate) at which to place the image data in the\n      destination canvas.\n    </p>\n  </dd>\n  <dt id=\"dy\"><code>dy</code></dt>\n  <dd>\n    <p>\n      Vertical position (y coordinate) at which to place the image data in the destination\n      canvas.\n    </p>\n  </dd>\n  <dt id=\"dirtyx\"><code>dirtyX</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      Horizontal position (x coordinate) of the top-left corner from which the image data\n      will be extracted. Defaults to <code>0</code>.\n    </p>\n  </dd>\n  <dt id=\"dirtyy\"><code>dirtyY</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      Vertical position (y coordinate) of the top-left corner from which the image data\n      will be extracted. Defaults to <code>0</code>.\n    </p>\n  </dd>\n  <dt id=\"dirtywidth\"><code>dirtyWidth</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Width of the rectangle to be painted. Defaults to the width of the image data.</p>\n  </dd>\n  <dt id=\"dirtyheight\"><code>dirtyHeight</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Height of the rectangle to be painted. Defaults to the height of the image data.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"notsupportederror\"><code>NotSupportedError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if any of the arguments is infinite.</p>\n  </dd>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the <code>ImageData</code> object's data has been detached.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"understanding_putimagedata","title":"Understanding putImageData","isH3":true,"content":"<p>\n  To understand what this algorithm does under the hood, here is an implementation on top\n  of <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect\"><code>CanvasRenderingContext2D.fillRect()</code></a>.\n</p>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> imageData<span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">,</span>\n    dirtyX<span class=\"token punctuation\">,</span> dirtyY<span class=\"token punctuation\">,</span> dirtyWidth<span class=\"token punctuation\">,</span> dirtyHeight</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n  dirtyX <span class=\"token operator\">=</span> dirtyX <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  dirtyY <span class=\"token operator\">=</span> dirtyY <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  dirtyWidth <span class=\"token operator\">=</span> dirtyWidth <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">?</span> dirtyWidth<span class=\"token operator\">:</span> width<span class=\"token punctuation\">;</span>\n  dirtyHeight <span class=\"token operator\">=</span> dirtyHeight <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">?</span> dirtyHeight<span class=\"token operator\">:</span> height<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> limitBottom <span class=\"token operator\">=</span> dirtyY <span class=\"token operator\">+</span> dirtyHeight<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> limitRight <span class=\"token operator\">=</span> dirtyX <span class=\"token operator\">+</span> dirtyWidth<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> dirtyY<span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> limitBottom<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> dirtyX<span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> limitRight<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> pos <span class=\"token operator\">=</span> y <span class=\"token operator\">*</span> width <span class=\"token operator\">+</span> x<span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">rgba(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">[</span>pos<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">[</span>pos<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">[</span>pos<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">[</span>pos<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Draw content onto the canvas</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Create an ImageData object from it</span>\n<span class=\"token keyword\">const</span> imagedata <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// use the putImageData function that illustrates how putImageData works</span>\n<span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> imagedata<span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"result\">Result</h4><iframe class=\"sample-code-frame\" title=\"Understanding putImageData sample\" id=\"frame_understanding_putimagedata\" width=\"700\" height=\"180\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData/_sample_.understanding_putimagedata.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"data_loss_due_to_browser_optimization","title":"Data loss due to browser optimization","isH3":true,"content":"<div class=\"notecard warning\" id=\"sect2\">\n  <p>\n    <strong>Warning:</strong> Due to the lossy nature of converting to and from premultiplied alpha color values,\n    pixels that have just been set using <code>putImageData()</code> might be returned to\n    an equivalent <code>getImageData()</code> as different values.\n  </p>\n</div>\n<h4 id=\"javascript_2\">JavaScript</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> context <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> imgData <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pixels <span class=\"token operator\">=</span> imgData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\npixels<span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\npixels<span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">;</span>\npixels<span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\npixels<span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"before:\"</span><span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontext<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>imgData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> imgData2 <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pixels2 <span class=\"token operator\">=</span> imgData2<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"after:\"</span><span class=\"token punctuation\">,</span> pixels2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The output might look like:</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">before: Uint8ClampedArray(4) [ 1, 127, 255, 1 ]\nafter: Uint8ClampedArray(4) [ 255, 255, 255, 1 ]\n</pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-putimagedata-dev","title":"HTML Standard"}],"query":"api.CanvasRenderingContext2D.putImageData"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CanvasRenderingContext2D.putImageData","dataURL":"/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The interface defining this method: <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code></a> object</li>\n  <li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\"><code>CanvasRenderingContext2D.getImageData()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas\">Pixel manipulation with canvas</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The CanvasRenderingContext2D.putImageData()\n  method of the Canvas 2D API paints data from the given ImageData object\n  onto the canvas. If a dirty rectangle is provided, only the pixels from that rectangle\n  are painted. This method is not affected by the canvas transformation matrix.","popularity":0.002,"modified":"2022-09-13T05:19:21.000Z","other_translations":[{"title":"CanvasRenderingContext2D.putImageData()","locale":"ru","native":"Русский"},{"title":"CanvasRenderingContext2D.putImageData()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/canvasrenderingcontext2d/putimagedata","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/canvasrenderingcontext2d/putimagedata/index.md","last_commit_url":"https://github.com/mdn/content/commit/9ad07c43f42e14278a4040fd554af33699aea632","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CanvasRenderingContext2D","title":"CanvasRenderingContext2D"},{"uri":"/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData","title":"CanvasRenderingContext2D.putImageData()"}],"pageTitle":"CanvasRenderingContext2D.putImageData() - Web APIs | MDN","noIndexing":false}}