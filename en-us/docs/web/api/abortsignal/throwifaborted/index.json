{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"AbortSignal.throwIfAborted()","mdn_url":"/en-US/docs/Web/API/AbortSignal/throwIfAborted","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortSignal/aborted\"><code>aborted</code></a></li><li><a href=\"/en-US/docs/Web/API/AbortSignal/reason\"><code>reason</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortSignal/abort\"><code>abort()</code></a></li><li><em><code>throwIfAborted()</code></em></li><li><a href=\"/en-US/docs/Web/API/AbortSignal/timeout\"><code>timeout()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortSignal/abort_event\"><code>abort</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for DOM</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/en-US/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/en-US/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/en-US/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/en-US/docs/Web/API/Range\"><code>Range</code></a></li><li><a href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>throwIfAborted()</code></strong> method throws the signal's abort <a href=\"/en-US/docs/Web/API/AbortSignal/reason\" title=\"reason\"><code>reason</code></a> if the signal has been aborted; otherwise it does nothing.</p>\n<p>An API that needs to support aborting can accept an <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> object and use <code>throwIfAborted()</code> to test and throw when the <a href=\"/en-US/docs/Web/API/AbortSignal/abort_event\"><code>abort</code></a> event is signalled.</p>\n<p>This method can also be used to abort operations at particular points in code, rather than passing to functions that take a signal.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">throwIfAborted()\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The examples below come from the specification.</p>"}},{"type":"prose","value":{"id":"aborting_a_polling_operation","title":"Aborting a polling operation","isH3":true,"content":"<p>This example demonstrates how you can use <code>throwIfAborted()</code> to abort a polling operation.</p>\n<p>\n  Consider an asynchronous <code>waitForCondition()</code> function that is called with another asynchronous function <code>func</code>, a target value <code>targetValue</code>, and an <code>AbortSignal</code>.\n  The method compares the result of <code>func</code> with <code>targetValue</code> in a loop, returning when they match.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">waitForCondition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> targetValue<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> signal <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    signal<span class=\"token operator\">?.</span><span class=\"token function\">throwIfAborted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">===</span> targetValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  On each iteration of the loop, we use <code>throwIfAborted()</code> to throw the signal's <code>reason</code> if the operation has been aborted (and otherwise do nothing).\n  If the signal is aborted, this will cause the <code>waitForCondition()</code> promise to be rejected .\n</p>"}},{"type":"prose","value":{"id":"implementing_an_abortable_api","title":"Implementing an abortable API","isH3":true,"content":"<p>An API that needs to support aborting can accept an <code>AbortSignal</code> object, and use its state to trigger abort signal handling when needed.</p>\n<p>\n  A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>-based API should respond to the abort signal by rejecting any unsettled promise with the <code>AbortSignal</code> abort <a href=\"/en-US/docs/Web/API/AbortSignal/reason\" title=\"reason\"><code>reason</code></a>.\n  For example, consider the following <code>myCoolPromiseAPI</code>, which takes a signal and returns a promise.\n  The promise is rejected immediately if the signal is already aborted, or if the abort event is detected.\n  Otherwise it completes normally and then resolves the promise.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">myCoolPromiseAPI</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* â€¦ ,*/</span> <span class=\"token punctuation\">{</span> signal <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// If the signal is already aborted, immediately throw in order to reject the promise.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>signal<span class=\"token punctuation\">.</span>aborted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>signal<span class=\"token punctuation\">.</span>reason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Perform the main purpose of the API</span>\n    <span class=\"token comment\">// Call resolve(result) when done.</span>\n\n    <span class=\"token comment\">// Watch for 'abort' signals</span>\n    signal<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abort\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Stop the main operation</span>\n      <span class=\"token comment\">// Reject the promise with the abort reason.</span>\n      <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>signal<span class=\"token punctuation\">.</span>reason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  The API might then be used as shown.\n  Note that <a href=\"/en-US/docs/Web/API/AbortController/abort\"><code>AbortController.abort()</code></a> is called to abort the operation.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> signal <span class=\"token operator\">=</span> controller<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">startSpinner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">myCoolPromiseAPI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">/* â€¦ ,*/</span> signal <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"AbortError\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">showUserErrorMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">stopSpinner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncontroller<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  APIs that do not return promises might react in a similar manner.\n  In some cases it may make sense to absorb the signal.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#ref-for-dom-abortsignal-throwifabortedâ‘ ","title":"DOM Standard"}],"query":"api.AbortSignal.throwIfAborted"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.AbortSignal.throwIfAborted","dataURL":"/en-US/docs/Web/API/AbortSignal/throwIfAborted/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The throwIfAborted() method throws the signal's abort reason if the signal has been aborted; otherwise it does nothing.","popularity":0.0003,"modified":"2022-09-21T20:26:22.000Z","other_translations":[{"title":"AbortSignal.throwIfAborted()","locale":"zh-CN","native":"ä¸­æ–‡ (ç®€ä½“)"}],"source":{"folder":"en-us/web/api/abortsignal/throwifaborted","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/abortsignal/throwifaborted/index.md","last_commit_url":"https://github.com/mdn/content/commit/8d27f508bd2c6270918fb3b047d73b57e8b949d3","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/AbortSignal","title":"AbortSignal"},{"uri":"/en-US/docs/Web/API/AbortSignal/throwIfAborted","title":"AbortSignal.throwIfAborted()"}],"pageTitle":"AbortSignal.throwIfAborted() - Web APIs | MDN","noIndexing":false}}