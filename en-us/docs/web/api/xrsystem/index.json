{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"XRSystem","mdn_url":"/en-US/docs/Web/API/XRSystem","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebXR_Device_API\">WebXR Device API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/XRSystem\"><code>XRSystem</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSystem/isSessionSupported\"><code>XRSystem: isSessionSupported()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSystem/requestSession\"><code>XRSystem: requestSession()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebXR Device API</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/xr\"><code>Navigator.xr</code></a></li><li><a href=\"/en-US/docs/Web/API/WebGLRenderingContext/makeXRCompatible\"><code>WebGLRenderingContext.makeXRCompatible()</code></a></li><li><a href=\"/en-US/docs/Web/API/XRAnchor\"><code>XRAnchor</code></a></li><li><a href=\"/en-US/docs/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRCPUDepthInformation\"><code>XRCPUDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRDepthInformation\"><code>XRDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRFrame\"><code>XRFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSource\"><code>XRInputSource</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRPose\"><code>XRPose</code></a></li><li><a href=\"/en-US/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRRenderState\"><code>XRRenderState</code></a></li><li><a href=\"/en-US/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSessionEvent\"><code>XRSessionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSpace\"><code>XRSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRView\"><code>XRView</code></a></li><li><a href=\"/en-US/docs/Web/API/XRViewerPose\"><code>XRViewerPose</code></a></li><li><a href=\"/en-US/docs/Web/API/XRViewport\"><code>XRViewport</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLBinding\"><code>XRWebGLBinding</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLDepthInformation\"><code>XRWebGLDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <a href=\"/en-US/docs/Web/API/WebXR_Device_API\">WebXR Device API</a> interface <strong><code>XRSystem</code></strong> provides methods which let you get access to an <a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a> object representing a WebXR session. With that <code>XRSession</code> in hand, you can use it to interact with the Augmented Reality (AR) or Virtual Reality (VR) device.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/XRSystem\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"75\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"155.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      XRSystem\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em>While <code>XRSystem</code> directly offers no properties, it does inherit properties from its parent interface, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>In addition to inheriting methods from its parent interface, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>, the <code>XRSystem</code> interface includes the following methods:</em></p>\n<dl>\n  <dt id=\"issessionsupported\"><a href=\"/en-US/docs/Web/API/XRSystem/isSessionSupported\" title=\"isSessionSupported()\"><code>isSessionSupported()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      Returns a promise which resolves to <code>true</code> if the browser supports the given session mode.\n      Resolves to <code>false</code> if the specified mode isn't supported.\n    </p>\n  </dd>\n  <dt id=\"requestsession\"><a href=\"/en-US/docs/Web/API/XRSystem/requestSession\" title=\"requestSession()\"><code>requestSession()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Returns a promise that resolves to a new <a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a> with the specified session mode.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<dl>\n  <dt id=\"devicechange\"><a href=\"/en-US/docs/Web/API/XRSystem/devicechange_event\" title=\"devicechange\"><code>devicechange</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>\n      Sent when the set of available XR devices has changed.\n      Also available using the <code>ondevicechange</code> event handler.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"usage_notes","title":"Usage notes","isH3":false,"content":"<p>This interface was previously known as <code>XR</code> in earlier versions of the specification; if you see references to <code>XR</code> in code or documentation, replace that with <code>XRSystem</code>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following example shows how to use both <a href=\"/en-US/docs/Web/API/XRSystem/isSessionSupported\" title=\"isSessionSupported()\"><code>isSessionSupported()</code></a> and <a href=\"/en-US/docs/Web/API/XRSystem/requestSession\" title=\"requestSession()\"><code>requestSession()</code></a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>xr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  immersiveButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> onButtonClicked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  navigator<span class=\"token punctuation\">.</span>xr<span class=\"token punctuation\">.</span><span class=\"token function\">isSessionSupported</span><span class=\"token punctuation\">(</span><span class=\"token string\">'immersive-vr'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">isSupported</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    immersiveButton<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>isSupported<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onButtonClicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>xrSession<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    navigator<span class=\"token punctuation\">.</span>xr<span class=\"token punctuation\">.</span><span class=\"token function\">requestSession</span><span class=\"token punctuation\">(</span><span class=\"token string\">'immersive-vr'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">session</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// onSessionStarted() not shown for reasons of brevity and clarity.</span>\n      <span class=\"token function\">onSessionStarted</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Shut down the already running XRSession</span>\n    xrSession<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Since there are cases where the end event is not sent, call the handler here as well.</span>\n      <span class=\"token function\">onSessionEnded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This code starts by checking to see if WebXR is available by looking for the <a href=\"/en-US/docs/Web/API/Navigator/xr\"><code>navigator.xr</code></a> property. If it's found, we know WebXR is present, so we proceed by establishing a handler for the button which the user can click to toggle immersive VR mode on and off.</p>\n<p>However, we don't yet know if the desired immersive mode is available. To determine this, we call <code>isSessionSupported()</code>, passing it the desired session option before enabling the button, <code>immersiveButton</code>, which the user can then use to switch to immersive mode only if immersive VR mode is available. If immersive VR isn't available, the button is disabled to prevent its use.</p>\n<p>The <code>onButtonClicked()</code> function checks to see if there's already a session running. If there isn't, we use <code>requestSession()</code> to start one and, once the returned promise resolves, we call a function <code>onSessionStarted()</code> to set up our session for rendering and so forth.</p>\n<p>If, on the other hand, there is already an ongoing XR session, we instead call <a href=\"/en-US/docs/Web/API/XRSession/end\" title=\"end()\"><code>end()</code></a> to end the current session. When the current session ends, the <a href=\"/en-US/docs/Web/API/XRSession/end_event\" title=\"end\"><code>end</code></a> event is sent, so set <code>xrSession</code> to <code>null</code> in its handler to record the fact that we no longer have an ongoing session. That way, if the user clicks the button again, a new session will start.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://immersive-web.github.io/webxr/#xrsystem-interface","title":"WebXR Device API"}],"query":"api.XRSystem"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.XRSystem","dataURL":"/en-US/docs/Web/API/XRSystem/bcd.json"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Events","id":"events"},{"text":"Usage notes","id":"usage_notes"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The WebXR Device API interface XRSystem provides methods which let you get access to an XRSession object representing a WebXR session. With that XRSession in hand, you can use it to interact with the Augmented Reality (AR) or Virtual Reality (VR) device.","popularity":0.0003,"modified":"2022-09-09T05:23:40.000Z","other_translations":[{"title":"XRSystem","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/xrsystem","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/xrsystem/index.md","last_commit_url":"https://github.com/mdn/content/commit/073f70e052ff92ab715df3c20678c11c9b51747f","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/XRSystem","title":"XRSystem"}],"pageTitle":"XRSystem - Web APIs | MDN","noIndexing":false}}