{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CustomElementRegistry","mdn_url":"/en-US/docs/Web/API/CustomElementRegistry","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/Web_Components/Using_custom_elements\">Using custom elements</a></li><li><a href=\"/en-US/docs/Web/Web_Components/Using_shadow_DOM\">Using shadow DOM</a></li><li><a href=\"/en-US/docs/Web/Web_Components/Using_templates_and_slots\">Using templates and slots</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLSlotElement\"><code>HTMLSlotElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></li><li><a href=\"/en-US/docs/Web/API/ShadowRoot\"><code>ShadowRoot</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Element/shadowRoot\"><code>Element.shadowRoot</code></a></li><li><a href=\"/en-US/docs/Web/API/Element/slot\"><code>Element.slot</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/composed\"><code>Event.composed</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/composedPath\"><code>Event.composedPath</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/isConnected\"><code>Node.isConnected</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/customElements\"><code>Window.customElements</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Document/createElement\"><code>Document.createElement()</code></a></li><li><a href=\"/en-US/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/getRootNode\"><code>Node.getRootNode()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>CustomElementRegistry</code></strong> interface provides methods for registering custom elements and querying registered elements. To get an instance of it, use the <a href=\"/en-US/docs/Web/API/Window/customElements\"><code>window.customElements</code></a> property.</p>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"customelementregistry.define\"><a href=\"/en-US/docs/Web/API/CustomElementRegistry/define\"><code>CustomElementRegistry.define()</code></a></dt>\n  <dd>\n    <p>Defines a new <a href=\"/en-US/docs/Web/Web_Components/Using_custom_elements\">custom element</a>.</p>\n  </dd>\n  <dt id=\"customelementregistry.get\"><a href=\"/en-US/docs/Web/API/CustomElementRegistry/get\"><code>CustomElementRegistry.get()</code></a></dt>\n  <dd>\n    <p>Returns the constructor for the named custom element, or <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a> if the custom element is not defined.</p>\n  </dd>\n  <dt id=\"customelementregistry.upgrade\"><a href=\"/en-US/docs/Web/API/CustomElementRegistry/upgrade\"><code>CustomElementRegistry.upgrade()</code></a></dt>\n  <dd>\n    <p>Upgrades a custom element directly, even before it is connected to its shadow root.</p>\n  </dd>\n  <dt id=\"customelementregistry.whendefined\"><a href=\"/en-US/docs/Web/API/CustomElementRegistry/whenDefined\"><code>CustomElementRegistry.whenDefined()</code></a></dt>\n  <dd>\n    <p>Returns an empty <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves when a custom element becomes defined with the given name. If such a custom element is already defined, the returned promise is immediately fulfilled.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following code is taken from our <a href=\"https://github.com/mdn/web-components-examples/tree/main/word-count-web-component\" class=\"external\" rel=\" noopener\">word-count-web-component</a> example (<a href=\"https://mdn.github.io/web-components-examples/word-count-web-component/\" class=\"external\" rel=\" noopener\">see it live also</a>). Note how we use the <a href=\"/en-US/docs/Web/API/CustomElementRegistry/define\"><code>CustomElementRegistry.define()</code></a> method to define the custom element after creating its class.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Create a class for the element</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WordCount</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLParagraphElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Always call super first in constructor</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// count words in element's parent element</span>\n    <span class=\"token keyword\">const</span> wcParent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Words: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span>wcParent<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create a shadow root</span>\n    <span class=\"token keyword\">const</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create text node and add word count to it</span>\n    <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Append it to the shadow root</span>\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update count when element content changes</span>\n    <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Words: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span>wcParent<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      text<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Define the new element</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'word-count'</span><span class=\"token punctuation\">,</span> WordCount<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token string\">'p'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> The <code>CustomElementRegistry</code> is available through the <a href=\"/en-US/docs/Web/API/Window/customElements\"><code>Window.customElements</code></a> property.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/custom-elements.html#custom-elements-api","title":"HTML Standard"}],"query":"api.CustomElementRegistry"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CustomElementRegistry","dataURL":"/en-US/docs/Web/API/CustomElementRegistry/bcd.json"}}],"toc":[{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The CustomElementRegistry interface provides methods for registering custom elements and querying registered elements. To get an instance of it, use the window.customElements property.","popularity":0.0016,"modified":"2022-09-09T05:07:36.000Z","other_translations":[{"title":"CustomElementRegistry","locale":"es","native":"Español"},{"title":"CustomElementRegistry","locale":"ja","native":"日本語"},{"title":"CustomElementRegistry","locale":"ko","native":"한국어"},{"title":"CustomElementRegistry","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"CustomElementRegistry","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/customelementregistry","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/customelementregistry/index.md","last_commit_url":"https://github.com/mdn/content/commit/bf30e32f3b51f59080f2c76795beadb247a551eb","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CustomElementRegistry","title":"CustomElementRegistry"}],"pageTitle":"CustomElementRegistry - Web APIs | MDN","noIndexing":false}}