{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Detect WebGL","mdn_url":"/en-US/docs/Web/API/WebGL_API/By_example/Detect_WebGL","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Web/API/WebGL_API/By_example\">« Previous</a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Web/API/WebGL_API/By_example/Clearing_with_colors\">Next  »</a></li>\n</ul>\n<p>This example demonstrates how to detect a <a href=\"/en-US/docs/Glossary/WebGL\">WebGL</a> rendering context and reports the result to the user.</p>"}},{"type":"prose","value":{"id":"feature-detecting_webgl","title":"Feature-detecting WebGL","isH3":false,"content":"<iframe class=\"sample-code-frame\" title=\"Feature-detecting WebGL sample\" id=\"frame_feature-detecting_webgl\" width=\"660\" height=\"150\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/WebGL_API/By_example/Detect_WebGL/_sample_.feature-detecting_webgl.html\" loading=\"lazy\"></iframe>\n<p>In this first example we are going to check whether the browser supports <a href=\"/en-US/docs/Glossary/WebGL\">WebGL</a>. To that end we will try to obtain the <a href=\"/en-US/docs/Web/API/WebGLRenderingContext\" title=\"WebGL rendering context\">WebGL rendering context</a> from a <a href=\"/en-US/docs/Web/API/HTMLCanvasElement\" title=\"canvas\"><code>canvas</code></a> element. The <a href=\"/en-US/docs/Web/API/WebGLRenderingContext\" title=\"WebGL rendering context\">WebGL rendering context</a> is an interface, through which you can set and query the state of the graphics machine, send data to the WebGL, and execute draw commands.</p>\n<p>Saving the state of the graphics machine within a single context interface is not unique to <a href=\"/en-US/docs/Glossary/WebGL\">WebGL</a>. This is also done in other graphics <a href=\"/en-US/docs/Glossary/API\">API</a>, such as the <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\" title=\"canvas 2D rendering context\">canvas 2D rendering context</a>. However, the properties and variables you can tweak are different for each <a href=\"/en-US/docs/Glossary/API\">API</a>.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>[ Here would go the result of WebGL feature detection ]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">&gt;</span></span>Press here to detect WebGLRenderingContext<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0.6em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Run everything inside window load event handler, to make sure</span>\n<span class=\"token comment\">// DOM is fully loaded and styled before trying to manipulate it.</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> paragraph <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Adding click event handler to button.</span>\n  button<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> detectWebGLContext<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">detectWebGLContext</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create canvas element. The canvas is not added to the</span>\n    <span class=\"token comment\">// document itself, so it is never displayed in the</span>\n    <span class=\"token comment\">// browser window.</span>\n    <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Get WebGLRenderingContext from canvas element.</span>\n    <span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"experimental-webgl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Report the result.</span>\n    paragraph<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> gl <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WebGLRenderingContext</span>\n      <span class=\"token operator\">?</span> <span class=\"token string\">\"Congratulations! Your browser supports WebGL.\"</span>\n      <span class=\"token operator\">:</span> <span class=\"token string\">\"Failed. Your browser or device may not support WebGL.\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>The source code of this example is also available on <a href=\"https://github.com/idofilin/webgl-by-example/tree/master/detect-webgl\" class=\"external\" rel=\" noopener\">GitHub</a>.</p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Web/API/WebGL_API/By_example\">« Previous</a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Web/API/WebGL_API/By_example/Clearing_with_colors\">Next  »</a></li>\n</ul>"}}],"toc":[{"text":"Feature-detecting WebGL","id":"feature-detecting_webgl"}],"summary":"This example demonstrates how to detect a WebGL rendering context and reports the result to the user.","popularity":0.0005,"modified":"2022-09-13T08:10:53.000Z","other_translations":[{"title":"Détecter WebGL","locale":"fr","native":"Français"},{"title":"WebGL 찾기","locale":"ko","native":"한국어"},{"title":"检测 WebGL","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/webgl_api/by_example/detect_webgl","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/webgl_api/by_example/detect_webgl/index.md","last_commit_url":"https://github.com/mdn/content/commit/2406dc5c7cbded8f9227dfa6cf4284ff60c18b89","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WebGL_API","title":"WebGL: 2D and 3D graphics for the web"},{"uri":"/en-US/docs/Web/API/WebGL_API/By_example","title":"WebGL by example"},{"uri":"/en-US/docs/Web/API/WebGL_API/By_example/Detect_WebGL","title":"Detect WebGL"}],"pageTitle":"Detect WebGL - Web APIs | MDN","noIndexing":false}}