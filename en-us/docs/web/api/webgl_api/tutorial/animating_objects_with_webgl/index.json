{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Animating objects with WebGL","mdn_url":"/en-US/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL","locale":"en-US","native":"English (US)","sidebarHTML":"\n <ol>\n  <li><a href=\"/en-US/docs/Web/API/WebGL_API\"><strong>WebGL API</strong></a></li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>WebGL tutorial</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL\">Getting started with WebGL</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Adding_2D_content_to_a_WebGL_context\">Adding 2D content to a WebGL context</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\">Using shaders to apply color in WebGL</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL\">Animating objects with WebGL</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">Creating 3D objects using WebGL</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\">Using textures in WebGL</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL\">Lighting in WebGL</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL\">Animating textures in WebGL</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Examples and articles</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Matrix_math_for_the_web\">Matrix math for the web</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/WebGL_model_view_projection\">WebGL model view projection</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/WebGL_best_practices\">WebGL best practices</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Using_Extensions\">Using WebGL extensions</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/Basic_2D_animation_example\">A basic 2D WebGL animation example</a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL_API/By_example\">WebGL by example</a></li>\n      </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n      <summary>Interfaces</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLContextEvent\"><code>WebGLContextEvent</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLProgram\"><code>WebGLProgram</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLQuery\"><code>WebGLQuery</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLSampler\"><code>WebGLSampler</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLShader\"><code>WebGLShader</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLShaderPrecisionFormat\"><code>WebGLShaderPrecisionFormat</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLSync\"><code>WebGLSync</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLTexture\"><code>WebGLTexture</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a></li>\n        <li><a href=\"/en-US/docs/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a></li>\n      </ol>\n    </details>\n  </li>\n\n  <li><strong><a href=\"/en-US/docs/MDN\">Documentation:</a></strong></li>\n  <li class=\"toggle\">\n    <details>\n      <summary>Contribute</summary>\n      <ol>\n        <li><a href=\"/en-US/docs/MDN\">The MDN project</a></li>\n      </ol>\n    </details>\n  </li>\n </ol>\n","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\">« Previous</a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">Next  »</a></li>\n</ul>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This example uses the glMatrix library to perform its matrix and vertex math. You'll need to include it if you create your own project based on this code. Our sample loads a copy from a CDN in our HTML's <a href=\"/en-US/docs/Web/HTML/Element/head\"><code>&lt;head&gt;</code></a>.</p>\n</div>"}},{"type":"prose","value":{"id":"making_the_square_rotate","title":"Making the square rotate","isH3":false,"content":"<p>In this example, we'll actually rotate our camera. By doing so, it will look as if we are rotating the square. The first thing we'll need is a variable in which to track the current rotation of the camera:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> squareRotation <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Now we need to update the <code>drawScene()</code> function to apply the current rotation to the camera when drawing it. After translating the camera to the initial drawing position for the square, we apply the rotation like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  mat4<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelViewMatrix<span class=\"token punctuation\">,</span>     <span class=\"token comment\">// destination matrix</span>\n                 modelViewMatrix<span class=\"token punctuation\">,</span>     <span class=\"token comment\">// matrix to translate</span>\n                 <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">6.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// amount to translate</span>\n  mat4<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>modelViewMatrix<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// destination matrix</span>\n              modelViewMatrix<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// matrix to rotate</span>\n              squareRotation<span class=\"token punctuation\">,</span>   <span class=\"token comment\">// amount to rotate in radians</span>\n              <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// axis to rotate around</span>\n</code></pre></div>\n<p>This rotates the modelViewMatrix by the current value of <code>squareRotation</code>, around the Z axis.</p>\n<p>To actually animate, we need to add code that changes the value of <code>squareRotation</code> over time. We can do that by creating a new variable to track the time at which we last animated (let's call it <code>then</code>), then adding the following code to the end of the main function</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  <span class=\"token keyword\">let</span> then <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Draw the scene repeatedly</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">now</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    now <span class=\"token operator\">*=</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// convert to seconds</span>\n    <span class=\"token keyword\">const</span> deltaTime <span class=\"token operator\">=</span> now <span class=\"token operator\">-</span> then<span class=\"token punctuation\">;</span>\n    then <span class=\"token operator\">=</span> now<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">drawScene</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> programInfo<span class=\"token punctuation\">,</span> buffers<span class=\"token punctuation\">,</span> deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>render<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This code uses <code>requestAnimationFrame</code> to ask the browser to call the function \"<code>render</code>\" on each frame. <code>requestAnimationFrame</code> passes us the time in milliseconds since the page loaded. We convert that to seconds and then subtract from it the last time to compute <code>deltaTime</code> which is the number of second since the last frame was rendered. At the end of drawscene we add the code to update <code>squareRotation</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>squareRotation <span class=\"token operator\">+=</span> deltaTime<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This code uses the amount of time that's passed since the last time we updated the value of <code>squareRotation</code> to determine how far to rotate the square.</p><iframe width=\"670\" height=\"510\" src=\"https://mdn.github.io/dom-examples/webgl-examples/tutorial/sample4/index.html\" loading=\"lazy\"></iframe>\n<p><a href=\"https://github.com/mdn/dom-examples/tree/main/webgl-examples/tutorial/sample4\" class=\"external\" rel=\" noopener\">View the complete code</a> | <a href=\"https://mdn.github.io/dom-examples/webgl-examples/tutorial/sample4/\" class=\"external\" rel=\" noopener\">Open this demo on a new page</a></p><ul class=\"prev-next\">\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL\">« Previous</a></li>\n    <li><a class=\"button minimal\" href=\"/en-US/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL\">Next  »</a></li>\n</ul>"}}],"toc":[{"text":"Making the square rotate","id":"making_the_square_rotate"}],"summary":"In this example, we'll actually rotate our camera. By doing so, it will look as if we are rotating the square. The first thing we'll need is a variable in which to track the current rotation of the camera:","popularity":0.0009,"modified":"2022-09-14T19:04:31.000Z","other_translations":[{"title":"Animer des objets avec WebGL","locale":"fr","native":"Français"},{"title":"WebGL でのオブジェクトのアニメーティング","locale":"ja","native":"日本語"},{"title":"WebGL을 사용한 객체 애니메이션","locale":"ko","native":"한국어"},{"title":"Оживление объектов при помощи WebGL","locale":"ru","native":"Русский"},{"title":"用 WebGL 让目标动起来","locale":"zh-CN","native":"中文 (简体)"},{"title":"利用 WebGL 產生動畫","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/api/webgl_api/tutorial/animating_objects_with_webgl","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/webgl_api/tutorial/animating_objects_with_webgl/index.md","last_commit_url":"https://github.com/mdn/content/commit/a33aa4b21a269539354089513b22846f4be83f3c","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WebGL_API","title":"WebGL: 2D and 3D graphics for the web"},{"uri":"/en-US/docs/Web/API/WebGL_API/Tutorial","title":"WebGL tutorial"},{"uri":"/en-US/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL","title":"Animating objects with WebGL"}],"pageTitle":"Animating objects with WebGL - Web APIs | MDN","noIndexing":false}}