{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Using the Performance API","mdn_url":"/en-US/docs/Web/API/Performance_API/Using_the_Performance_API","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Performance_API\">Performance API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMark\"><code>PerformanceMark</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceMeasure\"><code>PerformanceMeasure</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceNavigation\"><code>PerformanceNavigation</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceTiming\"><code>PerformanceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>A fundamental requirement of web performance is a precise and consistent definition of <em>time.</em> The <a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> type (a <code>double</code>) is used by all performance interfaces to hold such time values. Additionally, there must be a way to create a <em>timestamp</em> for a specific point in time; this is done with the <a href=\"/en-US/docs/Web/API/Performance/now\" title=\"now()\"><code>now()</code></a> method.</p>\n<p>Web performance interfaces are defined in a <a href=\"https://www.w3.org/wiki/Web_Performance/Publications\" class=\"external\" rel=\" noopener\">suite of standards</a>. The <em>base</em> interface for these standards is the <a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a> interface and its methods and properties are extended by different standards. This guide describes how to use the <a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a> interfaces that are defined in the <a href=\"https://w3c.github.io/hr-time/\" class=\"external\" rel=\" noopener\">High-Resolution Time</a> standard. Other web performance guides (listed in the <a href=\"#see_also\">See also</a> section) describe how to use additional methods and properties of the <a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a> interface.</p>"}},{"type":"prose","value":{"id":"high_precision_timing","title":"High precision timing","isH3":false,"content":"<p><em>High precision timing</em> is achieved by using the <a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> type for time values. The unit is milliseconds and should be accurate to 5 Âµs (microseconds). However, if the browser is unable to provide a time value accurate to 5 microseconds (because of hardware or software constraints, for example), the browser can represent the value as a time in milliseconds accurate to a millisecond.</p>\n<p>The following code example shows the use of <a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> and the <a href=\"/en-US/docs/Web/API/Performance/now\" title=\"Performance.now()\"><code>Performance.now()</code></a> method. The <a href=\"/en-US/docs/Web/API/Performance/now\" title=\"now()\"><code>now()</code></a> method returns a <em>timestamp</em> (of type <a href=\"/en-US/docs/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a>) that is a discrete point in time. By calling this method before and after a task, the time it takes to do the task can be measured.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">calculate_time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> startTime<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> endTime<span class=\"token punctuation\">;</span>\n\n  startTime <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">do_task</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  endTime <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>endTime <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"serializing_the_performance_object","title":"Serializing the <code>Performance</code> object","isH3":false,"content":"<p>JSON serialization of the <a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a> object is done via the <a href=\"/en-US/docs/Web/API/Performance/toJSON\" title=\"toJSON()\"><code>toJSON()</code></a> method. In the following example, JSON serialization for the <a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a>, <a href=\"/en-US/docs/Web/API/Performance/timing\"><code>Performance.timing</code></a> and <a href=\"/en-US/docs/Web/API/Performance/navigation\"><code>Performance.navigation</code></a> objects is printed in the <code>object</code> element.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">print_json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>performance<span class=\"token punctuation\">.</span>toJSON <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    output<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">window.performance.toJSON() is NOT supported</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>performance<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Print the performance object</span>\n    output<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">performance = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> \\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Print the performance.timing and performance.navigation objects</span>\n    <span class=\"token keyword\">const</span> timing <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>timing<span class=\"token punctuation\">;</span>\n    output<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">performance.timing = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>timing<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> \\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> navigation <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>navigation<span class=\"token punctuation\">;</span>\n    output<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">performance.navigation = </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>navigation<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> \\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","titleAsText":"Serializing the Performance object"}},{"type":"prose","value":{"id":"specifications","title":"Specifications","isH3":false,"content":"<p>The interfaces described in this document are defined in the <code>High Resolution Time</code> standard which has two levels:</p>\n<ul>\n  <li><a href=\"https://w3c.github.io/hr-time/\" class=\"external\" rel=\" noopener\">High-Resolution Time Level 2</a>; Editors Draft; Work In Progress</li>\n  <li><a href=\"https://www.w3.org/TR/hr-time/\" class=\"external\" rel=\" noopener\">High-Resolution Time</a>; W3C Recommendation 17 December 2012</li>\n</ul>"}},{"type":"prose","value":{"id":"interoperability","title":"Interoperability","isH3":false,"content":"<p>As shown in the <a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a> interface's <a href=\"/en-US/docs/Web/API/Performance#browser_compatibility\">Browser Compatibility</a> table, most of the <a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a> interfaces are broadly implemented by desktop browsers.</p>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Performance_API\" title=\"Performance API Overview\"><code>Performance API Overview</code></a></li>\n  <li><a href=\"https://siusin.github.io/perf-timing-primer/\" class=\"external\" rel=\" noopener\">A Primer for Web Performance Timing APIs</a></li>\n  <li><a href=\"https://docs.google.com/document/d/1ZKW9N0cteHgK91SyYQONFuy2ZW6J4Oak398niTo232E/edit\" class=\"external\" rel=\" noopener\">Graphic of Web Performance Layers</a></li>\n  <li><a href=\"https://caniuse.com/#search=high-resolution-time\" class=\"external\" rel=\" noopener\">CanIUse data for High-Resolution Time</a></li>\n  <li><a href=\"https://www.w3.org/wiki/Web_Performance/Publications\" class=\"external\" rel=\" noopener\">Web Performance Standards Status and Roadmap</a></li>\n</ul>"}}],"toc":[{"text":"High precision timing","id":"high_precision_timing"},{"text":"Serializing the <code>Performance</code> object","id":"serializing_the_performance_object"},{"text":"Specifications","id":"specifications"},{"text":"Interoperability","id":"interoperability"},{"text":"See also","id":"see_also"}],"summary":"A fundamental requirement of web performance is a precise and consistent definition of time. The DOMHighResTimeStamp type (a double) is used by all performance interfaces to hold such time values. Additionally, there must be a way to create a timestamp for a specific point in time; this is done with the now() method.","popularity":0.0002,"modified":"2022-09-09T05:17:24.000Z","other_translations":[{"title":"Utilisation de l'API Performance","locale":"fr","native":"FranÃ§ais"}],"source":{"folder":"en-us/web/api/performance_api/using_the_performance_api","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/performance_api/using_the_performance_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/4b4638246aad5d39b9a2e5c572b179b4c39c0a84","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Performance_API","title":"Performance API"},{"uri":"/en-US/docs/Web/API/Performance_API/Using_the_Performance_API","title":"Using the Performance API"}],"pageTitle":"Using the Performance API - Web APIs | MDN","noIndexing":false}}