{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"XRSession: selectstart event","mdn_url":"/en-US/docs/Web/API/XRSession/selectstart_event","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebXR_Device_API\">WebXR Device API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/depthDataFormat\"><code>depthDataFormat</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/depthUsage\"><code>depthUsage</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/domOverlayState\"><code>domOverlayState</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/environmentBlendMode\"><code>environmentBlendMode</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/inputSources\"><code>inputSources</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/interactionMode\"><code>interactionMode</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/preferredReflectionFormat\"><code>preferredReflectionFormat</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/renderState\"><code>renderState</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/visibilityState\"><code>visibilityState</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/cancelAnimationFrame\"><code>cancelAnimationFrame()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/end\"><code>end()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/requestAnimationFrame\"><code>requestAnimationFrame()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/requestHitTestSource\"><code>requestHitTestSource()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/requestHitTestSourceForTransientInput\"><code>requestHitTestSourceForTransientInput()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/requestLightProbe\"><code>requestLightProbe()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/requestReferenceSpace\"><code>requestReferenceSpace()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/updateRenderState\"><code>updateRenderState()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/end_event\"><code>end</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/inputsourceschange_event\"><code>inputsourceschange</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/select_event\"><code>select</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/selectend_event\"><code>selectend</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>selectstart</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/squeeze_event\"><code>squeeze</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/squeezeend_event\"><code>squeezeend</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/squeezestart_event\"><code>squeezestart</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/XRSession/visibilitychange_event\"><code>visibilitychange</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebXR Device API</summary><ol><li><a href=\"/en-US/docs/Web/API/Navigator/xr\"><code>Navigator.xr</code></a></li><li><a href=\"/en-US/docs/Web/API/WebGLRenderingContext/makeXRCompatible\"><code>WebGLRenderingContext.makeXRCompatible()</code></a></li><li><a href=\"/en-US/docs/Web/API/XRAnchor\"><code>XRAnchor</code></a></li><li><a href=\"/en-US/docs/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRCPUDepthInformation\"><code>XRCPUDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRDepthInformation\"><code>XRDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRFrame\"><code>XRFrame</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSource\"><code>XRInputSource</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRPose\"><code>XRPose</code></a></li><li><a href=\"/en-US/docs/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRRenderState\"><code>XRRenderState</code></a></li><li><a href=\"/en-US/docs/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSessionEvent\"><code>XRSessionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSpace\"><code>XRSpace</code></a></li><li><a href=\"/en-US/docs/Web/API/XRSystem\"><code>XRSystem</code></a></li><li><a href=\"/en-US/docs/Web/API/XRView\"><code>XRView</code></a></li><li><a href=\"/en-US/docs/Web/API/XRViewerPose\"><code>XRViewerPose</code></a></li><li><a href=\"/en-US/docs/Web/API/XRViewport\"><code>XRViewport</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLBinding\"><code>XRWebGLBinding</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLDepthInformation\"><code>XRWebGLDepthInformation</code></a></li><li><a href=\"/en-US/docs/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <a href=\"/en-US/docs/Web/API/WebXR_Device_API\">WebXR</a> <strong><code>selectstart</code></strong> event is sent to an <a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a> when the user begins a <a href=\"/en-US/docs/Web/API/WebXR_Device_API/Inputs#primary_action\">primary action</a> on one of its input sources.</p>\n<p>The <a href=\"/en-US/docs/Web/API/Element/beforexrselect_event\" title=\"beforexrselect\"><code>beforexrselect</code></a> is fired before this event and can prevent this event from being raised.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<p>Use the event name in methods like <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, or set an event handler property.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'selectstart'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function-variable function\">onselectstart</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"event_type","title":"Event type","isH3":false,"content":"<p>An <a href=\"/en-US/docs/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a>. Inherits from <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a>.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/Event\">\n    <rect x=\"0\" y=\"0\" width=\"75\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"37.5\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      Event\n    </text>\n  </a>\n  <line x1=\"75\" y1=\"14\" x2=\"105\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"75,14 85,9 85,19 75,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/XRInputSourceEvent\">\n    <rect x=\"105\" y=\"0\" width=\"144\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"177\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      XRInputSourceEvent\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"event_properties","title":"Event properties","isH3":false,"content":"<p><em>In addition to the properties listed below, properties from the parent interface, <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a>, are available.</em></p>\n<dl>\n  <dt id=\"frame\"><a href=\"/en-US/docs/Web/API/XRInputSourceEvent/frame\" title=\"frame\"><code>frame</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>An <a href=\"/en-US/docs/Web/API/XRFrame\"><code>XRFrame</code></a> object providing the needed information about the event frame during which the event occurred. This frame may have been rendered in the past rather than being a current frame. Because this is an <em>event</em> frame, not an <em>animation</em> frame, you cannot call <a href=\"/en-US/docs/Web/API/XRFrame/getViewerPose\" title=\"XRFrame.getViewerPose()\"><code>XRFrame.getViewerPose()</code></a> on it; instead, use <a href=\"/en-US/docs/Web/API/XRFrame/getPose\" title=\"getPose()\"><code>getPose()</code></a>.</p>\n  </dd>\n  <dt id=\"inputsource\"><a href=\"/en-US/docs/Web/API/XRInputSourceEvent/inputSource\" title=\"inputSource\"><code>inputSource</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>An <a href=\"/en-US/docs/Web/API/XRInputSource\"><code>XRInputSource</code></a> object indicating which input source generated the input event.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":""}},{"type":"prose","value":{"id":"trigger","title":"Trigger","isH3":true,"content":"<p>Triggered when the user presses triggers or buttons, taps a touchpad, speaks a command, or performs a recognizable gesture when using a video tracking system or handheld controller with an accelerometer.</p>"}},{"type":"prose","value":{"id":"use_cases","title":"Use cases","isH3":true,"content":"<p>The <code>selectstart</code> and <a href=\"/en-US/docs/Web/API/XRSession/selectend_event\" title=\"selectend\"><code>selectend</code></a> events tell you when you might want to display something to the user indicating that the primary action is going on. This might be drawing a controller with the activated button in a new color, or showing the targeted object being grabbed and moved around, starting when <code>selectstart</code> arrives and stopping when <code>selectend</code> is received.</p>\n<p>The <a href=\"/en-US/docs/Web/API/XRSession/select_event\" title=\"select\"><code>select</code></a> event tells your code that the user has completed the action they want to complete. This might be as simple as throwing an object or pulling the trigger of a gun in a game, or as involved as placing a dragged object in a new location.</p>\n<p>If your primary action is a simple trigger action and you don't need to animate anything while the trigger is engaged, you can ignore the <code>selectstart</code> and <code>selectend</code> events and act on the start event.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following example uses <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a> to establish handlers for the selection events: <code>selectstart</code>, <a href=\"/en-US/docs/Web/API/XRSession/selectend_event\" title=\"selectend\"><code>selectend</code></a>, and <a href=\"/en-US/docs/Web/API/XRSession/select_event\" title=\"select\"><code>select</code></a>. This snippet is the core of an event handler to allow the user to grab objects in the scene and move them around.</p>\n<p>In this case, a single function is used to handle all three events, allowing them to share certain code that's the same regardless of which of the three events is received. Only after completing those tasks does the <code>onSelectionEvent()</code> function below dispatch the action out to a specialized function to handle things.</p>\n<p>After checking to ensure that the received event is a <code>tracked-pointer</code> event (the only kind we handle here), the target ray's pose is obtained using <a href=\"/en-US/docs/Web/API/XRFrame/getPose\" title=\"getPose()\"><code>getPose()</code></a>.</p>\n<p>If the target ray pose was fetched successfully, the code then uses the value of <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a> property <a href=\"/en-US/docs/Web/API/Event/type\" title=\"type\"><code>type</code></a> to route control to an appropriate function to handle the event which arrived:</p>\n<ul>\n  <li>For <code>selectstart</code> events, a <code>myBeginTracking()</code> function is called with the target ray pose's <a href=\"/en-US/docs/Web/API/XRRigidTransform/matrix\" title=\"matrix\"><code>matrix</code></a>. The <code>myBeginTracking()</code> function would presumably start the presentation of the object-dragging process, using the transform to perform a hit test, determining which object to pick up. <code>myBeginTracking()</code> returns an object representing the object the user has begun to drag.</li>\n  <li>Upon receiving a <code>select</code> event, the <code>myDropObject()</code> function is called with the target object, and the current target ray pose transform as inputs. This places the object into its new position in the world and triggers any effects that may arise, like scheduling an animation of a splash if dropped in water, etc.</li>\n  <li>The <code>selectend</code> event results in a <code>myStopTracking()</code> function being called with the object being dragged and the final target ray pose's transform.</li>\n</ul>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>xrSession<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selectstart\"</span><span class=\"token punctuation\">,</span> onSelectionEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxrSession<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select\"</span><span class=\"token punctuation\">,</span> onSelectionEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxrSession<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selectend\"</span><span class=\"token punctuation\">,</span> onSelectionEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onSelectionEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> source <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>inputSource<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> targetObj <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span>targetRayMode <span class=\"token operator\">!==</span> <span class=\"token string\">\"tracked-pointer\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">let</span> targetRayPose <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>frame<span class=\"token punctuation\">.</span><span class=\"token function\">getPose</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">.</span>targetRaySpace<span class=\"token punctuation\">,</span> myRefSpace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>targetRayPose<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"selectstart\"</span><span class=\"token operator\">:</span>\n      targetObj <span class=\"token operator\">=</span> <span class=\"token function\">myBeginTracking</span><span class=\"token punctuation\">(</span>targetRayPose<span class=\"token punctuation\">.</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"select\"</span><span class=\"token operator\">:</span>\n      <span class=\"token function\">myDropObject</span><span class=\"token punctuation\">(</span>targetObj<span class=\"token punctuation\">,</span> targetRayPose<span class=\"token punctuation\">.</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"selectend\"</span><span class=\"token operator\">:</span>\n      <span class=\"token function\">myStopTracking</span><span class=\"token punctuation\">(</span>targetObj<span class=\"token punctuation\">,</span> targetRayPose<span class=\"token punctuation\">.</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>You can also set up a handler for <code>selectend</code> events by setting the <a href=\"/en-US/docs/Web/API/XRSession\"><code>XRSession</code></a> object's <code>onselectend</code> event handler property to a function that handles the event:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>xrSession<span class=\"token punctuation\">.</span>onselectstart <span class=\"token operator\">=</span> onSelectionEvent<span class=\"token punctuation\">;</span>\nxrSession<span class=\"token punctuation\">.</span>onselect <span class=\"token operator\">=</span> onSelectionEvent<span class=\"token punctuation\">;</span>\nxrSession<span class=\"token punctuation\">.</span>onselectend <span class=\"token operator\">=</span> onSelectionEvent<span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://immersive-web.github.io/webxr/#eventdef-xrsession-selectstart","title":"WebXR Device API"},{"bcdSpecificationURL":"https://immersive-web.github.io/webxr/#dom-xrsession-onselectstart","title":"WebXR Device API"}],"query":"api.XRSession.selectstart_event"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.XRSession.selectstart_event","dataURL":"/en-US/docs/Web/API/XRSession/selectstart_event/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/XRSession/select_event\" title=\"select\"><code>select</code></a> and <a href=\"/en-US/docs/Web/API/XRSession/selectend_event\" title=\"selectend\"><code>selectend</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Element/beforexrselect_event\" title=\"beforexrselect\"><code>beforexrselect</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Event type","id":"event_type"},{"text":"Event properties","id":"event_properties"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The WebXR selectstart event is sent to an XRSession when the user begins a primary action on one of its input sources.","popularity":0,"modified":"2022-09-11T09:52:25.000Z","source":{"folder":"en-us/web/api/xrsession/selectstart_event","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/xrsession/selectstart_event/index.md","last_commit_url":"https://github.com/mdn/content/commit/9d5430a436abb2816f93935e11e1fa993a59e8ca","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/XRSession","title":"XRSession"},{"uri":"/en-US/docs/Web/API/XRSession/selectstart_event","title":"XRSession: selectstart event"}],"pageTitle":"XRSession: selectstart event - Web APIs | MDN","noIndexing":false}}