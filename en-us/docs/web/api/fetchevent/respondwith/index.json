{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"FetchEvent.respondWith()","mdn_url":"/en-US/docs/Web/API/FetchEvent/respondWith","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/FetchEvent/FetchEvent\"><code>FetchEvent()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/FetchEvent/clientId\"><code>clientId</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/FetchEvent/isReload\"><code>isReload</code></a></li><li><a href=\"/en-US/docs/Web/API/FetchEvent/preloadResponse\"><code>preloadResponse</code></a></li><li><a href=\"/en-US/docs/Web/API/FetchEvent/replacesClientId\"><code>replacesClientId</code></a></li><li><a href=\"/en-US/docs/Web/API/FetchEvent/request\"><code>request</code></a></li><li><a href=\"/en-US/docs/Web/API/FetchEvent/resultingClientId\"><code>resultingClientId</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><em><code>respondWith()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Service Workers API</summary><ol><li><a href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/en-US/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/en-US/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>respondWith()</code></strong> method of\n  <a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> prevents the browser's default fetch handling, and\n  allows you to provide a promise for a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> yourself.\n</p>\n<p>\n  In most cases you can provide any response that the receiver understands. For example,\n  if an <a href=\"/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> initiates the request, the response body needs to be\n  image data. For security reasons, there are a few global rules:\n</p>\n<ul>\n  <li>\n    You can only return <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> objects of <a href=\"/en-US/docs/Web/API/Response/type\" title=\"type\"><code>type</code></a> \"<code>opaque</code>\" if the <a href=\"/en-US/docs/Web/API/FetchEvent/request\"><code>fetchEvent.request</code></a> object's\n    <a href=\"/en-US/docs/Web/API/Request/mode\" title=\"mode\"><code>mode</code></a> is \"<code>no-cors</code>\". This prevents the\n    leaking of private data.\n  </li>\n  <li>\n    You can only return <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> objects of <a href=\"/en-US/docs/Web/API/Response/type\" title=\"type\"><code>type</code></a> \"<code>opaqueredirect</code>\" if the <a href=\"/en-US/docs/Web/API/FetchEvent/request\"><code>fetchEvent.request</code></a>\n    object's <a href=\"/en-US/docs/Web/API/Request/mode\" title=\"mode\"><code>mode</code></a> is \"<code>manual</code>\".\n  </li>\n  <li>\n    You cannot return <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> objects of <a href=\"/en-US/docs/Web/API/Response/type\" title=\"type\"><code>type</code></a> \"<code>cors</code>\" if the <a href=\"/en-US/docs/Web/API/FetchEvent/request\"><code>fetchEvent.request</code></a> object's\n    <a href=\"/en-US/docs/Web/API/Request/mode\" title=\"mode\"><code>mode</code></a> is \"<code>same-origin</code>\".\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"specifying_the_final_url_of_a_resource","title":"Specifying the final URL of a resource","isH3":true,"content":"<p>\n  From Firefox 59 onwards, when a service worker provides a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> to\n  <a href=\"/en-US/docs/Web/API/FetchEvent/respondWith\" aria-current=\"page\"><code>FetchEvent.respondWith()</code></a>, the <a href=\"/en-US/docs/Web/API/Response/url\"><code>Response.url</code></a> value will be\n  propagated to the intercepted network request as the final resolved URL. If the\n  <a href=\"/en-US/docs/Web/API/Response/url\"><code>Response.url</code></a> value is the empty string, then the\n  <a href=\"/en-US/docs/Web/API/Request/url\" title=\"FetchEvent.request.url\"><code>FetchEvent.request.url</code></a> is used as the final URL.\n</p>\n<p>\n  In the past the <a href=\"/en-US/docs/Web/API/Request/url\" title=\"FetchEvent.request.url\"><code>FetchEvent.request.url</code></a> was used as the\n  final URL in all cases. The provided <a href=\"/en-US/docs/Web/API/Response/url\"><code>Response.url</code></a> was effectively\n  ignored.\n</p>\n<p>\n  This means, for example, if a service worker intercepts a stylesheet or worker script,\n  then the provided <a href=\"/en-US/docs/Web/API/Response/url\"><code>Response.url</code></a> will be used to resolve any relative\n  <a href=\"/en-US/docs/Web/CSS/@import\"><code>@import</code></a> or\n  <a href=\"/en-US/docs/Web/API/WorkerGlobalScope/importScripts\" title=\"importScripts()\"><code>importScripts()</code></a> subresource loads\n  (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1222008\" class=\"external\" rel=\" noopener\">bug&nbsp;1222008</a>).\n</p>\n<p>\n  For most types of network request this change has no impact because you can't observe\n  the final URL. There are a few, though, where it does matter:\n</p>\n<ul>\n  <li>\n    If a <a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a> is intercepted,\n    then you can observe the final URL on the result's <a href=\"/en-US/docs/Web/API/Response/url\"><code>Response.url</code></a>.\n  </li>\n  <li>\n    If a <a href=\"/en-US/docs/Web/API/Web_Workers_API\">worker</a> script is\n    intercepted, then the final URL is used to set\n    <a href=\"/en-US/docs/Web/API/WorkerGlobalScope/location\"><code>self.location</code></a>\n    and used as the base URL for relative URLs in the worker script.\n  </li>\n  <li>\n    If a stylesheet is intercepted, then the final URL is used as the base URL for\n    resolving relative <a href=\"/en-US/docs/Web/CSS/@import\"><code>@import</code></a> loads.\n  </li>\n</ul>\n<p>\n  Note that navigation requests for <a href=\"/en-US/docs/Web/API/Window\" title=\"Windows\"><code>Windows</code></a> and\n  <a href=\"/en-US/docs/Web/API/HTMLIFrameElement\" title=\"iframes\"><code>iframes</code></a> do NOT use the final URL. The way the HTML\n  specification handles redirects for navigations ends up using the request URL for the\n  resulting <a href=\"/en-US/docs/Web/API/Window/location\"><code>Window.location</code></a>. This means sites can still provide an\n  \"alternate\" view of a web page when offline without changing the user-visible URL.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">respondWith(response)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"response\"><code>response</code></dt>\n  <dd>\n    <p>\n      A <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> or a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a\n      <code>Response</code>. Otherwise, a network error is returned to Fetch.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"networkerror\"><code>NetworkError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      Returned if a network error is triggered on certain combinations of\n      <a href=\"/en-US/docs/Web/API/Request/mode\" title=\"FetchEvent.request.mode\"><code>FetchEvent.request.mode</code></a> and\n      <a href=\"/en-US/docs/Web/API/Response/type\"><code>Response.type</code></a> values, as hinted at in the \"global rules\"\n      listed above.\n    </p>\n  </dd>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      Returned if the event has not been dispatched or <code>respondWith()</code> has\n      already been invoked.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  This fetch event tries to return a response from the cache API, falling back to the\n  network otherwise.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetch'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Prevent the default, and handle the request ourselves.</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Try to get the response from a cache.</span>\n    <span class=\"token keyword\">const</span> cachedResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Return it if we found one.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cachedResponse<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> cachedResponse<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// If we didn't find a match in the cache, use the network.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> <a href=\"/en-US/docs/Web/API/CacheStorage/match\" title=\"caches.match()\"><code>caches.match()</code></a> is a\n    convenience method. Equivalent functionality is to call\n    <a href=\"/en-US/docs/Web/API/Cache/match\"><code>cache.match()</code></a> on each cache (in the order returned by\n    <a href=\"/en-US/docs/Web/API/CacheStorage/keys\" title=\"caches.keys()\"><code>caches.keys()</code></a>) until a\n    <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> is returned.\n  </p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#fetch-event-respondwith","title":"Service Workers 1"}],"query":"api.FetchEvent.respondWith"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.FetchEvent.respondWith","dataURL":"/en-US/docs/Web/API/FetchEvent/respondWith/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Using Service Workers</a></li>\n  <li><a href=\"https://jakearchibald.github.io/isserviceworkerready/\" class=\"external\" rel=\" noopener\">Is ServiceWorker ready?</a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The respondWith() method of\n  FetchEvent prevents the browser's default fetch handling, and\n  allows you to provide a promise for a Response yourself.","popularity":0.0014,"modified":"2022-09-13T05:27:14.000Z","other_translations":[{"title":"FetchEvent.respondWith()","locale":"ja","native":"日本語"},{"title":"FetchEvent.respondWith()","locale":"ko","native":"한국어"},{"title":"FetchEvent.respondWith()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/fetchevent/respondwith","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/fetchevent/respondwith/index.md","last_commit_url":"https://github.com/mdn/content/commit/4e233c16c6f0d347972c5c762f5b836318a46124","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/FetchEvent","title":"FetchEvent"},{"uri":"/en-US/docs/Web/API/FetchEvent/respondWith","title":"FetchEvent.respondWith()"}],"pageTitle":"FetchEvent.respondWith() - Web APIs | MDN","noIndexing":false}}