{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Clients.openWindow()","mdn_url":"/en-US/docs/Web/API/Clients/openWindow","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Clients\"><code>Clients</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Clients/claim\"><code>claim()</code></a></li><li><a href=\"/en-US/docs/Web/API/Clients/get\"><code>get()</code></a></li><li><a href=\"/en-US/docs/Web/API/Clients/matchAll\"><code>matchAll()</code></a></li><li><em><code>openWindow()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Service Workers API</summary><ol><li><a href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li><li><a href=\"/en-US/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>openWindow()</code></strong> method of the <a href=\"/en-US/docs/Web/API/Clients\"><code>Clients</code></a>\n  interface creates a new top level browsing context and loads a given URL. If the calling\n  script doesn't have permission to show popups, <code>openWindow()</code> will throw an\n  <code>InvalidAccessError</code>.\n</p>\n<p>\n  In Firefox, the method is allowed to show popups only when called as the result of a\n  notification click event.\n</p>\n<p>\n  In Chrome for Android, the method may instead open the URL in an existing browsing\n  context provided by a <a href=\"/en-US/docs/Web/Progressive_web_apps\">standalone web app</a> previously added to the user's home screen. As of recently, this also works on\n  Chrome for Windows.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">openWindow(url)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"url\"><code>url</code></dt>\n  <dd>\n    <p>\n      A string representing the URL of the client you want to open in\n      the window. Generally this value must be a URL from the same origin as the calling\n      script.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a <a href=\"/en-US/docs/Web/API/WindowClient\"><code>WindowClient</code></a> object if the\n  URL is from the same origin as the service worker or a <a href=\"/en-US/docs/Glossary/Null\">null\n  value</a> otherwise.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Send notification to OS if applicable</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>Notification<span class=\"token punctuation\">.</span>permission <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> notificationObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token string\">'Click here to view your messages.'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>self<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>origin<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/some/path</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// data: { url: 'http://example.com' },</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  self<span class=\"token punctuation\">.</span>registration<span class=\"token punctuation\">.</span><span class=\"token function\">showNotification</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You\\'ve got messages!'</span><span class=\"token punctuation\">,</span> notificationObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Notification click event listener</span>\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'notificationclick'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Close the notification popout</span>\n  e<span class=\"token punctuation\">.</span>notification<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Get all the Window clients</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span>clients<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'window'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">clientsArr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// If a Window tab matching the targeted URL already exists, focus that;</span>\n    <span class=\"token keyword\">const</span> hadWindowToFocus <span class=\"token operator\">=</span> clientsArr<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">windowClient</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> windowClient<span class=\"token punctuation\">.</span>url <span class=\"token operator\">===</span> e<span class=\"token punctuation\">.</span>notification<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>url <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>windowClient<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Otherwise, open a new tab to the applicable URL and focus it.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hadWindowToFocus<span class=\"token punctuation\">)</span> clients<span class=\"token punctuation\">.</span><span class=\"token function\">openWindow</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>notification<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">windowClient</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> windowClient <span class=\"token operator\">?</span> windowClient<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#clients-openwindow","title":"Service Workers 1"}],"query":"api.Clients.openWindow"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Clients.openWindow","dataURL":"/en-US/docs/Web/API/Clients/openWindow/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The openWindow() method of the Clients\n  interface creates a new top level browsing context and loads a given URL. If the calling\n  script doesn't have permission to show popups, openWindow() will throw an\n  InvalidAccessError.","popularity":0.0005,"modified":"2022-09-13T05:21:27.000Z","other_translations":[{"title":"Clients.openWindow()","locale":"fr","native":"Français"},{"title":"Clients.openWindow()","locale":"ja","native":"日本語"},{"title":"Clients.openWindow()","locale":"ru","native":"Русский"},{"title":"Clients.openWindow()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/clients/openwindow","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/clients/openwindow/index.md","last_commit_url":"https://github.com/mdn/content/commit/da88b2f3a23b9d93f083003f13c06f9d96073f6a","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Clients","title":"Clients"},{"uri":"/en-US/docs/Web/API/Clients/openWindow","title":"Clients.openWindow()"}],"pageTitle":"Clients.openWindow() - Web APIs | MDN","noIndexing":false}}