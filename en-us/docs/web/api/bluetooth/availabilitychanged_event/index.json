{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Bluetooth: availabilitychanged event","mdn_url":"/en-US/docs/Web/API/Bluetooth/availabilitychanged_event","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Bluetooth_API\">Web Bluetooth API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Bluetooth\"><code>Bluetooth</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Bluetooth/referringDevice\"><code>referringDevice</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Bluetooth/requestDevice\"><code>requestDevice()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>availabilitychanged</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Bluetooth API</summary><ol><li><a href=\"/en-US/docs/Web/API/BluetoothDevice\"><code>BluetoothDevice</code></a></li><li><a href=\"/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic\"><code>BluetoothRemoteGATTCharacteristic</code></a></li><li><a href=\"/en-US/docs/Web/API/BluetoothRemoteGATTServer\"><code>BluetoothRemoteGATTServer</code></a></li><li><a href=\"/en-US/docs/Web/API/BluetoothRemoteGATTService\"><code>BluetoothRemoteGATTService</code></a></li><li><a href=\"/en-US/docs/Web/API/BluetoothUUID\"><code>BluetoothUUID</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <code>availabilitychanged</code> event fires when the Bluetooth system as a whole becomes available or unavailable to the <a href=\"/en-US/docs/Glossary/User_agent\">User Agent</a>.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<p>Use the event name in methods like <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, or set an event handler property.</p>\n<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">addEventListener(\"availabilitychanged\", (event) =&gt; { })\n\nonavailabilitychanged = (event) =&gt; { }\n</pre></div>"}},{"type":"prose","value":{"id":"event_type","title":"Event type","isH3":false,"content":"<p>A generic <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>To be informed when Bluetooth availability changes, you can add a handler to your <a href=\"/en-US/docs/Web/API/Bluetooth\"><code>Bluetooth</code></a> instance using <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Bluetooth<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"availabilitychanged\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> availability <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Alternatively, you can use the <code>Bluetooth.onavailabilitychanged</code> event handler property to establish a handler for the <code>availabilitychanged</code> event:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>Bluetooth<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onavailabilitychanged</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> availability <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webbluetoothcg.github.io/web-bluetooth/#eventdef-bluetooth-availabilitychanged","title":"Web Bluetooth"},{"bcdSpecificationURL":"https://webbluetoothcg.github.io/web-bluetooth/#dom-bluetooth-onavailabilitychanged","title":"Web Bluetooth"}],"query":"api.Bluetooth.availabilitychanged_event"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Bluetooth.availabilitychanged_event","dataURL":"/en-US/docs/Web/API/Bluetooth/availabilitychanged_event/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Bluetooth/getAvailability\"><code>Bluetooth.getAvailability</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Event type","id":"event_type"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The availabilitychanged event fires when the Bluetooth system as a whole becomes available or unavailable to the User Agent.","popularity":0,"modified":"2022-09-15T18:16:38.000Z","source":{"folder":"en-us/web/api/bluetooth/availabilitychanged_event","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/bluetooth/availabilitychanged_event/index.md","last_commit_url":"https://github.com/mdn/content/commit/418f9cf461de0c7845665c0c677ad0667740f52a","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Bluetooth","title":"Bluetooth"},{"uri":"/en-US/docs/Web/API/Bluetooth/availabilitychanged_event","title":"Bluetooth: availabilitychanged event"}],"pageTitle":"Bluetooth: availabilitychanged event - Web APIs | MDN","noIndexing":false}}