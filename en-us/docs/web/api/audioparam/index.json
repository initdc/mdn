{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"AudioParam","mdn_url":"/en-US/docs/Web/API/AudioParam","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioParam/defaultValue\"><code>defaultValue</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam/maxValue\"><code>maxValue</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam/minValue\"><code>minValue</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam/value\"><code>value</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioParam/cancelAndHoldAtTime\"><code>cancelAndHoldAtTime()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam/cancelScheduledValues\"><code>cancelScheduledValues()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam/exponentialRampToValueAtTime\"><code>exponentialRampToValueAtTime()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam/linearRampToValueAtTime\"><code>linearRampToValueAtTime()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam/setTargetAtTime\"><code>setTargetAtTime()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam/setValueAtTime\"><code>setValueAtTime()</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam/setValueCurveAtTime\"><code>setValueCurveAtTime()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/en-US/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The Web Audio API's <code>AudioParam</code> interface represents an audio-related parameter, usually a parameter of an <a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a> (such as <a href=\"/en-US/docs/Web/API/GainNode/gain\"><code>GainNode.gain</code></a>).</p>\n<p>An <code>AudioParam</code> can be set to a specific value or a change in value, and can be scheduled to happen at a specific time and following a specific pattern.</p>\n<p>Each <code>AudioParam</code> has a list of events, initially empty, that define when and how values change. When this list is not empty, changes using the <code>AudioParam.value</code> attributes are ignored. This list of events allows us to schedule changes that have to happen at very precise times, using arbitrary timeline-based automation curves. The time used is the one defined in <a href=\"/en-US/docs/Web/API/BaseAudioContext/currentTime\" title=\"AudioContext.currentTime\"><code>AudioContext.currentTime</code></a>.</p>"}},{"type":"prose","value":{"id":"audioparam_types","title":"AudioParam types","isH3":false,"content":"<p>There are two <code>AudioParam</code> kinds: <em>a-rate</em> and <em>k-rate</em> parameters. Each <a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a> defines which of its parameters are <em>a-rate</em> or <em>k-rate</em> in the spec.</p>"}},{"type":"prose","value":{"id":"a-rate","title":"a-rate","isH3":true,"content":"<p>An <em>a-rate</em> <code>AudioParam</code> takes the current audio parameter value for each <a href=\"/en-US/docs/Web/API/Web_Audio_API/Basic_concepts_behind_Web_Audio_API#audio_buffers.3a_frames.2c_samples_and_channels\">sample frame</a> of the audio signal.</p>"}},{"type":"prose","value":{"id":"k-rate","title":"k-rate","isH3":true,"content":"<p>A <em>k-rate</em> <code>AudioParam</code> uses the same initial audio parameter value for the whole block processed; that is, 128 sample frames. In other words, the same value applies to every frame in the audio as it's processed by the node.</p>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"audioparam.defaultvalue\"><a href=\"/en-US/docs/Web/API/AudioParam/defaultValue\"><code>AudioParam.defaultValue</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Represents the initial value of the attribute as defined by the specific <a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a> creating the <code>AudioParam</code>.</p>\n  </dd>\n  <dt id=\"audioparam.maxvalue\"><a href=\"/en-US/docs/Web/API/AudioParam/maxValue\"><code>AudioParam.maxValue</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Represents the maximum possible value for the parameter's nominal (effective) range.</p>\n  </dd>\n  <dt id=\"audioparam.minvalue\"><a href=\"/en-US/docs/Web/API/AudioParam/minValue\"><code>AudioParam.minValue</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Represents the minimum possible value for the parameter's nominal (effective) range.</p>\n  </dd>\n  <dt id=\"audioparam.value\"><a href=\"/en-US/docs/Web/API/AudioParam/value\"><code>AudioParam.value</code></a></dt>\n  <dd>\n    <p>Represents the parameter's current value as of the current time; initially set to the value of <a href=\"/en-US/docs/Web/API/AudioParam/defaultValue\" title=\"defaultValue\"><code>defaultValue</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"audioparam.setvalueattime\"><a href=\"/en-US/docs/Web/API/AudioParam/setValueAtTime\"><code>AudioParam.setValueAtTime()</code></a></dt>\n  <dd>\n    <p>Schedules an instant change to the value of the <code>AudioParam</code> at a precise time, as measured against <a href=\"/en-US/docs/Web/API/BaseAudioContext/currentTime\" title=\"AudioContext.currentTime\"><code>AudioContext.currentTime</code></a>. The new value is given by the <code>value</code> parameter.</p>\n  </dd>\n  <dt id=\"audioparam.linearramptovalueattime\"><a href=\"/en-US/docs/Web/API/AudioParam/linearRampToValueAtTime\"><code>AudioParam.linearRampToValueAtTime()</code></a></dt>\n  <dd>\n    <p>Schedules a gradual linear change in the value of the <code>AudioParam</code>. The change starts at the time specified for the <em>previous</em> event, follows a linear ramp to the new value given in the <code>value</code> parameter, and reaches the new value at the time given in the <code>endTime</code> parameter.</p>\n  </dd>\n  <dt id=\"audioparam.exponentialramptovalueattime\"><a href=\"/en-US/docs/Web/API/AudioParam/exponentialRampToValueAtTime\"><code>AudioParam.exponentialRampToValueAtTime()</code></a></dt>\n  <dd>\n    <p>Schedules a gradual exponential change in the value of the <code>AudioParam</code>. The change starts at the time specified for the <em>previous</em> event, follows an exponential ramp to the new value given in the <code>value</code> parameter, and reaches the new value at the time given in the <code>endTime</code> parameter.</p>\n  </dd>\n  <dt id=\"audioparam.settargetattime\"><a href=\"/en-US/docs/Web/API/AudioParam/setTargetAtTime\"><code>AudioParam.setTargetAtTime()</code></a></dt>\n  <dd>\n    <p>Schedules the start of a change to the value of the <code>AudioParam</code>. The change starts at the time specified in <code>startTime</code> and exponentially moves towards the value given by the <code>target</code> parameter. The exponential decay rate is defined by the <code>timeConstant</code> parameter, which is a time measured in seconds.</p>\n  </dd>\n  <dt id=\"audioparam.setvaluecurveattime\"><a href=\"/en-US/docs/Web/API/AudioParam/setValueCurveAtTime\"><code>AudioParam.setValueCurveAtTime()</code></a></dt>\n  <dd>\n    <p>Schedules the values of the <code>AudioParam</code> to follow a set of values, defined by an array of floating-point numbers scaled to fit into the given interval, starting at a given start time and spanning a given duration of time.</p>\n  </dd>\n  <dt id=\"audioparam.cancelscheduledvalues\"><a href=\"/en-US/docs/Web/API/AudioParam/cancelScheduledValues\"><code>AudioParam.cancelScheduledValues()</code></a></dt>\n  <dd>\n    <p>Cancels all scheduled future changes to the <code>AudioParam</code>.</p>\n  </dd>\n  <dt id=\"audioparam.cancelandholdattime\"><a href=\"/en-US/docs/Web/API/AudioParam/cancelAndHoldAtTime\"><code>AudioParam.cancelAndHoldAtTime()</code></a></dt>\n  <dd>\n    <p>Cancels all scheduled future changes to the <code>AudioParam</code> but holds its value at a given time until further changes are made using other methods.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>First, a basic example showing a <a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a> having its <code>gain</code> value set. <code>gain</code> is an example of an <em>a-rate</em> <code>AudioParam</code>, as the value can potentially be set differently for each sample frame of the audio.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> audioCtx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gainNode <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createGain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngainNode<span class=\"token punctuation\">.</span>gain<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Next, an example showing a <a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a> having some param values manipulated. These are examples of <em>k-rate</em> <code>AudioParam</code> types, as the values are set for the entire audio block at once.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> compressor <span class=\"token operator\">=</span> audioCtx<span class=\"token punctuation\">.</span><span class=\"token function\">createDynamicsCompressor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncompressor<span class=\"token punctuation\">.</span>threshold<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncompressor<span class=\"token punctuation\">.</span>knee<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncompressor<span class=\"token punctuation\">.</span>ratio<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncompressor<span class=\"token punctuation\">.</span>attack<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncompressor<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">.</span><span class=\"token function\">setValueAtTime</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> audioCtx<span class=\"token punctuation\">.</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#AudioParam","title":"Web Audio API"}],"query":"api.AudioParam"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.AudioParam","dataURL":"/en-US/docs/Web/API/AudioParam/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Using the Web Audio API</a></li>\n</ul>"}}],"toc":[{"text":"AudioParam types","id":"audioparam_types"},{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Web Audio API's AudioParam interface represents an audio-related parameter, usually a parameter of an AudioNode (such as GainNode.gain).","popularity":0.0008,"modified":"2022-09-09T05:07:36.000Z","other_translations":[{"title":"AudioParam","locale":"fr","native":"Français"},{"title":"AudioParam","locale":"ja","native":"日本語"},{"title":"AudioParam","locale":"ko","native":"한국어"},{"title":"AudioParam","locale":"ru","native":"Русский"},{"title":"AudioParam","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/audioparam","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/audioparam/index.md","last_commit_url":"https://github.com/mdn/content/commit/bf30e32f3b51f59080f2c76795beadb247a551eb","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/AudioParam","title":"AudioParam"}],"pageTitle":"AudioParam - Web APIs | MDN","noIndexing":false}}