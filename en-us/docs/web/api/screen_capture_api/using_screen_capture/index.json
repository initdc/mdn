{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Using the Screen Capture API","mdn_url":"/en-US/docs/Web/API/Screen_Capture_API/Using_Screen_Capture","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Screen_Capture_API\">Screen Capture API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Guides</summary><ol><li><a href=\"/en-US/docs/Web/API/Screen_Capture_API/Using_Screen_Capture\">Using the Screen Capture API</a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints/cursor\"><code>MediaTrackConstraints.cursor</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints/displaySurface\"><code>MediaTrackConstraints.displaySurface</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints/logicalSurface\"><code>MediaTrackConstraints.logicalSurface</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackSettings/cursor\"><code>MediaTrackSettings.cursor</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackSettings/displaySurface\"><code>MediaTrackSettings.displaySurface</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackSettings/logicalSurface\"><code>MediaTrackSettings.logicalSurface</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackSupportedConstraints/cursor\"><code>MediaTrackSupportedConstraints.cursor</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackSupportedConstraints/displaySurface\"><code>MediaTrackSupportedConstraints.displaySurface</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackSupportedConstraints/logicalSurface\"><code>MediaTrackSupportedConstraints.logicalSurface</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\"><code>MediaDevices.getDisplayMedia()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>In this article, we will examine how to use the Screen Capture API and its <a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\" title=\"getDisplayMedia()\"><code>getDisplayMedia()</code></a> method to capture part or all of a screen for streaming, recording, or sharing during a <a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC</a> conference session.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> It may be useful to note that recent versions of the <a href=\"https://github.com/webrtcHacks/adapter\" class=\"external\" rel=\" noopener\">WebRTC adapter.js shim</a> include implementations of <code>getDisplayMedia()</code> to enable screen sharing on browsers that support it but do not implement the current standard API. This works with at least Chrome, Edge, and Firefox.</p>\n</div>"}},{"type":"prose","value":{"id":"capturing_screen_contents","title":"Capturing screen contents","isH3":false,"content":"<p>Capturing screen contents as a live <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> is initiated by calling <a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\" title=\"navigator.mediaDevices.getDisplayMedia()\"><code>navigator.mediaDevices.getDisplayMedia()</code></a>, which returns a promise that resolves to a stream containing the live screen contents.</p>"}},{"type":"prose","value":{"id":"starting_screen_capture_asyncawait_style","title":"Starting screen capture: <code>async</code>/<code>await</code> style","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">startCapture</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">displayMediaOptions</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> captureStream <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    captureStream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getDisplayMedia</span><span class=\"token punctuation\">(</span>displayMediaOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> captureStream<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>You can write this code either using an asynchronous function and the <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/await\"><code>await</code></a> operator, as shown above, or using the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> directly, as seen below.</p>","titleAsText":"Starting screen capture: async/await style"}},{"type":"prose","value":{"id":"starting_screen_capture_promise_style","title":"Starting screen capture: <code>Promise</code> style","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">startCapture</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">displayMediaOptions</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">return</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getDisplayMedia</span><span class=\"token punctuation\">(</span>displayMediaOptions<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Either way, the <a href=\"/en-US/docs/Glossary/User_agent\">user agent</a> responds by presenting a user interface that prompts the user to choose the screen area to share. Both of these implementations of <code>startCapture()</code> return the <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> containing the captured display imagery.</p>\n<p>See <a href=\"#options_and_constraints\">Options and constraints</a>, below, for more on both how to specify the type of surface you want as well as other ways to adjust the resulting stream.</p>","titleAsText":"Starting screen capture: Promise style"}},{"type":"prose","value":{"id":"example_of_a_window_allowing_the_user_to_select_a_display_surface_to_capture","title":"Example of a window allowing the user to select a display surface to capture","isH3":true,"content":"<p><a href=\"/en-US/docs/Web/API/Screen_Capture_API/Using_Screen_Capture/chrome-screen-capture-window.png\"><img src=\"/en-US/docs/Web/API/Screen_Capture_API/Using_Screen_Capture/chrome-screen-capture-window.png\" alt=\"Screenshot of Chrome's window for picking a source surface\" width=\"1239\" height=\"1041\" loading=\"lazy\"></a></p>\n<p>You can then use the captured stream, <code>captureStream</code>, for anything that accepts a stream as input. The <a href=\"#examples\">examples</a> below show a few ways to make use of the stream.</p>"}},{"type":"prose","value":{"id":"visible_vs_logical_display_surfaces","title":"Visible vs logical display surfaces","isH3":true,"content":"<p>For the purposes of the Screen Capture API, a <strong>display surface</strong> is any content object that can be selected by the API for sharing purposes. Sharing surfaces include the contents of a browser tab, a complete window, all of the windows of an application combined into a single surface, and a monitor (or group of monitors combined together into one surface).</p>\n<p>There are two types of display surface. A <strong>visible display surface</strong> is a surface which is entirely visible on the screen, such as the frontmost window or tab, or the entire screen.</p>\n<p>A <strong>logical display surface</strong> is one which is in part or completely obscured, either by being overlapped by another object to some extent, or by being entirely hidden or offscreen. How these are handled by the Screen Capture API varies. Generally, the browser will provide an image which obscures the hidden portion of the logical display surface in some way, such as by blurring or replacing with a color or pattern. This is done for security reasons, as the content that cannot be seen by the user may contain data which they do not want to share.</p>\n<p>A user agent might allow the capture of the entire content of an obscured window after gaining permission from the user to do so. In this case, the user agent may include the obscured content, either by getting the current contents of the hidden portion of the window or by presenting the most-recently-visible contents if the current contents are not available.</p>"}},{"type":"prose","value":{"id":"options_and_constraints","title":"Options and constraints","isH3":true,"content":"<p>The constraints object passed into <a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\" title=\"getDisplayMedia()\"><code>getDisplayMedia()</code></a> is an object which is used to configuring the resulting stream.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Unlike most uses of constraints in media APIs, here it's solely used to define the stream configuration, and <em>not</em> to filter the available choices.</p>\n</div>\n<p>See <a href=\"/en-US/docs/Web/API/MediaTrackConstraints#properties_of_shared_screen_tracks\">Properties of shared screen tracks</a> for details about additional constraints for configuring a screen-capture stream that are added to <a href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code></a>, <a href=\"/en-US/docs/Web/API/MediaTrackSupportedConstraints\"><code>MediaTrackSupportedConstraints</code></a>, and <a href=\"/en-US/docs/Web/API/MediaTrackSettings\"><code>MediaTrackSettings</code></a>).</p>\n<p>None of the constraints are applied in any way until after the content to capture has been selected. The constraints alter what you see in the resulting stream.</p>\n<p>For example, if you specify a <a href=\"/en-US/docs/Web/API/MediaTrackConstraints/width\" title=\"width\"><code>width</code></a> constraint for the video, it's applied by scaling the video after the user selects the area to share. It doesn't establish a restriction on the size of the source itself.</p>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> Constraints <em>never</em> cause changes to the list of sources available for capture by the Screen Sharing API. This ensures that web applications can't force the user to share specific content by restricting the source list until only one item is left.</p>\n</div>\n<p>While display capture is in effect, the machine which is sharing screen contents will display some form of indicator so the user is aware that sharing is taking place.</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> For privacy and security reasons, screen sharing sources are not enumerable using <a href=\"/en-US/docs/Web/API/MediaDevices/enumerateDevices\" title=\"enumerateDevices()\"><code>enumerateDevices()</code></a>. Related to this, the <a href=\"/en-US/docs/Web/API/MediaDevices/devicechange_event\" title=\"devicechange\"><code>devicechange</code></a> event is never sent when there are changes to the sources available for <code>getDisplayMedia()</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"capturing_shared_audio","title":"Capturing shared audio","isH3":true,"content":"<p><a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\" title=\"getDisplayMedia()\"><code>getDisplayMedia()</code></a> is most commonly used to capture video of a user's screen (or parts thereof). However, <a href=\"/en-US/docs/Glossary/User_agent\">user agents</a> may allow the capture of audio along with the video content. The source of this audio might be the selected window, the entire computer's audio system, or the user's microphone (or a combination of all of the above).</p>\n<p>Before starting a project that will require sharing of audio, be sure to check the <a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia#browser_compatibility\">Browser compatibility</a> in <a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\"><code>MediaDevices.getDisplayMedia()</code></a> to see if the browsers you wish compatibility with have support for audio in captured screen streams.</p>\n<p>To request that the screen be shared with included audio, the options passed into <code>getDisplayMedia()</code> might look like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> gdmOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This allows the user total freedom to select whatever they want, within the limits of what the user agent supports. This could be refined further by specifying additional information for each of <code>audio</code> and <code>video</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> gdmOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">echoCancellation</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">noiseSuppression</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">sampleRate</span><span class=\"token operator\">:</span> <span class=\"token number\">44100</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>In this example the cursor will always be visible in the capture, and the audio track should ideally have noise suppression and echo cancellation features enabled, as well as an ideal audio sample rate of 44.1kHz.</p>\n<p>Capturing audio is always optional, and even when web content requests a stream with both audio and video, the returned <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> may still have only one video track, with no audio.</p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>Note:</strong> Some properties are not widely implemented and might not be used by the engine. <code>cursor</code>, for example, <a href=\"/en-US/docs/Web/API/MediaTrackConstraints#browser_compatibility\">has limited support</a>.</p>\n</div>"}},{"type":"prose","value":{"id":"using_the_captured_stream","title":"Using the captured stream","isH3":false,"content":"<p>The <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> returned by <a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\" title=\"getDisplayMedia()\"><code>getDisplayMedia()</code></a> resolves to a <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> that contains at least one video stream that contains the screen or screen area, and which is adjusted or filtered based upon the constraints specified when <code>getDisplayMedia()</code> was called.</p>"}},{"type":"prose","value":{"id":"potential_risks","title":"Potential risks","isH3":true,"content":"<p>Privacy and security issues surrounding screen sharing are usually not overly serious, but they do exist. The largest potential issue is users inadvertently sharing content they did not wish to share.</p>\n<p>For example, privacy and/or security violations can easily occur if the user is sharing their screen and a visible background window happens to contain personal information, or if their password manager is visible in the shared stream. This effect can be amplified when capturing logical display surfaces, which may contain content that the user doesn't know about at all, let alone see.</p>\n<p>User agents which take privacy seriously should obfuscate content that is not actually visible onscreen, unless authorization has been given to share that content specifically.</p>"}},{"type":"prose","value":{"id":"authorizing_capture_of_display_contents","title":"Authorizing capture of display contents","isH3":true,"content":"<p>Before streaming of captured screen contents can begin, the <a href=\"/en-US/docs/Glossary/User_agent\">user agent</a> will ask the user to confirm the sharing request, and to select the content to share.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"simple_screen_capture","title":"Simple screen capture","isH3":true,"content":"<p>In this example, the contents of the captured screen area are streamed into a <a href=\"/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element on the same page.</p>\n<h4 id=\"javascript\">JavaScript</h4>\n<p>There isn't all that much code needed in order to make this work, and if you're familiar with using <a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\" title=\"getUserMedia()\"><code>getUserMedia()</code></a> to capture video from a camera, you'll find <a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\" title=\"getDisplayMedia()\"><code>getDisplayMedia()</code></a> to be very familiar.</p>\n<h5 id=\"setup\">Setup</h5>\n<p>First, some constants are set up to reference the elements on the page to which we'll need access: the <a href=\"/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> into which the captured screen contents will be streamed, a box into which logged output will be drawn, and the start and stop buttons that will turn on and off capture of screen imagery.</p>\n<p>The object <code>displayMediaOptions</code> contains the constraints to pass into <code>getDisplayMedia()</code>; here, the <a href=\"/en-US/docs/Web/API/MediaTrackConstraints\" title=\"cursor\"><code>cursor</code></a> property is set to <code>always</code>, indicating that the mouse cursor should always be included in the captured media.</p>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>Note:</strong> Some properties are not widely implemented and might not be used by the engine. <code>cursor</code>, for example, <a href=\"/en-US/docs/Web/API/MediaTrackConstraints#browser_compatibility\">has limited support</a>.</p>\n</div>\n<p>Finally, event listeners are established to detect user clicks on the start and stop buttons.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> videoElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> logElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> startElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> stopElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Options for getDisplayMedia()</span>\n\n<span class=\"token keyword\">const</span> displayMediaOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Set event listeners for the start and stop buttons</span>\nstartElem<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">startCapture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nstopElem<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">stopCapture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h5 id=\"logging_content\">Logging content</h5>\n<p>To make logging of errors and other issues easy, this example overrides certain <a href=\"/en-US/docs/Web/API/console\"><code>console</code></a> methods to output their messages to the <a href=\"/en-US/docs/Web/HTML/Element/pre\"><code>&lt;pre&gt;</code></a> block whose ID is <code>log</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> logElem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>msg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">error</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> logElem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;span class=\"error\"&gt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>msg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/span&gt;&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">warn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> logElem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;span class=\"warn\"&gt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>msg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;span&gt;&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">info</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> logElem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;span class=\"info\"&gt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>msg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/span&gt;&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>This allows us to use the familiar <a href=\"/en-US/docs/Web/API/console/log\"><code>console.log()</code></a>, <a href=\"/en-US/docs/Web/API/console/error\"><code>console.error()</code></a>, and so on to log information to the log box in the document.</p>\n<h5 id=\"starting_display_capture\">Starting display capture</h5>\n<p>The <code>startCapture()</code> method, below, starts the capture of a <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> whose contents are taken from a user-selected area of the screen. <code>startCapture()</code> is called when the \"Start Capture\" button is clicked.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">startCapture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  logElem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    videoElem<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getDisplayMedia</span><span class=\"token punctuation\">(</span>displayMediaOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">dumpOptionsInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>err<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>After clearing the contents of the log in order to get rid of any leftover text from the previous attempt to connect, <code>startCapture()</code> calls <a href=\"/en-US/docs/Web/API/MediaDevices/getDisplayMedia\" title=\"getDisplayMedia()\"><code>getDisplayMedia()</code></a>, passing into it the constraints object defined by <code>displayMediaOptions</code>. Using <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/await\"><code>await</code></a>, the following line of code does not get executed until after the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> returned by <code>getDisplayMedia()</code> resolves. Upon resolution, the promise returns a <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a>, which will stream the contents of the screen, window, or other region selected by the user.</p>\n<p>The stream is connected to the <a href=\"/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element by storing the returned <code>MediaStream</code> into the element's <a href=\"/en-US/docs/Web/API/HTMLMediaElement/srcObject\" title=\"srcObject\"><code>srcObject</code></a>.</p>\n<p>The <code>dumpOptionsInfo()</code> function—which we will look at in a moment—dumps information about the stream to the log box for educational purposes.</p>\n<p>If any of that fails, the <a href=\"/en-US/docs/Web/JavaScript/Reference/Statements/try...catch\"><code>catch()</code></a> clause outputs an error message to the log box.</p>\n<h5 id=\"stopping_display_capture\">Stopping display capture</h5>\n<p>The <code>stopCapture()</code> method is called when the \"Stop Capture\" button is clicked. It stops the stream by getting its track list using <a href=\"/en-US/docs/Web/API/MediaStream/getTracks\"><code>MediaStream.getTracks()</code></a>, then calling each track's <a href=\"/en-US/docs/Web/API/MediaStreamTrack/stop\" title=\"stop()\"><code>stop()</code></a> method. Once that's done, <code>srcObject</code> is set to <code>null</code> to make sure it's understood by anyone interested that there's no stream connected.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">stopCapture</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">evt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> tracks <span class=\"token operator\">=</span> videoElem<span class=\"token punctuation\">.</span>srcObject<span class=\"token punctuation\">.</span><span class=\"token function\">getTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  tracks<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">track</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> track<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  videoElem<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h5 id=\"dumping_configuration_information\">Dumping configuration information</h5>\n<p>For informational purposes, the <code>startCapture()</code> method shown above calls a method named <code>dumpOptions()</code>, which outputs the current track settings as well as the constraints that were placed upon the stream when it was created.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">dumpOptionsInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> videoTrack <span class=\"token operator\">=</span> videoElem<span class=\"token punctuation\">.</span>srcObject<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Track settings:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>videoTrack<span class=\"token punctuation\">.</span><span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Track constraints:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>videoTrack<span class=\"token punctuation\">.</span><span class=\"token function\">getConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>The track list is obtained by calling <a href=\"/en-US/docs/Web/API/MediaStream/getVideoTracks\" title=\"getVideoTracks()\"><code>getVideoTracks()</code></a> on the captured screen's <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a>. The settings currently in effect are obtained using <a href=\"/en-US/docs/Web/API/MediaStreamTrack/getSettings\" title=\"getSettings()\"><code>getSettings()</code></a> and the established constraints are gotten with <a href=\"/en-US/docs/Web/API/MediaStreamTrack/getConstraints\" title=\"getConstraints()\"><code>getConstraints()</code></a></p>\n<h4 id=\"html\">HTML</h4>\n<p>The HTML starts with a simple introductory paragraph, then gets into the meat of things.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  This example shows you the contents of the selected part of your display.\n  Click the Start Capture button to begin.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>start<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Start Capture<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token entity named-entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stop<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    Stop Capture\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoplay</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">&gt;</span></span>Log:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>The key parts of the HTML are:</p>\n<ol>\n  <li>A <a href=\"/en-US/docs/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a> labeled \"Start Capture\" which, when clicked, calls the <code>startCapture()</code> function to request access to, and begin capturing, screen contents.</li>\n  <li>A second button, \"Stop Capture\", which upon being clicked calls <code>stopCapture()</code> to terminate capture of screen contents.</li>\n  <li>A <a href=\"/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> into which the captured screen contents are streamed.</li>\n  <li>A <a href=\"/en-US/docs/Web/HTML/Element/pre\"><code>&lt;pre&gt;</code></a> block into which logged text is placed by the intercepted <a href=\"/en-US/docs/Web/API/console\"><code>console</code></a> method.</li>\n</ol>\n<h4 id=\"css\">CSS</h4>\n<p>The CSS is entirely cosmetic in this example. The video is given a border, and its width is set to occupy nearly the entire available horizontal space (<code>width: 98%</code>). <a href=\"/en-US/docs/Web/CSS/max-width\"><code>max-width</code></a> is set to <code>860px</code> to set an absolute upper limit on the video's size,</p>\n<p>The <code>error</code>, <code>warn</code>, and <code>info</code> classes are used to style the corresponding console output types.</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">#video</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #999<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 98%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 860px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.error</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.warn</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.info</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> darkgreen<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"result\">Result</h4>\n<p>The final product looks like this. If your browser supports Screen Capture API, clicking \"Start Capture\" will present the <a href=\"/en-US/docs/Glossary/User_agent\">user agent's</a> interface for selecting a screen, window, or tab to share.</p><iframe class=\"sample-code-frame\" title=\"Simple screen capture sample\" id=\"frame_simple_screen_capture\" width=\"640\" height=\"680\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/Screen_Capture_API/Using_Screen_Capture/_sample_.simple_screen_capture.html\" allow=\"display-capture\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"security","title":"Security","isH3":false,"content":"<p>In order to function when <a href=\"/en-US/docs/Web/HTTP/Feature_Policy\">Feature Policy</a> is enabled, you will need the <code>display-capture</code> permission. This can be done using the <a href=\"/en-US/docs/Web/HTTP/Headers/Feature-Policy\"><code>Feature-Policy</code></a> <a href=\"/en-US/docs/Glossary/HTTP\">HTTP</a> header or—if you're using the Screen Capture API in an <a href=\"/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, the <code>&lt;iframe&gt;</code> element's <a href=\"/en-US/docs/Web/HTML/Element/iframe#attr-allow\"><code>allow</code></a> attribute.</p>\n<p>For example, this line in the HTTP headers will enable Screen Capture API for the document and any embedded <a href=\"/en-US/docs/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> elements that are loaded from the same origin:</p>\n<div class=\"code-example\"><pre class=\"brush: http notranslate\"><code><span class=\"token header\"><span class=\"token header-name keyword\">Feature-Policy</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">display-capture 'self'</span></span>\n</code></pre></div>\n<p>If you're performing screen capture within an <code>&lt;iframe&gt;</code>, you can request permission just for that frame, which is clearly more secure than requesting a more general permission:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://mycode.example.net/etc<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">allow</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>display-capture<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaDevices.getDisplayMedia","dataURL":"/en-US/docs/Web/API/Screen_Capture_API/Using_Screen_Capture/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Screen_Capture_API\">Screen Capture API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API\">Media Capture and Streams API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API/Taking_still_photos\">Taking still photos with WebRTC</a></li>\n  <li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/captureStream\"><code>HTMLCanvasElement.captureStream()</code></a> to obtain a <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> with the live contents of a <a href=\"/en-US/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a></li>\n</ul>"}}],"toc":[{"text":"Capturing screen contents","id":"capturing_screen_contents"},{"text":"Using the captured stream","id":"using_the_captured_stream"},{"text":"Examples","id":"examples"},{"text":"Security","id":"security"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"In this article, we will examine how to use the Screen Capture API and its getDisplayMedia() method to capture part or all of a screen for streaming, recording, or sharing during a WebRTC conference session.","popularity":0.0057,"modified":"2022-09-14T12:12:03.000Z","other_translations":[{"title":"画面キャプチャ API の使用","locale":"ja","native":"日本語"},{"title":"Использование интерфейса Screen Capture API","locale":"ru","native":"Русский"},{"title":"使用屏幕捕获 API","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/screen_capture_api/using_screen_capture","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/screen_capture_api/using_screen_capture/index.md","last_commit_url":"https://github.com/mdn/content/commit/84fc68f1674c9b2d1708fb38dc2824e228f9bb3f","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Screen_Capture_API","title":"Screen Capture API"},{"uri":"/en-US/docs/Web/API/Screen_Capture_API/Using_Screen_Capture","title":"Using the Screen Capture API"}],"pageTitle":"Using the Screen Capture API - Web APIs | MDN","noIndexing":false}}