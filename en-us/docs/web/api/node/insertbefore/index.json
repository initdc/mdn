{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Node.insertBefore()","mdn_url":"/en-US/docs/Web/API/Node/insertBefore","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Node/baseURI\"><code>baseURI</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/childNodes\"><code>childNodes</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/firstChild\"><code>firstChild</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/isConnected\"><code>isConnected</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/lastChild\"><code>lastChild</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/nextSibling\"><code>nextSibling</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/nodeName\"><code>nodeName</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/nodeType\"><code>nodeType</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/nodeValue\"><code>nodeValue</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/ownerDocument\"><code>ownerDocument</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/parentElement\"><code>parentElement</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/parentNode\"><code>parentNode</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/previousSibling\"><code>previousSibling</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/textContent\"><code>textContent</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Node/appendChild\"><code>appendChild()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/cloneNode\"><code>cloneNode()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/compareDocumentPosition\"><code>compareDocumentPosition()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/contains\"><code>contains()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/getRootNode\"><code>getRootNode()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/hasChildNodes\"><code>hasChildNodes()</code></a></li><li><em><code>insertBefore()</code></em></li><li><a href=\"/en-US/docs/Web/API/Node/isDefaultNamespace\"><code>isDefaultNamespace()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/isEqualNode\"><code>isEqualNode()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/isSameNode\"><code>isSameNode()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Node/isSupported\"><code>isSupported()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/lookupNamespaceURI\"><code>lookupNamespaceURI()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/lookupPrefix\"><code>lookupPrefix()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/normalize\"><code>normalize()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/removeChild\"><code>removeChild()</code></a></li><li><a href=\"/en-US/docs/Web/API/Node/replaceChild\"><code>replaceChild()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/Node/selectstart_event\"><code>selectstart</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for DOM</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/en-US/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/en-US/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/en-US/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/en-US/docs/Web/API/Range\"><code>Range</code></a></li><li><a href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>insertBefore()</code></strong> method of the <a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a> interface\n  inserts a node before a <em>reference node</em> as a child of a specified <em>parent node</em>.\n</p>\n<p>\n  If the given node already exists in the document,\n  <code>insertBefore()</code> moves it from its current position to the new position.\n  (That is, it will automatically be removed from its existing parent\n  before appending it to the specified new parent.)\n</p>\n<p>This means that a node cannot be in two locations of the document simultaneously.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> The <a href=\"/en-US/docs/Web/API/Node/cloneNode\"><code>Node.cloneNode()</code></a> can be used to make a copy\n    of the node before appending it under the new parent. Note that the copies made with\n    <code>cloneNode()</code> will not be automatically kept in sync.\n  </p>\n</div>\n<p>\n  If the given child is a <a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a>, the entire contents of the\n  <code>DocumentFragment</code> are moved into the child list of the specified parent\n  node.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">insertBefore(newNode, referenceNode)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"newnode\"><code>newNode</code></dt>\n  <dd>\n    <p>The node to be inserted.</p>\n  </dd>\n  <dt id=\"referencenode\"><code>referenceNode</code></dt>\n  <dd>\n    <p>\n      The node before which <code>newNode</code> is inserted. If this is\n      <code>null</code>, then <code>newNode</code> is inserted at the end of\n      node's child nodes.\n    </p>\n    <div class=\"notecard note\" id=\"sect2\">\n      <p>\n        <strong>Note:</strong> <code>referenceNode</code> is <strong>not</strong> an optional parameter.\n        You must explicitly pass a <a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a> or <code>null</code>.\n        Failing to provide it or passing invalid values may <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=419780\" class=\"external\" rel=\" noopener\">behave</a> <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=119489\" class=\"external\" rel=\" noopener\">differently</a> in different browser versions.\n      </p>\n    </div>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  Returns the added child (unless <code>newNode</code> is a <a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a>,\n  in which case the empty <a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> is returned).\n</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>Pre-insert validity</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":""}},{"type":"prose","value":{"id":"example_1","title":"Example 1","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parentElement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>childElement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>foo bar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token comment\">// Create the new node to insert</span>\n  <span class=\"token keyword\">const</span> newNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Get a reference to the parent node</span>\n  <span class=\"token keyword\">const</span> parentDiv <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"childElement\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Begin test case [ 1 ] : Existing childElement (all works correctly)</span>\n  <span class=\"token keyword\">let</span> sp2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"childElement\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  parentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// End test case [ 1 ]</span>\n\n  <span class=\"token comment\">// Begin test case [ 2 ] : childElement is of Type undefined</span>\n  sp2 <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Non-existent node of id \"childElement\"</span>\n  parentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Implicit dynamic cast to type Node</span>\n  <span class=\"token comment\">// End test case [ 2 ]</span>\n\n  <span class=\"token comment\">// Begin test case [ 3 ] : childElement is of Type \"undefined\" (string)</span>\n  sp2 <span class=\"token operator\">=</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Non-existent node of id \"childElement\"</span>\n  parentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newNode<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Generates \"Type Error: Invalid Argument\"</span>\n  <span class=\"token comment\">// End test case [ 3 ]</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"example_2","title":"Example 2","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parentElement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>childElement<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>foo bar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token comment\">// Create a new, plain &lt;span&gt; element</span>\n  <span class=\"token keyword\">let</span> sp1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Get the reference element</span>\n  <span class=\"token keyword\">let</span> sp2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"childElement\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Get the parent element</span>\n  <span class=\"token keyword\">let</span> parentDiv <span class=\"token operator\">=</span> sp2<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Insert the new element into before sp2</span>\n  parentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>sp1<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p>\n    <strong>Note:</strong> There is no <code>insertAfter()</code> method.\n    It can be emulated by combining the <code>insertBefore</code> method\n    with <a href=\"/en-US/docs/Web/API/Node/nextSibling\"><code>Node.nextSibling</code></a>.\n  </p>\n  <p>In the previous example, <code>sp1</code> could be inserted after <code>sp2</code> using:</p>\n  <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>parentDiv<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>sp1<span class=\"token punctuation\">,</span> sp2<span class=\"token punctuation\">.</span>nextSibling<span class=\"token punctuation\">)</span>\n</code></pre></div>\n  <p>\n    If <code>sp2</code> does not have a next sibling, then it must be the last child —\n    <code>sp2.nextSibling</code> returns <code>null</code>, and <code>sp1</code> is inserted\n    at the end of the child node list (immediately after <code>sp2</code>).\n  </p>\n</div>"}},{"type":"prose","value":{"id":"example_3","title":"Example 3","isH3":true,"content":"<p>\n  Insert an element before the first child element, using the\n  <a href=\"/en-US/docs/Web/API/Node/firstChild\" title=\"firstChild\"><code>firstChild</code></a> property.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Get the parent element</span>\n<span class=\"token keyword\">let</span> parentElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'parentElement'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Get the parent's first child</span>\n<span class=\"token keyword\">let</span> theFirstChild <span class=\"token operator\">=</span> parentElement<span class=\"token punctuation\">.</span>firstChild\n\n<span class=\"token comment\">// Create a new element</span>\n<span class=\"token keyword\">let</span> newElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Insert the new element before the first child</span>\nparentElement<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>newElement<span class=\"token punctuation\">,</span> theFirstChild<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>\n  When the element does not have a first child, then <code>firstChild</code> is\n  <code>null</code>. The element is still appended to the parent, after the last child.\n</p>\n<p>\n  Since the parent element did not have a first child, it did not have a last child,\n  either. Consequently, the newly inserted element is the <em>only</em> element.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#dom-node-insertbefore","title":"DOM Standard"}],"query":"api.Node.insertBefore"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Node.insertBefore","dataURL":"/en-US/docs/Web/API/Node/insertBefore/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Node/removeChild\"><code>Node.removeChild()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Node/replaceChild\"><code>Node.replaceChild()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Node/appendChild\"><code>Node.appendChild()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Node/hasChildNodes\"><code>Node.hasChildNodes()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Element/insertAdjacentElement\"><code>Element.insertAdjacentElement()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Element/prepend\"><code>Element.prepend()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Element/before\"><code>Element.before()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Element/after\"><code>Element.after()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The insertBefore() method of the Node interface\n  inserts a node before a reference node as a child of a specified parent node.","popularity":0.0087,"modified":"2022-09-14T12:12:03.000Z","other_translations":[{"title":"Node.insertBefore()","locale":"es","native":"Español"},{"title":"element.insertBefore","locale":"fr","native":"Français"},{"title":"Node.insertBefore()","locale":"ja","native":"日本語"},{"title":"Node.insertBefore()","locale":"ko","native":"한국어"},{"title":"Node.insertBefore","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Node.insertBefore()","locale":"ru","native":"Русский"},{"title":"Node.insertBefore()","locale":"zh-CN","native":"中文 (简体)"},{"title":"Node.insertBefore()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/api/node/insertbefore","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/node/insertbefore/index.md","last_commit_url":"https://github.com/mdn/content/commit/84fc68f1674c9b2d1708fb38dc2824e228f9bb3f","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Node","title":"Node"},{"uri":"/en-US/docs/Web/API/Node/insertBefore","title":"Node.insertBefore()"}],"pageTitle":"Node.insertBefore() - Web APIs | MDN","noIndexing":false}}