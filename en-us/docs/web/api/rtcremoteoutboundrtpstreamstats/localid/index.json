{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"RTCRemoteOutboundRtpStreamStats.localId","mdn_url":"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/localId","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><em><code>localId</code></em></li><li><a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/remoteTimestamp\"><code>remoteTimestamp</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebRTC</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>MediaDevices.getUserMedia()</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCCertificate\"><code>RTCCertificate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFSender\"><code>RTCDTMFSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDTMFToneChangeEvent\"><code>RTCDTMFToneChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannel\"><code>RTCDataChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDataChannelEvent\"><code>RTCDataChannelEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCDtlsTransport\"><code>RTCDtlsTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCErrorEvent\"><code>RTCErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceCandidate\"><code>RTCIceCandidate</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCIceTransport\"><code>RTCIceTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent\"><code>RTCPeerConnectionIceErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCPeerConnectionIceEvent\"><code>RTCPeerConnectionIceEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpReceiver\"><code>RTCRtpReceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpSender\"><code>RTCRtpSender</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCRtpTransceiver\"><code>RTCRtpTransceiver</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSctpTransport\"><code>RTCSctpTransport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCSessionDescription\"><code>RTCSessionDescription</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a></li><li><a href=\"/en-US/docs/Web/API/RTCTrackEvent\"><code>RTCTrackEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a>\n  dictionary's <strong><code>localId</code></strong> property is a string which can be\n  used to identify the <a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> object whose\n  <a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats/remoteId\" title=\"remoteId\"><code>remoteId</code></a> matches this value.\n</p>\n<p>\n  Together, these two objects provide statistics about the inbound and outbound\n  sides of the same synchronization source (SSRC).\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>\n  A string which can be compared to the value of an\n  <a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats\"><code>RTCInboundRtpStreamStats</code></a> object's\n  <a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats/remoteId\" title=\"remoteId\"><code>remoteId</code></a> property to see if the two\n  represent statistics for each of the two sides of the same set of data received by the\n  local peer.\n</p>"}},{"type":"prose","value":{"id":"usage_notes","title":"Usage notes","isH3":false,"content":"<p>\n  You can think of the local and remote views of the same RTP stream as pairs, each of\n  which has a reference back to the other one. Thus, if an <a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a>\n  includes an <code>remote-outbound-rtp</code> statistics object (of type\n  <code>RTCRemoteOutboundRtpStreamStats</code>), it should also have a corresponding\n  <code>inbound-rtp</code> object. Both of these provide information about the same batch\n  of packets being transmitted from the remote peer to the local device. The difference is\n  that <code>remote-outbound-rtp</code> describes statistics about the transmission(s)\n  from the perspective of the remote peer, while <code>inbound-rtp</code> offers\n  statistics about the incoming data from the local peer's perspective.\n</p>\n<p>\n  You can <a href=\"#try_it_and_fork_it\">examine, try out, and experiment</a> with this\n  example on Glitch.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In this example, we have a pair of functions: the first,\n  <code>networkTestStart()</code>, captures an initial report, and the second,\n  <code>networkTestStop()</code>, captures a second report.\n  The second function uses the two reports to output some information about the network conditions.\n</p>"}},{"type":"prose","value":{"id":"networkteststart","title":"networkTestStart()","isH3":true,"content":"<p>\n  This function calls the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method\n  <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\" title=\"getStats()\"><code>getStats()</code></a> to request an\n  <a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> and store it in the variable <code>startReport</code>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> startReport<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">networkTestStart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    startReport <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">getStats</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  Given an <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>, <code>pc</code>, this calls its\n  <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\" title=\"getStats()\"><code>getStats()</code></a> method to obtain a statistics\n  report object, which it stores in <code>startReport</code> for use once the end-of-test\n  data has been collected by <code>networkTestStop()</code>.\n</p>"}},{"type":"prose","value":{"id":"networkteststop","title":"networkTestStop()","isH3":true,"content":"<p>\n  The <code>networkTestStop()</code> function obtains a second report,\n  <code>endReport</code>, then computes and outputs the results.\n</p>\n<h4 id=\"finding_paired_statistics\">Finding paired statistics</h4>\n<p>\n  Each statistics record of <a href=\"/en-US/docs/Web/API/RTCStats/type\" title=\"type\"><code>type</code></a>\n  <code>remote-outbound-rtp</code> (describing a remote peer's statistics about sending\n  data to the local peer) has a corresponding record of type <code>inbound-rtp</code>\n  which describes the local peer's perspective on the same data being moved between the\n  two peers. Let's create a utility function to help us look up the value of a key in the\n  paired statistics object.\n</p>\n<p>\n  The <code>findReportEntry()</code> function shown below examines\n  an <a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a>, returning the <a href=\"/en-US/docs/Web/API/RTCStats\"><code>RTCStats</code></a>-based statistics\n  record which contains the specified <code>key</code> â€” <em>and</em> for which the key\n  has the specified <code>value</code>. If no match is found (or the statistics report has\n  no record corresponding to the statistics category indicated by <code>key</code>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">findReportEntry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">report<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> stats <span class=\"token keyword\">of</span> report<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stats<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> stats<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  Since the <code>RTCStatsReport</code> is a JavaScript\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\"><code>Map</code></a>,\n  we can iterate over the map's\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\"><code>values()</code></a>\n  to examine each of the <code>RTCStats</code>-based statistics records in the report\n  until we find one that has the <code>key</code> property with the specified\n  <code>value</code>. When a match is found, the statistics object is returned.\n</p>\n<p>If no match is found, the function returns <code>null</code>.</p>\n<h4 id=\"the_main_networkteststop_function\">The main networkTestStop() function</h4>\n<p>\n  Now let's look at the <code>networkTestStop()</code> function itself. It takes as input\n  the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> being tested, calls <code>getStats()</code> to get\n  a new <code>RTCStatsReport</code> with current statistics, then computes the results\n  it's looking for, outputting those results as appropriate to the user by appending\n  appropriate HTML to the contents of the <a href=\"/en-US/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a> element whose class is\n  <code>stats-box</code>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">networkTestStop</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> statsBox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".stats-box\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> endReport <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">getStats</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> endRemoteOutbound <span class=\"token keyword\">of</span> endReport<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>endRemoteOutbound<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"remote-outbound-rtp\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> startRemoteOutbound <span class=\"token operator\">=</span> startReport<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>endRemoteOutbound<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>startRemoteOutbound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> startInboundStats <span class=\"token operator\">=</span> <span class=\"token function\">findReportEntry</span><span class=\"token punctuation\">(</span>startReport<span class=\"token punctuation\">,</span> <span class=\"token string\">\"remoteId\"</span><span class=\"token punctuation\">,</span> startRemoteOutbound<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> endInboundStats <span class=\"token operator\">=</span> <span class=\"token function\">findReportEntry</span><span class=\"token punctuation\">(</span>endReport<span class=\"token punctuation\">,</span> <span class=\"token string\">\"remoteId\"</span><span class=\"token punctuation\">,</span> endRemoteOutbound<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">const</span> elapsedTime <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>endRemoteOutbound<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">-</span> startRemoteOutbound<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">/* in seconds */</span>\n          <span class=\"token keyword\">const</span> packetsSent <span class=\"token operator\">=</span> endRemoteOutbound<span class=\"token punctuation\">.</span>packetsSent <span class=\"token operator\">-</span> startRemoteOutbound<span class=\"token punctuation\">.</span>packetsSent<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> bytesSent <span class=\"token operator\">=</span> endRemoteOutbound<span class=\"token punctuation\">.</span>bytesSent <span class=\"token operator\">-</span> startRemoteOutbound<span class=\"token punctuation\">.</span>bytesSent<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> framesDecoded <span class=\"token operator\">=</span> endInboundStats<span class=\"token punctuation\">.</span>framesDecoded <span class=\"token operator\">-</span> startInboundStats<span class=\"token punctuation\">.</span>framesDecoded<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> frameRate <span class=\"token operator\">=</span> framesDecoded <span class=\"token operator\">/</span> elapsedTime<span class=\"token punctuation\">;</span>\n\n          <span class=\"token keyword\">let</span> timeString <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>elapsedTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            timeString <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> representing </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>elapsedTime<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">s</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token keyword\">let</span> frameString <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>framesDecoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            frameString <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Decoded </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>framesDecoded<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> frames for a frame rate of </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>frameRate<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> FPS.&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token keyword\">const</span> logEntry <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div class=\"stats-entry\"&gt;&lt;h2&gt;Report ID: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>endRemoteOutbound<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/h2&gt;</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n                         <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Remote peer sent </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>packetsSent<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> packets </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>timeString<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.&lt;br&gt;</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n                         <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>frameString<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">+</span>\n                         <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Data size: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>bytesSent<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> bytes.&lt;/div&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n          statsBox<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> logEntry<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          statsBox<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div class=\"stats-error\"&gt;Unable to find initial statistics for ID </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>endRemoteOutbound<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.&lt;/div&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n\n      statsBox<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> statsBox<span class=\"token punctuation\">.</span>scrollHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>\n  Here's what's going on in the <code>networkTestStop()</code> function: after calling\n  the <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a> method <a href=\"/en-US/docs/Web/API/RTCPeerConnection/getStats\" title=\"getStats()\"><code>getStats()</code></a> to get the latest statistics report for the connection and storing it in\n  <code>endReport</code>. This is an <a href=\"/en-US/docs/Web/API/RTCStatsReport\"><code>RTCStatsReport</code></a> object, which maps\n  strings to objects of the\n  corresponding <a href=\"/en-US/docs/Web/API/RTCStats\"><code>RTCStats</code></a>-based type.\n</p>\n<p>\n  Now we can begin to process the results, starting with the ending statistics found in\n  <code>endReport</code>. In this case, we're looking for statistics records whose\n  <code>type</code> is <code>remote-outbound-rtp</code>, so we iterate over the entries in\n  the statistics report until we find an entry of that type. This object is, specifically,\n  of type <a href=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats\"><code>RTCRemoteOutboundRtpStreamStats</code></a>, and it provides statistics\n  giving details about the state of things <em>from the perspective of the remote\npeer</em>. This statistics record is stored in <code>endRemoteOutbound</code>.\n</p>\n<p>\n  Once the ending <code>remote-outbound-rtp</code> record is found, we use\n  its <a href=\"/en-US/docs/Web/API/RTCStats/id\" title=\"id\"><code>id</code></a> property to get its ID. WIth that in hand, we can\n  look up the <code>remote-outbound-rtp</code> record in the starting statistics record\n  (<code>startReport</code>), which we store into <code>startRemoteOutbound</code>.\n</p>\n<p>\n  Now we obtain the <code>inbound-rtp</code> statistics that correspond to these two\n  <code>remote-outbound-rtp</code> records by finding the <code>remoteId</code> property\n  within them whose value is the ID of the <code>remote-outbound-rtp</code> record. We use\n  the <code>findReportEntry()</code> function described in the previous section for that,\n  storing the located <code>inbound-rtp</code> records in <code>startInboundStats</code>\n  and <code>endInboundStats</code>.\n</p>\n<p>\n  Now we have all the raw statistics needed to calculate the information we want to\n  display, so we do so:\n</p>\n<ul>\n  <li>\n    We calculate the amount of timeâ€”<code>elapsedTime</code>â€”that elapsed between the\n    two reports being sent by subtracting the <a href=\"/en-US/docs/Web/API/RTCStats/timestamp\" title=\"timestamp\"><code>timestamp</code></a> <code>startReport</code> from that of <code>endReport</code>. We then\n    divide by 1000 to convert the result from milliseconds to seconds.\n  </li>\n  <li>\n    We compute the number of packets sent during this\n    intervalâ€”<code>packetsSent</code>â€”by subtracting the two reports' values for the\n    <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>packetsSent</code></a> property.\n  </li>\n  <li>\n    Similarly, the number of bytes sent during this intervalâ€”<code>bytesSent</code>â€”is\n    calculated by subtracting the starting statistics object's\n    <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>bytesSent</code></a> property from that of the\n    ending statistics.\n  </li>\n  <li>\n    The number of frames decoded during this intervalâ€”<code>framesDecoded</code>â€”is\n    determined by subtracting <code>startRecord</code>'s\n    <a href=\"/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesDecoded\" title=\"framesDecoded\"><code>framesDecoded</code></a> from\n    <code>endRecord.framesDecoded</code>.\n  </li>\n  <li>\n    Finally, the frame rate over the elapsed time span is calculated by dividing\n    <code>framesDecoded</code> by <code>elapsedTime</code>.\n  </li>\n</ul>\n<p>\n  The remainder of the <code>networkTestStop()</code> function constructs the HTML used\n  to display the output of the collected and computed results to the user, then append it\n  to the element <code>statsBox</code>, which we're using to show the status updates to\n  the user.\n</p>\n<p>The output log, given the styles used by the example, looks like this:</p>\n<p>\n  <img src=\"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/localId/rtc-log-screenshot.png\" alt=\"A screenshot of the example showing logged statistics taken from paired remote-outbound-rtp and inbound-rtp statistics records\" width=\"1456\" height=\"918\" loading=\"lazy\">\n</p>\n<p>\n  In the screenshot, we see a heading followed by the scrollable <a href=\"/en-US/docs/Web/HTML/Element/div\"><code>&lt;div&gt;</code></a>\n  we refer to as <code>statsBox</code>. The box contains a number of log entries, the last\n  handful of which are visible. Each one represents approximately one second of time\n  (since that's much time we're waiting between calling <code>networkTestStart()</code>\n  and <code>networkTestStop()</code>).\n</p>"}},{"type":"prose","value":{"id":"try_it_and_fork_it","title":"Try it and fork it","isH3":true,"content":"<p>This example is <a href=\"https://websocket-webrtc-chat-with-stats.glitch.me\" class=\"external\" rel=\" noopener\">available on Glitch for you to try out</a>, examine, or remix.</p>\n<p><a href=\"https://glitch.com/edit/?utm_content=project_websocket-webrtc-chat-with-stats&amp;utm_source=remix_this&amp;utm_medium=button&amp;utm_campaign=glitchButton#!/remix/websocket-webrtc-chat-with-stats\" class=\"external\" rel=\" noopener\">Remix It</a></p>\n<p><a href=\"https://glitch.com/edit/?utm_content=project_websocket-webrtc-chat-with-stats&amp;utm_source=view_source&amp;utm_medium=button&amp;utm_campaign=glitchButton#!/websocket-webrtc-chat-with-stats\" class=\"external\" rel=\" noopener\">View Source</a></p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webrtc-stats/#dom-rtcremoteoutboundrtpstreamstats-localid","title":"Identifiers for WebRTC's Statistics API"}],"query":"api.RTCRemoteOutboundRtpStreamStats.localId"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.RTCRemoteOutboundRtpStreamStats.localId","dataURL":"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/localId/bcd.json"}}],"toc":[{"text":"Value","id":"value"},{"text":"Usage notes","id":"usage_notes"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The RTCRemoteOutboundRtpStreamStats\n  dictionary's localId property is a string which can be\n  used to identify the RTCInboundRtpStreamStats object whose\n  remoteId matches this value.","popularity":0,"modified":"2022-09-09T05:18:40.000Z","source":{"folder":"en-us/web/api/rtcremoteoutboundrtpstreamstats/localid","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/rtcremoteoutboundrtpstreamstats/localid/index.md","last_commit_url":"https://github.com/mdn/content/commit/e0e09b1df51489867f2e74c18586d168ba5e00d1","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats","title":"RTCRemoteOutboundRtpStreamStats"},{"uri":"/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/localId","title":"RTCRemoteOutboundRtpStreamStats.localId"}],"pageTitle":"RTCRemoteOutboundRtpStreamStats.localId - Web APIs | MDN","noIndexing":false}}