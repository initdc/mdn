{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CacheStorage.match()","mdn_url":"/en-US/docs/Web/API/CacheStorage/match","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Service_Worker_API\">Service Worker API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/CacheStorage/delete\"><code>delete()</code></a></li><li><a href=\"/en-US/docs/Web/API/CacheStorage/has\"><code>has()</code></a></li><li><a href=\"/en-US/docs/Web/API/CacheStorage/keys\"><code>keys()</code></a></li><li><em><code>match()</code></em></li><li><a href=\"/en-US/docs/Web/API/CacheStorage/open\"><code>open()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Service Workers API</summary><ol><li><a href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code></a></li><li><a href=\"/en-US/docs/Web/API/Client\"><code>Client</code></a></li><li><a href=\"/en-US/docs/Web/API/Clients\"><code>Clients</code></a></li><li><a href=\"/en-US/docs/Web/API/ExtendableEvent\"><code>ExtendableEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/InstallEvent\"><code>InstallEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/serviceWorker\"><code>Navigator.serviceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/NotificationEvent\"><code>NotificationEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicSyncEvent\"><code>PeriodicSyncEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicSyncManager\"><code>PeriodicSyncManager</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorker\"><code>ServiceWorker</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerContainer\"><code>ServiceWorkerContainer</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a></li><li><a href=\"/en-US/docs/Web/API/ServiceWorkerRegistration\"><code>ServiceWorkerRegistration</code></a></li><li><a href=\"/en-US/docs/Web/API/SyncEvent\"><code>SyncEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SyncManager\"><code>SyncManager</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowClient\"><code>WindowClient</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>match()</code></strong> method of the <a href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a> interface checks if a given <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> or URL string is a key for a stored <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a>.\n  This method returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> for a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a>, or a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves to <code>undefined</code> if no match is found.\n</p>\n<p>\n  You can access <code>CacheStorage</code> through the global\n  <a href=\"/en-US/docs/Web/API/caches\"><code>caches</code></a> property.\n</p>\n<p><code>Cache</code> objects are searched in creation order.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> <a href=\"/en-US/docs/Web/API/CacheStorage/match\" title=\"caches.match()\" aria-current=\"page\"><code>caches.match()</code></a> is a convenience method.\n    Equivalent functionality is to call <a href=\"/en-US/docs/Web/API/Cache/match\"><code>cache.match()</code></a> on each cache (in the order returned by <a href=\"/en-US/docs/Web/API/CacheStorage/keys\" title=\"caches.keys()\"><code>caches.keys()</code></a>) until a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> is returned.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">match(request)\nmatch(request, options)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"request\"><code>request</code></dt>\n  <dd>\n    <p>\n      The <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> you want to match. This can be a <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a>\n      object or a URL string.\n    </p>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      An object whose properties control how matching is done in the <code>match</code>\n      operation. The available options are:\n    </p>\n    <dl>\n      <dt id=\"ignoresearch\"><code>ignoreSearch</code></dt>\n      <dd>\n        <p>\n          A boolean value that specifies whether the\n          matching process should ignore the query string in the URL. For example, if set\n          to <code>true</code>, the <code>?value=bar</code> part of\n          <code>http://foo.com/?value=bar</code> would be ignored when performing a match.\n          It defaults to <code>false</code>.\n        </p>\n      </dd>\n      <dt id=\"ignoremethod\"><code>ignoreMethod</code></dt>\n      <dd>\n        <p>\n          A boolean value that, when set to\n          <code>true</code>, prevents matching operations from validating the\n          <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> <code>http</code> method (normally only <code>GET</code>\n          and <code>HEAD</code> are allowed.) It defaults to <code>false</code>.\n        </p>\n      </dd>\n      <dt id=\"ignorevary\"><code>ignoreVary</code></dt>\n      <dd>\n        <p>\n          A boolean value that, when set to\n          <code>true,</code> tells the matching operation not to perform <code>VARY</code>\n          header matching. In other words, if the URL matches you will get a match\n          regardless of whether the <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> object has a <code>VARY</code>\n          header or not. It defaults to <code>false</code>.\n        </p>\n      </dd>\n      <dt id=\"cachename\"><code>cacheName</code></dt>\n      <dd>\n        <p>\n          A string that represents a specific\n          cache to search within.\n        </p>\n      </dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to the matching <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a>. If\n  no matching response to the specified request is found, the promise resolves\n  with <code>undefined</code>.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  This example is from the MDN <a href=\"https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker\" class=\"external\" rel=\" noopener\">simple service worker example</a> (see <a href=\"https://bncb2v.csb.app/\" class=\"external\" rel=\" noopener\">simple service worker running live</a>).\n  Here we wait for a <a href=\"/en-US/docs/Web/API/FetchEvent\"><code>FetchEvent</code></a> to fire. We construct a custom response\n  like so:\n</p>\n<ol>\n  <li>\n    Check whether a match for the request is found in the <a href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a>\n    using <a href=\"/en-US/docs/Web/API/CacheStorage/match\" title=\"CacheStorage.match()\" aria-current=\"page\"><code>CacheStorage.match()</code></a>. If so, serve that.\n  </li>\n  <li>\n    If not, open the <code>v1</code> cache using <code>open()</code>, put the default\n    network request in the cache using <a href=\"/en-US/docs/Web/API/Cache/put\" title=\"Cache.put()\"><code>Cache.put()</code></a> and return a\n    clone of the default network request using <code>return response.clone()</code>. The\n    last is necessary because <code>put()</code> consumes the response body.\n  </li>\n  <li>If this fails (e.g., because the network is down), return a fallback response.</li>\n</ol>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>self<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fetch\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">respondWith</span><span class=\"token punctuation\">(</span>\n    caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// caches.match() always resolves</span>\n      <span class=\"token comment\">// but in case of success response will have value</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// response may be used only once</span>\n            <span class=\"token comment\">// we need to save clone to put one copy in cache</span>\n            <span class=\"token comment\">// and serve second one</span>\n            <span class=\"token keyword\">let</span> responseClone <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            caches<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cache</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n              cache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">,</span> responseClone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/gallery/myLittleVader.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/ServiceWorker/#cache-storage-match","title":"Service Workers 1"}],"query":"api.CacheStorage.match"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CacheStorage.match","dataURL":"/en-US/docs/Web/API/CacheStorage/match/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\">Using Service Workers</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Cache\"><code>Cache</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/caches\"><code>caches</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The match() method of the CacheStorage interface checks if a given Request or URL string is a key for a stored Response.\n  This method returns a Promise for a Response, or a Promise which resolves to undefined if no match is found.","popularity":0.0004,"modified":"2022-09-13T05:19:21.000Z","other_translations":[{"title":"CacheStorage.match()","locale":"fr","native":"Français"},{"title":"CacheStorage.match()","locale":"ja","native":"日本語"},{"title":"CacheStorage.match()","locale":"ru","native":"Русский"},{"title":"CacheStorage.match()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/cachestorage/match","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/cachestorage/match/index.md","last_commit_url":"https://github.com/mdn/content/commit/9ad07c43f42e14278a4040fd554af33699aea632","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CacheStorage","title":"CacheStorage"},{"uri":"/en-US/docs/Web/API/CacheStorage/match","title":"CacheStorage.match()"}],"pageTitle":"CacheStorage.match() - Web APIs | MDN","noIndexing":false}}