{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Storage","mdn_url":"/en-US/docs/Web/API/Storage","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Storage_API\">Web Storage API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Storage\"><code>Storage</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Storage/length\"><code>length</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Storage/clear\"><code>clear()</code></a></li><li><a href=\"/en-US/docs/Web/API/Storage/getItem\"><code>getItem()</code></a></li><li><a href=\"/en-US/docs/Web/API/Storage/key\"><code>key()</code></a></li><li><a href=\"/en-US/docs/Web/API/Storage/removeItem\"><code>removeItem()</code></a></li><li><a href=\"/en-US/docs/Web/API/Storage/setItem\"><code>setItem()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Storage API</summary><ol><li><a href=\"/en-US/docs/Web/API/StorageEvent\"><code>StorageEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/localStorage\"><code>Window.localStorage</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/sessionStorage\"><code>Window.sessionStorage</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>Storage</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Web_Storage_API\">Web Storage API</a> provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items.</p>\n<p>To manipulate, for instance, the session storage for a domain, a call to <a href=\"/en-US/docs/Web/API/Window/sessionStorage\"><code>Window.sessionStorage</code></a> is made; whereas for local storage the call is made to <a href=\"/en-US/docs/Web/API/Window/localStorage\"><code>Window.localStorage</code></a>.</p>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"storage.length\"><a href=\"/en-US/docs/Web/API/Storage/length\"><code>Storage.length</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns an integer representing the number of data items stored in the <code>Storage</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"storage.key\"><a href=\"/en-US/docs/Web/API/Storage/key\"><code>Storage.key()</code></a></dt>\n  <dd>\n    <p>When passed a number <code>n</code>, this method will return the name of the nth key in the storage.</p>\n  </dd>\n  <dt id=\"storage.getitem\"><a href=\"/en-US/docs/Web/API/Storage/getItem\"><code>Storage.getItem()</code></a></dt>\n  <dd>\n    <p>When passed a key name, will return that key's value.</p>\n  </dd>\n  <dt id=\"storage.setitem\"><a href=\"/en-US/docs/Web/API/Storage/setItem\"><code>Storage.setItem()</code></a></dt>\n  <dd>\n    <p>When passed a key name and value, will add that key to the storage, or update that key's value if it already exists.</p>\n  </dd>\n  <dt id=\"storage.removeitem\"><a href=\"/en-US/docs/Web/API/Storage/removeItem\"><code>Storage.removeItem()</code></a></dt>\n  <dd>\n    <p>When passed a key name, will remove that key from the storage.</p>\n  </dd>\n  <dt id=\"storage.clear\"><a href=\"/en-US/docs/Web/API/Storage/clear\"><code>Storage.clear()</code></a></dt>\n  <dd>\n    <p>When invoked, will empty all keys out of the storage.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Here we access a <code>Storage</code> object by calling <code>localStorage</code>. We first test whether the local storage contains data items using <code>!localStorage.getItem('bgcolor')</code>. If it does, we run a function called <code>setStyles()</code> that grabs the data items using <a href=\"/en-US/docs/Web/API/Storage/getItem\"><code>Storage.getItem()</code></a> and uses those values to update page styles. If it doesn't, we run another function, <code>populateStorage()</code>, which uses <a href=\"/en-US/docs/Web/API/Storage/setItem\"><code>Storage.setItem()</code></a> to set the item values, then runs <code>setStyles()</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bgcolor'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">populateStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">populateStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bgcolor'</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bgcolor'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'font'</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'font'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">setStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">setStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> currentColor <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bgcolor'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> currentFont <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'font'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> currentImage <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bgcolor'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> currentColor<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'font'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> currentFont<span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> currentImage<span class=\"token punctuation\">;</span>\n\n  htmlElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentColor<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  pElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>fontFamily <span class=\"token operator\">=</span> currentFont<span class=\"token punctuation\">;</span>\n  imgElem<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> currentImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> To see this running as a complete working example, see our <a href=\"https://mdn.github.io/dom-examples/web-storage/\" class=\"external\" rel=\" noopener\">Web Storage Demo</a>.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/webstorage.html#storage","title":"HTML Standard"}],"query":"api.Storage"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Storage","dataURL":"/en-US/docs/Web/API/Storage/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\">Using the Web Storage API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Window/localStorage\"><code>Window.localStorage</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Window/sessionStorage\"><code>Window.sessionStorage</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a></li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Storage interface of the Web Storage API provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items.","popularity":0.0051,"modified":"2022-09-09T05:18:40.000Z","other_translations":[{"title":"Almacenamiento","locale":"es","native":"Español"},{"title":"Storage","locale":"fr","native":"Français"},{"title":"Storage","locale":"ja","native":"日本語"},{"title":"Storage","locale":"ko","native":"한국어"},{"title":"Storage","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Storage","locale":"ru","native":"Русский"},{"title":"Storage","locale":"zh-CN","native":"中文 (简体)"},{"title":"Storage","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/api/storage","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/storage/index.md","last_commit_url":"https://github.com/mdn/content/commit/e0e09b1df51489867f2e74c18586d168ba5e00d1","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Storage","title":"Storage"}],"pageTitle":"Storage - Web APIs | MDN","noIndexing":false}}