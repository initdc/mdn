{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CSSTransformValue.entries()","mdn_url":"/en-US/docs/Web/API/CSSTransformValue/entries","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CSSTransformValue/CSSTransformValue\"><code>CSSTransformValue()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CSSTransformValue/is2D\"><code>is2D</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CSSTransformValue/length\"><code>length</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>entries()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CSSTransformValue/forEach\"><code>forEach()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CSSTransformValue/keys\"><code>keys()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CSSTransformValue/toMatrix\"><code>toMatrix()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CSSTransformValue/values\"><code>values()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/CSSStyleValue\"><code>CSSStyleValue</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>CSSTransformValue.entries()</code></strong> method\n  returns an array of a given object's own enumerable\n  property <code>[key, value]</code> pairs in the same order as that provided by a\n  <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>for...in</code></a> loop (the difference being that a for-in loop enumerates\n  properties in the prototype chain as well).\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">entries(obj)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"obj\"><code>obj</code></dt>\n  <dd>\n    <p>\n      The <a href=\"/en-US/docs/Web/API/CSSTransformValue\"><code>CSSTransformValue</code></a> whose enumerable own property\n      <code>[key, value]</code> pairs are to be returned.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  An array of the given <code>CSSTransformValue</code> object's own enumerable property\n  <code>[key, value]</code> pairs.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>To Do</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[],"query":"api.CSSTransformValue.entries"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CSSTransformValue.entries","dataURL":"/en-US/docs/Web/API/CSSTransformValue/entries/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The CSSTransformValue.entries() method\n  returns an array of a given object's own enumerable\n  property [key, value] pairs in the same order as that provided by a\n  for...in loop (the difference being that a for-in loop enumerates\n  properties in the prototype chain as well).","popularity":0,"modified":"2022-09-13T05:21:27.000Z","source":{"folder":"en-us/web/api/csstransformvalue/entries","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/csstransformvalue/entries/index.md","last_commit_url":"https://github.com/mdn/content/commit/da88b2f3a23b9d93f083003f13c06f9d96073f6a","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CSSTransformValue","title":"CSSTransformValue"},{"uri":"/en-US/docs/Web/API/CSSTransformValue/entries","title":"CSSTransformValue.entries()"}],"pageTitle":"CSSTransformValue.entries() - Web APIs | MDN","noIndexing":false}}