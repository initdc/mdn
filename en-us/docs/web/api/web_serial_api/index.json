{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Web Serial API","mdn_url":"/en-US/docs/Web/API/Web_Serial_API","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong>Web Serial API</strong> provides a way for websites to read from and write to serial devices. These devices may be connected via a serial port, or be USB or Bluetooth devices that emulate a serial port.</p>"}},{"type":"prose","value":{"id":"concepts_and_usage","title":"Concepts and Usage","isH3":false,"content":"<p>The Web Serial API is one of a set of APIs that allow websites to communicate with peripherals connected to a user's computer. It provides the ability to connect to devices that are required by the operating system to communicate via the serial API, rather than USB which can be accessed via the <a href=\"/en-US/docs/Web/API/WebUSB_API\"><code>WebUSB API</code></a>, or input devices that can be accessed via <a href=\"/en-US/docs/Web/API/WebHID_API\"><code>WebHID API</code></a>.</p>\n<p>Examples of serial devices include 3D printers, and microcontrollers such as the <a href=\"https://microbit.org/\" class=\"external\" rel=\" noopener\">BBC micro:bit board</a>.</p>"}},{"type":"prose","value":{"id":"interfaces","title":"Interfaces","isH3":false,"content":"<dl>\n  <dt id=\"serial\"><a href=\"/en-US/docs/Web/API/Serial\"><code>Serial</code></a></dt>\n  <dd>\n    <p>Provides attributes and methods for finding and connecting to serial ports from a web page.</p>\n  </dd>\n  <dt id=\"serialport\"><a href=\"/en-US/docs/Web/API/SerialPort\"><code>SerialPort</code></a></dt>\n  <dd>\n    <p>Provides access to a serial port on the host device.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following examples demonstrate some of the functionality provided by the Web Serial API.</p>"}},{"type":"prose","value":{"id":"checking_for_available_ports","title":"Checking for available ports","isH3":true,"content":"<p>The following example shows how to check for available ports and allows the user to grant it permission to access additional ports.</p>\n<p>The <code>connect</code> and <code>disconnect</code> events let sites react when a device is connected or disconnected from the system. The <a href=\"/en-US/docs/Web/API/Serial/getPorts\" title=\"getPorts()\"><code>getPorts()</code></a> method is then called to see connected ports that the site already has access to.</p>\n<p>If the site doesn't have access to any connected ports it has to wait until it has user activation to proceed. In this example we use a <a href=\"/en-US/docs/Web/API/Element/click_event\" title=\"click\"><code>click</code></a> event handler on a button for this task. A filter is passed to <a href=\"/en-US/docs/Web/API/Serial/requestPort\" title=\"requestPort()\"><code>requestPort()</code></a> with a USB vendor ID in order to limit the set of devices shown to the user to only USB devices built by a particular manufacturer.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>navigator<span class=\"token punctuation\">.</span>serial<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connect'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Connect to `e.target` or add it to a list of available ports.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnavigator<span class=\"token punctuation\">.</span>serial<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disconnect'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Remove `e.target` from the list of available ports.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnavigator<span class=\"token punctuation\">.</span>serial<span class=\"token punctuation\">.</span><span class=\"token function\">getPorts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ports</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Initialize the list of available ports with `ports` on page load.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbutton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> usbVendorId <span class=\"token operator\">=</span> <span class=\"token number\">0xABCD</span><span class=\"token punctuation\">;</span>\n  navigator<span class=\"token punctuation\">.</span>serial<span class=\"token punctuation\">.</span><span class=\"token function\">requestPort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">filters</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> usbVendorId <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">port</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Connect to `port` or add it to the list of available ports.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// The user didn't select a port.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"reading_data_from_a_port","title":"Reading data from a port","isH3":true,"content":"<p>\n  The following example shows how to read data from a port. The outer loop handles non-fatal errors,\n  creating a new reader until a fatal error is encountered and <a href=\"/en-US/docs/Web/API/SerialPort/readable\"><code>SerialPort.readable</code></a> becomes <code>null</code>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">.</span>readable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> port<span class=\"token punctuation\">.</span>readable<span class=\"token punctuation\">.</span><span class=\"token function\">getReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">,</span> done <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// |reader| has been canceled.</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Do something with |value|...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Handle |error|...</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n    reader<span class=\"token punctuation\">.</span><span class=\"token function\">releaseLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/serial/#serial-interface","title":"Web Serial API"}],"query":"api.Serial"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Serial","dataURL":"/en-US/docs/Web/API/Web_Serial_API/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://web.dev/serial/\" class=\"external\" rel=\" noopener\">Read from and write to a serial port</a></li>\n  <li><a href=\"https://codelabs.developers.google.com/codelabs/web-serial#0\" class=\"external\" rel=\" noopener\">Getting started with the Web Serial API</a></li>\n</ul>"}}],"toc":[{"text":"Concepts and Usage","id":"concepts_and_usage"},{"text":"Interfaces","id":"interfaces"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Web Serial API provides a way for websites to read from and write to serial devices. These devices may be connected via a serial port, or be USB or Bluetooth devices that emulate a serial port.","popularity":0.0022,"modified":"2022-09-09T05:19:45.000Z","source":{"folder":"en-us/web/api/web_serial_api","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/web_serial_api/index.md","last_commit_url":"https://github.com/mdn/content/commit/f7dae62645a2c735ed6f6ed63f664bf279fdfc4b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Web_Serial_API","title":"Web Serial API"}],"pageTitle":"Web Serial API - Web APIs | MDN","noIndexing":false}}