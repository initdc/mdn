{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Sanitizer()","mdn_url":"/en-US/docs/Web/API/Sanitizer/Sanitizer","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/HTML_Sanitizer_API\">HTML Sanitizer API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Sanitizer\"><code>Sanitizer</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>Sanitizer()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Sanitizer/sanitize\"><code>sanitize()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Sanitizer/sanitizeFor\"><code>sanitizeFor()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Writing_guidelines/Experimental_deprecated_obsolete#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div><div class=\"notecard secure\" id=\"sect2\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>Sanitizer()</code></strong> constructor creates a new <a href=\"/en-US/docs/Web/API/Sanitizer\"><code>Sanitizer</code></a> object, which can be used to sanitize untrusted strings of HTML, or untrusted <a href=\"/en-US/docs/Web/API/Document\"><code>Document</code></a> or <a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a> objects, making them safe for insertion into a document's DOM.</p>\n<p>\n  The default <code>Sanitizer()</code> configuration causes sanitizer operations to strip out XSS-relevant input by default, including <a href=\"/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> tags, custom elements, and comments.\n  The constructor <code>config</code> option can be used to customize the sanitizer behavior.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new Sanitizer()\nnew Sanitizer(config)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"config\"><code>config</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>A sanitizer configuration object with the following options (referred to as <code>SanitizerConfig</code> in the specification):</p>\n    <dl>\n      <dt id=\"allowelements\"><code>allowElements</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>\n          An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>strings</code></a> indicating elements that the sanitizer should not remove.\n          All elements not in the array will be dropped.\n        </p>\n      </dd>\n      <dt id=\"blockelements\"><code>blockElements</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>strings</code></a> indicating elements that the sanitizer should remove, but keeping their child elements.</p>\n      </dd>\n      <dt id=\"dropelements\"><code>dropElements</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>strings</code></a> indicating elements (including nested elements) that the sanitizer should remove.</p>\n      </dd>\n      <dt id=\"allowattributes\"><code>allowAttributes</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>\n          An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> where each key is the attribute name and the value is an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of allowed tag names.\n          Matching attributes will not be removed.\n          All attributes that are not in the array will be dropped.\n        </p>\n      </dd>\n      <dt id=\"dropattributes\"><code>dropAttributes</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>\n          An <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> where each key is the attribute name and the value is an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of dropped tag names.\n          Matching attributes will be removed.\n        </p>\n      </dd>\n      <dt id=\"allowcustomelements\"><code>allowCustomElements</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>\n          A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> value set to <code>false</code> (default) to remove custom elements and their children.\n          If set to <code>true</code>, custom elements will be subject to built-in and custom configuration checks (and will be retained or dropped based on those checks).\n        </p>\n      </dd>\n      <dt id=\"allowcomments\"><code>allowComments</code> <span class=\"badge inline optional\">Optional</span></dt>\n      <dd>\n        <p>\n          A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a> value set to <code>false</code> (default) to remove HTML comments.\n          Set to <code>true</code> in order to keep comments.\n        </p>\n      </dd>\n    </dl>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> <code>allowElements</code> creates a sanitizer that will drop any elements that are not in <code>allowElements</code>, while <code>blockElements</code> and <code>dropElements</code> create a sanitizer that will allow all elements except those in these properties.</p>\n  <p>\n    <code>blockElements</code> and <code>dropElements</code> are processed before <code>allowElements</code>.\n    If you specify both properties, the elements in <code>blockElements</code> or <code>dropElements</code> will be discarded first, followed by any elements not in <code>allowElements</code>.\n    So while it is possible to specify both types of properties at the same time, the intent can always be more clearly captured using just one type.\n  </p>\n  <p>The same applies to <code>allowAttributes</code> and <code>dropAttributes</code>.</p>\n</div>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  The examples below show a sanitization operation using the <a href=\"/en-US/docs/Web/API/Sanitizer/sanitizeFor\"><code>Sanitizer.sanitizeFor()</code></a> method.\n  This method takes as inputs a string of HTML to sanitize and the context (tag) in which it is sanitized, and returns a sanitized node object for the specified tag.\n  To simplify the presentation the result that is shown is actually the <em>innerHTML</em> of the returned object.\n</p>\n<div class=\"notecard note\" id=\"sect4\">\n  <p>\n    <strong>Note:</strong> The API <em>only</em> sanitizes HTML in strings in the context of a particular element/tag.\n    For more information see <a href=\"/en-US/docs/Web/API/HTML_Sanitizer_API\"><code>HTML Sanitizer API</code></a> (and <a href=\"/en-US/docs/Web/API/Sanitizer/sanitizeFor\"><code>Sanitizer.sanitizeFor()</code></a>).\n  </p>\n</div>"}},{"type":"prose","value":{"id":"using_the_default_sanitizer","title":"Using the default sanitizer","isH3":true,"content":"<p>This example shows the result of sanitizing a string with disallowed <code>script</code> element using the default sanitizer (in a <code>div</code> context).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> unsanitized <span class=\"token operator\">=</span> <span class=\"token string\">\"abc &lt;script&gt;alert(1)&lt;\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/script&gt; def\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sanitized <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sanitizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sanitizeFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span> unsanitized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Result (innerHTML of 'sanitized'): script will be removed: \"abc alert(1) def\"</span>\n</code></pre></div><!-- Add other examples showing use of parameter -->"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/sanitizer-api/#dom-sanitizer-sanitizer","title":"HTML Sanitizer API"}],"query":"api.Sanitizer.Sanitizer"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Sanitizer.Sanitizer","dataURL":"/en-US/docs/Web/API/Sanitizer/Sanitizer/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The Sanitizer() constructor creates a new Sanitizer object, which can be used to sanitize untrusted strings of HTML, or untrusted Document or DocumentFragment objects, making them safe for insertion into a document's DOM.","popularity":0.0003,"modified":"2022-09-19T04:57:04.000Z","source":{"folder":"en-us/web/api/sanitizer/sanitizer","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/sanitizer/sanitizer/index.md","last_commit_url":"https://github.com/mdn/content/commit/e1f571eced916f60ca387ecb562271f6235beb5c","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Sanitizer","title":"Sanitizer"},{"uri":"/en-US/docs/Web/API/Sanitizer/Sanitizer","title":"Sanitizer()"}],"pageTitle":"Sanitizer() - Web APIs | MDN","noIndexing":false}}