{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"SpeechSynthesis.speak()","mdn_url":"/en-US/docs/Web/API/SpeechSynthesis/speak","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/paused\"><code>paused</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/pending\"><code>pending</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/speaking\"><code>speaking</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/cancel\"><code>cancel()</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/getVoices\"><code>getVoices()</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/pause\"><code>pause()</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/resume\"><code>resume()</code></a></li><li><em><code>speak()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/voiceschanged_event\"><code>voiceschanged</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Speech API</summary><ol><li><a href=\"/en-US/docs/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechGrammarList\"><code>SpeechGrammarList</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognitionAlternative\"><code>SpeechRecognitionAlternative</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognitionErrorEvent\"><code>SpeechRecognitionErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognitionEvent\"><code>SpeechRecognitionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognitionResultList\"><code>SpeechRecognitionResultList</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesisErrorEvent\"><code>SpeechSynthesisErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesisEvent\"><code>SpeechSynthesisEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>speak()</code></strong> method of the <a href=\"/en-US/docs/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a>\n  interface adds an <a href=\"/en-US/docs/Web/API/SpeechSynthesisUtterance\" title=\"utterance\"><code>utterance</code></a> to the utterance\n  queue; it will be spoken when any other utterances queued before it have been spoken.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">speak(utterance)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"utterance\"><code>utterance</code></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  This snippet is excerpted from our <a href=\"https://github.com/mdn/dom-examples/blob/main/web-speech-api/speak-easy-synthesis/script.js\" class=\"external\" rel=\" noopener\">Speech synthesizer demo</a> (<a href=\"https://mdn.github.io/dom-examples/web-speech-api/speak-easy-synthesis/\" class=\"external\" rel=\" noopener\">see it live</a>). When a form containing the text we want to speak is submitted,\n  we (amongst other things) create a new utterance containing this text, then speak it by\n  passing it into <code>speak()</code> as a parameter.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> synth <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>speechSynthesis<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n\ninputForm<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsubmit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> utterThis <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SpeechSynthesisUtterance</span><span class=\"token punctuation\">(</span>inputTxt<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> selectedOption <span class=\"token operator\">=</span> voiceSelect<span class=\"token punctuation\">.</span>selectedOptions<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> voices<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>voices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> selectedOption<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      utterThis<span class=\"token punctuation\">.</span>voice <span class=\"token operator\">=</span> voices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  synth<span class=\"token punctuation\">.</span><span class=\"token function\">speak</span><span class=\"token punctuation\">(</span>utterThis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  inputTxt<span class=\"token punctuation\">.</span><span class=\"token function\">blur</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/speech-api/#dom-speechsynthesis-speak","title":"Web Speech API"}],"query":"api.SpeechSynthesis.speak"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.SpeechSynthesis.speak","dataURL":"/en-US/docs/Web/API/SpeechSynthesis/speak/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The speak() method of the SpeechSynthesis\n  interface adds an utterance to the utterance\n  queue; it will be spoken when any other utterances queued before it have been spoken.","popularity":0.0008,"modified":"2022-09-13T06:27:50.000Z","source":{"folder":"en-us/web/api/speechsynthesis/speak","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/speechsynthesis/speak/index.md","last_commit_url":"https://github.com/mdn/content/commit/16e398809d62247dbadc89ff4024a0ffa4781f0e","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/SpeechSynthesis","title":"SpeechSynthesis"},{"uri":"/en-US/docs/Web/API/SpeechSynthesis/speak","title":"SpeechSynthesis.speak()"}],"pageTitle":"SpeechSynthesis.speak() - Web APIs | MDN","noIndexing":false}}