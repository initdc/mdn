{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"SpeechSynthesis","mdn_url":"/en-US/docs/Web/API/SpeechSynthesis","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/paused\"><code>paused</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/pending\"><code>pending</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/speaking\"><code>speaking</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/cancel\"><code>cancel()</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/getVoices\"><code>getVoices()</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/pause\"><code>pause()</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/resume\"><code>resume()</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/speak\"><code>speak()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/SpeechSynthesis/voiceschanged_event\"><code>voiceschanged</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Speech API</summary><ol><li><a href=\"/en-US/docs/Web/API/SpeechGrammar\"><code>SpeechGrammar</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechGrammarList\"><code>SpeechGrammarList</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognition\"><code>SpeechRecognition</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognitionAlternative\"><code>SpeechRecognitionAlternative</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognitionErrorEvent\"><code>SpeechRecognitionErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognitionEvent\"><code>SpeechRecognitionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognitionResult\"><code>SpeechRecognitionResult</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechRecognitionResultList\"><code>SpeechRecognitionResultList</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesisErrorEvent\"><code>SpeechSynthesisErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesisEvent\"><code>SpeechSynthesisEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a></li><li><a href=\"/en-US/docs/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>SpeechSynthesis</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a> is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/EventTarget\">\n    <rect x=\"0\" y=\"0\" width=\"88\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"44\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      EventTarget\n    </text>\n  </a>\n  <line x1=\"88\" y1=\"14\" x2=\"118\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"88,14 98,9 98,19 88,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/SpeechSynthesis\" aria-current=\"page\">\n    <rect x=\"118\" y=\"0\" width=\"120\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"178\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      SpeechSynthesis\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em><code>SpeechSynthesis</code> also inherits properties from its parent interface, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"speechsynthesis.paused\"><a href=\"/en-US/docs/Web/API/SpeechSynthesis/paused\"><code>SpeechSynthesis.paused</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A boolean value that returns <code>true</code> if the <code>SpeechSynthesis</code> object is in a paused state.</p>\n  </dd>\n  <dt id=\"speechsynthesis.pending\"><a href=\"/en-US/docs/Web/API/SpeechSynthesis/pending\"><code>SpeechSynthesis.pending</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A boolean value that returns <code>true</code> if the utterance queue contains as-yet-unspoken utterances.</p>\n  </dd>\n  <dt id=\"speechsynthesis.speaking\"><a href=\"/en-US/docs/Web/API/SpeechSynthesis/speaking\"><code>SpeechSynthesis.speaking</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>A boolean value that returns <code>true</code> if an utterance is currently in the process of being spoken â€” even if <code>SpeechSynthesis</code> is in a paused state.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em><code>SpeechSynthesis</code> also inherits methods from its parent interface, <a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a>.</em></p>\n<dl>\n  <dt id=\"speechsynthesis.cancel\"><a href=\"/en-US/docs/Web/API/SpeechSynthesis/cancel\"><code>SpeechSynthesis.cancel()</code></a></dt>\n  <dd>\n    <p>Removes all utterances from the utterance queue.</p>\n  </dd>\n  <dt id=\"speechsynthesis.getvoices\"><a href=\"/en-US/docs/Web/API/SpeechSynthesis/getVoices\"><code>SpeechSynthesis.getVoices()</code></a></dt>\n  <dd>\n    <p>Returns a list of <a href=\"/en-US/docs/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> objects representing all the available voices on the current device.</p>\n  </dd>\n  <dt id=\"speechsynthesis.pause\"><a href=\"/en-US/docs/Web/API/SpeechSynthesis/pause\"><code>SpeechSynthesis.pause()</code></a></dt>\n  <dd>\n    <p>Puts the <code>SpeechSynthesis</code> object into a paused state.</p>\n  </dd>\n  <dt id=\"speechsynthesis.resume\"><a href=\"/en-US/docs/Web/API/SpeechSynthesis/resume\"><code>SpeechSynthesis.resume()</code></a></dt>\n  <dd>\n    <p>Puts the <code>SpeechSynthesis</code> object into a non-paused state: resumes it if it was already paused.</p>\n  </dd>\n  <dt id=\"speechsynthesis.speak\"><a href=\"/en-US/docs/Web/API/SpeechSynthesis/speak\"><code>SpeechSynthesis.speak()</code></a></dt>\n  <dd>\n    <p>Adds an <a href=\"/en-US/docs/Web/API/SpeechSynthesisUtterance\" title=\"utterance\"><code>utterance</code></a> to the utterance queue; it will be spoken when any other utterances queued before it have been spoken.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"events","title":"Events","isH3":false,"content":"<p>Listen to this event using <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\"><code>addEventListener()</code></a> or by assigning an event listener to the <code>oneventname</code> property of this interface.</p>\n<dl>\n  <dt id=\"voiceschanged\"><a href=\"/en-US/docs/Web/API/SpeechSynthesis/voiceschanged_event\"><code>voiceschanged</code></a></dt>\n  <dd>\n    <p>\n      Fired when the list of <a href=\"/en-US/docs/Web/API/SpeechSynthesisVoice\"><code>SpeechSynthesisVoice</code></a> objects that would be returned by the <a href=\"/en-US/docs/Web/API/SpeechSynthesis/getVoices\"><code>SpeechSynthesis.getVoices()</code></a> method has changed.\n      Also available via the <code>onvoiceschanged</code> property.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>First, a simple example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> utterance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SpeechSynthesisUtterance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspeechSynthesis<span class=\"token punctuation\">.</span><span class=\"token function\">speak</span><span class=\"token punctuation\">(</span>utterance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Now we'll look at a more fully-fledged example. In our <a href=\"https://github.com/mdn/dom-examples/tree/main/web-speech-api/speak-easy-synthesis\" class=\"external\" rel=\" noopener\">Speech synthesizer demo</a>, we first grab a reference to the SpeechSynthesis controller using <code>window.speechSynthesis</code>. After defining some necessary variables, we retrieve a list of the voices available using <a href=\"/en-US/docs/Web/API/SpeechSynthesis/getVoices\"><code>SpeechSynthesis.getVoices()</code></a> and populate a select menu with them so the user can choose what voice they want.</p>\n<p>Inside the <code>inputForm.onsubmit</code> handler, we stop the form submitting with <a href=\"/en-US/docs/Web/API/Event/preventDefault\">preventDefault()</a>, create a new <a href=\"/en-US/docs/Web/API/SpeechSynthesisUtterance\"><code>SpeechSynthesisUtterance</code></a> instance containing the text from the text <a href=\"/en-US/docs/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, set the utterance's voice to the voice selected in the <a href=\"/en-US/docs/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a> element, and start the utterance speaking via the <a href=\"/en-US/docs/Web/API/SpeechSynthesis/speak\"><code>SpeechSynthesis.speak()</code></a> method.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> synth <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>speechSynthesis<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> inputForm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> inputTxt <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> voiceSelect <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'select'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pitch <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#pitch'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pitchValue <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.pitch-value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rate <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#rate'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rateValue <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.rate-value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> voices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">populateVoiceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  voices <span class=\"token operator\">=</span> synth<span class=\"token punctuation\">.</span><span class=\"token function\">getVoices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> voices<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> option <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'option'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    option<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>voices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>voices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lang<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>voices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      option<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> <span class=\"token string\">' â€” DEFAULT'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    option<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-lang'</span><span class=\"token punctuation\">,</span> voices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    option<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-name'</span><span class=\"token punctuation\">,</span> voices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    voiceSelect<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">populateVoiceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>speechSynthesis<span class=\"token punctuation\">.</span>onvoiceschanged <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  speechSynthesis<span class=\"token punctuation\">.</span>onvoiceschanged <span class=\"token operator\">=</span> populateVoiceList<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ninputForm<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsubmit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> utterThis <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SpeechSynthesisUtterance</span><span class=\"token punctuation\">(</span>inputTxt<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> selectedOption <span class=\"token operator\">=</span> voiceSelect<span class=\"token punctuation\">.</span>selectedOptions<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> voices<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>voices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> selectedOption<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      utterThis<span class=\"token punctuation\">.</span>voice <span class=\"token operator\">=</span> voices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  utterThis<span class=\"token punctuation\">.</span>pitch <span class=\"token operator\">=</span> pitch<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  utterThis<span class=\"token punctuation\">.</span>rate <span class=\"token operator\">=</span> rate<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  synth<span class=\"token punctuation\">.</span><span class=\"token function\">speak</span><span class=\"token punctuation\">(</span>utterThis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  inputTxt<span class=\"token punctuation\">.</span><span class=\"token function\">blur</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/speech-api/#tts-section","title":"Web Speech API"}],"query":"api.SpeechSynthesis"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.SpeechSynthesis","dataURL":"/en-US/docs/Web/API/SpeechSynthesis/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Speech_API\">Web Speech API</a></li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Events","id":"events"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The SpeechSynthesis interface of the Web Speech API is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides.","popularity":0.0034,"modified":"2022-09-11T19:35:30.000Z","other_translations":[{"title":"SpeechSynthesis","locale":"ja","native":"æ—¥æœ¬èªž"},{"title":"SpeechSynthesis","locale":"pt-BR","native":"PortuguÃªs (doÂ Brasil)"},{"title":"SpeechSynthesis","locale":"zh-CN","native":"ä¸­æ–‡ (ç®€ä½“)"}],"source":{"folder":"en-us/web/api/speechsynthesis","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/speechsynthesis/index.md","last_commit_url":"https://github.com/mdn/content/commit/7455f0c585ea29fa85ea09e11716b70f76241f5b","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/SpeechSynthesis","title":"SpeechSynthesis"}],"pageTitle":"SpeechSynthesis - Web APIs | MDN","noIndexing":false}}