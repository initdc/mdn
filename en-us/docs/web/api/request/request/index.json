{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Request()","mdn_url":"/en-US/docs/Web/API/Request/Request","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><em><code>Request()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Request/body\"><code>body</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/bodyUsed\"><code>bodyUsed</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/cache\"><code>cache</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/credentials\"><code>credentials</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/destination\"><code>destination</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/headers\"><code>headers</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/integrity\"><code>integrity</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/method\"><code>method</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/mode\"><code>mode</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Request/priority\"><code>priority</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/redirect\"><code>redirect</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/referrer\"><code>referrer</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/referrerPolicy\"><code>referrerPolicy</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/url\"><code>url</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Request/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/blob\"><code>blob()</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/clone\"><code>clone()</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/formData\"><code>formData()</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/json\"><code>json()</code></a></li><li><a href=\"/en-US/docs/Web/API/Request/text\"><code>text()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Fetch API</summary><ol><li><a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a></li><li><a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a></li><li><a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>Request()</code></strong> constructor creates a new\n  <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> object.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new Request(input)\nnew Request(input, options)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"input\"><code>input</code></dt>\n  <dd>\n    <p>Defines the resource that you wish to fetch. This can either be:</p>\n    <ul>\n      <li>\n        A string containing the direct URL of the resource you want to\n        fetch.\n      </li>\n      <li>\n        A <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> object, effectively creating a copy. Note the following\n        behavioral updates to retain security while making the constructor less likely to\n        throw exceptions:\n        <ul>\n          <li>\n            If this object exists on another origin to the constructor call, the\n            <a href=\"/en-US/docs/Web/API/Request/referrer\"><code>Request.referrer</code></a> is stripped out.\n          </li>\n          <li>\n            If this object has a <a href=\"/en-US/docs/Web/API/Request/mode\"><code>Request.mode</code></a> of <code>navigate</code>,\n            the <code>mode</code> value is converted to <code>same-origin</code>.\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </dd>\n  <dt id=\"options\"><code>options</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      An object containing any custom settings that you want to apply to the\n      request. The possible options are:\n    </p>\n    <dl>\n      <dt id=\"method\"><code>method</code></dt>\n      <dd>\n        <p>\n          The request method, e.g., <code>GET</code>,\n          <code>POST</code>. The default is <code>GET</code>.\n        </p>\n      </dd>\n      <dt id=\"headers\"><code>headers</code></dt>\n      <dd>\n        <p>\n          Any headers you want to add to your request, contained\n          within a <a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a> object or an object literal with\n          <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> values.\n        </p>\n      </dd>\n      <dt id=\"body\"><code>body</code></dt>\n      <dd>\n        <p>\n          Any body that you want to add to your request: this can be a\n          <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a>, an <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>, a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\"><code>TypedArray</code></a>, a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a>,\n          a <a href=\"/en-US/docs/Web/API/FormData\"><code>FormData</code></a>, a <a href=\"/en-US/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, a string, or a <a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> object.\n          Note that a request using the <code>GET</code> or <code>HEAD</code> method cannot have a body.\n        </p>\n      </dd>\n      <dt id=\"mode\"><code>mode</code></dt>\n      <dd>\n        <p>\n          The mode you want to use for the request, e.g.,\n          <code>cors</code>, <code>no-cors</code>, <code>same-origin</code>, or\n          <code>navigate</code>. The default is <code>cors</code>.\n        </p>\n      </dd>\n      <dt id=\"credentials\"><code>credentials</code></dt>\n      <dd>\n        <p>\n          The request credentials you want to use for the\n          request: <code>omit</code>, <code>same-origin</code>, or <code>include</code>. The\n          default is <code>same-origin</code>.\n        </p>\n      </dd>\n      <dt id=\"cache\"><code>cache</code></dt>\n      <dd>\n        <p>The <a href=\"/en-US/docs/Web/API/Request/cache\">cache mode</a> you want to use for the request.</p>\n      </dd>\n      <dt id=\"redirect\"><code>redirect</code></dt>\n      <dd>\n        <p>\n          The redirect mode to use: <code>follow</code>,\n          <code>error</code>, or <code>manual</code>. The default is <code>follow</code>.\n        </p>\n      </dd>\n      <dt id=\"referrer\"><code>referrer</code></dt>\n      <dd>\n        <p>\n          A string specifying\n          <code>no-referrer</code>, <code>client</code>, or a URL. The default is\n          <code>about:client</code>.\n        </p>\n      </dd>\n      <dt id=\"referrerpolicy\"><code>referrerPolicy</code></dt>\n      <dd>\n        <p>A string that changes how the referrer header is populated during certain actions (e.g., fetching subresources, prefetching, performing navigations).</p>\n      </dd>\n      <dt id=\"integrity\"><code>integrity</code></dt>\n      <dd>\n        <p>\n          Contains the <a href=\"/en-US/docs/Web/Security/Subresource_Integrity\">subresource integrity</a>\n          value of the request (e.g.,\n          <code>sha256-BpfBw7ivV8q2jLiT13fxDYAe2tJllusRSZ273h2nFSE=</code>).\n        </p>\n      </dd>\n      <dt id=\"keepalive\"><code>keepalive</code></dt>\n      <dd>\n        <p>A boolean that indicates whether to make a persistent connection for multiple requests/responses.</p>\n      </dd>\n      <dt id=\"signal\"><code>signal</code></dt>\n      <dd>\n        <p>An <a href=\"/en-US/docs/Web/API/AbortSignal\">AbortSignal</a> object which can be used to communicate with/abort a request.</p>\n      </dd>\n    </dl>\n    <p>If you construct a new <code>Request</code> from an existing <code>Request</code>, any options you set in an <em>options</em> argument for the new request replace any corresponding options set in the original <code>Request</code>. For example:</p>\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> oldRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'https://github.com/mdn/content/issues/12959'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'From'</span><span class=\"token operator\">:</span> <span class=\"token string\">'webmaster@example.org'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\noldRequest<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"webmaster@example.org\"</span>\n<span class=\"token keyword\">const</span> newRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span>\n  oldRequest<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'From'</span><span class=\"token operator\">:</span> <span class=\"token string\">'developer@example.org'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnewRequest<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'From'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"developer@example.org\"</span>\n</code></pre></div>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"errors","title":"Errors","isH3":false,"content":"<table class=\"no-markdown\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Type</th>\n      <th scope=\"col\">Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>TypeError</code></td>\n      <td>\n        Since <a href=\"/en-US/docs/Mozilla/Firefox/Releases/43\">Firefox 43</a>,\n        <code>Request()</code> will throw a TypeError if the URL has\n        credentials, such as http://user:password@example.com.\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In our <a href=\"https://github.com/mdn/dom-examples/tree/main/fetch/fetch-request\" class=\"external\" rel=\" noopener\">Fetch Request example</a> (see <a href=\"https://mdn.github.io/dom-examples/fetch/fetch-request/\" class=\"external\" rel=\" noopener\">Fetch Request live</a>) we\n  create a new <code>Request</code> object using the constructor, then fetch it using a\n  <a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a> call. Since we are fetching an image, we run\n  <a href=\"/en-US/docs/Web/API/Response/blob\"><code>Response.blob</code></a> on the response to give it the proper MIME type so it will be\n  handled properly, then create an Object URL of it and display it in an\n  <a href=\"/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> objectURL <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> objectURL<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  In our <a href=\"https://github.com/mdn/dom-examples/tree/main/fetch/fetch-with-init-then-request\" class=\"external\" rel=\" noopener\">Fetch Request with init example</a> (see <a href=\"https://mdn.github.io/dom-examples/fetch/fetch-with-init-then-request/\" class=\"external\" rel=\" noopener\">Fetch Request init live</a>) we do the same thing except that we pass in an <em>options</em> object when we\n  invoke <code>fetch()</code>:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myHeaders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyHeaders<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> myHeaders<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">,</span> myOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  Note that you could also pass <code>myOptions</code> into the <code>fetch</code> call to get\n  the same effect, e.g.:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">,</span> myOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>You can also use an object literal as <code>headers</code> in <code>myOptions</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">,</span> myOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  You may also pass a <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> object to the <code>Request()</code>\n  constructor to create a copy of the Request (This is similar to calling the\n  <a href=\"/en-US/docs/Web/API/Request/clone\" title=\"clone()\"><code>clone()</code></a> method.)\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> copy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This last usage is probably only useful in <a href=\"/en-US/docs/Web/API/Service_Worker_API\">ServiceWorkers</a>.</p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#ref-for-dom-request①","title":"Fetch Standard"}],"query":"api.Request.Request"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Request.Request","dataURL":"/en-US/docs/Web/API/Request/Request/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\">ServiceWorker API</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Errors","id":"errors"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Request() constructor creates a new\n  Request object.","popularity":0.0034,"modified":"2022-09-13T06:09:49.000Z","other_translations":[{"title":"Request()","locale":"fr","native":"Français"},{"title":"Request()","locale":"ja","native":"日本語"},{"title":"Request()","locale":"ko","native":"한국어"},{"title":"Request()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Request()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/request/request","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/request/request/index.md","last_commit_url":"https://github.com/mdn/content/commit/2b8f5d9a29f00aea5d2edfa78d1fb90c51752858","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Request","title":"Request"},{"uri":"/en-US/docs/Web/API/Request/Request","title":"Request()"}],"pageTitle":"Request() - Web APIs | MDN","noIndexing":false}}