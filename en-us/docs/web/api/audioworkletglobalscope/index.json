{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"AudioWorkletGlobalScope","mdn_url":"/en-US/docs/Web/API/AudioWorkletGlobalScope","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\"><code>AudioWorkletGlobalScope</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope/registerProcessor\"><code>registerProcessor()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>WorkletGlobalScope</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Web Audio API</summary><ol><li><a href=\"/en-US/docs/Web/API/AnalyserNode\"><code>AnalyserNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBuffer\"><code>AudioBuffer</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioBufferSourceNode\"><code>AudioBufferSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioDestinationNode\"><code>AudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioListener\"><code>AudioListener</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioNode\"><code>AudioNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioParam\"><code>AudioParam</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioProcessingEvent\"><code>AudioProcessingEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioScheduledSourceNode\"><code>AudioScheduledSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a></li><li><a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/BiquadFilterNode\"><code>BiquadFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelMergerNode\"><code>ChannelMergerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ChannelSplitterNode\"><code>ChannelSplitterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConstantSourceNode\"><code>ConstantSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/ConvolverNode\"><code>ConvolverNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DelayNode\"><code>DelayNode</code></a></li><li><a href=\"/en-US/docs/Web/API/DynamicsCompressorNode\"><code>DynamicsCompressorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/GainNode\"><code>GainNode</code></a></li><li><a href=\"/en-US/docs/Web/API/IIRFilterNode\"><code>IIRFilterNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaElementAudioSourceNode\"><code>MediaElementAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioDestinationNode\"><code>MediaStreamAudioDestinationNode</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamAudioSourceNode\"><code>MediaStreamAudioSourceNode</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioCompletionEvent\"><code>OfflineAudioCompletionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/OfflineAudioContext\"><code>OfflineAudioContext</code></a></li><li><a href=\"/en-US/docs/Web/API/OscillatorNode\"><code>OscillatorNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PannerNode\"><code>PannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/PeriodicWave\"><code>PeriodicWave</code></a></li><li><a href=\"/en-US/docs/Web/API/StereoPannerNode\"><code>StereoPannerNode</code></a></li><li><a href=\"/en-US/docs/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>AudioWorkletGlobalScope</code></strong> interface of the <a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a> represents a global execution context for user-supplied code, which defines custom <a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a>-derived classes.</p>\n<p>Each <a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a> has a single <a href=\"/en-US/docs/Web/API/AudioWorklet\"><code>AudioWorklet</code></a> available under the <a href=\"/en-US/docs/Web/API/BaseAudioContext/audioWorklet\" title=\"audioWorklet\"><code>audioWorklet</code></a> property, which runs its code in a single <code>AudioWorkletGlobalScope</code>.</p>\n<p>As the global execution context is shared across the current <code>BaseAudioContext</code>, it's possible to define any other variables and perform any actions allowed in worklets â€” apart from defining <code>AudioWorkletProcessor</code>-derived classes.</p><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/WorkletGlobalScope\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">\n    <rect x=\"0\" y=\"0\" width=\"144\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"72\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      WorkletGlobalScope\n    </text>\n  </a>\n  <line x1=\"144\" y1=\"14\" x2=\"174\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"144,14 154,9 154,19 144,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope\" aria-current=\"page\">\n    <rect x=\"174\" y=\"0\" width=\"184\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"266\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      AudioWorkletGlobalScope\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"currentframe\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>currentFrame</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns an integer that represents the ever-increasing current sample-frame of the audio block being processed. It is incremented by 128 (the size of a render quantum) after the processing of each audio block.</p>\n  </dd>\n  <dt id=\"currenttime\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>currentTime</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a double that represents the ever-increasing context time of the audio block being processed. It is equal to the <a href=\"/en-US/docs/Web/API/BaseAudioContext/currentTime\" title=\"currentTime\"><code>currentTime</code></a> property of the <a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a> the worklet belongs to.</p>\n  </dd>\n  <dt id=\"samplerate\"><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>sampleRate</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a float that represents the sample rate of the associated <a href=\"/en-US/docs/Web/API/BaseAudioContext\"><code>BaseAudioContext</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"registerprocessor\"><a href=\"/en-US/docs/Web/API/AudioWorkletGlobalScope/registerProcessor\" title=\"registerProcessor()\"><code>registerProcessor()</code></a></dt>\n  <dd>\n    <p>Registers a class derived from the <a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a> interface. The class can then be used by creating an <a href=\"/en-US/docs/Web/API/AudioWorkletNode\"><code>AudioWorkletNode</code></a>, providing its registered name.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In this example we output all global properties into the console in the constructor of a custom <a href=\"/en-US/docs/Web/API/AudioWorkletProcessor\"><code>AudioWorkletProcessor</code></a>.</p>\n<p>First we need to define the processor, and register it. Note that this should be done in a separate file.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// test-processor.js</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestProcessor</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AudioWorkletProcessor</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// current sample-frame and time at the moment of instantiation</span>\n    <span class=\"token comment\">// to see values change, you can put these two lines in process method</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>currentFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>currentTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// the process method is required - output silence,</span>\n  <span class=\"token comment\">// which the outputs are already filled with</span>\n  <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">inputs<span class=\"token punctuation\">,</span> outputs<span class=\"token punctuation\">,</span> parameters</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// the sample rate is not going to change ever,</span>\n<span class=\"token comment\">// because it's a read-only property of a BaseAudioContext</span>\n<span class=\"token comment\">// and is set only during its instantiation</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sampleRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// you can declare any variables and use them in your processors</span>\n<span class=\"token comment\">// for example it may be an ArrayBuffer with a wavetable</span>\n<span class=\"token keyword\">const</span> usefulVariable <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>usefulVariable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">registerProcessor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test-processor\"</span><span class=\"token punctuation\">,</span> TestProcessor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Next, in our main scripts file we'll load the processor, create an instance of <code>AudioWorkletNode</code> â€” passing the name of the processor to it â€” and connect the node to an audio graph. We should see the output of <code>console.log</code> calls in the console:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> audioContext <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> audioContext<span class=\"token punctuation\">.</span>audioWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test-processor.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> testNode <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AudioWorkletNode</span><span class=\"token punctuation\">(</span>audioContext<span class=\"token punctuation\">,</span> <span class=\"token string\">\"test-processor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntestNode<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>audioContext<span class=\"token punctuation\">.</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope","title":"Web Audio API"}],"query":"api.AudioWorkletGlobalScope"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.AudioWorkletGlobalScope","dataURL":"/en-US/docs/Web/API/AudioWorkletGlobalScope/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API\">Web Audio API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API\">Using the Web Audio API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/Web_Audio_API/Using_AudioWorklet\">Using AudioWorklet</a></li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The AudioWorkletGlobalScope interface of the Web Audio API represents a global execution context for user-supplied code, which defines custom AudioWorkletProcessor-derived classes.","popularity":0.0003,"modified":"2022-09-22T21:37:38.000Z","other_translations":[{"title":"AudioWorkletGlobalScope","locale":"ko","native":"í•œêµ­ì–´"}],"source":{"folder":"en-us/web/api/audioworkletglobalscope","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/audioworkletglobalscope/index.md","last_commit_url":"https://github.com/mdn/content/commit/3a8ddeac2f0957b775b1c6c237f565b266c274c0","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/AudioWorkletGlobalScope","title":"AudioWorkletGlobalScope"}],"pageTitle":"AudioWorkletGlobalScope - Web APIs | MDN","noIndexing":false}}