{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Event.composed","mdn_url":"/en-US/docs/Web/API/Event/composed","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/Event/Event\"><code>Event()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Event/bubbles\"><code>bubbles</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/cancelable\"><code>cancelable</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Event/cancelBubble\"><code>cancelBubble</code></a></li><li><em><code>composed</code></em></li><li><a href=\"/en-US/docs/Web/API/Event/currentTarget\"><code>currentTarget</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/defaultPrevented\"><code>defaultPrevented</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/eventPhase\"><code>eventPhase</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Event/explicitOriginalTarget\"><code>explicitOriginalTarget</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/isTrusted\"><code>isTrusted</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Event/originalTarget\"><code>originalTarget</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Event/returnValue\"><code>returnValue</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Event/srcElement\"><code>srcElement</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/target\"><code>target</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/timeStamp\"><code>timeStamp</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/type\"><code>type</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Event/composedPath\"><code>composedPath()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Event/initEvent\"><code>initEvent()</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/preventDefault\"><code>preventDefault()</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/stopImmediatePropagation\"><code>stopImmediatePropagation()</code></a></li><li><a href=\"/en-US/docs/Web/API/Event/stopPropagation\"><code>stopPropagation()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The read-only <strong><code>composed</code></strong> property of the\n  <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a> interface returns a boolean value which indicates whether\n  or not the event will propagate across the shadow DOM boundary into the standard DOM.\n</p>\n<p>\n  All UA-dispatched UI events are composed (click/touch/mouseover/copy/paste, etc.). Most\n  other types of events are not composed, and so will return <code>false</code>. For\n  example, this includes synthetic events that are created without their\n  <code>composed</code> option set to <code>true</code>.\n</p>\n<p>\n  Propagation only occurs if the <a href=\"/en-US/docs/Web/API/Event/bubbles\" title=\"bubbles\"><code>bubbles</code></a> property is also\n  <code>true</code>. However, capturing only composed events are also handled at host as\n  if they were in <code>AT_TARGET</code> phase. You can determine the path the event will\n  follow through the shadow root to the DOM root by calling\n  <a href=\"/en-US/docs/Web/API/Event/composedPath\" title=\"composedPath()\"><code>composedPath()</code></a>.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>\n  A boolean value which is <code>true</code> if the event will cross from the\n  shadow DOM into the standard DOM after reaching the shadow root. (That is, the first\n  node in the shadow DOM in which the event began to propagate.)\n</p>\n<p>\n  If this value is <code>false</code>, the shadow root will be the last node to be\n  offered the event.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In this <a href=\"https://mdn.github.io/web-components-examples/composed-composed-path/\" class=\"external\" rel=\" noopener\">example</a>, we define two trivial custom elements, <code>&lt;open-shadow&gt;</code> and <code>&lt;closed-shadow&gt;</code>,\n  both of which take the contents of their text attribute and insert them into the element's\n  shadow DOM as the text content of a <code>&lt;p&gt;</code> element. The only difference\n  between the two is that their shadow roots are attached with their modes set to\n  <code>open</code> and <code>closed</code> respectively.\n</p>\n<p>The two definitions look like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>customElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open-shadow'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> HTMLElement <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> pElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      pElem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> shadowRoot <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      shadowRoot<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>pElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'closed-shadow'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> HTMLElement <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> pElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      pElem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> shadowRoot <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'closed'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      shadowRoot<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>pElem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>We then insert one of each element into our page:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>open-shadow</span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>I have an open shadow root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>open-shadow</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>closed-shadow</span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>I have a closed shadow root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>closed-shadow</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>Then include a click event listener on the <code>&lt;html&gt;</code> element:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>composed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">composedPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  When you click on the <code>&lt;open-shadow&gt;</code> element and then the\n  <code>&lt;closed-shadow&gt;</code> element, you'll notice two things.\n</p>\n<ol>\n  <li>\n    The <code>composed</code> property returns <code>true</code> because the\n    <code>click</code> event is always able to propagate across shadow boundaries.\n  </li>\n  <li>\n    A difference in the value of <code>composedPath</code> for the two\n    elements.\n  </li>\n</ol>\n<p>The <code>&lt;open-shadow&gt;</code> element's composed path is this:</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">Array [ p, ShadowRoot, open-shadow, body, html, HTMLDocument https://mdn.github.io/web-components-examples/composed-composed-path/, Window ]\n</pre></div>\n<p>Whereas the <code>&lt;closed-shadow&gt;</code> element's composed path is a follows:</p>\n<div class=\"code-example\"><pre class=\"brush: plain notranslate\">Array [ closed-shadow, body, html, HTMLDocument https://mdn.github.io/web-components-examples/composed-composed-path/, Window ]\n</pre></div>\n<p>\n  In the second case, the event listeners only propagate as far as the\n  <code>&lt;closed-shadow&gt;</code> element itself, but not to the nodes inside the\n  shadow boundary.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#ref-for-dom-event-composed①","title":"DOM Standard"}],"query":"api.Event.composed"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Event.composed","dataURL":"/en-US/docs/Web/API/Event/composed/bcd.json"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The read-only composed property of the\n  Event interface returns a boolean value which indicates whether\n  or not the event will propagate across the shadow DOM boundary into the standard DOM.","popularity":0.001,"modified":"2022-09-11T06:43:56.000Z","other_translations":[{"title":"Event.composed","locale":"ja","native":"日本語"},{"title":"Event.composed","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/event/composed","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/event/composed/index.md","last_commit_url":"https://github.com/mdn/content/commit/ff3545b816d9a945d3793ecc330a3b6cbdc59c1c","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Event","title":"Event"},{"uri":"/en-US/docs/Web/API/Event/composed","title":"Event.composed"}],"pageTitle":"Event.composed - Web APIs | MDN","noIndexing":false}}