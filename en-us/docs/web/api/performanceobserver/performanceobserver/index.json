{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PerformanceObserver()","mdn_url":"/en-US/docs/Web/API/PerformanceObserver/PerformanceObserver","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Performance_Timeline\">Performance Timeline</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><em><code>PerformanceObserver()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceObserver/supportedEntryTypes\"><code>supportedEntryTypes</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceObserver/disconnect\"><code>disconnect()</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserver/observe\"><code>observe()</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserver/takeRecords\"><code>takeRecords()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Performance Timeline API</summary><ol><li><a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/performance_property\"><code>performance_property</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>PerformanceObserver()</code></strong> constructor creates a new\n  <a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> object with the given observer <code>callback</code>.\n  The observer callback is invoked when <a href=\"/en-US/docs/Web/API/PerformanceEntry\" title=\"performance entry\n  events\">performance entry\n  events</a> are recorded for the\n  <a href=\"/en-US/docs/Web/API/PerformanceEntry/entryType\" title=\"entry types\">entry types</a> that have been\n  registered, via the <a href=\"/en-US/docs/Web/API/PerformanceObserver/observe\" title=\"observe()\"><code>observe()</code></a> method.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">new PerformanceObserver(callback)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"callback\"><code>callback</code></dt>\n  <dd>\n    <p>\n      A <code>PerformanceObserverCallback</code> callback that will be invoked when\n      <em>observed</em> performance events are recorded. When the callback is invoked, its\n      first parameter is a <a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\" title=\"list of performance\n    observer entries\">list of performance\n    observer entries</a> and the second parameter is the\n      <a href=\"/en-US/docs/Web/API/PerformanceObserver\" title=\"observer\"><code>observer</code></a> object.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A new <a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a> object which will call the specified\n  <code>callback</code> when observed performance events occur.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> obj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Process \"mark\" and \"frame\" events</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"frame\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">perfObserver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Process the \"measure\" event</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> observer2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span>perfObserver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver2<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"measure\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/performance-timeline/#dom-performanceobserver-constructor","title":"Performance Timeline"}],"query":"api.PerformanceObserver.PerformanceObserver"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PerformanceObserver.PerformanceObserver","dataURL":"/en-US/docs/Web/API/PerformanceObserver/PerformanceObserver/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The PerformanceObserver() constructor creates a new\n  PerformanceObserver object with the given observer callback.\n  The observer callback is invoked when performance entry\n  events are recorded for the\n  entry types that have been\n  registered, via the observe() method.","popularity":0.0003,"modified":"2022-09-13T06:09:49.000Z","other_translations":[{"title":"PerformanceObserver()","locale":"fr","native":"Français"},{"title":"PerformanceObserver()","locale":"ja","native":"日本語"},{"title":"PerformanceObserver()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/performanceobserver/performanceobserver","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/performanceobserver/performanceobserver/index.md","last_commit_url":"https://github.com/mdn/content/commit/2b8f5d9a29f00aea5d2edfa78d1fb90c51752858","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PerformanceObserver","title":"PerformanceObserver"},{"uri":"/en-US/docs/Web/API/PerformanceObserver/PerformanceObserver","title":"PerformanceObserver()"}],"pageTitle":"PerformanceObserver() - Web APIs | MDN","noIndexing":false}}