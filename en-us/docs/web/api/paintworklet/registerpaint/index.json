{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PaintWorkletGlobalScope.registerPaint()","mdn_url":"/en-US/docs/Web/API/PaintWorklet/registerPaint","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CSS_Painting_API\">CSS Painting API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/PaintWorklet\"><code>PaintWorklet</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/PaintWorklet/devicePixelRatio\"><code>devicePixelRatio</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><em><code>registerPaint()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for CSS Painting API</summary><ol><li><a href=\"/en-US/docs/Web/API/CSS/paintWorklet\"><code>CSS.paintWorklet</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PaintRenderingContext2D</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PaintSize</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PaintWorkletGlobalScope</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The\n  <strong><code>PaintWorkletGlobalScope.registerPaint()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/PaintWorklet\"><code>PaintWorklet</code></a> interface registers a class programmatically generate an\n  image where a CSS property expects a file.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">registerPaint(name, classRef)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"name\"><code>name</code></dt>\n  <dd>\n    <p>The name of the worklet class to register.</p>\n  </dd>\n  <dt id=\"classref\"><code>classRef</code></dt>\n  <dd>\n    <p>A reference to the class that implements the worklet.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":false,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a></dt>\n  <dd>\n    <p>Thrown when one of the arguments is invalid or missing.</p>\n  </dd>\n  <dt id=\"invalidmodificationerror\"><code>InvalidModificationError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown when the a worklet already exists with the specified name.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  The following shows registering an example worklet module. This should be in a separate\n  js file. Note that <code>registerPaint()</code> is called without a reference to\n  <code>PaintWorkletGlobalScope</code>. The file itself is loaded\n  through <code>CSS.paintWorklet.addModule()</code> (documented here on the parent class\n  of PaintWorklet, at <a href=\"/en-US/docs/Web/API/Worklet/addModule\"><code>Worklet.addModule()</code></a>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">/* checkboardWorklet.js */</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CheckerboardPainter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx<span class=\"token punctuation\">,</span> geom<span class=\"token punctuation\">,</span> properties</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Use `ctx` as if it was a normal canvas</span>\n    <span class=\"token keyword\">const</span> colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>geom<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>geom<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> colors<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> colors<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> size<span class=\"token punctuation\">,</span> y <span class=\"token operator\">*</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Register our class under a specific name</span>\n<span class=\"token function\">registerPaint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'checkerboard'</span><span class=\"token punctuation\">,</span> CheckerboardPainter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  The first step in using a paintworklet is defining the paint worklet using the\n  <code>registerPaint()</code> function, as done above. To use it, you register it with\n  the <code>CSS.paintWorklet.addModule()</code> method:\n</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token constant\">CSS</span><span class=\"token punctuation\">.</span>paintWorklet<span class=\"token punctuation\">.</span><span class=\"token function\">addModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"checkboardWorklet.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>\n  You can then use the <code><a href=\"/en-US/docs/Web/CSS/image/paint\"><code>paint()</code></a></code> CSS function in your\n  CSS anywhere an <code><a href=\"/en-US/docs/Web/CSS/image\"><code>&lt;image&gt;</code></a></code> value is valid.\n</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token selector\">li</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>checkerboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://drafts.css-houdini.org/css-paint-api/#dom-paintworkletglobalscope-registerpaint","title":"CSS Painting API Level 1"}],"query":"api.PaintWorkletGlobalScope.registerPaint"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PaintWorkletGlobalScope.registerPaint","dataURL":"/en-US/docs/Web/API/PaintWorklet/registerPaint/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/CSS_Painting_API\">CSS Painting API</a></li>\n  <li><a href=\"/en-US/docs/Web/Guide/Houdini\">Houdini APIs</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Return value","id":"return_value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The\n  PaintWorkletGlobalScope.registerPaint() method of the\n  PaintWorklet interface registers a class programmatically generate an\n  image where a CSS property expects a file.","popularity":0.0002,"modified":"2022-09-14T12:12:03.000Z","source":{"folder":"en-us/web/api/paintworklet/registerpaint","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/paintworklet/registerpaint/index.md","last_commit_url":"https://github.com/mdn/content/commit/84fc68f1674c9b2d1708fb38dc2824e228f9bb3f","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PaintWorklet","title":"PaintWorklet"},{"uri":"/en-US/docs/Web/API/PaintWorklet/registerPaint","title":"PaintWorkletGlobalScope.registerPaint()"}],"pageTitle":"PaintWorkletGlobalScope.registerPaint() - Web APIs | MDN","noIndexing":false}}