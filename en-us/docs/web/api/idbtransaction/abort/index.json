{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"IDBTransaction.abort()","mdn_url":"/en-US/docs/Web/API/IDBTransaction/abort","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBTransaction/db\"><code>db</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/durability\"><code>durability</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/error\"><code>error</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/mode\"><code>mode</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/ObjectStoreNames\"><code>objectStoreNames</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><em><code>abort()</code></em></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/commit\"><code>commit()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/objectStore\"><code>objectStore()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBTransaction/abort_event\"><code>abort</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/complete_event\"><code>complete</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction/error_event\"><code>error</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for IndexedDB</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>abort()</code></strong> method of the <a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a>\n  interface rolls back all the changes to objects in the database associated with this\n  transaction.\n</p>\n<p>\n  All pending <a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> objects created during this transaction have\n  their <a href=\"/en-US/docs/Web/API/IDBRequest/error\"><code>IDBRequest.error</code></a> attribute set to an <code>AbortError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a>.\n</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">abort()\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None (<a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>).</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the transaction has already been committed or aborted.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In the following code snippet, we open a read/write transaction on our database and add\n  some data to an object store. Note also the functions attached to transaction event\n  handlers to report on the outcome of the transaction opening in the event of success or\n  failure. At the end, we abort any activity done under the current transaction using\n  <code>abort()</code>. For a full working example, see our <a href=\"https://github.com/mdn/dom-examples/tree/main/to-do-notifications\" class=\"external\" rel=\" noopener\">To-do Notifications</a> app (<a href=\"https://mdn.github.io/dom-examples/to-do-notifications/\" class=\"external\" rel=\" noopener\">View example live</a>).\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> note <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'notifications'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// an instance of a db object for us to store the IDB data in</span>\n<span class=\"token keyword\">let</span> db<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Let us open our database</span>\n<span class=\"token keyword\">const</span> DBOpenRequest <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nDBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Database initialized.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// store the result of opening the database in the db variable. This is used a lot below</span>\n  db <span class=\"token operator\">=</span> DBOpenRequest<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Run the addData() function to add the data to the database</span>\n  <span class=\"token function\">addData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create a new object ready for being inserted into the IDB</span>\n  <span class=\"token keyword\">const</span> newItem <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">taskTitle</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Walk dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">hours</span><span class=\"token operator\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">minutes</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">day</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">month</span><span class=\"token operator\">:</span> <span class=\"token string\">\"December\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">year</span><span class=\"token operator\">:</span> <span class=\"token number\">2013</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">notified</span><span class=\"token operator\">:</span> <span class=\"token string\">\"no\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// open a read/write db transaction, ready for adding the data</span>\n  <span class=\"token keyword\">const</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// report on the success of opening the transaction</span>\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncomplete</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction completed: database modification finished.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction not opened due to error. Duplicate items not allowed.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// create an object store on the transaction</span>\n  <span class=\"token keyword\">const</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// add our newItem object to the object store</span>\n  <span class=\"token keyword\">const</span> objectStoreRequest <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newItem<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  objectStoreRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// report the success of the request (this does not mean the item</span>\n    <span class=\"token comment\">// has been stored successfully in the DB - for that you need transaction.onsuccess)</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Request successful.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// Abort the transaction we just did</span>\n transaction<span class=\"token punctuation\">.</span><span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/IndexedDB/#ref-for-dom-idbtransaction-abort②","title":"Indexed Database API 3.0"}],"query":"api.IDBTransaction.abort"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IDBTransaction.abort","dataURL":"/en-US/docs/Web/API/IDBTransaction/abort/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Using IndexedDB</a></li>\n  <li>Starting transactions: <a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li>\n  <li>Using transactions: <a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li>\n  <li>Setting a range of keys: <a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li>\n  <li>Retrieving and making changes to your data: <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li>\n  <li>Using cursors: <a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li>\n  <li>Reference example: <a href=\"https://github.com/mdn/dom-examples/tree/main/to-do-notifications\" class=\"external\" rel=\" noopener\">To-do Notifications</a> (<a href=\"https://mdn.github.io/dom-examples/to-do-notifications/\" class=\"external\" rel=\" noopener\">View the example live</a>).</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The abort() method of the IDBTransaction\n  interface rolls back all the changes to objects in the database associated with this\n  transaction.","popularity":0,"modified":"2022-09-30T09:50:26.000Z","other_translations":[{"title":"IDBTransaction.abort()","locale":"fr","native":"Français"}],"source":{"folder":"en-us/web/api/idbtransaction/abort","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/idbtransaction/abort/index.md","last_commit_url":"https://github.com/mdn/content/commit/d42b609444efb915ab46117f59985d67dda21eb6","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/IDBTransaction","title":"IDBTransaction"},{"uri":"/en-US/docs/Web/API/IDBTransaction/abort","title":"IDBTransaction.abort()"}],"pageTitle":"IDBTransaction.abort() - Web APIs | MDN","noIndexing":false}}