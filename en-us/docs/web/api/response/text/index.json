{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Response.text()","mdn_url":"/en-US/docs/Web/API/Response/text","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/Response/Response\"><code>Response()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Response/body\"><code>body</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/bodyUsed\"><code>bodyUsed</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/headers\"><code>headers</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/ok\"><code>ok</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/redirected\"><code>redirected</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/status\"><code>status</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/statusText\"><code>statusText</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/type\"><code>type</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/url\"><code>url</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Response/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/blob\"><code>blob()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/clone\"><code>clone()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/error\"><code>error()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/formData\"><code>formData()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/json\"><code>json()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/redirect\"><code>redirect()</code></a></li><li><em><code>text()</code></em></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>text()</code></strong> method of the <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> interface takes a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> stream and reads it to completion.\n  It returns a promise that resolves with a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>.\n  The response is <em>always</em> decoded using UTF-8.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">text()\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A Promise that resolves with a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In our <a href=\"https://github.com/mdn/dom-examples/tree/main/fetch/fetch-text\" class=\"external\" rel=\" noopener\">fetch text example</a> (run <a href=\"https://mdn.github.io/dom-examples/fetch/fetch-text/\" class=\"external\" rel=\" noopener\">fetch text live</a>), we have an <a href=\"/en-US/docs/Web/HTML/Element/article\"><code>&lt;article&gt;</code></a> element and three links (stored in the <code>myLinks</code> array.)\n  First, we loop through all of these and give each one an <code>onclick</code> event handler so that the <code>getData()</code> function is run — with the link's <code>data-page</code> identifier passed to it as an argument — when one of the links is clicked.\n</p>\n<p>\n  When <code>getData()</code> is run, we create a new request using the <a href=\"/en-US/docs/Web/API/Request/Request\" title=\"Request()\"><code>Request()</code></a> constructor, then use it to fetch a specific <code>.txt</code> file.\n  When the fetch is successful, we read a string out of the response using <code>text()</code>, then set the <a href=\"/en-US/docs/Web/API/Element/innerHTML\" title=\"innerHTML\"><code>innerHTML</code></a> of the <a href=\"/en-US/docs/Web/HTML/Element/article\"><code>&lt;article&gt;</code></a> element equal to the text object.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myArticle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'article'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> myLinks <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> link <span class=\"token keyword\">of</span> myLinks<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  link<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> linkData <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-page'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span>linkData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pageId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>pageId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pageId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.txt</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      myArticle<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#ref-for-dom-body-text①","title":"Fetch Standard"}],"query":"api.Response.text"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Response.text","dataURL":"/en-US/docs/Web/API/Response/text/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\">ServiceWorker API</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The text() method of the Response interface takes a Response stream and reads it to completion.\n  It returns a promise that resolves with a String.\n  The response is always decoded using UTF-8.","popularity":0.0065,"modified":"2022-09-13T06:27:50.000Z","other_translations":[{"title":"Response.text()","locale":"ja","native":"日本語"},{"title":"Response.text()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/response/text","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/response/text/index.md","last_commit_url":"https://github.com/mdn/content/commit/16e398809d62247dbadc89ff4024a0ffa4781f0e","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Response","title":"Response"},{"uri":"/en-US/docs/Web/API/Response/text","title":"Response.text()"}],"pageTitle":"Response.text() - Web APIs | MDN","noIndexing":false}}