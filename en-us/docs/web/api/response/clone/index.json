{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Response.clone()","mdn_url":"/en-US/docs/Web/API/Response/clone","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/Response/Response\"><code>Response()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/Response/body\"><code>body</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/bodyUsed\"><code>bodyUsed</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/headers\"><code>headers</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/ok\"><code>ok</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/redirected\"><code>redirected</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/status\"><code>status</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/statusText\"><code>statusText</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/type\"><code>type</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/url\"><code>url</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/Response/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/blob\"><code>blob()</code></a></li><li><em><code>clone()</code></em></li><li><a href=\"/en-US/docs/Web/API/Response/error\"><code>error()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/formData\"><code>formData()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/json\"><code>json()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/redirect\"><code>redirect()</code></a></li><li><a href=\"/en-US/docs/Web/API/Response/text\"><code>text()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>clone()</code></strong> method of the <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> interface creates a clone of a response object, identical in every way, but stored in a different variable.</p>\n<p>\n  Like the underlying <a href=\"/en-US/docs/Web/API/ReadableStream/tee\"><code>ReadableStream.tee</code></a> api,\n  the <a href=\"/en-US/docs/Web/API/Response/body\" title=\"body\"><code>body</code></a> of a cloned <code>Response</code>\n  will signal backpressure at the rate of the <em>faster</em> consumer of the two bodies,\n  and unread data is enqueued internally on the slower consumed <code>body</code>\n  without any limit or backpressure.\n  Backpressure refers to the mechanism by which the streaming consumer of data\n  (in this case, the code that reads the body)\n  slows down the producer of data (such as the TCP server)\n  so as not to load large amounts of data in memory\n  that is waiting to be used by the application.\n  If only one cloned branch is consumed, then the entire body will be buffered in memory.\n  Therefore, <code>clone()</code> is one way to read a response twice in sequence,\n  but you should not use it to read very large bodies\n  in parallel at different speeds.\n</p>\n<p>\n  <code>clone()</code> throws a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> if the response body has already been used.\n  In fact, the main reason <code>clone()</code> exists is to allow multiple uses of body objects (when they are one-use only.)\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">clone()\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> object.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In our <a href=\"https://github.com/mdn/dom-examples/blob/main/fetch/fetch-response-clone/index.html\" class=\"external\" rel=\" noopener\">Fetch Response clone example</a> (see <a href=\"https://mdn.github.io/dom-examples/fetch/fetch-response-clone/\" class=\"external\" rel=\" noopener\">Fetch Response clone live</a>) we create a new <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> object using the <a href=\"/en-US/docs/Web/API/Request/Request\" title=\"Request()\"><code>Request()</code></a> constructor, passing it a JPG path.\n  We then fetch this request using <a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a>.\n  When the fetch resolves successfully, we clone it, extract a blob from both responses using two <a href=\"/en-US/docs/Web/API/Response/blob\"><code>Response.blob</code></a> calls, create object URLs out of the blobs using\n  <a href=\"/en-US/docs/Web/API/URL/createObjectURL\"><code>URL.createObjectURL</code></a>, and display them in two separate <a href=\"/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> elements.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> image1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.img1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> image2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.img2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> response2 <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  response<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">myBlob</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> objectURL <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>myBlob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    image1<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> objectURL<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  response2<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">myBlob</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> objectURL <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>myBlob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    image2<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> objectURL<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#ref-for-dom-response-cloneâ‘ ","title":"Fetch Standard"}],"query":"api.Response.clone"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Response.clone","dataURL":"/en-US/docs/Web/API/Response/clone/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\">ServiceWorker API</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The clone() method of the Response interface creates a clone of a response object, identical in every way, but stored in a different variable.","popularity":0.001,"modified":"2022-09-13T06:27:50.000Z","other_translations":[{"title":"Response.clone()","locale":"zh-CN","native":"ä¸­æ–‡ (ç®€ä½“)"}],"source":{"folder":"en-us/web/api/response/clone","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/response/clone/index.md","last_commit_url":"https://github.com/mdn/content/commit/16e398809d62247dbadc89ff4024a0ffa4781f0e","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Response","title":"Response"},{"uri":"/en-US/docs/Web/API/Response/clone","title":"Response.clone()"}],"pageTitle":"Response.clone() - Web APIs | MDN","noIndexing":false}}