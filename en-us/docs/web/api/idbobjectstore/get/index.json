{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"IDBObjectStore.get()","mdn_url":"/en-US/docs/Web/API/IDBObjectStore/get","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/autoIncrement\"><code>autoIncrement</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/indexNames\"><code>indexNames</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/keyPath\"><code>keyPath</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/name\"><code>name</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/transaction\"><code>transaction</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/add\"><code>add()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/clear\"><code>clear()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/count\"><code>count()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/createIndex\"><code>createIndex()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/delete\"><code>delete()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/deleteIndex\"><code>deleteIndex()</code></a></li><li><em><code>get()</code></em></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/getAll\"><code>getAll()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/getAllKeys\"><code>getAllKeys()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/getKey\"><code>getKey()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/index\"><code>index()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/openCursor\"><code>openCursor()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/openKeyCursor\"><code>openKeyCursor()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/put\"><code>put()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for IndexedDB</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>get()</code></strong> method of the <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n  interface returns an <a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and, in a separate thread,\n  returns the object store selected by the specified key. This is for retrieving\n  specific records from an object store.\n</p>\n<p>\n  If a value is successfully found, then a structured clone of it is created and set as\n  the <a href=\"/en-US/docs/Web/API/IDBRequest#attr_result\"><code>result</code></a> of the\n  request object.\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value.\n    To tell these situations apart, call the <code>openCursor()</code> method with the same key. That method provides a cursor if the record exists, and no cursor if it does not.\n  </p>\n</div><div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">get(key)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"key\"><code>key</code></dt>\n  <dd>\n    <p>The key or key range that identifies the record to be retrieved.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  An <a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this\n  operation are fired.\n</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a> of one of the following types:</p>\n<dl>\n  <dt id=\"transactioninactiveerror\"><code>TransactionInactiveError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if this <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>'s transaction is inactive.</p>\n  </dd>\n  <dt id=\"dataerror\"><code>DataError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if key or key range provided contains an invalid key.</p>\n  </dd>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a> has been deleted or removed.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In the following code snippet, we open a read/write transaction on our database and get\n  one specific record from object store using <code>get()</code> â€” a sample record with\n  the key \"Walk dog\". Once this data object is retrieved, you could then update it using\n  normal JavaScript, then put it back into the database using a\n  <a href=\"/en-US/docs/Web/API/IDBObjectStore/put\"><code>IDBObjectStore.put</code></a> operation. For a full working example, see our <a href=\"https://github.com/mdn/dom-examples/tree/main/to-do-notifications\" class=\"external\" rel=\" noopener\">To-do Notifications</a> app\n  (<a href=\"https://mdn.github.io/dom-examples/to-do-notifications/\" class=\"external\" rel=\" noopener\">view example live</a>).\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Let us open our database</span>\n<span class=\"token keyword\">const</span> DBOpenRequest <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nDBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Database initialized.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// store the result of opening the database in the db variable.</span>\n  <span class=\"token comment\">// This is used a lot below</span>\n  db <span class=\"token operator\">=</span> DBOpenRequest<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Run the getData() function to get the data from the database</span>\n  <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// open a read/write db transaction, ready for retrieving the data</span>\n  <span class=\"token keyword\">const</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// report on the success of the transaction completing, when everything is done</span>\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncomplete</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction completed.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li&gt;Transaction not opened due to error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>transaction<span class=\"token punctuation\">.</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/li&gt;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// create an object store on the transaction</span>\n  <span class=\"token keyword\">const</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Make a request to get a record by key from the object store</span>\n  <span class=\"token keyword\">const</span> objectStoreRequest <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Walk dog\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  objectStoreRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// report the success of our request</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Request successful.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> myRecord <span class=\"token operator\">=</span> objectStoreRequest<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/IndexedDB/#ref-for-dom-idbobjectstore-getâ‘ ","title":"Indexed Database API 3.0"}],"query":"api.IDBObjectStore.get"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IDBObjectStore.get","dataURL":"/en-US/docs/Web/API/IDBObjectStore/get/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Using IndexedDB</a></li>\n  <li>Starting transactions: <a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li>\n  <li>Using transactions: <a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li>\n  <li>Setting a range of keys: <a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li>\n  <li>Retrieving and making changes to your data: <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li>\n  <li>Using cursors: <a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li>\n  <li>Reference example: <a href=\"https://github.com/mdn/dom-examples/tree/main/to-do-notifications\" class=\"external\" rel=\" noopener\">To-do Notifications</a> (<a href=\"https://mdn.github.io/dom-examples/to-do-notifications/\" class=\"external\" rel=\" noopener\">View the example live</a>).</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The get() method of the IDBObjectStore\n  interface returns an IDBRequest object, and, in a separate thread,\n  returns the object store selected by the specified key. This is for retrieving\n  specific records from an object store.","popularity":0.0008,"modified":"2022-09-30T09:50:26.000Z","other_translations":[{"title":"IDBObjectStore.get()","locale":"fr","native":"FranÃ§ais"},{"title":"IDBObjectStore.get()","locale":"zh-CN","native":"ä¸­æ–‡ (ç®€ä½“)"}],"source":{"folder":"en-us/web/api/idbobjectstore/get","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/idbobjectstore/get/index.md","last_commit_url":"https://github.com/mdn/content/commit/d42b609444efb915ab46117f59985d67dda21eb6","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/IDBObjectStore","title":"IDBObjectStore"},{"uri":"/en-US/docs/Web/API/IDBObjectStore/get","title":"IDBObjectStore.get()"}],"pageTitle":"IDBObjectStore.get() - Web APIs | MDN","noIndexing":false}}