{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"AudioTrackList: change event","mdn_url":"/en-US/docs/Web/API/AudioTrackList/change_event","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/AudioTrackList\"><code>AudioTrackList</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioTrackList/removetrack_event\"><code>removetrack</code></a></li><li><a href=\"/en-US/docs/Web/API/AudioTrackList/length\"><code>length</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioTrackList/getTrackById\"><code>getTrackById()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/AudioTrackList/addtrack_event\"><code>addtrack</code></a></li><li><em><code>change</code></em></li><li><a href=\"/en-US/docs/Web/API/AudioTrackList/removetrack_event\"><code>removetrack</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <code>change</code> event is fired when an audio track is enabled or disabled, for example by changing the track's <a href=\"/en-US/docs/Web/API/AudioTrack/enabled\"><code>enabled</code></a> property.</p>\n<p>This event is not cancelable and does not bubble.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<p>Use the event name in methods like <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"addEventListener()\"><code>addEventListener()</code></a>, or set an event handler property.</p>\n<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">addEventListener(\"change\", (event) =&gt; { })\n\nonchange = (event) =&gt; { }\n</pre></div>"}},{"type":"prose","value":{"id":"event_type","title":"Event type","isH3":false,"content":"<p>A generic <a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a>.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Using <code>addEventListener()</code>:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> videoElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvideoElement<span class=\"token punctuation\">.</span>audioTracks<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>type<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' event fired</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// changing the value of `enabled` will trigger the `change` event</span>\n<span class=\"token keyword\">const</span> toggleTrackButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".toggle-track\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntoggleTrackButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> track <span class=\"token operator\">=</span> videoElement<span class=\"token punctuation\">.</span>audioTracks<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  track<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>track<span class=\"token punctuation\">.</span>enabled<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Using the <code>onchange</code> event handler property:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> videoElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvideoElement<span class=\"token punctuation\">.</span>audioTracks<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">'</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>type<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">' event fired</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// changing the value of `enabled` will trigger the `change` event</span>\n<span class=\"token keyword\">const</span> toggleTrackButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".toggle-track\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntoggleTrackButton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> track <span class=\"token operator\">=</span> videoElement<span class=\"token punctuation\">.</span>audioTracks<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  track<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>track<span class=\"token punctuation\">.</span>enabled<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/media.html#event-media-change","title":"HTML Standard"},{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/media.html#handler-tracklist-onchange","title":"HTML Standard"}],"query":"api.AudioTrackList.change_event"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.AudioTrackList.change_event","dataURL":"/en-US/docs/Web/API/AudioTrackList/change_event/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>Related events: <a href=\"/en-US/docs/Web/API/AudioTrackList/addtrack_event\"><code>addtrack</code></a>, <a href=\"/en-US/docs/Web/API/AudioTrackList/removetrack_event\"><code>removetrack</code></a></li>\n  <li>This event on <a href=\"/en-US/docs/Web/API/VideoTrackList\"><code>VideoTrackList</code></a> targets: <a href=\"/en-US/docs/Web/API/VideoTrackList/change_event\"><code>change</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/Media_Capture_and_Streams_API\">Media Streams API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/WebRTC_API\">WebRTC API</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Event type","id":"event_type"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The change event is fired when an audio track is enabled or disabled, for example by changing the track's enabled property.","popularity":0.0004,"modified":"2022-09-15T18:16:38.000Z","other_translations":[{"title":"AudioTrackList: change イベント","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/audiotracklist/change_event","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/audiotracklist/change_event/index.md","last_commit_url":"https://github.com/mdn/content/commit/418f9cf461de0c7845665c0c677ad0667740f52a","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/AudioTrackList","title":"AudioTrackList"},{"uri":"/en-US/docs/Web/API/AudioTrackList/change_event","title":"AudioTrackList: change event"}],"pageTitle":"AudioTrackList: change event - Web APIs | MDN","noIndexing":false}}