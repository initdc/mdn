{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"setTimeout()","mdn_url":"/en-US/docs/Web/API/setTimeout","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/HTML_DOM_API\">HTML DOM API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/setTimeout\"><code>SetTimeout</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for HTML DOM</summary><ol><li><a href=\"/en-US/docs/Web/API/BeforeUnloadEvent\"><code>BeforeUnloadEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMStringMap\"><code>DOMStringMap</code></a></li><li><a href=\"/en-US/docs/Web/API/ErrorEvent\"><code>ErrorEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLAnchorElement\"><code>HTMLAnchorElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLAreaElement\"><code>HTMLAreaElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLAudioElement\"><code>HTMLAudioElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLBRElement\"><code>HTMLBRElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLBaseElement\"><code>HTMLBaseElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLBodyElement\"><code>HTMLBodyElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLButtonElement\"><code>HTMLButtonElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLContentElement\"><code>HTMLContentElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDListElement\"><code>HTMLDListElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDataElement\"><code>HTMLDataElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDataListElement\"><code>HTMLDataListElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDialogElement\"><code>HTMLDialogElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDivElement\"><code>HTMLDivElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLDocument\"><code>HTMLDocument</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLEmbedElement\"><code>HTMLEmbedElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLFieldSetElement\"><code>HTMLFieldSetElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLFormControlsCollection\"><code>HTMLFormControlsCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLFormElement\"><code>HTMLFormElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLFrameSetElement\"><code>HTMLFrameSetElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLHRElement\"><code>HTMLHRElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLHeadElement\"><code>HTMLHeadElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLHeadingElement\"><code>HTMLHeadingElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLHtmlElement\"><code>HTMLHtmlElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLInputElement\"><code>HTMLInputElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLKeygenElement\"><code>HTMLKeygenElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLLIElement\"><code>HTMLLIElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLLabelElement\"><code>HTMLLabelElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLLegendElement\"><code>HTMLLegendElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLLinkElement\"><code>HTMLLinkElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMapElement\"><code>HTMLMapElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMediaElement\"><code>HTMLMediaElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMetaElement\"><code>HTMLMetaElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLMeterElement\"><code>HTMLMeterElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLModElement\"><code>HTMLModElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLOListElement\"><code>HTMLOListElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLObjectElement\"><code>HTMLObjectElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLOptGroupElement\"><code>HTMLOptGroupElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLOptionElement\"><code>HTMLOptionElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLOptionsCollection\"><code>HTMLOptionsCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLOutputElement\"><code>HTMLOutputElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLParagraphElement\"><code>HTMLParagraphElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLPictureElement\"><code>HTMLPictureElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLPreElement\"><code>HTMLPreElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLProgressElement\"><code>HTMLProgressElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLQuoteElement\"><code>HTMLQuoteElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLScriptElement\"><code>HTMLScriptElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLSelectElement\"><code>HTMLSelectElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLShadowElement\"><code>HTMLShadowElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLSourceElement\"><code>HTMLSourceElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLSpanElement\"><code>HTMLSpanElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLStyleElement\"><code>HTMLStyleElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableCaptionElement\"><code>HTMLTableCaptionElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableCellElement\"><code>HTMLTableCellElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableColElement\"><code>HTMLTableColElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableElement\"><code>HTMLTableElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableRowElement\"><code>HTMLTableRowElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTableSectionElement\"><code>HTMLTableSectionElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTemplateElement\"><code>HTMLTemplateElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTextAreaElement\"><code>HTMLTextAreaElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTimeElement\"><code>HTMLTimeElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTitleElement\"><code>HTMLTitleElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLTrackElement\"><code>HTMLTrackElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLUListElement\"><code>HTMLUListElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLUnknownElement\"><code>HTMLUnknownElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a></li><li><a href=\"/en-US/docs/Web/API/HashChangeEvent\"><code>HashChangeEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/History\"><code>History</code></a></li><li><a href=\"/en-US/docs/Web/API/ImageData\"><code>ImageData</code></a></li><li><a href=\"/en-US/docs/Web/API/Location\"><code>Location</code></a></li><li><a href=\"/en-US/docs/Web/API/MessageChannel\"><code>MessageChannel</code></a></li><li><a href=\"/en-US/docs/Web/API/MessageEvent\"><code>MessageEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator\"><code>Navigator</code></a></li><li><a href=\"/en-US/docs/Web/API/PageTransitionEvent\"><code>PageTransitionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/Plugin\"><code>Plugin</code></a></li><li><a href=\"/en-US/docs/Web/API/PluginArray\"><code>PluginArray</code></a></li><li><a href=\"/en-US/docs/Web/API/PopStateEvent\"><code>PopStateEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/PromiseRejectionEvent\"><code>PromiseRejectionEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/RadioNodeList\"><code>RadioNodeList</code></a></li><li><a href=\"/en-US/docs/Web/API/ValidityState\"><code>ValidityState</code></a></li><li><a href=\"/en-US/docs/Web/API/Window\"><code>Window</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The global <strong><code>setTimeout()</code></strong> method sets a timer which executes a function or specified\n  piece of code once the timer expires.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js-nolint notranslate\">setTimeout(code)\nsetTimeout(code, delay)\n\nsetTimeout(functionRef)\nsetTimeout(functionRef, delay)\nsetTimeout(functionRef, delay, param1)\nsetTimeout(functionRef, delay, param1, param2)\nsetTimeout(functionRef, delay, param1, param2, /* … ,*/ paramN)\n</pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"functionref\"><code>functionRef</code></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>function</code></a> to be executed after the timer expires.</p>\n  </dd>\n  <dt id=\"code\"><code>code</code></dt>\n  <dd>\n    <p>\n      An alternative syntax that allows you to include a string instead of a function,\n      which is compiled and executed when the timer expires. This syntax is <strong>not\nrecommended</strong> for the same reasons that make using\n      <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a> a security risk.\n    </p>\n  </dd>\n  <dt id=\"delay\"><code>delay</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      The time, in milliseconds that the timer should wait before\n      the specified function or code is executed. If this parameter is omitted, a value of 0\n      is used, meaning execute \"immediately\", or more accurately, the next event cycle.\n    </p>\n    <p>Note that in either case, the actual delay may be longer than intended; see <a href=\"#reasons_for_delays_longer_than_specified\">Reasons for delays longer than specified</a> below.</p>\n    <p>Also note that if the value isn't a number, implicit <a href=\"/en-US/docs/Glossary/Type_coercion\">type coercion</a> is silently done on the value to convert it to a number — which can lead to unexpected and surprising results; see <a href=\"#non-number_delay_values_are_silently_coerced_into_numbers\">Non-number delay values are silently coerced into numbers</a> for an example.</p>\n  </dd>\n  <dt id=\"param1\"><code>param1</code>, …, <code>paramN</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      Additional arguments which are passed through to the function specified by\n      <code>functionRef</code>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  The returned <code>timeoutID</code> is a positive integer value which\n  identifies the timer created by the call to <code>setTimeout()</code>. This value can be\n  passed to <a href=\"/en-US/docs/Web/API/clearTimeout\" title=\"clearTimeout()\"><code>clearTimeout()</code></a> to\n  cancel the timeout.\n</p>\n<p>\n  It is guaranteed that a <code>timeoutID</code> value will never be reused by a subsequent call to\n  <code>setTimeout()</code> or <code>setInterval()</code> on the same object (a window or\n  a worker). However, different objects use separate pools of IDs.\n</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>\n  Timeouts are cancelled using\n  <a href=\"/en-US/docs/Web/API/clearTimeout\"><code>clearTimeout()</code></a>.\n</p>\n<p>\n  To call a function repeatedly (e.g., every <em>N</em> milliseconds), consider using\n  <a href=\"/en-US/docs/Web/API/setInterval\"><code>setInterval()</code></a>.\n</p>"}},{"type":"prose","value":{"id":"non-number_delay_values_are_silently_coerced_into_numbers","title":"Non-number delay values are silently coerced into numbers","isH3":true,"content":"<p>If <code>setTimeout()</code> is called with <a href=\"#delay\"><em>delay</em></a> value that's not a number, implicit <a href=\"/en-US/docs/Glossary/Type_coercion\">type coercion</a> is silently done on the value to convert it to a number. For example, the following code incorrectly uses the string <code>\"1000\"</code> for the <em>delay</em> value, rather than the number <code>1000</code> – but it nevertheless works, because when the code runs, the string is coerced into the number <code>1000</code>, and so the code executes 1 second later.</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delayed for 1 second.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1000\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>But in many cases, the implicit type coercion can lead to unexpected and surprising results. For example, when the following code runs, the string <code>\"1 second\"</code> ultimately gets coerced into the number <code>0</code> — and so, the code executes immediately, with zero delay.</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delayed for 1 second.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1 second\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Therefore, don't use strings for the <em>delay</em> value but instead always use numbers:</p>\n<div class=\"code-example\"><pre class=\"brush: js example-good notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delayed for 1 second.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"working_with_asynchronous_functions","title":"Working with asynchronous functions","isH3":true,"content":"<p>\n  <code>setTimeout()</code> is an asynchronous function, meaning that the timer function will not pause execution of other functions in the functions stack.\n  In other words, you cannot use <code>setTimeout()</code> to create a \"pause\" before the next function in the function stack fires.\n</p>\n<p>See the following example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is the first message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is the second message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is the third message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Output:</span>\n\n  <span class=\"token comment\">// this is the third message</span>\n  <span class=\"token comment\">// this is the second message</span>\n  <span class=\"token comment\">// this is the first message</span>\n</code></pre></div>\n<p>\n  Notice that the first function does not create a 5-second \"pause\" before calling the second function. Instead, the first function is called, but waits 5 seconds to\n  execute. While the first function is waiting to execute, the second function is called, and a 3-second wait is applied to the second function before it executes. Since neither\n  the first nor the second function's timers have completed, the third function is called and completes its execution first. Then the second follows. Then finally the first function\n  is executed after its timer finally completes.\n</p>\n<p>To create a progression in which one function only fires after the completion of another function, see the documentation on <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promises</a>.</p>"}},{"type":"prose","value":{"id":"the_this_problem","title":"The \"this\" problem","isH3":true,"content":"<p>\n  When you pass a method to <code>setTimeout()</code>, it will be invoked with a <code>this</code> value that may differ from your\n  expectation. The general issue is explained in detail in the <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/this#as_an_object_method\">JavaScript reference</a>.\n</p>\n<p>\n  Code executed by <code>setTimeout()</code> is called from an execution context separate\n  from the function from which <code>setTimeout</code> was called. The usual rules for\n  setting the <code>this</code> keyword for the called function apply, and if you have not\n  set <code>this</code> in the call or with <code>bind</code>, it will default to\n  the <code>window</code> (or <code>global</code>) object. It will not be the same as the\n  <code>this</code> value for the function that called <code>setTimeout</code>.\n</p>\n<p>See the following example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">myMethod</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>sProperty<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\"</span>\nmyArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\"</span>\n</code></pre></div>\n<p>\n  The above works because when <code>myMethod</code> is called, its <code>this</code> is\n  set to <code>myArray</code> by the call, so within the function,\n  <code>this[sProperty]</code> is equivalent to <code>myArray[sProperty]</code>. However,\n  in the following:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"[object Window]\" after 1 second</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"undefined\" after 1.5 seconds</span>\n</code></pre></div>\n<p>\n  The <code>myArray.myMethod</code> function is passed to <code>setTimeout</code>, then\n  when it's called, its <code>this</code> is not set, so it defaults to the\n  <code>window</code> object.\n</p>\n<p>\n  There's also no option to pass a <code>thisArg</code> to\n  <code>setTimeout</code> as there is in Array methods such as <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>forEach()</code></a> and <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\"><code>reduce()</code></a>. As shown below,\n  using <code>call</code> to set <code>this</code> doesn't work either.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// error</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">,</span> myArray<span class=\"token punctuation\">.</span>myMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// same error</span>\n</code></pre></div>\n<h4 id=\"solutions\">Solutions</h4>\n<h5 id=\"use_a_wrapper_function\">Use a wrapper function</h5>\n<p>\n  A common way to solve the problem is to use a wrapper function that sets\n  <code>this</code> to the required value:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\" after 2 seconds</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\" after 2.5 seconds</span>\n</code></pre></div>\n<p>The wrapper function can be an arrow function:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\" after 2 seconds</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>myArray<span class=\"token punctuation\">.</span><span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\" after 2.5 seconds</span>\n</code></pre></div>\n<h5 id=\"use_bind\">Use bind()</h5>\n<p>Alternatively, you can use <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>bind()</code></a> to set the value of <code>this</code> for all calls to a given function:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> myBoundMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sProperty</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span>sProperty<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">myBoundMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"zero,one,two\" because 'this' is bound to myArray in the function</span>\n<span class=\"token function\">myBoundMethod</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\"</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myBoundMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// still prints \"zero,one,two\" after 1 second because of the binding</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>myBoundMethod<span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints \"one\" after 1.5 seconds</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"passing_string_literals","title":"Passing string literals","isH3":true,"content":"<p>\n  Passing a string instead of a function to <code>setTimeout()</code> has the same problems as using\n  <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a>.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js example-bad notranslate\"><code><span class=\"token comment\">// Don't do this</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"console.log('Hello World!');\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js example-good notranslate\"><code><span class=\"token comment\">// Do this instead</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>A string passed to <a href=\"/en-US/docs/Web/API/setTimeout\" aria-current=\"page\"><code>setTimeout()</code></a> is evaluated in the global context, so local symbols in the context where <a href=\"/en-US/docs/Web/API/setTimeout\" aria-current=\"page\"><code>setTimeout()</code></a> was called will not be available when the string is evaluated as code.</p>"}},{"type":"prose","value":{"id":"reasons_for_delays_longer_than_specified","title":"Reasons for delays longer than specified","isH3":true,"content":"<p>\n  There are a number of reasons why a timeout may take longer to fire than anticipated.\n  This section describes the most common reasons.\n</p>\n<h4 id=\"nested_timeouts\">Nested timeouts</h4>\n<p>\n  As specified in the <a href=\"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers\" class=\"external\" rel=\" noopener\">HTML standard</a>,\n  browsers will enforce a minimum timeout of 4 milliseconds once a nested call to <code>setTimeout</code> has been scheduled 5 times.\n</p>\n<p>\n  This can be seen in the following example, in which we nest a call to <code>setTimeout</code> with a delay of <code>0</code> milliseconds,\n  and log the delay each time the handler is called. The first four times, the delay is approximately 0 milliseconds, and after that it is\n  approximately 4 milliseconds:\n</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>run<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Run<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span>previous    this    actual delay<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>log<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> last <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> iterations <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">timeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// log the time of this call</span>\n  <span class=\"token function\">logline</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// if we are not finished, schedule the next call</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iterations<span class=\"token operator\">--</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// clear the log</span>\n  <span class=\"token keyword\">const</span> log <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span>lastElementChild<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">.</span>lastElementChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// initialize iteration count and the starting timestamp</span>\n  iterations <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  last <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// start timer</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">pad</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> number<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">logline</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">now</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// log the last timestamp, the new timestamp, and the difference</span>\n  <span class=\"token keyword\">const</span> newLine <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pre\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  newLine<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">pad</span><span class=\"token punctuation\">(</span>last<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">         </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">pad</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">          </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>now <span class=\"token operator\">-</span> last<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"log\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>newLine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  last <span class=\"token operator\">=</span> now<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#run\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> run<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div><iframe class=\"sample-code-frame\" title=\"Nested timeouts sample\" id=\"frame_nested_timeouts\" width=\"100\" height=\"420\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/setTimeout/_sample_.nested_timeouts.html\" loading=\"lazy\"></iframe>\n<h4 id=\"timeouts_in_inactive_tabs\">Timeouts in inactive tabs</h4>\n<p>\n  To reduce the load (and associated battery usage) from background tabs, browsers will enforce\n  a minimum timeout delay in inactive tabs. It may also be waived if a page is playing sound\n  using a Web Audio API <a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a>.\n</p>\n<p>The specifics of this are browser-dependent:</p>\n<ul>\n  <li>Firefox Desktop and Chrome both have a minimum timeout of 1 second for inactive tabs.</li>\n  <li>Firefox for Android has a minimum timeout of 15 minutes for inactive tabs and may unload them entirely.</li>\n  <li>Firefox does not throttle inactive tabs if the tab contains an <a href=\"/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a>.</li>\n</ul>\n<h4 id=\"throttling_of_tracking_scripts\">Throttling of tracking scripts</h4>\n<p>\n  Firefox enforces additional throttling for scripts that it recognizes as tracking scripts.\n  When running in the foreground, the throttling minimum delay is still 4ms. In background tabs, however,\n  the throttling minimum delay is 10,000 ms, or 10 seconds, which comes into effect 30 seconds after a\n  document has first loaded.\n</p>\n<p>\n  See <a href=\"https://wiki.mozilla.org/Security/Tracking_protection\" class=\"external\" rel=\" noopener\">Tracking Protection</a> for\n  more details.\n</p>\n<h4 id=\"late_timeouts\">Late timeouts</h4>\n<p>\n  The timeout can also fire later than expected if the page (or the OS/browser) is busy with other tasks.\n  One important case to note is that the function or code snippet cannot be executed until\n  the thread that called <code>setTimeout()</code> has terminated. For example:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo has been called'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After setTimeout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Will write to the console:</p>\n<pre class=\"notranslate\">After setTimeout\nfoo has been called\n</pre>\n<p>\n  This is because even though <code>setTimeout</code> was called with a delay of zero,\n  it's placed on a queue and scheduled to run at the next opportunity; not immediately.\n  Currently-executing code must complete before functions on the queue are executed, thus\n  the resulting execution order may not be as expected.\n</p>\n<h4 id=\"deferral_of_timeouts_during_pageload\">Deferral of timeouts during pageload</h4>\n<p>\n  Firefox will defer firing <code>setTimeout()</code> timers\n  while the current tab is loading. Firing is deferred until the main thread is deemed\n  idle (similar to <a href=\"/en-US/docs/Web/API/Window/requestIdleCallback\">window.requestIdleCallback()</a>),\n  or until the load event is fired.\n</p>"}},{"type":"prose","value":{"id":"webextension_background_pages_and_timers","title":"WebExtension background pages and timers","isH3":true,"content":"<p>\n  In <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions\">WebExtensions</a>, <code>setTimeout()</code>\n  does not work reliably. Extension authors should use the <a href=\"/en-US/docs/Mozilla/Add-ons/WebExtensions/API/alarms\"><code>alarms</code></a>\n  API instead.\n</p>"}},{"type":"prose","value":{"id":"maximum_delay_value","title":"Maximum delay value","isH3":true,"content":"<p>\n  Browsers including Internet Explorer, Chrome, Safari, and Firefox store the delay as a\n  32-bit signed integer internally. This causes an integer overflow when using delays\n  larger than 2,147,483,647 ms (about 24.8 days), resulting in the timeout being executed\n  immediately.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"setting_and_clearing_timeouts","title":"Setting and clearing timeouts","isH3":true,"content":"<p>\n  The following example sets up two simple buttons in a web page and hooks them to the\n  <code>setTimeout()</code> and <code>clearTimeout()</code> routines. Pressing the first\n  button will set a timeout which shows a message after two seconds and stores the\n  timeout id for use by <code>clearTimeout()</code>. You may optionally cancel this\n  timeout by pressing on the second button.\n</p>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">delayedMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Show a message after two seconds<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">clearMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>Cancel message before it happens<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>output<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> timeoutID<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">outputContent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#output'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> outputContent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">delayedMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  timeoutID <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>setOutput<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'That was really slow!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">clearMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeoutID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: css hidden notranslate\"><code><span class=\"token selector\">#output</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0.5rem 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"result\">Result</h4><iframe class=\"sample-code-frame\" title=\"Setting and clearing timeouts sample\" id=\"frame_setting_and_clearing_timeouts\" src=\"https://yari-demos.prod.mdn.mozit.cloud/en-US/docs/Web/API/setTimeout/_sample_.setting_and_clearing_timeouts.html\" loading=\"lazy\"></iframe>\n<p>See also the <a href=\"/en-US/docs/Web/API/clearTimeout#example\"><code>clearTimeout()</code> example</a>.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout-dev","title":"HTML Standard"}],"query":"api.setTimeout"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.setTimeout","dataURL":"/en-US/docs/Web/API/setTimeout/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#settimeout-and-setinterval\" class=\"external\" rel=\" noopener\">Polyfill of <code>setTimeout</code> which allows passing arguments to the callback in <code>core-js</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/clearTimeout\"><code>clearTimeout</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/setInterval\"><code>setInterval()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/window/requestAnimationFrame\"><code>window.requestAnimationFrame</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/queueMicrotask\"><code>queueMicrotask()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Description","id":"description"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The global setTimeout() method sets a timer which executes a function or specified\n  piece of code once the timer expires.","popularity":0.0614,"modified":"2022-09-13T07:59:37.000Z","other_translations":[{"title":"WindowOrWorkerGlobalScope.setTimeout","locale":"es","native":"Español"},{"title":"setTimeout()","locale":"fr","native":"Français"},{"title":"setTimeout()","locale":"ja","native":"日本語"},{"title":"setTimeout()","locale":"ko","native":"한국어"},{"title":"WindowTimers.setTimeout()","locale":"ru","native":"Русский"},{"title":"window.setTimeout","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/settimeout","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/settimeout/index.md","last_commit_url":"https://github.com/mdn/content/commit/c09b8e9dd0022a33cf84355704ca281d6a5f29f5","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/setTimeout","title":"setTimeout()"}],"pageTitle":"setTimeout() - Web APIs | MDN","noIndexing":false}}