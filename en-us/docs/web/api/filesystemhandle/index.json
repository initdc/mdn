{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"FileSystemHandle","mdn_url":"/en-US/docs/Web/API/FileSystemHandle","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/File_System_Access_API\">File System Access API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/FileSystemHandle\"><code>FileSystemHandle</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/FileSystemHandle/kind\"><code>kind</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemHandle/name\"><code>name</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/FileSystemHandle/isSameEntry\"><code>isSameEntry()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/FileSystemHandle/queryPermission\"><code>queryPermission()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/FileSystemHandle/requestPermission\"><code>requestPermission()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for File System Access API</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransferItem/getAsFileSystemHandle\"><code>DataTransferItem.getAsFileSystemHandle()</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a></li><li><a href=\"/en-US/docs/Web/API/FileSystemWritableFileStream\"><code>FileSystemWritableFileStream</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/showDirectoryPicker\"><code>window.showDirectoryPicker()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/showOpenFilePicker\"><code>window.showOpenFilePicker()</code></a></li><li><a href=\"/en-US/docs/Web/API/Window/showSaveFilePicker\"><code>window.showSaveFilePicker()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard secure\" id=\"sect1\"><p><strong>Secure context:</strong> This feature is available only in <a href=\"/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>FileSystemHandle</code></strong> interface of the <a href=\"/en-US/docs/Web/API/File_System_Access_API\"><code>File System Access API</code></a> is an object which represents a file or directory entry. Multiple handles can represent the same entry. For the most part you do not work with <code>FileSystemHandle</code> directly but rather its child interfaces <a href=\"/en-US/docs/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a> and <a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a>.</p>"}},{"type":"prose","value":{"id":"interfaces_based_on_filesystemhandle","title":"Interfaces based on FileSystemHandle","isH3":false,"content":"<p>Below is a list of interfaces based on the FileSystemHandle interface.</p>\n<dl>\n  <dt id=\"filesystemfilehandle\"><a href=\"/en-US/docs/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a></dt>\n  <dd>\n    <p>Represents a handle to a file entry.</p>\n  </dd>\n  <dt id=\"filesystemdirectoryhandle\"><a href=\"/en-US/docs/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a></dt>\n  <dd>\n    <p>Provides a handle to a directory entry.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"kind\"><a href=\"/en-US/docs/Web/API/FileSystemHandle/kind\" title=\"kind\"><code>kind</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the type of entry. This is <code>'file'</code> if the associated entry is a file or <code>'directory'</code>.</p>\n  </dd>\n  <dt id=\"name\"><a href=\"/en-US/docs/Web/API/FileSystemHandle/name\" title=\"name\"><code>name</code></a> <span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the name of the associated entry.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"issameentry\"><a href=\"/en-US/docs/Web/API/FileSystemHandle/isSameEntry\" title=\"isSameEntry()\"><code>isSameEntry()</code></a></dt>\n  <dd>\n    <p>Compares two <a href=\"/en-US/docs/Web/API/FileSystemHandle\" title=\"handles\" aria-current=\"page\"><code>handles</code></a> to see if the associated entries (either a file or directory) match.</p>\n  </dd>\n  <dt id=\"querypermission\"><a href=\"/en-US/docs/Web/API/FileSystemHandle/queryPermission\" title=\"queryPermission()\"><code>queryPermission()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Queries the current permission state of the current handle.</p>\n  </dd>\n  <dt id=\"requestpermission\"><a href=\"/en-US/docs/Web/API/FileSystemHandle/requestPermission\" title=\"requestPermission()\"><code>requestPermission()</code></a> <svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg></dt>\n  <dd>\n    <p>Requests read or readwrite permissions for the file handle.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"checking_type","title":"Checking Type","isH3":true,"content":"<p>The below code allows the user to choose a file from the file picker and then tests to see whether the handle returned is a file or directory</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// store a reference to our file handle</span>\n<span class=\"token keyword\">let</span> fileHandle<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// open file picker</span>\n  <span class=\"token punctuation\">[</span>fileHandle<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">showOpenFilePicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileHandle<span class=\"token punctuation\">.</span>kind <span class=\"token operator\">===</span> <span class=\"token string\">'file'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// run file code</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileHandle<span class=\"token punctuation\">.</span>kind <span class=\"token operator\">===</span> <span class=\"token string\">'directory'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// run directory code</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"queryrequest_permissions","title":"Query/Request Permissions","isH3":true,"content":"<p>The following asynchronous function returns true if user has granted read or readwrite permissions to the file handle. Permission is requested if not.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// fileHandle is a FileSystemFileHandle</span>\n<span class=\"token comment\">// withWrite is a boolean set to true if write</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">verifyPermission</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileHandle<span class=\"token punctuation\">,</span> withWrite</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> opts <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>withWrite<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    opts<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> <span class=\"token string\">'readwrite'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Check if we already have permission, if so, return true.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> fileHandle<span class=\"token punctuation\">.</span><span class=\"token function\">queryPermission</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Request permission to the file, if the user grants permission, return true.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> fileHandle<span class=\"token punctuation\">.</span><span class=\"token function\">requestPermission</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'granted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// The user did not grant permission, return false.</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"comparing_entries","title":"Comparing Entries","isH3":true,"content":"<p>The following function compares a single entry with an array of entries, and returns a new array with any matching entries removed.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">removeMatches</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileEntry<span class=\"token punctuation\">,</span> entriesArr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">const</span> newArr <span class=\"token operator\">=</span> entriesArr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token operator\">!</span>fileEntry<span class=\"token punctuation\">.</span><span class=\"token function\">isSameEntry</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> newArr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/file-system-access/#api-filesystemhandle","title":"File System Access"}],"query":"api.FileSystemHandle"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.FileSystemHandle","dataURL":"/en-US/docs/Web/API/FileSystemHandle/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/File_System_Access_API\">File System Access API</a></li>\n  <li><a href=\"https://web.dev/file-system-access/\" class=\"external\" rel=\" noopener\">The File System Access API: simplifying access to local files</a></li>\n</ul>"}}],"toc":[{"text":"Interfaces based on FileSystemHandle","id":"interfaces_based_on_filesystemhandle"},{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The FileSystemHandle interface of the File System Access API is an object which represents a file or directory entry. Multiple handles can represent the same entry. For the most part you do not work with FileSystemHandle directly but rather its child interfaces FileSystemFileHandle and FileSystemDirectoryHandle.","popularity":0.0008,"modified":"2022-09-09T05:10:34.000Z","source":{"folder":"en-us/web/api/filesystemhandle","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/filesystemhandle/index.md","last_commit_url":"https://github.com/mdn/content/commit/1511e914c6b1ce6f88056bfefd48a6aa585cebce","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/FileSystemHandle","title":"FileSystemHandle"}],"pageTitle":"FileSystemHandle - Web APIs | MDN","noIndexing":false}}